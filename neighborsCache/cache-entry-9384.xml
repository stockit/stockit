<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0D4ZHZW5lcmFsIE1vdG9ycyBDRU8gTWFyeSBCYXJyYSBkaWRudCBzcXVpcm0gb24gdGhlIGhvdCBzZWF0IE9uIHRoZSBqb2IgbGVzcyB0aGFuIHRocmVlIG1vbnRocyBzaGUgY2FsbWx5IGFuc3dlcmVkIG9yIGRlZmxlY3RlZCB0b3VnaCBxdWVzdGlvbnMgZnJvbSBhIGNvbmdyZXNzaW9uYWwgY29tbWl0dGVlIGFib3V0IGZhdWx0eSBwYXJ0cyByZXNwb25zaWJsZSBmb3IgYXQgbGVhc3QgMTMgZGVhdGhzIGFuZCB0aGUgcmVjYWxsIG9mIDI2IG1pbGxpb24gY2FycyBCYXJyYSBmcnVzdHJhdGVkIGxhd21ha2VycyBieSBmZW5kaW5nIG9mZiBxdWVzdGlvbnMgc2F5aW5nIHNoZSB3YXMgYXdhaXRpbmcgdGhlIHJlc3VsdHMgb2YgYW4gaW50ZXJuYWwgR00gaW52ZXN0aWdhdGlvbiBTaGUgZGlkbnQga25vdyB3aHkgR00gd2FpdGVkIG1vcmUgdGhhbiBhIGRlY2FkZSB0byByZWNhbGwgY2FycyBpdCBrbmV3IGhhZCBkZWZlY3RpdmUgaWduaXRpb24gc3dpdGNoZXMgU2hlIGRpZG50IGtub3cgd2hvIHdhcyByZXNwb25zaWJsZSBmb3IgdGhlIGRlY2lzaW9ucyB0aGF0IGRlbGF5ZWQgdGhlIHJlY2FsbCBCdXQgZXhwZXJ0cyBvbiBjb3Jwb3JhdGUgZGFtYWdlIGNvbnRyb2wgc2FpZCBzaGUgZGlkbnQgaGF2ZSBtdWNoIGNob2ljZSBhbmQgZ2F2ZSBoZXIgaGlnaCBtYXJrcyBmb3IgaGVyIHBlcmZvcm1hbmNlIFR1ZXNkYXkgb24gdGhlIGhvdCBzZWF0IEVkaXRvcnMgTm90ZSAgUmV0aXJlIDEwIFllYXJzIEVhcmxpZXIgV2l0aCBUaGVzZSA0IFN0b2NrcyAKCkJhcnJhcyByb3BlYWRvcGUgaXMgdGhlIGJlc3Qgb2YgR01zIGJhZCBvcHRpb25zIHRvZGF5IHNhaWQgV2FzaGluZ3RvbiBjcmlzaXMgbWFuYWdlbWVudCBjb25zdWx0YW50IEVyaWMgRGVuemVuaGFsbCBUaGVyZSBpc250IGEgY29ycG9yYXRlIGxhd3llciBpbiB0aGUgY291bnRyeSB0aGF0cyBnb2luZyB0byBhbGxvdyBoZXIgdG8gZW5nYWdlIGluIGZyZWVsYW5jZSBzcGVjdWxhdGlvbiBhYm91dCB0aGluZ3Mgc2hlIGRvZXNudCBrbm93IHlldCAgTm8gdGhhdHMgbm90IHNhdGlzZnlpbmcgdG8gdGhlIHB1YmxpYyBhbmQgbWVkaWEgYnV0IHRoZSBhbHRlcm5hdGl2ZSBpcyBtdWNoIHdvcnNlIEludmVzdG9ycyBzaHJ1Z2dlZCBHZW5lcmFsIE1vdG9ycyBDbyBzdG9jayBkb3duIG1vcmUgdGhhbiA3IHBlcmNlbnQgc2luY2UgTWFyY2ggMTEgYmFyZWx5IGJ1ZGdlZCBUdWVzZGF5IHNsaXBwaW5nIDggY2VudHMgdG8gMzQzNCBCYXJyYSBhcG9sb2dpemVkIGZvciBHTXMgc2xvd25lc3MgaW4gd2FybmluZyBjdXN0b21lcnMgYWJvdXQgdGhlIHByb2JsZW1zIGFuZCBwcm9taXNlZCB0byBjaGFuZ2UgdGhlIGF1dG9tYWtlcnMgY3VsdHVyZSB0byBwdXQgYSBuZXcgZW1waGFzaXMgb24gc2FmZXR5IAoKQmFycmEgaGVsZCBoZXIgZ3JvdW5kIGNsYWltaW5nIHRoYXQgdG9kYXlzIEdlbmVyYWwgTW90b3JzIGlzIGEgZGlmZmVyZW50IGNvbXBhbnkgZnJvbSB0aGUgb25lIHdob3NlIGNvcnBvcmF0ZSBjdWx0dXJlIGFsbG93ZWQgdGhpcyBpc3N1ZSB0byBmZXN0ZXIgZm9yIGEgZGVjYWRlIHNhaWQgSmFjayBOZXJhZCBleGVjdXRpdmUgZWRpdG9yaWFsIGRpcmVjdG9yIEtlbGxleSBCbHVlIEJvb2sgS2VuIGFuZCBKYXluZSBSaW1lciB3aG9zZSBkYXVnaHRlciBkaWVkIGluIGEgMjAwNiBhY2NpZGVudCBhZnRlciBhIGZhdWx0eSBzd2l0Y2ggcHJldmVudGVkIGFpcmJhZ3MgZnJvbSBkZXBsb3lpbmcgZm91bmQgQmFycmFzIHRlc3RpbW9ueSBpbmNvbXBsZXRlIEZvciBCYXJyYSBub3QgdG8gaGF2ZSBhbnkgYW5zd2VycyBhZnRlciBhYm91dCB0aHJlZSBtb250aHMgYXMgQ0VPIHdhcyB1bnNhdGlzZmFjdG9yeSBLZW4gUmltZXIgc2FpZCBpbiB0aGUgaGFsbHdheSBvdXRzaWRlIHRoZSBoZWFyaW5nIHJvb20gSXQgc3VycHJpc2VkIG1lIGhvdyB1bnByb2Zlc3Npb25hbCB0aGF0IHdhcyBoZSBzYWlkIENvbmdyZXNzaW9uYWwgYXBwZWFyYW5jZXMgY2FuIGJlIGEgbWluZWZpZWxkIGZvciBDRU9zIEluIDIwMDggYXV0b21ha2VyIENFT1MgZHJldyBwdWJsaWMgc2Nvcm4gZm9yIGZseWluZyBjb3Jwb3JhdGUgamV0cyB0byBXYXNoaW5ndG9uIHRvIGFzayBmb3IgYSBnb3Zlcm5tZW50IGJhaWxvdXQgQW5kIFdhbGwgU3RyZWV0IENFT3Mgd2VyZSBiYXR0ZXJlZCBpbiBoZWFyaW5ncyBhZnRlciB0aGUgZmluYW5jaWFsIGNyaXNpcyBCdXQgc29tZSBsYXdtYWtlcnMgYXBwZWFyZWQgc29tZXdoYXQgbW9yZSBzeW1wYXRoZXRpYyB0byBCYXJyYSB3aG8gd2FzIHRocnVzdCBpbnRvIGEgY3Jpc2lzIGFmdGVyIGJlY29taW5nIHRoZSBmaXJzdCB3b21hbiBDRU8gb2YgYSBtYWpvciBhdXRvbWFrZXIgaW4gSmFudWFyeSBJbiAzMyB5ZWFycyBhdCBHTSBCYXJyYSB3b3JrZWQgaW4gZW5naW5lZXJpbmcgY29tbXVuaWNhdGlvbnMgYW5kIGh1bWFuIHJlc291cmNlcyBTaGVzIGEgc2Vjb25kZ2VuZXJhdGlvbiBHTSBlbXBsb3llZSBIZXIgZmF0aGVyIHdhcyBhIEdNIGRpZSBtYWtlciBmb3IgZm91ciBkZWNhZGVzIE5vdCBldmVyeXRoaW5nIHdlbnQgc21vb3RobHkgZm9yIHRoZSBuZXcgQ0VPIFR1ZXNkYXkgd2hvIGZsZXcgY29tbWVyY2lhbCB0byB0aGUgaGVhcmluZyBCYXJyYSBzdHJ1Z2dsZWQgdG8gZXhwbGFpbiBob3cgR00gY291bGQgY29udGludWUgdG8gdXNlIHBhcnRzIHRoYXQgZGlkbnQgbWVldCBpdHMgb3duIHNwZWNpZmljYXRpb25zIFdoZW4gc2hlIHRyaWVkIHRvIGRyYXcgYSBkaXN0aW5jdGlvbiBiZXR3ZWVuIHBhcnRzIHRoYXQgZGlkbnQgbWVldCBzcGVjcyBhbmQgdGhvc2UgdGhhdCB3ZXJlIGRlZmVjdGl2ZSBhbmQgZGFuZ2Vyb3VzIFJlcCBKb2UgQmFydG9uIFJUZXhhcyBzYWlkIFdoYXQgeW91IGp1c3QgYW5zd2VyZWQgaXMgZ29iYmxlZHlnb29rIERhbiBIaWxsIHByZXNpZGVudCBvZiBhIFdhc2hpbmd0b24gZmlybSB0aGF0IGFkdmlzZXMgY2xpZW50cyBvbiBwdWJsaWMgcmVsYXRpb25zIGFuZCBjcmlzaXMgbWFuYWdlbWVudCBzYWlkIEJhcnJhIGVycmVkIGJ5IGNvbnRyYXN0aW5nICB0b2RheXMgc2FmZXR5Y29uc2Npb3VzIEdNIHdpdGggdGhlIGJlbHR0aWdodGVuaW5nIEdNIHRoYXQgc291Z2h0IGJhbmtydXB0Y3kgcHJvdGVjdGlvbiBpbiAyMDA5IAoKQmFycmEgdGhyZXcgdGhlIG9sZCBHTSB1bmRlciB0aGUgYnVzIGJ5IHNheWluZyB0aGF0IHRoZSBwcmV2aW91cyBjb21wYW55IHRoYXQgc2hlIGdyZXcgdXAgaW4gYW5kIGhlbGQgZXhlY3V0aXZlIHBvc2l0aW9ucyBpbiB3YXMgYmFzZWQgb24gYSBjb3N0IGN1bHR1cmUgYXMgb3Bwb3NlZCB0byBhIGN1c3RvbWVyIGZpcnN0IGN1bHR1cmUgSGlsbCBzYWlkIG5vdGluZyB0aGF0IHRoZSBpbXBsaWNpdCBjcml0aWNpc20gb2YgaGVyIHByZWRlY2Vzc29ycyBjb3VsZCBiZSB1c2VkIGFzIGFtbXVuaXRpb24gaW4gbGF3c3VpdHMgYWdhaW5zdCBHTSBCdXQgc29tZSBjb3Jwb3JhdGUgaW1hZ2UgZXhwZXJ0cyBwcmFpc2VkIEJhcnJhIGZvciBzZWl6aW5nIHRoZSBpbml0aWF0aXZlIGJ5IGFubm91bmNpbmcgdGhhdCBHTSBoYXMgaGlyZWQgS2VubmV0aCBGZWluYmVyZyAgd2hvIGhhbmRsZWQgdGhlIGZ1bmQgZm9yIHRoZSB2aWN0aW1zIG9mIDkxMSB0aGUgQm9zdG9uIE1hcmF0aG9uIGJvbWJpbmcgYW5kIHRoZSBCUCBvaWwgc3BpbGwgIHRvIGV4cGxvcmUgd2F5cyB0byBjb21wZW5zYXRlIHZpY3RpbXMgb2YgYWNjaWRlbnRzIGluIHRoZSBHTSBjYXJzIEJhcnJhIGRpZG50IGNvbW1pdCBHTSB0byBzZXR0aW5nIHVwIHN1Y2ggYSBmdW5kIFNoZSBkaWRudCBtYWtlIG1pc3Rha2VzIHNheXMgR2VuZSBHcmFib3dza2kgYSBjcmlzaXMgbWFuYWdlbWVudCBjb25zdWx0YW50IHdobyBoZWxwcyBleGVjdXRpdmVzIHByZXBhcmUgZm9yIGNvbmdyZXNzaW9uYWwgdGVzdGltb255IFRoYXRzIGhvdyB5b3Ugc3Vydml2ZSBhIGhlYXJpbmcKCkVkaXRvcnMgTm90ZSAgUmV0aXJlIDEwIFllYXJzIEVhcmxpZXIgV2l0aCBUaGVzZSA0IFN0b2Nrc3QABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0xMi0wM1QwMDowMDowMFogVE8gMjAxMy0xMi0wM1Q1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTIyMzM3</field><field name="title" class="java.lang.String">rO0ABXQAPEdNIFBsYW5zIEdyYWR1YWwgUHVsbG91dCBvZiBTb3V0aCBLb3JlYSBhcyBMYWJvciBDb3N0cyBTdXJnZQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUBw5SSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGY1MzllYjAyMTY5ZTYwYmY=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0NPU1QuTVg=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUB2C4CAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW3AAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW3AAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW3AAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW3AAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW1czMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDJjMWZmMDYxMWU4ZDRlODA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEQyAAAQ==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDYzNjY=</field><field name="title" class="java.lang.String">rO0ABXQAPEdNIFBsYW5zIEdyYWR1YWwgUHVsbG91dCBvZiBTb3V0aCBLb3JlYSBhcyBMYWJvciBDb3N0cyBTdXJnZQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUBw5SSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGY1MzllYjAyMTY5ZTYwYmY=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0NPU1QuTVg=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUB2C4CAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW3AAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW3AAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW3AAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW3AAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW1czMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGNkZWY0MjFlZWI4NWFmM2Y=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEv5AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE1NTI1</field><field name="title" class="java.lang.String">rO0ABXQAL0dNIFNheXMgU3VwZXJjb21wdXRlcnMgdG8gS2VlcCBSZWNhbGxzIGluIENoZWNr</field><field name="content" class="java.lang.String">rO0ABXQTwkdlbmVyYWwgTW90b3JzIENvLiBzYXlzIGEgbmV3IHN1cGVyY29tcHV0aW5nIGRhdGEgY2VudGVyIGFuZCBhIGZsZWRnbGluZyBzaGlmdCB0byBicmluZyBzb2Z0d2FyZSBkZXZlbG9wbWVudCBpbi1ob3VzZSBzaG91bGQgaGVscCBpdCBsaW1pdCB0aGUgc2l6ZSBvZiBmdXR1cmUgc2FmZXR5IHJlY2FsbHMuIFRoZSBEZXRyb2l0IGF1dG9tYWtlciwgd2hpY2ggZm9ybWFsbHkgb3BlbmVkIHRoZSBnaWFudCBkYXRhIHN0b3JhZ2UgY2VudGVyIGluIHN1YnVyYmFuIFdhcnJlbiwgTWljaC4sIG9uIE1vbmRheSwgc2FpZCB0aGUgY2hhbmdlcyBhcmUgZXhhbXBsZXMgb2YgaG93IGl0IGlzIG1vdmluZyBmYXN0ZXIgdG8gY3V0IGNvc3RzIGFuZCBzZXJ2ZSBpdHMgY3VzdG9tZXJzIGJldHRlciBieSBicmluZ2luZyBtb3JlIGNvbXB1dGVyIHRlY2hub2xvZ3kgaW5zaWRlIHRoZSBjb21wYW55LiBJbiB0aGUgcGFzdCwgR00ncyByZWdpb25hbCBvcGVyYXRpb25zIHRyYWNrZWQgcHJvYmxlbXMgYnkgdGhlbXNlbHZlcywgc29tZXRpbWVzIHdpdGhvdXQgY29tbXVuaWNhdGluZyB3aXRoIG90aGVyIHJlZ2lvbnMsIGV2ZW4gdGhvdWdoIG1hbnkgb2YgaXRzIGNhcnMgYXJlIG5vdyBzb2xkIHdvcmxkd2lkZS4gRW5naW5lZXJzIGluIG9uZSByZWdpb24gd291bGQgY2hlY2sgYSBwcm9ibGVtIHBhcnQsIGJ1dCBpdCB3YXNuJ3Qgc3R1ZGllZCB3b3JsZHdpZGUsIGF0IGxlYXN0IG5vdCBhdCB0aGUgZWFybHkgc3RhZ2VzLiBOb3csIHdpdGggbmV3IHNvZnR3YXJlIGRldmVsb3BlZCBieSBHTSdzIHNvLWNhbGxlZCBpbm5vdmF0aW9uIGNlbnRlcnMgYW5kIHRoZSBkYXRhIHN0b3JhZ2UsIHByb2JsZW1zIGFyZSBzcG90dGVkIHF1aWNrbHkgd2hlbiB0aGV5IGNyb3AgdXAgYWNyb3NzIHRoZSBnbG9iZSwgYW5kIHRoZXkncmUgYXNzaWduZWQgdG8gdGhlIHJpZ2h0IGVuZ2luZWVyIHdobyBjYW4gd29yayB3aXRoIHBhcnRzIG1ha2VycyB0byBmaXggdGhlIHByb2JsZW0gZmFzdGVyLCBzYWlkIFJhbmR5IE1vdHQsIHRoZSBjb21wYW55J3MgY2hpZWYgaW5mb3JtYXRpb24gb2ZmaWNlci4gIllvdSdkIGhvcGUgdGhhdCBpZiB0aGVyZSBpcyBhIHByb2JsZW0gd2l0aCBhIHNldCBvZiBjb21wb25lbnRzLCB0aGF0IHlvdSB1bmRlcnN0YW5kIHdoaWNoIGNvbXBvbmVudHMgd2VyZSBwb3RlbnRpYWxseSBzdXNjZXB0aWJsZSBhbmQgeW91IHdvdWxkIGV4cGVjdCB5b3VyIHJlY2FsbHMgdG8gYmUgc21hbGxlciwiIE1vdHQgc2FpZC4gIllvdSBpZGVudGlmeSBpdCBlYXJsaWVyIGFuZCB5b3UgY2VydGFpbmx5IGxpbWl0IGl0IHRvIG9ubHkgdGhlIG9uZXMgYWZmZWN0ZWQgYnkgd2hhdGV2ZXIgdGhlIHByb2JsZW0gd2FzLiIgR00sIHdoaWNoIHR5cGljYWxseSBzZWxscyBtb3JlIHRoYW4gOSBtaWxsaW9uIHZlaGljbGVzIHdvcmxkd2lkZSBlYWNoIHllYXIsIG1ha2VzIGNhcnMgYW5kIHRydWNrcyBpbiAzMCBkaWZmZXJlbnQgY291bnRyaWVzLiBNYW55IG9mIGl0cyBwYXJ0cyBhcmUgY29tbW9uIHdvcmxkd2lkZSwgc28gaWYgdGhlcmUgaXMgYSByZWNhbGwsIGl0IGNhbiBiZSBsYXJnZSBhbmQgY29zdGx5LiBXaGVuIHByb2JsZW1zIGFyZSBzcG90dGVkIGFuZCBmaXhlZCBlYXJseSwgdGhlIHNpemUgYW5kIGNvc3QgY2FuIGJlIGhlbGQgZG93biwgTW90dCBzYWlkLiBHTSBhbHNvIHNhaWQgTW9uZGF5IHRoYXQgaXQgd2lsbCBidWlsZCBhIGR1cGxpY2F0ZSBkYXRhIHN0b3JhZ2UgY2VudGVyIGFib3V0IDQwIG1pbGVzIGZyb20gV2FycmVuIGF0IGl0cyBwcm92aW5nIGdyb3VuZHMgaW4gTWlsZm9yZCwgTWljaC4gRHVyaW5nIHRoZSBuZXh0IHR3byB5ZWFycywgdGhlIGNvbXBhbnkgd2lsbCBjbG9zZSAyMyBkYXRhIGNlbnRlcnMgd29ybGR3aWRlIGFuZCBjb25zb2xpZGF0ZSB0aGVtIGludG8gdGhlIHR3byBuZXcgZmFjaWxpdGllcy4gR00gc2F5cyBkYXRhIGNlbnRlcnMgYXQgR29vZ2xlIGFuZCBGYWNlYm9vayB3ZXJlIGJlbmNobWFya2VkIHRvIGRyYXcgdXAgcGxhbnMgZm9yIHRoZSBzdGF0ZS1vZi10aGUgYXJ0IGZhY2lsaXRpZXMuIFRoZSBXYXJyZW4gQ2VudGVyIGNvc3QgJDEzMCBtaWxsaW9uIHRvIGJ1aWxkLCB3aGlsZSB0aGUgTWlsZm9yZCBjZW50ZXIgd2lsbCBjb3N0ICQxMDAgbWlsbGlvbi4gR00gd2lsbCBzcGVuZCBhbm90aGVyICQxNTggbWlsbGlvbiBvbiBlYWNoIGNlbnRlciBmb3IgZXF1aXBtZW50LiBJdCdzIGFsbCBwYXJ0IG9mIGEgcHVzaCBsZWQgYnkgQ0VPIGFuZCBDaGFpcm1hbiBEYW4gQWtlcnNvbiwgYSBmb3JtZXIgdGVsZWNvbW11bmljYXRpb25zIGV4ZWN1dGl2ZSwgd2hvIGJlbGlldmVzIGl0J3MgaW1wb3J0YW50IGZvciBjb21wYW5pZXMgdG8gaGF2ZSB0aGVpciBvd24gaW5mb3JtYXRpb24gdGVjaG5vbG9neSByYXRoZXIgdGhhbiBvdXRzb3VyY2UgaXQgdG8gb3RoZXIgY29tcGFuaWVzLiBHTSBoYWQgb3V0c291cmNlZCA4NSBwZXJjZW50IG9mIGl0cyBzb2Z0d2FyZSBkZXZlbG9wbWVudCBhbmQgY29tcHV0ZXIgdGVjaG5vbG9neS4gQnkgY29uc29saWRhdGluZyB0aGUgZGF0YSBjZW50ZXJzIGFuZCBoaXJpbmcgYWJvdXQgOSwwMDAgcGVvcGxlIHRvIHN0YWZmIGZvdXIgVS5TLiAiaW5ub3ZhdGlvbiBjZW50ZXJzLCIgdGhlIGNvbXBhbnkgaG9wZXMgdG8gYnJpbmcgOTAgcGVyY2VudCBvZiB0aGUgd29yayBpbi1ob3VzZSB3aXRoaW4gZml2ZSB5ZWFycywgTW90dCBzYWlkLiBDb21wZXRpdG9ycywgR00gc2FpZCwgYWxyZWFkeSBoYXZlIGFib3V0IDMwIHBlcmNlbnQgb2YgdGhlaXIgaW5mb3JtYXRpb24gdGVjaG5vbG9neSB3b3JrIGluLWhvdXNlLiBHTSwgd2hpY2ggYmVnYW4gdGhlIGRhdGEgY29uc29saWRhdGlvbiBpbiB0aGUgZmFsbCBvZiAyMDExIGFuZCB0aGUgc29mdHdhcmUgZWZmb3J0cyBsYXN0IHN1bW1lciwgaXNuJ3Qgc3VyZSBob3cgZmFyIGl0IGhhcyBtb3ZlZCB0b3dhcmQgdGhlIDkwIHBlcmNlbnQgZ29hbCBhbHRob3VnaCBpdCBoYXMgaGlyZWQgNjQgcGVyY2VudCBvZiB0aGUgcGVvcGxlIG5lZWRlZCB0byBkbyBpdC4gR00gYWxyZWFkeSBoYXMgYWRkZWQgb3IgbW92ZWQgNSw1MDAgcGVvcGxlIGludG8gaW5mb3JtYXRpb24gdGVjaG5vbG9neSBhdCBjZW50ZXJzIGluIFdhcnJlbjsgQXVzdGluLCBUZXhhczsgUm9zd2VsbCwgR2EuOyBhbmQgQ2hhbmRsZXIsIEFyaXouIFRoZSBjZW50ZXJzIGFsbCBhcmUgbmVhciBjb2xsZWdlcyB0aGF0IGVtcGhhc2l6ZSBpbmZvcm1hdGlvbiB0ZWNobm9sb2d5LCBHTSBzYXlzLiBHTSwgQWtlcnNvbiBzYWlkLCBub3cgaGFzIHRoZSBhYmlsaXR5IHRvIHdhdGNoIGl0cyBmYWN0b3JpZXMgZm9yIHByb2R1Y3Rpb24gYW5kIHBhcnRzIHN1cHBseSBwcm9ibGVtcywgYW5kIHBlcmZvcm0gbW9yZSBhY2N1cmF0ZSB2aXJ0dWFsIGNyYXNoIHRlc3RzLCBzYXZpbmcgY29zdHMgYW5kIHNwZWVkaW5nIG5ldyBwcm9kdWN0cyB0byBtYXJrZXQuIEluIHRoZSBwYXN0LCB3aGVuIG1vc3QgY29tcHV0ZXIgdGVjaG5vbG9neSB3YXMgb3V0c291cmNlZCwgR00gY291bGRuJ3QgZXZlbiBtb25pdG9yIGl0cyBvd24gbmV0d29yayBvZiBjb21wdXRlcnMsIGhlIHNhaWQuICJUaGUgcmVzcG9uc2l2ZW5lc3Mgd2Fzbid0IHRoZXJlLCIgaGUgc2FpZCBvZiB0aGUgb3V0c2lkZSB2ZW5kb3JzLiAiVGhlcmUgaXNuJ3QgYSBjb21wYW55IG9uIGEgZ2xvYmFsIGNvbXBldGl0aXZlIGJhc2lzIHRoYXQgaXNuJ3QgZ29vZCBhdCBJLlQuLCB0aGF0IGRvZXNuJ3QgY29udHJvbCBpdHMgZGVzdGlueSBieSB2aXJ0dWUgb2YgYmV0dGVyIGluZm9ybWF0aW9uIGluIGV2ZXJ5IGFzcGVjdCBvZiB0aGUgYnVzaW5lc3MuIiBHTSBhbHNvIGNhbiB1c2UgaGlnaC1wb3dlcmVkIGNvbXB1dGVycyB0byBhbmFseXplIGRhdGEgYWNyb3NzIHRoZSBnbG9iZSB0byBkaXNjb3ZlciBzYWxlcyB0cmVuZHMgYW5kIHBvdGVudGlhbCBuZXcgbWFya2V0cyBmb3IgaXRzIHZlaGljbGVzLiBUaGUgY29tcGFueSBzYWlkIG5ldyBjcmFzaC10ZXN0IHNpbXVsYXRpb25zIHRoYXQgd2VyZSBtYWRlIHBvc3NpYmxlIGJ5IHRoZSBkYXRhIGNlbnRlcnMgYXJlIGN1dHRpbmcgZG93biBvbiB0aGUgbnVtYmVyIG9mIHBoeXNpY2FsIGNyYXNoIHRlc3RzIHRoYXQgYXJlIG5lZWRlZC4gVGhhdCBzYXZlcyB0aGUgY29tcGFueSByb3VnaGx5ICQzNTAsMDAwIHBlciB0ZXN0LCBHTSBzYWlkLiBFdmVuIHRob3VnaCBHTSBpcyB0YWtpbmcgb24gdGhlIGFkZGVkIGNhcGl0YWwgaW52ZXN0bWVudCBhbmQgcGVyc29ubmVsIGNvc3RzLCBNb3R0IHNhaWQgaXQgd2lsbCBzYXZlIG1vbmV5IGJ5IGVsaW1pbmF0aW5nIHRoZSBjb3N0IG9mIHBheWluZyBvdXRzaWRlIGNvbXB1dGVyIHRlY2hub2xvZ3kgdmVuZG9ycy4gQnJpbmdpbmcgY29tcHV0ZXIgZnVuY3Rpb25zIGludG8gdGhlIGNvbXBhbnkgY2FuIG1ha2UgaXQgbW9yZSBhZ2lsZSwgYnV0IHRoZXJlIGFyZSByaXNrcyBhcyB3ZWxsLCBpbmNsdWRpbmcgaGlyaW5nIGFuZCBrZWVwaW5nIHBlb3BsZSB3aG8gaGF2ZSBtYW55IGpvYiBjaG9pY2VzLCBzYWlkIEJyeWFuIEJyaXR6LCBhIHZpY2UgcHJlc2lkZW50IHdpdGggR2FydG5lciBJbmMuLCBhIGZpcm0gdGhhdCBhZHZpc2VzIGNvbXBhbmllcyBvbiBpbmZvcm1hdGlvbiB0ZWNobm9sb2d5IGlzc3Vlcy4gTW9zdCBjb21wYW5pZXMgdGhhdCBvdXRzb3VyY2UgY29tcHV0ZXIgZnVuY3Rpb25zIGNvbnRpbnVlIHRvIGRvIHNvIGFuZCBkb24ndCB0cnkgdG8gYnVpbGQgdGhlbSBmcm9tIGluc2lkZSwgaGUgc2FpZC4gQnV0IGhlIGFsc28gc2FpZCBHTSBpcyBsYXJnZSBlbm91Z2ggdG8gYnVpbGQgYW5kIG1haW50YWluIGEgdGFsZW50IHBvb2wuICJJdCByZWFsbHkgZG9lcyBjb21lIGRvd24gdG8gZXhlY3V0aW9uLCIgaGUgc2FpZC4gIlRoYXQgaGFzIHByb3ZlbiB0byBiZSwgZm9yIGEgbG90IG9mIG9yZ2FuaXphdGlvbnMsIGEgYmFycmllciB0b28gYmlnLiIgR00gYWxzbyBuZWVkcyB0byBtYWtlIHN1cmUgdGhhdCBpdCB1c2VzIHRoZSByZW1haW5pbmcgb3V0c291cmNlZCB3b3JrIHRvIGJyaW5nIGlubm92YXRpb24gZnJvbSBvdXRzaWRlLCBoZSBzYWlkLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6cQnCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDQ3YWNjZWU3ZjQ0NGY5ZGI=</field><field name="symbol" class="java.lang.String">rO0ABXQABERUU1Q=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6haMyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+x64UeuFHs</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+x64UeuFHs</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+x64UeuFHs</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+x64UeuFHs</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+x64UeuFHs</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDZjMGUxNGNhZjhjODAwMDM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFuyAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwNTI=</field><field name="title" class="java.lang.String">rO0ABXQAMlRoZSBTZWNyZXQsIERpcnR5IENvc3Qgb2YgT2JhbWEncyBHcmVlbiBQb3dlciBQdXNo</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJK5SMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI3MTcyMzgzMzAxZTY3Yjg=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZBUk0=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJQC38AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyI9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABp3A==</field><field name="id" class="java.lang.String">rO0ABXQAEGIxNzhiNTk3MDYyZjcwYTE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGoqAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE1NTE2</field><field name="title" class="java.lang.String">rO0ABXQAOVRlc2xhJ3MgU3RyYXViZWwgS2VlcHMgTW90b3JzIFJvbGxpbmcgYXMgU3RvY2sgU3VyZ2VzIDU3JQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6haMyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDVhOGFjMTZkMmE3ZGMxYjU=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0NPU1QuTVg=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6mjyiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECVQAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECVjTMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECVQAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECVfI9cKPXD</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECVdFwo9cKP</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAHbA==</field><field name="id" class="java.lang.String">rO0ABXQAEDVhNWZhYzUzZjdiOTZhZmQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE/vAAAA==</field></document></documents><date>2015-05-07T03:23:45-0500</date></cacheEntry>
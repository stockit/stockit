<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hUaGUgU2tvdXJpZXMgbWluZSBvbiBIYWxraWRpa2kgcGVuaW5zdWxhICBhIGxhbmRzY2FwZSBvZiBwcmlzdGluZSBiZWFjaGVzIGFuZCByb2xsaW5nIGhpbGxzIGRvdHRlZCB3aXRoIG9saXZlIGdyb3ZlcyAgaXMgYW1vbmcgdGhlIGJpZ2dlc3QgaW52ZXN0bWVudHMgaW4gR3JlZWNlIHNpbmNlIGl0IHNhbmsgaW50byBhIGRlYnQgY3Jpc2lzIGZvdXIgeWVhcnMgYWdvIEJ1dCBpdCBoYXMgc2V0IEdyZWVjZXMgZGVzcGVyYXRlIG5lZWQgZm9yIGZpbmFuY2UgdG8gcmVidWlsZCB0aGUgZWNvbm9teSBhZ2FpbnN0IHRoZSBpbnRlcmVzdHMgb2YgaXRzIHZpdGFsIHRvdXJpc20gaW5kdXN0cnkgYW5kIGFyb3VzZWQgYW5nZXIgb24gdGhlIHBlbmluc3VsYSAgc2l0ZSBvZiB0aGUgZmFtZWQgTW91bnQgQXRob3MgbW9uYXN0ZXJpZXMgIG92ZXIgdGhlIGVudmlyb25tZW50YWwgY29zdCBWYW5jb3V2ZXJiYXNlZCBFbGRvcmFkbyBHb2xkIENvcnAgdG9vayBvdmVyIHRoZSBwcm9qZWN0IGluIDIwMTIgcHJvbWlzaW5nIHRvIGludmVzdCAxIGJpbGxpb24gb3ZlciB0aGUgbmV4dCBmaXZlIHllYXJzIGFzIHBhcnQgb2YgYSBwbGFuIHRvIG1pbmUgZXZlbnR1YWxseSBzb3VyY2UgdXAgdG8gMzAgcGVyY2VudCBvZiBpdHMgZ2xvYmFsIGdvbGQgcHJvZHVjdGlvbiBpbiBHcmVlY2UgWWV0IHByZWxpbWluYXJ5IHdvcmsgb24gdGhlIG1pbmUgd2hpY2ggaXMgc3VwcG9zZWQgdG8gb3BlbiBpbiAyMDE2IGhhcyBzZXQgb2ZmIG1vbnRocyBvZiBwb2xpdGlja2luZyBhbmQgcHJvdGVzdHMgVGhlIHJvdyBoYXMgb3ZlcnNoYWRvd2VkIHdoYXQgd2FzIHN1cHBvc2VkIHRvIGJlIHRoZSBmbGFnc2hpcCBwcm9qZWN0IG9mIHRoZSBnb3Zlcm5tZW50cyBmb3JlaWduIGludmVzdG1lbnQgZHJpdmUgSXQgYWxzbyBoaWdobGlnaHRzIEdyZWVrcyBhbWJpdmFsZW5jZSBhYm91dCBhdHRlbXB0cyBieSBQcmltZSBNaW5pc3RlciBBbnRvbmlzIFNhbWFyYXMgdG8ga2luZGxlIGluZHVzdHJpYWwgZ3Jvd3RoIGluIGFuIGVjb25vbXkgdGhhdCBoYXMgdHJhZGl0aW9uYWxseSByZWxpZWQgb24gdG91cmlzbSBhbmQgc2VydmljZXMgTGFzdCB5ZWFyIGludHJ1ZGVycyBiYXJnZWQgaW50byB0aGUgbWluZSB3aXRoIGh1bnRpbmcgcmlmbGVzIHNldCBlcXVpcG1lbnQgb24gZmlyZSBhbmQgZG91c2VkIHNlY3VyaXR5IGd1YXJkcyB3aXRoIGZ1ZWwgdGhyZWF0ZW5pbmcgdG8gYnVybiB0aGVtIGFsaXZlIExvY2FsIHByb3Rlc3RlcnMgd2hvIHNheSB0aGV5IHJlamVjdCB2aW9sZW5jZSBhbmQgaGF2ZSB0aGUgYmFja2luZyBvZiBzb21lIG9wcG9zaXRpb24gcG9saXRpY2lhbnMgaW4gcGFybGlhbWVudCBmZWFyIHRoZSBtaW5lIHdpbGwgZGVzdHJveSBIYWxraWRpa2lzIHRvdXJpc3QgcmljaGVzIFNhbWFyYXMgaG93ZXZlciBoYXMgd2FybmVkIHRoYXQgZm9yZWlnbiBpbnZlc3RtZW50cyB3b3VsZCBiZSBwcm90ZWN0ZWQgYXQgYW55IGNvc3QgUmlnaHRseSBvciB3cm9uZ2x5IEdvZCBlbmRvd2VkIHRoZSByZWdpb24gd2l0aCBvcmVzIGFuZCB3ZSBtdXN0IGZpcnN0IGRlY2lkZSB3aGV0aGVyIHdlIEdyZWVrcyB3YW50IHRvIGV4cGxvaXQgaXQgb3Igbm90IHNhaWQgUGV0cm9zIFN0cmF0b3VkYWtpcyBDRU8gb2YgdGhlIGNvbXBhbnkgZGV2ZWxvcGluZyB0aGUgbWluZSBIZWxsYXMgR29sZCBFbGRvcmFkbyBvd25zIDk1IHBlcmNlbnQgb2YgSGVsbGFzIEdvbGQgd2hpY2ggYWxzbyBoYXMgb3RoZXIgbWluaW5nIHByb2plY3RzIGluIEhhbGtpZGlraSB3aXRoIHRoZSByZXN0IGhlbGQgYnkgRWxsYWt0b3IgR3JlZWNlcyBiaWdnZXN0IGNvbnN0cnVjdGlvbiBjb21wYW55IE1PTkVZIFNQSU5ORVIgSGFsa2lkaWtpIGhhcyBhIHJpY2ggaGlzdG9yeSBUaGUgRWFzdGVybiBPcnRob2RveCBtb25hc3RlcmllcyBuZXN0bGVkIGluIHRoZSBoaWxscyBvZiBNb3VudCBBdGhvcyBhcmUgYW4gYXJ0aXN0aWMgdHJlYXN1cmUgYW5kIFVORVNDTyBXb3JsZCBIZXJpdGFnZSBzaXRlIEJ1dCBub3J0aGVybiBHcmVlY2UgaGFzIGFsc28gbG9uZyBiZWVuIGZlcnRpbGUgdGVycml0b3J5IGZvciBleHBsb3JlcnMgTWFjZWRvbmlhbiBLaW5nIEFsZXhhbmRlciB0aGUgR3JlYXQgbWluZWQgZm9yIGdvbGQgaW4gdGhlIGhpbGx5IGZvcmVzdHMgdG8gZmluYW5jZSBoaXMgY29ucXVlc3RzIGludG8gQXNpYSAyMzAwIHllYXJzIGFnbyBhY2NvcmRpbmcgdG8gbG9jYWwgYXV0aG9yaXRpZXMgRWxkb3JhZG8gZXhlY3V0aXZlcyBzYXkgZ29sZCBtaW5pbmcgY291bGQgYmVjb21lIGEgc2lnbmlmaWNhbnQgbW9uZXlzcGlubmVyIGZvciBtb2Rlcm5kYXkgR3JlZWNlIGJyaW5naW5nIGluIGZvcmVpZ24gY3VycmVuY3kgYW5kIGhlbHBpbmcgdG8gZGl2ZXJzaWZ5IGFuIGVjb25vbXkgdGhhdCBpcyBzdHJ1Z2dsaW5nIHdpdGggMjcgcGVyY2VudCB1bmVtcGxveW1lbnQgVGhlIGNvbmRpdGlvbnMgdGhhdCBleGlzdCBwYXJ0aWN1bGFybHkgaW4gbm9ydGhlYXN0IEdyZWVjZSBhcmUgdW5pcXVlIGluIG15IG1pbmQgRWxkb3JhZG8gQ0VPIFBhdWwgV3JpZ2h0IHNhaWQgaW4gYW4gaW50ZXJ2aWV3IEl2ZSBiZWVuIGluIHRoZSBpbmR1c3RyeSBmb3IgMzUgeWVhcnMgYW5kIEl2ZSB5ZXQgdG8gc2VlIGEgc2l0dWF0aW9uIHdoZXJlIHRoZXJlIGlzIHN1Y2ggYSBtaW5lcmFsIGVuZG93bWVudCB0aGF0IGlzIGJlaW5nIHJlY29nbml6ZWQgIGluIG1hbnkgY2FzZXMgcXVhbnRpZmllZCAgYnV0IHJlbWFpbnMgdW51dGlsaXplZCBVbmRlciBpdHMgZml2ZXllYXIgcGxhbiBFbGRvcmFkbyBnaXZlcyB0aGUgYXV0aG9yaXRpZXMgYSBtaW5pbXVtIDMgbWlsbGlvbiBldXJvcyA0IG1pbGxpb24gYSB5ZWFyIGxhaWQgZG93biBpbiBhIG5ldyByb3lhbHR5IHNjaGVtZSBMb2NhbCBwZW9wbGUgbWFrZSB1cCA5MCBwZXJjZW50IG9mIDE2MDAgd29ya2VycyB0aGUgY29tcGFueSBhbmQgaXRzIGNvbnRyYWN0b3JzIGVtcGxveSBub3cgQXQgaXRzIHBlYWsgRWxkb3JhZG8gc2F5cyB0aGV5IHdpbGwgZW1wbG95IG92ZXIgMjAwMCB3b3JrZXJzIGF0IHRoZWlyIG1pbmVzIGluIEhhbGtpZGlraSBUaGUgQ2FuYWRpYW4gY29tcGFueSBoYXMgdGhlIHN0cm9uZyBiYWNraW5nIG9mIHRoZSBjb25zZXJ2YXRpdmVsZWQgZ292ZXJubWVudCBvZiBTYW1hcmFzIHdobyBoYXMgdHJpZWQgdG8gZHJ1bSB1cCBmb3JlaWduIGludmVzdG1lbnQgdG8gaW5qZWN0IGxpZmUgaW50byB0aGUgZWNvbm9teSBzaW5jZSBjb21pbmcgdG8gcG93ZXIgaW4gSnVuZSAyMDEyIEdyb3d0aCBtZWFucyBpbnZlc3RtZW50cyBUaG9zZSB3aG8gZHJpdmUgaW52ZXN0bWVudHMgYXdheSBkbyBub3Qgd2FudCBncm93dGggV2hlbiB0aGV5IG9jY3VweSBmYWN0b3JpZXMgdGhleSBkbyBub3Qgd2FudCBncm93dGggU2FtYXJhcyBzYWlkIGxhc3QgbW9udGggV2hlbiB0aGV5IHRyeSB0byBjYW5jZWwgbGVnaXRpbWF0ZSBpbnZlc3RtZW50cyBhbmQga2VlcCBmaWdodGluZyBhZ2FpbnN0IHRoZW0gYWx0aG91Z2ggdGhleSBoYXZlIGJlZW4gZnVsbHkgYXBwcm92ZWQgIGFzIHRoZXkgZGlkIGF0IFNrb3VyaWVzIGluIEhhbGtpZGlraSAgdGhleSBkbyBub3Qgd2FudCBpbnZlc3RtZW50cyBUSElDSyBXSVRIIEFOR0VSIEluIEhhbGtpZGlraXMgc2Vhc2lkZSB2aWxsYWdlIG9mIE91cmFub3Vwb2xpIHdoZXJlIGFxdWFtYXJpbmUgd2F0ZXJzIGh1ZyBhIHN0cmlwIG9mIGhvdGVscyBmaXNoIHRhdmVybmFzIGFuZCBsaXR0bGUgc2hvcHMgc2VsbGluZyB3aW5lIG9saXZlIG9pbCBhbmQgcmVsaWdpb3VzIGljb25zIHRoZSBhaXIgaGFuZ3MgdGhpY2sgd2l0aCBhbmdlciBhZ2FpbnN0IHRoZSBtaW5lIE5vIHRvIGdvbGQgbWluaW5nIGlzIHNjcmliYmxlZCBvbiB0aGUgd2FsbHMgYnkgdGhlIHBvcnQgZW1ibGF6b25lZCBvbiBUc2hpcnRzIHdvcm4gYnkgd2FpdHJlc3NlcyBhdCBhIGJlYWNoIHRhdmVybmEgYW5kIHNjcmF3bGVkIG9uIHRoZSB3b29kZW4gcGllciB3aGVyZSBjaGlsZHJlbiBqdW1wIGludG8gdGhlIGNyeXN0YWwgY2xlYXIgd2F0ZXJzIFRoZSB2aWxsYWdlcnMgIHdobyBtYWtlIGEgbGl2aW5nIGNhdGVyaW5nIHRvIG1haW5seSBCYWxrYW4gYW5kIFJ1c3NpYW4gdG91cmlzdHMgd2hvIGZsb2NrIHRvIEhhbGtpZGlraXMgc2FuZHkgYmVhY2hlcyAgYXJlIGFmcmFpZCB0aGUgbWluZSB3aWxsIGRlc3Ryb3kgdGhlaXIgbGl2ZWxpaG9vZCBieSBzY2FyaW5nIGF3YXkgdmlzaXRvcnMgYW5kIHR1cm4gdGhlIGFyZWEgaW50byBhbiBpbmR1c3RyaWFsIHpvbmUgV2hvIHdpbGwgY29tZSB0aGVuIGhlcmUgdG8gc3dpbSBhbmQgZWF0IG91ciBmaXNoIGFza2VkIENocnlzc2EgTGlrYWtpIGEgNTJ5ZWFyb2xkIHJlYWwgZXN0YXRlIGFnZW50IGFzIHNoZSBzYXQgb25lIGV2ZW5pbmcgd2l0aCBvdGhlciByZXNpZGVudHMgYXQgYSB3YXRlcmZyb250IGNhZmUgYSBzaG9ydCB3YWxrIGZyb20gd2hlcmUgdG91cmlzdHMgdGFrZSBib2F0IHJpZGVzIHRvIHNlZSBNb3VudCBBdGhvcyBTaGUgYW5kIG90aGVyIHJlc2lkZW50cyBhcmd1ZSBzdWNoIGEgcGhhcmFvbmljIHByb2plY3Qgd2lsbCBkcmFpbiB0aGUgcmVnaW9ucyB3YXRlciBiYXNpbiBhbmQgcG9sbHV0ZSB0aGUgd2F0ZXIgc3VwcGx5IHNlbmQgb3V0IDMwMDAgdG9ubmVzIG9mIGR1c3QgcGVyIGhvdXIgaW50byB0aGUgYWlyIGFuZCBkZXN0cm95IHRoZSBsb2NhbCBmb3Jlc3QgVGhleSBhbHNvIHNheSBjeWFuaWRlIHVzZWQgaW4gdGhlIHByb2R1Y3Rpb24gcHJvY2VzcyBwb3NlcyBhIGhlYWx0aCByaXNrIHRvIHRoZSBsb2NhbCBjb21tdW5pdHkgQ29tcGFueSBvZmZpY2lhbHMgY291bnRlciB0aGF0IHRoZXJlIHdpbGwgYmUgbm8gZHVzdCBjbG91ZCBTa291cmllcyBuZWVkcyBvbmx5IDAwOSBwZXJjZW50IG9mIEhhbGtpZGlraXMgZm9yZXN0IHRoZSBwcm9qZWN0cyBoYXZlIGFsbCB0aGUgbmVjZXNzYXJ5IGVudmlyb25tZW50YWwgcGVybWl0cyB0aGUgcmVnaW9uIHdpbGwgbm90IGJlIGRyYWluZWQgZHJ5IGFuZCB0aGF0IGN5YW5pZHQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0wMy0yN1QwMDowMDowMFogVE8gMjAxMy0xMi0wM1Q1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwMjE=</field><field name="title" class="java.lang.String">rO0ABXQAP0dvbGQgTWFraW5nIFBlb3BsZSBDcmF6eSBpbiBQZXJpbG91cyBTZWFyY2ggZm9yIFN1bmtlbiBUcmVhc3VyZQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJVMdsAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI1YTgyYjNiNDFlNjliZjc=</field><field name="symbol" class="java.lang.String">rO0ABXQABFdPT0Q=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJaWDcAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJeFHrhR64</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJeFHrhR64</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJQ9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJYAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBIzMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAnEA==</field><field name="id" class="java.lang.String">rO0ABXQAEGJhZTdmMDc3OWE4ZmI3MjE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mIU4AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwNTI=</field><field name="title" class="java.lang.String">rO0ABXQAMlRoZSBTZWNyZXQsIERpcnR5IENvc3Qgb2YgT2JhbWEncyBHcmVlbiBQb3dlciBQdXNo</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJK5SMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI3MTcyMzgzMzAxZTY3Yjg=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZBUk0=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJQC38AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyI9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABp3A==</field><field name="id" class="java.lang.String">rO0ABXQAEGIxNzhiNTk3MDYyZjcwYTE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGoqAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIyNTM5</field><field name="title" class="java.lang.String">rO0ABXQAOEJhcnJpY2sgR29sZCBTaGVsdmVzIEJpZyBNaW5lIFByb2plY3QsIFBsYW5zIFNoYXJlIElzc3Vl</field><field name="content" class="java.lang.String">rO0ABXQczUJhcnJpY2sgR29sZCBDb3JwLiBzYWlkIG9uIFRodXJzZGF5IGl0IHdvdWxkIHN0b3AgZGV2ZWxvcG1lbnQgb2YgaXRzIFBhc2N1YS1MYW1hIG1pbmUgaW4gU291dGggQW1lcmljYSBpbmRlZmluaXRlbHksIGEgc3VycHJpc2UgcmV2ZXJzYWwgb24gYSBwcm9qZWN0IHRoYXQgaGFzIGFscmVhZHkgY29zdCB0aGUgd29ybGQncyBsYXJnZXN0IGdvbGQgcHJvZHVjZXIgbW9yZSB0aGFuICQ1IGJpbGxpb24uIFBhc2N1YS1MYW1hLCB3aGljaCBCYXJyaWNrIGhhcyBiZWVuIGNvdW50aW5nIG9uIHRvIHByb3ZpZGUgYSBsYXJnZSBzaGFyZSBvZiBpdHMgZnV0dXJlIGdvbGQgcHJvZHVjdGlvbiwgaGFzIGJlZW4gcGxhZ3VlZCBieSBwb2xpdGljYWwgb3Bwb3NpdGlvbiwgcGVybWl0dGluZyBpc3N1ZXMsIGxhYm9yIHVucmVzdCwgY29zdC1vdmVycnVucyBhbmQgYSBzaGFycCBkcm9wIGluIGJ1bGxpb24gcHJpY2VzLiBFdmVuIHNvLCBCYXJyaWNrIGhhZCBzaWduYWxlZCB0aGF0IGl0IGludGVuZGVkIHRvIGtlZXAgcGxvd2luZyBhaGVhZCB3aXRoIHRoZSByZW1vdGUgcHJvamVjdCwgd2hpY2ggc3RyYWRkbGVzIHRoZSBib3JkZXIgb2YgQ2hpbGUgYW5kIEFyZ2VudGluYSBoaWdoIGluIHRoZSBBbmRlcywgYSBsb2NhdGlvbiB0aGF0IGhhcyBidW1wZWQgdXAgY29zdHMgYW5kIGZ1ZWxlZCBlbnZpcm9ubWVudGFsIG9wcG9zaXRpb24uIFNlcGFyYXRlbHkgQmFycmljaywgd2hpY2ggaXMgYXR0ZW1wdGluZyB0byByZWR1Y2UgaXRzIGRlYnQgbG9hZCwgc2FpZCBsYXRlciBvbiBUaHVyc2RheSB0aGF0IGl0IHdpbGwgcmFpc2UgbW9yZSB0aGFuICQzIGJpbGxpb24gdGhyb3VnaCBhIHNoYXJlIG9mZmVyLCB3aXRoIG11Y2ggb2YgdGhlIGZ1bmRzIGVhcm1hcmtlZCB0byBwYXkgZG93biBib3Jyb3dpbmdzLiBCYXJyaWNrJ3Mgc3RvY2sgZHJvcHBlZCA1LjQgcGVyY2VudCB0byAkMTkuMzkgZHVyaW5nIHRoZSByZWd1bGFyIHNlc3Npb24gaW4gTmV3IFlvcmssIGFuZCBzYW5rIGFuIGFkZGl0aW9uYWwgNS40IHBlcmNlbnQgdG8gJDE4LjM0IGluIGFmdGVyLWhvdXJzIHRyYWRlIGFmdGVyIGl0IGFubm91bmNlZCBpdCB3b3VsZCBvZmZlciAxNjMuNSBtaWxsaW9uIHNoYXJlcyB0byB0aGUgcHVibGljIGF0ICQxOC4zNSBlYWNoLiBJdCBpcyBubyBzZWNyZXQgdGhhdCBCYXJyaWNrIGhhcyBsb29raW5nIGZvciB3YXlzIHRvIHJlZHVjZSBpdHMgZGVidCBsb2FkLCB3aGljaCBzYXQgYXQgJDE0LjYgYmlsbGlvbiBhdCB0aGUgZW5kIG9mIHRoaXJkIHF1YXJ0ZXIuIFNldmVyYWwgc291cmNlcyBmYW1pbGlhciB3aXRoIHRoZSBzaXR1YXRpb24gaGF2ZSB0b2xkIFJldXRlcnMgdGhlIGNvbXBhbnkgd2FzIGNvbnNpZGVyaW5nIGEgd2lkZSByYW5nZSBvZiBvcHRpb25zIGZyb20gYSBzdHJhdGVnaWMgZXF1aXR5IGludmVzdG1lbnQgdG8gZnVydGhlciBzdHJlYW1pbmcgZGVhbHMgdGhhdCB5aWVsZCB1cGZyb250IGNhc2guIFRoZSBUb3JvbnRvLWJhc2VkIGNvbXBhbnkgc3RyZXNzZWQgdGhhdCB0aGUgZGVjaXNpb24gdG8gc3RvcCBkZXZlbG9wbWVudCBhdCBQYXNjdWEtTGFtYSB3YXMgbm90IHRoZSBlbmQgb2YgdGhlIHJvYWQgZm9yIHRoZSBwcm9qZWN0LiBCYXJyaWNrIHNhaWQgaXQgd291bGQgcmVzdW1lIGNvbnN0cnVjdGlvbiB3aGVuIGNvbmRpdGlvbnMgd2FycmFudCwgYW5kIHdvdWxkIGV4cGxvcmUgc3RyYXRlZ2ljIHBhcnRuZXJzaGlwcyBvciByb3lhbHR5IGFuZCBzaW1pbGFyIGRlYWxzIHRvIGZ1bmQgdGhlIHByb2plY3QuICJUaGUgcHJvamVjdCBoYXMgYmVlbiwgYW5kIGNvbnRpbnVlcyB0byBiZSwgYSB0b3AgcHJpb3JpdHkgZm9yIHRoZSBjb21wYW55LCBhbmQgYWxzbyBvdXIgYmlnZ2VzdCBjaGFsbGVuZ2UsIiBDaGllZiBFeGVjdXRpdmUgSmFtaWUgU29rYWxza3kgc2FpZCBvbiBhIGNhbGwgd2l0aCBhbmFseXN0cyBhbmQgaW52ZXN0b3JzLiBJZiBjb21wbGV0ZWQsIFBhc2N1YS1MYW1hIGlzIGV4cGVjdGVkIHRvIHByb2R1Y2UgdXAgdG8gODUwLDAwMCBvdW5jZXMgb2YgZ29sZCBhbm51YWxseSBpbiBpdHMgZmlyc3QgZml2ZSB5ZWFycywgYW5kIGF0IGV4Y2VwdGlvbmFsbHkgbG93IG9wZXJhdGluZyBjb3N0cywgd2hpY2ggY291bGQgcGF5IGRpdmlkZW5kcyBmb3IgeWVhcnMgdG8gY29tZS4gSW4gc3VzcGVuZGluZyBjb25zdHJ1Y3Rpb24gYXQgUGFjdWEtTGFtYSwgQmFycmljayBpcyBmb2xsb3dpbmcgaW4gdGhlIGZvb3RzdGVwcyBvZiBvdGhlciBiaWcgbWluZXJzIHRoYXQgaGF2ZSBtb3RoYmFsbGVkIHByb2plY3RzIGluIHJlY2VudCB5ZWFycy4gUml2YWwgTmV3bW9udCBNaW5pbmcgQ29ycCBoYXMgcHV0IGl0cyBDb25nYSBwcm9qZWN0IGluIFBlcnUgb24gaG9sZCwgYW5kIEFuZ2xvIEFtZXJpY2FuIGxhc3QgbW9udGggZHJvcHBlZCBwbGFucyB0byBwdXNoIGFoZWFkIHdpdGggdGhlIFBlYmJsZSBjb3BwZXItZ29sZCBtaW5lIGluIEFsYXNrYS4gUGViYmxlLCBsaWtlIFBhc2N1YS1MYW1hLCBoYXMgZmFjZWQgc3Ryb25nIGVudmlyb25tZW50YWwgb3Bwb3NpdGlvbi4gSW52ZXN0b3JzIHNlZW1lZCB0byB0YWtlIHRoZSBkZWNpc2lvbiBpbiB0aGVpciBzdHJpZGUgYXMgaXQgd2lsbCBmdXJ0aGVyIGVhc2UgY2FzaCBmbG93IHByZXNzdXJlcyBvbiB0aGUgY29tcGFueS4gIkkgY2FuJ3QgZmF1bHQgdGhlaXIgZGVjaXNpb24uIFRoZXkgYXJlIGJlaW5nIGNvbnNlcnZhdGl2ZSBhbmQgdGhhdCdzIGZpbmUsIiBzYWlkIENhZXNhciBCcnlhbiwgYSBwb3J0Zm9saW8gbWFuYWdlciBhdCBHYWJlbGxpLCB3aGljaCBvd25zIGFib3V0IDIuOSBtaWxsaW9uIHNoYXJlcyBpbiBCYXJyaWNrLiAiSSBzdGlsbCB0aGluayB0aGlzIGNhbiBiZSBhIHN0cm9uZyBjYXNoIGdlbmVyYXRvciBhdCBzb21lIHBvaW50LiIgS0VZIFBST0pFQ1QgQmFycmljayBhbm5vdW5jZWQgaXRzIGRlY2lzaW9uIG9uIFBhc2N1YS1MYW1hIGFzIGl0IHJlcG9ydGVkIHRoaXJkLXF1YXJ0ZXIgZWFybmluZ3MgdGhhdCB0b3BwZWQgZXhwZWN0YXRpb25zLCBoZWxwZWQgaW4gcGFydCBieSBsb3dlciBvcGVyYXRpbmcgY29zdHMuIFN0aWxsLCBlYXJuaW5ncyBhbmQgcmV2ZW51ZSB0dW1ibGVkIGZyb20gYSB5ZWFyIGVhcmxpZXIuIFRoZSBkZWNpc2lvbiB0byBzdXNwZW5kIGNvbnN0cnVjdGlvbiBpcyBhIGJsb3cgdG8gQXJnZW50aW5hJ3MgcHJlc2lkZW50LCBDcmlzdGluYSBGZXJuYW5kZXouIFBhc2N1YSBMYW1hIGlzIHRoZSBtYWluIGZvcmVpZ24gaW52ZXN0bWVudCBwcm9qZWN0IGluIEFyZ2VudGluYSBhZnRlciBCcmF6aWwncyBWYWxlICBoYWx0ZWQgYSAkNiBiaWxsaW9uIHBvdGFzaCBwcm9qZWN0IGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhlIHllYXIgZHVlIHRvIGhpZ2ggY29zdHMuIEFuZCBpdCBpcyBhbm90aGVyIGRpc2FwcG9pbnRtZW50IGZvciBDaGlsZSdzIG1pbmluZyBzZWN0b3IsIHdoaWNoIGZhY2VzIHJlZ3VsYXRvcnkgZGVsYXlzIGFuZCBpbmNyZWFzaW5nIG9wcG9zaXRpb24gZnJvbSBsb2NhbCBjb21tdW5pdGllcyBhbmQgZW52aXJvbm1lbnRhbCBncm91cHMuIEJhcnJpY2sgaGFkIGJlZW4gZXhwZWN0ZWQgdG8gcmFpc2UgaXRzIGVzdGltYXRlIG9mIHRoZSBjb3N0IG9mIFBhc2N1YS1MYW1hIOKAlCB3aGljaCBpdCBwZWdnZWQgbGFzdCB5ZWFyIGF0IGFzIG11Y2ggYXMgJDguNSBiaWxsaW9uIOKAlCB3aGVuIGl0IGFubm91bmNlZCBxdWFydGVybHkgcmVzdWx0cywgYnV0IGl0IGRpZCBub3QgZ2l2ZSBhIG5ldyBmaWd1cmUuIFByb2JsZW1zIHdpdGggcGVybWl0cyBoYWQgYmVlbiBleHBlY3RlZCB0byByYWlzZSB0aGUgbWluZSdzIHByaWNlIHRhZy4gUmVndWxhdG9ycyBoYWx0ZWQgY29uc3RydWN0aW9uIG9uIHRoZSBDaGlsZWFuIHNpZGUgb2YgdGhlIGJvcmRlciBsYXN0IHNwcmluZywgY2l0aW5nIHNlcmlvdXMgZW52aXJvbm1lbnRhbCB2aW9sYXRpb25zLCBhbmQgQmFycmljayBhZ3JlZWQgdG8gYnVpbGQgYSBuZXcgd2F0ZXIgbWFuYWdlbWVudCBzeXN0ZW0uIFNvbWUgaW52ZXN0b3JzIGhhZCB1cmdlZCBCYXJyaWNrIHRvIHN0b3AgYnVpbGRpbmcsIGJ1dCB0aGUgbWluZXIgaGFkIGVtcGhhc2l6ZWQgcmVwZWF0ZWRseSBob3cgZmFyIGl0IGhhZCBhbHJlYWR5IGNvbWUsIHNwZW5kaW5nICQ1LjQgYmlsbGlvbiBieSB0aGUgZW5kIG9mIHRoZSBzZWNvbmQgcXVhcnRlci4gQ2FwaXRhbCBzcGVuZGluZyBvbiB0aGUgcHJvamVjdCB3YXMgJDMxMCBtaWxsaW9uIGluIHRoZSB0aGlyZCBxdWFydGVyLiBCYXJyaWNrIHNhaWQgaXQgd2lsbCBjb250aW51ZSBhY3Rpdml0aWVzIG5lZWRlZCB0byBjb21wbHkgd2l0aCByZWd1bGF0b3J5IHJlcXVpcmVtZW50cyBhdCBQYXNjdWEtTGFtYSBhbmQgcHJvdGVjdCB0aGUgZW52aXJvbm1lbnQuIExvY2FsIGVudmlyb25tZW50YWwgZ3JvdXBzIGFyZSB3b3JyaWVkIGFib3V0IHRoZSBwcm9qZWN0J3MgZWZmZWN0cyBvbiBuZWFyYnkgZ2xhY2llcnMgYW5kIG9uIHRoZSB3YXRlciBzdXBwbHksIGFsdGhvdWdoIHN1cHBvcnRlcnMgc2F5IHRoZSBpbXBhY3Qgd2lsbCBiZSBzbWFsbC4gVGhlIGNvbXBhbnksIHdoaWNoIGhhcyBiZWVuIHB1c2hpbmcgdG8gY3V0IGNvc3RzLCBoYXMgYWxzbyBmYWNlZCBsYWJvciB1bnJlc3QuIFVuaW9uaXplZCB3b3JrZXJzIG9uIHRoZSBDaGlsZWFuIHNpZGUgb2YgdGhlIHByb2plY3Qgc2FpZCBvbiBXZWRuZXNkYXkgdGhleSBoYWQgdm90ZWQgdG8gc3RyaWtlIGFzIGVhcmx5IGFzIHRoaXMgRnJpZGF5LiBTdXNwZW5kaW5nIFBhc2N1YS1MYW1hIGNvdWxkIHdlaWdoIG9uIEJhcnJpY2sncyBwcm9kdWN0aW9uIGluIDIwMTYgYW5kIGJleW9uZCwgZXNwZWNpYWxseSBhcyB0aGUgY29tcGFueSBoYXMgYWxyZWFkeSBzYWlkIGl0IGhhcyBubyBwbGFucyB0byBidWlsZCBvdGhlciBuZXcgbWluZXMgaW4gdGhlIG5lYXIgZnV0dXJlLiBCYXJyaWNrIHNhaWQgdGhlIG1vdmUgd2lsbCByZWR1Y2UgaXRzIDIwMTQgY2FwaXRhbCBjb3N0cyBieSBhcyBtdWNoIGFzICQxLjAgYmlsbGlvbi4gQXMgb2YgU2VwdC4gMzAsIGl0IGhhZCBjYXNoIGFuZCBlcXVpdmFsZW50cyBvZiAkMi4zIGJpbGxpb24sIGFuZCAkNC4wIGJpbGxpb24gYXZhaWxhYmxlIHVuZGVyIGEgY3JlZGl0IGZhY2lsaXR5LiAiSXQgd291bGQgaGF2ZSBiZWVuIGZpbmFuY2lhbGx5IGlycmVzcG9uc2libGUgZm9yIHRoZW0gdG8gY29udGludWUgd2l0aCB0aGUgcHJvamVjdCBhdCB0aGlzIHBvaW50LCIgc2FpZCBEZXV0c2NoZSBCYW5rIGFuYWx5c3QgSm9yZ2UgQmVyaXN0YWluLiBCZXJpc3RhaW4gc2FpZCBoZSBiZWxpZXZlcyB0aGUgcHJvamVjdCB3aWxsIGJlIGNvbXBsZXRlZCBldmVudHVhbGx5LiBCYXJyaWNrIHByb2R1Y2VkIDEuODUgbWlsbGlvbiBvdW5jZXMgb2YgZ29sZCBpbiB0aGUgdGhpcmQgcXVhcnRlciwgdXAgc2xpZ2h0bHkgZnJvbSAxLjc4IG1pbGxpb24gYSB5ZWFyIGVhcmxpZXIuIEFsbC1pbiBzdXN0YWluaW5nIGNvc3RzIGZlbGwgdG8gJDkxNiBhbiBvdW5jZSBmcm9tICQxLDAxMCBhbiBvdW5jZS4gRWFybmluZ3MgZmVsbCB0byAkMTcyIG1pbGxpb24sIG9yIDE3IGNlbnRzIGEgc2hhcmUsIGluIHRoZSBxdWFydGVyIGZyb20gJDY0OSBtaWxsaW9uLCBvciA2NSBjZW50cywgYSB5ZWFyIGVhcmxpZXIuIFJldmVudWUgZHJvcHBlZCB0byAkMi45OSBiaWxsaW9uIGZyb20gJDMuNDAgYmlsbGlvbi4gRXhjbHVkaW5nIGFuIHVudXN1YWwgdGF4IGV4cGVuc2UgYW5kIG90aGVyIHNwZWNpYWwgaXRlbXMsIGFkanVzdGVkIGVhcm5pbmdzIGZlbGwgdG8gNTggY2VudHMgYSBzaGFyZSBmcm9tIDg4IGNlbnRzIGEgeWVhciBlYXJsaWVyLiBPbiB0aGF0IGJhc2lzLCBhbmFseXN0cywgb24gYXZlcmFnZSwgaGFkIGV4cGVjdGVkIDUwIGNlbnRzIGEgc2hhcmUsIGFjY29yZGluZyB0byBUaG9tc29uIFJldXRlcnMgSS9CL0UvUy4gU0lMVkVSIFdIRUFUT04gVGhlIG1vdmUgdG8gbW90aGJhbGwgUGFzY3VhLUxhbWEgYWxzbyBhZmZlY3RzIFNpbHZlciBXaGVhdG9uIENvcnAsIHdoaWNoIGluIDIwMDkgYm91Z2h0IDI1IHBlcmNlbnQgb2YgdGhlIG1pbmUncyBzaWx2ZXIgcHJvZHVjdGlvbiwgcGF5aW5nIEJhcnJpY2sgY2FzaCBpbiBleGNoYW5nZSBmb3IgZnV0dXJlIHNpbHZlciBzYWxlcyBhdCBhIGRpc2NvdW50ZWQgcHJpY2UuIFZhbmNvdXZlci1iYXNlZCBTaWx2ZXIgV2hlYXRvbiBzYWlkIGluIGEgc2VwYXJhdGUgc3RhdGVtZW50IG9uIFRodXJzZGF5IHRoYXQgaXQgc2VlcyBCYXJyaWNrJ3MgZGVjaXNpb24gYXMgcHJ1ZGVudC4gSXQgc2FpZCBpdCBpcyBub3cgZW50aXRsZWQgdG8gc2lsdmVyIG91dHB1dCBmcm9tIHRocmVlIG9mIEJhcnJpY2sncyBwcm9kdWNpbmcgbWluZXMgLSB0aGUgTGFndW5hcyBOb3J0ZSwgUGllcmluYSBhbmQgVmVsYWRlcm8gbWluZXMgLSB1bnRpbCB0aGUgZW5kIG9mIDIwMTYgdG8gbWFrZSB1cCBmb3IgdGhlIHByb2R1Y3Rpb24gaXQgaXMgbG9zaW5nIGZyb20gUGFzY3VhLUxhbWEuIFNpbHZlciBXaGVhdG9uIGhhcyBhbHNvIGFncmVlZCB0byBleHRlbmQgYSBjb21wbGV0aW9uIHRlc3QgZGVhZGxpbmUgb24gUGFzY3VhLUxhbWEgdW50aWwgdGhlIGVuZCBvZiAyMDE3IGZyb20gdGhlIGVuZCBvZiAyMDE2LiBUaGUgY29tcGFueSwgd2hpY2ggaXMgcmV2aWV3aW5nIGl0cyBwcm9kdWN0aW9uIGZvcmVjYXN0cyBmb3IgMjAxNywgc2FpZCBpdCBzdGlsbCBleHBlY3RzIGl0cyBzaWx2ZXIgb3V0cHV0IHRvIHRvcCAzMy41IG1pbGxpb24gc2lsdmVyIGVxdWl2YWxlbnQgb3VuY2VzIHRoaXMgeWVhci4gU2hhcmVzIG9mIFNpbHZlciBXaGVhdG9uIGRyb3BwZWQgNy41IHBlcmNlbnQgdG8gQyQyMy42Ni4gICBSb3lhbCBHb2xkIEluYywgd2hpY2ggaGFzIGEgcm95YWx0eSBkZWFsIG9uIFBhc2N1YS1MYW1hLCBmZWxsIDcuMCBwZXJjZW50IHRvIEMkNDguMDQuIEh1cnQgYnkgdGhlIHByb2JsZW1zIGluIENoaWxlLCB0aGUgd2VhayBnb2xkIHByaWNlIGFuZCBvdGhlciBpc3N1ZXMsIEJhcnJpY2sncyBzaGFyZXMgaGl0IEMkMTQuMjIgaW4gSnVseSwgdGhlaXIgbG93ZXN0IHBvaW50IHNpbmNlIDE5OTIsIGJlZm9yZSByZWJvdW5kaW5nIG5lYXJseSA1MCBwZXJjZW50LiBCYXJyaWNrJ3MgZGVidCByZWFjdGVkIHBvc2l0aXZlbHkgdG8gdGhlIG5ld3MuIFRoZSB5aWVsZCBvbiBpdHMgYmVuY2htYXJrIDEwLXllYXIgYm9uZCBuYXJyb3dlZCBieSBzaXggYmFzaXMgcG9pbnRzIHRvIDIuODIgcGVyY2VudCBhYm92ZSB0aGUgVS5TLiBnb3Zlcm5tZW50IHlpZWxkIGN1cnZlLCBhIHRyYWRlciB0b2xkIElGUiwgYSBUaG9tc29uIFJldXRlcnMgc2VydmljZSwgc2hvd2luZyBpbnZlc3RvcnMgd2VyZSBkZW1hbmRpbmcgbGVzcyBvZiBhIHByZW1pdW0gdG8gaG9sZCB0aGUgY29tcGFueSdzIGRlYnQu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUIM4eSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDIwMTdiMmUzNDZkYWZlMWY=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0FCWA==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUISCECAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyKPXCj1wp</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAydcKPXCj2</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAx3rhR64Uf</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyAo9cKPXD</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxq4UeuFHs</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAABHAkWA==</field><field name="id" class="java.lang.String">rO0ABXQAEGIxNWQwODU4MDliODAyNmU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMIaAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDcyODc=</field><field name="title" class="java.lang.String">rO0ABXQAV0luIEdvbGQgV2UgVHJ1c3Q6IFN0YXRlcyBQdXNoIEJ1bGxpb24gYXMgTGVnYWwgVGVuZGVyLCBTaG93IExpdHRsZSBGYWl0aCBpbiBGZWQgVGFjdGljcw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT3oA9yAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGJkN2MzOTIwMmZkN2Y0OTY=</field><field name="symbol" class="java.lang.String">rO0ABXQABEJLU0M=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT3tKjiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAo3Cj1wo9c</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAo5mZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAoKPXCj1wp</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAoPXCj1wo9</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAmqPXCj1wp</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAI/A==</field><field name="id" class="java.lang.String">rO0ABXQAEDI3MWQ2ZjM0MmQzMGMxMmI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mLNIAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExMjg0</field><field name="title" class="java.lang.String">rO0ABXQAPVRob3VzYW5kcyBvZiBHcmVla3MgSm9pbiBTdHJpa2UgQWdhaW5zdCBQdWJsaWMgU2VjdG9yIExheW9mZnM=</field><field name="content" class="java.lang.String">rO0ABXQPL1RoZSAyNC1ob3VyIGdlbmVyYWwgc3RyaWtlIGFnYWluc3QgYSBuZXcgc2NoZW1lIHRvIHRyYW5zZmVyIG9yIGZpcmUgc3RhdGUgd29ya2VycyBjb21lcyBhIGRheSBiZWZvcmUgcGFybGlhbWVudCB2b3RlcyBvbiBhIHNlcmllcyBvZiByZWZvcm1zIHRoYXQgbXVzdCBiZSBwYXNzZWQgYmVmb3JlIHRoZSBFdXJvcGVhbiBVbmlvbiBhbmQgSW50ZXJuYXRpb25hbCBNb25ldGFyeSBGdW5kIGNhbiBkaXNidXJzZSBtb3JlIGZpbmFuY2lhbCBhaWQuIE92ZXIgMzAsMDAwIGRlbW9uc3RyYXRvcnMg4oCUIGluY2x1ZGluZyBtdW5pY2lwYWwgcG9saWNlIGFuZCB0ZWFjaGVycyB0YXJnZXRlZCBpbiB0aGUgbGF5b2ZmIHNjaGVtZSDigJQgZ2F0aGVyZWQgaW4gdGhlIGNlbnRyYWwgc3F1YXJlIGJlZm9yZSBwYXJsaWFtZW50IGJlYXRpbmcgZHJ1bXMgYW5kIGJsb3dpbmcgd2hpc3RsZXMgaW4gb25lIG9mIHRoZSBiaWdnZXN0IGFudGktYXVzdGVyaXR5IHByb3Rlc3RzIGluIEdyZWVjZSB0aGlzIHllYXIuICJJdCBmZWVscyBsaWtlIEdyZWVjZSBpcyBkZWFkIGFuZCBub3cgdGhlIHZ1bHR1cmVzIGFyZSBmaWdodGluZyBvdmVyIGl0cyBjb3Jwc2UsIiBzYWlkIEVsZW5pIEZvdG9wb3Vsb3UsIDU4LCBhIHJldGlyZWQgdGVhY2hlciBhbmQgbW90aGVyIG9mIHR3by4gIkknbSBub3QgYW5ncnkgYW55bW9yZSwgSSBhbSBkaXNndXN0ZWQuIFdlIGhhdmUgdG8gZmlnaHQgYmFjay4iIEdyZWVrcyBhcmUgc3BsaXQgb3ZlciB3aGV0aGVyIHN0YXRlIHdvcmtlcnMg4oCUIHdob3NlIGpvYnMgYXJlIHByb3RlY3RlZCBieSB0aGUgY29uc3RpdHV0aW9uIOKAlCBzaG91bGQgYWxzbyBmZWVsIHRoZSBwYWluIG9mIGxheW9mZnMgdGhhdCBoYXZlIHJhdmFnZWQgdGhlIHByaXZhdGUgc2VjdG9yLiBCdXQgdmlydHVhbGx5IGFsbCBhZ3JlZSB0aGF0IEdyZWVrIHNvY2lldHkgY2Fubm90IGhhbmRsZSBhbnkgbW9yZSBzcGVuZGluZyBjdXRzIGFuZCB0YXggaGlrZXMg4oCUIGEgbWVzc2FnZSB0aGUgZ292ZXJubWVudCB3aWxsICByZWxheSB0byBHZXJtYW55J3MgZmluYW5jZSBtaW5pc3RlciwgRXVyb3BlJ3MgbGVhZGluZyBwcm9wb25lbnQgb2YgZWNvbm9taWMgYXVzdGVyaXR5LCB3aGVuIGhlIHZpc2l0cyBBdGhlbnMgbGF0ZXIgdGhpcyB3ZWVrLiBPdXRzaWRlIHBhcmxpYW1lbnQsIHByb3Rlc3RlcnMgY2hhbnRlZCAiTm8gbW9yZSBzYWNyaWZpY2VzIiBhbmQgd2F2ZWQgYmFubmVycyB0aGF0IHJlYWQgIkZpcmUgdGhlIHRyb2lrYSIgaW4gcmVmZXJlbmNlIHRvIHRoZSB0cmlvIG9mIEV1cm9wZWFuIENvbW1pc3Npb24sIEV1cm9wZWFuIENlbnRyYWwgQmFuayBhbmQgSU1GIHByb3BwaW5nIHVwIEdyZWVjZSB3aXRoIG92ZXIgMjAwIGJpbGxpb24gZXVyb3MgKCQyNjIuMzkgYmlsbGlvbikgaW4gYWlkLiBEb21lc3RpYyBmbGlnaHRzIHdlcmUgZGlzcnVwdGVkIGFmdGVyIGNpdmlsIGF2aWF0aW9uIHVuaW9ucyBzdGFnZWQgYSBmb3VyLWhvdXIgd29yayBzdG9wcGFnZSBhbmQgQXRoZW5zJ3MgbWFpbiB0b3VyaXN0IGF0dHJhY3Rpb24g4oCUIHRoZSBBY3JvcG9saXMg4oCUIHNodXQgZWFybHkuIENpdHkgdHJhbnNwb3J0IHdhcyBhbHNvIGFmZmVjdGVkLCB3aXRoIGJ1cyBhbmQgdHJvbGxleSBidXMgZHJpdmVzIGhvbGRpbmcgd29yayBzdG9wcGFnZXMgaW4gdGhlIG1vcm5pbmcgYW5kIGluIHRoZSBldmVuaW5nLiBUcmFpbnMgc3RvcHBlZCBydW5uaW5nIGFuZCB0YXggb2ZmaWNlcyBhbmQgbXVuaWNpcGFsIHNlcnZpY2VzIHJlbWFpbmVkIHNodXQuIEdhcmJhZ2UgY29sbGVjdG9ycywgYnVzIGRyaXZlcnMsIGJhbmsgZW1wbG95ZWVzIGFuZCBqb3VybmFsaXN0cyB3ZXJlIGFtb25nIG90aGVyIGdyb3VwcyBqb2luaW5nIHRoZSB3YWxrb3V0LiBPVVRSQUdFIFJlcHJlc2VudGluZyBhYm91dCAyLjUgbWlsbGlvbiB3b3JrZXJzLCB0aGUgdHdvIHB1YmxpYyBhbmQgcHJpdmF0ZSBzZWN0b3IgdW5pb25zIEFERURZIGFuZCBHU0VFIHRoYXQgY2FsbGVkIHRoZSBzdHJpa2UgaGF2ZSBicm91Z2h0IHdvcmtlcnMgdG8gdGhlIHN0cmVldHMgcmVwZWF0ZWRseSBzaW5jZSBHcmVlY2Ugc2xpZCBpbnRvIGEgZGVidCBjcmlzaXMgaW4gbGF0ZSAyMDA5LCB0aG91Z2ggc2V2ZXJhbCBwcm90ZXN0cyBoYXZlIGZpenpsZWQgdGhpcyB5ZWFyIGFtaWQgYSBncm93aW5nIHNlbnNlIG9mIHJlc2lnbmF0aW9uLiBQcm90ZXN0ZXJzIGFyZSBsaWtlbHkgdG8gYmUgb3V0IGluIGZvcmNlIGFnYWluIG9uIFRodXJzZGF5IGZvciB0aGUgdmlzaXQgb2YgR2VybWFuIEZpbmFuY2UgTWluaXN0ZXIgV29sZmdhbmcgU2NoYWV1YmxlLiBNYW55IEdyZWVrcyBibGFtZSBHZXJtYW55J3MgaW5zaXN0ZW5jZSBvbiBhdXN0ZXJpdHkgZm9yIHRoZWlyIGVjb25vbWljIGNyaXNpcyBhbmQgcGljdHVyZXMgbGFtcG9vbmluZyBDaGFuY2VsbG9yIEFuZ2VsYSBNZXJrZWwgYXMgYSBsYXR0ZXItZGF5IE5hemksIGZlc3Rvb25lZCB3aXRoIHN3YXN0aWthcywgYXJlIGNvbW1vbnBsYWNlLiBHcmVlY2UncyBsZW5kZXJzLCB3aG8gaGF2ZSBiYWlsZWQgaXQgb3V0IHR3aWNlIHdpdGggMjQwIGJpbGxpb24gZXVyb3Mgd29ydGggb2YgYWlkLCBhcmUgZnJ1c3RyYXRlZCB3aXRoIHRoZSBzbG93IHByb2dyZXNzIGl0IGhhcyBtYWRlIGluIHN0cmVhbWxpbmluZyBhIDYwMCwwMDAtc3Ryb25nIHB1YmxpYyBzZWN0b3Igd2lkZWx5IHNlZW4gYXMgY29ycnVwdCBhbmQgaW5lZmZpY2llbnQuIEFmdGVyIHJlcGVhdGVkbHkgbWlzc2luZyBkZWFkbGluZXMsIEF0aGVucyBpbiByZWNlbnQgd2Vla3MgaGFzIHNjcmFtYmxlZCB0byBwdXQgdG9nZXRoZXIgYSBsaXN0IG9mIDEyLDUwMCB3b3JrZXJzIHNsYXRlZCBmb3IgYSAibW9iaWxpdHkgcG9vbCIgaW4gd2hpY2ggdGhleSBhcmUgZ2l2ZW4gZWlnaHQgbW9udGhzIHRvIGZpbmQgd29yayBpbiBhbm90aGVyIGRlcGFydG1lbnQgb3IgZ2V0IGZpcmVkLiBTb21lIDI1LDAwMCB3b3JrZXJzIHdpbGwgYmUgcGxhY2VkIGluIHRoZSBzY2hlbWUgYnkgdGhlIGVuZCBvZiB0aGUgeWVhciwgc3Bhcmtpbmcgb3V0cmFnZSBhdCBhIHRpbWUgd2hlbiB1bmVtcGxveW1lbnQgc3RhbmRzIGF0IGFuIGFsbC10aW1lIGhpZ2ggb2YgMjcgcGVyY2VudC4gVGhlIHBsYW4gaGFzIHR1cm5lZCBpbnRvIHRoZSBsYXRlc3QgaGVhZGFjaGUgZm9yIFByaW1lIE1pbmlzdGVyIEFudG9uaXMgU2FtYXJhcydzIGZyYWdpbGUgY29hbGl0aW9uIGdvdmVybm1lbnQsIHdoaWNoIG5lYXJseSBjb2xsYXBzZWQgbGFzdCBtb250aCBhZnRlciBpdCBhYnJ1cHRseSBzaHV0IHRoZSBzdGF0ZSBicm9hZGNhc3RlciBFUlQgYW5kIGZpcmVkIGl0cyAyLDYwMCBzdGFmZi4gVGhlIGRlYmFjbGUgcHJvbXB0ZWQgYSBzbWFsbCBsZWZ0aXN0IHBhcnR5IHRvIGxlYXZlIHRoZSBnb3Zlcm5tZW50LCBsZWF2aW5nIFNhbWFyYXMgd2l0aCBhIG11Y2ggc21hbGxlciBiYWNraW5nIG9mIDE1NSBkZXB1dGllcyBpbiB0aGUgMzAwLXNlYXQgcGFybGlhbWVudC4gU3RpbGwsIHRoYXQgaXMgZXhwZWN0ZWQgdG8gYmUgZW5vdWdoIHRvIHNlY3VyZSBwYXNzYWdlIG9mIHRoZSByZWZvcm1zIGJpbGwgb24gV2VkbmVzZGF5LiBNYW55IHNhdyB0aGUgRVJUIGNsb3N1cmUgYXMgYSBtb3ZlIHRvIHBhdmUgdGhlIHdheSBmb3IgbWFzcyBmaXJpbmdzIGluIHRoZSBwdWJsaWMgc2VjdG9yLiAiVGhlIHBvbGljeSBvZiBtYXNzIGxheW9mZnMsIHRoZSBkaXNtYW50bGluZyBvZiBwdWJsaWMgaW5zdGl0dXRpb25zIHJlc3BvbnNpYmxlIGFuZCB0aGUgZGVtb2xpdGlvbiBvZiBhbnkgbm90aW9uIG9mIGxhYm91ciByaWdodHMgaW5hdWd1cmF0ZSBhIG5ldyB1bmRlbW9jcmF0aWMgZ292ZXJuYW5jZSBvZiB0aGUgY291bnRyeSwiIHRoZSBBREVEWSBwdWJsaWMgc2VjdG9yIHVuaW9uIHNhaWQu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT/l2XCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDRiOTVhNzQ4OTI3MzQwOTc=</field><field name="symbol" class="java.lang.String">rO0ABXQABE1TQ0E=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT/q/8yAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4NcKPXCj2</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4ZmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4B64UeuFI</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4QAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA2FHrhR64U</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAwcA==</field><field name="id" class="java.lang.String">rO0ABXQAEDdiNWVmMTg5YjAzNzBhYjE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mM0JAAAA==</field></document></documents><date>2015-05-07T12:09:27-0500</date></cacheEntry>
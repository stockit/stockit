<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0DZ5VUyBzdG9ja3MgcmFsbGllZCBmb3IgYSB0aGlyZCBkYXkgYXMgb3B0aW1pc20gb3ZlciBjb3Jwb3JhdGUgZWFybmluZ3Mgc3B1cnJlZCBhIHJlYm91bmQgZnJvbSBsYXN0IHdlZWtzIHNlbGxvZmYgQXBwbGUgSW5jIGFkdmFuY2VkIDIxIHBlcmNlbnQgYmVmb3JlIHJlcG9ydGluZyBxdWFydGVybHkgcmVzdWx0cyBIYXNicm8gSW5jIGNsaW1iZWQgNDkgcGVyY2VudCBhZnRlciByZXBvcnRpbmcgaGlnaGVyIHRoYW5lc3RpbWF0ZWQgcHJvZml0IGFuZCBTZWFycyBIb2xkaW5ncyBDb3JwIHN1cmdlZCAyMyBwZXJjZW50IGFmdGVyIHNheWluZyBpdCBwbGFucyB0byByYWlzZSBjYXBpdGFsIEludGVybmF0aW9uYWwgQnVzaW5lc3MgTWFjaGluZXMgQ29ycCBzbGlkIDcxIHBlcmNlbnQgY2xvc2luZyBhdCB0aGUgbG93ZXN0IHByaWNlIHNpbmNlIDIwMTEgYWZ0ZXIgYWJhbmRvbmluZyBhbiBlYXJuaW5ncyBmb3JlY2FzdCBmb3IgMjAxNSBUaGUgU3RhbmRhcmQgIFBvb3JzIDUwMCBJbmRleCByb3NlIDA5IHBlcmNlbnQgdG8gMTkwNDAyIGF0IDQgcG0gTmV3IFlvcmsgdGltZSBUaGUgaW5kZXggaGFzIGZhbGxlbiBmb3IgdGhlIHBhc3QgZm91ciB3ZWVrcyBhbmQgaXMgZG93biA1MyBwZXJjZW50IHNpbmNlIFNlcHQgMTggVGhlIERvdyBKb25lcyBJbmR1c3RyaWFsIEF2ZXJhZ2UgYWRkZWQgMTkyNiBwb2ludHMgb3IgMDEgcGVyY2VudCB0byAxNjM5OTY3IFRoZSBOYXNkYXEgQ29tcG9zaXRlIEluZGV4IGFkZGVkIDE0IHBlcmNlbnQgSXRzIGFsbCBhYm91dCBlYXJuaW5ncyBzYWlkIEthcnluIENhdmFuYXVnaCB0aGUgTmV3IFlvcmtiYXNlZCBzZW5pb3IgbWFya2V0IHN0cmF0ZWdpc3QgYXQgVm95YSBJbnZlc3RtZW50IE1hbmFnZW1lbnQgTExDIFZveWEgb3ZlcnNlZXMgMjE1IGJpbGxpb24gWWVzIElCTSBlYXJuaW5ncyB3ZXJlIGEgYmlnIG1pc3MgYnV0IG90aGVyIGNvbXBhbnkgZWFybmluZ3MgYXJlIGNvbWluZyBpbiBiZXR0ZXIgdGhhbiBleHBlY3RlZCBhbmQgdGhhdHMgZ29vZCBuZXdzIFRoZSBncm93dGggcmF0ZSBmb3IgdGhlIHRoaXJkIHF1YXJ0ZXIgaGFzIGJlZW4gcmF0Y2hldGVkIHVwIGFuZCB0aGF0cyBzb21lIGdvb2QgbmV3cyBmb3IgdGhlIG1hcmtldCBQcm9maXQgZm9yIFNQIDUwMCBjb21wYW5pZXMgcHJvYmFibHkgcm9zZSA1OSBwZXJjZW50IGluIHRoZSB0aGlyZCBxdWFydGVyIGEgZm9yZWNhc3QgdGhhdHMgYmVlbiByZXZpc2VkIHVwd2FyZCBmcm9tIGFuIGluY3JlYXNlIG9mIDQ4IHBlcmNlbnQgYXMgb2YgT2N0IDEwIGFuZCBzYWxlcyBpbmNyZWFzZWQgNCBwZXJjZW50IGFjY29yZGluZyB0byBhbmFseXN0cyBwcm9qZWN0aW9ucyBjb21waWxlZCBieSBCbG9vbWJlcmcgU29saWQgRm9vdGluZyBUaGUgc3RhdGUgb2YgY29ycG9yYXRlIGVhcm5pbmdzIGluIHRoZSBVUyBpcyBvbiBzb2xpZCBmb290aW5nIEFkYW0gUGFya2VyIGNoaWVmIFVTIGVxdWl0eSBzdHJhdGVnaXN0IGF0IE1vcmdhbiBTdGFubGV5IGluIE5ldyBZb3JrIHdyb3RlIGluIGEgcmVwb3J0IHRvZGF5IEFwcGxlIGNsaW1iZWQgMjEgcGVyY2VudCB0byA5OTc2IFRoZSB3b3JsZHMgbGFyZ2VzdCBjb21wYW55IGJ5IG1hcmtldCB2YWx1ZSByZXBvcnRzIHF1YXJ0ZXJseSBlYXJuaW5ncyBhZnRlciBtYXJrZXRzIGNsb3NlIHRvZGF5IEFuYWx5c3RzIGVzdGltYXRlIHRoZSBpUGhvbmUgbWFrZXJzIHByb2ZpdCByb3NlIDEwIHBlcmNlbnQgSGFzYnJvIHJhbGxpZWQgNDkgcGVyY2VudCB0byA1NjUxIENvbnN1bWVyIGRpc2NyZXRpb25hcnkgc3RvY2tzIGluIHRoZSBTUCA1MDAgYWRkZWQgMTQgcGVyY2VudCBJQk0gbG9zdCA3MSBwZXJjZW50IHRoZSBiaWdnZXN0IGRlY2xpbmUgc2luY2UgQXByaWwgMjAxMyB0byAxNjkxMCBUaGUgY29tcGFueSBzYWlkIGl0IHdpbGwgcHJvdmlkZSBhbiB1cGRhdGUgb24gaXRzIHByb2plY3Rpb25zIGluIEphbnVhcnkgZGl0Y2hpbmcgYSBmaXZleWVhciBwbGFuIHRvIGJvb3N0IHByb2ZpdCBXaXRoIHRlY2hub2xvZ3kgY3VzdG9tZXJzIG1vdmluZyBmcm9tIG93bmluZyBoYXJkd2FyZSB0byBzdG9yaW5nIGRhdGEgaW4gdGhlIGNsb3VkIElCTSBpcyBub3cgY3V0dGluZyBtb3JlIGpvYnMgcmVkdWNpbmcgaXRzIGZvcmVjYXN0IGZvciBmcmVlIGNhc2ggZmxvdyBhbmQgaGFuZGluZyBvdmVyIGFuIHVucHJvZml0YWJsZSBjaGlwIHVuaXQgdG8gR2xvYmFsZm91bmRyaWVzIEluYyBBaXJsaW5lcyBSYWxseSBUaGUgQmxvb21iZXJnIFVTIEFpcmxpbmVzIEluZGV4IGp1bXBlZCA1MiBwZXJjZW50IFRoZSBEb3cgSm9uZXMgVHJhbnNwb3J0YXRpb24gQXZlcmFnZSBhZGRlZCAxIHBlcmNlbnQgYSBmaWZ0aCBkYXkgb2YgZ2FpbnMgVGhlIGF2ZXJhZ2UgcHJpY2Ugb2YgcmVndWxhciBnYXNvbGluZSBhdCB0aGUgcHVtcCBmZWxsIHRvIDMxMCBhIGdhbGxvbiB5ZXN0ZXJkYXkgdGhlIGxvd2VzdCBzaW5jZSBKYW51YXJ5IDIwMTEgYW5kIGRvd24gNTcgY2VudHMgc2luY2UgdGhlIGVuZCBvZiBKdW5lIGFjY29yZGluZyB0byBBQUEgdGhlIGxhcmdlc3QgVVMgYXV0byBncm91cCBTdW5FZGlzb24gSW5jIGp1bXBlZCA3NyBwZXJjZW50IHRvIDE3OTAgYW5kIFRlcnJhZm9ybSBQb3dlciBJbmMgc3VyZ2VkIDExIHBlcmNlbnQgdG8gMjc3NyBEYXZpZCBFaW5ob3JuIHByZXNpZGVudCBvZiBHcmVlbmxpZ2h0IENhcGl0YWwgSW5jIHJlY29tbWVuZGVkIGludmVzdG9ycyBidXkgdGhlIHR3byByZW5ld2FibGUgcG93ZXIgY29tcGFuaWVzIGFjY29yZGluZyB0byB0d28gcGVvcGxlIHdpdGgga25vd2xlZGdlIG9mIHRoZSBtYXR0ZXIgRWluaG9ybiB3aG8gcnVucyB0aGUgMTAgYmlsbGlvbiBHcmVlbmxpZ2h0IHJlY29tbWVuZGVkIHRoZSBzdG9ja3MgYXQgdGhlIFJvYmluIEhvb2QgSW52ZXN0b3JzIENvbmZlcmVuY2UgYWNjb3JkaW5nIHRvIHRoZSBwZW9wbGUgd2hvIGF0dGVuZGVkIHRoZSBldmVudCBpbiBOZXcgWW9yayB0b2RheSB3aG8gYXNrZWQgbm90IHRvIGJlIGlkZW50aWZpZWQgYmVjYXVzZSB0aGUgcHJlc2VudGF0aW9uIHdhcyBwcml2YXRlIGFuZCBjbG9zZWQgdG8gbWVkaWEgU2VhcnMgSG9sZGluZ3MgQ29ycCBqdW1wZWQgMjMgcGVyY2VudCB0byAzNDk2IFRoZSByZXRhaWxlciBwbGFucyB0byByYWlzZSBjYXBpdGFsIGJ5IG9mZmVyaW5nIHNoYXJlaG9sZGVycyA2MjUgbWlsbGlvbiBvZiBub3RlcyBwbHVzIHdhcnJhbnRzIHRvIGJ1eSBhZGRpdGlvbmFsIHN0b2NrIGFuIGF0dGVtcHQgdG8gZ2l2ZSB0aGUgY29tcGFueSB0aW1lIHRvIHJldHVybiB0byBwcm9maXRhYmlsaXR5IFRlc29ybyBDb3JwIHJhbGxpZWQgODQgcGVyY2VudCB0aGUgYmlnZ2VzdCBnYWluIGluIHRoZSBTdGFuZGFyZCAgUG9vcnMgNTAwIEluZGV4IHRvIDY1NDMgYWZ0ZXIgYSBwYXJ0bmVyc2hpcCBpdCBjb250cm9scyBhZ3JlZWQgdG8gYnV5IFFFUCBSZXNvdXJjZXMgSW5jcyBuYXR1cmFsZ2FzIHBpcGVsaW5lIGFuZCBwcm9jZXNzaW5nIHVuaXQgZm9yIDI1IGJpbGxpb250AARyb3dzdXEAfgAKAAAAAXQAATV0AAVzdGFydHVxAH4ACgAAAAF0AAEwdAACZmx1cQB+AAoAAAABdABvYXJ0aWNsZUlkLHRpdGxlLGNvbnRlbnQsZGF0ZSxzdG9ja0hpc3RvcnlJZCxzeW1ib2wsaGlzdG9yeURhdGUsb3BlbixoaWdoLGxvdyxjbG9zZSxhZGpDbG9zZSx2b2x1bWUsaWQsX3ZlcnNpb25fdAACZnF1cQB+AAoAAAABdAA6aGlzdG9yeURhdGU6WzIwMTAtMDYtMTFUMDA6MDA6MDBaIFRPIDIwMTMtMDctMzBUNTk6NTk6NTlaXXgAcA==</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDEwODE=</field><field name="title" class="java.lang.String">rO0ABXQAOURvdyBDaGFsa3MgVXAgQmlnZ2VzdCBHYWluIGluIGEgTW9udGggb24gSG9wZXMgZm9yIEV1cm9wZQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATjBp9yAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGNlOGNkYTJmOGVmZTA5MTI=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0VTSQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATjGzjiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBFiPXCj1wp</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBGKj1wo9cK</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBFdwo9cKPX</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBFtwo9cKPX</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBFtwo9cKPX</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAm0xA==</field><field name="id" class="java.lang.String">rO0ABXQAEDkyNzhhZGFmZGI2NzQ5ZGU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMPfAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQAAzczMg==</field><field name="title" class="java.lang.String">rO0ABXQAL1MmUCA1MDAgQ2FwcyBCaWdnZXN0IDItRGF5IEFkdmFuY2UgU2luY2UgQXVndXN0</field><field name="content" class="java.lang.String">rO0ABXQW3VUuUy4gc3RvY2tzIHJhbGxpZWQsIGdpdmluZyB0aGUgU3RhbmRhcmQgJiBQb29y4oCZcyA1MDAgSW5kZXggaXRzIGJpZ2dlc3QgdHdvLWRheSBnYWluIGluIG1vcmUgdGhhbiBhIG1vbnRoLCBhcyBlY29ub21pYyBkYXRhIHRvcHBlZCBlc3RpbWF0ZXMgYW5kIGludmVzdG9ycyBzcGVjdWxhdGVkIEV1cm9wZSB3aWxsIGFjdCB0byBjb250YWluIHRoZSByZWdpb27igJlzIGRlYnQgY3Jpc2lzLiBBbGNvYSBJbmMuIGFuZCBDaXNjbyBTeXN0ZW1zIEluYy4gYWRkZWQgYXQgbGVhc3QgMi43IHBlcmNlbnQgdG8gcGFjZSBnYWlucyBhbW9uZyBjb21wYW5pZXMgbW9zdC10aWVkIHRvIHRoZSBlY29ub215LiBGaW5hbmNpYWwgc3RvY2tzIHJlYm91bmRlZCBhcyBNb3JnYW4gU3RhbmxleSBqdW1wZWQgMy40IHBlcmNlbnQuIE1vbnNhbnRvIENvLiBjbGltYmVkIDUuMiBwZXJjZW50IGFzIHRoZSB3b3JsZOKAmXMgbGFyZ2VzdCBzZWVkIGNvbXBhbnkgZm9yZWNhc3QgaGlnaGVyLXRoYW4tZXhwZWN0ZWQgZWFybmluZ3MuIFlhaG9vISBJbmMuIHN1cmdlZCAxMCBwZXJjZW50LCB0aGUgbW9zdCBzaW5jZSAyMDA4LCBhZnRlciBhIHJlcG9ydCB0aGF0IE1pY3Jvc29mdCBDb3JwLiBtYXkgbWFrZSBhIGJpZC4gQXBwbGUgSW5jLiBnYWluZWQgMS41IHBlcmNlbnQsIHByZXZlbnRpbmcgdGhlIGxvbmdlc3QgZGVjbGluZSBzaW5jZSAxOTk4LiBUaGUgUyZQIDUwMCBhZHZhbmNlZCAxLjggcGVyY2VudCB0byAxLDE0NC4wNCBhdCA0IHAubS4gTmV3IFlvcmsgdGltZSwgcmFsbHlpbmcgNC4xIHBlcmNlbnQgaW4gdHdvIGRheXMuIFRoZSBEb3cgSm9uZXMgSW5kdXN0cmlhbCBBdmVyYWdlIGFkZGVkIDEzMS4yNCwgb3IgMS4yIHBlcmNlbnQsIHRvIDEwLDkzOS45NS4g4oCcV2UgYXJlIGhlYWRlZCBmb3IgdGhlIG1vdGhlciBvZiBhbGwgY291bnRlci10cmVuZCByYWxsaWVzIGluIGVxdWl0aWVzLOKAnSBzYWlkIE1pY2hhZWwgQS4gR2F5ZWQsIHRoZSBjaGllZiBpbnZlc3RtZW50IHN0cmF0ZWdpc3QgYXQgUGVuc2lvbiBQYXJ0bmVycyBMTEMgaW4gTmV3IFlvcmsuIOKAnFdl4oCZdmUgc2VlbiB0cmVtZW5kb3VzIHBhbmljLiBUaGVyZeKAmXMgbGlrZWx5IHRvIGJlIHNvbWUga2luZCBvZiByZWV2YWx1YXRpb24gb2YgdGhlIGZpbmFuY2lhbCBzZWN0b3IuIEl0IGNvdWxkIGJlIGJlY2F1c2Ugb2YgdGhlIHJlYWxpemF0aW9uIHRoYXQgd2XigJlyZSBnb2luZyB0byBoYXZlIHNvbWUgc29ydCBvZiByZWNhcGl0YWxpemF0aW9uIGluIEV1cm9wZS4gSXQgY291bGQgdmVyeSB3ZWxsIGJlIHRoYXQgd2Ugc2F3IHRoZSBib3R0b20uIiBTdG9ja3MgcmV2ZXJzZWQgbG9zc2VzIHllc3RlcmRheSwgcmFsbHlpbmcgaW4gdGhlIGZpbmFsIGhvdXIgb2YgdHJhZGluZywgYW1pZCBzcGVjdWxhdGlvbiBFdXJvcGVhbiBVbmlvbiBvZmZpY2lhbHMgYXJlIGV4YW1pbmluZyBob3cgdG8gcmVjYXBpdGFsaXplIHRoZSByZWdpb27igJlzIGJhbmtzLiBUaGUgUyZQIDUwMCB3YXMgb24gdGhlIGJyaW5rIG9mIGEgYmVhciBtYXJrZXQgZHVyaW5nIHRoZSB3b3JzdCBvZiB5ZXN0ZXJkYXnigJlzIGxvc3NlcywgZmFsbGluZyBtb3JlIHRoYW4gMjAgcGVyY2VudCBmcm9tIGFuIEFwcmlsIHBlYWsuIFRoZSBpbmRleCBpcyBub3cgZG93biAxNiBwZXJjZW50IHNpbmNlIEFwcmlsIDI5LCBvbiBjb25jZXJuIGFib3V0IEV1cm9wZeKAmXMgZGVidCBjcmlzaXMuIOKAmEJhZCBCYW5r4oCZIFRoZSBJbnRlcm5hdGlvbmFsIE1vbmV0YXJ5IEZ1bmQgc2FpZCBFVSBvZmZpY2lhbHMgYXJlIHdvcmtpbmcgb24gcGxhbnMgdG8gYm9vc3QgYmFuayBjYXBpdGFsLiBGcmFuY2UgYW5kIEJlbGdpdW0gc2FpZCBhIOKAmOKAmGJhZCBiYW5r4oCdIHdpbGwgYmUgc2V0IHVwIHRvIGhvbGQgRGV4aWEgU0HigJlzIHRyb3VibGVkIGFzc2V0cy4gR2VybWFuIENoYW5jZWxsb3IgQW5nZWxhIE1lcmtlbCBzYWlkIEV1cm9wZeKAmXMgcmVzY3VlIGZ1bmQgd2lsbCBvbmx5IGJlIHVzZWQgYXMgYSBsYXN0IHJlc29ydCB0byBzYXZlIGJhbmtzIGFuZCB0aGF0IGludmVzdG9ycyBtYXkgaGF2ZSB0byB0YWtlIGRlZXBlciBsb3NzZXMgYXMgcGFydCBvZiBhIEdyZWVrIHJlc2N1ZS4gSW52ZXN0b3JzIGFsc28gd2VpZ2hlZCBlY29ub21pYyByZXBvcnRzIHRoYXQgdG9wcGVkIGZvcmVjYXN0cy4gUHJpdmF0ZSBlbXBsb3ltZW50IGV4cGFuZGVkIGxhc3QgbW9udGgsIHdoaWxlIHRoZSBJbnN0aXR1dGUgZm9yIFN1cHBseSBNYW5hZ2VtZW504oCZcyBub24tbWFudWZhY3R1cmluZyBpbmRleCBmZWxsIHRvIDUzLiBUaGUgbWVkaWFuIGZvcmVjYXN0IG9mIDc1IGVjb25vbWlzdHMgc3VydmV5ZWQgYnkgQmxvb21iZXJnIE5ld3Mgd2FzIGZvciBhIGRyb3AgdG8gNTIuOC4gT3JkZXJzIHBpY2tlZCB1cC4g4oCYVGhyZWUgVXAgQ2xvc2Vz4oCZIEEgcmFsbHkgaW4gdGhlIFMmUCA1MDAgdG9tb3Jyb3cgd291bGQgcmVwcmVzZW50IOKAnHRocmVlIHVwIGNsb3NlcyBvZmYgYSBsb3cs4oCdIGEgcGF0dGVybiB0aGF0IG1heSByZXN1bHQgaW4gYSDigJxzaGFycCBkZWNsaW5l4oCdIGEgZGF5IGxhdGVyLCBhY2NvcmRpbmcgdG8gVG9tIERlTWFyaywgdGhlIGNyZWF0b3Igb2YgaW5kaWNhdG9ycyBmb3IgaWRlbnRpZnlpbmcgdHVybmluZyBwb2ludHMgaW4gc2VjdXJpdGllcy4g4oCcUGVvcGxlIGFyZSBub3Qgc21hcnQgb2ZmIG9mIG1hcmtldCBib3R0b21zLOKAnSBEZU1hcmsgc2FpZCBpbiBhbiBpbnRlcnZpZXcgb24gQmxvb21iZXJnIFRlbGV2aXNpb24uIOKAnElmIHlvdSBkbyBnZXQgdGhyZWUgdXAgY2xvc2VzIG9mZiBhIGxvdywgd2XigJlsbCBzZWUgYSB2YWN1dW0gaW4gdGhlIG1hcmtldCBhbmQgdGhhdCB2YWN1dW0gd2lsbCBhY2NlbnQgdGhlIGRlY2xpbmUgZXZlbiBtb3JlIHRoYW4gdGhlIHVwc2lkZS7igJ0gRGVNYXJrLCB0aGUgZm91bmRlciBvZiBNYXJrZXQgU3R1ZGllcyBMTEMsIHNhaWQgb24gU2VwdC4gMjIgdGhhdCB0aGUgUyZQIDUwMCBtaWdodCBkcm9wIGFzIGxvdyBhcyAxLDA3NiBiZWZvcmUgaW52ZXN0b3IgcGFuaWMgYWJhdGVkIGFuZCBzdG9ja3MgYWR2YW5jZWQuIFRoZSBiZW5jaG1hcmsgaW5kZXggZm9yIEFtZXJpY2FuIGVxdWl0aWVzIGZlbGwgeWVzdGVyZGF5IHRvIDEsMDc0Ljc3IGFuZCBoYXMgZ2FpbmVkIDYuNCBwZXJjZW50IHNpbmNlLiBUaGUgTW9yZ2FuIFN0YW5sZXkgQ3ljbGljYWwgSW5kZXggb2YgY29tcGFuaWVzIG1vc3QtdGllZCB0byB0aGUgZWNvbm9teSByb3NlIDIuNyBwZXJjZW50IHRvZGF5LiBUaGUgRG93IEpvbmVzIFRyYW5zcG9ydGF0aW9uIEF2ZXJhZ2UsIGEgcHJveHkgZm9yIHRoZSBlY29ub215LCBhZGRlZCAyLjcgcGVyY2VudC4gQWxjb2EsIHRoZSBsYXJnZXN0IFUuUy4gYWx1bWludW0gcHJvZHVjZXIsIGdhaW5lZCAyLjcgcGVyY2VudCB0byAkOS4zNy4gQ2lzY28gaW5jcmVhc2VkIDMuNyBwZXJjZW50IHRvICQxNi4xNi4gQmFua3MgUmVib3VuZCBUaGUgS0JXIEJhbmsgSW5kZXggb2YgMjQgc3RvY2tzIHJhbGxpZWQgMS4xIHBlcmNlbnQgYWZ0ZXIgZmFsbGluZyBhcyBtdWNoIGFzIDIuNSBwZXJjZW50LiBNb3JnYW4gU3RhbmxleSBqdW1wZWQgMy40IHBlcmNlbnQgdG8gJDE0LjQ4LiBCYW5rIG9mIEFtZXJpY2EgQ29ycC4gYWRkZWQgMC4yIHBlcmNlbnQgdG8gJDUuNzcgYWZ0ZXIgZmFsbGluZyBhcyBtdWNoIGFzIDQuMyBwZXJjZW50LiBNb25zYW50byBhZHZhbmNlZCA1LjIgcGVyY2VudCB0byAkNjYuMjUuIFRoZSBjb21wYW55IGZvcmVjYXN0IGhpZ2hlci10aGFuLWZvcmVjYXN0IGZpc2NhbCBmaXJzdC1xdWFydGVyIHByb2ZpdCBhcyBMYXRpbiBBbWVyaWNhbiBmYXJtZXJzIGluY3JlYXNlIGRlbWFuZCBmb3IgZ2VuZXRpY2FsbHkgbW9kaWZpZWQgY3JvcHMuIFByb2ZpdCB3aWxsIGJlIDEwIGNlbnRzIHRvIDE1IGNlbnRzIGEgc2hhcmUgaW4gdGhlIHRocmVlIG1vbnRocyB0aGF0IGJlZ2FuIFNlcHQuIDEuIEZpdmUgYW5hbHlzdHMgc3VydmV5ZWQgYnkgQmxvb21iZXJnIGVzdGltYXRlZCBlYXJuaW5ncyBvZiA4IGNlbnRzLCBvbiBhdmVyYWdlLiBZYWhvbyBzdXJnZWQgMTAgcGVyY2VudCB0byAkMTUuOTIuIE1pY3Jvc29mdCBtaWdodCBlbmxpc3QgYSBwYXJ0bmVyIHRvIGdvIGFmdGVyIFlhaG9vLCBSZXV0ZXJzIHJlcG9ydGVkIHRvZGF5LCBjaXRpbmcgc291cmNlcyBjbG9zZSB0byB0aGUgc2l0dWF0aW9uLiBZYWhvbyBzcHVybmVkIGEgJDQ3LjUgYmlsbGlvbiBiaWQgZnJvbSBNaWNyb3NvZnQgaW4gMjAwOC4gTm8gZGVjaXNpb24gaGFzIGJlZW4gbWFkZSB0byBjb21lIGJhY2sgdG8gdGhlIG5lZ290aWF0aW5nIHRhYmxlLCBhbmQgdGhlcmUgYXJlIGludGVybmFsIGRpdmlzaW9ucyBhdCBNaWNyb3NvZnQgb3ZlciB0aGUgaWRlYSwgUmV1dGVycyBzYWlkLiBBcHBsZSwgdGhlIHdvcmxk4oCZcyBsYXJnZXN0IHRlY2hub2xvZ3kgY29tcGFueSwgcm9zZSAxLjUgcGVyY2VudCB0byAkMzc4LjI1LCBoYWx0aW5nIGEgc3RyaW5nIG9mIGNvbnNlY3V0aXZlIGRlY2xpbmVzLiBUaGUgc3RvY2sgZmVsbCA3LjkgcGVyY2VudCBvdmVyIHRoZSBwcmV2aW91cyBzZXZlbiBkYXlzLiBBbmFseXN0IENoYW5nZXMgU29tZSBzdG9ja3MgbW92ZWQgb24gYW5hbHlzdHPigJkgcmVjb21tZW5kYXRpb25zLiBXYWx0IERpc25leSBDby4sIHRoZSBsYXJnZXN0IHRoZW1lLXBhcmsgb3BlcmF0b3IsIGFkZGVkIDUuNSBwZXJjZW50LCB0aGUgbW9zdCBpbiB0aGUgRG93LCB0byAkMzEuNTEgYWZ0ZXIgYmVpbmcgcmFpc2VkIHRvIOKAnGJ1eeKAnSBmcm9tIOKAnGhvbGTigJ0gYXQgQ2l0aWdyb3VwIEluYy4gQXBvbGxvIEdyb3VwIEluYy4sIHRoZSBiaWdnZXN0IFUuUy4gZm9yLXByb2ZpdCBjb2xsZWdlLCBnYWluZWQgOC41IHBlcmNlbnQgdG8gJDQyLjIyIGFzIENyZWRpdCBTdWlzc2UgR3JvdXAgQUcgYm9vc3RlZCBpdHMgcmF0aW5nIHRvIOKAnG91dHBlcmZvcm3igJ0gZnJvbSDigJxuZXV0cmFsLuKAnSBUaGUgVS5TLiBzdG9jayBtYXJrZXQgcHJvYmFibHkgaGl0IGJvdHRvbSB5ZXN0ZXJkYXkgYW5kIHdpbGwgcmVib3VuZCBhcyBpbnZlc3RvcnMgcmVmb2N1cyBvbiBmdW5kYW1lbnRhbHMgYW5kIGVhcm5pbmdzIGFmdGVyIHdlZWtzIG9mIGRpc3RyYWN0aW9uIGZyb20gdGhlIEV1cm9wZWFuIGRlYnQgY3Jpc2lzLCBPcHBlbmhlaW1lciAmIENvLuKAmXMgQnJpYW4gQmVsc2tpIHNhaWQuIFRoZSBVLlMuIHN0b2NrIG1hcmtldCBpcyBwb3NpdGlvbmVkIGZvciBhIHJhbGx5IGFmdGVyIHdlZWtzIG9mIGRlZmVuc2l2ZSBwb3NpdGlvbmluZyBhbmQgaW5kaXNjcmltaW5hdGUgc2VsbGluZyB0aGF0IGhhcyBsZWQgdG8gcmVjb3JkIGRlY2xpbmVzLCBCZWxza2ksIGNoaWVmIGludmVzdG1lbnQgc3RyYXRlZ2lzdCBhdCBPcHBlbmhlaW1lciBpbiBOZXcgWW9yaywgc2FpZCBvbiBCbG9vbWJlcmcgVGVsZXZpc2lvbuKAmXMg4oCcSW5zaWRlIFRyYWNrIFdpdGggRGVpcmRyZSBCb2x0b24gYW5kIEVyaWsgU2NoYXR6a2VyLuKAnSBJbnZlc3RvcnMgaGF2ZSBiZWNvbWUgb3Zlcmx5IGZvY3VzZWQgb24gdGhlIGRhaWx5IG5ld3Mgb24gdGhlIEdyZWVrIHNvdmVyZWlnbiBkZWJ0IGNyaXNpcyBhbmQgaGF2ZSBmb3Jnb3R0ZW4gdGhhdCBlYXJuaW5ncyBkcml2ZSBzdG9jayBwcmljZXMsIG5vdCBtYWNyb2Vjb25vbWljIG5ld3MsIGhlIHNhaWQuIOKAnEVhcm5pbmdzIHdpbGwgc3VycHJpc2UgdG8gdGhlIHVwc2lkZSAtLSBlYXJuaW5ncyBlc3RpbWF0ZXMgaGF2ZSBiZWVuIHNsYXNoZWQgdG9vIG11Y2gs4oCdIEJlbHNraSBzYWlkLiAg4oCcVGhlIG1hcmtldOKAmXMgZ29pbmcgdG8gZ2V0IHNxdWVlemVkIGFuZCB3ZeKAmXJlIGdvaW5nIHRvIGhhdmUgYSBuaWNlIHllYXItZW5kIHJhbGx5LuKAnQ==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATLSc9iAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDc3NzU1MzY4NGE4NTAyYWU=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lDQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATLXmjSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwjMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwwAAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwczMzMzMz</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwwAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAs5mZmZmZm</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAA2sA==</field><field name="id" class="java.lang.String">rO0ABXQAEDI5MTNiYzM4ZGMwMTM0MGU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mK6wAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExNzky</field><field name="title" class="java.lang.String">rO0ABXQAMFN0b2NrcyBSYWxseSBvbiBFQ0IgUmF0ZSBDdXQsIE9wdGltaXNtIG9uIEdyZWVjZQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATNnzESAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDU4ODA0N2U1M2QwYmMwMzM=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0FORg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATNs8qCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBNXXCj1wo9</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBNuZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBMh64UeuFI</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBNGuFHrhR7</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBLVcKPXCj2</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAFXu1A==</field><field name="id" class="java.lang.String">rO0ABXQAEGJiOThhMmNmODNiMDdlZmM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKSrAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExODU1</field><field name="title" class="java.lang.String">rO0ABXQANEV1cm9wZWFuIFN0b2NrcyBIaXQgMTctTW9udGggSGlnaCBvbiBVUyBCdWRnZXQgSG9wZXM=</field><field name="content" class="java.lang.String">rO0ABXQXKUV1cm9wZWFuIHN0b2NrcyByYWxsaWVkIHRvIHRoZWlyIGhpZ2hlc3QgaW4gMTcgbW9udGhzIFRodXJzZGF5IGFzIG9wdGltaXNtIGdyZXcgdGhhdCBVLlMuIFByZXNpZGVudCBCYXJhY2sgT2JhbWEgd2lsbCByZWFjaCBhbiBhZ3JlZW1lbnQgd2l0aCBDb25ncmVzcyBvbiBhIG5ldyBidWRnZXQuIFJpbyBUaW50byBHcm91cCBnYWluZWQgNSBwZXJjZW50IGFmdGVyIHRoZSB3b3JsZOKAmXMgc2Vjb25kLSBsYXJnZXN0IG1pbmluZyBjb21wYW55IHNhaWQgaXQgd2lsbCByZWR1Y2UgY29zdHMgYnkgJDUgYmlsbGlvbiBkdXJpbmcgMjAxMy4gSW52ZW5zeXMgUGxjIHN1cmdlZCA5LjEgcGVyY2VudCBhcyBSQkMgQ2FwaXRhbCB3cm90ZSB0aGF0IHRoZSBjb21wYW55IG1heSBiZSBhY3F1aXJlZCBhZnRlciBzZWxsaW5nIGl0cyByYWlsIHVuaXQgdG8gU2llbWVucyBBRy4gRWxlY3RyaWNpdGUgZGUgRnJhbmNlIFNBIHNsaWQgMS4zIHBlcmNlbnQgYXMgdGhlIGNvdW50cnnigJlzIGhpZ2hlc3QgY291cnQgcnVsZWQgdGhhdCB0aGUgdXRpbGl0eSBoYXMgb3ZlcmNoYXJnZWQgaG91c2Vob2xkcy4gVGhlIFN0b3h4IEV1cm9wZSA2MDAgSW5kZXggYWR2YW5jZWQgMS4xIHBlcmNlbnQgdG8gMjc2LjI0IGF0IDQ6MzAgcC5tLiBpbiBMb25kb24sIGl0cyBoaWdoZXN0IGxldmVsIHNpbmNlIEp1bmUgMSwgMjAxMS4gVGhlIGVxdWl0eSBiZW5jaG1hcmsgZXJhc2VkIGEgZGVjbGluZSBvZiBhcyBtdWNoIGFzIDAuNiBwZXJjZW50IFdlZG5lc2RheSBhcyBSZXB1YmxpY2FuIEhvdXNlIFNwZWFrZXIgSm9obiBCb2VobmVyIGV4cHJlc3NlZCBvcHRpbWlzbSB0aGF0IENvbmdyZXNzIHdpbGwgcmVhY2ggYSBkZWFsIHRvIHByZXZlbnQgdGhlIHNvLWNhbGxlZCBmaXNjYWwgY2xpZmYgY29taW5nIGludG8gZm9yY2UuIOKAnFRoZSBQcmVzaWRlbnQgaXMgb24gc3Ryb25nIGdyb3VuZCwgaGF2aW5nIGRlZmVhdGVkIGhpcyBSZXB1YmxpY2FuIGNoYWxsZW5nZXIsIGFuZCB0aGUgSG91c2UgU3BlYWtlciBpcyBzb3VuZGluZyBjb25jaWxpYXRvcnkgdG9vLOKAnSBzYWlkIE1hbmlzaCBTaW5naCwgd2hvIGhlbHBzIG1hbmFnZSAkMiBiaWxsaW9uIGFzIGhlYWQgb2YgaW52ZXN0bWVudCBhdCBDcm9zc2JyaWRnZSBDYXBpdGFsIExMUCBpbiBMb25kb24uIOKAnEEgZGVhbCBpcyBhIGNlcnRhaW50eS4gTmV3cyBvbiB0aGUgZmlzY2FsIGNsaWZmIGhhcyBiZWVuIGluY3JlbWVudGFsbHkgcG9zaXRpdmUsIHNvIGludmVzdG9ycyBhcmUgaW5jcmVhc2luZ2x5IG9wdGltaXN0aWMgdG9vLuKAnSBGaXNjYWwgQ2xpZmYgT2JhbWEgc2FpZCBhZnRlciBFdXJvcGVhbiBtYXJrZXRzIGNsb3NlZCB5ZXN0ZXJkYXkgdGhhdCB0aGUgdHdvIHBvbGl0aWNhbCBwYXJ0aWVzIGNhbiBhZ3JlZSBvbiBhIGZyYW1ld29yayBmb3IgYSBidWRnZXQgZGVhbCB0byBwcmV2ZW50ICQ2MDcgYmlsbGlvbiBvZiBhdXRvbWF0aWMgdGF4IGluY3JlYXNlcyBhbmQgc3BlbmRpbmcgY3V0cyBmcm9tIGNvbWluZyBpbnRvIGVmZmVjdCBpbiBKYW51YXJ5LiDigJxNeSBob3BlIGlzIHRvIGdldCB0aGlzIGRvbmUgYmVmb3JlIENocmlzdG1hcyzigJ0gaGUgc2FpZCBhdCB0aGUgV2hpdGUgSG91c2UuIEEgQmxvb21iZXJnIEdsb2JhbCBQb2xsIGNvbmR1Y3RlZCBvbiBOb3YuIDI3IGZvdW5kIHRoYXQgdGhyZWUgb3V0IG9mIGZvdXIgaW52ZXN0b3JzIGV4cGVjdCBSZXB1YmxpY2FucyBhbmQgRGVtb2NyYXRzIHRvIHJlYWNoIGEgc2hvcnQtdGVybSBhZ3JlZW1lbnQuIEEgRXVyb3BlYW4gQ29tbWlzc2lvbiByZXBvcnQgc2hvd2VkIHRoYXQgZWNvbm9taWMgY29uZmlkZW5jZSBpbiB0aGUgZXVybyBhcmVhIGNsaW1iZWQgaW4gTm92ZW1iZXIgZnJvbSBhIHRocmVlLSB5ZWFyIGxvdy4gVGhlIGluZGV4IG9mIGV4ZWN1dGl2ZSBhbmQgY29uc3VtZXIgc2VudGltZW50IGluIHRoZSByZWdpb24gaW5jcmVhc2VkIHRvIDg1LjcgZnJvbSBhIHJldmlzZWQgODQuMyBpbiBPY3RvYmVyLiBFY29ub21pc3RzIGhhZCBmb3JlY2FzdCB0aGUgZ2F1Z2Ugd291bGQgYmUgdW5jaGFuZ2VkIGZyb20gYW4gaW5pdGlhbCByZWFkaW5nIG9mIDg0LjUuIEFub3RoZXIgcmVsZWFzZSBzaG93ZWQgR2VybWFuIHVuZW1wbG95bWVudCByb3NlIGxlc3MgdGhpcyBtb250aCB0aGFuIGVjb25vbWlzdHMgaGFkIHByZWRpY3RlZC4gVGhlIG51bWJlciBvZiBwZW9wbGUgd2l0aG91dCBqb2JzIGluY3JlYXNlZCA1LDAwMCB0byAyLjk0IG1pbGxpb24sIHRoZSBGZWRlcmFsIExhYm9yIEFnZW5jeSBzYWlkLiBFY29ub21pc3RzIGhhZCBmb3JlY2FzdCBqb2JsZXNzbmVzcyB3b3VsZCBjbGltYiBieSAxNiwwMDAsIGFjY29yZGluZyB0byB0aGUgYXZlcmFnZSBlc3RpbWF0ZSBpbiBhIEJsb29tYmVyZyBzdXJ2ZXkuIEdvbGRtYW4gRm9yZWNhc3QgVGhlIFN0b3h4IDYwMCB3aWxsIGFkdmFuY2UgdG8gMzEwIGJ5IHRoZSBlbmQgb2YgMjAxMyBhbmQgZWFybmluZ3Mgd2lsbCBncm93IDkgcGVyY2VudCwgR29sZG1hbiBTYWNocyBHcm91cCBJbmMuIHN0cmF0ZWdpc3RzIGxlZCBieSBQZXRlciBPcHBlbmhlaW1lciB3cm90ZSBpbiBhIHJlcG9ydC4gVGhhdCBpbmRpY2F0ZXMgYSByYWxseSBvZiAxMyBwZXJjZW50IGZyb20gV2VkbmVzZGF54oCZcyBjbG9zZS4gVGhlIGdhdWdlIGhhcyBzdXJnZWQgMTggcGVyY2VudCBmcm9tIHRoaXMgeWVhcuKAmXMgbG93IG9uIEp1bmUgNCBhcyB0aGUgRXVyb3BlYW4gQ2VudHJhbCBCYW5rIGFubm91bmNlZCBhbiB1bmxpbWl0ZWQgYm9uZC1idXlpbmcgcGxhbiBhbmQgdGhlIEZlZGVyYWwgUmVzZXJ2ZSBiZWdhbiBhIHRoaXJkIHJvdW5kIG9mIGFzc2V0IHB1cmNoYXNlcyBpbiB0aGUgVS5TLiBOYXRpb25hbCBiZW5jaG1hcmsgaW5kZXhlcyBhZHZhbmNlZCBpbiBldmVyeSB3ZXN0ZXJuLUV1cm9wZWFuIG1hcmtldCBleGNlcHQgR3JlZWNlLiBUaGUgVS5LLuKAmXMgRlRTRSAxMDAgY2xpbWJlZCAxLjIgcGVyY2VudCwgRnJhbmNl4oCZcyBDQUMgNDAgZ2FpbmVkIDEuNCBwZXJjZW50IGFuZCBHZXJtYW554oCZcyBEQVggYWRkZWQgMC44IHBlcmNlbnQuIFJpbyBUaW50byBqdW1wZWQgNSBwZXJjZW50IHRvIDMsMDg4IHBlbmNlIGFmdGVyIHNheWluZyBpdCB3aWxsIGN1dCAkNSBiaWxsaW9uIGZyb20gb3BlcmF0aW5nIGFuZCBzdXBwb3J0IGNvc3RzIG5leHQgeWVhci4gVGhlIG1pbmluZyBjb21wYW55IGFsc28gc2FpZCB0aGF0IGl0IHdpbGwgaW5jcmVhc2UgcHJvZHVjdGlvbiBhdCBpdHMgaXJvbiBvcmUsIGNvcHBlciBhbmQgYWx1bWluYSB1bml0cy4gSW52ZW5zeXMgUGxjIHNvYXJlZCA5LjEgcGVyY2VudCB0byAzMDUuNCBwZW5jZS4gVGhlIG1ha2VyIG9mIHNvZnR3YXJlIGZvciBMb25kb24gVW5kZXJncm91bmQgdHJhaW5zIHdpbGwgcHJvYmFibHkgYmUgYWNxdWlyZWQgYWZ0ZXIgY29tcGxldGluZyB0aGUgc2FsZSBvZiBpdHMgcmFpbC1zaWduYWxpbmcgZGl2aXNpb24gdG8gU2llbWVucyBBRywgUkJDIHNhaWQuIEFmdGVyIHRoZSBjbG9zZSBvZiBFdXJvcGVhbiB0cmFkaW5nIFdlZG5lc2RheSwgSW52ZW5zeXMgc2FpZCBpdCBhZ3JlZWQgdG8gc2VsbCB0aGUgdW5pdCB0byBTaWVtZW5zIGZvciAxLjc0IGJpbGxpb24gcG91bmRzICgkMi44IGJpbGxpb24pLiBJbnZlbnN5cyBTYWxlIFRoZSBCcml0aXNoIGNvbXBhbnkgd2lsbCB1c2UgdGhlIHByb2NlZWRzIHRvIHJlZHVjZSBpdHMgcGVuc2lvbiBkZWZpY2l0LCBtYWtpbmcgaXQgZWFzaWVyIGZvciBhbiBhY3F1aXJlciB0byBidXkgdGhlIGJ1c2luZXNzLCBSQkMgYW5hbHlzdCBBbmRyZXcgQ2FydGVyIHdyb3RlLiBIZSB1cGdyYWRlZCB0aGUgc3RvY2sgdG8gb3V0cGVyZm9ybSwgdGhlIGVxdWl2YWxlbnQgb2YgYnV5LCBmcm9tIHVuZGVycGVyZm9ybS4gQmFyY2xheXMgUGxjIGFuZCBCYW5rIG9mIEFtZXJpY2EgQ29ycC4gYWxzbyByZWNvbW1lbmRlZCBidXlpbmcgdGhlIHNoYXJlcy4gSW52ZW5zeXMgcG9zdGVkIGl0cyBiaWdnZXN0IHR3by1kYXkgcmFsbHkgc2luY2UgYXQgbGVhc3QgMTk4OC4gWnVyaWNoIEluc3VyYW5jZSBHcm91cCBBRyBnYWluZWQgMi41IHBlcmNlbnQgdG8gMjM2LjUwIFN3aXNzIGZyYW5jcyBhZnRlciBDaGllZiBFeGVjdXRpdmUgT2ZmaWNlciBNYXJ0aW4gU2VubiBwcm9taXNlZCBpbnZlc3RvcnMgYW4g4oCcYXR0cmFjdGl2ZSBhbmQgc3VzdGFpbmFibGUgZGl2aWRlbmQu4oCdIFZvbGtzd2FnZW4gQUcgYWRkZWQgMS41IHBlcmNlbnQgdG8gMTY2LjEwIGV1cm9zLCBpdHMgaGlnaGVzdCBwcmljZSBpbiAyMCB5ZWFycywgYWZ0ZXIgRXVyb3Bl4oCZcyBsYXJnZXN0IGNhcm1ha2VyIHNhaWQgaXQgd2lsbCBleHRlbmQgaXRzIHBhcnRuZXJzaGlwIHdpdGggQ2hpbmHigJlzIEZBVyBHcm91cCBiZXlvbmQgMjAxNiwgd2hlbiB0aGUgZXhpc3RpbmcgY29udHJhY3QgZXhwaXJlcy4gVGhlIG5ldyBqb2ludCB2ZW50dXJlIHdpbGwgcnVuIGZvciBhbiBhZGRpdGlvbmFsIDI1IHllYXJzLiBCb3RoIGNvbXBhbmllcyBjb25jbHVkZWQgdGhhdCBuZWl0aGVyIHNpZGUgaGFzIGluZnJpbmdlZCBvbiB0ZWNobm9sb2d5IHBhdGVudHMsIFZvbGtzd2FnZW4gc2FpZC4gQmFuY28gUG9wdWxhciBCYW5jbyBQb3B1bGFyIEVzcGFub2wgU0EgY2xpbWJlZCA0LjUgcGVyY2VudCB0byA2NS40IGV1cm8gY2VudHMgYWZ0ZXIgc2F5aW5nIGl0IGNvbXBsZXRlZCBhIDIuNSBiaWxsaW9uLWV1cm8gKCQzLjIgYmlsbGlvbikgc2hhcmUgc2FsZSB0byBoZWxwIGNvdmVyIGEgY2FwaXRhbCBzaG9ydGZhbGwgdW5jb3ZlcmVkIGJ5IHN0cmVzcyB0ZXN0cyBvZiBTcGFuaXNoIGJhbmtzLiBUaGUgc3RvY2sgaGFzIHN1cmdlZCAyMiBwZXJjZW50IG92ZXIgdGhlIGxhc3QgdGhyZWUgZGF5cy4gRWlmZmFnZSBTQSwgd2hpY2ggY29udHJvbHMgdGhlIEFQUlIgdG9sbC1yb2FkIGJ1c2luZXNzLCBzb2FyZWQgOS40IHBlcmNlbnQgdG8gMzAuMTUgZXVyb3MuIEEgUGFyaXMgY291cnQgd2lsbCBydWxlIHRvZGF5IG9uIHdoZXRoZXIgRWlmZmFnZSBjYW4gY29tcHVsc29yaWx5IHB1cmNoYXNlIEFQUlIgc2hhcmVzLCBhY2NvcmRpbmcgdG8gYSBzcG9rZXNtYW4gZm9yIHRoZSB1bml0LiBFaWZmYWdlIHNhaWQgb24gQXByaWwgMTggdGhhdCBpdCB3b3VsZCBidXkgdGhlIHJlbWFpbmluZyBzdGFrZSBieSB0aGUgZW5kIG9mIHRoZSB5ZWFyIGlmIGl0IHdvbiB0aGUgY291cnTigJlzIGFwcHJvdmFsLiBFbGVjdHJpY2l0ZSBkZSBGcmFuY2Ugc2xpZCAxLjMgcGVyY2VudCB0byAxNC4wOCBldXJvcyBhZnRlciB0aGUgQ29uc2VpbCBk4oCZRXRhdCBydWxlZCB0aGF0IHRoZSB1dGlsaXR5IG92ZXJjaGFyZ2VkIGl0cyBjdXN0b21lcnMuIEEgZ3JvdXAgb2YgYWJvdXQgODAgY29tbXVuaXRpZXMgdGhhdCBkaXN0cmlidXRlIHBvd2VyIHRvIGNvbnN1bWVycyBzYWlkIHRoYXQgRURGIG92ZXJjaGFyZ2VkIGJ5IDguOCBiaWxsaW9uIGV1cm9zLiBHZW1hbHRvIE5WIGRyb3BwZWQgMi45IHBlcmNlbnQgdG8gNzAuMjQgZXVyb3MgYWZ0ZXIgTW9yZ2FuIFN0YW5sZXkgYWR2aXNlZCBpbnZlc3RvcnMgdG8gdGFrZSBwcm9maXRzLiBUaGUgaW52ZW50b3Igb2Ygc21hcnQgY2hpcHMgdXNlZCBpbiBiYW5rIGFuZCBwaG9uZSBjYXJkcyB3aWxsIHByb2JhYmx5IG5vdCBmb3JlY2FzdCBlYXJuaW5ncyBmb3IgMjAxMyB0aGF0IGJlYXQgZXN0aW1hdGVzLCBhbmFseXN0cyBsZWQgYnkgQW5kcmV3IEh1bXBocmV5IHdyb3RlIGluIGEgcmVwb3J0LCBkb3duZ3JhZGluZyB0aGUgc2hhcmVzIHRvIGVxdWFsIHdlaWdodCwgdGhlIGVxdWl2YWxlbnQgb2YgaG9sZCwgZnJvbSBvdmVyd2VpZ2h0LiBUaGUgVlN0b3h4IEluZGV4LCB3aGljaCBtZWFzdXJlcyB2b2xhdGlsaXR5IG9uIHRoZSBiZW5jaG1hcmsgU3RveHggRXVyb3BlIDUwIEluZGV4LCBzbGlkIDQuNSBwZXJjZW50IHRvIDE2LjQ5LCBpdHMgbG93ZXN0IGxldmVsIHNpbmNlIEp1bmUgMjAwNy4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATtKwBMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDk4NWE4MDNkMjdhMGRmODQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABVJUTlRG</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATtP5m8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOszMzMzMz</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOszMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOszMzMzMz</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOszMzMzMz</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBNQAAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAZA==</field><field name="id" class="java.lang.String">rO0ABXQAEDI2ZGVmYjI2MGU5MWI5ZTk=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mLMnAAAQ==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUzNTk=</field><field name="title" class="java.lang.String">rO0ABXQAP1MmUCA1MDAgQmVhdGluZyBHb2xkIE1vc3QgU2luY2UgMTk5OSBhcyBFYXJuaW5ncyBFc3RpbWF0ZXMgUmlzZQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATZxbIiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGJiN2EzMDQ2ZDZmOWVjZWM=</field><field name="symbol" class="java.lang.String">rO0ABXQAAVA=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATZ2kuSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkvXCj1wo9</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlMzMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAklHrhR64U</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAk8KPXCj1x</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAk8KPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAC1pZA==</field><field name="id" class="java.lang.String">rO0ABXQAEDBjZmU2YzNkZDk1MDllMmU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMl3AAAA==</field></document></documents><date>2015-05-07T06:33:46-0500</date></cacheEntry>
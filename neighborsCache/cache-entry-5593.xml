<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0ETNIeXVuZGFpIE1vdG9yIENvIFNvdXRoIEtvcmVhcyBsYXJnZXN0IGF1dG9tYWtlciBuYW1lZCBhIG5ldyBjaGllZiBleGVjdXRpdmUgb2ZmaWNlciBmb3IgaXRzIFVTIHVuaXQgdG8gcmVjYXB0dXJlIHNoYXJlIGluIGl0cyBzZWNvbmRiaWdnZXN0IG1hcmtldCBEYXZpZCBadWNob3dza2kgZXhlY3V0aXZlIHZpY2UgcHJlc2lkZW50IG9mIHNhbGVzIHdhcyBhcHBvaW50ZWQgYXMgcHJlc2lkZW50IGFuZCBDRU8gZWZmZWN0aXZlIEphbiAxIHRoZSBTZW91bGJhc2VkIGNvbXBhbnkgc2FpZCBpbiBhIHN0YXRlbWVudCBvbiBGcmlkYXkgWnVjaG93c2tpIHJlcGxhY2VzIEpvaG4gS3JhZmNpayA1MiB3aG9zZSBjb250cmFjdCBleHBpcmVzIGF0IHRoZSBlbmQgb2YgdGhpcyB5ZWFyIHRoZSBjb21wYW55IHNhaWQgVGhlIHJlcGxhY2VtZW50IGNvbWVzIGFmdGVyIHNhbGVzIGF0IEh5dW5kYWkgYW5kIGl0cyBhZmZpbGlhdGUgS2lhIE1vdG9ycyBDb3JwIHRyYWlsZWQgaW5kdXN0cnl3aWRlIFVTIHNhbGVzIHBhY2UgaW4gZWFjaCBtb250aCBzaW5jZSBTZXB0ZW1iZXIgMjAxMiBhbmQgYWZ0ZXIgbW9kZWxzIGF0IGJvdGggY29tcGFuaWVzIGZhaWxlZCB0byBlYXJuIHRoZSBJbnN1cmFuY2UgSW5zdGl0dXRlIGZvciBIaWdod2F5IFNhZmV0eXMgaGlnaGVzdCBzYWZldHkgYXdhcmQgZm9yIDIwMTQgSHl1bmRhaSBpcyBjb3VudGluZyBvbiB0aGUgcmV2YW1wZWQgR2VuZXNpcyB3aGljaCB3b24gdGhlIE5vcnRoIEFtZXJpY2FuIENhciBvZiB0aGUgWWVhciBhd2FyZCBpbiAyMDA5IGFuZCB0aGUgbmV3IFNvbmF0YSBzZWRhbiB0aGUgY29tcGFueXMgYnJlYWRhbmRidXR0ZXIgbW9kZWwgdG8gYm9vc3Qgc2FsZXMgaW4gdGhlIFVTIERhdmUgaXMga25vd24gdG8gYmUgYSB2ZXJ5IGFjdGl2ZSBhbmQgcmVzdWx0c29yaWVudGVkIGxlYWRlciB3aG8gcHV0cyBzdHJvbmcgZW1waGFzaXMgb24gdGhlIGNvbXBhbnlzIHNhbGVzIG9wZXJhdGlvbnMgU2hpbiBDaHVuZyBLd2FuIGFuIGFuYWx5c3QgYXQgS0IgSW52ZXN0bWVudCAgU2VjdXJpdGllcyBDbyBpbiBTZW91bCBzYWlkIGJ5IHBob25lIEh5dW5kYWlzIGFnZ3Jlc3NpdmUgYnV0IGxvZ2ljYWwgbWFuYWdlbWVudCBjaGFuZ2UgY29tZXMgYWZ0ZXIgSHl1bmRhaXMgZGlzYXBwb2ludGluZyBJSUhTIHRlc3QgcmVzdWx0cyBhbmQgaXMgaW4gdGltZSB0byB0YWtlIHN0ZXBzIHRvIGhhdmUgaXRzIG5ldyBwcm9kdWN0cyBib29zdCBzYWxlcyBpbiB0aGUgVVMgbmV4dCB5ZWFyIFp1Y2hvd3NraSB3aG8gam9pbmVkIEh5dW5kYWkgaW4gRmVicnVhcnkgMjAwNyBoYXMgYmVlbiBpbiBjaGFyZ2Ugb2YgYWxsIHNhbGVzIHNhbGVzIG9wZXJhdGlvbnMgYW5kIGRlYWxlciByZWxhdGlvbnMgdGhlIGNvbXBhbnkgc2FpZCBIZSBoYXMgYmVlbiBpbiB0aGUgYXV0byBpbmR1c3RyeSBmb3IgMzMgeWVhcnMgYmVnaW5uaW5nIGhpcyBjYXJlZXIgYXQgRm9yZCBNb3RvciBDbyBhbmQgd2FzIHJlc3BvbnNpYmxlIGZvciBzYWxlcyBhdCBNYXpkYSBNb3RvciBDb3JwcyBVUyB1bml0IHByaW9yIHRvIGpvaW5pbmcgSHl1bmRhaSAgICAgICAgICAgICAgICAgICAgICAgICAgIFNhZmV0eSBQaWNrcyBIeXVuZGFpcyBFbGFudHJhIHdhcyB0aGUgb25seSBtb2RlbCBhdCB0aGUgYXV0b21ha2VyIHRvIHdpbiBhIFRvcCBTYWZldHkgUGljayBhd2FyZCBvdXQgb2YgMzkgdmVoaWNsZXMgYWNjb3JkaW5nIHRvIGFuIElJSFMgcmVsZWFzZSBvbiBEZWMgMTkgQmVmb3JlIGl0cyByZWNlbnQgc2xvd2Rvd24gSHl1bmRhaSBvdXRwZXJmb3JtZWQgb3RoZXIgYXV0b21ha2VycyBpbiB0aGUgVVMgbWFya2V0IGR1cmluZyBLcmFmY2lrcyB0ZW51cmUgSGUgam9pbmVkIHRoZSBjb21wYW55IGluIDIwMDQgYXMgdmljZSBwcmVzaWRlbnQgb2YgcHJvZHVjdCBkZXZlbG9wbWVudCBhbmQgc3RyYXRlZ2ljIHBsYW5uaW5nIGFuZCBiZWNhbWUgQ0VPIG9mIHRoZSBVUyB1bml0IGluIGxhdGUgMjAwOCBXaGlsZSBIeXVuZGFpcyBtYXJrZXQgc2hhcmUgdGhpcyB5ZWFyIGhhcyBzbGlwcGVkIGJ5IDAzIHBlcmNlbnRhZ2UgcG9pbnQgdG8gNDYgcGVyY2VudCB0aHJvdWdoIE5vdmVtYmVyIHRoZSBjb21wYW55IGNsYWltZWQganVzdCAyNSBwZXJjZW50IG9mIHRoZSBtYXJrZXQgaW4gS3JhZmNpa3MgZmlyc3QgeWVhciB3aXRoIHRoZSBjb21wYW55IGFjY29yZGluZyB0byByZXNlYXJjaGVyIEF1dG9kYXRhIENvcnAgVGhlIFVTIHdhcyBIeXVuZGFpcyBiaWdnZXN0IG1hcmtldCBhZnRlciBDaGluYSBpbiB0aGUgZmlyc3QgbmluZSBtb250aHMgb2YgdGhlIHllYXIgYWNjb3JkaW5nIHRvIGEgY29tcGFueSBzdGF0ZW1lbnQgb24gT2N0IDI0ICAgICAgICAgICAgICAgICAgICAgICBJbm5vdmF0aXZlIEV4ZXJjaXNlcyBUaGUgSHl1bmRhaSBBc3N1cmFuY2UgcHJvZ3JhbSBhIHByb21vdGlvbiBpbiB3aGljaCB0aGUgY2FybWFrZXIgb2ZmZXJlZCB0byBidXkgYmFjayB2ZWhpY2xlcyBmcm9tIGN1c3RvbWVycyB3aG8gbG9zdCB0aGVpciBqb2JzIGFtaWQgdGhlIHJlY2Vzc2lvbiBpbiAyMDA5IGFuZCByZWRlc2lnbnMgdG8gY2FycyBpbmNsdWRpbmcgdGhlIEdlbmVzaXMgc2VkYW4gYW5kIEVsYW50cmEgY29tcGFjdCB3b24gb3ZlciBidXllcnMgS3JhZmNpayBvdmVyc2F3IHRoZSBLb3JlYW4gY2FybWFrZXJzIGdyb3d0aCB3aGlsZSBkZXZlbG9waW5nIHNldmVyYWwgaW5ub3ZhdGl2ZSBicmFuZGluZyBleGVyY2lzZXMgS2FybCBCcmF1ZXIgYW4gYW5hbHlzdCBmb3IgYXV0byByZXNlYXJjaGVyIEtlbGxleSBCbHVlIEJvb2sgc2FpZCBpbiBhbiBlIG1haWwgSGUgd291bGQgYmUgYSBwb3dlcmZ1bCBhZGRpdGlvbiB0byBhbnkgYXV0b21ha2VycyBleGVjdXRpdmUgdGVhbSBDaGFpcm1hbiBDaHVuZyBNb25nIEtvbyBoYXMgY2hvc2VuIHRvIHB1c2ggZm9yIGltcHJvdmVkIHF1YWxpdHkgb3ZlciBzdWJzdGFudGlhbCBhZGRpdGlvbnMgdG8gSHl1bmRhaSBhbmQgS2lhcyBOb3J0aCBBbWVyaWNhbiBtYW51ZmFjdHVyaW5nIGNhcGFjaXR5IHRoZSBsYXN0IHR3byB5ZWFycyBUaGF0IGhhcyBzdHJldGNoZWQgdGhpbiB0aGUgY2FybWFrZXJzIGFiaWxpdHkgdG8ga2VlcCBwYWNlIENocmlzIEhvc2ZvcmQgYSBIeXVuZGFpIHNwb2tlc21hbiBkZWNsaW5lZCB0byBjb21tZW50IGJleW9uZCB0aGUgc3RhdGVtZW50IEh5dW5kYWkgbGFzdCBtb250aCB1bnZlaWxlZCBhIHJldmFtcGVkIGFsbHdoZWVsZHJpdmUgR2VuZXNpcyBwcmVtaXVtIHNlZGFuIHRoYXQgd2lsbCBnbyBvbiBzYWxlIGluIHRoZSBVUyBuZXh0IHllYXIgdG8gcmV2aXZlIGZsYWdnaW5nIHNhbGVzIGluIHRoZSBtb2RlbHMgbGFyZ2VzdCBtYXJrZXQgVGhlIGFsbCBuZXcgR2VuZXNpcyB3aGljaCBjb21wZXRlcyB3aXRoIEJheWVyaXNjaGUgTW90b3JlbiBXZXJrZSBBR3MgNXNlcmllcyBhbmQgRGFpbWxlciBBR3MgTWVyY2VkZXMgQmVueiBFQ2xhc3MgaW4gdGhlIG1pZHNpemUgcHJlbWl1bSBzZWRhbiBtYXJrZXQgd2lsbCBhbHNvIGJlIGludHJvZHVjZWQgaW4gRXVyb3BlIG5leHQgeWVhciBpdHMgZmlyc3QgcHJlbWl1bSBtb2RlbCBpbiB0aGUgbWFya2V0IHRoZSBjb21wYW55IHNhaWQgTm92IDI2ICAgICAgICAgICAgICAgICAgICAgICAgIFdvbiBBcHByZWNpYXRpb24gVGhlIG5ldyBtb2RlbCBhbmQgdGhlIHJlcGxhY2VtZW50IG9mIHRoZSBoZWFkIG9mIHRoZSBVUyB1bml0IGNvbWUgYXMgdGhlIFNlb3VsYmFzZWQgY2FybWFrZXIgaXMgc3VmZmVyaW5nIGZyb20gYW4gYXBwcmVjaWF0aW5nIHdvbiBUaGlyZHF1YXJ0ZXIgcHJvZml0IGF0IEh5dW5kYWkgZmVsbCAxMSBwZXJjZW50IGZyb20gdGhlIHByZXZpb3VzIHRocmVlIG1vbnRocyB0byAyMTQgdHJpbGxpb24gd29uIDIgYmlsbGlvbiB0aGUgY29tcGFueSBzYWlkIE9jdCAyNCBOZXQgaW5jb21lIGFkdmFuY2VkIDU2IHBlcmNlbnQgZnJvbSBhIHllYXIgZWFybGllciBUaGUgd29uIGhhcyBnYWluZWQgYWJvdXQgMjIgcGVyY2VudCBhZ2FpbnN0IHRoZSB5ZW4gdGhpcyB5ZWFyIGN1cmJpbmcgSHl1bmRhaSBhbmQgYWZmaWxpYXRlIEtpYXMgY29tcGV0aXRpdmVuZXNzIGFnYWluc3QgSmFwYW5lc2UgYXV0b21ha2VycyBpbiBVUyBleHBvcnRzIFRoZSB3b24gc3RyZW5ndGhlbmVkIDA1IHBlcmNlbnQgdG8gMTA1NCB3b24gcGVyIGRvbGxhciBpbiBTZW91bCBvbiBEZWMgMjcgZGF0YSBjb21waWxlZCBieSBCbG9vbWJlcmcgc2hvdyBIeXVuZGFpcyBpbmNlbnRpdmVzIGluIHRoZSBVUyBzdXJnZWQgNDcgcGVyY2VudCBpbiB0aGUgZmlyc3QgbmluZSBtb250aHMgb2YgdGhpcyB5ZWFyIGNvbXBhcmVkIHdpdGggYSAyMiBwZXJjZW50IGRlY2xpbmUgYXQgVG95b3RhIGFuZCB0aGUgbWFya2V0IGF2ZXJhZ2Ugb2YgYSAyNCBwZXJjZW50IGluY3JlYXNlIGFjY29yZGluZyB0byBBdXRvZGF0YXQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0wMy0yN1QwMDowMDowMFogVE8gMjAxMy0xMi0wM1Q1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTIyMzE5</field><field name="title" class="java.lang.String">rO0ABXQAPkh5dW5kYWkgTW90b3IgQnJhY2VzIGZvciBTZWNvbmQgU3RyYWlnaHQgWWVhciBvZiBMYWJvciBTdHJpa2Vz</field><field name="content" class="java.lang.String">rO0ABXQPTUh5dW5kYWkgTW90b3IgQ28uIGFuZCBLaWEgTW90b3JzIENvcnAuIHdvcmtlcnMgYWdyZWVkIHRvIGdvIG9uIHN0cmlrZSBmb3IgYSBzZWNvbmQgc3RyYWlnaHQgeWVhciB0byBkZW1hbmQgaGlnaGVyIHdhZ2VzLiBNb3JlIHRoYW4gNzAgcGVyY2VudCBvZiBIeXVuZGFp4oCZcyA0NSwwMDAgZ3VpbGQgbWVtYmVycyB2b3RlZCBpbiBmYXZvciBvZiBhdXRob3JpemluZyB1bmlvbiBsZWFkZXIgTW9vbiBZb25nIE1vb24gdG8gY2FsbCBmb3IgYSB3YWxrb3V0IGF0IHRoZSBjb21wYW55LCBLaW0gR2kgSHl1aywgYSB1bmlvbiBzcG9rZXNtYW4sIHNhaWQgaW4gYSB0ZXh0IG1lc3NhZ2UuIFdvcmtlcnMgYXQgSHl1bmRhaeKAmXMgYWZmaWxpYXRlIEtpYSBhbHNvIHZvdGVkIGluIGZhdm9yIG9mIGEgc3RyaWtlIHBsYW4geWVzdGVyZGF5LiBUaGUgc3RyaWtlIG1heSBiZWdpbiBhcyBzb29uIGFzIEF1Zy4gMjAsIEtpbSBzYWlkIGVhcmxpZXIuIFdoaWxlIEh5dW5kYWkgaXMgdXNlZCB0byBzdG9wcGFnZXMsIHdvcmtlcnMgaGF2ZSBnb25lIG9uIHN0cmlrZSBpbiAyMiBvZiB0aGUgcGFzdCAyNiB5ZWFycywgdGhlIHdhbGtvdXRzIGxvb20gYXMgdGhlIHdlYWtlciB5ZW4gZ2l2ZXMgSmFwYW5lc2UgYXV0b21ha2VycyBhbiBlZGdlIHRvIGN1dCBwcmljZXMgb3Igb2ZmZXIgaW5jZW50aXZlcyBvbiB0aGVpciBjYXJzLiBTZW91bC1iYXNlZCBIeXVuZGFp4oCZcyBuZXQgaW5jb21lIGhhcyBmYWxsZW4gZm9yIHRocmVlIHN0cmFpZ2h0IHF1YXJ0ZXJzLCB3aGlsZSBhbmFseXN0cyBlc3RpbWF0ZSBUb3lvdGEgTW90b3IgQ29ycC4gaXMgaGVhZGVkIGZvciBhIHJlY29yZCBhbm51YWwgcHJvZml0LiDigJxJZiB0aGUgdW5pb24gZG9lcyB3YWxrIG91dCBhcyBwbGFubmVkLCBpdCB3aWxsIGxlYWQgdG8gYSB3b3JzZS10aGFuLWV4cGVjdGVkIHRoaXJkLXF1YXJ0ZXIgcHJvZml0LOKAnSBMZWUgU2FuZyBIeXVuLCBhbiBhbmFseXN0IGF0IE5IIEludmVzdG1lbnQgJiBTZWN1cml0aWVzIENvLiwgc2FpZCBieSBwaG9uZSBiZWZvcmUgdGhlIHZvdGluZyByZXN1bHRzIHdlcmUgYW5ub3VuY2VkLiBTdGlsbCwg4oCcaXTigJlzIHVubGlrZWx5IHRoZSBzdHJpa2VzIHdvdWxkIGdvIG9uIGZvciBsb25nIGFzIHRoZSB1bmlvbiB3b27igJl0IHJpc2sgZ2l2aW5nIHVwIHRoZWlyIGJvbnVzZXMsIHdoaWNoIGFyZSBnaXZlbiBvbmx5IHdoZW4gd29ya2VycyBtZWV0IHByb2R1Y3Rpb24gdGFyZ2V0cy7igJ0gSHl1bmRhaSBhbmQgS2lh4oCZcyBsYWJvciB1bmlvbnMgaGF2ZSBzYWlkIHRoZXnigJlyZSBkZW1hbmRpbmcgYSBwYXkgaW5jcmVhc2Ugb2YgMTMwLDQ5OCB3b24gKCQxMTcpIGEgbW9udGggYW5kIGZvciAzMCBwZXJjZW50IG9mIG5ldCBpbmNvbWUgdG8gYmUgZGlzdHJpYnV0ZWQgdG8gd29ya2Vycy4gVGhlIHRhbGtzIHN0YXJ0ZWQgTWF5IDI4IGZvciBIeXVuZGFpIGFuZCBKdWx5IDIgZm9yIEtpYS4gQ29zdGx5IFN0cmlrZXMgU3RhbGxlZCB3YWdlIHRhbGtzIGF0IEh5dW5kYWkgbGFzdCB5ZWFyIGxlZCB0byB0aGUgY29zdGxpZXN0IHN0cmlrZSBpbiBpdHMgaGlzdG9yeSwgY2F1c2luZyBhIHByb2R1Y3Rpb24gc2hvcnRmYWxsIG9mIDgyLDA4OCB2ZWhpY2xlcyBhbmQgYW4gZXN0aW1hdGVkIDEuNyB0cmlsbGlvbiB3b24gaW4gbG9zdCBzYWxlcy4gSHl1bmRhaSBzaGFyZXMgcm9zZSAyLjcgcGVyY2VudCB0byAyMjcsMDAwIHdvbiBhdCB0aGUgY2xvc2UgaW4gU2VvdWwgdHJhZGluZyB5ZXN0ZXJkYXkuIEtpYSByb3NlIDIgcGVyY2VudC4gVGhpcyBjb21wYXJlcyB3aXRoIGEgMS41IHBlcmNlbnQgcmlzZSBpbiB0aGUgYmVuY2htYXJrIEtvc3BpIGluZGV4LiBIeXVuZGFpIHNlbnQgYSBsZXR0ZXIgdG8gdGhlIHVuaW9uIHllc3RlcmRheSByZXF1ZXN0aW5nIHRoYXQgdGhlIHRhbGtzIHJlc3VtZSwgYWNjb3JkaW5nIHRvIGFuIGUtbWFpbGVkIHN0YXRlbWVudC4gVGhlIHZvdGUgYXQgSHl1bmRhaSwgd2hpY2ggaGFzIHRoZSBuYXRpb27igJlzIGJpZ2dlc3Qgd29ya2Vyc+KAmSBndWlsZCwgc2lnbmFscyB0aGUgcmVzdXJnaW5nIG1pbGl0YW5jeSBvZiBTb3V0aCBLb3JlYW4gbGFib3IgdW5pb25zIGFzIHVuZW1wbG95bWVudCByaXNlcyBhbmQgZW1wbG95ZXJzIHNoaWZ0IHByb2R1Y3Rpb24gb3ZlcnNlYXMuIFBhc3QgSHl1bmRhaSB1bmlvbiBwcm90ZXN0cyBoYXZlIGxlZCB0byBjbGFzaGVzIGJldHdlZW4gcG9saWNlIGFuZCBtaWxpdGFudCB1bmlvbmlzdHMgYXJtZWQgd2l0aCBzdGVlbCBwaXBlcyBhbmQgTW9sb3RvdiBjb2NrdGFpbHMuIFRoZSBudW1iZXIgb2YgU291dGggS29yZWFuIHdvcmsgZGF5cyBsb3N0IG9uIGxhYm9yIGRpc3B1dGVzIG1vcmUgdGhhbiBkb3VibGVkIHRvIDkzMyBkYXlzIGxhc3QgeWVhciBmcm9tIDQyOSBpbiAyMDExLCBhY2NvcmRpbmcgdG8gZGF0YSBjb21waWxlZCBieSB0aGUgbmF0aW9u4oCZcyBNaW5pc3RyeSBvZiBFbXBsb3ltZW50IGFuZCBMYWJvci4gSW4gMTk5MywgdGhlIEJhbmsgb2YgS29yZWEgY2l0ZWQgcHJvdHJhY3RlZCBsYWJvciBzdHJpZmUgYXQgSHl1bmRhaSBhcyBhIGtleSByZWFzb24gZm9yIGl0cyBkZWNpc2lvbiB0byBsb3dlciBpdHMgZ3Jvc3MgbmF0aW9uYWwgcHJvZHVjdCBlc3RpbWF0ZS4gQW5udWFsIFN0cmlrZXMgUHJpb3IgdG8gMjAwOCwgdGhlIHVuaW9uIHdlbnQgb24gc3RyaWtlIGV2ZXJ5IHllYXIgZXhjZXB0IG9uZSwgY29zdGluZyB3aGF0IEh5dW5kYWkgZXN0aW1hdGVzIHRvIGJlIG1vcmUgdGhhbiAxIG1pbGxpb24gdmVoaWNsZXMgdmFsdWVkIGF0IDExLjYgdHJpbGxpb24gd29uIGluIGxvc3Qgc2FsZXMuIE1vb24gWW9uZyBNb29uIHdhcyBlbGVjdGVkIGFzIEh5dW5kYWnigJlzIHVuaW9uIGxlYWRlciBpbiAyMDExIGFmdGVyIHBsZWRnaW5nIHRvIGJlIGEgdG91Z2hlciBuZWdvdGlhdG9yIHRoYW4gaGlzIHByZWRlY2Vzc29yLCBMZWUgS3l1bmcgSG9vbiwgd2hvIHdhcyBlbGVjdGVkIHRvIGEgdHdvLXllYXIgdGVybSBpbiAyMDA5IGFmdGVyIHBsZWRnaW5nIHRvIGN1cmIgdW5uZWNlc3Nhcnkgc3RyaWtlcy4gTW9vbuKAmXMgYWN0aXZpc20gaW4gcGFzdCBwcm90ZXN0cyBsZWQgaGltIHRvIGJlIGFycmVzdGVkIGZvdXIgdGltZXMgYW5kIGxhaWQgb2ZmIGJ5IHRoZSBjb21wYW55IHRocmVlIHRpbWVzIHNpbmNlIGhlIGpvaW5lZCBIeXVuZGFp4oCZcyB1bmlvbiBpbiAxOTg4LiBUaGUgd29uIGhhcyBnYWluZWQgMjYgcGVyY2VudCBhZ2FpbnN0IHRoZSB5ZW4gaW4gdGhlIHBhc3QgeWVhciwgY3VyYmluZyBLaWEgYW5kIEh5dW5kYWnigJlzIGNvbXBldGl0aXZlbmVzcyBhZ2FpbnN0IEphcGFuZXNlIGF1dG9tYWtlcnMsIHdoaWNoIGFyZSBhbHNvIGJpZyBleHBvcnRlcnMgdG8gdGhlIFUuUy4gSHl1bmRhaeKAmXMgaW5jZW50aXZlcyBpbiB0aGUgVS5TLiBzdXJnZWQgNDcgcGVyY2VudCB0aHJvdWdoIEp1bHkgZnJvbSBhIHllYXIgZWFybGllci4gVGhhdCBjb21wYXJlcyB3aXRoIGEgMS43IHBlcmNlbnQgZGVjbGluZSBpbiBUb3lvdGHigJlzIGluY2VudGl2ZXMgYW5kIHRoZSBtYXJrZXQgYXZlcmFnZSBvZiBhIDIuNCBwZXJjZW50IGluY3JlYXNlLCBhY2NvcmRpbmcgdG8gQXV0b2RhdGEgQ29ycC4gSHl1bmRhaeKAmXMgc2FsZXMgcm9zZSAyIHBlcmNlbnQgaW4gdGhlIFUuUy4gbWFya2V0IHRocm91Z2ggSnVseSwgdHJhaWxpbmcgdGhlIGluZHVzdHJ54oCZcyA4LjUgcGVyY2VudCBncm93dGguIEl0cyBkZWxpdmVyaWVzIHNsdW1wZWQgNy4yIHBlcmNlbnQgaW4gRXVyb3BlIGluIHRoZSBBcHJpbCB0byBKdW5lIHF1YXJ0ZXIuIEtpYSBzcGVudCA3LjYgcGVyY2VudCBtb3JlIHBlciB2ZWhpY2xlIG9uIGluY2VudGl2ZXMgaW4gdGhlIFUuUy4gdGhpcyB5ZWFyLCB3aGlsZSBzYWxlcyBmZWxsIDMuMSBwZXJjZW50LCBhY2NvcmRpbmcgdG8gQXV0b2RhdGEu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUB2C4CAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDE4NjAxYjk2NDRiYjliYjQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABFlPTkc=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUB7MdyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAX64UeuFHs</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAYUeuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAXcKPXCj1x</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAX9cKPXCj2</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAX9cKPXCj2</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAATABA==</field><field name="id" class="java.lang.String">rO0ABXQAEGM2MTJjYWJiYzhkZmUwOTY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE8FAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE0MTk5</field><field name="title" class="java.lang.String">rO0ABXQAP0ZvcmQgRm9jdXMgR3JhYnMgR2xvYmFsIFNhbGVzIENyb3duIGFzIFdvcmxkIEJ1eXMgQW1lcmljYW4gQ2Fycw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT3tKjiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDUzYmQ1MmRkNTExM2RiZDk=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0NBUg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT3yUJSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA77hR64Ueu</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA9K4UeuFHs</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA71wo9cKPX</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA9IUeuFHrh</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA9IUeuFHrh</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAABwfnA==</field><field name="id" class="java.lang.String">rO0ABXQAEDQzZjZmZjVkOGY3MjA0YzU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mM2fAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIyMzM3</field><field name="title" class="java.lang.String">rO0ABXQAPEdNIFBsYW5zIEdyYWR1YWwgUHVsbG91dCBvZiBTb3V0aCBLb3JlYSBhcyBMYWJvciBDb3N0cyBTdXJnZQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUBw5SSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGY1MzllYjAyMTY5ZTYwYmY=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0NPU1QuTVg=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUB2C4CAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW3AAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW3AAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW3AAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW3AAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW1czMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDJjMWZmMDYxMWU4ZDRlODA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEQyAAAQ==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDYzNjY=</field><field name="title" class="java.lang.String">rO0ABXQAPEdNIFBsYW5zIEdyYWR1YWwgUHVsbG91dCBvZiBTb3V0aCBLb3JlYSBhcyBMYWJvciBDb3N0cyBTdXJnZQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUBw5SSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGY1MzllYjAyMTY5ZTYwYmY=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0NPU1QuTVg=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUB2C4CAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW3AAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW3AAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW3AAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW3AAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW1czMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGNkZWY0MjFlZWI4NWFmM2Y=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEv5AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE1NTE2</field><field name="title" class="java.lang.String">rO0ABXQAOVRlc2xhJ3MgU3RyYXViZWwgS2VlcHMgTW90b3JzIFJvbGxpbmcgYXMgU3RvY2sgU3VyZ2VzIDU3JQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6haMyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDVhOGFjMTZkMmE3ZGMxYjU=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0NPU1QuTVg=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6mjyiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECVQAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECVjTMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECVQAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECVfI9cKPXD</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECVdFwo9cKP</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAHbA==</field><field name="id" class="java.lang.String">rO0ABXQAEDVhNWZhYzUzZjdiOTZhZmQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE/vAAAA==</field></document></documents><date>2015-05-07T12:08:48-0500</date></cacheEntry>
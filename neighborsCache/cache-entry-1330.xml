<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0DpNUaGUgUGVudGFnb24gcGFpZCBUZXh0cm9uIEluY3MgQmVsbCBIZWxpY29wdGVyIHVuaXQgODEyMzUwIGVhY2ggZm9yIGdlYXJzIHRoYXQgc2hvdWxkIGhhdmUgY29zdCA0NDUwNiBhY2NvcmRpbmcgdG8gYSByZXBvcnQgYnkgdGhlIERlZmVuc2UgRGVwYXJ0bWVudHMgaW5zcGVjdG9yIGdlbmVyYWwgVGhlIGJldmVsIGdlYXJzIHRoYXQgd2VyZSBtYXJrZWQgdXAgMThmb2xkIHdlcmUgcGFydCBvZiA5IG1pbGxpb24gaW4gZXhjZXNzIHBheW1lbnRzIGJ5IHRheHBheWVycyBjaXRlZCBieSB0aGUgd2F0Y2hkb2cgb2ZmaWNlIFRoaXMgaXMgdGhlIGxhdGVzdCBjYXNlIGluIHdoaWNoIHRoZSBpbnNwZWN0b3IgZ2VuZXJhbCBzYWlkIFBlbnRhZ29uIGFnZW5jaWVzIGFsbG93ZWQgY29udHJhY3RvcnMgdG8gb3ZlcmNoYXJnZSBmb3Igc3BhcmUgcGFydHMgSW4gdGhlIEJlbGwgY2FzZSB0aGUgaW5zcGVjdG9yIGdlbmVyYWwgcmVjb21tZW5kZWQgdGhhdCB0aGUgRGVmZW5zZSBMb2dpc3RpY3MgQWdlbmN5IHNlZWsgdG8gcmVjb3VwIHRoZSBleGNlc3MgbW9uZXkgYW5kIGFuYWx5emUgcHJpY2VzIHRvIGVuc3VyZSB0YXhwYXllcnMgYXJlbnQgZnVydGhlciBvdmVyY2hhcmdlZCBPdGhlcndpc2UgdGhlIGV4Y2VzcyBwYXltZW50cyBtYXkgaW5jcmVhc2UgYnkgYW4gYWRkaXRpb25hbCAyNiBtaWxsaW9uIHVuZGVyIEJlbGxzIG5vbmNvbXBldGl0aXZlIGNvbnRyYWN0IHRoZSByZXBvcnQgZm91bmQgVGhlIGNvbnRyYWN0aW5nIG9mZmljZXIgZGlkIG5vdCBzdWZmaWNpZW50bHkgZGV0ZXJtaW5lIHdoZXRoZXIgcHJpY2VzIHdlcmUgZmFpciBhbmQgcmVhc29uYWJsZSBhY2NvcmRpbmcgdG8gdGhlIEp1bHkgMyByZXBvcnQgc2lnbmVkIGJ5IEphY3F1ZWxpbmUgV2ljZWNhcnZlciBhc3Npc3RhbnQgaW5zcGVjdG9yIGdlbmVyYWwgZm9yIGFjcXVpc2l0aW9uIFRoZSByZXBvcnQgb2J0YWluZWQgYnkgQmxvb21iZXJnIE5ld3Mgd2FzIGxhYmVsZWQgRm9yIE9mZmljaWFsIFVzZSBPbmx5IEJlbGwgSGVsaWNvcHRlciBkb2VzIG5vdCBhZ3JlZSB3aXRoIHRoZSBmaW5kaW5ncyBvciByZWNvbW1lbmRhdGlvbnMgQW5keSBXb29kd2FyZCBhIHNwb2tlc21hbiBmb3IgdGhlIHVuaXQgb2YgUHJvdmlkZW5jZSBSaG9kZSBJc2xhbmRiYXNlZCBUZXh0cm9uIHNhaWQgaW4gYSBzdGF0ZW1lbnQgQmVsbCBIZWxpY29wdGVyIGhhcyBmdWxseSBjb21wbGllZCB3aXRoIGFsbCBhcHBsaWNhYmxlIHJlZ3VsYXRpb25zIGFuZCBjb250aW51ZXMgdG8gYWRoZXJlIHRvIGl0cyBwb2xpY3kgd2hpY2ggZW5zdXJlcyB0aGF0IHRoZSBVUyBHb3Zlcm5tZW50IGNvbnNpc3RlbnRseSByZWNlaXZlcyB0aGUgYmVzdCBwcmljZSBvbiBjb21tZXJjaWFsIGl0ZW1zIGFjcXVpcmVkIGZvciBpdHMgdXNlIGhlIHNhaWQgICAgICAgICAgICAgICAgICBOb25jb21wZXRpdGl2ZSBFbnZpcm9ubWVudCBUaGUgYWxsZWdlZCBvdmVyY2hhcmdlcyB3ZXJlIGluY3VycmVkIG9uIEJlbGxzIDIwMTIgc29sZSBzb3VyY2UgMTI4IG1pbGxpb24gY29udHJhY3QgdG8gc3VwcG9ydCBOYXZ5IGFuZCBNYXJpbmUgQ29ycHMgSDEgYW5kIEFybXkgT0g1OCBLaW93YSBoZWxpY29wdGVycyBUaGUgY29udHJhY3QgaXMgaW4gcGxhY2UgdW50aWwgRmVicnVhcnkgMjAxNyBQcmljZXMgd2VyZSBub3Qgc3VmZmljaWVudGx5IGRldGVybWluZWQgZmFpciBhbmQgcmVhc29uYWJsZSBiZWNhdXNlIHRoZSBjb250cmFjdGluZyBvZmZpY2VyIGRpZCBub3QgcGVyZm9ybSBhbiBhZGVxdWF0ZSBhbmFseXNpcyB3aGVuIHByb2N1cmluZyBzb2xlc291cmNlIHBhcnRzIGFjY2VwdGluZyB0aGUgY29tcGFueXMgcHJpY2luZyBpbiBhIG5vbmNvbXBldGl0aXZlIGVudmlyb25tZW50IHRoZSBpbnNwZWN0b3IgZ2VuZXJhbHMgcmVwb3J0IGZvdW5kIFRoZSBhZ2VuY3kgcG90ZW50aWFsbHkgb3ZlcnBhaWQgQmVsbCBIZWxpY29wdGVyIFRleHRyb24gYWJvdXQgOSBtaWxsaW9uIG91dCBvZiAxMzQgbWlsbGlvbiBvbiAzMyBvZiAzNSBzb2xlc291cmNlIHNwYXJlIHBhcnRzIHJldmlld2VkIFdpY2VjYXJ2ZXIgd3JvdGUgQXVkaXRvcnMgZm9yIHRoZSBpbnNwZWN0b3IgZ2VuZXJhbCBjYWxjdWxhdGVkIHRoZSBwb3RlbnRpYWwgb3ZlcnBheW1lbnRzIGJhc2VkIG9uIGNvc3QgZGF0YSB0aGF0IEJlbGwgSGVsaWNvcHRlciBwcm92aWRlZCB1bmRlciBhbiBhZG1pbmlzdHJhdGl2ZSBzdWJwb2VuYSBhY2NvcmRpbmcgdG8gdGhlIHJlcG9ydCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29zdCBEYXRhIEluIHJlc3BvbnNlIHRvIHRoZSBpbnNwZWN0b3IgZ2VuZXJhbHMgcmVjb21tZW5kYXRpb24gdGhhdCB0aGUgRGVmZW5zZSBMb2dpc3RpYyBBZ2VuY3kgcHVyc3VlIG9wdGlvbnMgaW5jbHVkaW5nIGEgdm9sdW50YXJ5IHJlZnVuZCBmcm9tIEJlbGwgTWF0dGhldyBCZWViZSB0aGUgYWdlbmN5cyBkaXJlY3RvciBvZiBhY3F1aXNpdGlvbiB0b2xkIGF1ZGl0b3JzIHRoYXQgQmVsbCBoYXMgY29uc2lzdGVudGx5IHJlZnVzZWQgdG8gcHJvdmlkZSBjb3N0IGRhdGEgZm9yIGNvbW1lcmNpYWwgcGFydHMgaXQgc2VsbHMgdGhlIFBlbnRhZ29uIEFnZW5jeSBvZmZpY2lhbHMgZG8gbm90IGJlbGlldmUgdGhleSBoYXZlIHRoZSBhYmlsaXR5IHRvIG9idGFpbiBjb3N0IGRhdGEgdGhlIHJlcG9ydCBzYWlkIEluIEp1bmUgMjAxMyB0aGUgRGVmZW5zZSBMb2dpc3RpY3MgQWdlbmN5IGFza2VkIEJvZWluZyBDbyBiYXNlZCBvbiBhbm90aGVyIGF1ZGl0IHRvIHJlZnVuZCAxMzcgbWlsbGlvbiBmb3Igd2hhdCBpdCBjYWxsZWQgZXhjZXNzaXZlIHByaWNlcyBmb3Igc3BhcmUgcGFydHMgaW5jbHVkaW5nIGEgMTAgYWx1bWludW0gc2xlZXZlIGZvciB3aGljaCB0aGUgUGVudGFnb24gcGFpZCAyMjg2IENoaWNhZ29iYXNlZCBCb2VpbmcgdGhpcyB5ZWFyIGFncmVlZCB0byBwcm92aWRlIHRoZSBhZ2VuY3kgd2l0aCAzMiBtaWxsaW9uIGluIHBhcnRzIHRvIHNldHRsZSB0aGUgY2FzZSBUaGUgQmVsbCBhdWRpdCBmb3VuZCB0aGF0IHRoZSBEZWZlbnNlIERlcGFydG1lbnQgcGFpZCB0aGUgY29tcGFueSAyMzU1ODUgZm9yIGEgcm91bmQgaW5uZXIgY2FwICBhbiBpbmZsYXRlZCB1bml0IHByaWNlIHRoYXQgc2hvdWxkIGhhdmUgYmVlbiAyOTcwOCBJbiBhbm90aGVyIGNhc2UgQmVsbCBwcm9wb3NlZCBhbmQgRExBIGFjY2VwdGVkIGEgdW5pdCBwcmljZSBvZiA0OTIxNyBmb3IgYSA1MTY3IHBpbiBCZWxsIEhlbGljb3B0ZXIgYWxzbyBjaGFyZ2VkIHRoZSBhZ2VuY3kgMjk1NTcgYXBpZWNlIGZvciBvbmVpbmNoIGJ1c2hpbmdzIHRoZSBpbnNwZWN0b3IgZ2VuZXJhbCBkZXRlcm1pbmVkIHNob3VsZCBoYXZlIGNvc3QgYW4gYXZlcmFnZSAyNTcyIGVhY2ggVGhlIERlZmVuc2UgTG9naXN0aWNzIEFnZW5jeXMgQmVlYmUgc2FpZCBpbiBoaXMgd3JpdHRlbiByZXNwb25zZSB0byB0aGUgcmVwb3J0IHRoYXQgdGhlIGFnZW5jeSBmb2xsb3dlZCBjdXJyZW50IGNvbW1lcmNpYWwgY29udHJhY3RpbmcgcHJvY2VkdXJlcyBhbmQgcHJpY2luZyBtZXRob2RvbG9neSBhbmQgcGFpZCAzNSBwZXJjZW50IGxlc3MgdGhhbiB0aGUgY29tcGFueSBjaGFyZ2VkIGNvbW1lcmNpYWwgY3VzdG9tZXJzIFRoZSBkZWFsIHdpdGggQmVsbCBhbHNvIHByb3ZpZGVkIGZvciBhZGRpdGlvbmFsIHByaWNlIGN1dHMgaWYgY29tbWVyY2lhbCBjdXN0b21lcnMgd2VyZSBjaGFyZ2VkIGxlc3MgZm9yIHRoZSBzYW1lIGl0ZW0gQmVlYmUgc2FpZHQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMC0wNi0xMVQwMDowMDowMFogVE8gMjAxMy0wNy0zMFQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTIxNzQy</field><field name="title" class="java.lang.String">rO0ABXQAOExvY2toZWVkJ3MgRi0zNSBGaWdodGVyIFRha2VzIEJpZyBIaXQgaW4gUGVudGFnb24gQnVkZ2V0</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATV1S9sAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDgyODNiYWQ5ZDU4YjQ4ODU=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0xNVA==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATV6cjcAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBV7rhR64Uf</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBWIzMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBV6j1wo9cK</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBWHMzMzMzN</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBTcUeuFHrh</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAABmVnA==</field><field name="id" class="java.lang.String">rO0ABXQAEDI5NTU4NGE2MTk3NTRhNDc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJcvAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIwMzk0</field><field name="title" class="java.lang.String">rO0ABXQAMUJpZyBGaXJtcyBPcHQgT3V0IG9mIEJpZGRpbmcgZm9yIEFpciBGb3JjZSBDb3B0ZXI=</field><field name="content" class="java.lang.String">rO0ABXQRDk5vcnRocm9wIEdydW1tYW4gQ29ycCwgd2hpY2ggd2FzIHRlYW1lZCB3aXRoIEl0YWx5J3MgRmlubWVjY2FuaWNhIFNwQTsgQm9laW5nIENvOyBUZXh0cm9uJ3MgIEJlbGwgSGVsaWNvcHRlciB1bml0OyBhbmQgdGhlIFUuUy4gdW5pdCBvZiBFdXJvcGUncyBFQURTICBzYWlkIHRoZXkgd291bGQgbm90IGNvbXBldGUgdG8gYnVpbGQgMTEyIG5ldyBoZWxpY29wdGVycyBmb3IgdGhlIEFpciBGb3JjZSwgcmFpc2luZyBxdWVzdGlvbnMgYWJvdXQgd2hldGhlciB0aGUgY29udGVzdCBjYW4gcHJvY2VlZCBhcyBwbGFubmVkLiBJbmR1c3RyeSBleGVjdXRpdmVzLCBzcGVha2luZyBvbiBiYWNrZ3JvdW5kLCBzYWlkIHRoZSBBaXIgRm9yY2UgYmlkZGluZyBydWxlcyB3ZXJlIHNvIG5hcnJvd2x5IGZyYW1lZCB0aGF0IHRoZXkgZWZmZWN0aXZlbHkgZXhjbHVkZWQgdGhlaXIgYWlyY3JhZnQgZnJvbSB0aGUgY29tcGV0aXRpb24uIFRoZXkgc2FpZCB0aGUgdGVybXMgZmF2b3JlZCBTaWtvcnNreSdzIEJsYWNrIEhhd2sgaGVsaWNvcHRlciBhbmQgd291bGQgbm90IHJld2FyZCBleHRyYSBjYXBhYmlsaXR5IG9mZmVyZWQgYnkgYmlnZ2VyIGFpcmNyYWZ0LiBObyBjb21tZW50IHdhcyBpbW1lZGlhdGVseSBhdmFpbGFibGUgZnJvbSB0aGUgQWlyIEZvcmNlIG9uIHdoZXRoZXIgaXQgd291bGQgY29udGludWUgdGhlIGNvbXBldGl0aW9uIHVuZGVyIHRoZSB0ZXJtcyBpdCBmaXJzdCBvdXRsaW5lZCBpbiBNYXJjaCBhbmQgZmluYWxpemVkIGluIE9jdG9iZXIuIFRoZSBBaXIgRm9yY2UgcmV2YW1wZWQgdGhlIGNvbXBldGl0aW9uIHRvIGZvY3VzIG9uIGV4aXN0aW5nIGFpcmNyYWZ0IGFuZCBhZmZvcmRhYmlsaXR5LCBnaXZlbiBtb3VudGluZyBidWRnZXQgcHJlc3N1cmVzLiBTaWtvcnNreSBBaXJjcmFmdCwgYSB1bml0IG9mIFVuaXRlZCBUZWNobm9sb2dpZXMgQ29ycCAgdGhhdCBoYXMgdGVhbWVkIHVwIHdpdGggTG9ja2hlZWQgTWFydGluIENvcnAsIHNhaWQgaXQgc3RpbGwgcGxhbm5lZCB0byBzdWJtaXQgYSBiaWQgZm9yIHRoZSB3b3JrLiBTaWtvcnNreSBidWlsdCB0aGUgZXhpc3RpbmcgZmxlZXQgb2YgSC02MCBQYXZlIEhhd2tzLCB3aGljaCBhcmUgYSB2YXJpYW50IG9mIGl0cyBwb3B1bGFyIEJsYWNrIEhhd2sgaGVsaWNvcHRlci4gTm9ydGhyb3AsIHdoaWNoIGFubm91bmNlZCBhIHRlYW1pbmcgYWdyZWVtZW50IHdpdGggRmlubWVjY2FuaWNhJ3MgQWd1c3RhV2VzdGxhbmQgaW4gU2VwdGVtYmVyLCBzYWlkIHRoZSB0d28gY29tcGFuaWVzIHN0aWxsIHBsYW4gdG8gYmlkIGZvciBhIHNlcGFyYXRlIFUuUy4gTmF2eSBjb21wZXRpdGlvbiBmb3IgYSBuZXcgcHJlc2lkZW50aWFsIGhlbGljb3B0ZXIgdXNpbmcgQWd1c3RhV2VzdGxhbmQncyBBVzEwMS4gTm9ydGhyb3Agc3Bva2Vzd29tYW4gTWFyZ2FyZXQgTWl0Y2hlbGwtSm9uZXMgc2FpZCB0aGUgdHdvIGNvbXBhbmllcyBkZWNpZGVkIHRvIHNraXAgdGhlIEFpciBGb3JjZSBjb21wZXRpdGlvbiBhZnRlciBhIHRob3JvdWdoIGFuYWx5c2lzIG9mIHRoZSBzZXJ2aWNlJ3MgZmluYWwgcmVxdWVzdCBmb3IgcHJvcG9zYWxzLCBvciBSRlAsIHdoaWNoIHdhcyBwdWJsaXNoZWQgaW4gT2N0b2Jlci4gQmlkcyBhcmUgZHVlIEphbi4gMy4gQm9laW5nIHNhaWQgaXQgd291bGQgbm90IHN1Ym1pdCBiaWRzIGJhc2VkIG9uIGl0cyBILTQ3IGhlbGljb3B0ZXIgLS0gd2hpY2ggd29uIHRoZSBBaXIgRm9yY2UncyBsYXN0IHJlc2N1ZSBoZWxpY29wdGVyIGNvbXBldGl0aW9uLCBvbmx5IHRvIHNlZSB0aGUgJDE1IGJpbGxpb24gY29udHJhY3QgY2FuY2VsZWQgLS0gb3IgdGhlIFYtMjIgdGlsdCByb3RvciBhaXJjcmFmdCBidWlsdCB3aXRoIEJlbGwgSGVsaWNvcHRlciB1bml0LiBCb2Vpbmcgc3Bva2VzbWFuIERhbWllbiBNaWxscyBzYWlkIHRoZSBILTQ3IENoaW5vb2sgYW5kIHRoZSBWLTIyICJPc3ByZXkiIGhhZCBiZWVuIHByb3ZlbiB0byBiZSB0aGUgd29ybGQncyBtb3N0IGNhcGFibGUgYW5kIGNvc3QtZWZmZWN0aXZlIHNlYXJjaCBhbmQgcmVzY3VlIGFpcmNyYWZ0LCBidXQgdGhlaXIgY2FwYWJpbGl0aWVzIGV4Y2VlZGVkIHRoZSBwYXJhbWV0ZXJzIG9mIHRoZSBBaXIgRm9yY2UgY29udGVzdC4gIldoaWxlIHRoZSBDaGlub29rIGFuZCBPc3ByZXkgZXhjZWVkIHRoZSBwYXJhbWV0ZXJzIG9mIHRoZSBVU0FGJ3MgQ29tYmF0IFJlc2N1ZSBIZWxpY29wdGVyIHByb2dyYW0sIHRoZXkgYXJlIG9mdGVuIHRoZSBnby10byBhaXJjcmFmdCBmb3IgdGhlIFUuUy4gQXJteSwgTWFyaW5lcyBhbmQgQWlyIEZvcmNlIFNwZWNpYWwgT3BlcmF0aW9ucyBDb21tYW5kIHdoZW4gbmVlZGluZyB0byBleHRyYWN0IHBlcnNvbm5lbCBmcm9tIGRhbmdlcm91cyBzaXR1YXRpb25zLCIgTWlsbHMgc2FpZC4gSGUgc2FpZCB0aGUgdHdvIGFpcmNyYWZ0IGhhZCBiZWVuIHVzZWQgdG8gc2F2ZSBsaXZlcyBpbiBjb25kaXRpb25zIHdoZXJlIG90aGVyIGFpcmNyYWZ0IGNvdWxkIG5vdCBvcGVyYXRlLiBFQURTIGFsc28gc2FpZCBpdCB3b3VsZCBza2lwIHRoZSBjb21wZXRpdGlvbi4gRUFEUyBOb3J0aCBBbWVyaWNhIENoaWVmIEV4ZWN1dGl2ZSBTZWFuIE8nS2VlZmUgdG9sZCBSZXV0ZXJzIGluIEp1bHkgdGhhdCBoaXMgY29tcGFueSBtaWdodCBub3QgYmlkIHVubGVzcyB0aGUgQWlyIEZvcmNlIGRyYW1hdGljYWxseSByZXZhbXBlZCBydWxlcy4gQXMgd3JpdHRlbiwgaGUgc2FpZCBhdCB0aGUgdGltZSwgdGhlIHJ1bGVzIHdvdWxkIGhhdmUga25vY2tlZCBoaXMgY29tcGFueSdzIGhlbGljb3B0ZXJzIG91dCBvZiB0aGUgcnVubmluZy4gVGhlIEFpciBGb3JjZSBydWxlcyBzYXkgbm8gY29tcGFueSB3aWxsIGJlIGNvbnNpZGVyZWQgaWYgaXRzIHRvdGFsIGJpZCBpcyBldmFsdWF0ZWQgdG8gY29zdCBtb3JlIHRoYW4gJDYuODQgYmlsbGlvbi4gVGhlIEFpciBGb3JjZSBpbiAyMDA2IHBpY2tlZCBCb2VpbmcncyBILTQ3IENoaW5vb2sgaGVsaWNvcHRlciB0byByZXBsYWNlIGl0cyBhZ2luZyBmbGVldCBvZiBTaWtvcnNreSBISC02MCBQYXZlIEhhd2sgaGVsaWNvcHRlcnMsIGJ1dCB0aGUgUGVudGFnb24gY2FuY2VsZWQgdGhlIGNvbnRyYWN0IGluIDIwMDkgYWZ0ZXIgbXVsdGlwbGUgcHJvdGVzdHMgYnkgdGhlIGxvc2luZyBiaWRkZXJzLiBUaGUgc2VydmljZSByZWxlYXNlZCBhIGRyYWZ0IHJlcXVlc3QgZm9yIHByb3Bvc2FscyBpbiBNYXJjaCB0aGF0IHdhcyBjb25jZWl2ZWQgYXMgYSAiYmVzdCB2YWx1ZSIgY29tcGV0aXRpb24sIGJ1dCBsZWZ0IHNvbWUgaW5kdXN0cnkgZXhlY3V0aXZlcyBjb25jZXJuZWQgYWJvdXQgd2hldGhlciB0aGUgcnVsZXMgd291bGQgYWxsb3cgdGhlbSB0byB3aW4gdGhlIGJpZCwgb3IgbWFrZSBtdWNoIHByb2ZpdCBpZiB0aGV5IGRpZC4gSXQgZmluYWxpemVkIHRoZSBydWxlcyBpbiBPY3RvYmVyLiBUaGUgQWlyIEZvcmNlIHJldmFtcGVkIGl0cyBhcHByb2FjaCB0byB0aGUgcmVzY3VlIGhlbGljb3B0ZXIgcHJvZ3JhbSB0byBwdXQgYSBwcmVtaXVtIG9uIGxvd2VyIGNvc3RzLCBzaW5jZSBpdCBpcyBmYWNpbmcgaHVnZSBvdXRsYXlzIGluIGNvbWluZyB5ZWFycyBmb3IgbmV3IHJlZnVlbGluZyB0YW5rZXJzIGJlaW5nIGJ1aWx0IGJ5IEJvZWluZywgRi0zNSBmaWdodGVyIHBsYW5lcyBidWlsdCBieSBMb2NraGVlZCBNYXJ0aW4gYW5kIGEgbmV3IGxvbmctcmFuZ2UgYm9tYmVyIHRoYXQgaXQgd2FudHMgdG8gc3RhcnQgZGV2ZWxvcGluZy4gIlRoZSBBaXIgRm9yY2UgYnVkZ2V0IGlzIHVuZGVyIHRyZW1lbmRvdXMgcHJlc3N1cmUsIiBzYWlkIGRlZmVuc2UgY29uc3VsdGFudCBKaW0gTWNBbGVlc2UuICJUaGUgdGFua2VyLCBGLTM1IGFuZCBib21iZXIgYXJlIGNyaXRpY2FsIHByaW9yaXRpZXMuIEV2ZXJ5IG90aGVyIHByb2dyYW0gbXVzdCBqdXN0aWZ5IHRoZSBpbmNyZW1lbnRhbCBnYWluIGluIGNvbWJhdCBjYXBhYmlsaXRpZXMgcmVsYXRpdmUgdG8gaXRzIGNvc3QuIiBJbiBPY3RvYmVyLCB0aGUgQWlyIEZvcmNlIHNhaWQgaXQgd2FzIHB1cnN1aW5nIGEgImNhcGFiaWxpdHktYmFzZWQsIGJlc3QtdmFsdWUgYXBwcm9hY2gsIiB3aXRoIGEgYmlnIHB1c2ggdG8gdXNlIGFpcmNyYWZ0IGFuZCB0cmFpbmluZyBzeXN0ZW1zIHRoYXQgYXJlIGFscmVhZHkgaW4gcHJvZHVjdGlvbi4gVGhlIHNlcnZpY2Ugc2FpZCBpdHMgYXBwcm9hY2ggaGFkIGJlZW4gY2FyZWZ1bGx5IHJldmlld2VkIGJ5IHRvcCBQZW50YWdvbiBsZWFkZXJzIHRvIGVuc3VyZSBhIGxvdy1yaXNrLCBleGVjdXRhYmxlIHByb2Nlc3MgdGhhdCAid2lsbCBkZWxpdmVyIHRoZSB3YXJmaWdodGVyIGEgcHJvZHVjdCB0aGF0IG1lZXRzIHRoZSByZXF1aXJlbWVudCBhdCBhbiBhZmZvcmRhYmxlIHByaWNlLiI=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATuIjGMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDZkZmE3YzMyNTI3ZTE1ODM=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0xNVA==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATuNsr8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBXE9cKPXCk</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBXMAAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBW7Cj1wo9c</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBW89cKPXCk</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBVJHrhR64U</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAABb3TA==</field><field name="id" class="java.lang.String">rO0ABXQAEDg2NDRkNWU2MDExOTA4NjA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKdiAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDI3NTc=</field><field name="title" class="java.lang.String">rO0ABXQAMEdvdnQgSGFuZGxpbmcgb2YgU2NpZW5jZSBvbiBPaWwgU3BpbGwgUXVlc3Rpb25lZA==</field><field name="content" class="java.lang.String">rO0ABXQWiFRoZSBvaWwgc3BpbGwgdGhhdCBkYW1hZ2VkIHRoZSBHdWxmIG9mIE1leGljbydzIHJlZWZzIGFuZCB3ZXRsYW5kcyBpcyBhbHNvIHRocmVhdGVuaW5nIHRvIHN0YWluIHRoZSBPYmFtYSBhZG1pbmlzdHJhdGlvbidzIHJlcHV0YXRpb24gZm9yIHJlbHlpbmcgb24gc2NpZW5jZSB0byBndWlkZSBwb2xpY3kuIEFjYWRlbWljcywgZW52aXJvbm1lbnRhbGlzdHMgYW5kIGZlZGVyYWwgaW52ZXN0aWdhdG9ycyBoYXZlIGFjY3VzZWQgdGhlIGFkbWluaXN0cmF0aW9uIHNpbmNlIHRoZSBBcHJpbCBzcGlsbCBvZiBkb3ducGxheWluZyBzY2llbnRpZmljIGZpbmRpbmdzLCBtaXNyZXByZXNlbnRpbmcgZGF0YSBhbmQgbW9zdCByZWNlbnRseSBtaXNjb25zdHJ1aW5nIHRoZSBvcGluaW9ucyBvZiBleHBlcnRzIGl0IHNvbGljaXRlZC4gTWVhbndoaWxlLCB0aGUgb3duZXIgb2YgdGhlIHJpZyB0aGF0IGV4cGxvZGVkIGluIHRoZSBHdWxmIG9mIE1leGljbywgVHJhbnNvY2VhbiBMdGQuLCBpcyByZW5ld2luZyBpdHMgYXJndW1lbnQgdGhhdCBmZWRlcmFsIGludmVzdGlnYXRvcnMgYXJlIGluIGRhbmdlciBvZiBhbGxvd2luZyB0aGUgYmxvd291dCBwcmV2ZW50ZXIsIGEga2V5IHBpZWNlIG9mIGV2aWRlbmNlLCB0byBjb3Jyb2RlIGFzIGl0IGF3YWl0cyBmb3JlbnNpYyBhbmFseXNpcy4gVGVzdGluZyBoYWQgbm90IGJlZ3VuIGFzIG9mIGxhc3Qgd2VlaywgdGhlIGNvbXBhbnkgc2F5cywgc29tZSB0d28gbW9udGhzIGFmdGVyIGl0IHdhcyByYWlzZWQgZnJvbSB0aGUgc2VhZmxvb3IuIFRoZSBibG93b3V0IHByZXZlbnRlciBjb3VsZCBiZSBhIGtleSBwaWVjZSBvZiBldmlkZW5jZSBpbiBsYXdzdWl0cyBmaWxlZCBieSB2aWN0aW1zLCBzdXJ2aXZvcnMgYW5kIG90aGVycy4gVHJhbnNvY2VhbiB3YXMgcmVzcG9uc2libGUgZm9yIG1haW50YWluaW5nIGl0IHdoaWxlIGl0IHdhcyBiZWluZyB1c2VkIG9uIEJQJ3Mgd2VsbC4gSW52ZXN0aWdhdG9ycyBhZ3JlZWQgdG8gZmx1c2ggdGhlIGNvbnRyb2wgcG9kcyB3aXRoIGZsdWlkIG9uIFNlcHQuIDI3IHRvIHByZXZlbnQgY29ycm9zaW9uLiBCdXQgYSBUcmFuc29jZWFuIGxhd3llciB3cm90ZSBpbiBoaXMgTm92LiAzIGxldHRlciB0aGF0IHRoZXJlIGhhdmUgYmVlbiBubyBmdXJ0aGVyIHByZXNlcnZhdGlvbiBzdGVwcyBvbiB0aGUgYmxvd291dCBwcmV2ZW50ZXIgc2luY2UgdGhlbi4gVGhlIGxhdGVzdCBjb21wbGFpbnQgZnJvbSBzY2llbnRpc3RzIGNvbWVzIGluIGEgcmVwb3J0IGJ5IHRoZSBJbnRlcmlvciBEZXBhcnRtZW50J3MgaW5zcGVjdG9yIGdlbmVyYWwsIHdoaWNoIGNvbmNsdWRlZCB0aGF0IHRoZSBXaGl0ZSBIb3VzZSBlZGl0ZWQgYSBkcmlsbGluZyBzYWZldHkgcmVwb3J0IGluIGEgd2F5IHRoYXQgbWFkZSBpdCBmYWxzZWx5IGFwcGVhciB0aGF0IHNjaWVudGlzdHMgYW5kIGV4cGVydHMgc3VwcG9ydGVkIHRoZSBhZG1pbmlzdHJhdGlvbidzIHNpeC1tb250aCBiYW4gb24gbmV3IGRlZXAtd2F0ZXIgZHJpbGxpbmcuIFRoZSBBUCBvYnRhaW5lZCB0aGUgcmVwb3J0IGVhcmx5IFdlZG5lc2RheS4gVGhlIGluc3BlY3RvciBnZW5lcmFsIHNhaWQgdGhlIGVkaXRpbmcgY2hhbmdlcyBieSB0aGUgV2hpdGUgSG91c2UgcmVzdWx0ZWQgImluIHRoZSBpbXBsaWNhdGlvbiB0aGF0IHRoZSBtb3JhdG9yaXVtIHJlY29tbWVuZGF0aW9uIGhhZCBiZWVuIHBlZXIgcmV2aWV3ZWQuIiBCdXQgaXQgaGFkbid0IGJlZW4uIE91dHNpZGUgc2NpZW50aXN0cyB3ZXJlIGFza2VkIG9ubHkgdG8gcmV2aWV3IG5ldyBzYWZldHkgbWVhc3VyZXMgZm9yIG9mZnNob3JlIGRyaWxsaW5nLiAiVGhlcmUgYXJlIHJlYWxseSBvbmx5IGEgZmV3IHBlb3BsZSB0aGF0IGtub3cgd2hhdCB0aGV5IGFyZSB0YWxraW5nIGFib3V0IiBvbiBvZmZzaG9yZSBkcmlsbGluZywiIHNhaWQgRm9yZCBCcmV0dCwgbWFuYWdpbmcgZGlyZWN0b3Igb2YgUGV0cm9za2lsbHMsIGEgVHVsc2EsIE9rbGEuLWJhc2VkIHBldHJvbGV1bSB0cmFpbmluZyBvcmdhbml6YXRpb24uICJUaGUgcGVvcGxlIHdobyBtYWtlIHRoaXMgcG9saWN5IGRvIG5vdCAuLi4gc28gZG9uJ3QgbWlzcmVwcmVzZW50IG1lIGFuZCB1c2UgbWUgZm9yIGNvdmVyLCIgc2FpZCBCcmV0dCwgb25lIG9mIHNldmVuIGV4cGVydHMgd2hvIHJldmlld2VkIHRoZSByZXBvcnQuIEluIGEgc3RhdGVtZW50IGlzc3VlZCBXZWRuZXNkYXksIHRoZSBXaGl0ZSBIb3VzZSBpbnNpc3RlZCB0aGUgcmV2aWV3IHdhcyBwcm9wZXJseSBjb29yZGluYXRlZCBhbmQgcG9pbnRlZCB0byB0aGUgaW5zcGVjdG9yIGdlbmVyYWwncyBmaW5kaW5ncy4gIkZvbGxvd2luZyBhIHJldmlldyB0aGF0IGluY2x1ZGVkIGludGVydmlld3Mgd2l0aCBwZWVyIHJldmlldyBleHBlcnRzLCB0aGUgSW5zcGVjdG9yIEdlbmVyYWwgZm91bmQgbm8gaW50ZW50aW9uYWwgbWlzcmVwcmVzZW50YXRpb24gb2YgdGhlaXIgdmlld3MuLi5UaGUgZGVjaXNpb24gdG8gaW1wbGVtZW50IGEgc2l4LW1vbnRoIG1vcmF0b3JpdW0gb24gZGVlcC13YXRlciBkcmlsbGluZyBpbiB0aGUgR3VsZiBvZiBNZXhpY28gd2FzIGNvcnJlY3RseSBiYXNlZCBvbiB0aGUgbmVlZCBmb3IgYWRlcXVhdGUgc3BpbGwgcmVzcG9uc2UsIHdlbGwgY29udGFpbm1lbnQgYW5kIHNhZmV0eSBtZWFzdXJlcywgYW5kIHdlIHN0YW5kIGJlaGluZCB0aGF0IGRlY2lzaW9uLCIgV2hpdGUgSG91c2UgZGVwdXR5IHByZXNzIHNlY3JldGFyeSBCaWxsIEJ1cnRvbiBzYWlkLiBMYXN0IG1vbnRoLCBzdGFmZiBmb3IgdGhlIHByZXNpZGVudGlhbCBvaWwgc3BpbGwgY29tbWlzc2lvbiBzYWlkIHRoYXQgdGhlIFdoaXRlIEhvdXNlJ3MgYnVkZ2V0IG9mZmljZSBkZWxheWVkIHB1YmxpY2F0aW9uIG9mIGEgc2NpZW50aWZpYyByZXBvcnQgdGhhdCBmb3JlY2FzdCBob3cgbXVjaCBvaWwgY291bGQgcmVhY2ggdGhlIEd1bGYncyBzaG9yZXMuIEZlZGVyYWwgc2NpZW50aXN0cyBpbml0aWFsbHkgdXNlZCBhIHZvbHVtZSBvZiBvaWwgdGhhdCBkaWQgbm90IGFjY291bnQgZm9yIHRoZSBhZG1pbmlzdHJhdGlvbidzIHZhcmlvdXMgY2xlYW51cCBlZmZvcnRzLCBidXQgdGhlIGdvdmVybm1lbnQgdWx0aW1hdGVseSBjaXRlZCBzbWFsbGVyIGFtb3VudHMgb2Ygb2lsLiBUaGUgc2FtZSByZXBvcnQgc2FpZCB0aGF0IFByZXNpZGVudCBCYXJhY2sgT2JhbWEncyBlbmVyZ3kgYWR2aXNlciwgQ2Fyb2wgQnJvd25lciwgbWlzY2hhcmFjdGVyaXplZCBvbiBuYXRpb25hbCBUViBhIGdvdmVybm1lbnQgYW5hbHlzaXMgYWJvdXQgd2hlcmUgdGhlIG9pbCB3ZW50LCBzYXlpbmcgaXQgc2hvd2VkIG1vc3Qgb2YgdGhlIG9pbCB3YXMgImdvbmUuIiBUaGUgcmVwb3J0IHNhaWQgaXQgY291bGQgc3RpbGwgYmUgdGhlcmUuIEl0IGFsc28gc2FpZCB0aGF0IEJyb3duZXIgYW5kIHRoZSBoZWFkIG9mIHRoZSBOYXRpb25hbCBPY2VhbmljIGFuZCBBdG1vc3BoZXJpYyBBZG1pbmlzdHJhdGlvbiwgSmFuZSBMdWJjaGVuY28sIGNvbnRyaWJ1dGVkIHRvIHRoZSBwdWJsaWMncyBwZXJjZXB0aW9uIHRoZSByZXBvcnQgd2FzIG1vcmUgZXhhY3QgdGhhbiBpdCB3YXMgYnkgZW1waGFzaXppbmcgcGVlciByZXZpZXcuIFRoZSBuZXcgaW5zcGVjdG9yIGdlbmVyYWwgcmVwb3J0IHNhaWQgQnJvd25lcidzIHN0YWZmIGltcGxpZWQgdGhhdCBzY2llbnRpc3RzIGhhZCBlbmRvcnNlZCB0aGUgZHJpbGxpbmcgbW9yYXRvcml1bSwgYnkgcmFpc2luZyBhIHJlZmVyZW5jZSB0byBwZWVyIHJldmlldyBpbiB0aGUgZHJpbGxpbmcgc2FmZXR5IHJlcG9ydC4gQXQgbGVhc3Qgb25lIG91dHNpZGUgZXhwZXJ0IHdobyB3YXMgaW52b2x2ZWQgc2FpZCBoZSB3YXMgY29udmluY2VkIGFmdGVyd2FyZCB0aGF0IGl0IHdhc24ndCBhIGRlbGliZXJhdGUgZGVjZXB0aW9uLCBhbmQgSW50ZXJpb3IgRGVwYXJ0bWVudCBvZmZpY2lhbHMgdG9sZCB0aGUgaW5zcGVjdG9yIGdlbmVyYWwgdGhleSBkaWRuJ3QgZGVsaWJlcmF0ZWx5IG1ha2UgY2hhbmdlcyB0byBjYXVzZSBjb25mdXNpb24uICJUaGVyZSB3YXMgbm8gaW50ZW50IHRvIG1pc2xlYWQgdGhlIHB1YmxpYywiIHNhaWQgS2VuZHJhIEJhcmtvZmYsIGEgc3Bva2Vzd29tYW4gZm9yIEludGVyaW9yIFNlY3JldGFyeSBLZW4gU2FsYXphciwgd2hvIGFsc28gcmVjb21tZW5kZWQgaW4gdGhlIE1heSAyNyBzYWZldHkgcmVwb3J0IHRoYXQgYSBtb3JhdG9yaXVtIGJlIHBsYWNlZCBvbiBkZWVwLXdhdGVyIG9pbCBhbmQgZ2FzIGV4cGxvcmF0aW9uLiAiVGhlIGRlY2lzaW9uIHRvIGltcG9zZSBhIHRlbXBvcmFyeSBtb3JhdG9yaXVtIG9uIGRlZXAtd2F0ZXIgZHJpbGxpbmcgd2FzIG1hZGUgYnkgdGhlIHNlY3JldGFyeSwgZm9sbG93aW5nIGNvbnN1bHRhdGlvbiB3aXRoIGNvbGxlYWd1ZXMgaW5jbHVkaW5nIHRoZSBXaGl0ZSBIb3VzZS4iIEFmdGVyIG9uZSBvZiB0aGUgcmV2aWV3ZXJzIGNvbXBsYWluZWQsIHRoZSBJbnRlcmlvciBEZXBhcnRtZW50IHByb21wdGx5IGlzc3VlZCBhbiBhcG9sb2d5IGR1cmluZyBhIGNvbmZlcmVuY2UgY2FsbCwgaW4gYSBmb3JtYWwgbGV0dGVyIGFuZCBkdXJpbmcgYSBwZXJzb25hbCBtZWV0aW5nIGluIEp1bmUuIEFsbCBzZXZlbiBleHBlcnRzIGFza2VkIHRvIHJldmlldyB0aGUgSW50ZXJpb3IgRGVwYXJ0bWVudCdzIHdvcmsgZXhwcmVzc2VkIGNvbmNlcm4gYWJvdXQgdGhlIGNoYW5nZSBtYWRlIGJ5IHRoZSBXaGl0ZSBIb3VzZSwgc2F5aW5nIHRoYXQgaXQgZGlmZmVyZWQgaW4gaW1wb3J0YW50IHdheXMgZnJvbSB0aGUgZHJhZnQgdGhleSBoYWQgYXBwcm92ZWQuICJXZSBiZWxpZXZlIHRoZSByZXBvcnQgZG9lcyBub3QganVzdGlmeSB0aGUgbW9yYXRvcml1bSBhcyB3cml0dGVuLCBhbmQgdGhhdCB0aGUgbW9yYXRvcml1bSBhcyBjaGFuZ2VkIHdpbGwgbm90IGNvbnRyaWJ1dGUgbWVhc3VyYWJseSB0byBpbmNyZWFzZWQgc2FmZXR5IGFuZCB3aWxsIGhhdmUgaW1tZWRpYXRlIGFuZCBsb25nLXRlcm0gZWNvbm9taWMgZWZmZWN0cywiIHRoZSBzY2llbnRpc3RzIHdyb3RlIGVhcmxpZXIgdGhpcyB5ZWFyIHRvIExvdWlzaWFuYSBHb3YuIEJvYmJ5IEppbmRhbCBhbmQgU2Vucy4gTWFyeSBMYW5kcmlldSBhbmQgRGF2aWQgVml0dGVyLiAiVGhlIHNlY3JldGFyeSBzaG91bGQgYmUgZnJlZSB0byByZWNvbW1lbmQgd2hhdGV2ZXIgaGUgdGhpbmtzIGlzIGNvcnJlY3QsIGJ1dCBoZSBzaG91bGQgbm90IGJlIGZyZWUgdG8gdXNlIG91ciBuYW1lcyB0byBqdXN0aWZ5IGhpcyBwb2xpdGljYWwgZGVjaXNpb25zLiIgVGhvc2UgY29tcGxhaW50cyB3ZXJlIHNpbWlsYXIgdG8gdGhvc2Ugb2Ygb3RoZXIgc2NpZW50aXN0cy4gIlRoZWlyIGVzdGltYXRlcyBhbHdheXMgc2VlbWVkIHRvIGJlIGJpYXNlZCB0byB0aGUgYmVzdCBjYXNlLCIgc2FpZCBKb3NlcGggTW9udG95YSwgYSBiaW9sb2d5IHByb2Zlc3NvciBhdCBHZW9yZ2lhIFRlY2guICJBIG51bWJlciBvZiBzY2llbnRpc3RzIGhhdmUgZXhwZXJpZW5jZWQgYSBzdHJvbmcgcHVzaCBiYWNrLiIgVGhlIGluc3BlY3RvciBnZW5lcmFsJ3MgcmVwb3J0IHNhaWQgdGhlIGFkbWluaXN0cmF0aW9uIGRpZCBub3QgdmlvbGF0ZSBmZWRlcmFsIHJ1bGVzIGJlY2F1c2UgdGhlIGV4ZWN1dGl2ZSBzdW1tYXJ5IGRpZCBub3Qgc2F5IHRoZSBleHBlcnRzIGFwcHJvdmVkIG9mIHRoZSBtb3JhdG9yaXVtIGFuZCBiZWNhdXNlIHRoZSBkZXBhcnRtZW50IHB1YmxpY2x5IGNsYXJpZmllZCB3aGF0IHRoZSBleHBlcnRzIHNhaWQgYW5kIGhhZCBvZmZlcmVkIGEgZm9ybWFsIGFwb2xvZ3ku</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAASw5hOcAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGQ2N2EzYzA5ODE1MDE2MDQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAA1NJWA==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAASw+q0MAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBKdwo9cKPX</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBKkKPXCj1x</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBKIAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBKOFHrhR64</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAmFHrhR64U</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAXN8A==</field><field name="id" class="java.lang.String">rO0ABXQAEGMwNWMxMTc1NmQ2NTZlMzU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHX6AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDE2OTQ=</field><field name="title" class="java.lang.String">rO0ABXQARURvY3VtZW50cyBTaG93IFRpZXMgQmV0d2VlbiBPaWwgRHJpbGxpbmcgUmVndWxhdG9ycywgSW5kdXN0cnkgUGVyc2lzdA==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATFp9rCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGViZTIzNGM2Y2Q2ZmUzMjU=</field><field name="symbol" class="java.lang.String">rO0ABXQABExBS0U=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATFvHQyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAgKPXCj1wp</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAgR64UeuFI</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAgKPXCj1wp</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAgKPXCj1wp</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAgKPXCj1wp</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAASXA==</field><field name="id" class="java.lang.String">rO0ABXQAEGRjNWQ0M2NkNTIzMzVkZDQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mD5gAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIxNDY2</field><field name="title" class="java.lang.String">rO0ABXQAOVN0YW5kYXJkIENoYXJ0ZXJlZOKAmXMgTlkgUHJvYmUgRW5kcyBhcyBVUyBJbnF1aXJpZXMgTG9vbQ==</field><field name="content" class="java.lang.String">rO0ABXQv5lN0YW5kYXJkIENoYXJ0ZXJlZCBQbGMsIGhhdmluZyBzZXR0bGVkIGEgTmV3IFlvcmsgbW9uZXkgbGF1bmRlcmluZyBwcm9iZSBmb3IgJDM0MCBtaWxsaW9uIHRoZSBkYXkgYmVmb3JlIGl0IHdhcyB0byBkZWZlbmQgaXRzIHJpZ2h0IHRvIG9wZXJhdGUgaW4gdGhlIHN0YXRlLCBzdGlsbCBmYWNlcyBmZWRlcmFsIGlucXVpcmllcyBvdmVyIGNsYWltcyBpdCBoZWxwZWQgc2FuY3Rpb25lZCBuYXRpb25zIGluY2x1ZGluZyBJcmFuIGlsbGVnYWxseSBmdW5uZWwgbW9uZXkgdGhyb3VnaCB0aGUgVS5TLiBSZWd1bGF0b3JzIGluY2x1ZGluZyB0aGUgVS5TLiBUcmVhc3VyeSwgRmVkZXJhbCBSZXNlcnZlLCBKdXN0aWNlIERlcGFydG1lbnQgYW5kIE1hbmhhdHRhbiBEaXN0cmljdCBBdHRvcm5leSBkZWNsaW5lZCBpbW1lZGlhdGUgYXR0ZW1wdHMgYXQgYSBnbG9iYWwgc2V0dGxlbWVudCwgc2FpZCB0d28gcGVvcGxlIGZhbWlsaWFyIHdpdGggdGhlIG1hdHRlci4gQSBjb29yZGluYXRlZCBlZmZvcnQgd2FzIGFscmVhZHkgaW4gcHJvZ3Jlc3MgYmVmb3JlIE5ldyBZb3Jr4oCZcyB1bmlsYXRlcmFsIGRlYWwsIGFubm91bmNlZCB5ZXN0ZXJkYXkgYnkgZmluYW5jaWFsIHJlZ3VsYXRvciBCZW5qYW1pbiBMYXdza3ksIG9uZSBvZiB0aGUgcGVvcGxlIHNhaWQuIFRoZSBhZ3JlZW1lbnQgZG9lc27igJl0IHRha2UgaW50byBhY2NvdW50IGFsbCBvZiB0aGUgYmFua+KAmXMgYWxsZWdlZCB2aW9sYXRpb25zLCBpbmNsdWRpbmcgdGhvc2UgaW52b2x2aW5nIG5hdGlvbnMgc3VjaCBhcyBTdWRhbiwgc2FpZCBvbmUgb2YgdGhlIHBlb3BsZSwgd2hvIGFkZGVkIHRoYXQgU2VwdGVtYmVyIGlzIHRoZSBlYXJsaWVzdCBhIHVuaXZlcnNhbCBkZWFsIG1heSBiZSByZWFjaGVkLiBTaGFyZXMgb2YgdGhlIGJhbmsgcm9zZSBhcyBtdWNoIGFzIDUuMSBwZXJjZW50IGluIExvbmRvbiB0b2RheSBhcyB0aGUgTmV3IFlvcmsgc2V0dGxlbWVudCByZW1vdmVkIG9uZSBwcmVzc2luZyByaXNrIHRvIHRoZSBiYW5rLiDigJxGcm9tIHRoZSBiYW5r4oCZcyBwZXJzcGVjdGl2ZSwgdGhleSBuZWVkZWQgdG8gZ2V0IHRoaXMgYmVoaW5kIHRoZW0s4oCdIEFubiBHcmFoYW0sIGRpcmVjdG9yIG9mIHRoZSBCdXNpbmVzcyBMYXcgSW5zdGl0dXRlIGF0IEhhbWxpbmUgVW5pdmVyc2l0eSBTY2hvb2wgb2YgTGF3IGluIFN0LiBQYXVsLCBNaW5uZXNvdGEsIHNhaWQgb2YgdGhlIE5ldyBZb3JrIGFncmVlbWVudC4g4oCcSGFkIHRoaXMgYWN0aW9uIGdvbmUgZm9yd2FyZCwgdGhlIHBvdGVudGlhbCB3YXMgdGhhdCB0aGV5IGNvdWxkIGxvc2UgdGhlaXIgbGljZW5zZSB0byBvcGVyYXRlIGluIE5ldyBZb3JrLCBhbmQgdGhhdCB3b3VsZCBoYXZlIGJlZW4gZGV2YXN0YXRpbmcgdG8gdGhlaXIgb3BlcmF0aW9ucy7igJ0gT25lIGFuYWx5c3QgZXN0aW1hdGVkIHRoYXQgdGhlIGJhbmvigJlzIGxvc3Mgb2YgaXRzIE5ldyBZb3JrIGxpY2Vuc2UgY291bGQgaGF2ZSByZXN1bHRlZCBpbiBhIDQwIHBlcmNlbnQgZHJvcCBpbiBlYXJuaW5ncy4gTGF3c2t54oCZcyBPcmRlciBPbiBBdWcuIDYsIExhd3NreSBpc3N1ZWQgYW4gb3JkZXIgYWNjdXNpbmcgU3RhbmRhcmQgQ2hhcnRlcmVkIG9mIGhlbHBpbmcgSXJhbiBsYXVuZGVyIGFib3V0ICQyNTAgYmlsbGlvbiBpbiB2aW9sYXRpb24gb2YgZmVkZXJhbCBsYXdzLiBIZSBhY2N1c2VkIHRoZSBiYW5rIG9mIGEgZGVjYWRlIG9mIGRlY2VwdGlvbiwgaW5jbHVkaW5nIGtlZXBpbmcgZmFsc2UgcmVjb3JkcywgaW4gaGFuZGxpbmcgbHVjcmF0aXZlIHdpcmUgdHJhbnNmZXJzIGZvciBJcmFuaWFuIGNsaWVudHMuIFRoZSBiYW5rIHNlbnQgdGhlbSB0aHJvdWdoIGl0cyBOZXcgWW9yayB1bml0IGluIHNvLWNhbGxlZCBVLVR1cm4gdHJhbnNhY3Rpb25zIHdpdGggY2xpZW50IG5hbWVzIG9taXR0ZWQgdG8gaGlkZSB0aGVpciBwcm92ZW5hbmNlLCBMYXdza3kgc2FpZC4gVGhlIE5ldyBZb3JrIHJlZ3VsYXRvciBzYWlkIHllc3RlcmRheSBpbiBhIHN0YXRlbWVudCB0aGF0IOKAnHRoZSBwYXJ0aWVzIGhhdmUgYWdyZWVkIHRoYXQgdGhlIGNvbmR1Y3QgYXQgaXNzdWUgaW52b2x2ZWQgdHJhbnNhY3Rpb25zIG9mIGF0IGxlYXN0ICQyNTAgYmlsbGlvbi7igJ0gVGhlICQzNDAgbWlsbGlvbiBmaW5lIHdpbGwgZ28gdG8gTGF3c2t54oCZcyBhZ2VuY3ksIE5ldyBZb3Jr4oCZcyBEZXBhcnRtZW50IG9mIEZpbmFuY2lhbCBTZXJ2aWNlcywgb3IgREZTLCBhbmQgdGhlIHN0YXRlLiBBcyBwYXJ0IG9mIHRoZSBzZXR0bGVtZW50LCBOZXcgWW9yayBzYWlkIHRoZSBiYW5rIGFncmVlZCB0byBpbnN0YWxsIGFuIGluZGVwZW5kZW50IG9uLXNpdGUgbW9uaXRvciBmb3IgYXQgbGVhc3QgdHdvIHllYXJzIHdobyB3aWxsIHJlcG9ydCBkaXJlY3RseSB0byByZWd1bGF0b3JzLiBFeGFtaW5lcnMgZnJvbSB0aGUgREZTIHdpbGwgYWxzbyBiZSBwbGFjZWQgYXQgdGhlIGJhbmsuIEluZGl2aWR1YWwgUmVndWxhdG9yIFRoZSBhY2NvcmQgbWF5IGJlIHRoZSBsYXJnZXN0IGV2ZXIgcGFpZCB0byBhbiBpbmRpdmlkdWFsIHJlZ3VsYXRvciBhcyBwYXJ0IG9mIGEgbW9uZXkgbGF1bmRlcmluZyBhY2NvcmQuIEluIEp1bmUsIElORyBCYW5rIE5WIGFncmVlZCB0byBwYXkgJDYxOSBtaWxsaW9uIHRvIHNldHRsZSBzaW1pbGFyIGFsbGVnYXRpb25zLiBUaGF0IHN1bSB3YXMgc3BsaXQgZXZlbmx5IGJldHdlZW4gYSAkMzA5LjUgbWlsbGlvbiBwYXltZW50IHRvIHRoZSBmZWRlcmFsIGdvdmVybm1lbnQgYW5kIGFuIGVxdWFsIHN1bSB0byB0aGUgTWFuaGF0dGFuIERpc3RyaWN0IEF0dG9ybmV5LiBBIHBlcnNvbiBmYW1pbGlhciB3aXRoIHRoZSBOZXcgWW9yayBwcm9iZSBvZiBTdGFuZGFyZCBDaGFydGVyZWQgc2FpZCB0aGF0IExhd3NreSBoYWQgc291Z2h0IGFzIG11Y2ggYXMgJDcwMCBtaWxsaW9uIHRvIHNldHRsZSBoaXMgaW52ZXN0aWdhdGlvbi4gU3RhbmRhcmQgQ2hhcnRlcmVkIHNhaWQgaW4gYSBzdGF0ZW1lbnQgeWVzdGVyZGF5IHRoYXQg4oCcYSBmb3JtYWwgYWdyZWVtZW50IGNvbnRhaW5pbmcgdGhlIGRldGFpbGVkIHRlcm1zIG9mIHRoZSBzZXR0bGVtZW50IGlzIGV4cGVjdGVkIHRvIGJlIGNvbmNsdWRlZCBzaG9ydGx5LuKAnSBJdCDigJxjb250aW51ZXMgdG8gZW5nYWdlIGNvbnN0cnVjdGl2ZWx5IHdpdGggdGhlIG90aGVyIHJlbGV2YW50IFUuUy4gYXV0aG9yaXRpZXMs4oCdIHRoZSBiYW5rIHNhaWQuIExvbmRvbi1iYXNlZCBTdGFuZGFyZCBDaGFydGVyZWQgZ2VuZXJhdGVzIGFsbW9zdCA5MCBwZXJjZW50IG9mIGl0cyBwcm9maXQgYW5kIHJldmVudWUgaW4gQXNpYSwgQWZyaWNhIGFuZCB0aGUgTWlkZGxlIEVhc3QuIFRoZSBiYW5r4oCZcyBzaGFyZXMgY2xpbWJlZCA0LjEgcGVyY2VudCB0byAxLDQyNi41MCBwZW5jZSBpbiBMb25kb24uIFRoZSBzZXR0bGVtZW50IGJyaW5ncyB0byBhbiBlbmQgYSB3ZWVrLWxvbmcgc2hvd2Rvd24gYmV0d2VlbiBMYXdza3ksIDQyLCBOZXcgWW9ya+KAmXMgdG9wIGJhbmtpbmcgcmVndWxhdG9yLCBhbmQgU3RhbmRhcmQgQ2hhcnRlcmVkIENoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyIFBldGVyIFNhbmRzLCA1MC4g4oCYUm9ndWUgQmFua+KAmSBMYXdza3nigJlzIG9yZGVyIGxhc3Qgd2VlayBjYXVnaHQgdGhlIGJhbmvigJlzIG1hbmFnZW1lbnQgdGVhbSBieSBzdXJwcmlzZS4gTGF3c2t5IGFsbGVnZWQgdGhhdCBTdGFuZGFyZCBDaGFydGVyZWQgd2FzIGEg4oCccm9ndWUgYmFua+KAnSB0aGF0IGhhZCBleGVjdXRlZCA2MCwwMDAgZG9sbGFyLWJhc2VkIHdpcmUgdHJhbnNhY3Rpb25zIGZvciBJcmFuaWFuIGNsaWVudHMgZnJvbSAyMDAxIHRvIDIwMDcuIFN0YW5kYXJkIENoYXJ0ZXJlZOKAmXMgYXBwYXJlbnQgZWZmb3J0IHRvIGNvbmNlYWwgdGhlIGlkZW50aXR5IG9mIGl0cyBJcmFuaWFuIGNvdW50ZXJwYXJ0aWVzIHZpb2xhdGVkIHRoZSB0ZXJtcyBvZiBhIDIwMDQgc2V0dGxlbWVudCBiZXR3ZWVuIGl0IGFuZCB0aGUgc3RhdGUgb2YgTmV3IFlvcmssIGluIHdoaWNoIHRoZSBVLksuIGJhbmsgcGxlZGdlZCDigJx0byBlbnN1cmUgY29tcGxpYW5jZSB3aXRoIGFsbCByZWNvcmQtIGtlZXBpbmcgYW5kIHJlcG9ydGluZyByZXF1aXJlbWVudHMs4oCdIGFjY29yZGluZyB0byB0aGUgb3JkZXIuIEV2ZW4gYmVmb3JlIDIwMDEsIHRoZSBvcmRlciBzdGF0ZWQsIHRoZSBiYW5r4oCZcyBnZW5lcmFsIGNvdW5zZWwg4oCcZW1icmFjZWQgYSBmcmFtZXdvcmsgZm9yIHJlZ3VsYXRvcnkgZXZhc2lvbuKAnSBieSBrZWVwaW5nIGl0cyBOZXcgWW9yayBicmFuY2ggaW4gdGhlIGRhcmsgYWJvdXQgSXJhbiB0cmFuc2FjdGlvbnMuIFRoZSBiYW5rIGFsbGVnZWRseSBhY2NvbXBsaXNoZWQgdGhpcyBnb2FsIGJ5IHN0cmlwcGluZyBvdXQgdGhlIG5hbWUgb2YgSXJhbmlhbiBjbGllbnRzIHNvIGFzIG5vdCB0byBzbG93IGRvd24gdHJhbnNmZXJzIHRoYXQgbWlnaHQgaGF2ZSB0byBiZSByZXZpZXdlZCBmb3IgY29tcGxpYW5jZSB3aXRoIFUuUy4gZWNvbm9taWMgc2FuY3Rpb25zLiBUaG9zZSByZXN0cmljdGlvbnMgYWxsb3dlZCBzb21lIHRyYW5zYWN0aW9ucyBidXQgbm90IG90aGVycyBhcyBsb25nIGFzIG5vbi1JcmFuaWFuIGJhbmtzIHdlcmUgaW52b2x2ZWQgb24gYm90aCBlbmRzLiBGZWRlcmFsIENvbnRyb2xzIEluIGFkZGl0aW9uIHRvIGV2YWRpbmcgZmVkZXJhbCBjb250cm9scywgU3RhbmRhcmQgQ2hhcnRlcmVkIGNvdmVyZWQgdXAgaXRzIHBsYW4gdG8gZ3JhYiBtYXJrZXQgc2hhcmUgaW4gdGhlIElyYW5pYW4gZnVuZHMgbWFya2V0IGJ5IGZhbHNpZnlpbmcgYnVzaW5lc3MgcmVjb3JkcywgbWFraW5nIGZhbHNlIHN0YXRlbWVudHMsIG1haW50YWluaW5nIGluYWNjdXJhdGUgYm9va3MsIG9ic3RydWN0aW5nIG92ZXJzaWdodCBhbmQgZmFpbGluZyB0byByZXBvcnQgbWlzY29uZHVjdCBwcm9tcHRseSwgYWNjb3JkaW5nIHRvIExhd3NreeKAmXMgb3JkZXIuIEZyb20gMjAwNCB0aHJvdWdoIDIwMDcsIFN0YW5kYXJkIENoYXJ0ZXJlZCB3YXMgc3ViamVjdCB0byBmb3JtYWwgYWN0aW9uIG92ZXIgb3RoZXIgcmVndWxhdG9yeSBjb21wbGlhbmNlIGZhaWx1cmVzIHJlbGF0ZWQgdG8gdGhlIEJhbmsgU2VjcmVjeSBBY3QsIGFudGktbW9uZXkgbGF1bmRlcmluZyBwb2xpY2llcyBhbmQgcHJvY2VkdXJlcyBhbmQgcmVndWxhdGlvbnMgb2YgdGhlIFUuUy4gT2ZmaWNlIG9mIEZvcmVpZ24gQXNzZXRzIENvbnRyb2wsIHRoZSBtYWluIG92ZXJzZWVyIG9mIElyYW4gdHJhbnNhY3Rpb25zLiBJbiBhIDIwMDQgYWdyZWVtZW50IHdpdGggcmVndWxhdG9ycywgdGhlIGJhbmsgcHJvbWlzZWQgdG8gbW9uaXRvciBhbmQgaW1wcm92ZSBtb25leS1sYXVuZGVyaW5nIGNvbnRyb2xzLiBUaGUgcmVzdHJpY3Rpb25zIG9mIHRoZSBhZ3JlZW1lbnQgd2VyZSBsaWZ0ZWQgaW4gMjAwNyBiZWNhdXNlIHRoZSBiYW5rIHByb3ZpZGVkIGEg4oCcd2F0ZXJlZC1kb3du4oCdIHJlcG9ydCBvZiBjb21wbGlhbmNlLCBhY2NvcmRpbmcgdG8gTGF3c2t54oCZcyBvcmRlci4gQmFuayBzdGF0ZW1lbnRzIOKAnG1pc2xlZOKAnSB0aGUgZGVwYXJ0bWVudCBpbnRvIGxpZnRpbmcgdGhlIHJlc3RyaWN0aW9ucyBvZiB0aGUgMjAwNCBhZ3JlZW1lbnQsIHRoZSBvcmRlciBzdGF0ZWQuIFRoZSBvcmRlciBjaXRlZCBiYW5rIGUtbWFpbHMgYW5kIG90aGVyIGludGVybmFsIGRvY3VtZW50cyB0byBzdXBwb3J0IGl0cyBhY2N1c2F0aW9ucy4gQmFuayBPYnNjZW5pdHkgSW4gb25lIHN1Y2ggbWVzc2FnZSwgdGhlIGhlYWQgb2YgU3RhbmRhcmQgQ2hhcnRlcmVk4oCZcyBVLlMuIHVuaXQgd2FybmVkIGhpcyBzdXBlcmlvcnMgaW4gTG9uZG9uIGluIDIwMDYgdGhhdCB0aGUgYmFua+KAmXMgYWN0aW9ucyBjb3VsZCBleHBvc2UgaXQgdG8g4oCcY2F0YXN0cm9waGljIHJlcHV0YXRpb25hbCBkYW1hZ2Uu4oCdIEhlIHJlY2VpdmVkIGEgcmVwbHkgcmVmZXJyaW5nIHRvIFUuUy4gZW1wbG95ZWVzIHdpdGggYW4gb2JzY2VuaXR5LCBhY2NvcmRpbmcgdG8gTGF3c2t54oCZcyBvcmRlci4g4oCcV2hvIGFyZSB5b3UgdG8gdGVsbCB1cywgdGhlIHJlc3Qgb2YgdGhlIHdvcmxkLCB0aGF0IHdl4oCZcmUgbm90IGdvaW5nIHRvIGRlYWwgd2l0aCBJcmFuaWFucz/igJ0gYSBiYW5rIHN1cGVyaW9yIGluIExvbmRvbiBzYWlkLCBhY2NvcmRpbmcgdG8gdGhlIG9yZGVyLiBTdGFuZGFyZCBDaGFydGVyZWTigJlzIFNhbmRzIG1vdW50ZWQgYW4gYWdncmVzc2l2ZSBkZWZlbnNlIGFnYWluc3QgTGF3c2t5LCB0ZWxsaW5nIGludmVzdG9ycyBsYXN0IHdlZWsgdGhhdCBtb3JlIHRoYW4gOTkgcGVyY2VudCBvZiB0aGUgSXJhbmlhbiB0cmFuc2FjdGlvbnMgd2VyZSBpbiBjb21wbGlhbmNlIHdpdGggZXhpc3RpbmcgVS5TLiBsYXdzLiBMYXdza3nigJlzIG9yZGVyIGFuZ2VyZWQgVS5LLiBvZmZpY2lhbHMsIHdobyB2aWV3ZWQgaXQgYXMgYW4gYXR0YWNrIG9uIExvbmRvbuKAmXMgc3RhdHVzIGFzIGEgZmluYW5jaWFsIGNlbnRlci4gSW4gdGhlIFUuUy4sIHJlZ3VsYXRvcnMgaW5jbHVkaW5nIHRoZSBUcmVhc3VyeSBEZXBhcnRtZW50LCB0aGUgRmVkZXJhbCBSZXNlcnZlIGFuZCB0aGUgTWFuaGF0dGFuIERpc3RyaWN0IEF0dG9ybmV5IGNvbXBsYWluZWQgcHJpdmF0ZWx5IGluIHB1Ymxpc2hlZCByZXBvcnRzIHRoYXQgTGF3c2t54oCZcyBvcmRlciB3YXMgYSBwdWJsaWNpdHkgc3R1bnQgdGhhdCBkaXNydXB0ZWQgdGhlaXIgb3duIHByb2JlcyBvZiB0aGUgbWF0dGVyLiBVbmRlcmN1dHRpbmcgRW5mb3JjZW1lbnQg4oCcSSBjYW7igJl0IHRoaW5rIG9mIGFub3RoZXIgY2FzZSB3aGVyZSB0aGVyZSBoYXMgYmVlbiBzdWNoIHVuaWZvcm1pdHkgYW1vbmcgZmVkZXJhbCByZWd1bGF0b3JzIHVuZGVyY3V0dGluZyBhbiBlbmZvcmNlbWVudCBjYXNlLOKAnSBzYWlkIE5laWwgQmFyb2Zza3ksIGEgZm9ybWVyIGZlZGVyYWwgcHJvc2VjdXRvciB3aG8gb3ZlcnNhdyB0aGUgVS5TLiBUcm91YmxlZCBBc3NldCBSZWxpZWYgUHJvZ3JhbSBhbmQgd3JvdGUg4oCcQmFpbG91dCzigJ0gYSBib29rIHRoYXQgY3JpdGljaXplcyB3aGF0IGhlIGNhbGxzIHRoZSBVLlMuIGdvdmVybm1lbnTigJlzIGxheCByZWd1bGF0aW9uIG9mIFdhbGwgU3RyZWV0IGJhbmtzLiBCeSB0aGUgZW5kIG9mIHRoZSB3ZWVrLCBTYW5kcyBoYWQgc3RvcHBlZCBkZWZlbmRpbmcgdGhlIGJhbmsgaW4gcHVibGljLiBJbnN0ZWFkLCBpdHMgbGF3eWVycyBhdCBTdWxsaXZhbiAmIENyb213ZWxsIExMUCBoYWQgYmVndW4gbmVnb3RpYXRpbmcgYSBzZXR0bGVtZW50IHdpdGggTGF3c2t5LCBhY2NvcmRpbmcgdG8gdHdvIHBlb3BsZSB3aXRoIGtub3dsZWRnZSBvZiB0aGUgbWF0dGVyLiBTYW5kcyBhcnJpdmVkIGluIE5ldyBZb3JrIHRoaXMgd2VlayB0byBvdmVyc2VlIHRoZSBwcm9jZXNzLiBIZSBzaWduZWQgb2ZmIG9uIHRoZSBmaW5hbCBhZ3JlZW1lbnQganVzdCBhZnRlciBtaWRkYXkgeWVzdGVyZGF5LCBzYWlkIG9uZSBvZiB0aGUgcGVvcGxlLCBhbGwgb2Ygd2hvbSBkZWNsaW5lZCB0byBiZSBpZGVudGlmaWVkIGJlY2F1c2UgdGhleSB3ZXJlbuKAmXQgYXV0aG9yaXplZCB0byBzcGVhayBwdWJsaWNseS4gVGhlIGFncmVlbWVudCBiZXR3ZWVuIExhd3NreSBhbmQgdGhlIGJhbmssIHdoaWxlIHJlZmVycmluZyB0byDigJx0cmFuc2FjdGlvbnMgb2YgYXQgbGVhc3QgJDI1MCBiaWxsaW9uLOKAnSBkb2VzbuKAmXQgYWRkcmVzcyB0aGUgcXVlc3Rpb24gb2Ygd2hldGhlciB0aGV5IHdlcmUgaW4gY29tcGxpYW5jZSB3aXRoIFUuUy4gbGF3LiBJbiBhIG1lbW8gdG8gZW1wbG95ZWVzIHRvZGF5IG9idGFpbmVkIGJ5IEJsb29tYmVyZyBOZXdzLCBTYW5kcyBzYWlkIHRoZSBiYW5r4oCZcyBlYXJsaWVyIHJldmlldyBpZGVudGlmaWVkIG1pc3Rha2VzLCBmb3Igd2hpY2ggaXQgYXBvbG9naXplZC4g4oCcV2UgaGF2ZSBzb3VnaHQgdG8gYWN0IGluIHRoZSBiZXN0IGludGVyZXN0cyBvZiBvdXIgc2hhcmVob2xkZXJzLCBjbGllbnRzLCBjdXN0b21lcnMgYW5kIHN0YWZmLOKAnSB0aGUgbWVtbyBzdGF0ZWQuIE90aGVyIFNob2UgU29tZSBvYnNlcnZlcnMgc2FpZCB0aGUgYmFua+KAmXMgaW52ZXN0b3JzIGFyZSB3YWl0aW5nIGZvciB0aGUgb3RoZXIgc2hvZSB0byBkcm9wLiDigJxJbnZlc3RvcnMgd2lsbCBiZSBwbGVhc2VkIHRoZXnigJl2ZSBzZXR0bGVkLCBidXQgaXTigJlzIG5vdCBrbm93biBpZiB0aGV5IGhhdmUgdG8gcGF5IG1vcmUgdG8gdGhlIG90aGVyIHJlZ3VsYXRvcnMs4oCdIHNhaWQgQ2hyaXN0b3BoZXIgV2hlZWxlciBvZiBNZWRpb2JhbmNhIFNwQSBpbiBMb25kb24uIFRoZSBEZXBhcnRtZW50IG9mIEZpbmFuY2lhbCBTZXJ2aWNlcyB3YXMgY3JlYXRlZCBpbiAyMDExIHdoZW4gTmV3IFlvcmvigJlzIEJhbmtpbmcgRGVwYXJ0bWVudCBhbmQgSW5zdXJhbmNlIERlcGFydG1lbnQgd2VyZSBhYm9saXNoZWQuIFRoZSBhZ2VuY3kgaGFzIHRoZSBwb3dlciB0byBpc3N1ZSByZWd1bGF0aW9ucywgaW52ZXN0aWdhdGUgYW5kIGZpbmUgZmluYW5jaWFsIHNlcnZpY2VzIGNvbXBhbmllcy4gSXQgbWF5IGFsc28gcHJvYmUgYWxsZWdlZCBjcmltaW5hbCBhY3Rpdml0eSBhbmQgcmVmZXIgaXRzIGZpbmRpbmdzIHRvIE5ldyBZb3Jr4oCZcyBhdHRvcm5leSBnZW5lcmFsIGZvciBwcm9zZWN1dGlvbi4gSXRzIGp1cmlzZGljdGlvbiBvdmVyIFdhbGwgU3RyZWV0LCBob3dldmVyLCBwdXRzIGl0IGluIHRoZSBzYW1lIHJlZ3VsYXRvcnkgd29ybGQgYXMgbWFueSBmZWRlcmFsIGFnZW5jaWVzLiDigJxUaGUgRmVkZXJhbCBSZXNlcnZlIGNvbnRpbnVlcyB0byB3b3JrIHdpdGggdGhlIG90aGVyIGFnZW5jaWVzIG9uIGEgY29tcHJlaGVuc2l2ZSByZXNvbHV0aW9uLOKAnSBzYWlkIEJhcmJhcmEgSGFnZW5iYXVnaCwgYSBzcG9rZXN3b21hbiBmb3IgdGhlIGFnZW5jeSwgaW4gcmVzcG9uc2UgdG8gbmV3cyBvZiB0aGUgc2V0dGxlbWVudC4g4oCYV29yayBDbG9zZWx54oCZIERlYW4gQm95ZCwgYSBzcG9rZXNtYW4gZm9yIHRoZSBKdXN0aWNlIERlcGFydG1lbnQsIHNhaWQgdGhlIGFnZW5jeSDigJxjb250aW51ZXMgdG8gd29yayBjbG9zZWx5IHdpdGggb3VyIHJlZ3VsYXRvcnkgYW5kIG90aGVyIHBhcnRuZXJzIHRvIGRldGVybWluZSB3aGF0IGFjdGlvbnMgbWlnaHQgYmUgYXBwcm9wcmlhdGUgaW4gdGhpcyBtYXR0ZXIu4oCdIEFuZCB0aGUgVHJlYXN1cnkgRGVwYXJ0bWVudCBzYWlkIGluIGEgc3RhdGVtZW50IHRoYXQgaXQgd2lsbCB3b3JrIOKAnHdpdGggb3VyIHJlZ3VsYXRvcnkgYW5kIGxhdyBlbmZvcmNlbWVudCBwYXJ0bmVycyB0byBob2xkIFN0YW5kYXJkIENoYXJ0ZXJlZCBhY2NvdW50YWJsZSBmb3IgYW55IHNhbmN0aW9uYWJsZSBhY3Rpdml0eSB0aGF0IG9jY3VycmVkLuKAnSBFcmluIER1Z2dhbiwgYSBzcG9rZXN3b21hbiBmb3IgTWFuaGF0dGFuIERpc3RyaWN0IEF0dG9ybmV5IEN5cnVzIFZhbmNlLCBzYWlkIOKAnGJhbmtzIHRoYXQgdmlvbGF0ZSBpbnRlcm5hdGlvbmFsIHNhbmN0aW9ucyBhcmUgbm90IGp1c3QgYnJlYWtpbmcgdGhlIGxhdywgdGhleSBhcmUgZW5hYmxpbmcgdGhlIGZpbmFuY2luZyBvZiB0ZXJyb3Jpc3QgcmVnaW1lcyBhbmQgdW5kZXJtaW5pbmcgb3VyIGNvbGxlY3RpdmUgc2FmZXR5IGFuZCBzZWN1cml0eS7igJ0gU2hlIGFkZGVkIHRoYXQgdGhlIG9mZmljZSBsb29rcyDigJxmb3J3YXJkIHRvIGNvbnRpbnVpbmcgdG8gd29yayB3aXRoIG91ciBwYXJ0bmVycyBvbiB0aGVzZSBjYXNlcy7igJ0gSW5zdXJhbmNlIENvc3RzIFRoZSBjb3N0IG9mIGluc3VyaW5nIFN0YW5kYXJkIENoYXJ0ZXJlZCBCYW5rIGRlYnQgZnJvbSBub24tIHBheW1lbnQgZGVjbGluZWQgMTIgYmFzaXMgcG9pbnQgdG8gMTMyLjEgYmFzaXMgcG9pbnRzIGF0IDk6MTEgYS5tLiBpbiBOZXcgWW9yaywgYWNjb3JkaW5nIHRvIGRhdGEgcHJvdmlkZXIgQ01BLCB3aGljaCBpcyBvd25lZCBieSBNY0dyYXctSGlsbCBDb3MuIGFuZCBjb21waWxlcyBwcmljZXMgcXVvdGVkIGJ5IGRlYWxlcnMgaW4gdGhlIHByaXZhdGVseSBuZWdvdGlhdGVkIG1hcmtldC4gVGhlIGNvbnRyYWN0cyBoYXZlIHJhbmdlZCBiZXR3ZWVuIDEyNSBhbmQgMjIwIHRoaXMgeWVhciwgYWNjb3JkaW5nIHRvIHRoZSBkYXRhLiBTd2FwcyBwYXkgdGhlIGJ1eWVyIGZhY2UgdmFsdWUgaW4gZXhjaGFuZ2UgZm9yIHRoZSB1bmRlcmx5aW5nIHNlY3VyaXRpZXMgb3IgdGhlIGNhc2ggZXF1aXZhbGVudCBzaG91bGQgYSBib3Jyb3dlciBmYWlsIHRvIGFkaGVyZSB0byBpdHMgZGVidCBhZ3JlZW1lbnRzLiBBIGJhc2lzIHBvaW50IGVxdWFscyAxLDAwMCBldXJvcyBhIHllYXIgb24gYSBjb250cmFjdCBwcm90ZWN0aW5nIDEwIG1pbGxpb24gZXVyb3MgKCQxMi4zIG1pbGxpb24pIG9mIGRlYnQgZnJvbSBkZWZhdWx0IGZvciBmaXZlIHllYXJzLiBUaGUgY29zdCBvZiBpbnN1cmluZyBTdGFuZGFyZCBDaGFydGVyZWQgQmFuayBkZWJ0IGZyb20gbm9uLSBwYXltZW50IGRlY2xpbmVkIDEgYmFzaXMgcG9pbnQgdG8gMTQ0IGJhc2lzIHBvaW50cyB5ZXN0ZXJkYXksIGFjY29yZGluZyB0byBkYXRhIHByb3ZpZGVyIENNQS4gVGhlIGNvbnRyYWN0cyBoYXZlIHJhbmdlZCBiZXR3ZWVuIDEyMi43IGFuZCAxOTUgdGhpcyB5ZWFyLCBhY2NvcmRpbmcgdG8gQ01BIGRhdGEuIFN3YXBzIHBheSB0aGUgYnV5ZXIgZmFjZSB2YWx1ZSBpbiBleGNoYW5nZSBmb3IgdGhlIHVuZGVybHlpbmcgc2VjdXJpdGllcyBvciB0aGUgY2FzaCBlcXVpdmFsZW50IHNob3VsZCBhIGJvcnJvd2VyIGZhaWwgdG8gYWRoZXJlIHRvIGl0cyBkZWJ0IGFncmVlbWVudHMuIEEgYmFzaXMgcG9pbnQgb24gYSBjcmVkaXQtZGVmYXVsdCBzd2FwIHByb3RlY3RpbmcgMTAgbWlsbGlvbiBldXJvcyAoJDEyLjMgbWlsbGlvbikgb2YgZGVidCBmcm9tIGRlZmF1bHQgZm9yIGZpdmUgeWVhcnMgaXMgZXF1aXZhbGVudCB0byAxLDAwMCBldXJvcyBhIHllYXIuIOKAmEFjdGluZyBRdWlja2x54oCZIOKAnEl04oCZcyBwb3NzaWJsZSB0aGF0IGJ5IGFjdGluZyBxdWlja2x5IGFuZCB0cnlpbmcgdG8gcHV0IHRoaXMgYmVoaW5kIHRoZW0sIHRoZSBDRU8gY291bGQgcmV0YWluIGhpcyBwb3NpdGlvbizigJ0gc2FpZCBEYXZpZCBLYXNzLCBhIHByb2Zlc3NvciBhdCB0aGUgVW5pdmVyc2l0eSBvZiBNYXJ5bGFuZOKAmXMgUm9iZXJ0IEguIFNtaXRoIFNjaG9vbCBvZiBCdXNpbmVzcywgb2YgU3RhbmRhcmQgQ2hhcnRlcmVkIENFTyBTYW5kcy4g4oCcSXQgcHV0cyB0aGUgaXNzdWUgYmVoaW5kIHRoZW0gZm9yIHRvZGF5IGFuZCBnZXRzIHRoZWlyIG5hbWUgb2ZmIG9mIHRoZSBmcm9udCBwYWdlLCBidXQgSeKAmW0gc3VyZSB0aGV54oCZbGwgYmUgdW5kZXIgZ3JlYXRlciBzY3J1dGlueSBieSByZWd1bGF0b3JzIGZvciBhIHdoaWxlLuKAnSBBbnRob255IFNhYmlubywgYSBwcm9mZXNzb3Igb2YgbGF3IGF0IHRoZSBQZXRlciBKLiBUb2JpbiBDb2xsZWdlIG9mIEJ1c2luZXNzIGF0IFN0LiBKb2hu4oCZcyBVbml2ZXJzaXR5IGluIE5ldyBZb3JrLCBzYWlkIHRoZSBkZWNpc2lvbiB0byBzZXR0bGUgd2FzIOKAnGEgYnVzaW5lc3MgZGVjaXNpb24gLS0gdGhleSB3YW50IHRvIHB1dCB0aGlzIGluIHRoZSByZWFydmlldyBtaXJyb3Iu4oCdIOKAnFRoZSBzaG9lIHRoYXQgSSBhbSB3YWl0aW5nIHRvIHNlZSBkcm9wIGlzIHdoYXQgd2lsbCB0aGUgZmVkcyBkbyBuZXh0P+KAnSBTYWJpbm8gc2FpZC4gTGF3c2t54oCZcyBhY3Rpb25zIOKAnG1pZ2h0IHB1c2ggdGhlIGZlZGVyYWwgYXV0aG9yaXRpZXMgdG8gZ2l2ZSBTdGFuZGFyZCBDaGFydGVyZWQgbW9yZSB0aGFuIGEgcGVyZnVuY3Rvcnkgc2xhcCBvbiB0aGUgd3Jpc3Qu4oCdIEJleW9uZCB0aGUgU3RhbmRhcmQgQ2hhcnRlcmVkIGNhc2UsIExhd3NreeKAmXMgZ28taXQtYWxvbmUgZ2FtYml0IG1heSBjb21wbGljYXRlIGZ1dHVyZSBiYW5rIGludmVzdGlnYXRpb25zIGFuZCBzZXR0bGVtZW50cywgc2FpZCBvbmUgZm9ybWVyIHByb3NlY3V0b3IuIOKAnEJlbiBMYXdza3kgaGlqYWNrZWQgdGhlIGZlZHPigJkgY2FzZSzigJ0gc2FpZCBSaXRhIEdsYXZpbiwgbm93IGFuIGF0dG9ybmV5IGF0IFNld2FyZCAmIEtpc3NlbCBMTFAuIOKAnFRoYXQga2luZCBvZiBtb3ZlIGNhdXNlcyBhIG1ham9yIGhlYWRhY2hlIGZvciB0aGUgSnVzdGljZSBEZXBhcnRtZW50LiBCZWZvcmUsIHRoZXkgbWF5IGhhdmUgYmVlbiBtb3JlIHdpbGxpbmcgdG8gc2hhcmUgd2l0aCBhIHN0YXRlIHJlZ3VsYXRvci4gVGhleSBtYXkgbm90IGJlIHNvIHdpbGxpbmcgaW4gdGhlIGZ1dHVyZS7igJ0=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATkopwyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDY4N2ZlNGU2YWZhMDEzYzY=</field><field name="symbol" class="java.lang.String">rO0ABXQABFdJUkU=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATktzWiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA8DMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA9Ao9cKPXD</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA8DMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA9AAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA82ZmZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAADhZA==</field><field name="id" class="java.lang.String">rO0ABXQAEDA4YWEwYWJmZDBmYmEzODA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mH/AAAAA==</field></document></documents><date>2015-05-07T06:20:20-0500</date></cacheEntry>
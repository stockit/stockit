<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0EflUaGUgU2hhbmdoYWkgR29sZCBFeGNoYW5nZSBTR0UgZ290IHRoZSBnbyBhaGVhZCBmcm9tIHRoZSBjZW50cmFsIGJhbmsgbGFzdCB3ZWVrIHRvIGxhdW5jaCBhIGdsb2JhbCB0cmFkaW5nIHBsYXRmb3JtIGluIHRoZSBjaXR5cyBwaWxvdCBmcmVlIHRyYWRlIHpvbmUgYSBtb3ZlIHRoYXQgY291bGQgY2hhbGxlbmdlIHRoZSBkb21pbmFuY2Ugb2YgTmV3IFlvcmsgYW5kIExvbmRvbiBpbiBnb2xkIHRyYWRlIGFuZCBwcmljaW5nIEJlaWppbmdzIHBsYW5zIHRvIG9wZW4gdXAgZ29sZCB0cmFkaW5nIGNvbWVzIGF0IGEgdGltZSB3aGVuIHRoZSBiZW5jaG1hcmsgcHJpY2VzZXR0aW5nIHByb2Nlc3MgZm9yIHByZWNpb3VzIG1ldGFscyBpcyB1bmRlciBzY3J1dGlueSBCYXJjbGF5cyBQbGMgYmVjYW1lIHRoZSBmaXJzdCBiYW5rIHRvIGJlIGZpbmVkIG92ZXIgYXR0ZW1wdGVkIG1hbmlwdWxhdGlvbiBvZiB0aGUgOTV5ZWFyb2xkIGJlbmNobWFyayBMb25kb24gZ29sZCBtYXJrZXQgZGFpbHkgZml4IGxhc3Qgd2VlayBTdGF0ZWJhY2tlZCBTR0UgaGFzIGFza2VkIGJ1bGxpb24gYmFua3Mgc3VjaCBhcyBIU0JDIEF1c3RyYWxpYSBhbmQgTmV3IFplYWxhbmQgQmFua2luZyBHcm91cCBTdGFuZGFyZCBCYW5rIFN0YW5kYXJkIENoYXJ0ZXJlZCBhbmQgQmFuayBvZiBOb3ZhIFNjb3RpYSB0byB0YWtlIHBhcnQgaW4gdGhlIGdsb2JhbCB0cmFkaW5nIHBsYXRmb3JtIHR3byBwZW9wbGUgYXBwcm9hY2hlZCBieSB0aGUgZXhjaGFuZ2Ugc2FpZCBTR0UgdGhlIHdvcmxkcyBiaWdnZXN0IHBoeXNpY2FsIGdvbGQgZXhjaGFuZ2Ugd2hlcmUgZG9tZXN0aWMgYmFua3MgbWluZXJzIGFuZCByZXRhaWxlcnMgYnV5IGFuZCBzZWxsIGdvbGQgY291bGQgYWxzbyBvcGVuIHVwIHRoZSBpbnRlcm5hdGlvbmFsIHBsYXRmb3JtIHRvIGZvcmVpZ24gYnJva2VyYWdlcyBhbmQgZ29sZCBwcm9kdWNlcnMgdGhleSBzYWlkIENoaW5hIHdhbnRzIHRvIGhhdmUgbW9yZSB2b2ljZSBpbiBnb2xkIHByaWNlcyBzYWlkIEppYW5nIFNodSBhbiBhbmFseXN0IHdpdGggSW5kdXN0cmlhbCBCYW5rIG9uZSBvZiAxMiBiYW5rcyBhbGxvd2VkIHRvIGltcG9ydCBnb2xkIGludG8gQ2hpbmEgVGhlIGludGVybmF0aW9uYWwgZXhjaGFuZ2UgaXMgdGhlIGZpcnN0IHN0ZXAgdG93YXJkcyBnYWluaW5nIGEgc2F5IGluIGdvbGQgcHJpY2luZyBJZiB5b3UgZG9udCBhbGxvdyBmb3JlaWduIHBsYXllcnMgdG8gcGFydGljaXBhdGUgaW4geW91ciBtYXJrZXQgYWN0aXZlbHkgb3IgZG8gbm90IHB1c2ggQ2hpbmVzZSBmaW5hbmNpYWwgaW5zdGl0dXRpb25zIHRvIHBhcnRpY2lwYXRlIGluIHRoZSBpbnRlcm5hdGlvbmFsIG1hcmtldCB0aGVuIENoaW5hcyBzdHJvbmcgZ29sZCBkZW1hbmQgaXMgb25seSBhIG51bWJlciBub3QgYSBwb3dlciBoZSBzYWlkIEhTQkMgYW5kIFN0YW5kYXJkIEJhbmsgZGVjbGluZWQgdG8gY29tbWVudCB3aGlsZSB0aGUgb3RoZXIgYmFua3MgYW5kIFNHRSB3ZXJlIG5vdCBpbW1lZGlhdGVseSBhdmFpbGFibGUgZm9yIGNvbW1lbnQgVGhlIGdsb2JhbCBwbGF0Zm9ybSB3aWxsIGZpcnN0IGhvc3Qgc3BvdCBwaHlzaWNhbCBjb250cmFjdHMgZm9yIGdvbGQgYW5kIG90aGVyIHByZWNpb3VzIG1ldGFscyBiZWZvcmUgYWltaW5nIHRvIGxhdW5jaCBkZXJpdmF0aXZlcyBkb3duIHRoZSBsaW5lIHNhaWQgYSB0aGlyZCBzb3VyY2Ugd2hvIGlzIGRpcmVjdGx5IGludm9sdmVkIGluIHRoZSBsYXVuY2ggb2YgdGhlIGludGVybmF0aW9uYWwgZXhjaGFuZ2UgV2UgYXJlIG5vdCBqdXN0IGVuY291cmFnaW5nIGZvcmVpZ24gYmFua3MgYnV0IGFsc28gcHJvZHVjZXJzIGFuZCBvdGhlciBlbnRpdGllcyBhZGRlZCB0aGUgc291cmNlIENoaW5hIHRoZSB3b3JsZHMgYmlnZ2VzdCBidXllciBvZiByYXcgbWF0ZXJpYWxzIGZyb20gY29wcGVyIHRvIGNvYWwgaXMgcHVzaGluZyBoYXJkIHRvIGVzdGFibGlzaCBwcmljaW5nIGJlbmNobWFya3MgZm9yIGEgbnVtYmVyIG9mIGNvbW1vZGl0aWVzIEdvbGQgYWxvbmcgd2l0aCBvaWwgY291bGQgYmUgYW1vbmcgdGhlIGZpcnN0IHRvIGJlIG9wZW5lZCB1cCB0byBmb3JlaWduIHBsYXllcnMgVGhlIGZyZWUgdHJhZGUgem9uZSBpbiBTaGFuZ2hhaSBpcyBzZXQgdG8gc2VlIGludGVybmF0aW9uYWwgZW5lcmd5IHRyYWRpbmcgYnkgaG9zdGluZyB0aGUgY291bnRyeXMgZmlyc3QgIGNydWRlIG9pbCBmdXR1cmVzIEFTSUFOIFZPSUNFIFRoZSBTaGFuZ2hhaSBleGNoYW5nZSBpcyBsb29raW5nIHRvIGxhdW5jaCB0aHJlZSB5dWFuZGVub21pbmF0ZWQgcGh5c2ljYWwgZ29sZCBjb250cmFjdHMgb2YgMTAwIGdyYW1zIDEga2cgYW5kIHRoZSBiaWdnZXIgTG9uZG9uIGdvb2QgZGVsaXZlcnkgYmFyIHdlaWdoaW5nIDEyNSBrZyBzYWlkIGFub3RoZXIgc291cmNlIHdobyBoYXMgcmVjZWl2ZWQgYSBkcmFmdCBwcm9zcGVjdHVzIGZyb20gU0dFIENvbnRyYWN0IHNwZWNpZmljYXRpb25zIGZvciBzaWx2ZXIgcGxhdGludW0gYW5kIHBhbGxhZGl1bSB3ZXJlIGFsc28gYmVpbmcgZGlzY3Vzc2VkIHRob3VnaCB0aGUgc291cmNlcyBzYWlkIHNwZWNpZmljYXRpb25zIGFuZCBwYXJ0aWNpcGFudHMgaGFkIG5vdCB5ZXQgYmVlbiBmaW5hbGl6ZWQgVGhlIGV4Y2hhbmdlIGlzIGV4cGVjdGVkIHRvIGJlIGxhdW5jaGVkIGJ5IHRoZSBmb3VydGggcXVhcnRlciBFdmVuIGlmIENoaW5hIGx1cmVzIGZvcmVpZ24gcGxheWVycyB0aGUgZXhjaGFuZ2Ugd291bGQgc3RpbGwgbmVlZCB0byBzZWUgZnVsbCBjb252ZXJ0aWJpbGl0eSBvZiB0aGUgeXVhbiBhbmQgZW5vdWdoIGxpcXVpZGl0eSBvbiB0aGUgZXhjaGFuZ2UgYmVmb3JlIGl0IGNhbiBiZSBjb25zaWRlcmVkIHRvIG9wZXJhdGUgb24gYSBwYXIgd2l0aCBvdGhlciBodWJzIEN1cnJlbnRseSB0aGUgTG9uZG9uIGdvbGQgZml4IGlzIHRoZSBiZW5jaG1hcmsgZm9yIHNwb3QgcHJpY2VzIHdoaWxlIE5ldyBZb3JrcyBDT01FWCBjb250cmFjdCBzZXRzIHRoZSBmdXR1cmVzIGJlbmNobWFyayBTR0UgcHJpY2VzIGFyZSB0cmFja2VkIHRvIGdhdWdlIENoaW5lc2UgZGVtYW5kIGFzIHJlZmxlY3RlZCBpbiBwcmVtaXVtcyBvciBkaXNjb3VudHMgdG8gc3BvdCByYXRlcyBFYXJsaWVyIHRoaXMgeWVhciBDaGluYXMgSUNCQyAgaW4gY29uanVuY3Rpb24gd2l0aCBpdHMgYWNxdWlzaXRpb24gdGFyZ2V0IFN0YW5kYXJkIEJhbmsgIGluZGljYXRlZCBpbnRlcmVzdCBpbiBidXlpbmcgRGV1dHNjaGUgQmFua3Mgc2VhdCBvbiB0aGUgTG9uZG9uIGdvbGQgZml4IGJ1dCBpdCBpcyBub3QgaW50ZXJlc3RlZCBhbnltb3JlIHNvdXJjZXMgcHJldmlvdXNseSB0b2xkIFJldXRlcnMgV2hpbGUgcGh5c2ljYWwgZGVtYW5kIGhhcyBhbHdheXMgcHJvdmlkZWQgdW5kZXJseWluZyBzdXBwb3J0IHRvIGdvbGQgcHJpY2VzIHNwZWN1bGF0aXZlIHRyYWRlIGlzIHdoYXQgbGFyZ2VseSBkcml2ZXMgcHJpY2VzIFdpdGggQ2hpbmFzIHB1c2ggZm9yIGFuIGludGVybmF0aW9uYWwgcGh5c2ljYWwgZXhjaGFuZ2UgcGh5c2ljYWwgZGVtYW5kIGNvdWxkIGJlZ2luIHRvIGhhdmUgYSBzdHJvbmdlciBpbmZsdWVuY2UgQ2hpbmEgb3ZlcnRvb2sgSW5kaWEgbGFzdCB5ZWFyIGFzIHRoZSB3b3JsZHMgYmlnZ2VzdCBnb2xkIGltcG9ydGVyIGFuZCBnb2xkIGpld2VscnkgYW5kIGludmVzdG1lbnQgZGVtYW5kIHdhcyB1cCBhYm91dCBhIHRoaXJkIHRvIGEgcmVjb3JkIDEwNjU4IHRvbm5lcyBpbiAyMDEzIFRoZSBpbmZsdXggb2YgZ29sZCBoYXMgbWFkZSBTR0UgdGhlIGJpZ2dlc3QgcGh5c2ljYWwgZXhjaGFuZ2Ugd2l0aCBhIHR1cm5vdmVyIG9mIDEwMDAwIHRvbm5lcyBmb3IgaXRzIGltbWVkaWF0ZSBhbmQgZGVmZXJyZWQgZGVsaXZlcnkgY29udHJhY3RzIGFjY29yZGluZyB0byBUaG9tc29uIFJldXRlcnMgR0ZNUyBUaGUgU2hhbmdoYWkgRnV0dXJlcyBFeGNoYW5nZSBoYXMgdGhlIHdvcmxkcyBzZWNvbmRtb3N0IHRyYWRlZCBnb2xkIGZ1dHVyZXMgY29udHJhY3QgdGhvdWdoIHRyYWRpbmcgaXMgbGFyZ2VseSBsaW1pdGVkIHRvIHRoZSBkb21lc3RpYyBtYXJrZXQgd2l0aCB2b2x1bWVzIG9mIGFib3V0IDQxMTc2IHRvbm5lcyBsYXN0IHllYXIgc3RpbGwgd2VsbCBiZWhpbmQgQ09NRVhzIDE0NzA4MyB0b25uZXMgVGhlIFNHRXMgaW50ZXJuYXRpb25hbCBib2FyZCBhbmQgdGhlIG1haW4gZXhjaGFuZ2UgY291bGQgZXZlbnR1YWxseSBiZSBtZXJnZWQgd2hlbiB0aGUgeXVhbiBpcyBmdWxseSBjb252ZXJ0aWJsZSBBbGJlcnQgQ2hlbmcgbWFuYWdpbmcgZGlyZWN0b3Igb2YgdGhlIFdvcmxkIEdvbGQgQ291bmNpbHMgZmFyIGVhc3QgcmVnaW9uIHNhaWQgVGhhdCB3b3VsZCBiZWNvbWUgYSB2ZXJ5IGltcG9ydGFudCBleGNoYW5nZSBpbiB0aGUgd29ybGQgYW5kIFNoYW5naGFpIHdpbGwgdHJ1bHkgYmVjb21lIG9uZSBvZiB0aGUgdGhyZWUgaW50ZXJuYXRpb25hbCBnb2xkIGNlbnRlcnMgYWZ0ZXIgTmV3IFlvcmsgYW5kIExvbmRvbiBoZSBzYWlkIE5vIGRvdWJ0IHRoZSBwYXJ0aWNpcGF0aW9uIGluIHRoZSBpbnRlcm5hdGlvbmFsIG1hcmtldCBpcyB0aGUga2V5IGVmZm9ydCBvZiB0aGUgU0dFIGFuZCB0aGUgY3VycmVudCBhZG1pbmlzdHJhdGlvbnQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0wMy0yN1QwMDowMDowMFogVE8gMjAxMy0xMi0wM1Q1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDQ5MzY=</field><field name="title" class="java.lang.String">rO0ABXQAO0dvbGQgUHJpY2luZyBEcmF3cyBTY3J1dGlueSBBbWlkIEtub3dsZWRnZSBUaWVkIHRvIEVydXB0aW9u</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKS/isAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDAwMDFhOTM0YjlmNWJiYTg=</field><field name="symbol" class="java.lang.String">rO0ABXQACUJOUy1QTi5UTw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKYJIcAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6GZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6Y9cKPXCk</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6GZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6JmZmZmZm</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4jMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAARlA==</field><field name="id" class="java.lang.String">rO0ABXQAEDNiNjEzMTdmYTJkZThlY2I=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMx8AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDI0MDk=</field><field name="title" class="java.lang.String">rO0ABXQAPENoaW5hIEdvbGQgSW1wb3J0cyB0byBLZWVwIEdyb3dpbmcgQWZ0ZXIgSGl0dGluZyBSZWNvcmQgSGlnaA==</field><field name="content" class="java.lang.String">rO0ABXQOdkNoaW5lc2UgZ29sZCBpbXBvcnRzIGFyZSBsaWtlbHkgdG8gc3dlbGwgZnVydGhlciBhZnRlciBtb3JlIHRoYW4gZG91YmxpbmcgdG8gYW4gYWxsIHRpbWUgaGlnaCBpbiBNYXJjaCBhcyByZXRhaWwgY29uc3VtZXJzIHBvdW5jZWQgd2hlbiBwcmljZXMgcGx1bmdlZCB0byBhIHR3by15ZWFyIGxvdyBsYXN0IG1vbnRoLiBDaGluYSBpcyB0aGUgd29ybGQncyBzZWNvbmQgbGFyZ2VzdCBidXllciBhZnRlciBJbmRpYSwgYW5kIGluIGJvdGggY291bnRyaWVzIHRoZSBzdGVlcCBmYWxsIGluIGludGVybmF0aW9uYWwgZ29sZCBwcmljZXMgaW4gQXByaWwgdW5sZWFzaGVkIHllYXJzIG9mIHBlbnQgdXAgZGVtYW5kIGZvciBjb2lucywgYmFycyBhbmQgamV3ZWxyeS4gVGhhdCB3aWxsIGhlbHAgYm9sc3RlciBwcmljZXMgZm9yIHRoZSBtZXRhbCwgd2hpY2ggaGFzIGJlZW4gYWJhbmRvbmVkIGJ5IGZ1bmRzIGluIG90aGVyIHBhcnRzIG9mIHRoZSB3b3JsZCBpbiB0aGUgd2FrZSBvZiBpdHMgaGlzdG9yaWMgZmFsbC4gIlBoeXNpY2FsIGRlbWFuZCBwaWNrZWQgdXAgc2lnbmlmaWNhbnRseSBvdmVyIHRoZSBsYXN0IGNvdXBsZSBvZiB3ZWVrcy4gQ29uc3VtZXJzIGFuZCBpbmR1c3RyaWFsIHVzZXJzIHRlbmQgdG8gc2VlIHByaWNlIGRyb3BzIGFzIGJ1eWluZyBvcHBvcnR1bml0aWVzLCIgWmhhbmcgQmluZ25hbiwgc2VjcmV0YXJ5LWdlbmVyYWwgb2YgdGhlIENoaW5hIEdvbGQgQXNzb2NpYXRpb24sIHRvbGQgUmV1dGVycy4gIkludmVzdG1lbnQgZGVtYW5kIHNob3VsZCBjb250aW51ZSB0byBzdGF5IHN0cm9uZyB0aHJvdWdoIHRoZSByZXN0IG9mIHRoZSB5ZWFyIGJlY2F1c2Ugb2YgbGltaXRlZCBpbnZlc3RtZW50IGFsdGVybmF0aXZlcywiIHNhaWQgWmhhbmcsIGFkZGluZyB0aGF0IGdvbGQgc2FsZXMgYW5kIHByb2Nlc3Npbmcgdm9sdW1lcyBib3RoIHNwaWtlZCBpbiBBcHJpbC4gTmV0IGdvbGQgZmxvd3MgZnJvbSBIb25nIEtvbmcgdG8gQ2hpbmEganVtcGVkIHRvIDEzNi4xODUgdG9ucyBpbiBNYXJjaCBmcm9tIDYwLjk1OCB0b25zIGluIEZlYnJ1YXJ5LCBzbWFzaGluZyBhIHByZXZpb3VzIHJlY29yZCBvZiAxMTQuMzcyIHRvbnMgaW4gRGVjZW1iZXIsIGRhdGEgZnJvbSB0aGUgSG9uZyBLb25nIENlbnN1cyBhbmQgU3RhdGlzdGljcyBEZXBhcnRtZW50IHNob3dlZC4gVGhhdCBtYWtlcyB1cCBtb3JlIHRoYW4gaGFsZiBvZiByZWNvcmQgZ29sZCBleHBvcnRzIHRvIENoaW5hIGZyb20gSG9uZyBLb25nIGluIDIwMTIsIHdoaWNoIHN0b29kIGF0IDU1Ny40NzggdG9ucy4gSW4gTWFyY2gsIFNoYW5naGFpIGdvbGQgZnV0dXJlcyBmZXRjaGVkIHByZW1pdW1zIG9mIG1vcmUgdGhhbiAkMzAgdG8gZ2xvYmFsIHByaWNlcywgbWFraW5nIGl0IGNoZWFwZXIgdG8gYnV5IHRoZSBtZXRhbCBvdmVyc2Vhcy4gQXByaWwgY291bGQgc2VlIGltcG9ydHMgc3dlbGwgZnVydGhlciBhZnRlciB0aGUgZHJvcCBpbiBpbnRlcm5hdGlvbmFsIHByaWNlcyBzcHVycmVkIGZyZW56aWVkIGJ1eWluZyBpbiBBc2lhLCBsZWFkaW5nIHRvIGEgc2hvcnRhZ2Ugb2YgZ29sZCBiYXJzIGFuZCBjb2lucyBpbiBTaW5nYXBvcmUgYXMgd2VsbCBhcyBIb25nIEtvbmcsIHdoaWNoIGlzIENoaW5hJ3MgbWFpbiBzb3VyY2UgZm9yIGdvbGQgaW1wb3J0cy4gQXBwZXRpdGUgZm9yIGdvbGQgZnJvbSBJbmRpYSBhbmQgQ2hpbmEgaXMgYSBtYWpvciBmYWN0b3IgaW4gaW50ZXJuYXRpb25hbCBnb2xkIHByaWNlcy4gVGhlIHR3byBjb3VudHJpZXMgYWNjb3VudCBmb3IgbW9yZSB0aGFuIGEgdGhpcmQgb2YgZ2xvYmFsIGRlbWFuZCwgYWNjb3JkaW5nIHRvIHRoZSBXb3JsZCBHb2xkIENvdW5jaWwuIENoaW5hIHByb2R1Y2VkIDQwMyB0b25zIG9mIGdvbGQgaW4gMjAxMiwgYnV0IGNvbnN1bXB0aW9uIHdhcyBtb3JlIHRoYW4gZG91YmxlIGF0IDgzMi4yIHRvbnMuIEdvbGQgdHVtYmxlZCB0byBhcm91bmQgJDEsMzIxIGFuIG91bmNlIG9uIEFwcmlsIDE2LCBpdHMgbG93ZXN0IGluIG1vcmUgdGhhbiB0d28geWVhcnMsIGFmdGVyIGEgZmFsbCBiZWxvdyAkMSw1MDAgYW5kIGZlYXJzIG9mIGNlbnRyYWwgYmFuayBzYWxlcyBsZWQgdG8gYSBzZWxsLW9mZiB0aGF0IHN0dW5uZWQgaW52ZXN0b3JzIGFuZCBwcm9tcHRlZCB0aGVtIHRvIHNsYXNoIGhvbGRpbmdzIG9mIGV4Y2hhbmdlLXRyYWRlZCBmdW5kcy4gSXQgc3Rvb2QgYXQgYXJvdW5kICQxLDQ2MCBvbiBUdWVzZGF5LiAiQXByaWwgaW1wb3J0cyB3aWxsIGJlIHN0cm9uZ2VyIHRoYW4gTWFyY2gsIiBzYWlkIFJvbmFsZCBMZXVuZywgY2hpZWYgZGVhbGVyIGF0IExlZSBDaGVvbmcgR29sZCBEZWFsZXJzIGluIEhvbmcgS29uZy4gIlRoZSB3b3JsZCB3YXMgYnV5aW5nIGdvbGQgYW5kIENoaW5hIHdhcyBubyBkaWZmZXJlbnQgYXQgYWxsLiIgSEVBVlkgVFJBRkZJQyBUaGUgZHJvcCBpbiBwcmljZXMgaGFzIHByb21wdGVkIGEgZ29sZCBydXNoIGluIENoaW5hLCB3aXRoIENoaW5lc2Ugc2hvcHBlcnMgZmxvY2tpbmcgdG8gcmV0YWlsZXJzIHRvIGJ1eSBqZXdlbHJ5IGFuZCBiYXJzLiBBIHNwb2tlc21hbiBmb3IgSG9uZyBLb25nIGpld2VscnkgY2hhaW4gQ2hvdyBUYWkgRm9vaywgdGhlIHdvcmxkJ3MgbGFyZ2VzdCBqZXdlbHJ5IHJldGFpbGVyIGJ5IG1hcmtldCB2YWx1ZSwgdG9sZCBSZXV0ZXJzIHRoYXQgdHJhZmZpYyBhdCBpdHMgQ2hpbmEgc3RvcmVzIGp1bXBlZCBieSA1MCBwZXJjZW50IGR1cmluZyB0aGUgTWF5IERheSBob2xpZGF5cy4gVGhlIHN1cmdlIGluIENoaW5lc2UgdHJhdmVsZXJzIGR1cmluZyB0aGUgdGhyZWUtZGF5IE1heSBEYXkgaG9saWRheSBhbHNvIGRyb3ZlIGdvbGQgc2FsZXMgaW4gSG9uZyBLb25nIHRvIHJpc2UgYnkgYW4gZXN0aW1hdGVkIDUwIHBlcmNlbnQsIHdpdGggdG90YWwgZ29sZCBzYWxlcyBmcm9tIEFwcmlsIDI5LU1heSAyIHJlYWNoaW5nIHNvbWUgNDAgdG9ucywgbG9jYWwgbWVkaWEgcXVvdGVkIEhheXdvb2QgQ2hldW5nLCBwcmVzaWRlbnQgb2YgdGhlIEhvbmcgS29uZyBHb2xkIGFuZCBTaWx2ZXIgRXhjaGFuZ2UsIGFzIHNheWluZy4gVGhlIGp1bXAgaW4gQ2hpbmVzZSBwaHlzaWNhbCBkZW1hbmQgYWxzbyBwcm9tcHRlZCBzb21lIGJhbmtzIHRvIHNoaXAgaW4gbW9yZSBzdXBwbGllcyBmcm9tIExvbmRvbiBhbmQgU3dpc3MgdmF1bHRzLCB0cmFkZXJzIHNhaWQuIFdpdGggQ2hpbmEncyBlY29ub215IHN0aWxsIG9uIHNoYWt5IGdyb3VuZCwgaW52ZXN0b3JzIHRoZXJlIHdpdGggbGltaXRlZCBvcHRpb25zIGZvciB0aGVpciBjYXNoIGNvdWxkIHN0aWxsIHNlZSBnb2xkIGFzIGF0dHJhY3RpdmUuIFRoZSBmYWxsIGhhcyBodXJ0IGJpZyBmdW5kcyBlbHNld2hlcmUgdGhhdCBiZXQgb24gZ29sZCBjb250aW51aW5nIGEgMTIgeWVhciBidWxsIHJ1biwgZXJvZGluZyBpbnZlc3RvciBjb25maWRlbmNlIGluIHRoZSB5ZWxsb3cgbWV0YWwuIENoaW5hJ3MgYW5udWFsIGV4cG9ydCBncm93dGggbWF5IGhhdmUgcGlja2VkIHVwIHNsaWdodGx5IGluIEFwcmlsIGR1ZSB0byBhIGxvdyBjb21wYXJpc29uIGZyb20gYSB5ZWFyIGFnbywgd2hpbGUgaW1wb3J0IGdyb3d0aCBwcm9iYWJseSBlYXNlZCwgYSBSZXV0ZXJzIHBvbGwgc2hvd2VkLCBzdWdnZXN0aW5nIHRoZSB1bmRlcmx5aW5nIG1vbWVudHVtIGZvciBib3RoIHRoZSBkb21lc3RpYyBhbmQgZ2xvYmFsIGVjb25vbWllcyByZW1haW5zIHRlcGlkLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8NjliAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGYxYWE1MjNkYzQ4ZDI0M2Y=</field><field name="symbol" class="java.lang.String">rO0ABXQAA1RBSQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8StLSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1I9cKPXCk</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1Vwo9cKPX</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1I9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1Vwo9cKPX</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzdcKPXCj2</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABydA==</field><field name="id" class="java.lang.String">rO0ABXQAEGI2ODhiOTkwMjYxNWZjYWY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEtiAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwMjQ=</field><field name="title" class="java.lang.String">rO0ABXQAO0NoaW5hIFNlZW4gV2VsbCBBaGVhZCBvZiBJbmRpYSBhcyBXb3JsZCdzIFRvcCBHb2xkIENvbnN1bWVy</field><field name="content" class="java.lang.String">rO0ABXQOhVRoZSBpbmR1c3RyeSBib2R5IGN1dCBpdHMgb3V0bG9vayBmb3IgSW5kaWFuIGRlbWFuZCBpbiAyMDEzIHRvIGFyb3VuZCA5MDAgdG9ubmVzIGZyb20gdGhlIDEsMDAwIHRvbm5lcyBwcmVkaWN0ZWQgcHJldmlvdXNseSwgd2hpbGUga2VlcGluZyBpdHMgZm9yZWNhc3QgZm9yIENoaW5hIHVuY2hhbmdlZCBhdCAxLDAwMCB0b25uZXMuIFBsdW1tZXRpbmcgZGVtYW5kIGZyb20gSW5kaWEgY291bGQgZnVydGhlciBwcmVzc3VyZSBnbG9iYWwgcHJpY2VzIHRoYXQgaGF2ZSBkcm9wcGVkIGFyb3VuZCAyNCBwZXJjZW50IHRoaXMgeWVhciBvbiBmZWFycyB0aGUgVS5TLiBGZWRlcmFsIFJlc2VydmUgd291bGQgY3V0IGl0cyBlY29ub21pYyBzdGltdWx1cy4KCkVkaXRvcidzIE5vdGU6IEdldCBUb20gTHVvbmdvJ3MgR29sZCBTdG9jayBBZHZpc2VyIOKAlCBDbGljayBIZXJlIE5vdyEgIlRoZSBhZG1pbmlzdHJhdGl2ZSBtZWFzdXJlcyB0aGF0IHRoZSBJbmRpYW4gZ292ZXJubWVudCBoYXMgaW1wb3NlZCBvbiB0aGUgbWFya2V0IGhhdmUgcHJvdmVuIHRvIGJlIHF1aXRlIGVmZmVjdGl2ZSBhbmQgaW1wb3J0cyBoYXZlIHNsb3dlZCBkb3duLCIgQWxiZXJ0IENoZW5nLCB0aGUgV0dDJ3MgbWFuYWdpbmcgZGlyZWN0b3IgZm9yIHRoZSBGYXIgRWFzdCB0b2xkIFJldXRlcnMuICJJdCB3b3VsZCBiZSBkaWZmaWN1bHQgdG8gZ2V0IHRvIDEsMDAwIHRvbm5lcywiIGhlIHNhaWQsIGFkZGluZyB0aGF0IGRlbWFuZCB3b3VsZCBub3QgZ28gZmFyIGJleW9uZCB0aGUgODY0IHRvbm5lcyByZWNvcmRlZCBsYXN0IHllYXIuICJJZiBub3QgZm9yIGFkbWluaXN0cmF0aXZlIG1lYXN1cmVzLCBJbmRpYSB3b3VsZCBoYXZlIHNlZW4gZ3Jvd3RoIGxpa2UgQ2hpbmEuIiBBY2NvcmRpbmcgdG8gdGhlIFdHQydzIHRoaXJkLXF1YXJ0ZXIgcmVwb3J0LCBkZW1hbmQgZnJvbSBJbmRpYSBzbyBmYXIgdGhpcyB5ZWFyIGhhcyByZWFjaGVkIDcxNC43IHRvbm5lcywgbG93ZXIgdGhhbiBtYWlubGFuZCBDaGluYSdzIDc3OS42IHRvbm5lcy4gQ2hpbmVzZSBkZW1hbmQgaW4gdGhlIGZpcnN0IHRocmVlIHF1YXJ0ZXJzIG9mIHRoZSB5ZWFyIGlzIGFscmVhZHkgYWJvdmUgYWxsIG9mIDIwMTIuIEluZGlhLCBncmFwcGxpbmcgd2l0aCBhIGhpZ2ggdHJhZGUgZGVmaWNpdCBhbmQgYSB3ZWFrIHJ1cGVlLCBpbXBvc2VkIGEgc2VyaWVzIG9mIG1lYXN1cmVzIHRoaXMgeWVhciB0byBjcmltcCBkZW1hbmQgZm9yIHRoZSBwcmVjaW91cyBtZXRhbCAtIHRoZSBzZWNvbmQgbW9zdCBleHBlbnNpdmUgaXRlbSBvbiBpdHMgaW1wb3J0IGJpbGwgYWZ0ZXIgb2lsLiBJdCBpbnRyb2R1Y2VkIGEgcmVjb3JkIDEwLXBlcmNlbnQgZHV0eSBvbiBnb2xkIGltcG9ydHMgYW5kIHRpZWQgdGhlIHZvbHVtZSBvZiBpbXBvcnRzIHRvIGV4cG9ydHMsIG1ha2luZyBpdCBtb3JlIGRpZmZpY3VsdCBhbmQgZXhwZW5zaXZlIGZvciBnb2xkIHRvIGJlIHNvbGQgdG8gZG9tZXN0aWMgbWFya2V0cy4gSW1wb3J0cyBwbHVuZ2VkIHRvIDI0IHRvbm5lcyBpbiBPY3RvYmVyIGZyb20gYSByZWNvcmQgMTYyIHRvbm5lcyBpbiBNYXkuIEJ1dCB0aGUgV0dDIHdhcm5lZCB0aGF0IGdvbGQgd2FzIGZpbmRpbmcgaXRzIHdheSBpbnRvIEluZGlhIHRocm91Z2ggdW5vZmZpY2lhbCBjaGFubmVscy4gSXQgZGlkIG5vdCBnaXZlIGFuIGVzdGltYXRlIG9uIHN1cHBseSB0aHJvdWdoIHNtdWdnbGluZy4gIkdvbGQgZW50ZXJpbmcgdGhlIGNvdW50cnkgdW5vZmZpY2lhbGx5IHRocm91Z2ggSW5kaWEncyBwb3JvdXMgYm9yZGVycyBoZWxwZWQgdG8gbWVldCBwZW50LXVwIGxvY2FsIGRlbWFuZCwgdG9nZXRoZXIgd2l0aCBhbiBpbmZsdXggb2YgcmVjeWNsZWQgZ29sZCB0aGF0IHdhcyBkcmF3biBvdXQgYnkgaGlnaGVyIHByaWNlcyBhbmQgcHJvbW90aW9ucyBvZmZlcmVkIGJ5IHJldGFpbGVycywiIHRoZSBXR0Mgc2FpZCBpbiBpdHMgcXVhcnRlcmx5IHJlcG9ydC4gIkl0IGlzIGxpa2VseSB0aGF0IHVub2ZmaWNpYWwgZ29sZCB3aWxsIGNvbnRpbnVlIHRvIGZpbmQgaXRzIHdheSBpbnRvIHRoZSBjb3VudHJ5IHRvIHNhdGlzZnkgZGVtYW5kLiIgR29sZCBmb3JtcyBhIGtleSBwYXJ0IG9mIGEgYnJpZGUncyBkb3dyeSBpbiBJbmRpYSBhbmQgaXMgY29uc2lkZXJlZCBhdXNwaWNpb3VzIGFzIGEgZ2lmdCBvciBvZmZlcmluZyBhdCByZWxpZ2lvdXMgZmVzdGl2YWxzLiBMb2NhbCBwcmVtaXVtcyBoaXQgYSByZWNvcmQgJDEzMCBhbiBvdW5jZSBlYXJsaWVyIHRoaXMgbW9udGggYXMgc3VwcGxpZXMgd2VyZSBzY2FyY2UgaW4gdGhlIGJ1aWxkIHVwIHRvIHRoZSBwZWFrIGdvbGQgYnV5aW5nIHNlYXNvbiBvZiBEaGFudGVyYXMgYW5kIERpd2FsaS4gSG93ZXZlciwgZGVtYW5kIGZhaWxlZCB0byBtYXRjaCBsYXN0IHllYXIncyBhcHBldGl0ZSBhbmQgcHJlbWl1bXMgaGF2ZSBzaW5jZSBlYXNlZC4gIlRoaXMgcXVhcnRlciB0aGVyZSB3YXNuJ3QgcnVuYXdheSBkZW1hbmQgYXMgd2UgaGFkIGVzdGltYXRlZCwiIHNhaWQgU29tYXN1bmRhcmFtIFBSLCBXR0MncyBtYW5hZ2luZyBkaXJlY3RvciBmb3IgSW5kaWEsIGNvbW1lbnRpbmcgb24gZm91cnRoLXF1YXJ0ZXIgYXBwZXRpdGUuICJJdCBpcyBnb2luZyB0byBiZSBsb3dlciB0aGFuIGxhc3QgeWVhci4iIENISU5BIFNUSUxMIFNUUk9ORyBHbG9iYWwgYXBwZXRpdGUgZm9yIGdvbGQgZmVsbCAyMSBwZXJjZW50IGluIHRoZSB0aGlyZCBxdWFydGVyIGR1ZSB0byBvdXRmbG93cyBmcm9tIHBoeXNpY2FsIGJ1bGxpb24gZnVuZHMgYW5kIHRoZSBkcm9wIGluIGJ1eWluZyBmcm9tIEluZGlhLCBhY2NvcmRpbmcgdG8gdGhlIFdHQy4gQnV0IG1haW5sYW5kIENoaW5lc2UgZGVtYW5kIHJlbWFpbmVkIHN0cm9uZyBldmVuIGR1cmluZyB0aGUgc2Vhc29uYWxseSBzbG93IHRoaXJkIHF1YXJ0ZXIsIGdhaW5pbmcgMTggcGVyY2VudCB3aGlsZSBJbmRpYW4gZGVtYW5kIGRyb3BwZWQgMzIgcGVyY2VudC4gRGVtYW5kIGZyb20gQ2hpbmEgaGFzIGp1bXBlZCBuZWFybHkgNDAgcGVyY2VudCB0aGlzIHllYXIgYXMgdGhlIGFwcGV0aXRlIGZvciBqZXdlbHJ5LCBiYXJzIGFuZCBjb2lucyBpbmNyZWFzZWQgc2hhcnBseSBkdWUgdG8gdGhlIHNoYXJwIGRyb3AgaW4gZ29sZCBwcmljZXMuIENoaW5lc2UgZGVtYW5kIGhhcyB0byBhbiBleHRlbnQgYmVlbiBhYmxlIHRvIHN0ZW0gdGhlIGRyb3AgaW4gZ2xvYmFsIGdvbGQgcHJpY2VzLCBjb25zdW1pbmcgYSBiaWcgcGFydCBvZiBmbG93cyB0aGF0IHdlcmUgbG9zdCBkdWUgdG8gdGhlIHN0cmljdCBydWxlcyBpbiBJbmRpYSBhbmQgdGhlIG91dGZsb3dzIGZyb20gZXhjaGFuZ2UtdHJhZGVkIGZ1bmRzLiAiVGhlIGZsb3cgb2YgZ29sZCBmcm9tIHRoZSB3ZXN0IHRvIGVhc3QgaXMgY29udGludWluZywiIHNhaWQgV0dDJ3MgQ2hlbmcuICJXZXN0ZXJuIGludmVzdG9ycyBkbyBub3Qgc2VlIHRoZSBvcHBvcnR1bml0eSBpbiBnb2xkIGJ1dCBBc2lhbnMgYXJlIHBpY2tpbmcgaXQgdXAsIG1vcmUgc28gaW4gQ2hpbmEgdGhhbiBJbmRpYS4iIEZvdXJ0aC1xdWFydGVyIGRlbWFuZCB3aWxsIGFsc28gcmVtYWluIHN0cm9uZyBhcyBidXlpbmcgcGlja3MgdXAgYWhlYWQgb2YgdGhlIENoaW5lc2UgTmV3IFllYXIgYXQgdGhlIGVuZCBvZiBKYW51YXJ5LCBoZSBzYWlkLgoKRWRpdG9yJ3MgTm90ZTogR2V0IFRvbSBMdW9uZ28ncyBHb2xkIFN0b2NrIEFkdmlzZXIg4oCUIENsaWNrIEhlcmUgTm93IQ==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJVMdsAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDExNjg2NGVlZjk4MjEwOGU=</field><field name="symbol" class="java.lang.String">rO0ABXQABEdPTEQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJaWDcAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSmj1wo9cK</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSrCj1wo9c</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSIAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSUeuFHrhS</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSDMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAC1X0A==</field><field name="id" class="java.lang.String">rO0ABXQAEDEzYzQ3ZWE4NTMxYmQ0ZTg=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mERiAAAQ==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM0Nzc=</field><field name="title" class="java.lang.String">rO0ABXQAQUNvbW1vZGl0eSBQcmljZXMgV3JvbmcgYXMgT2Z0ZW4gYXMgMjcgUGVyY2VudCBvZiBUaW1lIGZvciBUcmFkZXJz</field><field name="content" class="java.lang.String">rO0ABXQ2BEluIGEgQmxvb21iZXJnIE5ld3Mgc3VydmV5IGNvbmR1Y3RlZCBkdXJpbmcgdGhlIHBhc3QgZWlnaHQgd2Vla3MsIDg1IHRyYWRlcnMgYW5kIGFuYWx5c3RzIHNhaWQgdGhleSBoYXZlIGxpdHRsZSBjb25maWRlbmNlIGluIHRoZSBhc3Nlc3NlZCBwcmljZXMgb2YgY3J1ZGUsIG1ldGFscyBhbmQgaXJvbiBvcmUuIFJlZ3VsYXRvcnMsIGluY2x1ZGluZyBFdXJvcGVhbiBVbmlvbiBDb21wZXRpdGlvbiBDb21taXNzaW9uZXIgSm9hcXVpbiBBbG11bmlhLCBtYXkgZXhhbWluZSBjb21tb2RpdGllcyBtYXJrZXRzLCBoYXZpbmcgYWxyZWFkeSBpbmNyZWFzZWQgaW52ZXN0aWdhdGlvbnMgb2YgbWFuaXB1bGF0aW9uIG9mIGJlbmNobWFya3MgZm9yIGludGVyZXN0IHJhdGVzLCBkZXJpdmF0aXZlcywgZm9yZWlnbiBleGNoYW5nZSBhbmQgb2lsLiBGaXZlIHllYXJzIGFmdGVyIHRoZSBnbG9iYWwgY3JlZGl0IGNyaXNpcyBwcm9tcHRlZCBtb3JlIHJlZ3VsYXRpb24gb2YgYmFua3MsIGJlbmNobWFyayBwcmljZXMgZm9yIGh1bmRyZWRzIG9mIGNvbW1vZGl0aWVzIGFyZSBkZXRlcm1pbmVkIHRocm91Z2ggc3VydmV5cyBvZiBhbm9ueW1vdXMgdHJhZGVycyB3aG8gbWF5IGhhdmUgYSBzdGFrZSBpbiB0aGUgb3V0Y29tZSBvZiB0aGUgYXNzZXNzbWVudHMuIFVubGlrZSBzdG9jayBwcmljZXMsIGF2YWlsYWJsZSBpbiByZWFsIHRpbWUgYXQgcmVndWxhdGVkIGV4Y2hhbmdlcyBmb3IgYWxsIGludmVzdG9ycyB0byBzZWUsIG1hbnkgcmF3IG1hdGVyaWFscyB0aGF0IGdvIGludG8gZm9vZCwgY2xvdGhpbmcgYW5kIHBvd2VyIGFyZSBib3VnaHQgYW5kIHNvbGQgaW4gcHJpdmF0ZS4g4oCcVGhlcmUgd2lsbCBiZSBncm93aW5nIHByZXNzdXJlIGZvciBtb3JlIHJlZ3VsYXRpb24s4oCdIERhdmlkIFdpbHNvbiwgZGlyZWN0b3Igb2YgbWV0YWxzIHJlc2VhcmNoIGFuZCBzdHJhdGVneSBhdCBDaXRpZ3JvdXAgSW5jLiBpbiBMb25kb24sIHNhaWQgYnkgcGhvbmUgU2VwdC4gMy4g4oCcQ29tbW9kaXRpZXMgbWFya2V0cyBoYXZlIHRyYWRpdGlvbmFsbHkgYmVlbiBhIGJhY2t3YXRlciB0aGF0IG9ubHkgc3BlY2lhbGlzdHMgd291bGQgaGF2ZSBiZWVuIGludm9sdmVkIHdpdGguIENsZWFybHkgdGhlc2UgbWFya2V0cyBoYXZlbuKAmXQgY2hhbmdlZCB3aXRoIHRoZSB0aW1lcy7igJ0gVHJhZGVyIFN1cnZleSBXaGlsZSBwcmljZXMgZm9yIHN0b2NrcywgYm9uZHMgYW5kIGN1cnJlbmNpZXMgYXJlIHNldCBieSBhY3R1YWwgdHJhZGVzIG9uIGV4Y2hhbmdlcywgYmVuY2htYXJrcyBmb3IgY29hbCwgaXJvbiBvcmUsIGZlcnRpbGl6ZXIsIGdhcyBhbmQgc29tZSBtZXRhbHMgYXJlIGRldGVybWluZWQgYnkgam91cm5hbGlzdHMuIFRoZXkgZXN0YWJsaXNoIHRoZSBwcmljZXMgYnkgY29sbGF0aW5nIGRhdGEgb24gYXZhaWxhYmxlIGJpZHMsIG9mZmVycyBhbmQgdHJhZGVzIGFzIHdlbGwgYXMgcGhvbmUgYW5kIGUtbWFpbCBzdXJ2ZXlzLiBUaG9zZSBhc3Nlc3NtZW50cyBhcmUgb2Z0ZW4gdXNlZCB0byBkZXRlcm1pbmUgcGF5bWVudHMgaW4gbG9uZy10ZXJtIGNvbnRyYWN0cyBiZXR3ZWVuIGJ1eWVycyBhbmQgc2VsbGVycy4gQmxvb21iZXJnIHN1cnZleWVkIGFuYWx5c3RzIGFuZCB0cmFkZXJzIG9mIGVuZXJneSwgbWV0YWxzLCBpcm9uIG9yZSwgY2FyYm9uIGFuZCBwb3dlci4gVGhleSB3ZXJlIGdyYW50ZWQgYW5vbnltaXR5IHNvIHRoZXkgd291bGQgZ2l2ZSB0aGVpciB1bmd1YXJkZWQgb3BpbmlvbnMgdG8gdGhlIHF1ZXN0aW9uOiDigJxIb3cgbWFueSB0aW1lcyBvdXQgb2YgMTAwIGluc3RhbmNlcyBkbyB5b3UgZXN0aW1hdGUgdGhlIGFzc2Vzc2VkIGJlbmNobWFyayBwcmljZSBmb3IgdGhlIG1haW4gY29tbW9kaXR5IHlvdSB0cmFkZSBpcyB1bnJlcHJlc2VudGF0aXZlIG9mIHRoZSB0cnVlIGxldmVsP+KAnSBUaGUgbWVhbiBhbnN3ZXIgd2FzIDI3IGFuZCB0aGUgbWVkaWFuIHdhcyAyMC4gQ3J1ZGUgYmVuY2htYXJrcyB3ZXJlIHRoZSBsZWFzdCByZXByZXNlbnRhdGl2ZSBpbiBtYXJrZXRzIHdoZXJlIG1vcmUgdGhhbiBmaXZlIHJlc3BvbmRlbnRzIGdhdmUgYW5zd2VycywgZm9sbG93ZWQgYnkgb2lsIHByb2R1Y3RzLCBtZXRhbHMgYW5kIGlyb24gb3JlLiBBZ3JpY3VsdHVyYWwgY29tbW9kaXRpZXMgaGFkIHRoZSBncmVhdGVzdCBhY2N1cmFjeSwgYWNjb3JkaW5nIHRvIHRoZSBzdXJ2ZXkuIEFib3V0IDI3MCBwZW9wbGUgd2VyZSBjb250YWN0ZWQuIE1vc3Qgb2YgdGhvc2Ugd2hvIGRlY2xpbmVkIHRvIGdpdmUgYW5zd2VycyBzYWlkIHRoZXkgY291bGRu4oCZdCBxdWFudGlmeSBob3cgZnJlcXVlbnRseSBwcmljZXMgd2VyZSBpbmFjY3VyYXRlLiBDbGVhciBDb25jZXJuIOKAnFRoZSBzdXJ2ZXkgc2hvd3MgdGhlcmUgaXMgY2xlYXJseSBhIGNvbmNlcm4gdGhhdCBvdGhlcnMgY291bGQgYmUgdXNpbmcgdGhlc2UgcHJpY2UtbWFraW5nIG1lY2hhbmlzbXMgdG8gYmlhcyB0aGUgcHJpY2UgdXAgb3IgZG93biBkZXBlbmRpbmcgb24gdGhlaXIgaW50ZXJlc3RzLOKAnSBTaGF1biBMZWRnZXJ3b29kLCBhIHNlbmlvciBhbnRpdHJ1c3QgY29uc3VsdGFudCBhdCB0aGUgQnJhdHRsZSBHcm91cCB3aG8gZm9ybWVybHkgd29ya2VkIGF0IHRoZSBVLlMuIEZlZGVyYWwgRW5lcmd5IFJlZ3VsYXRvcnkgQ29tbWlzc2lvbiwgc2FpZCBieSBwaG9uZSBTZXB0LiAzMC4g4oCcSG93ZXZlciwgZnJvbSB0aGUgdHJhZGVyc+KAmSBwZXJzcGVjdGl2ZSwgbm8gb3RoZXIgbWVjaGFuaXNtIHByb3ZpZGVzIGFzIHJlbGlhYmxlIGEgc291cmNlIG9mIGluZm9ybWF0aW9uLuKAnSBUaGUgcmVzcG9uc2VzIHJlcHJlc2VudCBhIGZyYWN0aW9uIG9mIHRoZSB0aG91c2FuZHMgb2YgY29tbW9kaXRpZXMgYW5kIGVuZXJneSB0cmFkZXJzIGluIHRoZSB3b3JsZC4gVGhlIDEwIGxhcmdlc3QgaW52ZXN0bWVudCBiYW5rcyBlbXBsb3kgYWxtb3N0IDIsMzAwIHBlb3BsZSBhY3Jvc3MgdHJhZGluZywgc3RydWN0dXJpbmcsIHNhbGVzIGFuZCByZXNlYXJjaCBwdWJsaXNoaW5nLCBhY2NvcmRpbmcgdG8gQ29hbGl0aW9uIERldmVsb3BtZW50IEx0ZC4sIGEgTG9uZG9uLWJhc2VkIHJlc2VhcmNoIGNvbXBhbnkuIFRoZSBzeXN0ZW0gb2YgcHJpY2UgYmVuY2htYXJrcyBpbiB0aGUgb2lsIG1hcmtldCDigJxpc27igJl0IGJyb2tlbizigJ0gSWFuIFRheWxvciwgcHJlc2lkZW50IGFuZCBjaGllZiBleGVjdXRpdmUgb2YgVml0b2wgR3JvdXAsIHRoZSB3b3JsZOKAmXMgbGFyZ2VzdCBpbmRlcGVuZGVudCBvaWwgdHJhZGVyLCBzYWlkIGluIGFuIGludGVydmlldyBhdCB0aGUgT2lsICYgTW9uZXkgY29uZmVyZW5jZSBpbiBMb25kb24gT2N0LiAxLiBTb21lIHByaWNlcyBhcmUgaGFyZCB0byBhc3Nlc3MgYmVjYXVzZSB0aGVyZSBhcmVu4oCZdCBlbm91Z2ggdHJhZGVzLCBoZSBzYWlkLiBMb2dpY2FsIFJlYXNvbiDigJxXZSBvY2Nhc2lvbmFsbHkgZG9u4oCZdCBsaWtlIHRoZSBwcmljZSBxdW90YXRpb25zIGJ1dCB3ZSBkb27igJl0IHRoaW5rIGl04oCZcyBmYWlyIHRvIHNheSB5b3UgY2Fu4oCZdCB0cnVzdCB0aGVtLOKAnSBUYXlsb3Igc2FpZC4g4oCcVGhlcmXigJlzIGEgbG9naWNhbCByZWFzb24gdGhhdCB0aGV5IGFyZSB3aGF0IHRoZXkgYXJlLCBhbmQgeW91IGNhbuKAmXQgc2F5IHRoZXnigJlyZSBkZW1vbnN0cmFibHkgd3Jvbmcu4oCdIFB1Ymxpc2hlZCBiZW5jaG1hcmtzIHByb3ZpZGUgbW9yZSB0cmFuc3BhcmVuY3kgdGhhbiB3b3VsZCBleGlzdCB3aXRob3V0IHRoZW0sIGFuZCB0aGVyZSBhcmUgbm8gYWx0ZXJuYXRpdmVzLCBFaHNhbiBVbC1IYXEsIGEgc2VuaW9yIG1hcmtldCBjb25zdWx0YW50IGF0IFdhbHRvbi1vbi1UaGFtZXMsIEVuZ2xhbmQtYmFzZWQgS0JDIEVuZXJneSBFY29ub21pY3Mgd2hvIGhhcyBhbG1vc3QgMjAgeWVhcnMgb2YgZXhwZXJpZW5jZSBpbiB0aGUgb2lsIGluZHVzdHJ5LCBzYWlkIGJ5IHBob25lIE9jdC4gMS4gQXNzZXNzbWVudHMgaW4gc3BvdCBtYXJrZXRzIGNvbnRyYXN0IHdpdGggZXhjaGFuZ2UtbGlzdGVkIGZ1dHVyZXMgcmFuZ2luZyBmcm9tIGNydWRlIG9pbCB0byBjb3JuLCB3aGljaCB0cmFkZSBhbG1vc3QgYXJvdW5kIHRoZSBjbG9jayBhbmQgYXJlIHB1YmxpY2x5IGRpc2Nsb3NlZC4gTW9yZSB0aGFuIDIsMDAwIGNvbW1vZGl0eSBjb250cmFjdHMgdHJhZGUgb24gYm91cnNlcyB3b3JsZHdpZGUsIGFjY29yZGluZyB0byBkYXRhIGNvbXBpbGVkIGJ5IEJsb29tYmVyZyBiYXNlZCBvbiBsaXN0aW5ncyBieSB0aGUgQ01FIEdyb3VwIEluYy4gYW5kIEludGVyY29udGluZW50YWxFeGNoYW5nZSBJbmMuICQ1LjY3IFRyaWxsaW9uIEVuc3VyaW5nIHRoZSBhY2N1cmFjeSBvZiBiZW5jaG1hcmtzIGhhcyBnYWluZWQgdXJnZW5jeSBhcyB0aGUgZ2xvYmFsIGNvbW1vZGl0aWVzIG1hcmtldCBzdXJnZWQuIFdvcmxkIHRyYWRlIGluIGFncmljdWx0dXJhbCwgbWluaW5nIHByb2R1Y3RzIGFuZCBmdWVscyBzd2VsbGVkIHRvICQ1LjY3IHRyaWxsaW9uIGluIDIwMTEgZnJvbSAkMS4zNCB0cmlsbGlvbiBhIGRlY2FkZSBlYXJsaWVyLCBhY2NvcmRpbmcgdG8gdGhlIFdvcmxkIFRyYWRlIE9yZ2FuaXphdGlvbiBpbiBHZW5ldmEuIFRoZSBJbnRlcm5hdGlvbmFsIE9yZ2FuaXphdGlvbiBvZiBTZWN1cml0aWVzIENvbW1pc3Npb25zLCB0aGUgTWFkcmlkLWJhc2VkIGdyb3VwIHJlcHJlc2VudGluZyByZWd1bGF0b3JzIGZyb20gbW9yZSB0aGFuIDEwMCBjb3VudHJpZXMsIHNldCB0b3VnaGVyIGd1aWRlbGluZXMgZm9yIHB1Ymxpc2hpbmcgYmVuY2htYXJrcyBpbiBhIEp1bHkgMTcgcmVwb3J0LCBpbmNsdWRpbmcgbWFraW5nIHByaWNlcyBiYXNlZCBvbiDigJxvYnNlcnZhYmxl4oCdIGRlYWxzIHdoZXJlIHBvc3NpYmxlLiBCYW5rcywgdHJhZGVycyBhbmQgYmVuY2htYXJrIHB1Ymxpc2hlcnMgY291bGQgYmUgZmluZWQgZm9yIGZhaWxpbmcgdG8gZm9sbG93IHJ1bGVzIGFpbWVkIGF0IHJlZHVjaW5nIHRoZSBwb3RlbnRpYWwgZm9yIHJhdGUtcmlnZ2luZywgYWNjb3JkaW5nIHRvIEVVIHJ1bGVzIHByb3Bvc2VkIFNlcHQuIDE4LiBXaGlsZSBwcmljZXMgd291bGQgaGF2ZSB0byBiZSBiYXNlZCBvbiByZWFsIHRyYW5zYWN0aW9uIGRhdGEsIHRob3NlIHVuZGVycGlubmluZyB0aGUgY29tbW9kaXR5IG1hcmtldHMgbWF5IGJlIGFsbG93ZWQgc3BlY2lhbCB0cmVhdG1lbnQgYmVjYXVzZSBvZiB0aGVpciDigJxzZWN0b3Itc3BlY2lmaWMgY2hhcmFjdGVyaXN0aWNzLOKAnSB0aGUgcGxhbnMgc2hvdy4gUHJvYmVzIFNwcmVhZCBSZWd1bGF0b3JzIHNheSB0aGV5IGFyZW7igJl0IGNvbnZpbmNlZCBvZiB0aGUgaW50ZWdyaXR5IG9mIGNvbW1vZGl0eSBhc3Nlc3NtZW50cy4gVGhlIEVV4oCZcyBwcm9iZXMgd2lsbCBwcm9iYWJseSBzcHJlYWQgdG8gcmF3IG1hdGVyaWFscywgQWxtdW5pYSwgYSB2aWNlLXByZXNpZGVudCBvZiB0aGUgRXVyb3BlYW4gQ29tbWlzc2lvbiwgc2FpZCBvbiB0aGUgRVUgYXNzZW1ibHnigJlzIHdlYnNpdGUgTWF5IDI4LiDigJxXZSBoYXZlIHN0YXJ0ZWQgd2l0aCB0aGUgZmluYW5jaWFsIHNlY3Rvciwgbm93IHdlIGFyZSBpbiB0aGUgZW5lcmd5IHNlY3RvciwgYW5kIHByb2JhYmx5IGluIHRoZSByYXcgbWF0ZXJpYWxzIG9yIGluIG90aGVyIGNhc2VzIHdlIHdpbGwgbmVlZCB0byBwYXkgYXR0ZW50aW9uIGFsc28s4oCdIGhlIHNhaWQuIEFsbXVuaWHigJlzIGNvbW1lbnRzIGNhbWUgYWZ0ZXIgYW50aXRydXN0IGF1dGhvcml0aWVzIG9wZW5lZCBhIHByb2JlIGludG8gbWFuaXB1bGF0aW9uIG9mIG9pbCBwcmljZXMuIEVVIGludmVzdGlnYXRvcnMgc2VhcmNoZWQgdGhlIG9mZmljZXMgb2YgUGxhdHRzLCB0aGUgdW5pdCBvZiBOZXcgWW9yay1iYXNlZCBNY0dyYXcgSGlsbCBGaW5hbmNpYWwgSW5jLiB0aGF0IGFzc2Vzc2VzIHRoZSBwcmljZSBvZiBEYXRlZCBCcmVudCwgdGhlIGJlbmNobWFyayBmb3IgbW9yZSB0aGFuIGhhbGYgb2YgdGhlIHdvcmxk4oCZcyBjcnVkZS4gQXV0aG9yaXRpZXMgYWxzbyByYWlkZWQgQlAgUGxjLCBSb3lhbCBEdXRjaCBTaGVsbCBQbGMgYW5kIFN0YXRvaWwgQVNBLCBhbmQgc291Z2h0IGluZm9ybWF0aW9uIGZyb20gVml0b2wgR3JvdXAsIEd1bnZvciBHcm91cCBMdGQuIGFuZCBHbGVuY29yZSBYc3RyYXRhIFBsYy4gU3Bva2VzbWVuIGZvciBCUCwgU2hlbGwsIFN0YXRvaWwsIEd1bnZvciBhbmQgR2xlbmNvcmUgZGVjbGluZWQgdG8gY29tbWVudCwgYXMgZGlkIGEgc3Bva2Vzd29tYW4gZm9yIFZpdG9sLiBUaGUgRmVkZXJhbCBUcmFkZSBDb21taXNzaW9uIGlzIGludmVzdGlnYXRpbmcgb2lsIHByaWNlcywgbWlycm9yaW5nIEV1cm9wZeKAmXMgaW5xdWlyeSwgdHdvIHBlb3BsZSBmYW1pbGlhciB3aXRoIHRoZSBtYXR0ZXIgc2FpZCBpbiBKdW5lLiBUaGUgRlRDIGlzIGxvb2tpbmcgYXQgdGhlIGltcGFjdCB0aGF0IHBvc3NpYmxlIG1hbmlwdWxhdGlvbiBvZiB0aGUgYmVuY2htYXJrIGNvdWxkIGhhdmUgb24gcGh5c2ljYWwgYW5kIGRlcml2YXRpdmUgb2lsIG1hcmtldHMgaW4gdGhlIFUuUy4sIGEgcGVyc29uIHdobyBhc2tlZCBub3QgdG8gYmUgbmFtZWQgYmVjYXVzZSB0aGUgbWF0dGVyIGlzIGNvbmZpZGVudGlhbCBzYWlkIGluIEp1bHkuICQxIFF1YWRyaWxsaW9uIFJlZ3VsYXRvcnMgYXJvdW5kIHRoZSB3b3JsZCBoYXZlIHRyaWVkIHRvIG1ha2UgdGhlIGZpbmFuY2lhbCBzeXN0ZW0gc2FmZXIgYW5kIG1vcmUgdHJhbnNwYXJlbnQgaW4gdGhlIGZpdmUgeWVhcnMgc2luY2UgdGhlIGNvbGxhcHNlIG9mIExlaG1hbiBCcm90aGVycyBIb2xkaW5ncyBJbmMuIEFzIHRoZXkgZXhhbWluZSBtYXJrZXRzIHRoYXQgcmVtYWluIG9wYXF1ZSwgdGhleSBhcmUgZmluZGluZyBtYW5pcHVsYXRpb24gb2YgYmVuY2htYXJrcyB1bmRlcmx5aW5nIGFsbW9zdCAkMSBxdWFkcmlsbGlvbiBvZiBhc3NldHMgYW5kIHRyYWRlcywgZXF1YWwgdG8gYWxtb3N0IDE0IHRpbWVzIHRoZSBnbG9iYWwgZWNvbm9taWMgb3V0cHV0IGluIDIwMTIuIFUuUy4gYW5kIFUuSy4gb2ZmaWNpYWxzIHVuY292ZXJlZCBiYW5rc+KAmSBhdHRlbXB0cyB0byByaWcgdGhlIExvbmRvbiBpbnRlcmJhbmsgb2ZmZXJlZCByYXRlLCBvciBMaWJvciwgcmVmZXJlbmNlZCBpbiBjb250cmFjdHMgdmFsdWVkIGF0IGFib3V0ICQ2MDAgdHJpbGxpb24uIFJveWFsIEJhbmsgb2YgU2NvdGxhbmQgR3JvdXAgUGxjLCBVQlMgQUcgYW5kIEJhcmNsYXlzIFBsYyB3ZXJlIGZpbmVkIGEgdG90YWwgb2YgYWJvdXQgJDIuNSBiaWxsaW9uIHNpbmNlIEp1bmUgMjAxMi4gSW50ZXJuYXRpb25hbCBQcm9iZXMgVGhvc2UgcHJvYmVzIGFyZSBjb250aW51aW5nLiBMYXN0IG1vbnRoLCBVLlMuIHByb3NlY3V0b3JzIGNoYXJnZWQgdGhyZWUgZm9ybWVyIElDQVAgUGxjIGVtcGxveWVlcyB3aXRoIG1hbmlwdWxhdGluZyBMaWJvciwgYW5kIHRoZSBMb25kb24tYmFzZWQgaW50ZXJkZWFsZXIgYnJva2VyIHdhcyBmaW5lZCAkODggbWlsbGlvbiBpbiBhIGZpdmUteWVhciBpbnRlcm5hdGlvbmFsIHByb2JlIG9mIHJpZ2dpbmcgb2YgYmVuY2htYXJrIGludGVyZXN0IHJhdGVzLiBBdXRob3JpdGllcyBhcmUgaW52ZXN0aWdhdGluZyBtYW5pcHVsYXRpb24gb2YgSVNEQWZpeCwgYSBiZW5jaG1hcmsgaW4gdGhlICQzNzkgdHJpbGxpb24gbWFya2V0IGZvciBpbnRlcmVzdC1yYXRlIHN3YXBzLiBBbG11bmlhIHNhaWQgT2N0LiA3IG9uIHRoZSBFVeKAmXMgd2Vic2l0ZSB0aGF0IGhlIGlzIGV4YW1pbmluZyBwb3NzaWJsZSBpcnJlZ3VsYXJpdGllcyBpbiBjdXJyZW5jeSByYXRlcyBmb2xsb3dpbmcgYSBTd2lzcyBwcm9iZSBpbnRvIHdoZXRoZXIgYmFua3MgY29sbHVkZWQgdG8gbWFuaXB1bGF0ZSB0aGUgJDUuMyB0cmlsbGlvbi1hLWRheSBmb3JlaWduIGV4Y2hhbmdlIG1hcmtldC4gUm95YWwgQmFuayBvZiBTY290bGFuZCBwYXNzZWQgYSBjdXJyZW5jeSB0cmFkZXLigJlzIGluc3RhbnQgbWVzc2FnZSByZWNvcmRzIHRvIFUuSy4gcmVndWxhdG9ycyBhZnRlciBjb25jbHVkaW5nIHRoZSBjb21tdW5pY2F0aW9ucyBtYXkgaGF2ZSBiZWVuIGluYXBwcm9wcmlhdGUsIGFjY29yZGluZyB0byB0d28gcGVvcGxlIGZhbWlsaWFyIHdpdGggdGhlIG1hdHRlci4gUkJTIHVuY292ZXJlZCB0aGUgY2hhdHMgYWZ0ZXIgb3BlbmluZyBhbiBpbnRlcm5hbCBwcm9iZSBmb2xsb3dpbmcgYSBCbG9vbWJlcmcgTmV3cyByZXBvcnQgaW4gSnVuZSB0aGF0IHRyYWRlcnMgYXQgc29tZSBvZiB0aGUgd29ybGTigJlzIGJpZ2dlc3QgYmFua3MgbWF5IGhhdmUgc291Z2h0IHRvIG1hbmlwdWxhdGUgYmVuY2htYXJrIGZvcmVpZ24gZXhjaGFuZ2UgcmF0ZXMuIEFuIFJCUyBzcG9rZXNtYW4gZGVjbGluZWQgdG8gY29tbWVudC4gUmVxdWlyaW5nIHRoYXQgY29tbW9kaXR5LXByaWNlIGJlbmNobWFya3MgYmUgc2V0IGJ5IG9ic2VydmFibGUgZGVhbHMgbWF5IGJhY2tmaXJlIHNob3VsZCB0cmFkZXJzIGRlY2lkZSBpdOKAmXMgc2FmZXIgdG8gYXZvaWQgcGFydGljaXBhdGluZyBpbiBhc3Nlc3NtZW50cywgc2FpZCBDbGFyZSBIYXRjaGVyLCBhIGNvbnN1bHRhbnQgYXQgTG9uZG9uLWJhc2VkIGxhdyBmaXJtIENseWRlICYgQ28uIDEzMCBZZWFycyBNZXRob2RzIGZvciBwcmljaW5nIGNvbW1vZGl0aWVzIGV2b2x2ZWQgb3ZlciBhcyBsb25nIGFzIDEzMCB5ZWFycyBhbmQgZ2FpbmVkIGFjY2VwdGFuY2UgaW4gcGFydCBieSBwcm92aWRpbmcgbW9yZSBpbmZvcm1hdGlvbiB0byB0aGUgbWFya2V0IHRoYW4gd2FzIHByZXZpb3VzbHkgYXZhaWxhYmxlLiBGb3IgY3J1ZGUgb2lsIGFuZCByZWZpbmVkIGZ1ZWxzLCBQbGF0dHMgcHVibGlzaGVzIHRoZSBuYW1lcyBvZiBjb21wYW5pZXMsIHByaWNlcywgZGVsaXZlcnkgcG9ydHMgYW5kIG90aGVyIHRyYW5zYWN0aW9uIGRldGFpbHMuIEl0IGFzc2Vzc2VzIHByaWNlcyB0aHJvdWdoIGJpZHMsIG9mZmVycyBhbmQgdHJhbnNhY3Rpb25zIG1hZGUgYnkgcGhvbmUsIGluc3RhbnQgbWVzc2FnZSBvciBvbmxpbmUgZHVyaW5nIHByZXNjcmliZWQgdGltZXMsIGtub3duIGFzIHRoZSBtYXJrZXQtb24tY2xvc2UgcHJvY2Vzcywgd2hpY2ggc3Vic2NyaWJlcnMgdG8gdGhlIHNlcnZpY2UgY2FuIHNlZS4gVGhlIHByb2Nlc3MgYmVnYW4gaW4gMTk5MiBhbmQgaXMgdXNlZCBmb3Igc2VsZWN0ZWQgcHJvZHVjdHMsIHN1Y2ggYXMgRGF0ZWQgQnJlbnQgY3J1ZGUsIHRoYXQgaGF2ZSBpbmR1c3RyeS1hZ3JlZWQgc3BlY2lmaWNhdGlvbnMuIE1vcmUgdGhhbiA2MCBwZXJjZW50IG9mIHRoZSB3b3JsZOKAmXMgaW50ZXJuYXRpb25hbGx5IHRyYWRlZCBjcnVkZSBvaWwgd2FzIHByaWNlZCBhZ2FpbnN0IERhdGVkIEJyZW50IGFzIG9mIE1heSAyMDExLCBhY2NvcmRpbmcgdG8gYSByZXBvcnQgYnkgUGxhdHRzIGF0IHRoZSB0aW1lLiBCZWZvcmUgbWFya2V0LXJlbGF0ZWQgcHJpY2luZyBzeXN0ZW1zIHdlcmUgYWRvcHRlZCBpbiB0aGUgbGF0ZSAxOTgwcywgb2lsIHByaWNlcyB3ZXJlIHNldCBieSBsYXJnZSBtdWx0aW5hdGlvbmFsIGNvbXBhbmllcyBhbmQgbGF0ZXIgYnkgdGhlIE9yZ2FuaXphdGlvbiBvZiBQZXRyb2xldW0gRXhwb3J0aW5nIENvdW50cmllcywgYWNjb3JkaW5nIHRvIHRoZSBPeGZvcmQgSW5zdGl0dXRlIGZvciBFbmVyZ3kgU3R1ZGllcy4gSnVkZ21lbnQgQ2FsbHMgSW4gb3RoZXIgbWFya2V0cywgc3VjaCBhcyBjb2FsIGFuZCBpcm9uIG9yZSwgdHJhbnNhY3Rpb24gZGV0YWlscyBhcmUgcHVibGlzaGVkIHdoZW4gYnV5ZXJzIGFuZCBzZWxsZXJzIGFncmVlIHRvIHByb3ZpZGUgdGhlbS4gUGxhdHRzIHJlcG9ydGVycyBkaXNjdXNzIGJpZHMsIG9mZmVycyBhbmQgZGVhbHMgd2l0aCBwYXJ0aWNpcGFudHMgdG8gZGV0ZXJtaW5lIGRhaWx5IHByaWNlcy4gSW4gdGhlIGFic2VuY2Ugb2YgdmVyaWZpZWQgZGVhbHMsIHJlcG9ydGVycyB1c2UgaW5mb3JtYXRpb24gc3VjaCBhcyBiaWRzIGFuZCBvZmZlcnMgYW5kIHJlbGF0ZWQgcHJpY2VzIGluIG90aGVyIG1hcmtldHMuIEp1ZGdtZW50IGlzIHVzZWQgdG8gZXhjbHVkZSBkYXRhIHRoYXQgZG9u4oCZdCBmb2xsb3cgUGxhdHRzIHByb2NlZHVyZXMgb3IgYXJlIGNvbnNpZGVyZWQgb3V0IG9mIGxpbmUuIOKAnEluIGFsbCBvZiBQbGF0dHPigJkgZGF0YS1jb2xsZWN0aW9uIHByb2Nlc3NlcyBmb3IgaXRzIGFzc2Vzc21lbnRzLCBvdXIgYWltIGlzIHRvIGJyaW5nIHRyYW5zcGFyZW5jeSB0byBwcmljZSBkaXNjb3ZlcnkgYnkgcHVibGlzaGluZyBhcyBtdWNoIGRldGFpbGVkIGFuZCBtZWFuaW5nZnVsIGluZm9ybWF0aW9uIGFzIHBvc3NpYmxlLOKAnSBLYXRobGVlbiBUYW56eSwgYSBOZXcgWW9yay1iYXNlZCBzcG9rZXN3b21hbiBmb3IgdGhlIGNvbXBhbnksIHNhaWQgaW4gYW4gZS1tYWlsZWQgc3RhdGVtZW50IE9jdC4gNC4g4oCcSW4gb3VyIG9pbCBhbmQgb2lsIHByb2R1Y3RzIGFzc2Vzc21lbnRzLCB0aGUgZGVncmVlIG9mIHRyYW5zcGFyZW5jeSBvdXIgbWFya2V0LSBvbi1jbG9zZSBwcmljZSBhc3Nlc3NtZW50IHByb2Nlc3MgcHJvdmlkZXMgaXMgdW5wYXJhbGxlbGVkLCBpZGVudGlmeWluZyBhbGwgZGF0YSBieSBjb21wYW55IG5hbWUu4oCdIFByaXZhdGUgTmVnb3RpYXRpb25zIFN1Z2FyLCBjb2ZmZWUgYW5kIGNvY29hIGFyZSBkZXRlcm1pbmVkIGluIHByaXZhdGUgbmVnb3RpYXRpb25zLCB3aXRoIHByaWNlcyBzZXQgYXQgYSBjZXJ0YWluIGFtb3VudCBhYm92ZSBvciBiZWxvdyBleGNoYW5nZS10cmFkZWQgZnV0dXJlcy4gSW4gdGhlc2Ugc3BvdCBtYXJrZXRzIGZvciBwcm9tcHQgZGVsaXZlcmllcywgcmVwb3J0ZXJzIGNhbGwgdHJhZGVycyBhbmQgYnJva2VycyBhbmQgdGhlbiBwdWJsaXNoIHRoZSB2YWx1ZXMgaW4gbmV3cyBhcnRpY2xlcy4gSW4gUGxhdHRz4oCZcyBleHBlcmllbmNlLCB0aGVyZSBpcyBhbHdheXMgc29tZW9uZSB3aG8gZG9lc27igJl0IGFncmVlIHdpdGggYSBwcmljZSBhc3Nlc3NtZW50LCBwZXJoYXBzIGJlY2F1c2UgdGhlIG1hcmtldCBtb3ZlZCBhZ2FpbnN0IGhpcyBvciBoZXIgcG9zaXRpb24sIFRhbnp5IHNhaWQuIFBsYXR0cyBhc3Nlc3NtZW50cyByZWZsZWN0IG1hcmtldCB2YWx1ZSBhcyBkZXRlcm1pbmVkIGJldHdlZW4gYnV5ZXIgYW5kIHNlbGxlciBpbiB0aGUgb3BlbiBtYXJrZXQgYW5kIHJlcG9ydGVkIHRvIFBsYXR0cywgc2hlIHNhaWQgaW4gYSBwcmV2aW91cyBlLW1haWwuIFBsYXR0cyBnYXZlIHRoZSBFVSBhIHByZXNlbnRhdGlvbiBvdXRsaW5pbmcgaXRzIG1hcmtldC1vbi0gY2xvc2UgYXNzZXNzbWVudCwgVGFuenkgc2FpZCwgZGVjbGluaW5nIHRvIHByb3ZpZGUgZGV0YWlscyBvZiB0aGUgbWVldGluZy4gVGhlIGNvbXBhbnkgaXMgYW4gaW5kZXBlbmRlbnQgcGFydHkgd2l0aCBubyBmaW5hbmNpYWwgc3Rha2UgaW4gd2hldGhlciBwcmljZXMgcmlzZSBvciBmYWxsLCBKb3JnZSBNb250ZXBlcXVlLCBnbG9iYWwgZGlyZWN0b3Igb2YgbWFya2V0IHJlcG9ydGluZywgc2FpZCBpbiBhIEp1bHkgaW50ZXJ2aWV3LiBFeHRlcm5hbCBSZXZpZXcgQXJndXMgTWVkaWEgTHRkLiwgYSBjb21wZXRpdG9yIG9mIFBsYXR0cywgaGFzbuKAmXQgYmVlbiBpbnZvbHZlZCBpbiB0aGUgRVUgaW52ZXN0aWdhdGlvbiBhbmQgd29u4oCZdCBzcGVjdWxhdGUgYWJvdXQgc2NydXRpbnkgb2Ygb2lsIG9yIG90aGVyIG1hcmtldHMsIFNlYW5hIExhbmlnYW4sIGEgc3Bva2Vzd29tYW4gZm9yIHRoZSBMb25kb24tYmFzZWQgY29tcGFueSAsIHNhaWQgaW4gYSBKdWx5IDI2IGUtbWFpbC4gQXJndXMgaXMgaW1wbGVtZW50aW5nIHRoZSBwcmluY2lwbGVzIGZvciBvaWwtcHJpY2UgcmVwb3J0aW5nIHJlY29tbWVuZGVkIGJ5IElPU0NPLCBzaGUgc2FpZC4g4oCcSW4gNDAgeWVhcnMgd2XigJl2ZSBuZXZlciBoYWQgYW55IHNlcmlvdXMgY29tcGxhaW50cyBvciBsZWdhbCBhY3Rpb24gYWJvdXQgb3VyIHByaWNlIGFzc2Vzc21lbnRzLOKAnSBBZHJpYW4gQmlua3MsIGNoYWlybWFuIGFuZCBjaGllZiBleGVjdXRpdmUgb2YgQXJndXMsIHNhaWQgYnkgcGhvbmUgT2N0LiA0LiBBbiBleHRlcm5hbCByZXZpZXcgb2YgQXJndXPigJlzIHByb2Nlc3Mgd2lsbCBiZSBwdWJsaXNoZWQgaW4gdGhlIG5leHQgbW9udGgsIGhlIHNhaWQuIEJsb29tYmVyZyBMUCwgdGhlIHBhcmVudCBvZiBCbG9vbWJlcmcgTmV3cywgY29tcGV0ZXMgd2l0aCBQbGF0dHMsIEFyZ3VzIGFuZCBvdGhlciBhc3Nlc3NtZW50IGNvbXBhbmllcyBpbiBwcm92aWRpbmcgbWFya2V0IG5ld3MgYW5kIGluZm9ybWF0aW9uLiBFdmVuIGZvciBnb2xkLCB3aXRoIGl0cyBwcmljaW5nIHN5c3RlbSB0aGF0IGhhcyBsYXN0ZWQgbW9yZSB0aGFuIDkwIHllYXJzLCBpdCB3b3VsZCBiZSDigJxuYWl2ZSB0byBkaXNjb3VudCB0aGUgcG9zc2liaWxpdHkgb2YgcHJpY2UgbWFuaXB1bGF0aW9uLOKAnSBzYWlkIE1hcmsgT+KAmUJ5cm5lLCBkaXJlY3RvciBhdCBicm9rZXJhZ2UgR29sZENvcmUgTHRkLiBpbiBEdWJsaW4uIEluIHRoZSBzcG90IG1hcmtldCwgdHJhbnNhY3Rpb25zIGJldHdlZW4gYmFua3MgYXJlIHJlcG9ydGVkIGJ5IHBhcnRpY2lwYW50cyBkaXJlY3RseSB0byBuZXdzIG9yZ2FuaXphdGlvbnMuIFByaWNlcyB1c2VkIGJ5IG1pbmluZyBjb21wYW5pZXMgZm9yIGhlZGdpbmcgYXJlIHB1Ymxpc2hlZCBieSBMb25kb24gR29sZCBNYXJrZXQgRml4aW5nIEx0ZC4gRml2ZSBiYW5rcyBjYXJyeSBvdXQgZml4aW5ncyBldmVyeSBtb3JuaW5nIGFuZCBhZnRlcm5vb24gdG8gc2V0IGJlbmNobWFyayBwcmljZXMuIFByb2Nlc3MgQXVkaXRzIFRoZSBDaGluYSBJcm9uICYgU3RlZWwgQXNzb2NpYXRpb24sIHJlcHJlc2VudGluZyBpcm9uLW9yZSBidXllcnMgZnJvbSB0aGUgd29ybGTigJlzIGxhcmdlc3QgaW1wb3J0aW5nIG5hdGlvbiwgc2FpZCBpbiBNYXkgaXQgd2FzIHNrZXB0aWNhbCBhYm91dCBQbGF0dHMgcHJpY2VzIGJlY2F1c2Ugb2YgdGhlIHVua25vd24gc2l6ZSBvZiB0aGUgZGVhbCBzYW1wbGVzLiBNZXRhbCBCdWxsZXRpbiBMdGQuIHdpbGwgcHJvYmFibHkgaGlyZSBhbiBvdXRzaWRlIGF1ZGl0b3IgdG8gcmV2aWV3IGl0cyBwcm9jZXNzIGZvciBwcmljaW5nIGlyb24gb3JlIGFuZCBzdGVlbCwgTG9uZG9uLSBiYXNlZCBNYW5hZ2luZyBEaXJlY3RvciBSYWp1IERhc3dhbmkgc2FpZCBKdW5lIDYuIFB1Ymxpc2hlZCBiZW5jaG1hcmtzIHByb3ZpZGUgbW9yZSB0cmFuc3BhcmVuY3kgdGhhbiB3b3VsZCBleGlzdCB3aXRob3V0IHRoZW0sIERhc3dhbmkgc2FpZCBieSBlLW1haWwgT2N0LiA0LiBDUlUgR3JvdXAsIGEgY29tcGV0aXRvciwgc2FpZCBKdW5lIDUgaXQgaGlyZWQgYSB0aGlyZCBwYXJ0eSB0byByZXZpZXcgaG93IGl0IGNvbGxlY3RzIHN0ZWVsIHByaWNlcy4gVGhlIHJlc3VsdHMgd2lsbCBiZSBwdWJsaXNoZWQgdG8gZGF0YSBwcm92aWRlcnMsIEdsZW5uIENvb25leSwgaGVhZCBvZiBvcGVyYXRpb25zLCBzYWlkIGJ5IGUtbWFpbCBPY3QuIDQuIOKAnFlvdSBjYW7igJl0IHJlZ3VsYXRlIGEgaGFuZHNoYWtlLCBhIG9uZS1vZmYgY29udHJhY3QgYmV0d2VlbiBwcm9kdWNlcnMsIHNoaXBwZXJzIGFuZCBjb25zdW1lcnMs4oCdIEFuZHJleSBLcnl1Y2hlbmtvdiwgYSBMb25kb24tYmFzZWQgYW5hbHlzdCBhdCBWVEIgQ2FwaXRhbCwgYSB1bml0IG9mIFJ1c3NpYeKAmXMgc2Vjb25kLWxhcmdlc3QgbGVuZGVyLCBzYWlkIGluIGFuIGUtbWFpbGVkIHJlc3BvbnNlIHRvIHF1ZXN0aW9ucyBTZXB0LiA0LiDigJxIb3cgZG8geW91IGRlZmluZSBtYW5pcHVsYXRpb24/IFdoZW4gYW4gQXVzdHJhbGlhbiBtaW5lciBzaGFrZXMgYSBoYW5kIHdpdGggYSBnaWFudCBzbWVsdGVyIGluIENoaW5hIGFuZCB0aGV5IGFncmVlIG9uIGEgdGVybSBwcmljZT/igJ0=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGblfyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGE1ZmZiZjg1OTM3MTk0ZTI=</field><field name="symbol" class="java.lang.String">rO0ABXQACEdMQ05GLlBL</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGgvFiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAUzMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAU4UeuFHrh</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAUwo9cKPXD</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAU4UeuFHrh</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAUR64UeuFI</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAKKA==</field><field name="id" class="java.lang.String">rO0ABXQAEDYyODg1MzdkNzAwOTFhOTI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHfPAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDIzNzU=</field><field name="title" class="java.lang.String">rO0ABXQAMUdvbGQgVHJhZGVycyBNb3N0IEJ1bGxpc2ggU2luY2UgQmVhciBNYXJrZXQgQmVnYW4=</field><field name="content" class="java.lang.String">rO0ABXQcrU5pbmV0ZWVuIGFuYWx5c3RzIHN1cnZleWVkIGJ5IEJsb29tYmVyZyBleHBlY3QgcHJpY2VzIHRvIHJpc2UgbmV4dCB3ZWVrLCB3aXRoIGVpZ2h0IGJlYXJpc2ggYW5kIHNpeCBuZXV0cmFsLCB0aGUgbGFyZ2VzdCBwcm9wb3J0aW9uIG9mIGJ1bGxzIHNpbmNlIE1hcmNoIDIyLiBHbG9iYWwgc3RvY2tzIHRoYXQgcm9zZSB0byB0aGUgaGlnaGVzdCBzaW5jZSBKdW5lIDIwMDggb24gTWF5IDIyIHJlYWNoZWQgYSBzaXgtd2VlayBsb3cgVGh1cnNkYXkgYW1pZCBtb3VudGluZyBzcGVjdWxhdGlvbiBhYm91dCB3aGV0aGVyIHRoZSBGZWRlcmFsIFJlc2VydmUgd2lsbCB0YXBlciBzdGltdWx1cy4gVGhlIFUuUy4gRG9sbGFyIEluZGV4LCBhIG1lYXN1cmUgYWdhaW5zdCBzaXggY3VycmVuY2llcywgc2xpcHBlZCB0byB0aGUgbG93ZXN0IGluIHRocmVlIG1vbnRocy4gV2Vla2x5IHNhbGVzIG9mIGdvbGQgaGVsZCB0aHJvdWdoIGV4Y2hhbmdlLXRyYWRlZCBwcm9kdWN0cyBhcmUgcG9pc2VkIGZvciB0aGUgbG93ZXN0IGxldmVsIHNpbmNlIE1hcmNoIGFmdGVyIHRoZSB2YWx1ZSBvZiBob2xkaW5ncyBzbHVtcGVkIGJ5IG1vcmUgdGhhbiAkNDUgYmlsbGlvbiB0aGlzIHllYXIuIFRoZSBzdGFydCBvZiB0aGUgYmVhciBtYXJrZXQgaW4gQXByaWwgc3B1cnJlZCBhIHN1cmdlIGluIGRlbWFuZCBmb3IgY29pbnMgYW5kIGpld2VscnksIHdpdGggdGhlIFUuUy4gTWludCBzYXlpbmcgSnVuZSA1IHRoYXQgaXRzIHNhbGVzIG1heSBiZSBhIHJlY29yZCB0aGlzIHllYXIuIERlbWFuZCBoYXMgYmVlbiBzbyBncmVhdCBpbiBJbmRpYSwgdGhlIGJpZ2dlc3QgYnV5ZXIsIHRoYXQgdGhlIGdvdmVybm1lbnQgaXMgY3VyYmluZyBpbXBvcnRzIHRvIGVhc2UgdGhlIG5hdGlvbidzIGN1cnJlbnQtYWNjb3VudCBkZWZpY2l0LiAiVGhlIGNvbmNlcm4gaXMgdGhhdCB3ZSBzZWUgc3RvY2sgbWFya2V0cyBjb21lIHVuZGVyIHByZXNzdXJlIGFuZCB0aGVuIHNlZSBhbiBpbmNyZWFzZSBpbiByaXNrIGF2ZXJzaW9uLCIgc2FpZCBNYXJrIE/igJlCeXJuZSwgdGhlIGV4ZWN1dGl2ZSBkaXJlY3RvciBvZiBEdWJsaW4tYmFzZWQgR29sZENvcmUgTHRkLiwgYSBicm9rZXJhZ2UgdGhhdCBzZWxscyBhbmQgc3RvcmVzIGJ1bGxpb24gY29pbnMgYW5kIGJhcnMuICJHb2xkJ3MgYWxyZWFkeSBoYWQgYSBjb3JyZWN0aW9uLCBzbyBwZW9wbGUgc2VlIHZhbHVlIGluIHRoZSBnb2xkIG1hcmtldC4gVGhlcmUgaGFzIGJlZW4gc2lnbmlmaWNhbnQgdGVjaG5pY2FsIGRhbWFnZSBkb25lIHRvIGdvbGQgYW5kIHRoZXJlZm9yZSBpdCB3aWxsIHRha2UgYSBwZXJpb2Qgb2YgdGltZSB0byByZWNvdmVyLiIgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEdvbGQgUHJpY2UgVGhlIG1ldGFsIGZlbGwgMTYgcGVyY2VudCB0byAkMSw0MDAuNDAgYW4gb3VuY2UgaW4gTG9uZG9uIHRoaXMgeWVhciBhZnRlciBjbGltYmluZyB0aGUgcGFzdCAxMiB5ZWFycywgYW5kIGlzIHRyYWRpbmcgMjcgcGVyY2VudCBiZWxvdyB0aGUgcmVjb3JkICQxLDkyMS4xNSBzZXQgaW4gU2VwdGVtYmVyIDIwMTEuIFRoZSBTdGFuZGFyZCAmIFBvb3IncyBHU0NJIGdhdWdlIG9mIDI0IGNvbW1vZGl0aWVzIGRyb3BwZWQgMy4xIHBlcmNlbnQgc2luY2UgdGhlIHN0YXJ0IG9mIEphbnVhcnkgYW5kIHRoZSBNU0NJIEFsbC1Db3VudHJ5IFdvcmxkIEluZGV4IG9mIGVxdWl0aWVzIHJvc2UgNi4zIHBlcmNlbnQuIFRyZWFzdXJpZXMgbG9zdCAxIHBlcmNlbnQsIGEgQmFuayBvZiBBbWVyaWNhIENvcnAuIGluZGV4IHNob3dzLiBHb2xkIHJldHJlYXRlZCBhcyBzb21lIGludmVzdG9ycyBsb3N0IGZhaXRoIGluIHRoZSBtZXRhbCBhcyBhIHN0b3JlIG9mIHZhbHVlIGFuZCB0aGUgVS5TLiBlY29ub215IGltcHJvdmVkLiBUaGUgRmVkJ3MgQmVpZ2UgQm9vayBzaG93ZWQgSnVuZSA1IHRoYXQgdGhlIGVjb25vbXkgZXhwYW5kZWQgYXQgYSAibW9kZXN0IHRvIG1vZGVyYXRlIiBwYWNlIGluIDExIG9mIDEyIEZlZCBkaXN0cmljdHMuIFRoZSBDaGljYWdvIEJvYXJkIE9wdGlvbnMgRXhjaGFuZ2UgVm9sYXRpbGl0eSBJbmRleCBqdW1wZWQgMzkgcGVyY2VudCBzaW5jZSBtaWQtTWF5IGFuZCByZWFjaGVkIGEgc2V2ZW4td2VlayBoaWdoIEp1bmUgNS4gVGhlIGdhdWdlIG9mIFMmUCA1MDAgSW5kZXggb3B0aW9ucyBwcmljZXMgaXMgc3RpbGwgNjQgcGVyY2VudCBiZWxvdyBpdHMgcGVhayBpbiAyMDExLiBIZWRnZSBmdW5kcyBhbmQgb3RoZXIgbGFyZ2Ugc3BlY3VsYXRvcnMgcmFpc2VkIHRoZWlyIG5ldC0gbG9uZyBwb3NpdGlvbiwgb3IgYmV0cyBvbiBoaWdoZXIgcHJpY2VzLCBieSAzNSBwZXJjZW50IGluIHRoZSB3ZWVrIHRvIE1heSAyOCwgdGhlIGJpZ2dlc3QganVtcCBpbiB0d28gbW9udGhzLCBVLlMuIENvbW1vZGl0eSBGdXR1cmVzIFRyYWRpbmcgQ29tbWlzc2lvbiBkYXRhIHNob3cuIE1vc3Qgb2YgdGhlIGluY3JlYXNlIGNhbWUgZnJvbSBhIGN1dCBpbiBzaG9ydCB3YWdlcnMgZnJvbSB0aGUgcHJldmlvdXMgd2VlaydzIHJlY29yZC4gICAgICAgICAgICAgICAgICAgICAgICAgIFBoeXNpY2FsIERlbWFuZCBQaHlzaWNhbCBkZW1hbmQgc3VyZ2VkIGFyb3VuZCB0aGUgd29ybGQgYWZ0ZXIgcHJpY2VzIHNsaWQgdG8gYSB0d28teWVhciBsb3cgb2YgJDEsMzIxLjk1IG9uIEFwcmlsIDE2LiBHb2xkIGFuZCBzaWx2ZXIgY29pbiBwdXJjaGFzZXMgZnJvbSB0aGUgVS5TLiBNaW50IG1heSByZWFjaCBhIHJlY29yZCB0aGlzIHllYXIgaWYgdGhlIGN1cnJlbnQgZGVtYW5kIGNvbnRpbnVlcywgUmljaGFyZCBQZXRlcnNvbiwgaXRzIGFjdGluZyBkaXJlY3Rvciwgc2FpZCBpbiBhIEp1bmUgNSBpbnRlcnZpZXcuIFRoZSBtaW50IHNvbGQgMTIsMDAwIG91bmNlcyBvZiBBbWVyaWNhbiBFYWdsZSBnb2xkIGNvaW5zIHRoaXMgbW9udGgsIGNvbXBhcmVkIHdpdGggNzAsMDAwIGluIE1heSBhbmQgMjA5LDUwMCBvdW5jZXMgaW4gQXByaWwuIEJ1bGxpb24gZm9yIGltbWVkaWF0ZSBkZWxpdmVyeSBpbiBDaGluYSBhdmVyYWdlZCBhYm91dCAkMzEgbW9yZSB0aGFuIHRoZSBMb25kb24gcHJpY2Ugc2luY2UgbWlkLUFwcmlsLiBUaGUgcHJlbWl1bSBoYWQgYXZlcmFnZWQgYWJvdXQgJDcgaW4gdGhlIHByZXZpb3VzIDEyIG1vbnRocywgU2hhbmdoYWkgR29sZCBFeGNoYW5nZSBkYXRhIHNob3cuIERlbWFuZCBpbiBJbmRpYSBpcyBwb2lzZWQgZm9yIGEgcXVhcnRlcmx5IHJlY29yZCwgdGhlIFdvcmxkIEdvbGQgQ291bmNpbCBzYWlkIE1heSAyOS4gSW1wb3J0cyB3aWxsIGJlIDMwMCB0byA0MDAgbWV0cmljIHRvbnMgaW4gdGhlIHBlcmlvZCwgYWxtb3N0IGhhbGYgb2YgbGFzdCB5ZWFyJ3MgdG90YWwgc2hpcG1lbnRzLCB0aGUgTG9uZG9uLWJhc2VkIGdyb3VwIGVzdGltYXRlcy4gSW5kaWFuIEltcG9ydHMgSW5kaWEgcmFpc2VkIGEgZHV0eSBvbiBnb2xkIGltcG9ydHMgdG8gOCBwZXJjZW50IGZyb20gNiBwZXJjZW50IG9uIEp1bmUgNSwgZm9sbG93aW5nIGVhcmxpZXIgbW92ZXMgdG8gd2lkZW4gY3VyYnMgb24gc2hpcG1lbnRzIHRoYXQgY29udHJpYnV0ZWQgdG8gYSAkMzIuNiBiaWxsaW9uIGN1cnJlbnQtYWNjb3VudCBnYXAgaW4gdGhlIGZvdXJ0aCBxdWFydGVyLiBJbXBvcnRzIG1heSBmYWxsIGFzIG11Y2ggYXMgMjAgcGVyY2VudCB0aGlzIHllYXIgYmVjYXVzZSBvZiB0aGUgaGlnaGVyIGxldnksIEJhY2hocmFqIEJhbWFsd2EsIGEgZGlyZWN0b3IgYXQgdGhlIEFsbCBJbmRpYSBHZW1zICYgSmV3ZWxlcnkgVHJhZGUgRmVkZXJhdGlvbiwgc2FpZCB0aGUgc2FtZSBkYXkuIERlbWFuZCBmcm9tIHNwZWN1bGF0b3JzIHRoYXQgaGVscGVkIHB1c2ggcHJpY2VzIHVwIGFzIG11Y2ggYXMgc2V2ZW5mb2xkIGluIHRoZSBwYXN0IDEyIHllYXJzIGlzIHdhbmluZy4gVGF1cnVzIEZ1bmRzIE1hbmFnZW1lbnQgUHR5IEx0ZC4gc2h1dCBpdHMgcHJlY2lvdXMgbWV0YWxzIGZ1bmQgaW4gTWF5IGJlY2F1c2Ugb2YgaW52ZXN0b3IgcmVkZW1wdGlvbnMsIHNhaWQgR29yZG9uIEdhbHQsIGEgcHJpbmNpcGFsIGF0IHRoZSBTeWRuZXktYmFzZWQgZnVuZCBtYW5hZ2VyLiBQcmljZXMgZHJvcHBlZCBpbiBzZXZlbiBvZiB0aGUgcGFzdCBlaWdodCBtb250aHMgYmVjYXVzZSB0aGUgdW5wcmVjZWRlbnRlZCBtb25leSBwcmludGluZyBieSBjZW50cmFsIGJhbmtzIGZhaWxlZCB0byBpbmNyZWFzZSBpbmZsYXRpb24gYXQgYSB0aW1lIHdoZW4gbW91bnRpbmcgb3B0aW1pc20gdGhlIGdsb2JhbCByZWNvdmVyeSBpcyBnYWluaW5nIG1vbWVudHVtIHB1c2hlZCBVLlMuIGVxdWl0aWVzIHRvIHJlY29yZHMgbGFzdCBtb250aC4gRmVkIENoYWlybWFuIEJlbiBTLiBCZXJuYW5rZSBzYWlkIGluIE1heSB0aGF0IHRoZSBwYWNlIG9mIHF1YW50aXRhdGl2ZSBlYXNpbmcgY291bGQgYmUgcmVkdWNlZCBpZiB0aGUgam9ibGVzcyByYXRlIGtlZXBzIGRyb3BwaW5nLiAgICAgICAgICAgICAgICAgICAgICAgICBHbG9iYWwgRXhwYW5zaW9uICJUaGUgdGFpbCByaXNrcyBsYXJnZWx5IGhhdmUgYmVlbiBtaXRpZ2F0ZWQsIiBzYWlkIExvbmRvbi1iYXNlZCBXYXJyZW4gUm9nZXJzLCBhIGZ1bmQgbWFuYWdlciBhdCBEdWV0IEFzc2V0IE1hbmFnZW1lbnQgTHRkLiwgd2hpY2ggaGFzIGJlZW4gYmV0dGluZyBvbiBsb3dlciBwcmljZXMuICJZb3UgaGF2ZSB0aGUgRmVkIHRlbGxpbmcgeW91IFFFIGlzIG92ZXIsIHlvdSBoYXZlIGEgYnVsbCBtYXJrZXQgaW4gUyZQIDUwMC4gT2YgY291cnNlIHRoZSBwcmljZSBjYW4gcmFsbHkgc29tZSwgd2l0aCBzbyBtYW55IHNob3J0cywgYnV0IEkgdGhpbmsgdGhlIGJyb2FkZXIgcGF0aCBpcyBxdWl0ZSBkb3duLiIgR2xvYmFsIGVjb25vbWljIGV4cGFuc2lvbiB3aWxsIGFjY2VsZXJhdGUgaW4gdGhpcyBhbmQgdGhlIGZvbGxvd2luZyB0aHJlZSBxdWFydGVycywgYWNjb3JkaW5nIHRvIGVjb25vbWlzdCBlc3RpbWF0ZXMgY29tcGlsZWQgYnkgQmxvb21iZXJnLiBCdWxsaW9uIG1heSBkcm9wIHRvICQxLDEwMCBpbiBhIHllYXIsIENyZWRpdCBTdWlzc2UgR3JvdXAgQUcgZm9yZWNhc3QgbGFzdCBtb250aC4gTm91cmllbCBSb3ViaW5pLCBwcm9mZXNzb3Igb2YgZWNvbm9taWNzIGFuZCBpbnRlcm5hdGlvbmFsIGJ1c2luZXNzIGF0IE5ldyBZb3JrIFVuaXZlcnNpdHksIGhhcyBmb3JlY2FzdCBhIGRlY2xpbmUgdG93YXJkICQxLDAwMCBieSAyMDE1LiBUaGUgNDkwLjEgdG9ucyBvZiBnb2xkIHRoYXQncyBiZWVuIHNvbGQgZnJvbSBFVFBzIHRoaXMgeWVhciBub3cgZXhjZWVkcyBhZGRpdGlvbnMgaW4gdGhlIHByZXZpb3VzIHR3byB5ZWFycy4gVGhpcyB3ZWVrJ3Mgc2FsZXMgb2YgNi40IHRvbnMgYXJlIHNldCB0byBiZSB0aGUgc21hbGxlc3Qgc2luY2UgdGhlIGVuZCBvZiBNYXJjaCwgZGF0YSBjb21waWxlZCBieSBCbG9vbWJlcmcgc2hvdy4gICAgICAgICAgICAgICAgICAgICAgICAgICBTdWdhciBTdXJ2ZXkgSW4gb3RoZXIgY29tbW9kaXRpZXMsIGVpZ2h0IG9mIDE1IHBlb3BsZSBzdXJ2ZXllZCBleHBlY3QgcmF3IHN1Z2FyIHRvIGRlY2xpbmUgbmV4dCB3ZWVrIGFuZCB0aHJlZSB3ZXJlIG5ldXRyYWwuIFRoZSBjb21tb2RpdHkgc2xpZCAxNiBwZXJjZW50IHRvIDE2LjQwIGNlbnRzIGEgcG91bmQgb24gSUNFIEZ1dHVyZXMgVS5TLiBpbiBOZXcgWW9yayB0aGlzIHllYXIuIEZvdXJ0ZWVuIG9mIDI4IHN1cnZleWVkIGFudGljaXBhdGUgbG93ZXIgY29ybiBwcmljZXMgYW5kIDEwIHNhaWQgdGhlIGdyYWluIHdpbGwgZ2Fpbiwgd2hpbGUgMTYgb2YgMjkgc2FpZCBzb3liZWFucyB3aWxsIGNsaW1iIGFuZCBuaW5lIGV4cGVjdCBsb3dlciBwcmljZXMuIFR3ZWx2ZSB0cmFkZXJzIHByZWRpY3RlZCBkZWNsaW5lcyBpbiB3aGVhdCBhbmQgZWlnaHQgd2VyZSBidWxsaXNoLiBDb3JuIGZlbGwgMjIgcGVyY2VudCB0byAkNS40NTI1IGEgYnVzaGVsIHRoaXMgeWVhciBpbiBDaGljYWdvLiBUaGUgRGVjZW1iZXIgY29udHJhY3QsIHdoaWNoIHJlZmxlY3RzIHN1cHBseSBhZnRlciB0aGUgVS5TLiBoYXJ2ZXN0LCBpcyBkb3duIDkgcGVyY2VudCB0aGlzIHllYXIuIFNveWJlYW5zIGdhaW5lZCA4LjYgcGVyY2VudCB0byAkMTUuMzEgYSBidXNoZWwgYXMgd2hlYXQgZGVjbGluZWQgOS4zIHBlcmNlbnQgdG8gJDcuMDU3NSBhIGJ1c2hlbC4gU2l4IHRyYWRlcnMgYW5kIGFuYWx5c3RzIHN1cnZleWVkIGV4cGVjdCBjb3BwZXIgdG8gcmlzZSBuZXh0IHdlZWssIGZpdmUgd2VyZSBiZWFyaXNoIGFuZCBmb3VyIHdlcmUgbmV1dHJhbC4gVGhlIG1ldGFsIGZvciBkZWxpdmVyeSBpbiB0aHJlZSBtb250aHMsIHRoZSBMb25kb24gTWV0YWwgRXhjaGFuZ2UncyBiZW5jaG1hcmsgY29udHJhY3QsIHNsaXBwZWQgNy42IHBlcmNlbnQgdG8gJDcsMzI2LjI1IGEgdG9uIHNpbmNlIHRoZSBzdGFydCBvZiBKYW51YXJ5LiBUaGUgUyZQIEdTQ0kgZ2F1Z2UgbGFnZ2VkIGJlaGluZCBlcXVpdGllcyBmb3Igc2l4IG1vbnRocywgdGhlIGxvbmdlc3Qgc3RyZXRjaCBzaW5jZSAxOTk4LiBEaXZlcmdpbmcgcHJpY2VzIGZvciByYXcgbWF0ZXJpYWxzIGFuZCBvdGhlciAicmlzayBhc3NldHMiIGlzIGEgc2lnbiB0aGF0IHRyYWRlcnMgd2lsbCBvbmNlIG1vcmUgZm9jdXMgb24gc3VwcGx5IGFuZCBkZW1hbmQsIHNhaWQgU2NvdHQgS2Vyc29uLCB0aGUgaGVhZCBvZiBhIGNvbW1vZGl0aWVzIHVuaXQgYXQgTWFuIEdyb3VwIFBsYyBpbiBMb25kb24uICAgICAgICAgICAgICAgICAgICAgICBEb21lc3RpYyBDb25zdW1wdGlvbiBNb3N0IGNvbW1vZGl0aWVzIHdpbGwgZHJvcCB0aGlzIHllYXIgYXMgQ2hpbmEncyBlY29ub215IG1vdmVzIGZyb20gYSBmb2N1cyBvbiBpbmZyYXN0cnVjdHVyZSB0byBkb21lc3RpYyBjb25zdW1wdGlvbiBhbmQgc2VydmljZXMsIENpdGlncm91cCBJbmMuIHNhaWQgaW4gYSBNYXkgMjAgcmVwb3J0LiAiSW4gdGhlIGxhc3QgZmV3IHllYXJzIGNvbW1vZGl0eSBwcmljZXMgaGF2ZSBiZWVuIGJ1b3lhbnQgbm90IGJlY2F1c2Ugb2YgZ2VuZXJhbCBnbG9iYWwgZWNvbm9taWMgcHJvc3Blcml0eSwgYnV0IG1vcmUgdG8gZG8gd2l0aCBzcGVjaWZpY2FsbHkgQ2hpbmVzZSBpbmR1c3RyaWFsaXphdGlvbiwiIHNhaWQgQ2Fyb2xlIEZlcmd1c29uLCBhbiBhbmFseXN0IGF0IFNQIEFuZ2VsIENvcnBvcmF0ZSBGaW5hbmNlIExMUCwgYSBicm9rZXIgYW5kIGFkdmlzZXIgaW4gTG9uZG9uLiAiT25jZSB0aGluZ3MgZG8gc2V0dGxlIGFuZCBwZW9wbGUgaGF2ZSBhIGNsZWFyZXIgcGljdHVyZSBvZiB3aGF04oCZcyBoYXBwZW5pbmcgb24gdGhlIGRlbWFuZCBzaWRlLCB0aGF0J3MgZ29pbmcgdG8gZ2l2ZSB5b3UgYSBtb3JlIGZ1bmRhbWVudGFsIG91dGxvb2sgZm9yIHRoZSBtYXJrZXQuIg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8X2xCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDQzMGNhNDhmY2Y3MWRlYzE=</field><field name="symbol" class="java.lang.String">rO0ABXQAA1BUWQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8dAWyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAy8KPXCj1x</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzKPXCj1wp</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAy1HrhR64U</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAsAAAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAbk2A==</field><field name="id" class="java.lang.String">rO0ABXQAEDNjYjk2ZmE5M2JlMzQ4ZDQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKFLAAAA==</field></document></documents><date>2015-05-07T12:13:38-0500</date></cacheEntry>
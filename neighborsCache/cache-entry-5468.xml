<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hBZnRlciBzb2FyaW5nIHRoZSBtb3N0IGluIHR3byB5ZWFycyBvbiBOb3YgMTggYXMgdGhlIENvbW11bmlzdCBQYXJ0eSB1bnZlaWxlZCBpdHMgYmlnZ2VzdCBwb2xpY3kgY2hhbmdlcyBzaW5jZSB0aGUgMTk5MHMgdGhlIEhhbmcgU2VuZyBDaGluYSBFbnRlcnByaXNlcyBJbmRleCBoYXMgc2luY2UgcG9zdGVkIHRoZSB3b3JsZHMgd29yc3QgZHJvcCBBbiBpbmRleCBvZiBzdG9ja3MgSlBNb3JnYW4gQ2hhc2UgIENvIHNheXMgYmVuZWZpdCBtb3N0IGZyb20gcmVmb3JtIHNhbmsgMTAgcGVyY2VudCB0aGlzIHllYXIgdGhyb3VnaCBUdWVzZGF5IEEgcGxhbiB0byBsaW5rIGJvdXJzZXMgaW4gSG9uZyBLb25nIGFuZCBTaGFuZ2hhaSB3aGljaCBmdWVsZWQgYSB0d29tb250aCByYWxseSB3aGVuIHRoZSBpZGVhIHdhcyBmaXJzdCBmbG9hdGVkIGluIDIwMDcgbGlmdGVkIHNoYXJlcyBmb3IganVzdCBvbmUgZGF5IHdoZW4gaXQgd2FzIHJlaW50cm9kdWNlZCBpbiBBcHJpbCBXaGlsZSB0aGUgTm92ZW1iZXIgcG9saWN5IHBhY2thZ2UgbGVkIEdvbGRtYW4gU2FjaHMgR3JvdXAgSW5jIHRvIHJhaXNlIGl0cyByZWNvbW1lbmRhdGlvbiBvbiBDaGluZXNlIHNoYXJlcyB0byBvdmVyd2VpZ2h0IGFuZCBzcHVycmVkIENpdGlncm91cCBJbmMgdG8gcHJlZGljdCByZXR1cm5zIG9mIGF0IGxlYXN0IDIwIHBlcmNlbnQgaW4gMjAxNCBpbnZlc3RvcnMgaGF2ZSBzaGlmdGVkIHRoZWlyIGZvY3VzIHRvIHRoZSBkZXB0aCBvZiBDaGluYXMgZWNvbm9taWMgc2xvd2Rvd24gSW5zdGVhZCBvZiBib29zdGluZyBzdG9ja3MgdGhlIGdvdmVybm1lbnRzIGVtcGhhc2lzIG9uIHJlZm9ybSBtYXkgaW1wZWRlIGdhaW5zIGFzIHBvbGljeSBtYWtlcnMgZG93bnBsYXkgdGhlIGltcG9ydGFuY2Ugb2Ygc2hvcnR0ZXJtIGdyb3d0aCBhY2NvcmRpbmcgdG8gQ0xTQSBBc2lhUGFjaWZpYyBNYXJrZXRzIFBlc3NpbWlzbSBpcyBydW5uaW5nIGhpZ2ggb24gd2hhdGV2ZXIgQ2hpbmEgZG9lcyBvciBhbm5vdW5jZXMgc2FpZCBEYXZpZCBHYXVkIHdobyBoZWxwcyBvdmVyc2VlIGFib3V0IDEyMCBiaWxsaW9uIGF0IEVkbW9uZCBkZSBSb3Roc2NoaWxkIEFzc2V0IE1hbmFnZW1lbnQgaW4gSG9uZyBLb25nIE1lYXN1cmVzIHN1Y2ggYXMgdGhlIGV4Y2hhbmdlIGxpbmsgd291bGQgY3JlYXRlIGEgbW9yZSBzdXN0YWluZWQgcmFsbHkgaW4gYW55IG90aGVyIHBhcnQgb2YgdGhlIHdvcmxkIGhlIHNhaWQgVW5sZWFzaCBQb3RlbnRpYWwgVGhlIGNvbXBldGluZyBpbmZsdWVuY2VzIG9mIHBvbGljeSBjaGFuZ2UgYW5kIHRoZSBlY29ub21pYyBzbG93ZG93biB3ZXJlIG9uIGRpc3BsYXkgdGhpcyB3ZWVrIHdpdGggdGhlIFNoYW5naGFpIENvbXBvc2l0ZSBJbmRleCByYWxseWluZyAyMSBwZXJjZW50IG9uIE1heSAxMiBhZnRlciBDaGluYXMgU3RhdGUgQ291bmNpbCBzYWlkIGl0IHdpbGwgZGVlcGVuIGNhcGl0YWwgbWFya2V0IHJlZm9ybXMgaW5jbHVkaW5nIHJlbGF4ZWQgbGltaXRzIG9uIGZvcmVpZ24gaW52ZXN0bWVudCBUaGUgZ2F1Z2Ugc2xpZCAwMSBwZXJjZW50IHllc3RlcmRheSBhcyBkYXRhIHNob3dlZCB1bmV4cGVjdGVkIGRlY2VsZXJhdGlvbnMgaW4gaW5kdXN0cmlhbCBvdXRwdXQgaW52ZXN0bWVudCBhbmQgcmV0YWlsIHNhbGVzIEV4cGVjdGF0aW9ucyB3ZXJlIGhpZ2ggYmFjayBpbiBOb3ZlbWJlciBHb2xkbWFuIFNhY2hzIHVwZ3JhZGVkIENoaW5hIHN0b2NrcyBpbiBhIE5vdiAyMSByZXBvcnQgc2F5aW5nIHRoZSBDb21tdW5pc3QgUGFydHlzIHBsZWRnZSB0byBib29zdCBwcml2YXRlIGludmVzdG1lbnQgaW4gc3RhdGVjb250cm9sbGVkIGluZHVzdHJpZXMgcHJvdGVjdCBydXJhbCBjaXRpemVucyBsYW5kIHJpZ2h0cyBhbmQgZWFzZSB0aGUgb25lY2hpbGQgcG9saWN5IGhhZCByZWludmlnb3JhdGVkIHJlZm9ybSBleHBlY3RhdGlvbnMgQ3JlZGl0IFN1aXNzZSBHcm91cCBBRyBzYWlkIGluIGEgbm90ZSBvbiB0aGUgc2FtZSBkYXkgdGhhdCBDaGluZXNlIGVxdWl0aWVzIHdlcmUgYW1vbmcgaXRzIHRocmVlIHRvcCByZWNvbW1lbmRhdGlvbnMgaW4gQXNpYSBTaGVuIE1pbmdnYW8gYW4gYW5hbHlzdCBhdCBDaXRpZ3JvdXAgc2FpZCBpbiBhIE5vdiAyNiByZXBvcnQgdGhhdCB0aGUgcmVmb3JtcyB3b3VsZCB1bmxlYXNoIHRoZSBjb3VudHJ5cyBncm93dGggcG90ZW50aWFsIENvbm5pZSBMaW5nIGEgc3Bva2Vzd29tYW4gYXQgR29sZG1hbiBTYWNocyBpbiBIb25nIEtvbmcgc2FpZCBhIE1hcmNoIHJlcG9ydCBpbiB3aGljaCBzdHJhdGVnaXN0cyByZWl0ZXJhdGVkIHRoZWlyIG92ZXJ3ZWlnaHQgcmF0aW5nIG9uIENoaW5hIHN0b2NrcyBmb3IgQXNpYSBpbnZlc3RvcnMgcmVwcmVzZW50cyB0aGUgYmFua3MgY3VycmVudCB2aWV3IENpdGlncm91cCBzcG9rZXNtYW4gSmFtZXMgR3JpZmZpdGhzIGFuZCBDcmVkaXQgU3Vpc3NlIHNwb2tlc3dvbWFuIE5vZWwgQ2hldW5nIHNhaWQgdGhlaXIgZmlybXMgYW5hbHlzdHMgd2VyZW50IGF2YWlsYWJsZSB0byBjb21tZW50IEJpZ2dlc3QgRGVjbGluZSBUaGUgSGFuZyBTZW5nIENoaW5hIEVudGVycHJpc2VzIGdhdWdlIHJvc2UgMDkgcGVyY2VudCBhdCB0aGUgbWlkZGF5IGJyZWFrIGluIEhvbmcgS29uZyB3aGlsZSB0aGUgU2hhbmdoYWkgQ29tcG9zaXRlIHNsaWQgMDIgcGVyY2VudCBUaGUgQmxvb21iZXJnIGluZGV4IG9mIHRoZSBtb3N0dHJhZGVkIENoaW5lc2Ugc2hhcmVzIGluIHRoZSBVUyBmZWxsIDAyIHBlcmNlbnQgdG8gMTAwOTEgaW4gTmV3IFlvcmsgeWVzdGVyZGF5IEFtZXJpY2FuIGRlcG9zaXRhcnkgcmVjZWlwdHMgb2YgSW50ZXJuZXQgY29tcGFueSBRaWhvbyAzNjAgVGVjaG5vbG9neSBDbyBzbHVtcGVkIDQzIHBlcmNlbnQgYWZ0ZXIganVtcGluZyA4MSBwZXJjZW50IG9uIE1heSAxMiBUaGUgSGFuZyBTZW5nIENoaW5hIEVudGVycHJpc2VzIDEzIHBlcmNlbnQgZHJvcCBzaW5jZSBOb3YgMTggdGhyb3VnaCB5ZXN0ZXJkYXkgaXMgdGhlIGJpZ2dlc3QgYW1vbmcgNzAgZ2xvYmFsIGVxdWl0eSBpbmRleGVzIHRyYWNrZWQgYnkgQmxvb21iZXJnIGFuZCBjb21wYXJlcyB3aXRoIGEgZ2FpbiBvZiBhYm91dCA0IHBlcmNlbnQgaW4gdGhlIE1TQ0kgQWxsQ291bnRyeSBXb3JsZCBJbmRleCBDaGluYXMgcmVmb3JtcyBoYXZlIGJlZW4gb3ZlcnNoYWRvd2VkIGJ5IHBvb3IgZWNvbm9taWMgZGF0YSB0aGUgbmF0aW9ucyBwcm9wZXJ0eW1hcmtldCBzbG93ZG93biBhbmQgYSBkZXByZWNpYXRpbmcgeXVhbiBzYWlkIFBhdHJpY2sgSG8gaGVhZCBvZiBjaGllZiBpbnZlc3RtZW50IG9mZmljZSByZXNlYXJjaCBpbiBIb25nIEtvbmcgYXQgVUJTIFdlYWx0aCBNYW5hZ2VtZW50IHdoaWNoIG1hbmFnZWQgYWJvdXQgMjAzIHRyaWxsaW9uIGdsb2JhbGx5IGFzIG9mIHRoZSBmaXJzdCBxdWFydGVyIEVjb25vbWljIFNsb3dkb3duIEZhY3RvcnkgcHJvZHVjdGlvbiByb3NlIDg3IHBlcmNlbnQgaW4gQXByaWwgZnJvbSBhIHllYXIgZWFybGllciBjb21wYXJlZCB3aXRoIHRoZSA4OSBwZXJjZW50IG1lZGlhbiBlc3RpbWF0ZSBvZiBhbmFseXN0cyBzdXJ2ZXllZCBieSBCbG9vbWJlcmcgTmV3cyBOZXcgYnVpbGRpbmcgY29uc3RydWN0aW9uIGZlbGwgMjIgcGVyY2VudCBpbiB0aGUgZmlyc3QgZm91ciBtb250aHMgb2YgdGhlIHllYXIgd2hpbGUgaG9tZSBzYWxlcyBzbGlkIDE4IHBlcmNlbnQgaW4gQXByaWwgVGhlIHl1YW4gaGFzIHJldHJlYXRlZCAyOCBwZXJjZW50IHZlcnN1cyB0aGUgZG9sbGFyIHRoaXMgeWVhciBhbmQgdG91Y2hlZCBpdHMgd2Vha2VzdCBsZXZlbCBzaW5jZSBPY3RvYmVyIDIwMTIgbGFzdCBtb250aCBUaGUgbWFya2V0IGlzIGxvb2tpbmcgYXQgdGhlIGRvd25zaWRlIHJpc2sgdG8gdGhlIGVjb25vbXkgc2FpZCBIbyB3aG8gaGFzIGFuIG92ZXJ3ZWlnaHQgcmVjb21tZW5kYXRpb24gb24gQ2hpbmVzZSBzdG9ja3MgYWZ0ZXIgYWR2aXNpbmcgaW52ZXN0b3JzIHRvIGJvb3N0IGhvbGRpbmdzIG9uIE5vdiAyMiBUaGVyZSB3aWxsIGJlIG1vcmUgdm9sYXRpbGl0eSBUaGUgZ292ZXJubWVudHMgcGxhbiB0byBvcGVuIHVwIHN0YXRlY29udHJvbGxlZCBpbmR1c3RyaWVzIGhhcyBnYWluZWQgc29tZSB0cmFjdGlvbiB3aXRoIGludmVzdG9ycyBQZXRyb0NoaW5hIENvcyBIb25nIEtvbmdsaXN0ZWQgc2hhcmVzIGhhdmUgcmFsbGllZCAyNiBwZXJjZW50IGZyb20gYW4gYWxtb3N0IGZpdmV5ZWFyIGxvdyBpbiBGZWJydWFyeSB0aHJvdWdoIHllc3RlcmRheSBhcyBDaGFpcm1hbiBaaG91IEppcGluZyBzYWlkIHRoZSBjb21wYW55IG1heSBhbGxvdyBwcml2YXRlIGludmVzdG1lbnQgaW4gcGlwZWxpbmVzIGFuZCBnYXMgZXhwbG9yYXRpb24gQ2hpbmEgUGV0cm9sZXVtICBDaGVtaWNhbCBDb3JwIHRoZSByZWZpbmVyIGtub3duIGFzIFNpbm9wZWMgc3VyZ2VkIDE3IHBlcmNlbnQgc2luY2UgYW5ub3VuY2luZyBpdHMgaW50ZW50aW9uIHRvIHNlbGwgcGFydCBvZiBpdHMgb2lscmV0YWlsIHVuaXQgb24gRmViIDE5IERldGVycmVkIEludmVzdG9ycyBBIGxhY2sgb2YgZGV0YWlscyBvbiBzb21lIHJlZm9ybSBtZWFzdXJlcyBzdWNoIGFzIHRoZSBwbGFuIHRvIGFsbG93IGNyb3NzYm9yZGVyIHN0b2NrIHRyYWRpbmcgdGhyb3VnaCB0aGUgU2hhbmdoYWkgYW5kIEhvbmcgS29uZyBleGNoYW5nZXMgaGFzIGRldGVycmVkIHNvbWUgaW52ZXN0b3JzIGFjY29yZGluZyB0byBFZG1vbmQgZGUgUm90aHNjaGlsZHMgR2F1ZCBXaGlsZSBIb25nIEtvbmdzIEhhbmcgU2VuZyBJbmRleCByb3NlIDE1IHBlcmNlbnQgb24gdGhlIGRheSBvZiB0aGUgYW5ub3VuY2VtZW50IGl0IGhhcyBzaW5jZSBmYWxsZW4gMzYgcGVyY2VudCB0aHJvdWdoIHllc3RlcmRheSBUaGUgU2hhbmdoYWkgQ29tcG9zaXRlIGdhaW5lZCAxNCBwZXJjZW50IGJlZm9yZSBkZWNsaW5pbmcgMzkgcGVyY2VudCBSZWd1bGF0b3JzIHNhaWQgaXQgbWF5IHRha2Ugc2l4IG1vbnRocyB0byBmaW5hbGl6ZSB0aGUgbGluayBPdmVyc2VhcyBpbnN0aXR1dGlvbnMgYW5kIHQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0wMy0yN1QwMDowMDowMFogVE8gMjAxMy0xMi0wM1Q1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDMzNjc=</field><field name="title" class="java.lang.String">rO0ABXQAPEJpZyBDaGluYSBCYW5rcyBUcmlwbGUgRGVidCBXcml0ZS1PZmZzIHRvIEJyYWNlIGZvciBEZWZhdWx0cw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUHjrwSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDhhNTM5ODZlNmM2ZmI4YjY=</field><field name="symbol" class="java.lang.String">rO0ABXQABExPQU4=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUHo1WCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD//1wo9cKPX</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD//1wo9cKPX</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD//rhR64Ueu</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD//rhR64Ueu</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/9HrhR64Uf</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAJYA==</field><field name="id" class="java.lang.String">rO0ABXQAEDFlMTNhMTE1ZDNhZmEwNTI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJj3AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDg3MDI=</field><field name="title" class="java.lang.String">rO0ABXQAM0dvbGQgQnVsbHMgUmV0cmVhdCBhcyBQcmljZXMgRHJvcCB0byBGb3VyLU1vbnRoIExvdw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUK3Cq8AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGRmNDQ1MGM3N2Y1NGE2NTc=</field><field name="symbol" class="java.lang.String">rO0ABXQAA05PVg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUK8MQsAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUiuFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUqZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUQzMzMzMz</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUdmZmZmZm</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBR49cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAACEpdA==</field><field name="id" class="java.lang.String">rO0ABXQAEGZmNzhiYTVlYjFiYmM4MGM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mG5hAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDg3MTg=</field><field name="title" class="java.lang.String">rO0ABXQAKkdsb2JhbCBTdG9ja3MgQ2hhbGsgVXAgQmVzdCBSdW4gU2luY2UgMjAwOQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKsvfcAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDU5NjVkYTg2NWRhZDQzOGQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAA05PVg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKx5FMAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUb1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUoeuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUQUeuFHrh</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUbCj1wo9c</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBRzCj1wo9c</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAACqmwA==</field><field name="id" class="java.lang.String">rO0ABXQAEGNiOTU3OTQwMDA1ZGE3YWM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mIrhAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDcxNzQ=</field><field name="title" class="java.lang.String">rO0ABXQAPEVtZXJnaW5nIFN0b2NrcyBGYWxsIHRvIDUtTW9udGggTG93IGFzIEFwcGxlIFN1cHBsaWVycyBTbHVtcA==</field><field name="content" class="java.lang.String">rO0ABXQOJUVtZXJnaW5nLW1hcmtldCBzdG9ja3MgZHJvcHBlZCB0byB0aGUgbG93ZXN0IGxldmVsIGluIGFsbW9zdCBmaXZlIG1vbnRocyBUaHVyc2RheSBhcyBBcHBsZSBJbmMuIHN1cHBsaWVycyByZXRyZWF0ZWQgYW5kIGNvbmNlcm4gZ3JldyB0aGF0IHRoZSBnbG9iYWwgZWNvbm9teSBpcyBmYWx0ZXJpbmcuIExHIERpc3BsYXkgQ28uIHNsaWQgdGhlIG1vc3QgaW4gZm91ciBtb250aHMgaW4gU2VvdWwgYWZ0ZXIgYXVkaW8tY2hpcG1ha2VyIENpcnJ1cyBMb2dpYyBJbmMuIHJlcG9ydGVkIGFuIGludmVudG9yeSBnbHV0IHRoYXQgc3VnZ2VzdHMgc2xvd2luZyBpUGhvbmUgc2FsZXMuIEppYW5neGkgQ29wcGVyIENvLiBzYW5rIDIuNSBwZXJjZW50IGluIEhvbmcgS29uZywgd2hpbGUgUnVzc2lh4oCZcyBNaWNleCBJbmRleCByZXZlcnNlZCBlYXJsaWVyIGdhaW5zLCBjbG9zaW5nIGF0IHRoZSBsb3dlc3QgbGV2ZWwgc2luY2UgSnVuZSAyNS4gQnJhemls4oCZcyBCb3Zlc3BhIGluZGV4IHJlYm91bmRlZCBmcm9tIGEgbmluZS1tb250aCBsb3csIGFzIEdvbCBMaW5oYXMgQWVyZWFzIEludGVsaWdlbnRlcyBTQSBqdW1wZWQgMTEgcGVyY2VudC4gVGhlIE1TQ0kgRW1lcmdpbmcgTWFya2V0cyBJbmRleCBmZWxsIDAuNCBwZXJjZW50IHRvIDk5Ny4zMyBpbiBOZXcgWW9yaywgdGhlIGxvd2VzdCBsZXZlbCBzaW5jZSBOb3YuIDI4LiBTdG9ja3Mgam9pbmVkIGxvc3NlcyBpbiB0aGUgVS5TLiBlcXVpdHkgbWFya2V0IGFzIGRhdGEgb24gbGVhZGluZyBlY29ub21pYyBpbmRpY2F0b3JzIGFuZCBQaGlsYWRlbHBoaWEtYXJlYSBtYW51ZmFjdHVyaW5nIHRyYWlsZWQgZXN0aW1hdGVzLiBFYXJsaWVyIHRoaXMgd2VlaywgdGhlIEludGVybmF0aW9uYWwgTW9uZXRhcnkgRnVuZCB0cmltbWVkIGl0cyBnbG9iYWwgZ3Jvd3RoIGZvcmVjYXN0LiDigJxJdOKAmXMgZ2xvYmFsLCB2ZXJ5IG11Y2ggbGlrZSBhIGNvbGQgdGhhdCBzZWVtcyB0byBiZSBnb2luZyBhcm91bmQs4oCdIExhd3JlbmNlIENyZWF0dXJhLCBhIFJvY2hlc3RlciwgTmV3IFlvcmstYmFzZWQgZnVuZCBtYW5hZ2VyIGF0IEZlZGVyYXRlZCBJbnZlc3RvcnMgSW5jLiwgd2hpY2ggb3ZlcnNlZXMgYWJvdXQgJDM4MCBiaWxsaW9uLCBzYWlkIGJ5IHBob25lLiDigJxFYXJsaWVyIGluIHRoZSB5ZWFyLCB0aGUgbWFjcm8gZGF0YSB3YXMgb24gYSBtb3JlIHJlbGlhYmx5IHVwd2FyZCB0cmFqZWN0b3J5LiBOb3cgdGhlcmUgYXBwZWFycyB0byBiZSBhIG1vZGVyYXRpb24gZ29pbmcgb24u4oCdIEEgZ2F1Z2Ugb2YgdGVjaG5vbG9neSBzaGFyZXMgaW4gdGhlIE1TQ0kgRW1lcmdpbmcgTWFya2V0cyBJbmRleCBmZWxsIDEuNCBwZXJjZW50LCB0aGUgbW9zdCBhbW9uZyAxMCBncm91cHMuIFRoZSBlbWVyZ2luZy0gbWFya2V0cyBpbmRleCBoYXMgbG9zdCA1LjUgcGVyY2VudCB0aGlzIHllYXIsIHRyYWlsaW5nIGEgNS42IHBlcmNlbnQgaW5jcmVhc2UgaW4gdGhlIE1TQ0kgV29ybGQgSW5kZXggb2YgZGV2ZWxvcGVkLWNvdW50cnkgc3RvY2tzLiBUaGUgZW1lcmdpbmctbWFya2V0cyBtZWFzdXJlIHRyYWRlcyBhdCAxMC41IHRpbWVzIDEyLSBtb250aCBwcm9qZWN0ZWQgcHJvZml0LCBjb21wYXJlZCB3aXRoIHRoZSBNU0NJIFdvcmxk4oCZcyAxMy43IHZhbHVhdGlvbiwgYWNjb3JkaW5nIHRvIGRhdGEgY29tcGlsZWQgYnkgQmxvb21iZXJnLiAgICAgICAgICAgICAgICAgICAgICAgICAgIEVtZXJnaW5nIEVURiBUaGUgaVNoYXJlcyBNU0NJIEVtZXJnaW5nIE1hcmtldHMgSW5kZXggZXhjaGFuZ2UtdHJhZGVkIGZ1bmQgd2FzIGxpdHRsZSBjaGFuZ2VkIGF0ICQ0MS4wNS4gVGhlIENoaWNhZ28gQm9hcmQgT3B0aW9ucyBFeGNoYW5nZSBFbWVyZ2luZyBNYXJrZXRzIEVURiBWb2xhdGlsaXR5IEluZGV4LCBhIG1lYXN1cmUgb2Ygb3B0aW9ucyBwcmljZXMgb24gdGhlIGZ1bmQgYW5kIGV4cGVjdGF0aW9ucyBvZiBwcmljZSBzd2luZ3MsIGp1bXBlZCAzLjMgcGVyY2VudCB0byAyMy4yMC4gQnJhemls4oCZcyBCb3Zlc3BhIHJvc2UgMC41IHBlcmNlbnQgYW5kIHN3YXAgcmF0ZXMgdHVtYmxlZCBhZnRlciB0aGUgY2VudHJhbCBiYW5rIHJhaXNlZCBiZW5jaG1hcmsgYm9ycm93aW5nIGNvc3RzIHllc3RlcmRheSBsZXNzIHRoYW4gc29tZSBhbmFseXN0cyBoYWQgZm9yZWNhc3QsIHNwdXJyaW5nIHNwZWN1bGF0aW9uIHRoYXQgbW9uZXRhcnkgdGlnaHRlbmluZyB3aWxsIGJlIGxpbWl0ZWQuIEdvbCBzdXJnZWQgdGhlIG1vc3Qgc2luY2UgRGVjLiAyNiBvbiBzcGVjdWxhdGlvbiBhIHJlZHVjdGlvbiBpbiBmdWVsIHRheGVzIHdpbGwgaGVscCByZWR1Y2UgY29zdHMuIE1leGljb+KAmXMgSVBDIEluZGV4IGZlbGwgMC40IHBlcmNlbnQgdG8gYSBvbmUtbW9udGggbG93LiBSdXNzaWHigJlzIE1pY2V4IG1lYXN1cmUgY2xvc2VkIGxpdHRsZSBjaGFuZ2VkIGFmdGVyIGNsaW1iaW5nIGFzIG11Y2ggYXMgMS4xIHBlcmNlbnQgZWFybGllciBpbiB0aGUgZGF5LiBGZXJ0aWxpemVyIHByb2R1Y2VyIE9BTyBQaG9zQWdybyBqdW1wZWQgMi44IHBlcmNlbnQsIGVuZGluZyBhIGVpZ2h0LWRheSBzbGlkZSwgZm9sbG93aW5nIGFuIG9mZmVyIHRvIGJ1eSBzaGFyZXMgb2YgT0FPIEFwYXRpdC4gICAgICAgICAgICAgICAgICAgICAgICAgIFR1cmtleSwgUG9sYW5kIEJlbmNobWFyayBnYXVnZXMgaW4gVHVya2V5LCBQb2xhbmQgYW5kIEh1bmdhcnkgcmV0cmVhdGVkLiBUaGUgQ3plY2ggUmVwdWJsaWPigJlzIFBYIGluZGV4IHNsaWQgZm9yIGEgZmlmdGggZGF5IHRvIHRoZSBsb3dlc3QgbGV2ZWwgc2luY2UgQXVnLiAxNC4gU291dGggS29yZWHigJlzIEtvc3BpIEluZGV4IGRlY2xpbmVkIDEuMiBwZXJjZW50IHRvIGFuIGFsbW9zdCBmaXZlLW1vbnRoIGxvdyBhcyBmb3JlaWduIGZ1bmRzIHNvbGQgJDMuOCBiaWxsaW9uIG1vcmUgZXF1aXRpZXMgdGhhbiB0aGV5IGJvdWdodCB0aGlzIHllYXIgdGhyb3VnaCBXZWRuZXNkYXksIGV4Y2hhbmdlIGRhdGEgc2hvdy4gTEcgRGlzcGxheSwgd2hpY2ggc3VwcGxpZXMgdG91Y2ggc2NyZWVucyBmb3IgQXBwbGXigJlzIGlQaG9uZSBhbmQgaVBhZCwgZHJvcHBlZCA0LjggcGVyY2VudC4gSG9uIEhhaSBQcmVjaXNpb24gSW5kdXN0cnkgQ28uLCB3aGljaCBhc3NlbWJsZXMgQXBwbGXigJlzIGlQaG9uZSwgZmVsbCAxLjMgcGVyY2VudCBpbiBUYWlwZWkgdG8gdGhlIGxvd2VzdCBsZXZlbCBzaW5jZSBBdWcuIDMuIFRoZSBIYW5nIFNlbmcgQ2hpbmEgRW50ZXJwcmlzZXMgSW5kZXggb2YgbWFpbmxhbmQgY29tcGFuaWVzIGxpc3RlZCBpbiBIb25nIEtvbmcgc2xpZCAwLjMgcGVyY2VudCB3aGlsZSB0aGUgU2hhbmdoYWkgQ29tcG9zaXRlIEluZGV4IHJvc2UgMC4yIHBlcmNlbnQuIEluZGlh4oCZcyBTJlAgQlNFIFNlbnNleCBnYWluZWQgMS41IHBlcmNlbnQuIEppYW5neGkgQ29wcGVyIGNhcHBlZCBpdHMgc2l4dGggZGF5IG9mIGRlY2xpbmVzLiBUaGUgZXh0cmEgeWllbGQgaW52ZXN0b3JzIGRlbWFuZCB0byBvd24gZW1lcmdpbmctbWFya2V0IGRlYnQgb3ZlciBVLlMuIFRyZWFzdXJpZXMgd2FzIHVuY2hhbmdlZCBhdCAyOTcgYmFzaXMgcG9pbnRzLCBhY2NvcmRpbmcgdG8gSlBNb3JnYW4gQ2hhc2UgJiBDby7igJlzIEVNQkkgR2xvYmFsIEluZGV4Lg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4bg3SAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGI0MTZiYjE5N2M3Yjg4ZTA=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0dPTA==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4gqdCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAZeuFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAamZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAZAAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAahR64UeuF</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAahR64UeuF</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAC7V2A==</field><field name="id" class="java.lang.String">rO0ABXQAEGNhNzBlNTYwMzRkMjNlZDk=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mLU/AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDMyMzE=</field><field name="title" class="java.lang.String">rO0ABXQAQ0phcGFuJ3MgU3dlZXQgU3BvdDogU3RvY2sgUHJpY2VzIFJpc2UsIFByb2ZpdCBGb3JlY2FzdHMgUmlzZSBGYXN0ZXI=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUD78NiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGI2MDAzZDA4ZmZkMTNmZTU=</field><field name="symbol" class="java.lang.String">rO0ABXQAA01UVQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEBFzSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAZAAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAZXCj1wo9c</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAY9cKPXCj2</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAZXCj1wo9c</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAZXCj1wo9c</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAABBL4A==</field><field name="id" class="java.lang.String">rO0ABXQAEDc4MTY1NWQ3YTllZmFiYjM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFDjAAAA==</field></document></documents><date>2015-05-07T12:08:03-0500</date></cacheEntry>
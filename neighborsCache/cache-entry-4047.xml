<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0DQlUaGUgVVMgYnVsbCBtYXJrZXQga2VlcHMgb24gdGlja2luZyBTaGFyZXMgaW4gdGhlIFN0YW5kYXJkICBQb29ycyA1MDAgSW5kZXggaGF2ZSByYWxsaWVkIGJhY2sgdG8gYW4gYWxsdGltZSBoaWdoIHJlY291cGluZyBsb3NzZXMgaW4gYSAxMGRheSBhZHZhbmNlIHRoYXQgYnJvdWdodCB0aGUgaW5kZXggd2l0aGluIDA1IHBlcmNlbnQgb2YgMjAwMCBUaGUgcmVib3VuZCB3YXMgdGhlIHNpeHRoIGluIHR3byB5ZWFycyB3aGVyZSBlcXVpdGllcyBuZWVkZWQgbGVzcyB0aGFuIHR3byB3ZWVrcyB0byByZWNvdmVyIGFmdGVyIGEgZHJvcCBvZiAyIHBlcmNlbnQgb3IgbW9yZSBhY2NvcmRpbmcgdG8gZGF0YSBjb21waWxlZCBieSBTdW5kaWFsIENhcGl0YWwgUmVzZWFyY2ggSW5jIFRoZSBWc2hhcGVkIHBhdHRlcm4gb2YgbG9zc2VzIGZvbGxvd2VkIGJ5IGdhaW5zIGlzIHJlY3VycmluZyBtb3JlIG9mdGVuIHRoYW4gYW55IHRpbWUgaW4gYWxtb3N0IGVpZ2h0IGRlY2FkZXMgU3VuZGlhbCBkYXRhIHNob3cgSW52ZXN0b3JzIGFyZSBxdWljayB0byBib3RoIHNlbGwgYW5kIGJ1eSBpbiBhIG1hcmtldCB0aGF0IGhhcyBnb25lIGFsbW9zdCB0aHJlZSB5ZWFycyB3aXRob3V0IGEgcmV0cmVhdCBvZiAxMCBwZXJjZW50IGFzIHRoZSBzdHJlbmd0aGVuaW5nIFVTIGVjb25vbXkgcHV0cyBhIGZsb29yIHVuZGVyIGRlY2xpbmVzIHNwdXJyZWQgYnkgY3Jpc2VzIGZyb20gQXJnZW50aW5hIHRvIFVrcmFpbmUgSXRzIGxpa2UgdHJ5aW5nIHRvIHB1c2ggYSBiZWFjaCBiYWxsIHVuZGVyd2F0ZXIgYW5kIGhhdmluZyBpdCBwb3AgcmlnaHQgYmFjayB1cCBKb2huIE1hbmxleSB3aG8gaGVscHMgb3ZlcnNlZSBhYm91dCAyMzMgYmlsbGlvbiBhcyBjaGllZiBlcXVpdHkgc3RyYXRlZ2lzdCBmb3IgV2VsbHMgRmFyZ28gRnVuZHMgTWFuYWdlbWVudCBpbiBOZXcgWW9yayBzYWlkIFRoYXRzIHdoYXRzIGJlZW4gaGFwcGVuaW5nIHRvIGVxdWl0eSBtYXJrZXRzIGFzIHRoZSBGZWRlcmFsIFJlc2VydmUgaGFzIGJlZW4gYWNjb21tb2RhdGl2ZSBBbG1vc3QgOTAwIGJpbGxpb24gaGFzIGJlZW4gcmVzdG9yZWQgdG8gQW1lcmljYW4gZXF1aXR5IHZhbHVlcyBzaW5jZSBlYXJseSBBdWd1c3QgYW5kIHRoZSBTUCA1MDAgaXMgaGVhZGluZyBmb3IgYSB0aGlyZCBzdHJhaWdodCB3ZWVrbHkgYWR2YW5jZSBib2xzdGVyZWQgYnkgZWFzaW5nIHRlbnNpb25zIGluIFVrcmFpbmUgYW5kIHNwZWN1bGF0aW9uIHRoYXQgdGhlIEZlZCB3aWxsIGNvbnRpbnVlIHRvIHN1cHBvcnQgdGhlIGVjb25vbWljIGV4cGFuc2lvbiBSZWNvcmQgSGlnaCBTdG9ja3MgcmFsbGllZCBhcyBkYXRhIHNob3dlZCBmZXdlciBBbWVyaWNhbnMgdGhhbiBmb3JlY2FzdCBhcHBsaWVkIGZvciB1bmVtcGxveW1lbnQgYmVuZWZpdHMgbGFzdCB3ZWVrIGFuZCBwdXJjaGFzZXMgb2YgcHJldmlvdXNseSBvd25lZCBVUyBob21lcyB1bmV4cGVjdGVkbHkgcm9zZSBpbiBKdWx5IFRoZSBnYWlucyBhcmUgY29taW5nIGFmdGVyIHRoZSBTUCA1MDAgc3RhcnRlZCBBdWd1c3Qgd2l0aCB0aGUgd29yc3Qgd2Vla2x5IGRlY2xpbmUgaW4gbW9yZSB0aGFuIHR3byB5ZWFycyBUaGUgaW5kZXggdHVtYmxlZCAyNyBwZXJjZW50IG92ZXIgdGhlIGZpdmUgZGF5cyB0aHJvdWdoIEF1ZyAxIGFzIEFyZ2VudGluYSBkZWZhdWx0ZWQgb24gZGVidCBQcmVzaWRlbnQgQmFyYWNrIE9iYW1hIGFubm91bmNlZCBuZXcgc2FuY3Rpb25zIGFnYWluc3QgUnVzc2lhIGFuZCBVUyBncm9zcyBkb21lc3RpYyBwcm9kdWN0IGV4cGFuZGluZyBhdCA0IHBlcmNlbnQgc3B1cnJlZCBjb25jZXJuIHRoYXQgdGhlIEZlZGVyYWwgUmVzZXJ2ZSBtYXkgbGlmdCBpbnRlcmVzdCByYXRlcyBzb29uZXIgdGhhbiBhbnRpY2lwYXRlZCBUaGUgaW5kZXggcmVhY2hlZCBhIHR3b21vbnRoIGxvdyBvbiBBdWcgNyBhbmQgaGFzIHNpbmNlIHJpc2VuIGluIGFsbCBidXQgdHdvIGRheXMgVGhlcmUgaXMgYSBncmVhdCBoZXNpdGF0aW9uIHRvIGJ1eSBhdCBuZXcgaGlnaHMgYW5kIHRoZW4gZmVlbCBzdHVwaWQgd2hlbiB0aGUgaW5ldml0YWJsZSBjb3JyZWN0aW9uIGhpdHMgSmFzb24gR29lcGZlcnQgcHJlc2lkZW50IG9mIFN1bmRpYWwgaW4gQmxhaW5lIE1pbm5lc290YSB3cm90ZSBpbiBhbiBlbWFpbCBTbyBvbmNlIHdldmUgc2VlbiBhIGJpdCBvZiBhIGRpcCB3ZSBjYW4gcmF0aW9uYWxpemUgdG8gb3Vyc2VsdmVzIHRoYXQgV2VsbCBhdCBsZWFzdCBJIGRpZG50IGJ1eSBhdCB0aGUgaGlnaCBldmVuIGlmIHdlIGRvIGRlY2xpbmUgZnVydGhlciBUaGF0IGZlZWRzIG9uIGl0c2VsZiBhbmQgcHJldHR5IHNvb24gd2VyZSByaWdodCBiYWNrIGF0IG5ldyBoaWdocyBhZ2FpbiBWU2hhcGVkIE1vdmUgR29lcGZlcnQgZm91bmQgdGhhdCB0aGUgb25seSB0aW1lIHdoZW4gVnNoYXBlZCByZWJvdW5kcyBoYXBwZW5lZCBtb3JlIG9mdGVuIHRoYW4gbm93IHdhcyBkdXJpbmcgdGhlIHR3byB5ZWFycyB0aHJvdWdoIERlY2VtYmVyIDE5MzYgQXQgdGhhdCB0aW1lIHNldmVuIG9jY3VycmVkIEhlIGRlZmluZXMgdGhlIG1vdmUgYXMgYSBkcm9wIG9mIGF0IGxlYXN0IDIgcGVyY2VudCBvdmVyIGZpdmUgdG8gMTAgZGF5cyBhbmQgYSBzdWJzZXF1ZW50IGdhaW4gb2YgYSBzaW1pbGFyIG1hZ25pdHVkZSBvdmVyIGEgY29tcGFyYWJsZSBwZXJpb2QgRHVyaW5nIHRoZSBwcm9jZXNzIHByaWNlcyBoYXZlIHRvIHNldCBhdCBsZWFzdCBhIG9uZW1vbnRoIGxvdyBhbmQgbm90IGZhbGwgYmFjayB3aXRoaW4gMDUgcGVyY2VudCBvZiB0aGUgYm90dG9tIG9uIGEgY2xvc2luZyBiYXNpcyBUaGUgVVMgc3RvY2sgbWFya2V0IGhhcyBleHBlcmllbmNlZCBzaW1pbGFyIHBhdHRlcm5zIGluIHRoZSBmaXJzdCB0d28gbW9udGhzIG9mIDIwMTQgVGhlIFNQIDUwMCBzYW5rIDIxIHBlcmNlbnQgb24gSmFuIDI0IGFuZCAyMyBwZXJjZW50IG9uIEZlYiAzIGJlZm9yZSBib3R0b21pbmcgT3ZlciB0aGUgbmV4dCBzaXggZGF5cyB0aGUgaW5kZXggcGFyZWQgbW9zdCBvZiB0aGUgbG9zc2VzIGp1bXBpbmcgNDUgcGVyY2VudCBTb21lIG9mIHRoZSBkb3dudHVybnMgaGFkIHRvIGRvIHdpdGggZ2VvcG9saXRpY2FsIGNvbmNlcm5zIGFuZCBpbiBzb21lIGNhc2VzIHRob3NlIGhhdmUgYWJhdGVkIGEgYml0IGFuZCB0aGUgbWFya2V0IGhhcyBib3VuY2VkIGJhY2sgSm9obiBDYXJleSBhIEJvc3RvbmJhc2VkIGZ1bmQgbWFuYWdlciBhdCBQaW9uZWVyIEludmVzdG1lbnQgTWFuYWdlbWVudCBJbmMgd2hpY2ggb3ZlcnNlZXMgYWJvdXQgMjIwIGJpbGxpb24gc2FpZCBUaGUgb3V0bG9vayBmb3IgdGhlIHJlc3Qgb2YgdGhlIHllYXIgaXMgcHJldHR5IHBvc2l0aXZldAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAdWFydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2Usc2NvcmUsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEwLTA2LTExVDAwOjAwOjAwWiBUTyAyMDEzLTA3LTMxVDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDkzMjA=</field><field name="title" class="java.lang.String">rO0ABXQAQVMmUCA1MDAgVmFsdWF0aW9uIFNsaXBzIDE5JSBCZWxvdyAyMDExIGFzIFNoYW91bCBBZHZpc2VzIFBhdGllbmNl</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATe13SyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGQxODhlMWU2ZTBjYzhhNzc=</field><field name="symbol" class="java.lang.String">rO0ABXQAAk1O</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATe7A4iAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArFHrhR64U</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArQo9cKPXD</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAqij1wo9cK</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAq64UeuFHs</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAnszMzMzMz</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAsiA==</field><field name="id" class="java.lang.String">rO0ABXQAEDE2YTZmMTI1NTk1Y2M3MDc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJLtAAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPynzNg==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDIzNTk=</field><field name="title" class="java.lang.String">rO0ABXQAOERpc2NvdW50IEJyb2tlcnMnIFNoYXJlcyBTdXJnZSBhcyBTbWFsbCBJbnZlc3RvcnMgUmV0dXJu</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8nTiSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDcyMzY1MDU5NjlhODJlZmU=</field><field name="symbol" class="java.lang.String">rO0ABXQABEFNVEQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8sdICAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4LhR64Ueu</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4MzMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3z1wo9cKP</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA38zMzMzMz</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA249cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAE4sgA==</field><field name="id" class="java.lang.String">rO0ABXQAEDdlNjk4YzYyNDVjODQ0YTE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEStAAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPx0+vg==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExNTQ5</field><field name="title" class="java.lang.String">rO0ABXQAP1dhbGwgU3RyZWV0J3MgUmFsbHkgTWF0Y2hlcyAxOTkwcyDigJMgd2l0aCBWYWx1YXRpb25zIDI4JSBMb3dlcg==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6XHBSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGNlODRhMmIwNTMyMGI2MDQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAAk1O</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6cQnCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAysKPXCj1x</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzZmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAysKPXCj1x</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzT1wo9cKP</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxz1wo9cKP</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAGUTA==</field><field name="id" class="java.lang.String">rO0ABXQAEDJkZjgwZDJjYzNiZGY3MTA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFC9AAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPxqe9A==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExOTI0</field><field name="title" class="java.lang.String">rO0ABXQAQFMmUCA1MDAgaW4gQ2hlYXBlc3QgQnVsbCBNYXJrZXQgU2luY2UgUmVhZ2FuIFRyYWRlIDI2JSBGcm9tIFBlYWs=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATsXQHsAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGRlYzg3ZWRjMDk2NzRhNTI=</field><field name="symbol" class="java.lang.String">rO0ABXQAA05PVg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATscZtcAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSNwo9cKPX</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSOPXCj1wp</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBRy4UeuFHs</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBR6FHrhR64</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBO4AAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAD2dDA==</field><field name="id" class="java.lang.String">rO0ABXQAEDgwNmIwZTNjNTBiMWExYjY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mIgxAAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPxOb9g==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUzNTk=</field><field name="title" class="java.lang.String">rO0ABXQAP1MmUCA1MDAgQmVhdGluZyBHb2xkIE1vc3QgU2luY2UgMTk5OSBhcyBFYXJuaW5ncyBFc3RpbWF0ZXMgUmlzZQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATZxbIiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGJiN2EzMDQ2ZDZmOWVjZWM=</field><field name="symbol" class="java.lang.String">rO0ABXQAAVA=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATZ2kuSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkvXCj1wo9</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlMzMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAklHrhR64U</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAk8KPXCj1x</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAk8KPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAC1pZA==</field><field name="id" class="java.lang.String">rO0ABXQAEDBjZmU2YzNkZDk1MDllMmU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMl3AAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPxNOZw==</field></document></documents><date>2015-05-07T07:55:34-0500</date></cacheEntry>
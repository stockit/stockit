<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0CbhVU0cgQ29ycCB0aGUgd2FsbGJvYXJkIG1ha2VyIHdob3NlIGxhcmdlc3Qgc2hhcmVob2xkZXIgaXMgV2FycmVuIEJ1ZmZldHRzIEJlcmtzaGlyZSBIYXRoYXdheSBJbmMgcm9zZSB0byBpdHMgaGlnaGVzdCBsZXZlbCBzaW5jZSAyMDA4IGFmdGVyIHByb2ZpdCBiZWF0IGFuYWx5c3RzIGVzdGltYXRlcyBhbWlkIGEgaG9tZWJ1aWxkaW5nIHJlYm91bmQgQnVmZmV0dHMgbW92ZSB0byBleGNoYW5nZSBjb252ZXJ0aWJsZSBib25kcyBmb3Igc2hhcmVzIGFubm91bmNlZCBpbiBKYW51YXJ5IHBhaWQgb2ZmIHdpdGggZm91cnRocXVhcnRlciBlYXJuaW5ncyBleGNsdWRpbmcgc29tZSBjb3N0cyBvZiAxOSBjZW50cyBwZXIgc2hhcmUgdG9wcGluZyB0aGUgMTBjZW50IGF2ZXJhZ2Ugb2YgMTcgYW5hbHlzdHMgc3VydmV5ZWQgYnkgQmxvb21iZXJnIFNhbGVzIGp1bXBlZCAxNiBwZXJjZW50IHRvIDkxNSBtaWxsaW9uIGV4Y2VlZGluZyBhIDkwOSBtaWxsaW9uIHByb2plY3Rpb24gVVNHIHNob3VsZCBjb250aW51ZSB0byBiZW5lZml0IGZyb20gYm90aCB0aGUgcmVhbGl6YXRpb24gb2YgZmF2b3JhYmxlIHdhbGxib2FyZCBwcmljZXMgYW5kIGhpZ2hlciB2b2x1bWVzIGF0dHJpYnV0YWJsZSB0byBpbmNyZWFzZWQgbmV3IHJlc2lkZW50aWFsIGNvbnN0cnVjdGlvbiBhY3Rpdml0eSBSb2JlcnQgV2V0ZW5oYWxsIGFuIFJCQyBDYXBpdGFsIE1hcmtldHMgTExDIGFuYWx5c3QgaW4gTmV3IFlvcmsgc2FpZCBpbiBhIG5vdGUgVGh1cnNkYXkgQ29tbWVyY2lhbCBkZW1hbmQgc2hvdWxkIGJlZ2luIHRvIGFjY2VsZXJhdGUgZHVyaW5nIHRoZSBiYWxhbmNlIG9mIHRoZSB5ZWFyIFVTRyBjbGltYmVkIDEzIHBlcmNlbnQgdG8gMzMzOSBhdCB0aGUgY2xvc2UgaW4gTmV3IFlvcmsgdGhlIGhpZ2hlc3QgbGV2ZWwgc2luY2UgSnVuZSAyMDA4IFNoYXJlcyBvZiB0aGUgQ2hpY2Fnb2Jhc2VkIGNvbXBhbnkgaGF2ZSBpbmNyZWFzZWQgMTggcGVyY2VudCB0aGlzIHllYXIgV2V0ZW5oYWxsIHJhdGVzIHRoZSBzdG9jayBhcyBvdXRwZXJmb3JtIFN1YnNpZGlhcmllcyBvZiBPbWFoYSBOZWJyYXNrYWJhc2VkIEJlcmtzaGlyZSBjb252ZXJ0ZWQgZGVidCBpbnRvIG1vcmUgdGhhbiA2MDAgbWlsbGlvbiBvZiBVU0cgY29tbW9uIHN0b2NrIGluIEphbnVhcnkgQmVya3NoaXJlIGFuZCBGYWlyZmF4IEZpbmFuY2lhbCBIb2xkaW5ncyBMdGQgYWdyZWVkIGluIDIwMDggdG8gYnV5IDQwMCBtaWxsaW9uIG9mIGRlYnQgZnJvbSBVU0cgYXMgdGhlIGNhc2hzdHJhcHBlZCBjb21wYW55IHN0cnVnZ2xlZCB3aXRoIGZyb3plbiBjcmVkaXQgbWFya2V0cyBhbmQgZHdpbmRsaW5nIHdhbGxib2FyZCBkZW1hbmQgVGhlIGNvbnZlcnRpYmxlIG5vdGVzIHBhaWQgMTAgcGVyY2VudCBpbnRlcmVzdCAgICAgICAgICAgICAgICAgICAgICAgICAgQmVya3NoaXJlcyBTdGFrZSBCZXJrc2hpcmUgb3ducyBhYm91dCAyOCBwZXJjZW50IG9mIFVTR3Mgb3V0c3RhbmRpbmcgc2hhcmVzIGFuZCB0aGVyZSBhcmUgc3RpbGwgNzUgbWlsbGlvbiBvZiBjb252ZXJ0aWJsZSBub3RlcyBvd25lZCBieSBCZXJrc2hpcmUgYW5kIEZhaXJmYXggc2FpZCBSb2JlcnQgV2lsbGlhbXMgYSBVU0cgc3Bva2VzbWFuIFVTRyByYWNrZWQgdXAgbG9zc2VzIGFmdGVyIFVTIGhvdXNpbmcgc3RhcnRzIG9uIGFuIGFubnVhbCBiYXNpcyBwbHVtbWV0ZWQgdG8gYSBsb3cgb2YgNDc4MDAwIGluIDIwMDkgZnJvbSBhIEphbnVhcnkgMjAwNiBwZWFrIG9mIDIyNyBtaWxsaW9uIFJlc2lkZW50aWFsIHN0YXJ0cyBoYXZlIHNpbmNlIHJlY292ZXJlZCByaXNpbmcgdG8gYW4gYW5udWFsaXplZCBwYWNlIG9mIDExMSBtaWxsaW9uIGluIE5vdmVtYmVyIHRoYXQgd2FzIHRoZSBoaWdoZXN0IHNpbmNlIDIwMDcgQWRqdXN0ZWQgcmVzdWx0cyBmb3IgdGhlIGZvdXJ0aCBxdWFydGVyIGluY2x1ZGVkIGEgMTYgbWlsbGlvbiBjaGFyZ2UgZm9yIGEgcGVuc2lvbiBzZXR0bGVtZW50IFVTRyBzYWlkIFRodXJzZGF5IFRoZSBuZXQgbG9zcyBuYXJyb3dlZCB0byAzIG1pbGxpb24gZnJvbSAxMyBtaWxsaW9uIGEgeWVhciBlYXJsaWVyIFdhbGxib2FyZCBzaGlwbWVudHMgcm9zZSAxMyBwZXJjZW50IGFuZCBwcmljZXMgaW5jcmVhc2VkIDE3IHBlcmNlbnQgSSBiZWxpZXZlIHRoYXQgb3VyIGJ1c2luZXNzIGlzIHdlbGxwb3NpdGlvbmVkIGZvciBncm93dGggYXMgd2UgY29udGludWUgdG8gc2VlIGRlbWFuZCBzdHJlbmd0aGVuaW5nIGluIGVhY2ggb2Ygb3VyIG1hcmtldHMgQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXIgSmFtZXMgTWV0Y2FsZiBzYWlkIG9uIGEgY29uZmVyZW5jZSBjYWxsIHdpdGggYW5hbHlzdHMgRm9yIHRoZSB5ZWFyIHRoZSBtYWtlciBvZiBTaGVldHJvY2ticmFuZCB3YWxsYm9hcmQgcG9zdGVkIG5ldCBpbmNvbWUgb2YgNDYgbWlsbGlvbiBpdHMgZmlyc3QgYW5udWFsIHByb2ZpdCBzaW5jZSAyMDA3IGFmdGVyIHJlZHVjaW5nIHByb2R1Y3Rpb24gY2FwYWNpdHkgdG8gY3V0IGNvc3RzdAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAb2FydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2UsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEzLTAzLTI3VDAwOjAwOjAwWiBUTyAyMDEzLTEyLTAzVDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTIxMDk0</field><field name="title" class="java.lang.String">rO0ABXQAPEhvbWVidWlsZGVycycgU3RvY2tzIE5lYXIgQmVhciBNYXJrZXQgYXMgTW9ydGdhZ2UgUmF0ZXMgUmlzZQ==</field><field name="content" class="java.lang.String">rO0ABXQOvFRoZSAxMS1tZW1iZXIgU3RhbmRhcmQgJiBQb29y4oCZcyBTdXBlcmNvbXBvc2l0ZSBIb21lYnVpbGRpbmcgSW5kZXggc2xpZCAxIHBlcmNlbnQgTW9uZGF5IHRvIHRoZSBsb3dlc3QgbGV2ZWwgc2luY2UgdGhlIGVuZCBvZiAyMDEyLiBJdCBoYXMgZmFsbGVuIDE5LjYgcGVyY2VudCBmcm9tIGEgTWF5IDE0IHBlYWssIGNsb3NlIHRvIHRoZSAyMCBwZXJjZW50IHRocmVzaG9sZCBjb25zaWRlcmVkIHRvIGJlIGEgYmVhciBtYXJrZXQuIFRoZSBwcm9zcGVjdCB0aGF0IHRoZSBGZWRlcmFsIFJlc2VydmUgbWF5IHNsb3cgYm9uZCBwdXJjaGFzZXMgaGFzIHN0b2tlZCBpbnZlc3RvciBjb25jZXJuIHRoYXQgbW9ydGdhZ2UgcmF0ZXMgd2lsbCByaXNlIGFuZCBsaW1pdCBuZXctaG9tZSBzYWxlcywgd2hpY2ggaGF2ZSBqdW1wZWQgYXMgaW52ZW50b3JpZXMgZm9yIGV4aXN0aW5nIHByb3BlcnRpZXMgdGlnaHRlbmVkLiBIb3VzaW5nIHNoYXJlcyBtYXkgaGF2ZSBjbGltYmVkIHRvbyBmYXIgYWZ0ZXIgYSByYWxseSB0aGF0IHNlbnQgdGhlIFMmUCBidWlsZGVyIGdhdWdlIHVwIDg0IHBlcmNlbnQgbGFzdCB5ZWFyLCBtb3JlIHRoYW4gc2l4IHRpbWVzIHRoZSBnYWluIGluIHRoZSBTJlAgNTAwIEluZGV4LCBzYWlkIFZpY2tpIEJyeWFuLCBhbiBhbmFseXN0IGF0IEdpbW1lIENyZWRpdCBMTEMuIOKAnEludmVzdG9ycyBnb3Qgd2F5IGFoZWFkIG9mIHRoZW1zZWx2ZXMgaW4gZXN0aW1hdGluZyBwZXJmb3JtYW5jZSByZXN1bHRzIGZvciB0aGUgc2VjdG9yLCBwZXJoYXBzIGJ5IHllYXJzIGluIHRoZSBjYXNlIG9mIHNvbWUgYnVpbGRlcnMs4oCdIHNoZSBzYWlkIGluIGEgdGVsZXBob25lIGludGVydmlldyBNb25kYXkgZnJvbSBOZXcgWW9yay4g4oCcVGhleeKAmXZlIGFscmVhZHkgc2FwcGVkIG1vc3Qgb2YgdGhlIGxvZ2ljYWwgdXBzaWRlLiBUaGF0IG9ubHkgbGVhdmVzIHJvb20gZm9yIGRpc2FwcG9pbnRtZW50LuKAnSBELlIuIEhvcnRvbiBJbmMuIGFuZCBQdWx0ZUdyb3VwIEluYy4sIHRoZSB0d28gbGFyZ2VzdCBVLlMuIGhvbWVidWlsZGVycywgaGF2ZSBsZWQgdGhlIGRlY2xpbmUgc2luY2UgTWF5IDE0LCB3aXRoIGVhY2ggbG9zaW5nIDI0IHBlcmNlbnQuIFJ5bGFuZCBHcm91cCBJbmMuIGhhcyBmYWxsZW4gMjMgcGVyY2VudCwgd2hpbGUgS0IgSG9tZSBoYXMgc2x1bXBlZCAyMiBwZXJjZW50LiAgICAgICAgICAgICAgICAgICAgICAgICAgIEhpZ2hlciBDb3N0cyBUaGUgYXZlcmFnZSByYXRlIGZvciBhIDMwLXllYXIgZml4ZWQgbW9ydGdhZ2UganVtcGVkIHRvIDMuOTMgcGVyY2VudCBsYXN0IHdlZWsgZnJvbSAzLjM1IHBlcmNlbnQgaW4gZWFybHkgTWF5LCBhY2NvcmRpbmcgdG8gRnJlZGRpZSBNYWMuIEJvcnJvd2luZyBjb3N0cyBwcm9iYWJseSB3aWxsIHJpc2UgZnVydGhlciBhZnRlciBGZWQgQ2hhaXJtYW4gQmVuIFMuIEJlcm5hbmtlIHNhaWQgbGFzdCB3ZWVrIHRoYXQgcG9saWN5IG1ha2VycyBtYXkgc2xvdyBib25kIHB1cmNoYXNlcyB0aGlzIHllYXIgYW1pZCBzaWducyBvZiBhbiBpbXByb3ZpbmcgZWNvbm9teS4gV2VsbHMgRmFyZ28gJiBDby4sIHRoZSBsYXJnZXN0IFUuUy4gaG9tZSBsZW5kZXIsIHdhcyBvZmZlcmluZyBhIDMwLXllYXIgbW9ydGdhZ2UgYXQgNC43NSBwZXJjZW50IE1vbmRheSwgYWNjb3JkaW5nIHRvIGl0cyB3ZWJzaXRlLiBBbiBleHRlbmRlZCByaXNlIGluIHJhdGVzIG1heSBodXJ0IGhvbWVidWlsZGVyc+KAmSBtb3J0Z2FnZS0gb3JpZ2luYXRpb24gYnVzaW5lc3Nlcywgd2hpY2ggYWNjb3VudCBmb3IgYW4gYXZlcmFnZSBvZiBhYm91dCAyOCBwZXJjZW50IG9mIHRoZWlyIG9wZXJhdGluZyBwcm9maXQsIE1lZ2FuIE1jR3JhdGgsIGFuIGFuYWx5c3QgYXQgTUtNIFBhcnRuZXJzIExMQywgc2FpZCBpbiBhIG5vdGUgdG8gY2xpZW50cyB0b2RheS4gVGhlIHNwcmVhZCBiZXR3ZWVuIHRoZSByYXRlIHRoZSBmaW5hbmNpYWwtc2VydmljZXMgYnVzaW5lc3NlcyB1bmRlcndyaXRlIG1vcnRnYWdlcyBmb3IgYW5kIHdoYXQgaW52ZXN0b3JzIHBheSBmb3IgdGhlIGxvYW5zIHdpbGwgc2hyaW5rLCBzaGUgc2FpZC4gTGVubmFyIENvcnAuLCB0aGUgdGhpcmQtbGFyZ2VzdCBob21lYnVpbGRlciwgbWF5IGJlIG1vc3QgYXQgcmlzayBvZiBsb3dlciByZXZlbnVlIGFuZCBtYXJnaW5zIGZyb20gdGhpcyBidXNpbmVzcywgYWNjb3JkaW5nIHRvIE1jR3JhdGguIOKAnEludmVzdG9ycyBzaG91bGQgYmUgYnJhY2VkIGZvciBpbmNyZWFzZWQgdm9sYXRpbGl0eSBpbiBob21lYnVpbGRpbmcgc2hhcmVzIG92ZXIgdGhlIHJlbWFpbmRlciBvZiB0aGUgc3VtbWVyIGFzIGNvbnRpbnVlZCBmZWFycyBhcm91bmQgaGlnaGVyIHJhdGVzIGJhdHRsZSB3aXRoIHdoYXQgd2UgZXhwZWN0IHdpbGwgYmUgZ2VuZXJhbGx5IHBvc2l0aXZlIGhvdXNpbmcgZGF0YSzigJ0gTWNHcmF0aCB3cm90ZS4gICAgICAgICAgICAgICAgICAgICAgICAgICAgSG9tZSBTYWxlcyBOZXctaG9tZSBzYWxlcyByb3NlIDIuMyBwZXJjZW50IGluIEFwcmlsIGZyb20gdGhlIHByZXZpb3VzIG1vbnRoLCBhY2NvcmRpbmcgdG8gdGhlIENvbW1lcmNlIERlcGFydG1lbnQuIEEgcmVwb3J0IFR1ZXNkYXkgd2lsbCBwcm9iYWJseSBzaG93IHRoYXQgcHVyY2hhc2VzIGluIE1heSBjbGltYmVkIHRvIGEgNDYwLDAwMCBhbm51YWxpemVkIHBhY2UsIHRoZSBoaWdoZXN0IHNpbmNlIEp1bHkgMjAwOCwgYWNjb3JkaW5nIHRvIHRoZSBtZWRpYW4gZXN0aW1hdGUgaW4gYSBCbG9vbWJlcmcgc3VydmV5IG9mIGVjb25vbWlzdHMuIFRoZSBzaG9ydC10ZXJtIHR1cmJ1bGVuY2UgaW4gaG9tZWJ1aWxkZXIgc2hhcmUgcHJpY2VzIHdpbGwgY3JlYXRlIGEg4oCcbG9uZy10ZXJtIG9wcG9ydHVuaXR5LOKAnSBzYWlkIFJvYmVydCBXZXRlbmhhbGwsIGFuIGFuYWx5c3Qgd2l0aCBSQkMgQ2FwaXRhbCBNYXJrZXRzIGluIE5ldyBZb3JrLiDigJxJbiB0aGUgbmVhciB0ZXJtLCBob21lYnVpbGRlciBzdG9ja3Mgd2lsbCBzdHJ1Z2dsZSBpbiBhIHJpc2luZyBpbnRlcmVzdCByYXRlIGVudmlyb25tZW50IGR1ZSB0byBjb25jZXJucyAt4oCTIGVpdGhlciByZWFsIG9yIGltYWdpbmVkLOKAnSBXZXRlbmhhbGwgc2FpZCBpbiBhIG5vdGUgdG8gY2xpZW50cyB0b2RheS4g4oCcSW4gdGhlIGxvbmcgdGVybSwgaG93ZXZlciwgd2UgdGhpbmsgdGhhdCBiZXR0ZXIgcHJpY2luZyBwcmFjdGljZXMgYW5kIHN0cm9uZyB2b2x1bWUgZ3Jvd3RoIHdpbGwgcmV3YXJkIHBhdGllbnQgaW52ZXN0b3JzIHdpdGggYSBtdWx0aXllYXIgaG9sZGluZyBwZXJpb2Qu4oCdIFRoZSBkZWNsaW5lIHJlcHJlc2VudHMgYSDigJxrbmVlLWplcmsgcmVhY3Rpb27igJ0gdG8gcmlzaW5nIHJhdGVzLCB3aGljaCBtYXkgYnJpbmcgc2hhcmUgcHJpY2VzIGRvd24gdG8gbW9yZSByZWFsaXN0aWMgbGV2ZWxzLCBzYWlkIFJvYmVydCBDdXJyYW4sIGEgbWFuYWdpbmcgZGlyZWN0b3IgYXQgRml0Y2ggUmF0aW5ncyBpbiBOZXcgWW9yay4g4oCcVGhpcyBpcyB0aGUgbWFya2V0IGFkanVzdGluZyBpdHNlbGYs4oCdIEN1cnJhbiBzYWlkIGluIGEgdGVsZXBob25lIGludGVydmlldy4g4oCcVGhlcmUgd2FzIGFuIG92ZXItcmVhY3Rpb24gb24gdGhlIHVwc2lkZSBhbmQgdGhlcmUgd2FzIHNvbWV0aGluZyBvZiBhbiBvdmVyLXJlYWN0aW9uIHRvIHRoZSBuZXdzIG9uIHRoZSBpbnRlcmVzdCByYXRlLiBBdCBzb21lIHBvaW50LCBmdXJ0aGVyIG91dCB0aGlzIHllYXIsIHRoZXJlIHdpbGwgc29tZXRoaW5nIG1vcmUgb2YgYSBub3JtYWwgYmFsYW5jZS7igJ0=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT90jYiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDIwODk5ZmM3NGIyNzAyYTg=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0ZNQ0MuT0I=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT95s+SAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/6j1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/64UeuFHrh</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/3rhR64Ueu</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/4AAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/4AAAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAM9v6A==</field><field name="id" class="java.lang.String">rO0ABXQAEDJkN2IyZDQ2YTU0Yzg4NTU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGONAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDg3MTg=</field><field name="title" class="java.lang.String">rO0ABXQAKkdsb2JhbCBTdG9ja3MgQ2hhbGsgVXAgQmVzdCBSdW4gU2luY2UgMjAwOQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKsvfcAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDU5NjVkYTg2NWRhZDQzOGQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAA05PVg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKx5FMAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUb1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUoeuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUQUeuFHrh</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUbCj1wo9c</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBRzCj1wo9c</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAACqmwA==</field><field name="id" class="java.lang.String">rO0ABXQAEGNiOTU3OTQwMDA1ZGE3YWM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mIrhAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExMzg5</field><field name="title" class="java.lang.String">rO0ABXQANEJ1aWxkZXJzIFJhY2UgdG8gS2VlcCBVcCBXaXRoIFN1cmdpbmcgVVMgSG9tZSBEZW1hbmQ=</field><field name="content" class="java.lang.String">rO0ABXQgRkpvZSBDaGFtYmVybGFpbiBzYXlzIGhlIGNhbuKAmXQgYnVpbGQgaG9tZXMgZmFzdCBlbm91Z2ggdG8ga2VlcCB1cCB3aXRoIGRlbWFuZC4gVGhlIGZvdW5kZXIgb2YgQ2Fwcm9jayBDdXN0b20gQ29uc3RydWN0aW9uIEluYy4gaW4gUm9ja3dhbGwsIFRleGFzLCBoYXMgeWV0IHRvIGJyZWFrIGdyb3VuZCBvbiBhbnkgb2YgdGhlIHRocmVlIGhvdXNlcyBoZSBzb2xkIGluIE1heSBhbmQgSnVuZS4gVGhhdOKAmXMg4oCcYW4gZXhjZWxsZW50IHBvc2l0aW9uIGZvciBhIGJ1aWxkZXIgdG8gYmUgaW4s4oCdIHNhaWQgQ2hhbWJlcmxhaW4sIHdobyBhbHJlYWR5IGhhcyB0aHJlZSBob21lcyB1bmRlciBjb25zdHJ1Y3Rpb24gYW5kIGlzIGp1c3Qgc3RhcnRpbmcgd29yayBvbiBhbm90aGVyLiDigJxJdCBlbnN1cmVzIHdl4oCZbGwgc3RheSBidXN5IGZvciBhIGxvbmcgdGltZSBhbmQgbWFrZSBhIHByb2ZpdC7igJ0gQWxtb3N0IDM2IHBlcmNlbnQgb2YgYWxsIFUuUy4gbmV3IGhvbWVzIHNvbGQgaW4gTWF5IHdlcmVu4oCZdCB5ZXQgdW5kZXIgY29uc3RydWN0aW9uLCBjbG9zZSB0byBhIHNldmVuLXllYXIgaGlnaCBhbmQgc2lnbmFsaW5nIHN1c3RhaW5lZCBzdHJlbmd0aCBpbiBob21lYnVpbGRpbmcgYXMgY29tcGFuaWVzIHRyeSB0byBjYXRjaCB1cC4gVGhhdCBpbiB0dXJuIHdpbGwgdHJpZ2dlciBwdXJjaGFzZXMgb2YgZXZlcnl0aGluZyBmcm9tIGNlbWVudCBhbmQgbHVtYmVyIHRvIGZ1cm5pdHVyZSBhbmQgYXBwbGlhbmNlcywgYm9sc3RlcmluZyBoaXJpbmcgYW5kIGVjb25vbWljIGdyb3d0aCwgZWNvbm9taXN0IE5laWwgRHV0dGEgcHJlZGljdHMuIOKAnFRoZXJl4oCZcyBjbGVhcmx5IG1vcmUgaG91c2luZyBzdGFydHMgYWN0aXZpdHkgaW4gdGhlIHBpcGVsaW5lLOKAnSBzYWlkIER1dHRhLCBoZWFkIG9mIFUuUy4gZWNvbm9taWNzIGF0IFJlbmFpc3NhbmNlIE1hY3JvIFJlc2VhcmNoIExMQyBpbiBOZXcgWW9yay4g4oCcVGhlIGVjb25vbWljIG91dGxvb2sgaXMgZ2V0dGluZyBiZXR0ZXIgYW5kIHRoZXJl4oCZcyBtb3JlIGhvdXNlaG9sZCBmb3JtYXRpb24uIFdpdGggZGVtYW5kIHJpc2luZywgcHJvZHVjdGlvbiBpcyBnb2luZyB0byBmb2xsb3cu4oCdIE9mIHRoZSA0NSwwMDAgbmV3IGhvdXNlcyBzb2xkIGluIE1heSwgY29uc3RydWN0aW9uIGhhZG7igJl0IHlldCBiZWd1biBmb3IgMTYsMDAwLCBhY2NvcmRpbmcgdG8gQ29tbWVyY2UgRGVwYXJ0bWVudCBkYXRhLiBUaGUgc2hhcmUgb2YgeWV0LXRvLWJlLWJ1aWx0IGR3ZWxsaW5ncyB3YXMgdXAgZnJvbSAyNiBwZXJjZW50IGEgeWVhciBhZ28gYW5kIGZyb20gYSByZWNlc3Npb24gbG93IG9mIDE0IHBlcmNlbnQgaW4gU2VwdGVtYmVyIDIwMDguIFRoZSBvdXRsb29rIGZvciBob3VzaW5nIGhhcyBoZWxwZWQgZHJpdmUgdGhlIFN0YW5kYXJkICYgUG9vcuKAmXMgSG9tZWJ1aWxkaW5nIEluZGV4IHVwIDMxIHBlcmNlbnQgaW4gdGhlIHBhc3QgeWVhciwgb3V0cGFjaW5nIHRoZSBTJlAgNTAwIEluZGV44oCZcyAxOSBwZXJjZW50IGdhaW4uIEluIHRvZGF54oCZcyB0cmFkaW5nLCB0aGUgUyZQIDUwMCByb3NlIDAuNSBwZXJjZW50IHRvIDE2MjMuMjggYXMgb2YgMTA6NDMgYS5tLiBpbiBOZXcgWW9yay4gRmFjdG9yeSBPcmRlcnMgT3JkZXJzIHBsYWNlZCB3aXRoIFUuUy4gZmFjdG9yaWVzIHJvc2UgMi4xIHBlcmNlbnQgaW4gTWF5LCByZWZsZWN0aW5nIGJyb2FkLWJhc2VkIGdhaW5zIHRoYXQgc2lnbmFsIG1hbnVmYWN0dXJpbmcgaXMgc3RhYmlsaXppbmcsIENvbW1lcmNlIERlcGFydG1lbnQgZmlndXJlcyBzaG93ZWQgdG9kYXkuICBUaGUgUmVzZXJ2ZSBCYW5rIG9mIEF1c3RyYWxpYSwgd2hpY2ggaGFzIGN1dCBpdHMgYmVuY2htYXJrIHJhdGUgYnkgMiBwZXJjZW50YWdlIHBvaW50cyBzaW5jZSBOb3ZlbWJlciAyMDExLCBsZWZ0IGJvcnJvd2luZyBjb3N0cyB1bmNoYW5nZWQgdG9kYXkgYXQgYSByZWNvcmQtbG93IDIuNzUgcGVyY2VudC4gR292ZXJub3IgR2xlbm4gU3RldmVucyBzYWlkIGluIGEgc3RhdGVtZW50IGFjY29tcGFueWluZyB0aGUgZGVjaXNpb24gdGhhdCDigJx0aGUgZWNvbm9teSBoYXMgYmVlbiBncm93aW5nIGEgYml0IGJlbG93IHRyZW5kIG92ZXIgdGhlIHJlY2VudCBwZXJpb2Qu4oCdIEluIHRoZSBVLlMuIHNpbmNlIDIwMDgsIHJlc2lkZW50aWFsIGNvbnN0cnVjdGlvbiBoYXMgYXZlcmFnZWQgZmV3ZXIgdGhhbiA3MDAsMDAwIHNpbmdsZS0gYW5kIG11bHRpLWZhbWlseSB1bml0cyBwZXIgeWVhciwgb2Ygd2hpY2ggYWJvdXQgMzAwLDAwMCBhIHllYXIgd2VyZSB0byByZXBsYWNlIG9ic29sZXNjZW50IGR3ZWxsaW5ncywgYWNjb3JkaW5nIHRvIFN0dWFydCBNaWxsZXIsIGNoaWVmIGV4ZWN1dGl2ZSBvZmZpY2VyIG9mIE1pYW1pLWJhc2VkIExlbm5hciBDb3JwLiBFdmVuIGEganVtcCB0byBhYm91dCA5NTAsMDAwIG5ldyBkd2VsbGluZ3MgaW4gMjAxMywg4oCcYSBzaWduaWZpY2FudGx5IHN0cm9uZ2VyIHllYXIgb2YgYnVpbGRpbmcgYWN0aXZpdHks4oCdIHdvdWxkIHN0aWxsIGJlIGJlbG93IHRoZSBuYXRpb27igJlzIG5lZWQgb2YgMS4yIG1pbGxpb24gdG8gMS41IG1pbGxpb24gYSB5ZWFyLCBoZSBzYWlkLiBCdWlsZGluZyBTaG9ydGZhbGwg4oCcVGhlIG92ZXJyaWRpbmcgZHJpdmVyIG9mIHJlY292ZXJ5IGluIHRoZSBob3VzaW5nIG1hcmtldCByZW1haW5zIHRoZSB1bmRlcnByb2R1Y3Rpb24gb2YgYm90aCBzaW5nbGUgYW5kIG11bHRpZmFtaWx5IHByb2R1Y3QgdGhyb3VnaG91dCB0aGUgZWNvbm9taWMgZG93bnR1cm4gYW5kIHVwIHRvIGFuZCBpbmNsdWRpbmcgdGhpcyB5ZWFyLOKAnSBNaWxsZXIsIGhlYWQgb2YgdGhlIHRoaXJkLWJpZ2dlc3QgVS5TLiBob21lYnVpbGRlciBieSByZXZlbnVlLCBzYWlkIG9uIGEgSnVuZSAyNSBlYXJuaW5ncyBjYWxsLiDigJxUaGlzIHNob3J0ZmFsbCB3aWxsIGhhdmUgdG8gYmUgbWFkZSB1cC7igJ0gVGhlIGRlbWFuZC1zdXBwbHkgZ2FwIG1lYW5zIGhvdXNpbmcgd2lsbCBrZWVwIGFkZGluZyB0byB0aGUgZm91ci15ZWFyIGVjb25vbWljIGV4cGFuc2lvbi4gT3ZlciB0aW1lLCByZXNpZGVudGlhbCBpbnZlc3RtZW504oCZcyBjb250cmlidXRpb24gdG8gZ3Jvc3MgZG9tZXN0aWMgcHJvZHVjdCBncm93dGggbWF5IGV4cGFuZCB0byBhcyBtdWNoIGFzIDAuNiBwZXJjZW50YWdlIHBvaW50LCBSZW5haXNzYW5jZSBNYWNyb+KAmXMgRHV0dGEgc2FpZC4gSG91c2luZyBjb250cmlidXRlZCBhbiBhdmVyYWdlIG9mIDAuMSBwb2ludCBpbiB0aGUgZm91ciB5ZWFycyBzaW5jZSB0aGUgcmVjZXNzaW9uIGVuZGVkIGluIEp1bmUgMjAwOSwgd2hpbGUgR0RQIGdyb3d0aCBhdmVyYWdlZCBhYm91dCAyIHBlcmNlbnQuIFRoZSByZWNvdmVyeSBhbHNvIHdpbGwgYmUgYWJsZSB0byB3aXRoc3RhbmQgdGhlIHJlY2VudCBydW4tIHVwIGluIGJvcnJvd2luZyBjb3N0cyBhcyBjcmVkaXQgY29uZGl0aW9ucyBhcmUgZWFzaW5nLCBpbiBwYXJ0IGJlY2F1c2UgcmlzaW5nIHByaWNlcyBtYWtlIGhvbWVzIGEgbW9yZSBhdHRyYWN0aXZlIGFzc2V0IGZvciBiYW5rcyB0byBsZW5kIGFnYWluc3QsIGhlIHNhaWQuIEFtZXJpY2FucyBhcmUgYmV0dGluZyBpdOKAmXMgYSBnb29kIHRpbWUgdG8gYnV5IGJlY2F1c2UgcHJvcGVydHkgcHJpY2VzIGFuZCBpbnRlcmVzdCByYXRlcyBtYXkgY2xpbWIgZnVydGhlci4gVGhlIHByb3BvcnRpb24gb2YgY29uc3VtZXJzIHdobyBjb25zaWRlciBob21lLXNlbGxpbmcgY29uZGl0aW9ucyBmYXZvcmFibGUgaXMgdGhlIGhpZ2hlc3Qgc2luY2UgMjAwNiwgd2hpbGUgdGhlIHNoYXJlIHNheWluZyBpdOKAmXMgYSBiYWQgdGltZSB0byBwdXJjaGFzZSBhIGhvdXNlIGlzIHRoZSBzbWFsbGVzdCBpbiAxMCB5ZWFycywgVGhvbXNvbiBSZXV0ZXJzL1VuaXZlcnNpdHkgb2YgTWljaGlnYW4gZmlndXJlcyBvbiBjb25zdW1lciBjb25maWRlbmNlIHNob3dlZCBpbiBKdW5lLiBDYWxpZm9ybmlhLCBDb2xvcmFkbyDigJxCdXllciB0cmFmZmljIGFuZCBzYWxlcyBhcmUgdHJlbWVuZG91c+KAnSBpbiBDYWxpZm9ybmlhLCBhbmQg4oCcdW5iZWxpZXZhYmxl4oCdIGluIENvbG9yYWRvLCBzYWlkIERvdWcgQmF1ZXIsIGNoaWVmIGV4ZWN1dGl2ZSBvZmZpY2VyIG9mIFRSSSBQb2ludGUgSG9tZXMgSW5jLiBUaGUgSXJ2aW5lLCBDYWxpZm9ybmlhLWJhc2VkIGNvbXBhbnksIHdoaWNoIGJlY2FtZSBwdWJsaWNseSBoZWxkIGluIEphbnVhcnkgYW5kIGlzIHBhcnRseSBvd25lZCBieSBpbnZlc3RvciBCYXJyeSBTdGVybmxpY2h0LCBhbm5vdW5jZWQgaW4gSnVuZSB0aGF0IGl0IGJvdWdodCAyMDIgbG90cyB0byBhZGQgY29tbXVuaXRpZXMgb2YgZW50cnktbGV2ZWwgYW5kIG1vdmUtdXAgcmVzaWRlbmNlcyBpbiBDYWxpZm9ybmlh4oCZcyBPcmFuZ2UgYW5kIFNvbGFubyBjb3VudGllcy4g4oCcVGhlIHJpc2UgaW4gcmF0ZXMgcmVhbGx5IGhhc27igJl0IHNvZnRlbmVkIGRlbWFuZCBhdCBhbGws4oCdIEJhdWVyIHNhaWQgaW4gYW4gaW50ZXJ2aWV3LiDigJxJbiBmYWN0LCBpdOKAmXMgcHVzaGVkIG1vcmUgcGVvcGxlIGludG8gdGhlIHNhbGVzIG9mZmljZSBiZWNhdXNlIHRoZXkgd2FudCB0byBsb2NrIGlu4oCdIGN1cnJlbnQgYm9ycm93aW5nIGNvc3RzLiBNb3J0Z2FnZSBSYXRlcyBBIDMuNzUgcGVyY2VudCBtb3J0Z2FnZSByYXRlIHdhcyBhbiBpbmNlbnRpdmUgd2hlbiBKb3NoIFJvYmVydHNvbiBkZWNpZGVkIHRvIGJ1eSBhIGZpdmUtYmVkcm9vbSBob3VzZSBpbiB0aGUgQXRsYW50YSBzdWJ1cmIgb2YgU2FuZHkgU3ByaW5ncywgR2VvcmdpYSwgaW4gSnVuZS4gVGhlIDM3LXllYXItb2xkIGxpZmUgaW5zdXJhbmNlIHNhbGVzbWFuIHdhbnRlZCBhIGxhcmdlciBob21lIGFuZCB0aGUgbG9hbiB0ZXJtcyBvbiB0aGlzIG9uZSBzZWVtZWQgYSBiYXJnYWluIGNvbXBhcmVkIHdpdGggdGhlIDggcGVyY2VudCByYXRlIGhlIHBhaWQgZm9yIGhpcyBmaXJzdCBwdXJjaGFzZSBpbiAyMDAwLCBvciBhIHJhdGUg4oCcaW4gdGhlIDbigJlz4oCdIHdoZW4gaGUgbW92ZWQgdG8gYW5vdGhlciBob21lIGluIDIwMDMuIOKAnFdlIGhhZCBnb29kIGZvcnR1bmUgdGhhdCBsb3cgbW9ydGdhZ2UgcmF0ZXMgZ2F2ZSB1cyBidXlpbmcgcG93ZXIs4oCdIGFuZCB0aGUgcmF0ZSB3YXMgc3RpbGwg4oCccmVhc29uYWJseSBjbG9zZeKAnSB0byB0aGUgbG93LCBSb2JlcnRzb24gc2FpZC4gSW5jcmVhc2luZyBkZW1hbmQgd2lsbCBrZWVwIGJvb3N0aW5nIHByb3BlcnR5IHByaWNlcyBhcyBpbnZlbnRvcnkgcmVtYWlucyBuZWFyIGFuIGVpZ2h0LXllYXIgbG93LiBBdCB0aGUgY3VycmVudCBzYWxlcyByYXRlLCB0aGUgc3VwcGx5IG9mIG5ldyBzaW5nbGUtZmFtaWx5IGhvbWVzIGluIE1heSB3b3VsZCBsYXN0IDQuMSBtb250aHMsIGRvd24gZnJvbSA0LjcgbW9udGhzIGEgeWVhciBlYXJsaWVyLiBUb3RhbCBuZXcgaG9tZSBzYWxlcyBpbiBNYXkganVtcGVkIHRvIHRoZSBmYXN0ZXN0IGFubnVhbGl6ZWQgcGFjZSBzaW5jZSAyMDA4LiBQZXJtaXRzIHRvIGJ1aWxkIG9uZS1mYW1pbHkgaG9tZXMgYWxzbyByb3NlIHRvIGEgZml2ZS15ZWFyIGhpZ2gsIG91dHBhY2luZyB0aGUgcmF0ZSBvZiBzdGFydHMsIHdoaWNoIHJlZmxlY3Qgd2hlbiBidWlsZGVycyBicmVhayBncm91bmQuIEJ1aWxkZXJzIEZydXN0cmF0ZWQgU3RpbGwsIGJ1aWxkZXJzIGFyZSBmcnVzdHJhdGVkIGJ5IG9ic3RhY2xlcyBpbmNsdWRpbmcgbGltaXRlZCBhY2Nlc3MgdG8gY2FwaXRhbCwgc2FpZCBEYXZpZCBDcm93ZSwgY2hpZWYgZWNvbm9taXN0IGF0IHRoZSBOYXRpb25hbCBBc3NvY2lhdGlvbiBvZiBIb21lIEJ1aWxkZXJzIGluIFdhc2hpbmd0b24uIExhbmQsIGxhYm9yLCBhbmQgbWF0ZXJpYWxzIGFsc28gYXJlIGluIHNob3J0IHN1cHBseSwgcmVmbGVjdGluZyBkaWZmaWN1bHRpZXMgaW4gcmVjb3VwaW5nIGNhcGFjaXR5IHRoYXQgd2FzIHNsYXNoZWQgZHVyaW5nIHRoZSByZWNlc3Npb24uIOKAnFRoZSBjb25zdHJhaW50cyB3aWxsIGdyYWR1YWxseSB3b3JrIHRoZW1zZWx2ZXMgb3V0LOKAnSBoZSBzYWlkLiBTdGFydHMgb24gc2luZ2xlLWZhbWlseSBob21lcyB3aWxsIHJpc2UgYWJvdXQgMjUgcGVyY2VudCB0aGlzIHllYXIsIGFib3V0IHRoZSBzYW1lIGFzIGluIDIwMTIsIENyb3dlIGVzdGltYXRlcy4gVGhhdCBtZWFucyBidWlsZGVycyB3aWxsIGJyZWFrIGdyb3VuZCBvbiAxNTAsMDAwIG1vcmUgaG91c2VzIHRoaXMgeWVhciB0aGFuIHRoZXkgZGlkIGluIDIwMTIuIEdpdmVuIHRoYXQgZWFjaCBuZXcgaG91c2UgYnVpbHQgY3JlYXRlcyB0aHJlZSBqb2JzLCB0aGlzIHllYXLigJlzIHByb2plY3RlZCBnYWluIHdvdWxkIGdlbmVyYXRlIDQ1MCwwMDAgYWRkaXRpb25hbCBwb3NpdGlvbnMgaW4gaG91c2luZyBhbmQgdGhlIHJlc3Qgb2YgdGhlIGVjb25vbXksIGhlIHNhaWQuIExhbmQgR3JhYiBTaWducyB0aGF0IHRoZSByZWJvdW5kIGlzIGhlcmUgdG8gc3RheSBlbmNvdXJhZ2VkIE1CSyBIb21lcyBpbiBKdW5lIHRvIHB1cmNoYXNlIGZvdXIgcGFyY2VscyBvZiBsYW5kIHRvIGV4cGFuZCBpbiBzb3V0aGVybiBDYWxpZm9ybmlhLCBpdHMgZmlyc3QgcmVhbCBlc3RhdGUgYWNxdWlzaXRpb24gc2luY2UgMjAwOC4g4oCcVW5xdWVzdGlvbmFibHksIHRoaW5ncyBhcmUgcGlja2luZyB1cCBjb21wYXJlZCB0byBldmVuIHNpeCBtb250aHMgYWdvLCBhbmQgY2VydGFpbmx5IGNvbXBhcmVkIHdpdGggYSB5ZWFyIGFnbyzigJ0gc2FpZCBUaW0gS2FuZSwgcHJlc2lkZW50IG9mIE1CSywgd2hpY2ggaXMgZmluYW5jZWQgYnkgdGhlIFUuUy4gcmVhbC0gZXN0YXRlIGRldmVsb3BtZW50IHVuaXQgb2YgVG9reW8tYmFzZWQgTWl0c3VpICYgQ28uIEx0ZC4g4oCcQWxsIHByaWNlIHJhbmdlcyBhcmUgc2VlaW5nIGRlbWFuZC4gRm9yIHRoZSBuZXh0IGZldyB5ZWFycywgaXTigJlzIGdvaW5nIHRvIGJlIGEgbG90IG9mIGJ1aWxkaW5nIGFjdGl2aXR5LuKAnSBNb3JlIGJ1eWVycyBhcmUgcmV0dXJuaW5nIHRvIHRoZSBuZXctaG9tZSBtYXJrZXQgYXMgbGFyZ2UgcG9vbHMgb2YgaW52ZXN0b3JzIGJ1eWluZyBleGlzdGluZyBob21lcyBoYXZlIGRlcGxldGVkIGFscmVhZHktIGxvdyBzdXBwbGllcyBvZiBob3VzZXMsIHNhaWQgSmF5IE1vc3MsIGNoaWVmIG1hcmtldGluZyBvZmZpY2VyIG9mIFdvb2RzaWRlIEhvbWVzIGluIFNhbHQgTGFrZSBDaXR5LCBVdGFoLiBDYWxpZm9ybmlhLCBBcml6b25hIGFuZCBOZXZhZGEgYXJlIOKAnGV4dHJlbWVseSBob3TigJ0gbWFya2V0cywgaGUgc2FpZC4gSW4gbWFueSBjYXNlcywg4oCcd2UgaGF2ZSBzb2xkIG1vc3Qgb2YgdGhlIGhvbWVzIGJlZm9yZSB3ZeKAmXZlIHN0YXJ0ZWQs4oCdIE1vc3Mgc2FpZC4gV29vZHNpZGUgZXhwYW5kZWQgc3RhZmYgaW4gdGhlIHBhc3QgeWVhciwgYW5kIOKAnG5vdyB0aGF0IHdl4oCZcmUgZ2V0dGluZyBidXNpZXIsIHdlIG5lZWQgbW9yZSBwZW9wbGUu4oCdIFRoZSBjb21wYW55IHdpbGwgZGVsaXZlciBhbGwgNTkgaG91c2VzIGluIGl0cyBCZWxsYSBCcmlzYXMgZGV2ZWxvcG1lbnQgaW4gUmFuY2hvIENvcmRvdmEgbmVhciBTYWNyYW1lbnRvLCBDYWxpZm9ybmlhLCBpbnN0ZWFkIG9mIHRoZSA0OCBvcmlnaW5hbGx5IHNjaGVkdWxlZCBmb3IgdGhpcyB5ZWFyLCBNb3NzIHNhaWQuIOKAnFdlIGhhdmUgcmFtcGVkIHVwIHByb2R1Y3Rpb24s4oCdIGhlIHNhaWQuIOKAnFdlIGRpZG7igJl0IHRoaW5rIHNhbGVzIHdvdWxkIGJlIHNvIHN0cm9uZy7igJ0gQmFjayBpbiBUZXhhcywgQ2hhbWJlcmxhaW4gaXMgdGFsa2luZyB3aXRoIHNldmVyYWwgcHJvc3BlY3RpdmUgYnV5ZXJzIGFuZCBoZSBzYXlzIGhl4oCZbGwgaGF2ZSBlbm91Z2ggd29yayBmb3IgdGhlIG5leHQgeWVhciBvciB0d28gYXMgaGUgZmluaXNoZXMgdXAgc29tZSBvZiB0aGUgY29udHJhY3RzIGluIGhhbmQgYW5kIGJyZWFrcyBncm91bmQgb24gb3RoZXJzLiDigJxUaGVyZSBpcyBtb3JlIGRlbWFuZCB0aGFuIGhvdXNlcyB0byBnbyBhcm91bmTigJ0gaW4gdGhlIFJvY2t3YWxsIG1hcmtldCwgZXNwZWNpYWxseSBpbiB0aGUgJDI1MCwwMDAgcGx1cy1yYW5nZSwgc2FpZCBDaGFtYmVybGFpbiwgd2hvIGlzIGFsc28gcHJlc2lkZW50IG9mIHRoZSBEYWxsYXMgQnVpbGRlcnMgQXNzb2NpYXRpb24uIERldmVsb3BlcnMgb2YgbXVsdGlmYW1pbHkgdW5pdHMgYXJlIOKAnGFsc28gc3dhbXBlZC4gQWNyb3NzIHRoZSBlbnRpcmUgc3BlY3RydW0sIGl04oCZcyBqdXN0IGJ1c3ksIGJ1c3kgZm9yIGV2ZXJ5b25lLuKAnQ==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT+dwGiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGFjOTM3ZWVhNDVhOGRjZGI=</field><field name="symbol" class="java.lang.String">rO0ABXQAA1RQSA==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT+i5sSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAv+uFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwMKPXCj1x</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAvTMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwFHrhR64U</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwFHrhR64U</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAGnDA==</field><field name="id" class="java.lang.String">rO0ABXQAEGE1NDBjYTMwMTM4YjE5OGU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGQvAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDIzNTk=</field><field name="title" class="java.lang.String">rO0ABXQAOERpc2NvdW50IEJyb2tlcnMnIFNoYXJlcyBTdXJnZSBhcyBTbWFsbCBJbnZlc3RvcnMgUmV0dXJu</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8nTiSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDcyMzY1MDU5NjlhODJlZmU=</field><field name="symbol" class="java.lang.String">rO0ABXQABEFNVEQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8sdICAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4LhR64Ueu</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4MzMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3z1wo9cKP</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA38zMzMzMz</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA249cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAE4sgA==</field><field name="id" class="java.lang.String">rO0ABXQAEDdlNjk4YzYyNDVjODQ0YTE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEStAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDg3MDI=</field><field name="title" class="java.lang.String">rO0ABXQAM0dvbGQgQnVsbHMgUmV0cmVhdCBhcyBQcmljZXMgRHJvcCB0byBGb3VyLU1vbnRoIExvdw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUK3Cq8AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGRmNDQ1MGM3N2Y1NGE2NTc=</field><field name="symbol" class="java.lang.String">rO0ABXQAA05PVg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUK8MQsAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUiuFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUqZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUQzMzMzMz</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUdmZmZmZm</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBR49cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAACEpdA==</field><field name="id" class="java.lang.String">rO0ABXQAEGZmNzhiYTVlYjFiYmM4MGM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mG5hAAAA==</field></document></documents><date>2015-05-07T12:17:05-0500</date></cacheEntry>
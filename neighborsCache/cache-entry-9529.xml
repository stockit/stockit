<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hBbGliYWJhIEdyb3VwIEhvbGRpbmcgTHRkcyBwcm9wb3NhbCBmb3Igd2hhdCBjb3VsZCBiZSB0aGUgbGFyZ2VzdCBpbml0aWFsIHN0b2NrIG9mZmVyaW5nIGluIFVTIGhpc3RvcnkgaXMgc2FpbGluZyB0aHJvdWdoIFdhc2hpbmd0b24gd2l0aCBmZXcgYnVtcHMgV2hpbGUgYSBmZWRlcmFsIGNvbW1pc3Npb24gaGFzIHdhcm5lZCB0aGF0IHRoZSBvZmZlcmluZyBieSB0aGUgd29ybGRzIGJpZ2dlc3QgSW50ZXJuZXQgcmV0YWlsZXIgcG9zZXMgbWFqb3Igcmlza3MgZm9yIGludmVzdG9ycyB0aGUgcmVhY3Rpb24gZnJvbSBzZWN1cml0aWVzIHJlZ3VsYXRvcnMgQ29uZ3Jlc3MgY2FiaW5ldCBzZWNyZXRhcmllcyBhbmQgY29tcGV0aXRvcnMgaGFzIGJlZW4gYSBjb2xsZWN0aXZlIHNocnVnIEFsaWJhYmEgb3dlcyBpdHMgc3VjY2VzcyBuYXZpZ2F0aW5nIFdhc2hpbmd0b25zIHBvbGl0aWNhbCBzaG9hbHMgaW4gcGFydCB0byBhIGhhbmRmdWwgb2Yga2V5IGhpcmVzIG92ZXIgdGhlIHBhc3QgdGhyZWUgeWVhcnMgVGhlIEhhbmd6aG91IENoaW5hYmFzZWQgY29tcGFueSByZXRhaW5lZCBhIGxvYmJ5aW5nIGZpcm0gaGVhZGVkIGJ5IFJvbmFsZCBSZWFnYW5zIGxhc3QgY2hpZWYgb2Ygc3RhZmYgYSBmb3JtZXIgZ2VuZXJhbCBjb3Vuc2VsIGZyb20gdGhlIFVTIFRyYWRlIFJlcHJlc2VudGF0aXZlIE9mZmljZSBhbmQgYW4gZXhjaGllZiBvZiBzdGFmZiBhdCB0aGUgVHJlYXN1cnkgRGVwYXJ0bWVudCB0byBvdmVyc2VlIGludGVybmF0aW9uYWwgY29tbXVuaWNhdGlvbnMgYW5kIGdvdmVybm1lbnQgcmVsYXRpb25zIFRoZSBTZWN1cml0aWVzIGFuZCBFeGNoYW5nZSBDb21taXNzaW9uICB0aGUgcHJpbmNpcGFsIHJlZ3VsYXRvcnkgaHVyZGxlIEFsaWJhYmEgbXVzdCBjbGVhciBiZWZvcmUgcmFpc2luZyBwZXJoYXBzIDIwIGJpbGxpb24gIGhhcyBzaG93biBubyBzaWduIGl0IHdpbGwgZGVjbGluZSB0byBhcHByb3ZlIHRoZSBzdG9jayBzYWxlIHRoYXQgY291bGQgY29tZSBhcyBlYXJseSBhcyBuZXh0IG1vbnRoIFF1ZXN0aW9ucyBhYm91dCB0aGUgZmlybXMgY29ycG9yYXRlIHN0cnVjdHVyZSBhY2NvdW50aW5nIGFuZCBzYWxlIG9mIGNvdW50ZXJmZWl0IGdvb2RzIGhhdmUgZ29uZSB1bmV4cGxvcmVkIGJ5IHRoZSBhZG1pbmlzdHJhdGlvbiBvZiBQcmVzaWRlbnQgQmFyYWNrIE9iYW1hIG9yIGJ5IGNvbXBhbmllcyBBbGliYWJhIGR3YXJmcyBpbiBzYWxlcyBpbmNsdWRpbmcgQW1hem9uY29tIEluYyBhbmQgRUJheSBJbmMgVGhpcyBpcyBnb2luZyB0byBiZSBhIHdhdGVyc2hlZCBJUE8gc2FpZCBBbmFudCBTdW5kYXJhbSBhIGNvcnBvcmF0ZSBnb3Zlcm5hbmNlIGV4cGVydCBhdCBEYXJ0bW91dGhzIFR1Y2sgU2Nob29sIG9mIEJ1c2luZXNzIEhvdyBjb21lIG5vYm9keSBhdCB0aGUgVVMgVHJhZGUgUmVwcmVzZW50YXRpdmUgbm9ib2R5IGF0IHRoZSBEZXBhcnRtZW50IG9mIENvbW1lcmNlIG5vYm9keSBhdCBzb21lIGNvbmdyZXNzaW9uYWwgb3ZlcnNpZ2h0IGJvZHkgaXMgc2F5aW5nIEd1eXMgd2hhdCBpcyBnb2luZyBvbiBoZXJlIEl0IGp1c3QgcHV6emxlcyBtZSB0aGF0IG5vYm9keSBpcyBjb25jZXJuZWQgICAgICAgICAgICAgICAgICAgICAgICAgIENhc2V5IExldHRlciBTZW5hdG9yIFJvYmVydCBDYXNleSBhIFBlbm5zeWx2YW5pYSBEZW1vY3JhdCBvbiB0aGUgU2VuYXRlIEZpbmFuY2UgQ29tbWl0dGVlIHNvdW5kZWQgYSByYXJlIGRpc2NvcmRhbnQgbm90ZSB0aGlzIHdlZWsgYXNraW5nIHRoZSBTRUMgdG8gc2hvdyBob3cgaXRzIGFkZHJlc3Npbmcgcmlza3MgZm9yIGJ1eWVycyBvZiBzdG9jayBpbiBDaGluZXNlIG9mZmVyaW5ncyBzdHJ1Y3R1cmVkIGxpa2UgQWxpYmFiYXMgQW1lcmljYW4gaW52ZXN0b3JzIGluIENoaW5lc2UgY29tcGFuaWVzIG9mdGVuIGRvIG5vdCBlbmpveSB0aGUgc2FtZSBwcm90ZWN0aW9ucyBhbmQgbGVnYWwgZ3VhcmFudGVlcyB0aGF0IHRoZXkgYXJlIGFmZm9yZGVkIHdoZW4gdGhleSBpbnZlc3QgaW4gQW1lcmljYW4gZmlybXMgQ2FzZXkgd3JvdGUgaW4gYSBKdWx5IDggbGV0dGVyIHRvIHRoZSBhZ2VuY3kgQWxpYmFiYSBoYXMgZmxvd24gdW5kZXIgV2FzaGluZ3RvbnMgcmFkYXIgZm9yIHNldmVyYWwgcmVhc29ucyBUaGUgY29tcGFueSB3aXRoIGVtYnJ5b25pYyBVUyByZXRhaWwgb3BlcmF0aW9ucyBoYXMgYXZvaWRlZCBhdHRyYWN0aW5nIGNvbXBldGl0b3JzIGZpcmUgYnkgc3RyZXNzaW5nIGl0cyBmb2N1cyBvbiB0aGUgdW5kZXJkZXZlbG9wZWQgQ2hpbmVzZSBlY29tbWVyY2UgbWFya2V0IEl0cyBhbHNvIGRlZnVzZWQgVVMgZ292ZXJubWVudCBjcml0aWNpc20gYnkgaW50ZW5zaWZ5aW5nIGVmZm9ydHMgdG8gcHJldmVudCBwaXJhdGVkIGdvb2RzIGZyb20gYmVpbmcgc29sZCBvbiBpdHMgd2Vic2l0ZXMgVGhlIGNvbXBhbnlzIHZlcnNpb24gb2YgYSBtdWNoZGViYXRlZCBjb3Jwb3JhdGUgc3RydWN0dXJlIGhhcyBiZWVuIGRlc2lnbmVkIHRvIG1pbmltaXplIHBvdGVudGlhbCByaXNrcyB0byBpbnZlc3RvcnMgSW4gYW55IGNhc2UgQWxpYmFiYSBoYXMgbGl0dGxlIHJlYXNvbiB0byBleHBlY3QgcmVndWxhdG9yeSB0cm91YmxlIFRoZSBTRUMgaGFzIGFzc2VudGVkIHRvIHRoZSBzYW1lIGRldmljZSBpbiBkb3plbnMgb2YgcHVibGljIG9mZmVyaW5ncyBzaW5jZSAyMDAwICAgICAgICAgICAgICAgICAgICAgICAgICAgU3RhZmYgUmV2aWV3IFRoZSBTRUNzIGFudGljaXBhdGVkIGFwcHJvdmFsIG9mIHRoZSBvZmZlcmluZyBkb2N1bWVudHMgd2lsbCBmb2xsb3cgYSBzdGFmZiByZXZpZXcgYW5kIHdvbnQgYmUgdm90ZWQgb24gYnkgdGhlIGZ1bGwgZml2ZW1lbWJlciBjb21taXNzaW9uIFRoZSBwcm9jZXNzIGlzbnQgZGVzaWduZWQgdG8ganVkZ2UgdGhlIG9mZmVyaW5nIG9ubHkgdG8gZW5zdXJlIGludmVzdG9ycyBhcmUgYWxlcnRlZCB0byBhbGwgcmlza3MgVGhlIGZlZGVyYWwgc3lzdGVtIGlzIHZlcnkgbXVjaCBhIG5vbm1lcml0IGJhc2VkIHJlZ3VsYXRvcnkgc3lzdGVtIHNhaWQgRGF2aWQgTWFydGluIGEgZm9ybWVyIGhlYWQgb2YgdGhlIFNFQ3MgZGl2aXNpb24gb2YgY29ycG9yYXRpb24gZmluYW5jZSB3aG8gaXMgbm93IGEgcGFydG5lciBhdCB0aGUgQ292aW5ndG9uICBCdXJsaW5nIGxhdyBmaXJtIGluIFdhc2hpbmd0b24gSXQgZWZmZWN0aXZlbHkgdGFrZXMgdGhlIHBvc2l0aW9uIHRoYXQgeW91IGNhbiBzZWxsIGFueXRoaW5nIHlvdSB3YW50IGFzIGxvbmcgYXMgeW91IGRpc2Nsb3NlIGl0IGFjY3VyYXRlbHkgQXNobGV5IFphbmR5IGFuIEFsaWJhYmEgc3Bva2Vzd29tYW4gc2FpZCBzaGUgY291bGRudCBjb21tZW50IGJlY2F1c2UgdGhlIGNvbXBhbnkgaXMgaW4gYSBwcmVJUE8gcXVpZXQgcGVyaW9kIEFzIHJlcXVpcmVkIHRoZSBjb21wYW55IGhhcyBsaXN0ZWQgcmlza3MgdG8gaW52ZXN0b3JzIGluIGl0cyBTRUMgZmlsaW5ncyBpbmNsdWRpbmcgd2FybmluZ3MgYWJvdXQgdGhlIHRyYW5zcGFyZW5jeSBvZiBpdHMgYXVkaXRzIGFuZCB0aGUgY2hhbmNlIHRoYXQgQ2hpbmVzZSByZWd1bGF0b3JzIGNvdWxkIGNoYWxsZW5nZSB0aGUgbGVnYWxpdHkgb2YgaXRzIHN0cnVjdHVyZSAgICAgICAgICAgICAgICAgICAgICAgICBQb3JrIENvbnRyb3ZlcnN5IEFsaWJhYmFzIFdhc2hpbmd0b24gcmVjZXB0aW9uIGNvbnRyYXN0cyB3aXRoIHRoZSBzcG90bGlnaHQgdHJhaW5lZCBvbiBvdGhlciBDaGluYXJlbGF0ZWQgaXNzdWVzIGluIGEgdG93biB3aGVyZSBhIG1lcmUgd2hpZmYgb2YgY29udHJvdmVyc3kgY2FuIHNwYXduIGNvbmdyZXNzaW9uYWwgaGVhcmluZ3MgdGFsa3Nob3cgZGViYXRlcyBhbmQgZHVlbGluZyBhZHZvY2FjeSByZXBvcnRzIFRoZSBIb3VzZSBBcHByb3ByaWF0aW9ucyBDb21taXR0ZWUgbGFzdCBtb250aCBhcHByb3ZlZCBsZWdpc2xhdGlvbiByZW5hbWluZyB0aGUgc3RyZWV0IGluIGZyb250IG9mIHRoZSBDaGluZXNlIEVtYmFzc3kgaW4gV2FzaGluZ3RvbiBmb3IgaW1wcmlzb25lZCBkaXNzaWRlbnQgTGl1IFhpYW9ibyBJbiAyMDEzIGEgQ2hpbmVzZSBjb21wYW55cyBhY3F1aXNpdGlvbiBvZiBTbWl0aGZpZWxkIEZvb2RzIEluYyBhIHBvcmsgcHJvZHVjZXIgc3RpcnJlZCBjb25ncmVzc2lvbmFsIGNvbXBsYWludHMgYWJvdXQgYWxsZWdlZCB0aHJlYXRzIHRvIFVTIGZvb2Qgc2VjdXJpdHkgQ29udHJpYnV0aW5nIHRvIEFsaWJhYmFzIG1vbWVudHVtIGlzIGEgZnJvdGh5IG1hcmtldCAgdGhlIFN0YW5kYXJkICBQb29ycyA1MDAgaW5kZXggaGFzIGRvdWJsZWQgb3ZlciB0aGUgcGFzdCBmaXZlIHllYXJzICBjb3VwbGVkIHdpdGggZ3JlYXQgaW52ZXN0b3IgaW50ZXJlc3QgaW4gQ2hpbmVzZSBJbnRlcm5ldCBmaXJtcyBNaWNoYWVsIFdlc3NlbCBhIG1lbWJlciBvZiB0aGUgVVNDaGluYSBTZWN1cml0eSBSZXZpZXcgQ29tbWlzc2lvbiB0aGF0IGxhc3QgbW9udGggcmVsZWFzZWQgdGhlIHJlcG9ydCBjcml0aWNhbCBvZiBBbGliYWJhcyBwcm9wb3NhbCBzYWlkIHRoZSBtYXJrZXRzIGVudGh1c2lhc20gcmVtaW5kcyBoaW0gb2YgdGhlIDE5OTBzIEludGVybmV0IGJvb20gYmVmb3JlIG1hbnkgdGVjaG5vbG9neSBzdG9ja3MgcGx1bmdlZCBpbiB2YWx1ZSBBIGxvdCBvZiBwZW9wbGUgYXJlIGxvb2tpbmcgd2l0aCBnbGFzc3lleWVkIGVudGh1c2lhc20gYXQgc29tZSBvZiB0aGVzZSBjb21wYW5pZXMgV2Vzc2VsIHNhaWQgICAgICAgICAgICAgICAgICAgICAgICAgSW50cmljYXRlIFJ1c2UgVGhlIFVTQ2hpbmEgY29tbWlzc2lvbnMgc3RhZmYgcmV2aWV3IHRvb2sgcGFydGljdWxhciBpc3N1ZSB3aXRoIHRoZSBjb3Jwb3JhdGUgc3RydWN0dXJlIHRoYXQgQ2hpbmVzZSB0ZWNoIGNvbXBhbmllcyBvZnRlbiB1c2UgdG8gZ28gcHVibGljIGVxdWF0aW5nIGl0IHRvIGFuIGludHJpY2F0ZSBydXNlIHRoYXQgbGVhdmVzIGEgc21hbGwgY2FkcmUgb2YgZXhlY3V0aXZlcyBpbiBjb250cm9sIHdoaWxlIGdpdmluZyBBbWVyaWNhbiBzaGFyZWhvbGRlcnMgZmV3IHJpZ3QABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxNC0wNy0xMFQwMDowMDowMFogVE8gMjAxNC0wNy0xMFQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDM5NzY=</field><field name="title" class="java.lang.String">rO0ABXQAPldhc2hpbmd0b24sIFJlZ3VsYXRvcnMgU2hydWcgYXQgQWxpYmFiYSdzIFBsYW4gZm9yIE1hc3NpdmUgSVBP</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcepHSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDA3MjRkOGEzODdhYzY5Y2Y=</field><field name="symbol" class="java.lang.String">rO0ABXQABFBFUlk=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcjytCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxKPXCj1wp</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxUeuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxD1wo9cKP</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxTMzMzMzN</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxTMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAF6hA==</field><field name="id" class="java.lang.String">rO0ABXQAEGVlMDVmOTQ5N2ViNWY4OWU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE6aAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDc1NTQ=</field><field name="title" class="java.lang.String">rO0ABXQAPlNFQyBKdWRnZSBCYXJzICdCaWcgRm91cicgQ2hpbmEgVW5pdHMgZm9yIDYgTW9udGhzIE92ZXIgQXVkaXRz</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUO9rwMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGQ4OGE3YWIzODgwMjIwOWQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABkpCWC5CRQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUPC1V8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCseuFHrhS</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCseuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCseuFHrhS</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCseuFHrhS</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCa4UeuFHs</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGY3ZjJjODQzMjgzYmIyNDM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFsSAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIwMDIx</field><field name="title" class="java.lang.String">rO0ABXQAOFlhaG9vJ3MgQWxpYmFiYSBXaW5kZmFsbCBNZWFucyBGaXJlcG93ZXIgdG8gQ2hhc2UgR29vZ2xl</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUXVDXSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDFlNGI2NWEyMTNkOGNhZWY=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0FEUw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUXaM9CAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBtQAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBt0euFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBtKuFHrhR7</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBtcFHrhR64</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBtcFHrhR64</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAA04xA==</field><field name="id" class="java.lang.String">rO0ABXQAEDY1Mzg5ZjQ4MDAxYzYyNDg=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHPwAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDU2NzU=</field><field name="title" class="java.lang.String">rO0ABXQAL0F1dGhvciBNaWNoYWVsIExld2lzOiBVUyBTdG9jayBNYXJrZXQgSXMgUmlnZ2Vk</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUURW8yAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDE3OWM0OWVkNzM5NWQ1ODM=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNDSFc=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUUWgiiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7bhR64Ueu</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7fXCj1wo9</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7JmZmZmZm</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7VHrhR64U</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7Fwo9cKPX</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAG2w3A==</field><field name="id" class="java.lang.String">rO0ABXQAEDFjMzJjZmY3NTJmMTdlZDg=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFqNAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDE1MTc=</field><field name="title" class="java.lang.String">rO0ABXQAOkNoaW5hIFNweS1DaGFyZ2UgUmV0YWxpYXRpb24gVGVtcGVyZWQgYnkgRWNvbm9taWMgU2xvd2Rvd24=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUYdJnyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGU1ZTI0NTM4OTdjZDIwZmU=</field><field name="symbol" class="java.lang.String">rO0ABXQABlJBRS5ERQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUYiTNiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+3Cj1wo9cK</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+3Cj1wo9cK</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+3Cj1wo9cK</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+3Cj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+3Cj1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABOIA==</field><field name="id" class="java.lang.String">rO0ABXQAEDgxYjQ5ZGJmNzhiMzA3ZGM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKA2AAAQ==</field></document></documents><date>2015-05-07T03:34:37-0500</date></cacheEntry>
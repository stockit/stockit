<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hPdmVyc2VhcyBzaGlwbWVudHMgdW5leHBlY3RlZGx5IGRlY2xpbmVkIDE4MSBwZXJjZW50IGluIEZlYnJ1YXJ5IGZyb20gYSB5ZWFyIGVhcmxpZXIgY3VzdG9tcyBkYXRhIHNob3dlZCBTYXR1cmRheSBjb21wYXJlZCB3aXRoIGFuYWx5c3RzIG1lZGlhbiBlc3RpbWF0ZSBmb3IgYSA3NSBwZXJjZW50IGluY3JlYXNlIFByb2R1Y2VyIHByaWNlcyBmZWxsIDIgcGVyY2VudCB0aGUgbW9zdCBzaW5jZSBKdWx5IGFjY29yZGluZyB0byBhIHN0YXRpc3RpY3MgYnVyZWF1IHJlcG9ydCBTdW5kYXkgZXh0ZW5kaW5nIHRoZSBsb25nZXN0IGRlY2xpbmUgc2luY2UgMTk5OSBEaXN0b3J0aW9ucyBmcm9tIHRoZSBMdW5hciBOZXcgWWVhciBob2xpZGF5IGFuZCBmYWxzZSBpbnZvaWNlcyB0aGF0IGluZmxhdGVkIHRyYWRlIG51bWJlcnMgbGFzdCB5ZWFyIGFsb25nIHdpdGggYSBsYXJnZXJ0aGFucHJvamVjdGVkIGluY3JlYXNlIGluIGltcG9ydHMgbWFrZSBpdCBoYXJkZXIgdG8gYXNzZXNzIHRoZSB0cnVlIHBpY3R1cmUgb2YgZ2xvYmFsIGFuZCBkb21lc3RpYyBkZW1hbmQgZm9yIENoaW5lc2UgZ29vZHMgU2xvd2luZyBjb25zdW1lcnByaWNlIGdhaW5zIG1heSBnaXZlIGxlYWRlcnMgbW9yZSBzcGFjZSB0byBzdXBwb3J0IGdyb3d0aCBpZiBuZWVkZWQgYXMgdGhleSBnYXVnZSB0aGUgZWZmZWN0cyBvZiB0aGUgbmF0aW9ucyBmaXJzdCBvbnNob3JlIGNvcnBvcmF0ZWJvbmQgZGVmYXVsdCBUaGVyZSBpcyBhbiBpbnRyaW5zaWMgaW5jb25zaXN0ZW5jeSBpbiB0aGVpciBwb2xpY3kgdGFyZ2V0IGFuZCB0aGUgcmVhbGl0eSBvZiB0aGUgZWNvbm9teSBMaXUgTGlHYW5nIGhlYWQgb2YgR3JlYXRlciBDaGluYSBlY29ub21pY3MgYXQgQXVzdHJhbGlhICBOZXcgWmVhbGFuZCBCYW5raW5nIEdyb3VwIEx0ZCBpbiBIb25nIEtvbmcgc2FpZCBpbiBhIHBob25lIGludGVydmlldyBHcm93dGggYmVsb3cgNzUgcGVyY2VudCBpbiB0aGUgZmlyc3QgaGFsZiBtYXkgc3B1ciB0aGUgZ292ZXJubWVudCB0byB1c2UgZmlzY2FsIHN0aW11bHVzIGFuZCB0aGV5IGRvIGhhdmUgcm9vbSB0byBkbyB0aGF0IGJ1dCBieSBkb2luZyBzbyBpdCB3aWxsIGNvbXByb21pc2UgQ2hpbmFzIGVjb25vbWljIHJlZm9ybSBhZ2VuZGEgaGUgc2FpZCAgICAgICAgICAgICAgICAgICAgICAgICBJbmZsYXRpb24gVGFyZ2V0IFByZW1pZXIgTGkgYW5ub3VuY2VkIHRoZSBnb2FsIGZvciAyMDE0IGdyb3NzIGRvbWVzdGljIHByb2R1Y3QgZ3Jvd3RoIGxhc3Qgd2VlayBhdCB0aGUgb3BlbmluZyBvZiB0aGUgYW5udWFsIG1lZXRpbmcgb2YgdGhlIE5hdGlvbmFsIFBlb3BsZXMgQ29uZ3Jlc3MgaW4gQmVpamluZyBhIHBhY2UgdW5jaGFuZ2VkIGZyb20gbGFzdCB5ZWFyIEhlIGFsc28gc2V0IGEgdGFyZ2V0IGZvciBjb25zdW1lciBpbmZsYXRpb24gb2YgYWJvdXQgMzUgcGVyY2VudCB0aGlzIHllYXIgdGhlIHNhbWUgYXMgaW4gMjAxMyBhbmQgYSBnb2FsIG9mIDc1IHBlcmNlbnQgZm9yIGdyb3d0aCBpbiBmb3JlaWduIHRyYWRlIFRoZSBjb25zdW1lciBwcmljZSBpbmRleCByb3NlIDIgcGVyY2VudCBpbiBGZWJydWFyeSBmcm9tIGEgeWVhciBlYXJsaWVyIGEgMTNtb250aCBsb3cgZGF0YSBmcm9tIHRoZSBOYXRpb25hbCBCdXJlYXUgb2YgU3RhdGlzdGljcyBzaG93ZWQgU3VuZGF5IENoaW5hcyBiZW5jaG1hcmsgU2hhbmdoYWkgQ29tcG9zaXRlIEluZGV4IHdoaWNoIGxhc3Qgd2VlayBoYWQgaXRzIGZpcnN0IGdhaW4gaW4gdGhyZWUgd2Vla3MgaGFzIGRyb3BwZWQgYWJvdXQgMTEgcGVyY2VudCBpbiB0aGUgcGFzdCB5ZWFyIFRoZSB5dWFuIHBvc3RlZCBpdHMgbGFyZ2VzdCB3ZWVrbHkgaW5jcmVhc2Ugc2luY2UgT2N0b2JlciBmb2xsb3dpbmcgdGhlIGJpZ2dlc3QgbW9udGhseSBkZWNsaW5lIHNpbmNlIHRoZSBnb3Zlcm5tZW50IHVuaWZpZWQgb2ZmaWNpYWwgYW5kIG1hcmtldCBleGNoYW5nZSByYXRlcyBhdCB0aGUgZW5kIG9mIDE5OTMgVGhlIHl1YW5zIDE0IHBlcmNlbnQgZHJvcCBpbiBGZWJydWFyeSBtYXkgaGF2ZSBoZWxwZWQgc3B1ciB0aGUgZGlzYXBwZWFyYW5jZSBvZiBvdmVyaW52b2ljaW5nIGEgcHJhY3RpY2UgdXNlZCB0byBkaXNndWlzZSBjYXBpdGFsIGluZmxvd3MgdGhhdCBwbGFndWVkIHRyYWRlIGRhdGEgaW4gdGhlIGZpcnN0IGZvdXIgbW9udGhzIG9mIGxhc3QgeWVhciBVbmRlcmludm9pY2luZyBvZiBleHBvcnRzIG1heSBoYXZlIG9jY3VycmVkIGluIHRoZSBzZWNvbmQgaGFsZiBvZiBGZWJydWFyeSB0byBmYWNpbGl0YXRlIG1vbmV5IG91dGZsb3dzIExvdWlzIEt1aWpzIGNoaWVmIENoaW5hIGVjb25vbWlzdCBhdCBSb3lhbCBCYW5rIG9mIFNjb3RsYW5kIEdyb3VwIFBsYyBpbiBIb25nIEtvbmcgc2FpZCBpbiBhIG5vdGUgICAgICAgICAgICAgICAgICAgICAgICAgQ29tcGxpY2F0ZSBQbGFucyBJbXBvcnRzIHJvc2UgMTAxIHBlcmNlbnQgaW4gRmVicnVhcnkgZnJvbSBhIHllYXIgZWFybGllciBtb3JlIHRoYW4gcHJvamVjdGVkIGxlYXZpbmcgYSB0cmFkZSBkZWZpY2l0IG9mIDIzIGJpbGxpb24gdGhlIGJpZ2dlc3QgaW4gdHdvIHllYXJzIGFjY29yZGluZyB0byBjdXN0b21zIGRhdGEgQW55IHdlYWtlbmluZyBvZiBnbG9iYWwgZGVtYW5kIGFzIHdlbGwgYXMgZmFsbGluZyBwcmljZXMgZm9yIG1hbnVmYWN0dXJlcnMgbWF5IGNvbXBsaWNhdGUgcGxhbnMgYnkgTGkgYW5kIFByZXNpZGVudCBYaSBKaW5waW5nIHRvIGNhcnJ5IG91dCB0aGUgYnJvYWRlc3QgZWNvbm9taWNwb2xpY3kgc2hpZnRzIHNpbmNlIHRoZSAxOTkwcyB3aGlsZSBjbGFtcGluZyBkb3duIG9uIGRlYnQgcmlza3MgYW5kIHBvbGx1dGlvbiBTaGFuZ2hhaSBDaGFvcmkgU29sYXIgRW5lcmd5IFNjaWVuY2UgIFRlY2hub2xvZ3kgQ28gYSBtYWtlciBvZiBzb2xhciBjZWxscyBvbiBGcmlkYXkgYmVjYW1lIHRoZSBmaXJzdCBjb21wYW55IHRvIGRlZmF1bHQgaW4gQ2hpbmFzIG9uc2hvcmUgYm9uZCBtYXJrZXQgYWZ0ZXIgZmFpbGluZyB0byBwYXkgZnVsbCBpbnRlcmVzdCBkdWUgVGhlIGNvYWwgaW5kdXN0cnkgaW4gbm9ydGhlcm4gU2hhbnhpIHByb3ZpbmNlIHN1ZmZlcmVkIGdyYXZlbHkgYmVjYXVzZSBvZiBhIHNsdW1wIGluIHByaWNlcyBsYXN0IHllYXIgR292ZXJub3IgTGkgWGlhb3Blbmcgc2FpZCBNYXJjaCA2IGluIEJlaWppbmcgICAgICAgICAgICAgICAgICAgICAgICAgIEJldmVyYWdlIFNhbGVzIEluIGEgbW9yZSBwb3NpdGl2ZSBzaWduIGdyb3d0aCB0aGlzIHllYXIgYXQgSGFuZ3pob3UgV2FoYWhhIEdyb3VwIENvIHRoZSBsYXJnZXN0IENoaW5lc2UgYmV2ZXJhZ2UgbWFrZXIgaXMgbm90IHRvbyBiYWQgYW5kIHNhbGVzIGFyZSBsaWtlbHkgdG8gaW5jcmVhc2UgYWJvdXQgMjAgcGVyY2VudCBDaGFpcm1hbiBab25nIFFpbmdob3Ugc2FpZCBTdW5kYXkgYXQgdGhlIE5QQyBtZWV0aW5nIEN1c3RvbXMgZGF0YSBzaG93ZWQgb3ZlcnNlYXMgc2hpcG1lbnRzIGZlbGwgMTYgcGVyY2VudCBpbiB0aGUgZmlyc3QgdHdvIG1vbnRocyBmcm9tIGEgeWVhciBlYXJsaWVyIENoaW5hcyBleHBvcnRzIHRvIEhvbmcgS29uZyB3aGljaCBkaXZlcmdlZCBsYXN0IHllYXIgZnJvbSB0aGUgY2l0eXMgZGF0YSBvbiBpbXBvcnRzIGZyb20gdGhlIG1haW5sYW5kIGZlbGwgMjEgcGVyY2VudCBjb21wYXJlZCB3aXRoIGEgNjEgcGVyY2VudCBpbmNyZWFzZSBpbiB0aGUgSmFudWFyeUZlYnJ1YXJ5IHBlcmlvZCBvZiAyMDEzIENoaW5lc2UgcmVndWxhdG9ycyBpbiBNYXkgc3RhcnRlZCBhIGNyYWNrZG93biBvbiBwcmFjdGljZXMgdGhhdCBpbmZsYXRlZCB0cmFkZSBkYXRhIEVjb25vbWlzdHMgZnJvbSBVQlMgQUcgUkJTIGFuZCBCYW5rIG9mIEFtZXJpY2EgQ29ycCBlc3RpbWF0ZSBleHBvcnRzIGZvciBKYW51YXJ5IGFuZCBGZWJydWFyeSBjb21iaW5lZCBkaWQgZXhwYW5kIGFmdGVyIHRha2luZyBpbnRvIGFjY291bnQgaW5mbGF0ZWQgZGF0YSBsYXN0IHllYXIgVUJTIHNlZXMgdW5kZXJseWluZyBleHBvcnQgZ3Jvd3RoIG9mIGFib3V0IDYgcGVyY2VudCB3aGlsZSBSQlMgZXN0aW1hdGVzIDMxIHBlcmNlbnQgYW5kIEJhbmsgb2YgQW1lcmljYSBwdXQgdGhlIGZpZ3VyZSBhdCBhcm91bmQgNyBwZXJjZW50IHRvIDggcGVyY2VudCAgICAgICAgICAgICAgICAgICAgIERpc2FwcG9pbnRtZW50cyBQb3NzaWJsZSBJbiB0ZXJtcyBvZiB0aGUgdW5kZXJseWluZyBtb21lbnR1bSB3ZSBleHBlY3QgZXhwb3J0IGdyb3d0aCBpbiAyMDE0IHRvIGNvbnRpbnVlIHRvIGRldmVsb3AgZmF2b3JhYmx5IHdyb3RlIFJCU3MgS3VpanMgYSBmb3JtZXIgV29ybGQgQmFuayBlY29ub21pc3QgQXQgdGhlIHNhbWUgdGltZSB0aGUgZ2xvYmFsIHJlY292ZXJ5IGlzIG5vdCBhIHN0ZWVwIG9uZSBhbmQgZGlzYXBwb2ludG1lbnRzIGFyZSBwb3NzaWJsZSBoZSBzYWlkIEludmVzdG9ycyB0aGlzIHdlZWsgd2lsbCBnZXQgbW9yZSBkZXRhaWxzIG9uIHRoZSBlY29ub215cyBwZXJmb3JtYW5jZSBhcyB3ZWxsIGFzIHRoZSBvdXRsb29rIGZyb20gc2VuaW9yIGxlYWRlcnMgVGhlIHN0YXRpc3RpY3MgYnVyZWF1IHdpbGwgcHJvdmlkZSBkYXRhIG9uIEphbnVhcnlGZWJydWFyeSBpbmR1c3RyaWFsIHByb2R1Y3Rpb24gcmV0YWlsIHNhbGVzIGFuZCBmaXhlZGFzc2V0IGludmVzdG1lbnQgb24gTWFyY2ggMTMgVGhlIGNlbnRyYWwgYmFuayB3aWxsIHB1Ymxpc2ggZmlndXJlcyBmb3IgRmVicnVhcnkgY3JlZGl0IGFuZCBtb25leSBzdXBwbHkgYnkgTWFyY2ggMTUgUGVvcGxlcyBCYW5rIG9mIENoaW5hIEdvdmVybm9yIFpob3UgWGlhb2NodWFuIHdpbGwgZ2l2ZSBhIGJyaWVmaW5nIG9uIE1hcmNoIDExIGFuZCBQcmVtaWVyIExpIHdpbGwgaG9sZCBhIHByZXNzIGNvbmZlcmVuY2Ugb24gTWFyY2ggMTMgU3ViZHVlZCBpbmZsYXRpb24gYmVsb3cgdGhlIGdvdmVybm1lbnRzIDIwMTQgdGFyZ2V0IHdpbGwgZ2l2ZSB0aGUgY2VudHJhbCBiYW5rIG1vcmUgcm9vbSB0byBlYXNlIGxpcXVpZGl0eSBhbmQgbWFpbnRhaW4gbG93ZXIgbW9uZXQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMC0wNi0xMFQwMDowMDowMFogVE8gMjAxMy0wNy0zMFQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDkwMzY=</field><field name="title" class="java.lang.String">rO0ABXQAQkNoaW5h4oCZcyBFY29ub215IFNob3dzIFNpZ25zIG9mIFN0YWJpbGl6aW5nIGFzIEV4cG9ydHMgU3RyZW5ndGhlbg==</field><field name="content" class="java.lang.String">rO0ABXQUTkNoaW5h4oCZcyBleHBvcnRzIGFuZCBtb25leSBzdXBwbHkgZ3JldyBtb3JlIHRoYW4gZXN0aW1hdGVkIGluIFNlcHRlbWJlciwgc2lnbmFsaW5nIHRoYXQgdGhlIHdvcmxk4oCZcyBzZWNvbmQtYmlnZ2VzdCBlY29ub215IG1heSBiZSBzdGFiaWxpemluZyBhZnRlciBhIHNsb3dkb3duIHRoYXQgYmVnYW4gaW4gdGhlIGZpcnN0IHF1YXJ0ZXIgb2YgMjAxMS4gT3ZlcnNlYXMgc2hpcG1lbnRzIGluY3JlYXNlZCA5LjkgcGVyY2VudCBmcm9tIGEgeWVhciBlYXJsaWVyLCB0aGUgY3VzdG9tcyBhZG1pbmlzdHJhdGlvbiBzYWlkIFNhdHVyZGF5IGluIEJlaWppbmcuIFRoYXQgd2FzIG1vcmUgdGhhbiB0aGUgNS41IHBlcmNlbnQgbWVkaWFuIGVzdGltYXRlIGluIGEgQmxvb21iZXJnIE5ld3Mgc3VydmV5IG9mIGVjb25vbWlzdHMuIE0yIG1vbmV5IHN1cHBseSBnYWluZWQgMTQuOCBwZXJjZW50LCB0aGUgZmFzdGVzdCBwYWNlIHNpbmNlIEp1bmUgMjAxMSwgYSBjZW50cmFsIGJhbmsgcmVwb3J0IHNob3dlZCB0aGUgc2FtZSBkYXkuIEluZmxhdGlvbiBudW1iZXJzIGR1ZSBNb25kYXkgYW5kIGEgVGh1cnNkYXkgcmVwb3J0IG9uIHRoZSB0aGlyZC1xdWFydGVyIGVjb25vbXkgd2lsbCBjb21wbGV0ZSB0aGUgcGljdHVyZSBhcyBvZmZpY2lhbHMgYXNzZXNzIHdoZXRoZXIgbW9yZSBtZWFzdXJlcyBhcmUgbmVlZGVkIHRvIHN1c3RhaW4gZ3Jvd3RoIGFzIHRoZSBDb21tdW5pc3QgUGFydHkgcHJlcGFyZXMgZm9yIGEgb25jZS1hLWRlY2FkZSBsZWFkZXJzaGlwIGhhbmRvdmVyIHN0YXJ0aW5nIG5leHQgbW9udGguIEF0IGFuIEludGVybmF0aW9uYWwgTW9uZXRhcnkgRnVuZCBtZWV0aW5nIGluIFRva3lvIFN1bmRheSwgY2VudHJhbCBiYW5rIG9mZmljaWFsIFlpIEdhbmcgc2FpZCB0aGF0IGJ1YmJsZSByaXNrcyByZW1haW4gaW4gaG91c2luZyBtYXJrZXRzIGluIG1ham9yIGNpdGllcyBhbmQgc3RpbXVsdXMgd2lsbCBiZSByZXN0cmljdGVkIHRvIGFuIOKAnGFwcHJvcHJpYXRl4oCdIGxldmVsLiDigJxCZXR0ZXItdGhhbi1leHBlY3RlZCBleHBvcnQgZ3Jvd3RoIGlzIGxpa2VseSB0byBoZWxwIHN1cHBvcnQgZW1wbG95bWVudCBhbmQgcmVkdWNlIHByZXNzdXJlIGZvciBtb3JlIHBvbGljeSBlYXNpbmcgYWhlYWQgb2YgdGhlIGxlYWRlcnNoaXAgdHJhbnNpdGlvbizigJ0gc2FpZCBDaGFuZyBKaWFuLCBhIEhvbmcgS29uZy1iYXNlZCBlY29ub21pc3QgYXQgQmFyY2xheXMgUGxjLiDigJxNb25ldGFyeSBlYXNpbmcgaGFzIGJlZW4gY29uc3RyYWluZWQgYnkgY29uY2VybnMgYWJvdXQgYSByZWJvdW5kIGluIHByb3BlcnR5IHByaWNlcyBhbmQgbWVkaXVtLXRlcm0gaW5mbGF0aW9uIHJpc2tzLuKAnSBUaGUgbGFjayBvZiBhIOKAnGJpZ+KAnSBmaXNjYWwgc3RpbXVsdXMgYWxzbyBwb2ludHMgdG8gY29uY2VybnMgYWJvdXQgcmlzaW5nIGdvdmVybm1lbnQgZGVidCwgYmFua3PigJkgbm9uLXBlcmZvcm1pbmcgbG9hbnMsIGFuZCBpbmVmZmljaWVudCBpbnZlc3RtZW50LCBzaGUgc2FpZC4gSW5mbGF0aW9uIEZvcmVjYXN0IEluZmxhdGlvbiB3YXMgMS45IHBlcmNlbnQgbGFzdCBtb250aCwgY2xvc2UgdG8gYSB0d28teWVhciBsb3csIGFjY29yZGluZyB0byB0aGUgbWVkaWFuIGZvcmVjYXN0IGluIGEgQmxvb21iZXJnIE5ld3MgIHN1cnZleS4gQ2hpbmHigJlzIGdyb3NzIGRvbWVzdGljIHByb2R1Y3QgZXhwYW5kZWQgNy40IHBlcmNlbnQgaW4gIHRoZSB0aGlyZCBxdWFydGVyIGZyb20gYSB5ZWFyIGVhcmxpZXIsIGFjY29yZGluZyB0byB0aGUgbWVkaWFuICBpbiBhIHNlcGFyYXRlIHN1cnZleSwgdGhlIHNldmVudGggcXVhcnRlcmx5IGRlY2VsZXJhdGlvbi4gWWksIGEgZGVwdXR5IGdvdmVybm9yIGF0IHRoZSBjZW50cmFsIGJhbmssIHNhaWQgU3VuZGF5IHRoYXQgd2hpbGUgdGhpcyB5ZWFy4oCZcyBpbmZsYXRpb24gcmF0ZSBpcyDigJxmaW5l4oCdIGFuZCBtYXkgYmUgMi43IHBlcmNlbnQgZm9yIHRoZSBmdWxsIHllYXIsIGxvbmdlci10ZXJtIHRocmVhdHMgYXJlIGZyb20gYWdyaWN1bHR1cmFsIGNvc3RzIGFuZCBwcmljZXMgZm9yIGltcG9ydGVkIHJhdyBtYXRlcmlhbHMsIGNvbW1vZGl0aWVzIGFuZCBlbmVyZ3ksIHdoaWNoIGNhbiBiZSBkcml2ZW4gdXAgYnkgZ2xvYmFsIG1vbmV0YXJ5IGVhc2luZy4gVGhlIElNRiBsYXN0IHdlZWsgcmVkdWNlZCBpdHMgZXN0aW1hdGUgZm9yIENoaW5h4oCZcyBncm93dGggdGhpcyB5ZWFyIHRvIDcuOCBwZXJjZW50LCB3aGljaCB3b3VsZCBiZSB0aGUgd2Vha2VzdCBwYWNlIHNpbmNlIDE5OTksIGFzIEV1cm9wZeKAmXMgZGVidCBjcmlzaXMgY3JpbXBzIGV4cG9ydHMuIEFsY29hIEluYy4sIHRoZSBsYXJnZXN0IFUuUy4gYWx1bWludW0gcHJvZHVjZXIsIGN1dCBpdHMgZm9yZWNhc3QgZm9yIGdsb2JhbCBjb25zdW1wdGlvbiBvZiB0aGUgbWV0YWwgb24gc2xvd2luZyBDaGluZXNlIGRlbWFuZC4gTGltaXRpbmcgU3RpbXVsdXMgQ2hpbmEgaGFzIHJlZnJhaW5lZCBmcm9tIGltcGxlbWVudGluZyBzdGltdWx1cyBvbiB0aGUgc2NhbGUgb2YgdGhlIDQgdHJpbGxpb24geXVhbiAoJDU4NiBiaWxsaW9uIGF0IHRoZSB0aW1lKSBwYWNrYWdlIGl0IHVubGVhc2hlZCBhdCB0aGUgZW5kIG9mIDIwMDggZHVyaW5nIHRoZSBnbG9iYWwgZmluYW5jaWFsIGNyaXNpcy4gVGhlIHJlc3BvbnNlIHRvIHRoZSBsYXRlc3Qgc2xvd2Rvd24gaGFzIGluY2x1ZGVkIHR3byBjdXRzIGluICBpbnRlcmVzdCByYXRlcywgdGhyZWUgcmVkdWN0aW9ucyBpbiBiYW5rIHJlc2VydmUgcmVxdWlyZW1lbnRzLCAgbG93ZXIgdGF4ZXMsIGhpZ2hlciBzcGVuZGluZyBvbiBzb2NpYWwgd2VsZmFyZSBhbmQgYWNjZWxlcmF0ZWQgaW52ZXN0bWVudCBhcHByb3ZhbHMuIFRoZSBleHBhbnNpb24gaW4gTTIgd2FzIGRyaXZlbiBieSB0aGUgY2VudHJhbCBiYW5rIHB1bXBpbmcgcmVjb3JkIGFtb3VudHMgb2YgY2FzaCBpbnRvIHRoZSBtb25leSBtYXJrZXRzIHRocm91Z2ggcmV2ZXJzZSByZXB1cmNoYXNlIGFncmVlbWVudHMsIHNhaWQgSHUgWWlmYW4sIEhvbmcgS29uZy1iYXNlZCBjaGllZiBlY29ub21pc3QgYXQgSGFpdG9uZyBJbnRlcm5hdGlvbmFsIFNlY3VyaXRpZXMgR3JvdXAuIE5ldyBsZW5kaW5nIHdhcyBiZWxvdyBlY29ub21pc3Rz4oCZIGVzdGltYXRlcywgZGF0YSBzaG93ZWQgbGFzdCB3ZWVrLiBBbmFseXN0cycgIG1lZGlhbiBmb3JlY2FzdCBoYWQgYmVlbiBmb3IgYSAxMy43IHBlcmNlbnQgZ2FpbiBpbiBNMi4gVGhlIGNlbnRyYWwgYmFua+KAmXMgT2N0LiAxMyByZXBvcnQgYWxzbyBzaG93ZWQgdGhlIG5hdGlvbuKAmXMgZm9yZWlnbi1leGNoYW5nZSByZXNlcnZlcywgdGhlIHdvcmxk4oCZcyBsYXJnZXN0LCByb3NlIHRvICQzLjI5IHRyaWxsaW9uIGluIFNlcHRlbWJlciBmcm9tICQzLjI0IHRyaWxsaW9uIGluIEp1bmUuIEVjb25vbWljIE1vbWVudHVtIFRoZSB0cmFkZSBhbmQgbW9uZXkgc3VwcGx5IGRhdGEg4oCcc3VnZ2VzdCBlY29ub21pYyBtb21lbnR1bSBpbiBDaGluYSBtYXkgYmUgcGlja2luZyB1cCzigJ0gc2FpZCBaaGFuZyBaaGl3ZWksIGNoaWVmIENoaW5hIGVjb25vbWlzdCB3aXRoIE5vbXVyYSBIb2xkaW5ncyBJbmMuIGluIEhvbmcgS29uZy4g4oCcVGhlc2UgdXBzaWRlIHN1cnByaXNlcyBhcmUgY29uc2lzdGVudCB3aXRoIG90aGVyIHBvc2l0aXZlIHNpZ25hbHMgaW4gcmVjZW50IHdlZWtz4oCdIGluZGljYXRpbmcgZ3Jvd3RoIG1heSByZWJvdW5kIHRoaXMgcXVhcnRlciwgaGUgc2FpZC4gU2hpcG1lbnRzIHRvIHRoZSBFdXJvcGVhbiBVbmlvbiBmZWxsIDEwLjcgcGVyY2VudCBsYXN0IG1vbnRoIGZyb20gYSB5ZWFyIGVhcmxpZXIuIEF0IHRoZSBzYW1lIHRpbWUsIHRob3NlIHRvIFNvdXRoZWFzdCBBc2lhbiBuYXRpb25zIGp1bXBlZCAyNS41IHBlcmNlbnQgYW5kIHNhbGVzIHRvIHRoZSBVLlMuIGluY3JlYXNlZCBhdCB0aGUgZmFzdGVzdCBwYWNlIGluIHRocmVlIG1vbnRocy4gSW1wb3J0cyByb3NlIDIuNCBwZXJjZW50LCBpbiBsaW5lIHdpdGggdGhlIG1lZGlhbiBlY29ub21pc3QgZXN0aW1hdGUsIGxlYXZpbmcgYSB0cmFkZSBzdXJwbHVzIG9mICQyNy43IGJpbGxpb24sIHRoZSBiaWdnZXN0IHNpbmNlIEp1bmUuIEluIHRoZSBmaXJzdCBuaW5lIG1vbnRocywgdGhlIHN1cnBsdXMgd2lkZW5lZCBhYm91dCAzOCAgcGVyY2VudCBmcm9tIGEgeWVhciBlYXJsaWVyIHRvICQxNDguMyBiaWxsaW9uLCBjdXN0b21zIGRhdGEgc2hvdy4gIFRoYXQgbWF5IHByb3ZpZGUgYW1tdW5pdGlvbiB0byBSZXB1YmxpY2FuIHByZXNpZGVudGlhbCBjYW5kaWRhdGUgIE1pdHQgUm9tbmV5LCB3aG8gcGxlZGdlcyB0byBkZXNpZ25hdGUgdGhlIG5hdGlvbiBhIGN1cnJlbmN5ICBtYW5pcHVsYXRvciBpZiBlbGVjdGVkLCBhIHN0ZXAgdGhlIFUuUy4gZ292ZXJubWVudCBoYXNu4oCZdCB0YWtlbiAgc2luY2UgMTk5NC4gR2VpdGhuZXLigJlzIFRha2UgVGhlIHRyYWRlIGRhdGEgaW5kaWNhdGVkIHRoYXQgdGhlIHZhbHVlIG9mIENoaW5h4oCZcyBleHBvcnRzIHRvIHRoZSBVLlMuIGV4Y2VlZGVkIGl0cyBpbXBvcnRzIGZyb20gdGhlIG5hdGlvbiBieSBhYm91dCAkMjEgYmlsbGlvbiBpbiBTZXB0ZW1iZXIuIFUuUy4gVHJlYXN1cnkgU2VjcmV0YXJ5IFRpbW90aHkgRi4gR2VpdGhuZXIgc2FpZCBpbiBUb2t5byBvbiBPY3QuIDEzIHRoYXQgd2hpbGUg4oCcc29tZSBwcm9ncmVzc+KAnSBoYXMgYmVlbiBtYWRlIHRvd2FyZCBhIG1vcmUgYmFsYW5jZWQgZWNvbm9taWMgcmVsYXRpb25zaGlwIHdpdGggQ2hpbmEsIG1vcmUgaXMgbmVlZGVkLiBBbnRpLUNoaW5hIHJoZXRvcmljIG1heSBmZWF0dXJlIGluIHRoZSBsZWFkLXVwIHRvIHRoZSBwcmVzaWRlbnRpYWwgZWxlY3Rpb24gb24gTm92LiA2LCBzYWlkIExpdSBMaS1HYW5nLCBhIEhvbmcgS29uZy0gYmFzZWQgZWNvbm9taXN0IHdpdGggQXVzdHJhbGlhICYgTmV3IFplYWxhbmQgQmFua2luZyBHcm91cCBMdGQuIFRoZSB5dWFuLCB3aGljaCB0b3VjaGVkIGEgMTkteWVhciBoaWdoIGFnYWluc3QgdGhlIGRvbGxhciBsYXN0IHdlZWssIG1heSBhcHByZWNpYXRlIHVudGlsIHRoZW4gaW4gcmVzcG9uc2UgdG8gdGhlIHByZXNzdXJlLCBMaXUgc2FpZC4gVGhlIGN1cnJlbmN5IGhhcyBnYWluZWQgYWJvdXQgMiBwZXJjZW50IHNpbmNlIEp1bHkgMjUuIEl0IGNsb3NlZCBsYXN0IHdlZWsgYXQgNi4yNjcyIHBlciBkb2xsYXIu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATpdpJyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGU3ZGI5NTZkZTk0ZTQ0ODg=</field><field name="symbol" class="java.lang.String">rO0ABXQAA05PVg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATpiyviAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBTi4UeuFHs</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBTrhR64Ueu</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBTWPXCj1wp</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBTp64UeuFI</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBQ8euFHrhS</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAB2tqA==</field><field name="id" class="java.lang.String">rO0ABXQAEDY1MGU3NmQyN2U2NWQyZTI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE5AAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM3NjE=</field><field name="title" class="java.lang.String">rO0ABXQAOENoaW5hIFRpZ2h0ZW5pbmcgUHJlc3N1cmUgRWFzZXMgYXMgR3Jvd3RoIFJlY292ZXJ5IFNsb3dz</field><field name="content" class="java.lang.String">rO0ABXQT50V4cGFuc2lvbiBpbiBpbmR1c3RyaWVzIGluY2x1ZGluZyByZXRhaWxpbmcsIHRyYW5zcG9ydGF0aW9uIGFuZCBiYW5raW5nIHdhcyB0aGUgc2xvd2VzdCBpbiBmaXZlIG1vbnRocyBpbiBGZWJydWFyeSwgYW4gb2ZmaWNpYWwgc3VydmV5IG9mIHB1cmNoYXNpbmcgbWFuYWdlcnMgc2hvd2VkLiBHYXVnZXMgcmVsZWFzZWQgTWFyY2ggMSBwb2ludGVkIHRvIG1hbnVmYWN0dXJpbmcgZ3Jvd3RoIGNvb2xpbmcuIFByZW1pZXIgV2VuIEppYWJhbyB3aWxsIG91dGxpbmUgZWNvbm9taWMgcG9saWNpZXMgYXQgdGhlIHN0YXJ0IG9mIHRoZSBOYXRpb25hbCBQZW9wbGXigJlzIENvbmdyZXNzIHNlc3Npb24gaW4gQmVpamluZyBhcyB0aGUgZ292ZXJubWVudCB0cmllcyB0byBzdXN0YWluIGEgcmVjb3ZlcnkgZnJvbSB0aGUgc2xvd2VzdCBncm93dGggaW4gMTMgeWVhcnMgd2l0aG91dCB0cmlnZ2VyaW5nIGNvbnN1bWVyIGFuZCBhc3NldC1wcmljZSBpbmZsYXRpb24uIFdoaWxlIGF1dGhvcml0aWVzIGhhdmUgcGxlZGdlZCB0byBib29zdCBpbmNvbWVzIGFuZCBjb25zdW1wdGlvbiwgbGFzdCB3ZWVr4oCZcyBkZWNpc2lvbiB0byBpbnRlbnNpZnkgYSB0aHJlZS15ZWFyIGVmZm9ydCB0byB0YW1lIHRoZSBwcm9wZXJ0eSBtYXJrZXQgbWF5IGRhbXAgdGhlIG5hdGlvbuKAmXMgcmVib3VuZC4g4oCcVGhlIHJlY2VudCBiYXRjaCBvZiBkYXRhIHN1Z2dlc3QgdGhlIGN1cnJlbnQgcmVjb3ZlcnkgaXMgcmVsYXRpdmVseSB3ZWFrIGNvbXBhcmVkIHRvIHBhc3Qgb25lcywgd2hpY2ggbWVhbnMgdGhlIGdvdmVybm1lbnQgbWF5IGRlbGF5IHRoZSB0aW1pbmcgb2YgbW9uZXRhcnkgdGlnaHRlbmluZyB0byBzdXBwb3J0IGdyb3d0aCzigJ0gc2FpZCBaaGFuZyBaaGl3ZWksIGNoaWVmIENoaW5hIGVjb25vbWlzdCBhdCBOb211cmEgSG9sZGluZ3MgSW5jLiBpbiBIb25nIEtvbmcsIHdobyBwcmV2aW91c2x5IHdvcmtlZCBmb3IgdGhlIEludGVybmF0aW9uYWwgTW9uZXRhcnkgRnVuZC4gVGhlIFNoYW5naGFpIFN0b2NrIEV4Y2hhbmdlIFByb3BlcnR5IEluZGV4IGZlbGwgNy42IHBlcmNlbnQgYXMgb2YgOTo0MSBhLm0uIGxvY2FsIHRpbWUsIG9uIHBhY2UgZm9yIHRoZSB3b3JzdCBkZWNsaW5lIHNpbmNlIDIwMDkuIFRoZSBiZW5jaG1hcmsgU2hhbmdoYWkgQ29tcG9zaXRlIEluZGV4IGRyb3BwZWQgMi4yIHBlcmNlbnQuIEEgc2VydmljZXMgaW5kdXN0cmllcyBnYXVnZSBmZWxsIHRvIDU0LjUgaW4gRmVicnVhcnkgZnJvbSA1Ni4yIGluIEphbnVhcnksIHRoZSBOYXRpb25hbCBCdXJlYXUgb2YgU3RhdGlzdGljcyBhbmQgQ2hpbmEgRmVkZXJhdGlvbiBvZiBMb2dpc3RpY3MgYW5kIFB1cmNoYXNpbmcgc2FpZCB5ZXN0ZXJkYXkuIE1hbnVmYWN0dXJpbmcgR2F1Z2VzIFRoZSBmZWRlcmF0aW9u4oCZcyBtYW51ZmFjdHVyaW5nIFBNSSByZWxlYXNlZCBNYXJjaCAxIGRyb3BwZWQgdG8gNTAuMSwgdGhlIHdlYWtlc3QgbGV2ZWwgaW4gZml2ZSBtb250aHMsIHdoaWxlIGEgc2VwYXJhdGUgZ2F1Z2UgZnJvbSBIU0JDIEhvbGRpbmdzIFBsYyBhbmQgTWFya2l0IEVjb25vbWljcyBmZWxsIHRvIGEgZm91ci1tb250aCBsb3cgb2YgNTAuNC4gUmVhZGluZ3MgYWJvdmUgNTAgaW5kaWNhdGUgZXhwYW5zaW9uIHdoaWxlIHRob3NlIGJlbG93IHNpZ25hbCBhIGNvbnRyYWN0aW9uLiBIU0JDIHdpbGwgcmVsZWFzZSBpdHMgc2VydmljZXMgaW5kZXguIFRoZSBQZW9wbGXigJlzIEJhbmsgb2YgQ2hpbmEgaXMg4oCcZnVsbHkgY29uZmlkZW50IG9mIGNvbnRyb2xsaW5nIGluZmxhdGlvbiB0aGlzIHllYXIs4oCdIERlcHV0eSBHb3Zlcm5vciBZaSBHYW5nIHNhaWQgaW4gQmVpamluZyB5ZXN0ZXJkYXkuIFdoaWxlIHRoZSBuYXRpb24gZmFjZXMg4oCcc29tZeKAnSBwcmVzc3VyZSwgaGUgZXN0aW1hdGVkIHRoZSBjb25zdW1lci1wcmljZSBpbmRleCB3aWxsIHJpc2UgYWJvdXQgMyBwZXJjZW50IGluIDIwMTMsIGNvbXBhcmVkIHdpdGggMi42IHBlcmNlbnQgbGFzdCB5ZWFyLiBaaGFuZyBzYWlkIHRoZSBjZW50cmFsIGJhbmsgbWF5IHJhaXNlIGludGVyZXN0IHJhdGVzIGluIHRoZSB0aGlyZCBxdWFydGVyIGFzIGluZmxhdGlvbiBhbmQgZGVidCBjb25jZXJucyBtb3VudC4gVGhlIHdvcmxk4oCZcyBzZWNvbmQtbGFyZ2VzdCBlY29ub215IGV4cGFuZGVkIDcuOCBwZXJjZW50IGxhc3QgeWVhciwgdGhlIHdlYWtlc3QgcGFjZSBzaW5jZSAxOTk5LiBUaGUgbWVkaWFuIGVzdGltYXRlIG9mIDQzIGFuYWx5c3RzIHN1cnZleWVkIGluIEZlYnJ1YXJ5IGJ5IEJsb29tYmVyZyBOZXdzIGlzIGZvciBhIHBpY2t1cCB0byA4LjEgcGVyY2VudCBncm93dGggaW4gMjAxMy4gSW5mbGF0aW9uIEdvYWwgV2VuIG1heSBhbm5vdW5jZSBhbiBpbmZsYXRpb24gdGFyZ2V0IGluIGhpcyBzcGVlY2ggdG9tb3Jyb3cuIFBvbGljeSBtYWtlcnMgYWltIHRvIGtlZXAgY29uc3VtZXItcHJpY2UgZ2FpbnMgYXQgYWJvdXQgMy41IHBlcmNlbnQsIEJsb29tYmVyZyBOZXdzIHJlcG9ydGVkIGluIERlY2VtYmVyLCBjaXRpbmcgdHdvIGJhbmsgZXhlY3V0aXZlcyBhbmQgYSByZWd1bGF0b3J5IG9mZmljaWFsIGJyaWVmZWQgb24gdGhlIG1hdHRlci4gV2VuIHNldCBhIGdvYWwgb2YgNCBwZXJjZW50IGZvciAyMDEyLiBNb2RlcmF0aW5nIGluZmxhdGlvbiB0aGlzIG1vbnRoIHdpbGwgcmVsaWV2ZSBwcmVzc3VyZSBmb3IgdGlnaHRlbmluZywgU29uZyBHdW9xaW5nLCBhbiBhY2FkZW1pYyBhZHZpc2VyIHdobyBzaXRzIG9uIHRoZSBjZW50cmFsIGJhbmvigJlzIG1vbmV0YXJ5IHBvbGljeSBjb21taXR0ZWUsIHNhaWQgTWFyY2ggMi4gU29uZywgb25lIG9mIHRocmVlIGFjYWRlbWljcyB3aG8gc2l0IG9uIHRoZSBQQk9D4oCZcyBtb25ldGFyeSBwb2xpY3kgY29tbWl0dGVlLCBzYWlkIGluZmxhdGlvbiB3aWxsIGJlIOKAnHJlbGF0aXZlbHkgbG934oCdIHRoaXMgbW9udGggZHVlIHRvIHNsb3dpbmcgZm9vZC1wcmljZSBnYWlucy4gQ29tcGFyZWQgd2l0aCBKYW51YXJ5IGFuZCBGZWJydWFyeSwgdGhlIHByZXNzdXJlIGZvciB0aWdodGVuaW5nIG1vbmV0YXJ5IHBvbGljeSBhbmQgbWFjcm8tIGVjb25vbWljIGNvbnRyb2xzIOKAnGhhcyBpbiBteSB2aWV3IGJlZW4gcmVsaWV2ZWQs4oCdIGhlIHNhaWQgYXQgYSBmb3J1bSBpbiBCZWlqaW5nLiBTb25nLCBhIFBla2luZyBVbml2ZXJzaXR5IHByb2Zlc3NvciB3aG8gc3R1ZGllZCBlY29ub21pY3MgYXQgdGhlIFVuaXZlcnNpdHkgb2YgQ2hpY2Fnbywgd2FzIGFwcG9pbnRlZCBhIGNlbnRyYWwgYmFuayBhZHZpc2VyIGluIE1hcmNoIDIwMTIuIFRoZSBpbnN0aXR1dGlvbiBoYXMgbGltaXRlZCBwb3dlcnMsIHdpdGggdGhlIFN0YXRlIENvdW5jaWwgaGF2aW5nIHRoZSBmaW5hbCBzYXkgb24gaW50ZXJlc3QtcmF0ZSBtb3Zlcy4gVGhlIG5hdGlvbiBoYXMga2VwdCBiZW5jaG1hcmsgYm9ycm93aW5nIGNvc3RzIG9uIGhvbGQgc2luY2UgSnVseSBsYXN0IHllYXIuIFRoZSBrZXkgb25lLXllYXIgbGVuZGluZyByYXRlIGlzIDYgcGVyY2VudC4gUHJpY2UgR2FpbnMgQ29uc3VtZXIgaW5mbGF0aW9uIGVhc2VkIHRvIDIgcGVyY2VudCBpbiBKYW51YXJ5IGZyb20gYSB5ZWFyIGVhcmxpZXIgYWZ0ZXIgYSAyLjUgcGVyY2VudCBpbmNyZWFzZSB0aGUgcHJldmlvdXMgbW9udGgsIGdvdmVybm1lbnQgZGF0YSBzaG93LiBVQlMgQUcgZXN0aW1hdGVkIEZlYnJ1YXJ54oCZcyByYXRlIHdhcyAzLjMgcGVyY2VudCB3aGlsZSBNaXp1aG8gZm9yZWNhc3QgMyBwZXJjZW50LCBhcyBhIEx1bmFyIE5ldyBZZWFyIGhvbGlkYXkgcHVzaGVkIHVwIGZvb2QgcHJpY2VzLCBhY2NvcmRpbmcgdG8gcmVwb3J0cyBsYXN0IHdlZWsuIFRoZSBzdGF0aXN0aWNzIGJ1cmVhdSB3aWxsIHJlbGVhc2UgdGhlIGRhdGEgb24gTWFyY2ggOS4gVGhlIFBCT0MgZHJhaW5lZCBjYXNoIGZyb20gdGhlIGZpbmFuY2lhbCBzeXN0ZW0gaW4gZWFjaCBvZiB0aGUgdHdvIHdlZWtzIGFmdGVyIHRoZSBob2xpZGF5IHRoYXQgZW5kZWQgb24gRmViLiAxNSwgYm9vc3Rpbmcgc3BlY3VsYXRpb24gdGhhdCBpdCB3YXMgdGlnaHRlbmluZyBhbWlkIGNvbmNlcm5zIGluZmxhdGlvbiB3aWxsIGFjY2VsZXJhdGUgYW5kIHJlYWwtZXN0YXRlIHByaWNlIGdhaW5zIGFyZSBleGNlc3NpdmUuIEdvdmVybm9yIFpob3UgWGlhb2NodWFuIHNhaWQgdGhlIGZ1bmRzIHdlcmUgZHJhaW5lZCB0byByZW1vdmUgY2FzaCBpbmplY3RlZCBiZWZvcmUgdGhlIEx1bmFyIE5ldyBZZWFyIGZlc3RpdmFsLCBhY2NvcmRpbmcgdG8gYSBNYXJjaCAxIHJlcG9ydCBvbiB0aGUgU2VjdXJpdGllcyBUaW1lcyB3ZWJzaXRlLiBFY29ub21pYyBHcm93dGggVGhlIHByb3BlcnR5IGN1cmJzIGRldGFpbGVkIE1hcmNoIDEgY29tZSBhcyBDaGluYSBwcmVwYXJlcyB0byBjb21wbGV0ZSBhIG9uY2UtYS1kZWNhZGUgbGVhZGVyc2hpcCBoYW5kb3Zlci4gQ29tbXVuaXN0IFBhcnR5IGNoaWVmIFhpIEppbnBpbmcgaXMgc2V0IHRvIGJlY29tZSBwcmVzaWRlbnQgYW5kIExpIEtlcWlhbmcgd2lsbCByZXBsYWNlIFdlbiBhcyBwcmVtaWVyIGF0IHRoZSBlbmQgb2YgdGhlIE5QQyBzZXNzaW9uLiBBbW9uZyB0aGUgY2hhbGxlbmdlcyB0aGV5IHdpbGwgaW5oZXJpdCBhcmUgZW52aXJvbm1lbnRhbCBkZWdyYWRhdGlvbiwgd2lkZW5pbmcgaW5jb21lIGluZXF1YWxpdHkgYW5kIHN1cmdpbmcgaG9tZSBwcmljZXMgdGhhdCBoYXZlIHB1dCBvd25lcnNoaXAgYmV5b25kIHRoZSByZWFjaCBvZiBtaWxsaW9ucy4gVG91Z2hlciBwcm9wZXJ0eSBydWxlcyB3aWxsIHNsb3cgZG93biB0aGUg4oCccG9zaXRpdmUgaW1wYWN04oCdIHRoYXQgcmlzaW5nIGhvdXNpbmcgbWFya2V0IGFjdGl2aXR5IGhhcyBoYWQgb24gdGhlIGVjb25vbXkgaW4gcmVjZW50IG1vbnRocywgc2FpZCBTaGVuIEppYW5ndWFuZywgY2hpZWYgQXNpYSBlY29ub21pc3QgYXQgTWl6dWhvIFNlY3VyaXRpZXMgQXNpYSBMdGQuIGluIEhvbmcgS29uZywgd2hvIHByZXZpb3VzbHkgd29ya2VkIGF0IHRoZSBJTUYgYW5kIEV1cm9wZWFuIENlbnRyYWwgQmFuay4g4oCcSG93ZXZlciwgdGhlIGdvdmVybm1lbnQgY2Fu4oCZdCB0b2xlcmF0ZSBmdXJ0aGVyIHByaWNlIGluY3JlYXNlcy7igJ0=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT0z/DcAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDM4MDcwYmMxMGM3NmUzMWI=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNIRU4=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT05IpMAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAr3Cj1wo9c</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAs5mZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAr3Cj1wo9c</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAsYUeuFHrh</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArgAAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAADZlA==</field><field name="id" class="java.lang.String">rO0ABXQAEGFhZGI3YWU4NmQ3NTg1ODE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHbgAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExMDkx</field><field name="title" class="java.lang.String">rO0ABXQAQEVsZWN0cmljaXR5IFVzZSBTZWVuIE92ZXJzdGF0aW5nIENoaW5hIFNsb3dkb3duIGFzIFNlcnZpY2VzIFJpc2U=</field><field name="content" class="java.lang.String">rO0ABXQVaFRoZSBnb3Zlcm5tZW50IHdpbGwgcmVsZWFzZSBpbmZvcm1hdGlvbiBvbiBKdWx5IGVsZWN0cmljaXR5IHByb2R1Y3Rpb24gVGh1cnNkYXkgYXMgcGFydCBvZiBpdHMgcmVwb3J0IG9uIGluZHVzdHJpYWwgb3V0cHV0LiBQb3dlciBnZW5lcmF0aW9uIGluIEp1bmUgd2FzIHVuY2hhbmdlZCBmcm9tIGEgeWVhciBlYXJsaWVyIGV2ZW4gYXMgaW5kdXN0cmlhbCBwcm9kdWN0aW9uIHJvc2UgOS41IHBlcmNlbnQuIEhlYXZ5IGluZHVzdHJpZXMgaW5jbHVkaW5nIG1ldGFscyBhbmQgY2VtZW50IGNvbnN1bWUgYWJvdXQgNjAgcGVyY2VudCBvZiBlbGVjdHJpY2l0eSBhbmQgYWNjb3VudCBmb3IgMjAgcGVyY2VudCBvZiBncm9zcyBkb21lc3RpYyBwcm9kdWN0LCBhY2NvcmRpbmcgdG8gR0sgRHJhZ29ub21pY3MsIGEgQmVpamluZy1iYXNlZCBjb25zdWx0YW50LiBUaGUgc2hpZnRzIHNpZ25hbCB0aGF0IGVsZWN0cmljaXR54oCZcyByZWxldmFuY2UgYXMgYW4gZWNvbm9taWMgaW5kaWNhdG9yIGlzIHJlY2VkaW5nIGZpdmUgeWVhcnMgYWZ0ZXIgTGkgS2VxaWFuZywgbm93IHRoZSB2aWNlIHByZW1pZXIsIHdhcyBxdW90ZWQgYXMgc2F5aW5nIGhlIHdhdGNoZWQgZGF0YSBvbiBwb3dlciwgcmFpbCBjYXJnbyBhbmQgbG9hbnMgYmVjYXVzZSBHRFAgbnVtYmVycyB3ZXJlIOKAnG1hbi1tYWRlLuKAnSBBbiBldm9sdXRpb24gd2l0aGluIG1hbnVmYWN0dXJpbmcgdG8gbW9yZSBlZmZpY2llbnQgcHJvZHVjdGlvbiBpcyBhbHNvIGRhbXBpbmcgZWxlY3RyaWNpdHkgdXNlIGFzIENoaW5hIHVwZ3JhZGVzIGl0cyBmYWN0b3JpZXMuIOKAnFN0ZWVsIHBsYW50cywgY2VtZW50IHBsYW50cyBhbmQgcmVmaW5lcnkgZmFjaWxpdGllcyDigJQgdGhlc2UgYmlnIGVsZWN0cmljaXR5IGNvbnN1bWVycyDigJQgaGF2ZSBzdWZmZXJlZCBhIGxvdCBtb3JlIHRoYW4gc2VydmljZS1pbmR1c3RyeSBwbGF5ZXJzIGluIHRoZSBmaXJzdCBoYWxmLOKAnSBzYWlkIERvbmcgVGFvLCBDcmVkaXQgU3Vpc3NlIEdyb3VwIEFH4oCZcyBIb25nIEtvbmctYmFzZWQgaGVhZCBvZiBBc2lhIGVjb25vbWljcyBleGNsdWRpbmcgSmFwYW4uIOKAnFNvIGVsZWN0cmljaXR5IGNvbnN1bXB0aW9uIGlzIG5vdCBhIGJlbmNobWFyayBidXQgYSByZWZlcmVuY2Uu4oCdIEluZHVzdHJpYWwgcHJvZHVjdGlvbiBwcm9iYWJseSByb3NlIDkuNyBwZXJjZW50IGluIEp1bHkgZnJvbSBhIHllYXIgZWFybGllciwgYmFzZWQgb24gdGhlIG1lZGlhbiBlc3RpbWF0ZSBpbiBhIEJsb29tYmVyZyBOZXdzIHN1cnZleS4gRGF0YSB0b21vcnJvdyBtYXkgYWxzbyBzaG93IGNvbnN1bWVyIGluZmxhdGlvbiBkZWNlbGVyYXRlZCB0byAxLjcgcGVyY2VudCBpbiBKdWx5LCB0aGUgd2Vha2VzdCBwYWNlIHNpbmNlIEphbnVhcnkgMjAxMC4gTGVuZGluZyBEYXRhIFRyYWRlIGRhdGEgdG8gYmUgcmVsZWFzZWQgQXVnLiAxMCB3aWxsIHByb2JhYmx5IGluZGljYXRlIGV4cG9ydCBncm93dGggc2xvd2VkIGxhc3QgbW9udGggdG8gYSB0aHJlZS1tb250aCBsb3cuIE5ldyB5dWFuIGxvYW5zIGZlbGwgaW4gSnVseSwgYW5hbHlzdHMgcHJlZGljdGVkIGFoZWFkIG9mIGRhdGEgZHVlIGJ5IEF1Zy4gMTUuIFByb2ZpdHMgYXQgQ2hpbmVzZSBzdGVlbG1ha2VycyBmZWxsIDk2IHBlcmNlbnQgaW4gdGhlIGZpcnN0IGhhbGYgYXMgZGVtYW5kIGFuZCBwcmljZXMgZHJvcHBlZCwgYSBDaGluYSBJcm9uIGFuZCBTdGVlbCBBc3NvY2lhdGlvbiBvZmZpY2lhbCBzYWlkIGxhc3Qgd2Vlay4gQW5odWkgQ29uY2ggQ2VtZW50IENvLiwgQ2hpbmHigJlzIGJpZ2dlc3QgbWFrZXIgb2YgdGhlIG1hdGVyaWFsLCBzYWlkIGluIEp1bmUgdGhhdCBmaXJzdC1oYWxmIGVhcm5pbmdzIG1heSBoYXZlIGRyb3BwZWQgYnkgbW9yZSB0aGFuIDUwIHBlcmNlbnQuIFNvbWUgY29tcGFuaWVzIGluIHNlcnZpY2UgaW5kdXN0cmllcywgYnkgY29udHJhc3QsIGFyZSBzZWVpbmcgZmFzdGVyIGdyb3d0aC4gVGhlIFUuUy7igJlzIFl1bSEgQnJhbmRzIEluYy4sIG9wZXJhdG9yIG9mIEtGQyBhbmQgUGl6emEgSHV0IHJlc3RhdXJhbnRzLCBzYWlkIHNlY29uZC1xdWFydGVyIOKAnHN5c3RlbSBzYWxlc+KAnSBpbiBDaGluYSByb3NlIDI3IHBlcmNlbnQgYW5kIGJvb3N0ZWQgdGhlIG51bWJlciBvZiBwbGFubmVkIHN0b3JlIG9wZW5pbmdzIGluIHRoZSBjb3VudHJ5IHRoaXMgeWVhci4gU3Rhcndvb2QgSG90ZWxzICYgUmVzb3J0cyBXb3JsZHdpZGUgSW5jLiBzYWlkIGZpcnN0LWhhbGYgQ2hpbmEgc2FsZXMgcm9zZSBtb3JlIHRoYW4gMjUgcGVyY2VudC4gTWFudWZhY3R1cmluZyBHYXVnZSBBIHN1cnZleSBvZiBwdXJjaGFzaW5nIG1hbmFnZXJzIGluZGljYXRlZCB0aGF0IG1hbnVmYWN0dXJpbmcgdGVldGVyZWQgb24gdGhlIGVkZ2Ugb2YgY29udHJhY3Rpb24gbGFzdCBtb250aCwgd2l0aCBhIGdvdmVybm1lbnQgZ2F1Z2UgYXQgNTAuMS4gVGhlIG9mZmljaWFsIHNlcnZpY2VzIGluZGV4IHdhcyBhdCA1NS42OyByZWFkaW5ncyBhYm92ZSA1MCBzaWduYWwgZXhwYW5zaW9uLiBTZXJ2aWNlIGluZHVzdHJpZXMgbm93IGFjY291bnQgZm9yIGFib3V0IDQzIHBlcmNlbnQgb2YgdGhlIGVjb25vbXksIGFuZCBDaGluYeKAmXMgZ292ZXJubWVudCBpcyB0cnlpbmcgdG8gYm9vc3QgdGhhdCB0byA0NyBwZXJjZW50IGJ5IDIwMTUuIE1vcmUgYnJvYWRseSwgZWxlY3RyaWNpdHkgaXMgYSDigJxwb3dlcmZ1bCBpbmRpY2F0b3IsIGJ1dCBpdOKAmXMganVzdCB2b2xhdGlsZSBvbiBhIG1vbnRoLXRvLW1vbnRoIGJhc2lzLOKAnSBzYWlkIE1pY2hhZWwgUGFya2VyLCBzZW5pb3IgYW5hbHlzdCBhdCBTYW5mb3JkIEMuIEJlcm5zdGVpbiAmIENvLiBpbiBIb25nIEtvbmcuIFJldmlld2luZyB0d28geWVhcnMgb2YgZmlndXJlcyBnZXRzIGEgcG93ZXItY29uc3VtcHRpb24gZ3Jvd3RoIHJhdGUgb2YgYWJvdXQgNyBwZXJjZW50LCDigJx3aGljaCBpcyBhYm91dCBjb25zaXN0ZW504oCdIHdpdGggR0RQIGV4cGFuc2lvbiwgaGUgc2FpZC4gQ2hpbmHigJlzIHN0YXRpc3RpY3MgYnVyZWF1IHB1Ymxpc2hlcyBwb3dlciBvdXRwdXQgZGF0YSB3aGlsZSB0aGUgTmF0aW9uYWwgRW5lcmd5IEFkbWluaXN0cmF0aW9uIHJlbGVhc2VzIGNvbnN1bXB0aW9uIGZpZ3VyZXMuIFRocmVlIFNlZ21lbnRzIFRoZSBjb3VudHJ5IGRpdmlkZXMgaXRzIGVjb25vbWljIGRhdGEgaW50byB0aHJlZSBzZWdtZW50czogcHJpbWFyeSBpbmR1c3RyaWVzLCB3aGljaCBpbmNsdWRlIGFncmljdWx0dXJlIGFuZCBsaXZlc3RvY2s7IHNlY29uZGFyeSwgY29tcHJpc2VkIG9mIG1hbnVmYWN0dXJpbmcgYW5kIGNvbnN0cnVjdGlvbjsgYW5kIHRlcnRpYXJ5LCB3aGljaCBpbmNsdWRlcyBzZXJ2aWNlcyBhbmQgbG9naXN0aWNzLiBFbGVjdHJpY2l0eSBjb25zdW1wdGlvbiBpbiBzZWNvbmRhcnkgaW5kdXN0cmllcyBncmV3IGxlc3MgdGhhbiA1IHBlcmNlbnQgaW4gZWFjaCBvZiB0aGUgZm91ciBtb250aHMgdGhyb3VnaCBKdW5lIGNvbXBhcmVkIHdpdGggMTAgcGVyY2VudCB0byAxNCBwZXJjZW50IGR1cmluZyB0aGUgc2FtZSBwZXJpb2QgaW4gMjAxMSwgZ292ZXJubWVudCBkYXRhIHNob3cuIFRoZSBwcmltYXJ5IGdyb3Vw4oCZcyBjb25zdW1wdGlvbiBmZWxsIGZyb20gYSB5ZWFyIGVhcmxpZXIgaW4gTWFyY2gsIEFwcmlsIGFuZCBNYXkuIFRoZSB0ZXJ0aWFyeSBncm91cOKAmXMgcG93ZXIgY29uc3VtcHRpb24sIGJ5IGNvbXBhcmlzb24sIGdyZXcgbW9yZSB0aGFuIDEwIHBlcmNlbnQgZnJvbSBhIHllYXIgZWFybGllciBmb3IgbW9zdCBvZiB0aGUgZmlyc3QgaGFsZi4g4oCcVGhlIHBvcHVsYXIgaWRlYSB0aGF0IGVsZWN0cmljaXR5IGdyb3d0aCBpcyBhIHNpbXBsZSBwcm94eSBmb3IgZWNvbm9taWMgZ3Jvd3RoIGlzIGNsZWFybHkgbm90IHRydWUs4oCdIHNhaWQgTmF0ZSBUYXBsaW4sIGFuIGVuZXJneSBhbmFseXN0IHdpdGggR0sgRHJhZ29ub21pY3MgaW4gQmVpamluZy4gTGnigJlzIHJlbWFyayB3YXMgcHVibGlzaGVkIGluIGEgV2lraUxlYWtzIGNhYmxlIGluIGxhdGUgMjAxMC4gSW52ZXN0b3IgY29uY2VybiBvdmVyIENoaW5h4oCZcyBncm93dGggaGFzIGhlbHBlZCBzZW5kIHRoZSBiZW5jaG1hcmsgU2hhbmdoYWkgQ29tcG9zaXRlIEluZGV4IGRvd24gMTUgcGVyY2VudCBpbiB0aGUgcGFzdCB5ZWFyLiBUaGUgeXVhbiBoYXMgd2Vha2VuZWQgYWJvdXQgMSBwZXJjZW50IGFnYWluc3QgdGhlIGRvbGxhciBpbiAyMDEyLiBEYXRhIENvbmZsaWN0cyBUaGUgc3RhbGwgaW4gZWxlY3RyaWNpdHkgb3V0cHV0IGlzIGFtb25nIGNvbmZsaWN0cyBpbiBDaGluYeKAmXMgZWNvbm9taWMgZGF0YSB0aGF0IHNob3cgdGhlIG5hdGlvbuKAmXMgZ3Jvd3RoIG1heSBiZSBvdmVyc3RhdGVkLCBTaGVuIEppYW5ndWFuZywgY2hpZWYgQXNpYSBlY29ub21pc3QgYXQgTWl6dWhvIFNlY3VyaXRpZXMgQXNpYSBMdGQuIGluIEhvbmcgS29uZywgc2FpZCBpbiBhIEp1bHkgMTcgcmVwb3J0LiBUaGUgZ292ZXJubWVudCBjdXQgaW50ZXJlc3QgcmF0ZXMgaW4gSnVuZSBhbmQgSnVseSwgdGhlIGZpcnN0IHJlZHVjdGlvbnMgc2luY2UgMjAwOCwgYW5kIHNpZ25hbGVkIGl04oCZcyBmb2N1c2luZyBvbiBpbnZlc3RtZW50IHRvIHN1cHBvcnQgZXhwYW5zaW9uIHRoYXQgc2xvd2VkIHRvIGEgdGhyZWUteWVhciBsb3cgb2YgNy42IHBlcmNlbnQgbGFzdCBxdWFydGVyLiBQcmVtaWVyIFdlbiBKaWFiYW8gc2V0IGEgMjAxMiB0YXJnZXQgb2YgNy41IHBlcmNlbnQgaW4gTWFyY2guIOKAnEFjdGl2aXR5IGdyb3d0aCBoYXMgcHJvYmFibHkgc3RhYmlsaXplZCBvbiB0aGUgYmFjayBvZiB0aGUgcG9saWN5IGxvb3NlbmluZyB3aGljaCBzdGFydGVkIGluIE1heSzigJ0gR29sZG1hbiBTYWNocyBHcm91cCBJbmMuIGVjb25vbWlzdHMgaW5jbHVkaW5nIFNvbmcgWXUgd3JvdGUgaW4gYW4gQXVnLiAzIG5vdGUuIFNsb3dpbmcgaW5mbGF0aW9uIHdpbGwgYWxsb3cgcm9vbSBmb3IgbW9yZSBlYXNpbmcsIFNvbmcgc2FpZC4gVGhlIGVsZWN0cmljaXR5LW91dHB1dCBzbHVtcCByZXN1bHRzIGZyb20gdGhlIGVjb25vbWljIHNsb3dkb3duIGFzIHdlbGwgYXMgYSBsb25nZXItdGVybSBzaGlmdCBhd2F5IGZyb20gZW5lcmd5LSBpbnRlbnNpdmUgZ3Jvd3RoIGluIENoaW5hLCBQYXJrZXIgc2FpZC4gRXZlbiBzbywgdGhlIG5hdGlvbiBtYXkgc3RpbGwgaGF2ZSBhIHdheXMgdG8gZ28uIOKAnFRoZXJlIGFyZSBzb21lIGVuZXJneS1lZmZpY2llbmN5IGJlbmVmaXRzIGNvbWluZyB0aHJvdWdoIHRoZSBlY29ub215IHRoYXQgd2lsbCBjb250aW51ZSzigJ0gUGFya2VyIHNhaWQuIOKAnEJ1dCBpdOKAmXMgYSBsaXR0bGUgYml0IG9mIGEgcmVhY2ggdG8gc3VnZ2VzdCB0aGF0IENoaW5hIGhhcyBlZmZlY3RpdmVseSBnb25lIGZyb20gYmVpbmcgSW5kb25lc2lhIG9yIEVneXB0IGluIEp1bmUgb2YgbGFzdCB5ZWFyIHRvIGJlY29taW5nIFN3aXR6ZXJsYW5kIG9yIFN3ZWRlbiB0aGlzIHllYXIu4oCd</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATkEmoiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGZlNWJkM2IyY2E0MWUwNjU=</field><field name="symbol" class="java.lang.String">rO0ABXQABUFIQ0hZ</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATkJwOSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArVwo9cKPX</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArVwo9cKPX</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArVwo9cKPX</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArVwo9cKPX</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAqlHrhR64U</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAGpA==</field><field name="id" class="java.lang.String">rO0ABXQAEDgzOThiZjMyNDdlOGQ1ODU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mItOAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUxNjQ=</field><field name="title" class="java.lang.String">rO0ABXQAN0NoaW5hIEhlbHBzIEZpcnN0LUhvbWUgQnV5ZXJzIFdoaWxlIEN1cmJpbmcgU3BlY3VsYXRvcnM=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATbtBSiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGYxNTY4YzliNjM3ZmU4OWY=</field><field name="symbol" class="java.lang.String">rO0ABXQABExPQU4=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATbyK4SAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/xR64UeuFI</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/xcKPXCj1x</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/wKPXCj1wp</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/xR64UeuFI</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/vXCj1wo9c</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAALuA==</field><field name="id" class="java.lang.String">rO0ABXQAEDI2NzJlMzBjNmJjOWVjNzk=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGRRAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM3MDQ=</field><field name="title" class="java.lang.String">rO0ABXQANUNoaW5hIERhdGEgSWxsdW1pbmF0ZSBVbmV2ZW4gUmVjb3ZlcnksIFBvbGljeSBEaWxlbW1h</field><field name="content" class="java.lang.String">rO0ABXQRxURhdGEgZnJvbSBDaGluYSdzIE5hdGlvbmFsIEJ1cmVhdSBvZiBTdGF0aXN0aWNzIHNob3dlZCB0aGUgY29uc3VtZXIgcHJpY2UgaW5kZXggcm9zZSAzLjIgcGVyY2VudCBpbiBGZWJydWFyeSBmcm9tIGEgeWVhciBhZ28sIHZlcnN1cyBleHBlY3RhdGlvbnMgb2YgYSAzLjAgcGVyY2VudCByaXNlLCB3aGlsZSBhbm51YWwgaW5kdXN0cmlhbCBwcm9kdWN0aW9uIChJUCkgZ3Jvd3RoIGluIEphbnVhcnkgYW5kIEZlYnJ1YXJ5IGNvbWJpbmVkIGF0IDkuOSBwZXJjZW50IHdhcyB0aGUgbG93ZXN0IHNpbmNlIE9jdG9iZXIgMjAxMiAtIHRoZSBzdGFydGluZyBwb2ludCBvZiBDaGluYSdzIG5hc2NlbnQgZWNvbm9taWMgcmVjb3ZlcnkuIFRoZSBOQlMgbnVtYmVycyByZXZlYWxlZCBzdGF0ZS1tYW5kYXRlZCBmaXhlZCBhc3NldCBpbnZlc3RtZW50IChGQUkpIHdhcyB0aGUga2V5IGRyaXZlciBvZiBlY29ub21pYyBncm93dGggaW4gdGhlIGZpcnN0IHR3byBtb250aHMgb2YgdGhlIHllYXIsIHVwIDIxLjIgcGVyY2VudCBhbmQgdGhlIHN0cm9uZ2VzdCBpbiAxMiBtb250aHMsIHdoaWxlIGFubnVhbCByZXRhaWwgc2FsZXMgZ3Jvd3RoIG9mIDEyLjMgcGVyY2VudCB3YXMgdGhlIHNsYWNrZXN0IEphbnVhcnkgYW5kIEZlYnJ1YXJ5IGNvbWJpbmVkIHNpbmNlIDIwMDQuICJUaGlzIGRhdGEgc2hvd3MgdGhhdCB0aGUgZWNvbm9teSBpcyBpbiB0aGUgcHJvY2VzcyBvZiBhIG1pbGQgcmVjb3ZlcnkgYW5kIHRoYXQgaXQgaXMgc3RpbGwgZnJhZ2lsZSwiIFh1IEdhbywgY2hpZWYgbWFjcm8tZWNvbm9taWMgYW5hbHlzdCBhdCBFdmVyYnJpZ2h0IFNlY3VyaXRpZXMgaW4gQmVpamluZywgdG9sZCBSZXV0ZXJzLiAiSXQgZmFjZXMgYSBsb3Qgb2YgdW5jZXJ0YWludGllcy4iIFRoZSBrZXkgdW5jZXJ0YWludHkgaXMgaG93IG11Y2ggdGhlIGRhdGEgaGFzIGJlZW4gZGlzdG9ydGVkIGJ5IHRoZSBmYWxsIG9mIENoaW5hJ3MgYW5udWFsIEx1bmFyIE5ldyBZZWFyIGhvbGlkYXlzLCB3aGljaCB3ZXJlIGluIEZlYnJ1YXJ5IHRoaXMgeWVhciBhbmQgaW4gSmFudWFyeSBpbiAyMDEyIGFuZCB3aGljaCB0eXBpY2FsbHkgc2VlIGZhY3RvcmllcyBzaHV0IHVwIHNob3AgZm9yIHR3byB3ZWVrcy4gVGhlIHJpc2sgaXMgdGhhdCB0aGUgZWNvbm9teSBuZWVkcyBtb25ldGFyeSBwb2xpY3kgdGlnaHRlbmVkIHRvIGNvb2wgcHJpY2VzIGJlZm9yZSBpbmR1c3RyaWFsIGFjdGl2aXR5IGFuZCByZXRhaWwgc2FsZXMgcmVnYWluIG1vbWVudHVtIGxvc3QgbGFzdCB5ZWFyIGFzIHRoZSBDaGluZXNlIGVjb25vbXkgZGVsaXZlcmVkIGl0cyBzbG93ZXN0IGZ1bGwgeWVhciBvZiBncm93dGggc2luY2UgMTk5OSwgYXQgNy44IHBlcmNlbnQuIE1JWEVEIFBJQ1RVUkUgIkphbnVhcnktRmVicnVhcnkgZGF0YSBoYXZlIHBhaW50ZWQgcXVpdGUgYSBtaXhlZCBwaWN0dXJlLCIgc2FpZCBSZW4gWGlhbmZhbmcsIHNlbmlvciBlY29ub21pc3QgYXQgY29uc3VsdGFuY3kgSUhTIEdsb2JhbCBJbnNpZ2h0IGluIEJlaWppbmcuICJQcm9wZXJ0eSBhbmQgY3JlZGl0IGRhdGEgcG9pbnQgdG8gc2lnbnMgb2Ygb3ZlcmhlYXRpbmcsIHdoZXJlYXMgSVAgYW5kIEZBSSwgYXMgd2VsbCBhcyBlYXJseSBpbmRpY2F0b3JzIGZvciBtYW51ZmFjdHVyaW5nLCBzdWNoIGFzIFBNSSwgaGF2ZSBsYW5ndWlzaGVkIGFnYWluLCIgc2hlIHdyb3RlIGluIGEgbm90ZSB0byBjbGllbnRzLiBQdXJjaGFzaW5nIG1hbmFnZXJzIGluZGV4ZXMgKFBNSXMpIGluIHRoZSBtYW51ZmFjdHVyaW5nIHNlY3RvciByZWxlYXNlZCBvbiBNYXJjaCAxIGhhZCBhbHJlYWR5IGZsYWdnZWQgRmVicnVhcnkgZmFjdG9yeSBhY3Rpdml0eSBhdCBtdWx0aS1tb250aCBsb3dzIGFzIGRvbWVzdGljIGRlbWFuZCBkaXBwZWQuIEV4Y2VzcyBjYXBhY2l0eSB3b3VsZCBhcHBlYXIgdG8gcmVtYWluIGFtcGxlLCBnaXZlbiBTYXR1cmRheSdzIHByb2R1Y2VyIHByaWNlIGRhdGEgdGhhdCBzaG93ZWQgcHJpY2VzIGF0IHRoZSBmYWN0b3J5IGdhdGUgcmVtYWluZWQgaW4gZGVmbGF0aW9uIGluIEZlYnJ1YXJ5LCBmYWxsaW5nIGF0IHRoZSBzYW1lIDEuNiBwZXJjZW50IHJhdGUgeWVhci1vbi15ZWFyIGFzIHRoZXkgZGlkIGluIEphbnVhcnkuIFRob3VnaCBhIDAuMiBwZXJjZW50IG1vbnRoIG9uIG1vbnRoIHJpc2UgaW4gcHJvZHVjZXIgcHJpY2VzIG9mZmVyIHNvbWUgc2lnbiB0aGF0IGRlbWFuZCBmb3IgQ2hpbmVzZSBnb29kcyBpcyBzdGFiaWxpemluZy4gVGhlIHBpY3R1cmUgZm9yIGZvcmVpZ24gZGVtYW5kLCBob3dldmVyLCByZW1haW5zIHVuY2VydGFpbiwgZGVzcGl0ZSBhIDIxLjggcGVyY2VudCBzdXJnZSBpbiBGZWJydWFyeSBleHBvcnRzIHZlcnN1cyBhIHllYXIgYWdvIHRoYXQgd2FzIHJlcG9ydGVkIG9uIEZyaWRheS4gVGhlIGV4cG9ydCBib3VuY2UgaXMsIGF0IGZhY2UgdmFsdWUsIGEgc2lnbiB0aGF0IENoaW5hJ3MgbW9kZXN0IGVjb25vbWljIHJldml2YWwgaXMgaW50YWN0IGFuZCBzdWdnZXN0aXZlIG9mIGdsb2JhbCBkZW1hbmQgYmVpbmcgb24gdGhlIG1lbmQsIGJ1dCBpbXBvcnRzIHdlcmUgc3VycHJpc2luZ2x5IHdlYWssIGZhbGxpbmcgMTUuMiBwZXJjZW50IGZyb20gYSB5ZWFyIGVhcmxpZXIgdG8gMTMtbW9udGggbG93cyBhbmQgaGlnaGxpZ2h0aW5nIHZ1bG5lcmFiaWxpdHkgbHVya2luZyBpbiB0aGUgZG9tZXN0aWMgZWNvbm9teS4gIkNoaW5hJ3MgZWNvbm9teSBpcyBpbmNyZWFzaW5nbHkgYmVpbmcgZHJpdmVuIGJ5IGRvbWVzdGljIGRlbWFuZCBhbmQgcmVjZW50IGRhdGEgY2FzdCBkb3VidCBvbiBhIHN0cm9uZyByZWNvdmVyeSwiIFpoYW5nIFpoaXdlaSwgY2hpZWYgQ2hpbmEgZWNvbm9taXN0IGF0IE5vbXVyYSBpbiBIb25nIEtvbmcsIHNhaWQuIFBPTElDWSBDSEFMTEVOR0UgTGVuZGluZyBkYXRhIHNhdyBhIHN1cmdlIGluIEphbnVhcnkgYW5kIGVjb25vbWlzdHMgcG9sbGVkIGJ5IFJldXRlcnMgZXhwZWN0IEZlYnJ1YXJ5J3MgbnVtYmVycyB0byBiZSB3ZWxsIGFib3ZlIE5vdmVtYmVyIGFuZCBEZWNlbWJlciBsZXZlbHMgd2hlbiB0aGUgZGF0YSBpcyByZWxlYXNlZCBsYXRlciB0aGlzIG1vbnRoLCBzdWdnZXN0aW5nIHRoYXQgbW9uZXRhcnkgY29uZGl0aW9ucyByZW1haW4gbG9vc2UuIFRoZSBQZW9wbGUncyBCYW5rIG9mIENoaW5hIHdpbGwgdGFyZ2V0IDguNSB0cmlsbGlvbiB5dWFuIGluIG5ldyBsb2NhbC1jdXJyZW5jeSBsb2FucyBpbiAyMDEzIGFuZCAxMyBwZXJjZW50IGFubnVhbCBncm93dGggaW4gTTIsIHRoZSBvZmZpY2lhbCBDaGluYSBTZWN1cml0aWVzIEpvdXJuYWwgaGFzIHJlcG9ydGVkLiBSZWxhdGl2ZWx5IGVhc3kgbGlxdWlkaXR5IGhhcyBmdWVsbGVkIGludmVzdG1lbnQgaW4gQ2hpbmEncyBub3RvcmlvdXNseSBmcm90aHkgcmVhbCBlc3RhdGUgc2VjdG9yIC0gcHJvcGVydHkgaW52ZXN0bWVudCBqdW1wZWQgMjIuOCBwZXJjZW50IGluIEphbnVhcnkgYW5kIEZlYnJ1YXJ5IGNvbWJpbmVkIGZyb20gMjAxMiAtIHB1c2hpbmcgdXAgaG9tZSBwcmljZXMgYW5kIHRyaWdnZXJpbmcgaGF3a2lzaCB0YWxrIG9uIHByb3BlcnR5IHRpZ2h0ZW5pbmcgZnJvbSBCZWlqaW5nIHBvbGljeW1ha2VycyB0byBjb250YWluIHRoZSByaXNrIG9mIGFuIGFzc2V0IGJ1YmJsZSByYXBpZGx5IGluZmxhdGluZy4gRm9vZCBwcmljZXMgbWF5IGhhdmUgYmVlbiB0aGUgYmlnZ2VzdCBkaXN0b3J0aW5nIGZhY3RvciBpbiB0aGUgRmVicnVhcnkgaW5mbGF0aW9uIGRhdGEsIGdhaW5pbmcgNiBwZXJjZW50IHllYXIgb24geWVhciBhbmQgbW9zdCBsaWtlbHkgYSBzaWduIG9mIGluY3JlYXNlcyBhaGVhZCBvZiBMdW5hciBOZXcgWWVhciBmZXN0aXZpdGllcy4gVGhlIG1peGVkIG1lc3NhZ2VzIGZyb20gdGhlIGRhdGEgbWFrZSBhbnkgcG9saWN5IHR3ZWFrcyBwYXJ0aWN1bGFybHkgc2Vuc2l0aXZlIC0gZXNwZWNpYWxseSBhcyBDaGluYSBwdXRzIHRoZSBmaW5pc2hpbmcgdG91Y2hlcyB0byBhIGdvdmVybm1lbnQgdHJhbnNpdGlvbiB0aGF0IGJlZ2FuIGluIE5vdmVtYmVyIGFuZCBpcyBzZXQgdG8gYmUgc2VhbGVkIGJ5IE1hcmNoIDE3IHdpdGggWGkgSmlucGluZyBhbmQgTGkgS2VxaWFuZyB0YWtpbmcgb3ZlciBhcyBwcmVzaWRlbnQgYW5kIHByZW1pZXIsIHJlc3BlY3RpdmVseS4gIlRoZSBDaGluZXNlIGdvdmVybm1lbnQgaXMgY2F1Z2h0IGluIHRoZSBkaWxlbW1hIG9mIGRlYWxpbmcgd2l0aCBzbG93ZXIgZ3Jvd3RoIGFuZCB5ZXQgaGlnaGVyIGluZmxhdGlvbiBhZ2FpbiwiIFJlbiBhdCBJSFMgc2FpZCwgYWRkaW5nIHRoYXQgdGhlIGdvdmVybm1lbnQgaGFkIGxpdHRsZSByZWFsIHJvb20gdG8gd2lnZ2xlIG9uIHRoZSBtb25ldGFyeSBwb2xpY3kgZnJvbnQgd2hpbGUgc3RhYmlsaXppbmcgZ3Jvd3RoLiAiVGhlIGdvdmVybm1lbnQncyBwb2xpY3kgY2hhbGxlbmdlIGZvciB0aGlzIHllYXIgaXMgdG8gc3RyaWtlIGEgYmFsYW5jZSBiZXR3ZWVuIGNvbnRhaW5pbmcgYW4gYXNzZXQgYnViYmxlIGFuZCBwdXNoaW5nIHRoZSBlY29ub215IG91dCBvZiB0aGUgZ3Jvd3RoIG1hbGFpc2UsIiBzaGUgc2FpZC4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT1X0cyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDlmM2YzYTY4YzQ5NmViYjM=</field><field name="symbol" class="java.lang.String">rO0ABXQABENBU1Q=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT1c+CiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+5mZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/B64UeuFHs</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+5mZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/B64UeuFHs</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/B64UeuFHs</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAArXA==</field><field name="id" class="java.lang.String">rO0ABXQAEDBiMTQ5ZjlhZTAxNTNlY2Y=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEhnAAAA==</field></document></documents><date>2015-05-07T12:26:25-0500</date></cacheEntry>
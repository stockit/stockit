<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0Dq9BZnRlciBtb250aHMgb2YgcHJlZGljdGluZyBhbiBldmVyYmlnZ2VyIHJlY29yZCBVUyBjb3JuIGhhcnZlc3QgdGhlIGdvdmVybm1lbnQgdW5leHBlY3RlZGx5IHRyaW1tZWQgaXRzIG91dGxvb2sgZm9yIHByb2R1Y3Rpb24gYW5kIGludmVudG9yaWVzIE1vbmRheSBzZW5kaW5nIHByaWNlcyBoaWdoZXIgVGhlIERlcGFydG1lbnQgb2YgQWdyaWN1bHR1cmUgbG93ZXJlZCBpdHMgY3JvcCBlc3RpbWF0ZSBieSAwNSBwZXJjZW50IGFuZCBzYWlkIHRoYXQgc3RvY2twaWxlcyBhdCB0aGUgZW5kIG9mIHRoZSBzZWFzb24gd2lsbCBiZSAzNSBwZXJjZW50IHNtYWxsZXIgdGhhbiBwcmVkaWN0ZWQgaW4gT2N0b2JlciBhIHJlcG9ydCBzaG93ZWQgTW9uZGF5IFRoZSByZWR1Y3Rpb24gdG8gdGhlIGhhcnZlc3QgZXN0aW1hdGUgY29tZXMgYWZ0ZXIgdGhyZWUgc3RyYWlnaHQgbW9udGhzIG9mIGluY3JlYXNlZCBwcm9qZWN0aW9ucyBQcmljZXMgcm9zZSBhcyBtdWNoIGFzIDMxIHBlcmNlbnQgYWZ0ZXIgdGhlIHN1cnByaXNlIGN1dHMgUmFpbnMgdGhpcyBzcHJpbmcgbWFkZSBmaWVsZHMgc29nZ3kgYXMgZmFybWVycyBmaW5pc2hlZCBzb3dpbmcgc2VlZHMgaW4gSW93YSBhbmQgTWlubmVzb3RhIHdoZXJlIHRoZSBVU0RBIHNhaWQgTW9uZGF5IHRoYXQgcHJvZHVjZXJzIHdpbGwgY29sbGVjdCBmZXdlciBidXNoZWxzIHBlciBhY3JlIHRoYW4gdGhleSBleHBlY3RlZCBsYXN0IG1vbnRoIE5hdGlvbmFsIHlpZWxkcyB3aWxsIHN0aWxsIGJlIG1vcmUgdGhhbiA5IHBlcmNlbnQgaGlnaGVyIHRoYW4gYSB5ZWFyIGVhcmxpZXIgYW5kIGdyb3dlcnMgYXJlIHNldCB0byBnYXRoZXIgdGhlIGJpZ2dlc3QgZXZlciBoYXJ2ZXN0IEZvciBtYW55IGZhcm1lcnMgaW4gTWlubmVzb3RhIGFuZCBJb3dhIHRoZSBjcm9wIGhhZCB0b28gbXVjaCByYWluIGp1c3QgYWZ0ZXIgcGxhbnRpbmcgaW4gTWF5IHRoYXQgaHVydCBwbGFudCBwb3B1bGF0aW9ucyBhbmQgdGhlIGFiaWxpdHkgdG8gcHJvZHVjZSBiaWcgZWFycyBNYXJrIFNjaHVsdHogY2hpZWYgYW5hbHlzdCBmb3IgTm9ydGhzdGFyIENvbW1vZGl0eSBJbnZlc3RtZW50IENvIGluIE1pbm5lYXBvbGlzIHNhaWQgaW4gYSB0ZWxlcGhvbmUgaW50ZXJ2aWV3IFRoZSBjcm9wIGxvb2tlZCBiZXR0ZXIgdGhhbiBpdCBwZXJmb3JtZWQgYmVjYXVzZSBvZiB0aGUgd2VhdGhlciB2YXJpYWJpbGl0eSBkdXJpbmcgdGhlIHNlYXNvbiBBbnkgd2F5IHlvdSBjdXQgaXQgdGhlcmUgd2lsbCBzdGlsbCBiZSBhIGJpZyBVUyBjb3JuIHN1cHBseSBDb3JuIGZ1dHVyZXMgZm9yIERlY2VtYmVyIGRlbGl2ZXJ5IGFkdmFuY2VkIDA0IHBlcmNlbnQgdG8gMzY5IGEgYnVzaGVsIGF0IDEzMyBwbSBvbiB0aGUgQ2hpY2FnbyBCb2FyZCBvZiBUcmFkZSBhZnRlciB0b3VjaGluZyAzNzg3NSB0aGUgaGlnaGVzdCBzaW5jZSBPY3QgMzAgICAgICAgICAgICAgICAgICAgICAgICAgQnV5aW5nIEludGVyZXN0IFByaWNlcyBzbHVtcGVkIDI1IHBlcmNlbnQgbGFzdCB3ZWVrIHRoZSBtb3N0IHNpbmNlIG1pZFNlcHRlbWJlciBvbiBleHBlY3RhdGlvbnMgdGhhdCB0aGUgVVNEQSB3b3VsZCByYWlzZSBpdHMgcHJvZHVjdGlvbiBvdXRsb29rIFRoZSBVUyBpcyB0aGUgd29ybGRzIHRvcCBncm93ZXIgVGhlIG1hcmtldCB3YXMgcG9zaXRpb25lZCBmb3IgcmlzaW5nIHN1cHBsaWVzIGFuZCBpbnN0ZWFkIHRoZSBnb3Zlcm5tZW50IGN1dCBpdHMgcmVzZXJ2ZSBmb3JlY2FzdHMgRGFsZSBEdXJjaGhvbHogc2VuaW9yIG1hcmtldCBhbmFseXN0IGZvciBBZ3JpVmlzb3IgTExDIGluIEJsb29taW5ndG9uIElsbGlub2lzIFNtYWxsZXIgc3VwcGxpZXMgbWF5IHR3ZWFrIHNvbWUgbmV3IGJ1eWluZyBpbnRlcmVzdCBmcm9tIGJvdGggZG9tZXN0aWMgYW5kIGZvcmVpZ24gZW5kdXNlcnMgUmVzZXJ2ZXMgb24gQXVnIDMxIDIwMTUgd2lsbCB0b3RhbCAyMDA4IGJpbGxpb24gYnVzaGVscyBkb3duIGZyb20gMjA4MSBiaWxsaW9uIDUyODUgbWlsbGlvbiBtZXRyaWMgdG9ucyBmb3JlY2FzdCBpbiBPY3RvYmVyIHRoZSBVU0RBIHNhaWQgQW5hbHlzdHMgc3VydmV5ZWQgYnkgQmxvb21iZXJnIHdlcmUgZXhwZWN0aW5nIDIxNjQgYmlsbGlvbiBvbiBhdmVyYWdlIEZhcm1lcnMgd2lsbCBjb2xsZWN0IDE0NDA3IGJpbGxpb24gYnVzaGVscyB0aGlzIHNlYXNvbiBUaGF0IGNvbXBhcmVzIHdpdGggbGFzdCBtb250aHMgZXN0aW1hdGUgb2YgMTQ0NzUgYmlsbGlvbiBhbmQgMTQ1NTYgYmlsbGlvbiBleHBlY3RlZCBieSBhbmFseXN0cyAgICAgICAgICAgICAgICAgICAgICAgICAgICBGb29kIFByaWNlcyBUaHJvdWdoICBUaHJvdWdoIEZyaWRheSBwcmljZXMgdHVtYmxlZCAxMyBwZXJjZW50IHRoaXMgeWVhciBQcm9kdWN0aW9uIHdpbGwgc3RpbGwgYmUgMzUgcGVyY2VudCBoaWdoZXIgdGhhbiBsYXN0IHNlYXNvbiB3aGVuIGZpZWxkcyByZWNvdmVyZWQgZnJvbSB0aGUgd29yc3QgZHJvdWdodCBpbiBhIGNlbnR1cnkgYW5kIHByb2R1Y3Rpb24gc3VyZ2VkIGFsbW9zdCAzMCBwZXJjZW50IFdvcmxkIGZvb2QgcHJpY2VzIGZlbGwgZm9yIGEgc2V2ZW50aCBtb250aCBpbiBPY3RvYmVyIHRoZSBsb25nZXN0IHNsaWRlIHNpbmNlIDIwMDkgVW5pdGVkIE5hdGlvbnMgZGF0YSBzaG93IEdsb2JhbCBjb3JuIGludmVudG9yaWVzIGJlZm9yZSB0aGUgMjAxNSBoYXJ2ZXN0IHdpbGwgcmVhY2ggMTkxNSBtaWxsaW9uIHRvbnMgY29tcGFyZWQgd2l0aCBsYXN0IG1vbnRocyBwcm9qZWN0aW9uIG9mIDE5MDU4IG1pbGxpb24gdGhlIFVTREEgc2FpZCBBbmFseXN0cyBzdXJ2ZXllZCBieSBCbG9vbWJlcmcgcHJlZGljdGVkIGFuIGluY3JlYXNlIHRvIDE5MTc4IG1pbGxpb24gVVMgZmFybWVycyBzb3VnaHQgbW9yZSBmdW5kcyBpbiB0aGUgdGhpcmQgcXVhcnRlciB3aXRoIG5vbnJlYWwgZXN0YXRlIGZhcm0gbG9hbnMgcmlzaW5nIDIwIHBlcmNlbnQgZnJvbSBhIHllYXIgZWFybGllciB0aGUgS2Fuc2FzIENpdHkgRmVkZXJhbCBSZXNlcnZlIHNhaWQgTm92IDcgQ29uY2VybnMgYWJvdXQgdGhlIG91dGxvb2sgZm9yIGNvbW1vZGl0eSBwcmljZXMgYW5kIGlucHV0IGNvc3RzIG1heSBtYWtlIDIwMTUgYSBtb3JlIGNoYWxsZW5naW5nIHllYXIgZm9yIGZhcm1zZWN0b3IgcHJvZml0YWJpbGl0eSB0aGUgcmVnaW9uYWwgRmVkIHNhaWQgaW4gdGhlIHJlcG9ydCBQcmljZXMgbGFzdCBtb250aCByZWFjaGVkIHRoZSBsb3dlc3Qgc2luY2UgMjAwOSByZWR1Y2luZyBjb3N0cyBmb3IgYnV5ZXJzIGluY2x1ZGluZyBUeXNvbiBGb29kcyBJbmMgVGhlIFVTREEgaGFzIGZvcmVjYXN0IHRoYXQgZ3Jvd2VyIGluY29tZXMgd2lsbCBkcm9wIHRvIGEgZm91cnllYXIgbG93IHRocmVhdGVuaW5nIHRvIHNsb3cgZGVtYW5kIGZvciBmYXJtIG1hY2hpbmVyeSBmcm9tIG1ha2VycyBpbmNsdWRpbmcgRGVlcmUgIENvIEZhcm1lcnMgd2lsbCBiZSBlbmNvdXJhZ2VkIGJ5IHRoZSBjb3JuIG51bWJlciBub3QgZ2V0dGluZyBhbnkgYmlnZ2VyIEJyeWNlIEtub3JyIGEgQ2hpY2Fnb2Jhc2VkIHNlbmlvciBncmFpbiBtYXJrZXQgYW5hbHlzdCBhdCBGYXJtIEZ1dHVyZXMgc2FpZCBpbiBhIHRlbGVwaG9uZSBpbnRlcnZpZXcgVGhlcmUgd2VyZSBzb21lIGV4dHJlbWVseSBiZWFyaXNoIGZvcmVjYXN0cyBvdXQgdGhlcmUgZm9yIHByb2R1Y3Rpb24gV2hlbiB5b3UgdGFrZSBhIGxvb2sgYXQgbG93ZXIgZXhwZWN0ZWQgYWNyZXMgZm9yIDIwMTUgdGhhdCBoZWxwcyBzdXBwb3J0IHRoZSBjb3JuIG1hcmtldCBhIGxpdHRsZSBiaXR0AARyb3dzdXEAfgAKAAAAAXQAATV0AAVzdGFydHVxAH4ACgAAAAF0AAEwdAACZmx1cQB+AAoAAAABdABvYXJ0aWNsZUlkLHRpdGxlLGNvbnRlbnQsZGF0ZSxzdG9ja0hpc3RvcnlJZCxzeW1ib2wsaGlzdG9yeURhdGUsb3BlbixoaWdoLGxvdyxjbG9zZSxhZGpDbG9zZSx2b2x1bWUsaWQsX3ZlcnNpb25fdAACZnF1cQB+AAoAAAABdAA6aGlzdG9yeURhdGU6WzIwMTAtMDYtMTFUMDA6MDA6MDBaIFRPIDIwMTMtMDctMzBUNTk6NTk6NTlaXXgAcA==</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTEyMTg1</field><field name="title" class="java.lang.String">rO0ABXQAMkZhcm1lcnMgUGxhbiBCaWdnZXN0IENyb3BzIFNpbmNlIDE5ODQsIExlZCBieSBDb3Ju</field><field name="content" class="java.lang.String">rO0ABXQl/lRoZXkgd2lsbCBzb3cgY29ybiwgc295YmVhbnMgYW5kIHdoZWF0IG9uIDIyNi45IG1pbGxpb24gYWNyZXMsIHRoZSBtb3N0IHNpbmNlIDE5ODQsIGEgQmxvb21iZXJnIHN1cnZleSBvZiAzNiBmYXJtZXJzLCBiYW5rZXJzIGFuZCBhbmFseXN0cyBzaG93ZWQuIFRoZSAyLjUgcGVyY2VudCBnYWluIG1lYW5zIGFuIGV4cGFuc2lvbiB0aGUgc2l6ZSBvZiBOZXcgSmVyc2V5LCBhcyBncm93ZXJzIHRhcmdldCBmaWVsZHMgbGVmdCBmYWxsb3cgbGFzdCB5ZWFyIGFuZCBsYW5kIGZyZWVkIHVwIGZyb20gY29uc2VydmF0aW9uIHByb2dyYW1zLiBDcm9wIHByaWNlcywgc29tZSBvZiB3aGljaCByZWFjaGVkIHRoZSBoaWdoZXN0IGF2ZXJhZ2VzIGV2ZXIgaW4gMjAxMSwgYm9sc3RlcmVkIHRoZSBlY29ub21pZXMgb2YgTWlkd2VzdCBncm93aW5nIHN0YXRlcywgc2VudCBuZXQgZmFybSBpbmNvbWUgdXAgMjggcGVyY2VudCB0byAkMTAwLjkgYmlsbGlvbiBhbmQgcHVzaGVkIHRoZSB2YWx1ZSBvZiBmYXJtbGFuZCB0byBhIHJlY29yZCAkMiwzNTAgYW4gYWNyZSwgdGhlIFUuUy4gRGVwYXJ0bWVudCBvZiBBZ3JpY3VsdHVyZSBlc3RpbWF0ZXMuIEdsb2JhbCBmb29kIGNvc3RzIGFyZSBkb3duIDExIHBlcmNlbnQgZnJvbSBhIHBlYWsgYSB5ZWFyIGFnbyBhcyBncmFpbiBvdXRwdXQgcmlzZXMgZnJvbSBDaGluYSB0byBDYW5hZGEsIFVuaXRlZCBOYXRpb25zIGRhdGEgc2hvdy4g4oCcVGhlcmUgaXMgdW5saWtlbHkgdG8gYmUgYW55IGdyb3VuZCB0aGF0IHdvbuKAmXQgYmUgcGxhbnRlZCB0aGlzIHllYXIs4oCdIHNhaWQgVG9kZCBXYWNodGVsLCBhIDQwIHllYXItb2xkIHdobyBmYXJtcyBhYm91dCA1LDcwMCBhY3JlcyBpbiBBbHRhbW9udCwgSWxsaW5vaXMsIGFuZCBwbGFucyB0byBleHBhbmQgaGlzIGNvcm4gZmllbGRzIGJ5IDIxIHBlcmNlbnQgd2hlbiBzZWVkaW5nIGJlZ2lucyBpbiBlYXJseSBBcHJpbC4g4oCcRmFybWVycyBrbm93IHRoYXQgdGhleSBoYXZlIHRvIHBsYW50IG1vcmUgd2hlbiBwcmljZXMgYXJlIGhpZ2ggYmVjYXVzZSB0aGV5IG1heSBub3QgbGFzdC7igJ0gUHJvZHVjdGlvbiBGb3JlY2FzdCBBIGJpZ2dlciBoYXJ2ZXN0IGluIHRoZSBVLlMuLCB0aGUgd29ybGTigJlzIGxhcmdlc3QgZXhwb3J0ZXIgb2YgYWxsIHRocmVlIGNyb3BzLCB3aWxsIGhlbHAgY29tcGVuc2F0ZSBmb3Igc2hvcnRhZ2VzIGluIHRoZSBjdXJyZW50IGNyb3AgeWVhci4gRHJvdWdodCBkYW1hZ2UgaW4gQnJhemlsIGFuZCBBcmdlbnRpbmEgd2lsbCBwcm9iYWJseSBzcHVyIHRoZSBVU0RBIHRvIGN1dCBpdHMgZ2xvYmFsIGFuZCBVLlMuIGdyYWluLXN1cHBseSBmb3JlY2FzdHMgZm9yIHRoZSBjdXJyZW50IHNlYXNvbiBvbiBGZWIuIDksIGEgc2VwYXJhdGUgQmxvb21iZXJnIHN1cnZleSBvZiBhcyBtYW55IGFzIDI1IGFuYWx5c3RzIHNob3dlZC4gVGhlIFVTREHigJlzIGZpcnN0IGZvcmVjYXN0IGZvciB0aGUgeWVhciAyMDEyLTIwMTMgY3JvcCB5ZWFyIGlsbCBiZSBGZWIuIDIzLiBGYXJtZXJzIHdpbGwgc293IGNvcm4sIHVzZWQgdG8gZmVlZCBsaXZlc3RvY2sgYW5kIG1ha2UgZXRoYW5vbCwgb24gOTQuMzI5IG1pbGxpb24gYWNyZXMgdGhpcyB5ZWFyLCB1cCAyLjYgcGVyY2VudCBmcm9tIGxhc3QgeWVhciBhbmQgdGhlIG1vc3Qgc2luY2UgMTk0NCwgYWNjb3JkaW5nIHRvIHRoZSBCbG9vbWJlcmcgc3VydmV5LiBTb3liZWFuIGZpZWxkcyBtYXkgZXhwYW5kIDAuNCBwZXJjZW50IHRvIDc1LjMwOSBtaWxsaW9uIGFjcmVzLCB0aGUgZmlmdGgtbW9zdCBldmVyLiBCb3RoIGNyb3BzIGFyZSBoYXJ2ZXN0ZWQgYWZ0ZXIgdGhlIGN1cnJlbnQgc2Vhc29uIGVuZHMgb24gQXVnLiAzMS4gV2hlYXQgaW4gdGhlIHNlYXNvbiB0aGF0IGJlZ2lucyBKdW5lIDEgd2lsbCByZWFjaCBhIHRocmVlLXllYXIgaGlnaCBvZiA1Ny4yMzMgbWlsbGlvbiBhY3JlcywgdXAgNS4yIHBlcmNlbnQsIHRoZSBzdXJ2ZXkgc2hvd2VkLiBDb3JuIHByaWNlcyBtYXkgcmlzZSA3LjEgcGVyY2VudCB0byAkNi45MCBhIGJ1c2hlbCBpbiBzaXggbW9udGhzIGJlY2F1c2Ugb2YgdGhlIGRhbWFnZSBpbiBTb3V0aCBBbWVyaWNhLCBiZWZvcmUgZHJvcHBpbmcgdG8gJDUuMjUgaW4gYSB5ZWFyIGFzIFUuUy4gZmFybWVycyBpbmNyZWFzZSBzdXBwbHksIEdvbGRtYW4gU2FjaHMgR3JvdXAgSW5jLiBzYWlkIGluIGEgRmViLiAyIHJlcG9ydC4gQ29ybiBmb3IgZGVsaXZlcnkgaW4gRGVjZW1iZXIsIGFmdGVyIHRoZSBoYXJ2ZXN0LCBjbG9zZWQgeWVzdGVyZGF5IGF0ICQ1LjgxMjUsIDkuOCBwZXJjZW50IGJlbG93IHRoZSBNYXJjaCBjb250cmFjdCBvbiB0aGUgQ2hpY2FnbyBCb2FyZCBvZiBUcmFkZS4gRm9yZXNpZ2h0IENvbW1vZGl0aWVzIFdoZWF0IG1heSB0dW1ibGUgMTggcGVyY2VudCB0byAkNS41MCBieSBKdWx5IGFuZCBzb3liZWFucyBtYXkgZHJvcCAxNyBwZXJjZW50IHRvICQxMC4yMCBhIGJ1c2hlbCwgYW5hbHlzdHMgYXQgY29tbW9kaXR5IGJyb2tlciBBbGxlbmRhbGUgSW5jLiBpbiBNY0hlbnJ5LCBJbGxpbm9pcywgc2FpZCBKYW4uIDIxLiDigJxUaGUgYXJlYSBpcyBhdmFpbGFibGUgdG8gaGF2ZSBodWdlIGNyb3BzIHRoaXMgeWVhcizigJ0gc2FpZCBQYXVsIE1leWVycywgYSB2aWNlIHByZXNpZGVudCBhdCBGb3Jlc2lnaHQgQ29tbW9kaXRpZXMgU2VydmljZXMgSW5jLiBpbiBMb25nIFZhbGxleSwgTmV3IEplcnNleSwgYW5kIHRoZSBmb3JtZXIgaGVhZCBvZiBncmFpbi1tYXJrZXQgYW5hbHlzaXMgYXQgdGhlIFVTREEgZnJvbSAxOTc0IHRvIDE5ODMuIOKAnFdlIGFyZSBoZWFkZWQgZm9yIGEgc3VycGx1cy1zdXBwbHkgc2l0dWF0aW9uLuKAnSBDb3JuLCBzb3liZWFuIGFuZCB3aGVhdCBmdXR1cmVzIGFyZSBkb3duIGF0IGxlYXN0IDE1IHBlcmNlbnQgc2luY2UgdGhlIGVuZCBvZiBBdWd1c3QsIGhlbHBpbmcgdG8gc2VuZCB0aGUgU3RhbmRhcmQgJiBQb29y4oCZcyBHU0NJIEFncmljdWx0dXJlIEluZGV4IHRvIGEgMTYgcGVyY2VudCBkZWNsaW5lLiBUaGUgTVNDSSBBbGwtQ291bnRyeSBXb3JsZCBJbmRleCBvZiBlcXVpdGllcyBnYWluZWQgNC42IHBlcmNlbnQgZHVyaW5nIHRoZSBwZXJpb2QsIHRvdWNoaW5nIGEgc2l4LW1vbnRoIGhpZ2ggRmViLiAzLCB3aGlsZSBUcmVhc3VyaWVzIHJldHVybmVkIDIuMiBwZXJjZW50LCBhIEJhbmsgb2YgQW1lcmljYSBDb3JwLiBpbmRleCBzaG93cy4gV29ybGQgZm9vZCBwcmljZXMgZmVsbCB0byBhIDE0LW1vbnRoIGxvdyBpbiBEZWNlbWJlciwgbGVkIGJ5IGRlY2xpbmVzIGluIGdyYWlucywgc3VnYXIgYW5kIG9pbHNlZWRzLCB0aGUgVU7igJlzIEZvb2QgYW5kIEFncmljdWx0dXJlIE9yZ2FuaXphdGlvbiBzYWlkIEphbi4gMTIuIE1vbmV0YXJ5IEZ1bmQgVGhlIFVTREEgYWZmaXJtZWQgaXRzIGZvcmVjYXN0IGZvciBtb2RlcmF0aW5nIGZvb2QgY29zdHMgbGFzdCBtb250aC4gUHJpY2VzIHdpbGwgaW5jcmVhc2UgMi41IHBlcmNlbnQgdG8gMy41IHBlcmNlbnQgaW4gMjAxMiwgYmVsb3cgbGFzdCB5ZWFy4oCZcyAzLjcgcGVyY2VudCBnYWluLCB0aGUgYWdlbmN5IHNhaWQgSmFuLiAyNS4gVGhlIHNhbWUgZGF5LCB0aGUgSW50ZXJuYXRpb25hbCBNb25ldGFyeSBGdW5kIGZvcmVjYXN0IGEgMTQgcGVyY2VudCBkcm9wIGluIG5vbi1vaWwgY29tbW9kaXRpZXMgdGhpcyB5ZWFyLCBjaXRpbmcgbW9yZSBzdXBwbHkuIEZhcm1lcnMgaW4gdGhlIE1pZHdlc3QsIHRoZSBtYWluIGdyb3dpbmcgcmVnaW9uLCBhcmUgbGVzcyB0aGFuIHR3byBtb250aHMgYXdheSBmcm9tIHBsYW50aW5nIHNlZWRzLCBhbmQgZHJ5IHNvaWxzIGluIHNvbWUgYXJlYXMgY291bGQgbGltaXQgb3V0cHV0LiBUaGUgbW9zdCB3aWRlbHktaGVsZCBvcHRpb24gb24gRGVjZW1iZXIgY29ybiBmdXR1cmVzIGdpdmVzIHRoZSBob2xkZXIgdGhlIHJpZ2h0IHRvIGJ1eSB0aGUgZ3JhaW4gYXQgJDcuIOKAnEl04oCZcyBiZWVuIGFuIGFibm9ybWFsbHkgd2FybSB3aW50ZXIs4oCdIHNhaWQgQWxhbiBUaWVtYW5uLCB3aG8gaXMgcHJlcGFyaW5nIHRvIGV4cGFuZCBjb3JuIHBsYW50aW5nIG9uIGhpcyAyLDAwMC1hY3JlIGZhcm0gaW4gU2V3YXJkLCBOZWJyYXNrYSwgYnkgMTUgcGVyY2VudC4g4oCcVGhhdCBtYXkgbm90IHJlbGF0ZSB0byB3aGF04oCZcyBnb2luZyB0byBoYXBwZW4gdGhpcyBzdW1tZXIsIGJ1dCBpdCBrZWVwcyB5b3Ugb24gdGhlIGVkZ2Ugb2YgeW91ciBzZWF0IGEgbGl0dGxlIGJpdCwgd29uZGVyaW5nIHdoZW4gdGhlIG5leHQgbW9pc3R1cmUgZXZlbnQgaXMgZ29pbmcgdG8gaGFwcGVuLuKAnSBDb3JuIGF2ZXJhZ2VkICQ2Ljc5IGluIENoaWNhZ28gbGFzdCB5ZWFyLCB0aGUgaGlnaGVzdCBldmVyIGFuZCB0d2ljZSB0aGUgbGV2ZWwgb2YgdGhlIHByZXZpb3VzIGRlY2FkZSwgZXhjaGFuZ2UgZGF0YSBzaG93LiBTb3liZWFucyBhdmVyYWdlZCBhIHJlY29yZCAkMTMuMjEsIDcyIHBlcmNlbnQgYWJvdmUgdGhlIDEwIHByZXZpb3VzIHllYXJzLCB3aGlsZSB3aGVhdOKAmXMgYXZlcmFnZSBvZiAkNy4yMzUgd2FzIHRoZSBzZWNvbmQtIGhpZ2hlc3QgZXZlciBhbmQgNTcgcGVyY2VudCBtb3JlIHRoYW4gdGhlIHBhc3QgZGVjYWRlLiBUcmFkaW5nIENvbW1pc3Npb24gTW9uZXkgbWFuYWdlcnMgaGF2ZSBiZWVuIGJldHRpbmcgb24gbG93ZXIgd2hlYXQgcHJpY2VzIHNpbmNlIFNlcHRlbWJlciwgVS5TLiBDb21tb2RpdHkgRnV0dXJlcyBUcmFkaW5nIENvbW1pc3Npb24gZGF0YSBzaG93LiBUaGV5IGN1dCB0aGVpciBidWxsaXNoIHdhZ2VycyBvbiBzb3liZWFuIGFuZCBjb3JuIGluIHR3byBvZiB0aGUgcGFzdCB0aHJlZSB3ZWVrcy4gRmxvb2RzLCBkcm91Z2h0IGFuZCBmcmVlemVzIGxhc3QgeWVhciBwcmV2ZW50ZWQgcGxhbnRpbmcgb2YgdGhlIHRocmVlIGNyb3BzIG9uIGFib3V0IDguNTc3IG1pbGxpb24gYWNyZXMsIDI4IHBlcmNlbnQgbW9yZSB0aGFuIGluIDIwMTAsIFVTREEgZGF0YSBzaG93LiBBbiBhZGRpdGlvbmFsIDEuODQgbWlsbGlvbiBhY3JlcyB0aGF0IHdlcmUgcGxhbnRlZCBmYWlsZWQgdG8gcHJvZHVjZSwgbW9yZSB0aGFuIGRvdWJsZSB0aGUgYW1vdW50IGEgeWVhciBlYXJsaWVyLiBDcm9wIGluc3VyZXJzIHBhaWQgb3V0IGEgcmVjb3JkICQ5LjEgYmlsbGlvbiBsYXN0IHllYXIgdG8gY292ZXIgdGhlIGRhbWFnZSwgYW5kIHRoZSBiaWxsIG1heSB0b3AgJDEwIGJpbGxpb24gd2hlbiBhbGwgY2xhaW1zIGFyZSBzZXR0bGVkLCBPdmVybGFuZCBQYXJrLCBLYW5zYXMtYmFzZWQgTmF0aW9uYWwgQ3JvcCBJbnN1cmFuY2UgU2VydmljZXMgc2FpZCBKYW4uIDI0LiBBIHJldHVybiB0byBub3JtYWwgd2VhdGhlciBpbiAyMDEyIHdvdWxkIG1lYW4gbW9yZSBwcm9kdWN0aW9uIGZyb20gbGFzdCB5ZWFy4oCZcyBsb3N0IGFjcmVzLiBUaGUgZ292ZXJubWVudCBhbHNvIGhhcyByZWR1Y2VkIHRoZSBhbW91bnQgb2YgbGFuZCBpdCBwYXlzIGZhcm1lcnMgdG8gbGVhdmUgZmFsbG93IGJ5IDQuNyBwZXJjZW50LCBhZGRpbmcgMS40NyBtaWxsaW9uIGFjcmVzIHRoYXQgd2VyZW7igJl0IGF2YWlsYWJsZSBpbiAyMDExLCBVU0RBIGRhdGEgc2hvdy4gUmlzaW5nIGluY29tZXMgYWxsb3dlZCBmYXJtZXJzIHRvIGJ1eSBtb3JlIGxhbmQgYW5kIHRoZSBleHRyYSBzZWVkLCBjcm9wIGNoZW1pY2FscyBhbmQgZXF1aXBtZW50IG5lZWRlZC4gUHJvZml0YWJsZSBJbmR1c3RyaWVzIOKAnEdyYWluIGZhcm1pbmcgaGFzIGJlZW4gb25lIG9mIGZldyBwcm9maXRhYmxlIGluZHVzdHJpZXMgZm9yIHRoZSBwYXN0IHRocmVlIHllYXJzLCBhbmQgdGhlcmUgd2lsbCBiZSBhIHRlbmRlbmN5IGZvciBmYXJtZXJzIGFyb3VuZCB0aGUgd29ybGQgdG8gbWF4aW1pemUgYWNyZWFnZSzigJ0gc2FpZCBEb24gUm9vc2UsIHRoZSBwcmVzaWRlbnQgb2YgVS5TLiBDb21tb2RpdGllcyBJbmMuIGluIFdlc3QgRGVzIE1vaW5lcywgSW93YSwgd2hvIGhhcyBiZWVuIGFkdmlzaW5nIGZhcm1lcnMgYW5kIGdyYWluIGVsZXZhdG9ycyBzaW5jZSAxOTc5LiDigJxXZSBoYXZlIHRoZSBwb3RlbnRpYWwgdG8gZ3JvdyByZWNvcmQgd29ybGQgY3JvcHMgdGhpcyB5ZWFyIHRoYXQgY2FuIHN3YW1wIGRlbWFuZC7igJ0gRGVlcmUgJiBDby4sIHRoZSB3b3JsZOKAmXMgbGFyZ2VzdCBmYXJtLWVxdWlwbWVudCBtYWtlciwgd2lsbCByZXBvcnQgcmVjb3JkIG5ldCBpbmNvbWUgb2YgJDMuMTQgYmlsbGlvbiB0aGlzIHllYXIsIHVwIGZyb20gJDIuOCBiaWxsaW9uIGEgeWVhciBlYXJsaWVyLCB0aGUgbWVhbiBvZiBlaWdodCBhbmFseXN0IGVzdGltYXRlcyBjb21waWxlZCBieSBCbG9vbWJlcmcgc2hvd3MuIFNoYXJlcyBvZiB0aGUgTW9saW5lLCBJbGxpbm9pcy0gYmFzZWQgY29tcGFueSByb3NlIDE0IHBlcmNlbnQgdGhpcyB5ZWFyLiBNb25zYW50byBDby4sIHRoZSBiaWdnZXN0IHNlZWQgY29tcGFueSwgd2lsbCBlYXJuICQxLjkgYmlsbGlvbiwgdXAgZnJvbSAkMS42MSBiaWxsaW9uLCB0aGUgbWVhbiBvZiBzZXZlbiBlc3RpbWF0ZXMgc2hvd3MuIFRoZSBTdC4gTG91aXMtYmFzZWQgY29tcGFueSByb3NlIDE0IHBlcmNlbnQgaW4gTmV3IFlvcmsgdHJhZGluZyB0aGlzIHllYXIuIEZhcm1pbmcgQWNjb3VudHMgTGFuZCBwcmljZXMgaW4gSW93YSwgdGhlIGJpZ2dlc3QgY29ybi0gYW5kIHNveWJlYW4tZ3Jvd2luZyBzdGF0ZSwgYXZlcmFnZWQgJDUsNjAwIGFuIGFjcmUgbGFzdCB5ZWFyLCB0aHJlZSB0aW1lcyB0aGUgYW1vdW50IGEgZGVjYWRlIGFnbywgVVNEQSBkYXRhIHNob3cuIFdoaWxlIGZhcm1pbmcgYWNjb3VudHMgZm9yIDAuOSBwZXJjZW50IG9mIHRoZSBVLlMuIGVjb25vbXksIGl0IGhhcyBiZWVuIGFtb25nIHRoZSBmYXN0ZXN0LWdyb3dpbmcgY29udHJpYnV0b3JzLiBUaGUgYW1vdW50IG9mIHZhbHVlIGFkZGVkIGJ5IGFncmljdWx0dXJlIGluIHRoZSBmb3VyIHllYXJzIHRocm91Z2ggMjAxMCByb3NlIDQyIHBlcmNlbnQgdG8gJDEzMi42IGJpbGxpb24sIGNvbXBhcmVkIHdpdGggOC42IHBlcmNlbnQgZ3Jvd3RoIGZvciB0aGUgZW50aXJlIGVjb25vbXksIGdvdmVybm1lbnQgZGF0YSBzaG93LiBVLlMuIGV4cG9ydHMgc3VyZ2VkIGFzIGdsb2JhbCBlY29ub21pYyBncm93dGggYm9vc3RlZCBkZW1hbmQgZm9yIGNyb3BzLCBtZWF0IGFuZCBkYWlyeSBwcm9kdWN0cywgd2hpbGUgd2VhdGhlciBkYW1hZ2UgZGlzcnVwdGVkIHN1cHBsaWVzIG9mIGV2ZXJ5dGhpbmcgZnJvbSBSdXNzaWFuIHdoZWF0IHRvIENoaW5lc2UgcG9yay4gU2hpcG1lbnRzIHJlYWNoZWQgYSByZWNvcmQgJDEzNy40IGJpbGxpb24gaW4gdGhlIHllYXIgdGhhdCBlbmRlZCBTZXB0LiAzMCwgd2l0aCBDaGluYSB0aGUgbGFyZ2VzdCBmYXJtLWdvb2RzIGJ1eWVyLCBVU0RBIGRhdGEgc2hvdy4gV2hpbGUgdGhlIGdvdmVybm1lbnQgZXhwZWN0cyBhIGRyb3AgdG8gJDEzMiBiaWxsaW9uIGluIHRoZSBjdXJyZW50IGZpc2NhbCB5ZWFyLCB0aGF0IHN0aWxsIHdvdWxkIGJlIHRoZSBzZWNvbmQtIGxhcmdlc3QgZXZlciBhbmQgMjEgcGVyY2VudCBoaWdoZXIgdGhhbiB3aGVuIFByZXNpZGVudCBCYXJhY2sgT2JhbWEgc2V0IGEgZ29hbCBpbiAyMDEwIHRvIGRvdWJsZSBhbGwgVS5TLiBleHBvcnRzIGJ5IDIwMTUuIFUuUy4gVW5lbXBsb3ltZW50IFVuZW1wbG95bWVudCBpbiBNaWR3ZXN0IHN0YXRlcyB3YXMgNy45IHBlcmNlbnQgaW4gRGVjZW1iZXIsIHRpZWQgd2l0aCB0aGUgTm9ydGhlYXN0IGFzIHRoZSBoZWFsdGhpZXN0IGpvYiByZWdpb24uIE5vcnRoIERha290YSwgTmVicmFza2EgYW5kIFNvdXRoIERha290YSB3ZXJlIHRoZSBvbmx5IHN0YXRlcyB3aXRoIHVuZW1wbG95bWVudCB1bmRlciA1IHBlcmNlbnQuIFRoZSBuYXRpb25hbCByYXRlIGZlbGwgdG8gOC4zIHBlcmNlbnQgaW4gSmFudWFyeSBmcm9tIDguNSBwZXJjZW50IGluIERlY2VtYmVyLiBDb3JuIHdpbGwgbGVhZCB0aGUgcGxhbnRpbmcgc3VyZ2UgYmVjYXVzZSBpdCBpcyB0aGUgbW9zdCBwcm9maXRhYmxlIHJvdyBjcm9wLiBVLlMuIG1hbmRhdGVzIGZvciBhbHRlcm5hdGl2ZSBmdWVscyBoYXZlIGxlZCB0byBhbiBpbmNyZWFzZWQgdXNlIG9mIHRoZSBncmFpbiB0byBtYWtlIGV0aGFub2wsIGFuZCByaXNpbmcgd29ybGR3aWRlIGluY29tZXMgYXJlIGJvb3N0aW5nIG1lYXQgY29uc3VtcHRpb24sIGluY3JlYXNpbmcgcmVxdWlyZW1lbnRzIGZvciBsaXZlc3RvY2sgZmVlZC4gR2xvYmFsIHByb2R1Y3Rpb24gb2YgYmVlZiwgdmVhbCwgcG9yaywgY2hpY2tlbiBhbmQgdHVya2V5IHdpbGwgcmVhY2ggYWxtb3N0IGEgcXVhcnRlciBvZiBhIGJpbGxpb24gbWV0cmljIHRvbnMgdGhpcyB5ZWFyLCA2MiBwZXJjZW50IG1vcmUgdGhhbiB0d28gZGVjYWRlcyBhZ28sIHRoZSBVU0RBIGVzdGltYXRlcy4gQW4gYWNyZSBvZiBjb3JuIHdpbGwgZWFybiBhcyBtdWNoICQxNTAgbW9yZSB0aGFuIHNveWJlYW5zIGF0IGN1cnJlbnQgcHJpY2VzIGFuZCBub3JtYWwgd2VhdGhlciwgc2FpZCBNaWtlIFdhZ2xlciwgMzAsIHdobyBmYXJtcyBhYm91dCA3LDAwMCBhY3JlcyB3aXRoIGhpcyBmYXRoZXIgaW4gTW9udGdvbWVyeSwgSW5kaWFuYS4g4oCcRmFybWVycyBoYXZlIHRoZSBjYXBpdGFsIHRvIHBsYW50IGEgYmlnIGNvcm4gY3JvcCB0aGlzIHllYXIs4oCdIHNhaWQgV2FnbGVyLCB3aG8gcGxhbnMgdG8gc293IDg1IHBlcmNlbnQgb2YgaGlzIGZhbWlseeKAmXMgbGFuZCB3aXRoIHRoZSBncmFpbiBjb21wYXJlZCB3aXRoIDcwIHBlcmNlbnQgbGFzdCB5ZWFyLiDigJxXZSBjYW4gbWFrZSBtb3JlIG1vbmV5IHJhaXNpbmcgY29ybiB0aGFuIHNveWJlYW5zLuKAnSBOb3J0aCBEYWtvdGEgSW4gTm9ydGggRGFrb3RhLCB0aGUgbGFyZ2VzdCBwcm9kdWNlciBvZiBzcHJpbmcgd2hlYXQsIGZhcm1lcnMgcHJvYmFibHkgd2lsbCBwbGFudCByZWNvcmQgY29ybiBhbmQgc295YmVhbiBhY3JlcyB0aGlzIHllYXIgYXMgdGhleSB1c2UgbW9zdCBvZiB0aGUgNS42IG1pbGxpb24gYWNyZXMgdGhhdCBjb3VsZG7igJl0IGJlIHBsYW50ZWQgaW4gMjAxMSwgc2FpZCBGcmF5bmUgT2xzb24sIGFuIGFncmljdWx0dXJlIGVjb25vbWlzdCBhdCBOb3J0aCBEYWtvdGEgU3RhdGUgVW5pdmVyc2l0eSBpbiBGYXJnby4gU3ByaW5nLXdoZWF0IGFjcmVhZ2Ugd2lsbCByZW1haW4gc3RlYWR5LCBoZSBzYWlkLiBEYXZpZCBLb3BzZW5nLCBhIGZvdXJ0aC1nZW5lcmF0aW9uIGdyb3dlciBvbiA0LDcwMCBhY3JlcyBpbiBIYXJ2ZXksIE5vcnRoIERha290YSwgc2FpZCBoZSB3aWxsIGJvb3N0IGNvcm4gcGxhbnRpbmcgYnkgMTcgcGVyY2VudCB0byAxLDQwMCBhY3JlcyBmcm9tIGEgeWVhciBlYXJsaWVyLiBpbiAyMDA2LCBoZSBkaWRu4oCZdCBzb3cgYW55IG9mIHRoZSBncmFpbi4gSW1wcm92ZWQgc2VlZHMgaGF2ZSBib29zdGVkIHlpZWxkIGJ5IGFib3V0IDQwIHBlcmNlbnQgaW4gdGhlIHBhc3QgZGVjYWRlLCBtYWtpbmcgY29ybiBhdCBsZWFzdCAkNTAgbW9yZSBwcm9maXRhYmxlIHRoYW4gd2hlYXQgb3Igc295YmVhbnMsIGhlIHNhaWQuIOKAnFdl4oCZcmUgZ29pbmcgdG8gcGxhbnQgdGhlIG1vc3QgY29ybiBhY3JlcyBldmVyLOKAnSBzYWlkIHRoZSA0Ny15ZWFyLW9sZCBLb3BzZW5nLiDigJxJ4oCZdmUgYmVlbiBidXlpbmcgc29tZSBtb3JlIGxhbmQgYW5kIHJlbnRpbmcgbW9yZSBiZWNhdXNlIG9mIGNvcm7igJlzIHByb2ZpdGFiaWxpdHkuIEl04oCZcyBhIGdyZWF0IHRpbWUgdG8gYmUgYSBmYXJtZXIgaW4gTm9ydGggRGFrb3RhLuKAnQ==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATVbjA8AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDUxMGY0YzkxODQ1OTFjYmQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABjM5Ty5TRw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATVgsmsAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/9cKPXCj1x</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/9cKPXCj1x</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/9cKPXCj1x</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/9cKPXCj1x</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/9cKPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDYwOTc2YzY3NTFmMDMyNmM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFjOAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDIxMjI=</field><field name="title" class="java.lang.String">rO0ABXQASFRpZ2h0ZXN0IENvcm4gQ3JvcCBTaW5jZSAxOTc0IFByb21wdHMgUHJlZGljdGlvbnMgZm9yIE5lYXItUmVjb3JkIFByaWNlcw==</field><field name="content" class="java.lang.String">rO0ABXQYwEdsb2JhbCBzdG9ja3BpbGVzIHdpbGwgZHJvcCAxMSBwZXJjZW50IHRvIDExNy42MSBtaWxsaW9uIG1ldHJpYyB0b25zIGJ5IE9jdC4gMSwgb3IgMTMuNiBwZXJjZW50IG9mIHdoYXQgd2lsbCBiZSB1c2VkIGZvciBmb29kLCBldGhhbm9sIGFuZCBsaXZlc3RvY2sgZmVlZCwgdGhlIGxvd2VzdCByYXRpbyBzaW5jZSAxOTc0LCB0aGUgVS5TLiBEZXBhcnRtZW50IG9mIEFncmljdWx0dXJlIHNhaWQgaW4gYSByZXBvcnQuIFByaWNlcyBzdXJnZWQgNDQgcGVyY2VudCBzaW5jZSBtaWQtSnVuZSBhcyBVLlMuIGZhcm1lcnMgZW5kdXJlZCB0aGVpciB3b3JzdCBkcm91Z2h0IGluIDU2IHllYXJzLCBhbmQgaGVhdCB3YXZlcyBhbmQgZHJ5IHdlYXRoZXIgc2VhcmVkIGNyb3BzIGZyb20gQXVzdHJhbGlhIHRvIEV1cm9wZS4gV2hpbGUgZnV0dXJlcyBmZWxsIDE0IHBlcmNlbnQgc2luY2UgcmVhY2hpbmcgYSByZWNvcmQgJDguNDkgYSBidXNoZWwgb24gQXVnLiAxMCwgdGlnaHRlbmluZyBzdXBwbHkgYmVmb3JlIG5leHQgeWVhcuKAmXMgaGFydmVzdCB3aWxsIGRyaXZlIHByaWNlcyB0byBhbiBhdmVyYWdlIG9mICQ4LjI1IGluIHRoZSBuZXh0IHNpeCBtb250aHMsIDEzIHBlcmNlbnQgaGlnaGVyIHRoYW4gTW9uZGF5LCBHb2xkbWFuIHNhaWQgaW4gYSBEZWMuIDUgcmVwb3J0LiDigJxJdCB3aWxsIHRha2UgbW9yZSB0aGFuIG9uZSB5ZWFyIG9mIGdvb2Qgd2VhdGhlciBhbmQgaGlnaCB5aWVsZHMgdG8gZGlnIHRoZSB3b3JsZCBvdXQgb2YgdGhpcyBzdXBwbHkgaG9sZSzigJ0gc2FpZCBQZXRlciBNZXllciwgYSBzZW5pb3IgZGlyZWN0b3Igb2YgYWdyaWN1bHR1cmUgY29tbW9kaXRpZXMgYXQgUElSQSBFbmVyZ3kgR3JvdXAgaW4gTmV3IFlvcmsuIOKAnFdoaWxlIGNvcm4gcHJpY2VzIG1heSBub3Qgc3Bpa2UsIHRoZXkgd2lsbCByZW1haW4gd2VsbCBzdXBwb3J0ZWQgdW50aWwgdGhlIGV4dHJlbWUgbW9pc3R1cmUgZGVmaWNpdHMgaW4gdGhlIFUuUy4gYXJlIHJlY3RpZmllZC7igJ0gR3JhaW4gUmFsbHkgQ29ybiByb3NlIDEzIHBlcmNlbnQgdG8gJDcuMzAgb24gdGhlIENoaWNhZ28gQm9hcmQgb2YgVHJhZGUgdGhpcyB5ZWFyIGFzIHRoZSBTdGFuZGFyZCAmIFBvb3LigJlzIEdTQ0kgQWdyaWN1bHR1cmUgSW5kZXggb2YgZWlnaHQgY29tbW9kaXRpZXMgZ2FpbmVkIDguNSBwZXJjZW50LiBUaGUgTVNDSSBBbGwtQ291bnRyeSBXb3JsZCBJbmRleCBvZiBlcXVpdGllcyBhZHZhbmNlZCAxMiBwZXJjZW50LCBhbmQgYSBCYW5rIG9mIEFtZXJpY2EgQ29ycC4gaW5kZXggc2hvd3MgVHJlYXN1cnlzIHJldHVybmVkIDIuNiBwZXJjZW50LiBQcm9kdWN0aW9uIGluIHRoZSBVLlMuLCB3aGljaCBhY2NvdW50ZWQgZm9yIDMyIHBlcmNlbnQgb2Ygd29ybGQgc3VwcGx5IHRoaXMgeWVhciwgZmVsbCAxMyBwZXJjZW50IHRvIDI3Mi40IG1pbGxpb24gdG9ucywgdGhlIHNtYWxsZXN0IGhhcnZlc3Qgc2luY2UgMjAwNiwgdGhlIFVTREEgc2FpZCBOb3YuIDkuIFRoYXTigJlzIDE4IHBlcmNlbnQgbGVzcyB0aGFuIHRoZSByZWNvcmQgMzMyLjUgbWlsbGlvbiB0b25zIGluIDIwMDkgYWZ0ZXIgZHJ5IHdlYXRoZXIgaW4gMjAxMCBhbmQgaGVhdCB3YXZlcyBsYXN0IHllYXIuIEdsb2JhbCBjb25zdW1wdGlvbiB3aWxsIGV4Y2VlZCBzdXBwbHkgZm9yIHRoZSBzZWNvbmQgdGltZSBpbiB0aHJlZSB5ZWFycywgZXZlbiBhcyBhIGZhbHRlcmluZyBlY29ub215IGVyb2RlcyBkZW1hbmQgYnkgMi41IHBlcmNlbnQgdG8gODUzLjggbWlsbGlvbiB0b25zIGluIHRoZSBzZWFzb24gZW5kaW5nIE9jdC4gMSwgYWNjb3JkaW5nIHRvIHRoZSBVU0RBLiBXaGlsZSB0aGF0IHdvdWxkIGJlIHRoZSBmaXJzdCBkcm9wIHNpbmNlIDE5OTUsIHRoZSBkZWNsaW5lIGluIHByb2R1Y3Rpb24gd2lsbCBiZSBldmVuIHN0ZWVwZXIsIHJldHJlYXRpbmcgNC42IHBlcmNlbnQgdG8gODM5LjcgbWlsbGlvbiB0b25zLCB0aGUgYWdlbmN5IHNhaWQuIFByaWNlcyB3aWxsIHJlYWNoICQ3Ljg1IGluIHNpeCBtb250aHMgYmVjYXVzZSBpbnZlbnRvcmllcyBhcmUg4oCccHJlY2FyaW91c2x5IGxvdyzigJ0gSHVzc2VpbiBBbGxpZGluYSwgdGhlIGhlYWQgb2YgY29tbW9kaXR5IHJlc2VhcmNoIGF0IE1vcmdhbiBTdGFubGV5IGluIE5ldyBZb3JrLCB3cm90ZSBpbiBhIERlYy4gNSByZXBvcnQuIOKAmENvcm4gT3ZlcnZhbHVlZOKAmSBGdXR1cmVzIGFyZSBoZWFkZWQgZm9yIGEgcmVjb3JkIGFubnVhbCBhdmVyYWdlIHRoaXMgeWVhciwgYW5kIHRoYXQgc2hvdWxkIHNwdXIgZmFybWVycyB0byBzb3cgbW9yZSBjcm9wcy4gSW5mb3JtYSBFY29ub21pY3MgTHRkLiwgYSBNZW1waGlzLCBUZW5uZXNzZWUtYmFzZWQgcmVzZWFyY2ggY29tcGFueSwgcHJlZGljdGVkIE5vdi4gMiB0aGF0IGdsb2JhbCBwcm9kdWN0aW9uIHdpbGwganVtcCAxNCBwZXJjZW50IHRvIGEgcmVjb3JkIDk1MC43IG1pbGxpb24gdG9ucyBuZXh0IHllYXIuIElmIHRoZSB3ZWF0aGVyIHJldHVybnMgdG8gbm9ybWFsLCBmdXR1cmVzIGZvciBEZWNlbWJlciAyMDEzLCBhZnRlciB0aGUgVS5TLiBoYXJ2ZXN0LCBtYXkgYmUgYXMgbXVjaCAzNyBwZXJjZW50IG92ZXJ2YWx1ZWQsIENocmlzIEdhZGQsIGFuIGFuYWx5c3QgYXQgTWFjcXVhcmllIEdyb3VwIEx0ZC4gaW4gTG9uZG9uLCBzYWlkIGluIGEgcmVwb3J0IERlYy4gNi4gR2FkZCBwcmVkaWN0ZWQgdGhlIGNvbnRyYWN0IG1heSBkcm9wIGFzIGxvdyBhcyAkNCwgZnJvbSAkNi4zNjc1IE1vbmRheS4g4oCcV2UgYXJlIGp1c3Qgb25lIGNyb3AgYXdheSBmcm9tIGEgc3Vic3RhbnRpYWwgaW5jcmVhc2UgaW4gc3VwcGxpZXMs4oCdIERvdWdsYXMgQ2FycGVyLCB0aGUgcHJpbmNpcGFsIG9mIE9tYWhhLCBOZWJyYXNrYS0gYmFzZWQgREVDIENhcGl0YWwgSW5jLiwgYSBjb21tb2RpdHkgdHJhZGluZyBhZHZpc2VyIGFuZCBjb25zdWx0YW50IHRvIGhlZGdlIGZ1bmRzLiDigJxJZiB3ZSBoYXZlIGEgd2lkZXNwcmVhZCBtb2lzdHVyZSBldmVudCBvdmVyIHRoZSBoZWFydCBvZiB0aGUgQ29ybiBCZWx0IGJldHdlZW4gbm93IGFuZCBBcHJpbCwgdGhlcmUgd291bGQgYmUgYW4gZXBpcGhhbnkgdGhhdCB3b3VsZCBzd2VlcCBvdmVyIGZvbGtzLuKAnSBEcnkgV2VhdGhlciBNb3JlIHRoYW4gNTYgcGVyY2VudCBvZiB0aGUgbmluZS1zdGF0ZSBNaWR3ZXN0IHJlZ2lvbiB3aGVyZSBtb3N0IG9mIHRoZSBjcm9wIGlzIGdyb3duIGhhZCBtb2RlcmF0ZSB0byBleGNlcHRpb25hbCBkcm91Z2h0IGJ5IERlYy4gNCwgY29tcGFyZWQgd2l0aCAxNSBwZXJjZW50IGEgeWVhciBlYXJsaWVyLCBhY2NvcmRpbmcgdG8gdGhlIFUuUy4gRHJvdWdodCBNb25pdG9yLiBUaGF0IHJlZHVjZWQgdGhlIGxldmVsIG9mIHRoZSBNaXNzaXNzaXBwaSBSaXZlciwgZGVsYXlpbmcgYmFyZ2VzIGNhcnJ5aW5nIGdyYWluIHRvIEd1bGYgb2YgTWV4aWNvIHBvcnRzIGFuZCBleHBvcnQgbWFya2V0cy4gSGVkZ2UgZnVuZHMgYW5kIG90aGVyIHNwZWN1bGF0b3JzIGJvb3N0ZWQgdGhlaXIgbmV0LWxvbmcgcG9zaXRpb25zLCBvciBiZXRzIG9uIGhpZ2hlciBwcmljZXMsIGZvciB0aHJlZSB3ZWVrcyBhbmQgYXJlIHRoZSBtb3N0IGJ1bGxpc2ggb24gY29ybiBzaW5jZSBPY3QuIDIzLCBVLlMuIENvbW1vZGl0eSBGdXR1cmVzIFRyYWRpbmcgQ29tbWlzc2lvbiBkYXRhIHNob3cuIEdsb2JhbCBpbnZlbnRvcmllcyBtYXkgbm90IGdldCB0aGUgZXhwZWN0ZWQgYm9vc3QgaW4gRmVicnVhcnkgZnJvbSBBcmdlbnRpbmEgYW5kIEJyYXppbCwgdGhlIGJpZ2dlc3QgZXhwb3J0ZXJzIGFmdGVyIHRoZSBVLlMuIEZsb29kaW5nIGxlZCBmYXJtZXJzIGluIEFyZ2VudGluYSB0byBwbGFudCAxMCBwZXJjZW50IGZld2VyIGFjcmVzIHRoYW4gZXhwZWN0ZWQsIHdoaWNoIG1lYW5zIG91dHB1dCBtYXkgdG90YWwgMjIuNSBtaWxsaW9uIHRvbnMsIGJlbG93IHRoZSBVU0RB4oCZcyBlc3RpbWF0ZSBvZiAyOCBtaWxsaW9uLCBzYWlkIE1pY2hhZWwgQ29yZG9ubmllciwgdGhlIHB1Ymxpc2hlciBvZiB0aGUgU295YmVhbiAmIENvcm4gQWR2aXNvciBpbiBIaW5zZGFsZSwgSWxsaW5vaXMuIEluIEJyYXppbCwgZHJ5IHdlYXRoZXIgbWF5IGN1dCBvdXRwdXQgdG8gNzAgbWlsbGlvbiB0b25zIGZyb20gNzMgbWlsbGlvbiBhIHllYXIgYWdvLCBoZSBzYWlkLiBEZW1hbmQgT3V0bG9vayBEZW1hbmQgZm9yIGNvcm4gdG8gZmVlZCBsaXZlc3RvY2sgYW5kIG1ha2UgZXRoYW5vbCBtYXkgbm90IGJlIHNsb3dpbmcgYXMgbXVjaCBhcyB0aGUgVVNEQSBleHBlY3RzLiBIb2cgZmFybWVycyBrZXB0IGJ1eWluZyBjb3JuIGV2ZW4gYXMgcHJpY2VzIHRvcHBlZCAkOCBiZWNhdXNlIHRoZXkgd2VyZSBoZWRnaW5nIHNvbWUgb2YgdGhlaXIgY29zdHMsIExhcnJ5IFBvcGUsIHRoZSBjaGllZiBleGVjdXRpdmUgb2ZmaWNlciBvZiBTbWl0aGZpZWxkIEZvb2RzIEluYy4sIHRoZSBsYXJnZXN0IHBvcmsgcHJvZHVjZXIsIHNhaWQgb24gYSBEZWMuIDYgY29uZmVyZW5jZSBjYWxsIHdpdGggYW5hbHlzdHMuIEhvZyBoZXJkcyBleHBhbmRlZCBhYm91dCA0IHBlcmNlbnQgaW4gdGhlIHRocmVlIG1vbnRocyBlbmRlZCBPY3QuIDI4LCBoZSBzYWlkLiBVLlMuIHJlZC1tZWF0IHByb2R1Y3Rpb24ganVtcGVkIDcuMiBwZXJjZW50IHRvIDQuNTc5IGJpbGxpb24gcG91bmRzIGluIE9jdG9iZXIsIGFuZCBwb3JrIG91dHB1dCBnYWluZWQgOC43IHBlcmNlbnQgdG8gMi4yMSBiaWxsaW9uIHBvdW5kcywgdGhlIGhpZ2hlc3QgZXZlciBmb3IgdGhlIG1vbnRoLCBnb3Zlcm5tZW50IGRhdGEgc2hvdy4gU3VwcGxpZXMgb2YgeW91bmcgY2hpY2tlbnMgcm9zZSA3LjUgcGVyY2VudCBhbmQgdHVya2V5IDkuOSBwZXJjZW50LCB0aGUgVVNEQSBzYWlkIGluIGEgTm92LiAyNiByZXBvcnQuIERvbWVzdGljIGNvcm4gaW52ZW50b3JpZXMgYmVmb3JlIHRoZSAyMDEzIGhhcnZlc3QgbWF5IGZhbGwgdG8gNTQ2IG1pbGxpb24gYnVzaGVscywgYmVsb3cgbGFzdCBtb250aOKAmXMgVVNEQSBmb3JlY2FzdCBvZiA2NDcgbWlsbGlvbiBidXNoZWxzLCBzYWlkIERhbiBDZWthbmRlciwgdGhlIGRpcmVjdG9yIG9mIGdyYWluLW1hcmtldCBhbmFseXNpcyBhdCBOZXdlZGdlIFVTQSBMTEMgaW4gQ2hpY2Fnby4gVGhlIGluY3JlYXNlIGluIGZlZWQgZGVtYW5kIGR1cmluZyB0aGUgdGhyZWUgbW9udGhzIGVuZGVkIERlYy4gMSBwcm9iYWJseSB3b27igJl0IGFwcGVhciBpbiBVU0RBIGRhdGEgdW50aWwgdGhlIEphbi4gMTEgcmVwb3J0LCBoZSBzYWlkLiBGdWVsIFVzZSBFdGhhbm9sIGRpc3RpbGxlcnMsIHdobyB1c2VkIDQxIHBlcmNlbnQgb2YgdGhlIFUuUy4gY3JvcCBsYXN0IHllYXIsIGJvb3N0ZWQgcHJvZHVjdGlvbiBieSA0IHBlcmNlbnQgaW4gdGhlIHdlZWsgZW5kZWQgTm92LiAzMCwgdGhlIGJpZ2dlc3QgZ2FpbiBpbiAxNCBtb250aHMgYW5kIHRoZSBoaWdoZXN0IG91dHB1dCBzaW5jZSB0aGUgZW5kIG9mIEp1bmUsIEVuZXJneSBEZXBhcnRtZW50IGRhdGEgc2hvdy4gQSByZWxpYW5jZSBvbiBjcm9wcyB0byBtYWtlIGZ1ZWwgYW5kIGV4cGFuZGluZyBlY29ub21pYyBncm93dGggd2lsbCBrZWVwIGdyYWluIGludmVudG9yaWVzIHRpZ2h0IGFuZCBjb250cmlidXRlIHRvIGEg4oCcbmV3IG5vcm3igJ0gb2YgaGlnaCBmb29kIHByaWNlcyBvdmVyIHRoZSBuZXh0IHR3byBkZWNhZGVzLCB0aGUgV29ybGQgQmFuayBzYWlkIGluIGEgTm92LiAyNyByZXBvcnQuIFJpc2tzIHRvIHN1cHBseSBhcmUgaW5jcmVhc2luZyBhdCBhIHRpbWUgd2hlbiAxMiBwZXJjZW50IG9mIHRoZSB3b3JsZCBwb3B1bGF0aW9uIHJlbWFpbnMgY2hyb25pY2FsbHkgdW5kZXJub3VyaXNoZWQsIHRoZSBiYW5rIHNhaWQuIFdvcmxkIGZvb2QgcHJpY2VzLCB3aGlsZSBkb3duIDExIHBlcmNlbnQgZnJvbSBhIHJlY29yZCBpbiBGZWJydWFyeSAyMDExLCB3ZXJlIHRoZSBoaWdoZXN0IGV2ZXIgb24gYXZlcmFnZSBkdXJpbmcgdGhlIHBhc3QgdHdvIHllYXJzIGFuZCBtb3JlIHRoYW4gZG91YmxlZCBpbiB0aGUgcGFzdCBkZWNhZGUsIGFjY29yZGluZyB0byB0aGUgVW5pdGVkIE5hdGlvbnPigJkgRm9vZCAmIEFncmljdWx0dXJlIE9yZ2FuaXphdGlvbiBpbiBSb21lLiDigJxQZW9wbGUgYW5kIGFuaW1hbHMgY29udGludWUgdG8gZWF0LOKAnSBzYWlkIFNhbCBHaWxiZXJ0aWUsIHdobyBoZWxwcyBtYW5hZ2UgJDY5IG1pbGxpb24gb2YgYXNzZXRzIGFzIHByZXNpZGVudCBhbmQgY2hpZWYgaW52ZXN0bWVudCBvZmZpY2VyIG9mIFRldWNyaXVtIFRyYWRpbmcgTExDIGluIFNhbnRhIEZlLCBOZXcgTWV4aWNvLiDigJxFdmVyeXRoaW5nIGluIGdyb2Nlcnkgc3RvcmVzIGlzIG1hZGUgZnJvbSBjb3JuLuKAnQ==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATuIjGMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDFiYzcwMzEzOGZmMjE1NTY=</field><field name="symbol" class="java.lang.String">rO0ABXQAA05PVg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATuNsr8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBQ7hR64Ueu</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBRCuFHrhR7</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBQmuFHrhR7</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBQnrhR64Uf</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBMtcKPXCj2</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAG/GdA==</field><field name="id" class="java.lang.String">rO0ABXQAEDE2YTA4MzkzNzE4YjJkMGI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEaBAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE2NDg5</field><field name="title" class="java.lang.String">rO0ABXQAQkJ1ZmZldHTigJlzIFN1cmdpbmcgU2lsbyBTYWxlcyBCb29zdGluZyBDYXJnaWxsIENvc3RzOiBDb21tb2RpdGllcw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATQ7J+8AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGFkNjU2MjMzNTRhMjU1MTE=</field><field name="symbol" class="java.lang.String">rO0ABXQABkJJTi5UTw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATRATksAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAz7hR64Ueu</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAz+uFHrhR7</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzbhR64Ueu</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzjMzMzMzN</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAx/XCj1wo9</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAKEiA==</field><field name="id" class="java.lang.String">rO0ABXQAEDQyNWQzZTc5M2Y2ZjQ1NTg=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mIdlAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDE3MDY=</field><field name="title" class="java.lang.String">rO0ABXQAQERyb3VnaHQgV2l0aGVycyBTbWFsbGVzdCBIYXkgQ3JvcCBpbiBDZW50dXJ5IHRvIEJvb3N0IEJlZWYgQ29zdHM=</field><field name="content" class="java.lang.String">rO0ABXQkRFRoZSBzbWFsbGVzdCBVLlMuIGhheSBjcm9wIGluIG1vcmUgdGhhbiBhIGNlbnR1cnkgaXMgd2l0aGVyaW5nIHVuZGVyIGEgcmVjb3JkIFRleGFzIGRyb3VnaHQsIGJvb3N0aW5nIHRoZSBjb3N0IG9mIGxpdmVzdG9jayBmZWVkIGZvciBkYWlyeSBmYXJtZXJzIGFuZCBiZWVmIHByb2R1Y2VycyBmcm9tIENhbGlmb3JuaWEgdG8gTWFyeWxhbmQuIFRoZSBwcmljZSBvZiBhbGZhbGZhLCB0aGUgbW9zdCBjb21tb24gaGF5IHZhcmlldHksIHN1cmdlZCA1MSBwZXJjZW50IGluIHRoZSBwYXN0IHllYXIsIHJlYWNoaW5nIGEgcmVjb3JkICQxODYgYSBzaG9ydCB0b24gaW4gTWF5LCBnb3Zlcm5tZW50IGRhdGEgc2hvdy4gSGF5IGFuZCBncmFzcyBtYWtlIHVwIGFib3V0IGhhbGYgb2Ygd2hhdCBjYXR0bGUgZWF0IG92ZXIgdGhlaXIgbGlmZXRpbWVzLCBzbyBwYXJjaGVkIHBhc3R1cmVzIGFyZSBmb3JjaW5nIHJhbmNoZXJzIHRvIGZpbmQgYWx0ZXJuYXRpdmUgc291cmNlcyBvZiBmZWVkLCBwdXNoaW5nIHNvbWUgc3BvdC1tYXJrZXQgY29ybiB0byB0aGUgaGlnaGVzdCBldmVyLiBGYXJtZXJzIGluIE9rbGFob21hIGFuZCBpbiBUZXhhcywgdGhlIGJpZ2dlc3QgcHJvZHVjZXIgb2YgaGF5IGFuZCBjYXR0bGUsIG1heSBoYXJ2ZXN0IG9ubHkgb25lIGNyb3AgZnJvbSBhbGZhbGZhIGFuZCBCZXJtdWRhIGdyYXNzIHRoaXMgeWVhciwgY29tcGFyZWQgd2l0aCB0aHJlZSBub3JtYWxseSwgc2FpZCBMYXJyeSBSZWRtb24sIGEgc3RhdGUgZm9yYWdlIHNwZWNpYWxpc3QgYXQgVGV4YXMgQSZNIFVuaXZlcnNpdHkuIENhdHRsZSB0aGF0IHVzdWFsbHkgZ3JhemUgb24gZmllbGRzIHRocm91Z2ggU2VwdGVtYmVyIG9yIE9jdG9iZXIgYXJlIGluc3RlYWQgYmVpbmcgc29sZCB0byBmZWVkbG90cywgd2hlcmUgdGhleSBhcmUgY29uZmluZWQgaW4gcGVucyBhbmQgZWF0IG1vc3RseSBjb3JuLiDigJxXZeKAmXJlIGp1c3QgcnVubmluZyBvdXQgb2YgZ3Jhc3Ms4oCdIEJvIEtpenppYXIsIHRoZSBmZWVkbG90IG1hbmFnZXIgYXQgSGFuc2ZvcmQgQ291bnR5IEZlZWRlcnMsIHNhaWQgYnkgdGVsZXBob25lIGZyb20gU3BlYXJtYW4sIFRleGFzLiBXaXRoIHBhc3R1cmVzIGRpc2FwcGVhcmluZywgSGFuc2ZvcmQgaXMgbW92aW5nIGNhdHRsZSBpbnRvIGl0cyA1MCwwMDAtaGVhZCBmZWVkbG90IHRocmVlIG1vbnRocyBlYXJsaWVyIHRoYW4gbm9ybWFsLCBib29zdGluZyBjb3N0cyBhcyB0aGUgY29tcGFueSBidXlzIG1vcmUgY29ybiwgaGUgc2FpZC4gVGhlIGRyb3VnaHQsIHdoaWNoIGlzIHRoZSB3b3JzdCBldmVyIGluIFRleGFzLCBpcyBjb21wb3VuZGluZyBhIGhheSBzaG9ydGFnZSBjYXVzZWQgYnkgZmFybWVycyBzaGlmdGluZyB0aGlzIHllYXIgdG8gbW9yZSBwcm9maXRhYmxlIGNyb3BzLCBpbmNsdWRpbmcgY29ybi4gVGhlIFUuUy4gbWF5IGhhcnZlc3QgNTcuNjA1IG1pbGxpb24gYWNyZXMgb2YgaGF5IGluIDIwMTEsIHRoZSBsZWFzdCBvbiByZWNvcmRzIGdvaW5nIGJhY2sgdG8gMTkwOSwgVS5TLiBEZXBhcnRtZW50IG9mIEFncmljdWx0dXJlIGRhdGEgc2hvdy4gQ29ybiB3YXMgc293biBvbiA5Mi4yODIgbWlsbGlvbiBhY3JlcywgdGhlIHNlY29uZC1tb3N0IHNpbmNlIDE5NDQuIEV0aGFub2wgQ29ybiBHcmFiIFN1cmdpbmcgZGVtYW5kIGZyb20gZXRoYW5vbCByZWZpbmVycywgbGl2ZXN0b2NrIHByb2R1Y2VycyBhbmQgaW1wb3J0ZXJzIHNlbnQgY29ybiBmdXR1cmVzIHVwIDc1IHBlcmNlbnQgaW4gdGhlIHBhc3QgeWVhciwgYXMgb2YgeWVzdGVyZGF5LiBUaGUgVS5TLiBpcyB0aGUgd29ybGTigJlzIGxhcmdlc3QgY29ybiBncm93ZXIgYW5kIGV4cG9ydGVyLCBhbmQgdGhlIGdvdmVybm1lbnQgc2FpZCBKdW5lIDkgdGhhdCwgZm9yIHRoZSBmaXJzdCB0aW1lIGV2ZXIsIG1vcmUgb2YgdGhlIGNyb3Agd2lsbCBiZSB1c2VkIHRvIG1ha2UgZnVlbCB0aGFuIGFuaW1hbCBmZWVkLiBKZWZmIE95ZW4sIDQ3LCB3aG8gaGFzIHJ1biBhIGhheS1icm9rZXJhZ2UgYnVzaW5lc3Mgc2luY2UgMTk5MSwgY29udmVydGVkIGFsbCAxLDAwMCBhY3JlcyBvZiBoaXMgZmFybSBuZWFyIENyb29rLCBTb3V0aCBEYWtvdGEsIHRvIG90aGVyIGNyb3BzIHRoZSBwYXN0IHRocmVlIHllYXJzLCBwYXJ0bHkgYmVjYXVzZSBjb3JuLCB3aGVhdCBhbmQgc295YmVhbnMgb2ZmZXJlZCBiZXR0ZXIgcmV0dXJucyB0aGFuIGhheS4gT3llbiBzdGlsbCB0cnVja3MgYWJvdXQgMTAsMDAwIGJhbGVzIG9mIGhheSB0aGF0IGhlIGJ1eXMgZnJvbSBvdGhlciBmYXJtZXJzIGluIGNlbnRyYWwgU291dGggRGFrb3RhIHRvIGZlZWRsb3RzIGFuZCBkYWlyaWVzIGluIElvd2EsIE1pbm5lc290YSBhbmQgV2lzY29uc2luLiBPeWVuIHNhaWQgaGUgaGFzIHNoaXBwZWQgc29tZSBoYXkgYXMgZmFyIGFzIE1hcnlsYW5kIGJlY2F1c2UgYWR2ZXJzZSB3ZWF0aGVyIHJlZHVjZWQgcHJvZHVjdGlvbi4g4oCcV2UgYXJlIGdldHRpbmcgbG90cyBvZiBjYWxscyB0byBidXkgaGF5LCBidXQgd2UgY2FuIG9ubHkgc2VydmljZSBzbyBtYW55IGN1c3RvbWVycyzigJ0gc2FpZCBPeWVuLCB3aG8gaXMgc2VsbGluZyBoYXkgdGhpcyB5ZWFyIGZvciAkMTYwIGEgdG9uLCB1cCBmcm9tIGFib3V0ICQxMDAgYSB5ZWFyIGVhcmxpZXIgYW5kIHRoZSBtb3N0IGV2ZXIgYXQgdGhpcyB0aW1lIG9mIHllYXIuIFJlY29yZCBIYXkgUHJpY2VzIEFsZmFsZmEgdHJhZGVkIGF0IGEgbmF0aW9uYWwgYXZlcmFnZSBvZiAkMTgwIGEgdG9uIGluIEp1bmUsIGNvbXBhcmVkIHdpdGggJDExOSBhIHllYXIgZWFybGllciwgYWNjb3JkaW5nIHRvIFVTREEgZmlndXJlcy4gRm9yIHRoZSB5ZWFyLCB0aGUgYXZlcmFnZSBtYXkgYmUgbW9yZSB0aGFuICQxNjUsIHRvcHBpbmcgdGhlIHByZXZpb3VzIGFubnVhbCBwZWFrIGluIDIwMDgsIHNhaWQgS2F0ZWx5biBNY0N1bGxvY2ssIGEgZGFpcnkgYW5kIGZvcmFnZSBlY29ub21pc3QgYXQgdGhlIERlbnZlci1iYXNlZCBMaXZlc3RvY2sgTWFya2V0aW5nIEluZm9ybWF0aW9uIENlbnRlciwgYSBmb3JlY2FzdGVyIHNpbmNlIDE5NTUuIFJpc2luZyBmZWVkIGNvc3RzIGFyZSBwcm9tcHRpbmcgYSByZWR1Y3Rpb24gaW4gY2F0dGxlIGhlcmRzIGFuZCBlcm9kaW5nIHByb2ZpdCBmb3IgbWlsayBwcm9kdWNlcnMuIFRoZSBVU0RBIHllc3RlcmRheSBmb3JlY2FzdCByZXRhaWwtbWVhdCBwcmljZXMgbWF5IGluY3JlYXNlIHRoaXMgeWVhciBhcyBtdWNoIGFzIDcgcGVyY2VudCBhbmQgZGFpcnkgcHJvZHVjdHMgbWF5IGp1bXAgNiBwZXJjZW50LCBtb3JlIHRoYW4gdGhlIHJhdGUgb2Ygb3ZlcmFsbCBmb29kIGluZmxhdGlvbiBhdCAzIHBlcmNlbnQgdG8gNCBwZXJjZW50LiDigJxBbGwgZmVlZCBjb3N0cyBhcmUgaGlnaCzigJ0gTWNDdWxsb2NrIHNhaWQuIOKAnFJpc2luZyBhbGZhbGZhIHByaWNlcyB3aWxsIGhpdCBkYWlyeSBmYXJtZXJz4oCZIHByb2ZpdGFiaWxpdHkgZmFpcmx5IHF1aWNrbHksIGFuZCB0aGlzIHdpbGwgbGVhZCB0byBpbmNyZWFzZWQgY3VsbGluZy7igJ0gSW4gSnVuZSwgdGhlIFUuUy4gY293IGhlcmQgd2FzIHRoZSBoaWdoZXN0IGluIHR3byB5ZWFycywgVVNEQSBkYXRhIHNob3cuIFNoaWZ0IHRvIENvcm4gQXMgY2F0dGxlIHByb2R1Y2VycyBzaGlmdCBtb3JlIG9mIHRoZWlyIGZlZWQgcmF0aW9ucyB0byBncmFpbiwgcmVnaW9uYWwgc3BvdC1tYXJrZXQgcHJpY2VzIGFyZSBjbGltYmluZy4gQ29ybiBpbiB0aGUgbm9ydGhlcm4gVGV4YXMgUGFuaGFuZGxlIHNvbGQgZm9yIGFib3V0ICQ2Ljg5IGEgYnVzaGVsIG9uIEp1bHkgMjEsIG9yIDkuNSBjZW50cyBhYm92ZSBTZXB0ZW1iZXIgY29ybiBmdXR1cmVzIG9uIHRoZSBDaGljYWdvIEJvYXJkIG9mIFRyYWRlLiBUaGUgc3BvdCBwcmljZSB3YXMgYWxtb3N0IHR3aWNlIGFzIGhpZ2ggYXMgdGhlIHNhbWUgZGF5IGEgeWVhciBlYXJsaWVyLCBVU0RBIGRhdGEgc2hvdy4gU29tZSBsaXZlc3RvY2sgcHJvZHVjZXJzIGluIFRleGFzIGFyZSBwYXlpbmcgYXMgbXVjaCBhcyAkMS4xNSBtb3JlIHRoYW4gZnV0dXJlcywgYWNjb3JkaW5nIHRvIEtpenppYXIsIHRoZSBmZWVkbG90IG1hbmFnZXIuIFBhcnRzIG9mIFRleGFzLCBOZXcgTWV4aWNvLCBBcml6b25hLCBTb3V0aGVybiBDYWxpZm9ybmlhIGFuZCB3ZXN0ZXJuIE9rbGFob21hIGhhZCBhcyBsaXR0bGUgYXMgMjUgcGVyY2VudCBvZiBub3JtYWwgcmFpbmZhbGwgaW4gdGhlIHBhc3QgOTAgZGF5cywgd2hpbGUgYXJlYXMgb2YgS2Fuc2FzLCBMb3Vpc2lhbmEsIE1pc3Npc3NpcHBpLCBBbGFiYW1hLCBHZW9yZ2lhLCBGbG9yaWRhIGFuZCB0aGUgQ2Fyb2xpbmFzIGhhZCBhYm91dCBoYWxmLCBOYXRpb25hbCBXZWF0aGVyIFNlcnZpY2UgZGF0YSBzaG93LiBJbiBUZXhhcywgd2lsZGZpcmVzIGhhdmUgYnVybmVkIGFib3V0IDMuMyBtaWxsaW9uIGFjcmVzIHRoaXMgeWVhciwgc2FpZCBIb2xseSBIdWZmbWFuLCBhIHNwb2tlc3dvbWFuIGZvciB0aGUgc3RhdGUgRm9yZXN0IFNlcnZpY2UuIE9jdG9iZXIgdGhyb3VnaCBKdW5lIHdhcyB0aGUgZHJpZXN0IG5pbmUtbW9udGggcGVyaW9kIGV2ZXIgaW4gVGV4YXMsIGFuZCByYWluZmFsbCB0b3RhbHMgaW4gSnVseSBsb29rIHRvIGV4dGVuZCB0aGUgcmVjb3JkIGludG8gYSAxMHRoIG1vbnRoLCBTdGF0ZSBDbGltYXRvbG9naXN0IEpvaG4gTmllbHNlbi0gR2FtbW9uIHNhaWQgaW4gYW4gaW50ZXJ2aWV3IGZyb20gQ29sbGVnZSBTdGF0aW9uLiBHcmluZGluZyBTdGFsa3MgVGhlIGRyb3VnaHQgYWxzbyB3aWxsIGh1cnQgbG9jYWwgY29ybiBwcm9kdWN0aW9uLiBTb21lIGZhcm1lcnMgaW4gY2VudHJhbCBUZXhhcyBhcmUgYWxyZWFkeSBjdXR0aW5nIGNyb3BzIHRoYXQgaGF2ZSBmYWlsZWQgYW5kIGdyaW5kaW5nIHRoZSBzdGFsa3MgaW50byBzaWxhZ2UgdG8gZmVlZCBjYXR0bGUsIFRleGFzIEEmTeKAmXMgUmVkbW9uIHNhaWQuIOKAnEl04oCZcyBqdXN0IGEgZGFuZyBkaXNhc3RlciBldmVyeXdoZXJlIHlvdSBsb29rLOKAnSBSZWRtb24gc2FpZC4g4oCcSSBoYXZlbuKAmXQgZXZlbiBzZWVuIGEgY29ybiBjcm9wIHRoaXMgeWVhciwgdW5sZXNzIGl04oCZcyBiZWluZyBpcnJpZ2F0ZWQuIFRob3NlIGd1eXMganVzdCBnb3QgaGFtbWVyZWQu4oCdIExvd2VyIGdyYWluIGFuZCBoYXkgc3VwcGxpZXMgbWF5IHN1cHBvcnQgY29ybiBwcmljZXMgbmF0aW9uYWxseSwgYXMgc291dGhlcm4gbGl2ZXN0b2NrIHByb2R1Y2VycyDigJxhcmUgZ29pbmcgdG8gaGF2ZSB0byBjb21lIGJhY2sgdG8gdGhlIE1pZHdlc3QgZm9yIHRob3NlIGJ1c2hlbHMs4oCdIHNhaWQgRGF2aWQgU21vbGR0LCB2aWNlIHByZXNpZGVudCBvZiBvcGVyYXRpb25zIGF0IElOVEwgRkNTdG9uZSBpbiBXZXN0IERlcyBNb2luZXMsIElvd2EuIFUuUy4gcmFpbCBzaGlwbWVudHMgb2YgZ3JhaW4gZHVyaW5nIHRoZSBmb3VyIHdlZWtzIGVuZGVkIEp1bHkgOSB3ZXJlIDUgcGVyY2VudCBoaWdoZXIgdGhhbiBhIHllYXIgZWFybGllciwgVVNEQSBkYXRhIHNob3cuIFUuUy4gY29ybiBpbnZlbnRvcmllcyBiZWZvcmUgbmV4dCB5ZWFy4oCZcyBoYXJ2ZXN0IG1heSBkcm9wIHRvIDg3MCBtaWxsaW9uIGJ1c2hlbHMsIHRoZSBsb3dlc3Qgc2luY2UgMTk5NiwgYXMgZXRoYW5vbCBwcm9kdWNlcnMgZGVtYW5kIHJlY29yZCBhbW91bnRzIG9mIHRoZSBncmFpbiBhbmQgbGl2ZXN0b2NrIGRlbWFuZCBpbmNyZWFzZXMsIGFjY29yZGluZyB0byB0aGUgVVNEQS4gQ29ybiBSZWNvcmQgU2VlbiBUaGUgdGlnaHRlbmluZyBzdG9ja3BpbGUg4oCccmVhbGx5IHB1dHMgdGhlIHByZXNzdXJlIG9uIElsbGlub2lzLCBJb3dhLCBNaW5uZXNvdGEgYW5kIE5lYnJhc2thIHRvIGhhdmUgYmV0dGVyIHRoYW4gYSBub3JtYWwgY3JvcCzigJ0gc2FpZCBTbW9sZHQsIHdobyBlc3RpbWF0ZXMgY29ybiBtaWdodCByZWFjaCBhIHJlY29yZCAkOCBpZiBob3QsIGRyeSBNaWR3ZXN0IHdlYXRoZXIgY29udGludWVzIGludG8gQXVndXN0IHdoZW4gcGxhbnRzIGZpbGwga2VybmVscyB3aXRoIHN1Z2FycyBhbmQgc3RhcmNoLiBUaGUgVS5TLiBjYXR0bGUgaGVyZCwgaW5jbHVkaW5nIGRhaXJ5IGNvd3MgYW5kIGJlZWYgYW5pbWFscyBvbiBmZWVkbG90cyBhbmQgcmFuY2hlcywgdG90YWxlZCAxMDAgbWlsbGlvbiBoZWFkIGFzIG9mIEp1bHkgMSwgdGhlIGZld2VzdCBhdCB0aGF0IHRpbWUgb2YgeWVhciBzaW5jZSBhdCBsZWFzdCAxOTczLCB0aGUgVVNEQSBzYWlkIEp1bHkgMjIuIEFzIG9mIEp1bHkgMSwgdGhlIFUuUy4gZmVlZGxvdCBoZXJkIG9mIGJlZWYgY2F0dGxlIHRvdGFsZWQgMTAuNDUxIG1pbGxpb24gaGVhZCwgdXAgMy44IHBlcmNlbnQgZnJvbSBhIHllYXIgZWFybGllciwgdGhlIFVTREEgc2FpZCBpbiBhIHJlcG9ydCBKdWx5IDIyLCBhcyBkcm91Z2h0IGZvcmNlZCByYW5jaGVycyB0byBzZWxsIG1vcmUgbGl2ZXN0b2NrLiBCZWVmIHByb2R1Y2VycyBhcmUgY3VsbGluZyBjb3dzIGFuZCB5b3VuZyBmZW1hbGVzLCB3aGljaCBtZWFucyBzbWFsbGVyIHN1cHBsaWVzIGZvciB0aGUgbmV4dCB0d28geWVhcnMgb3IgbG9uZ2VyLCBhY2NvcmRpbmcgdG8gU3RldmUgS2F5LCB0aGUgcHVibGlzaGVyIG9mIENhdHRsZSBCdXllcnMgV2Vla2x5LCBhIHRyYWRlIG1hZ2F6aW5lIGJhc2VkIGluIFBldGFsdW1hLCBDYWxpZm9ybmlhLiBUaGUgY2F0dGxlIGFuZCBjYWxmIGhlcmQgbmV4dCB5ZWFyIG1heSBmYWxsIHRvIHRoZSBsb3dlc3Qgc2luY2UgMTk1MiwgaW5jcmVhc2luZyBjb3N0cyBmb3IgbWVhdCBwcm9jZXNzb3JzIGluY2x1ZGluZyBUeXNvbiBGb29kcyBJbmMuIGFuZCBDYXJnaWxsIEluYy4sIGhlIHNhaWQuIFNtYWxsZXIgSGVyZHMg4oCcVGhlIGRyb3VnaHQgaGFzIGRyaWVkIHVwIGFueSBob3BlcyBmb3IgcmVidWlsZGluZyB0aGUgYmVlZiBoZXJkIHRoaXMgeWVhciBvciBuZXh0IHllYXIs4oCdIEtheSBzYWlkIGluIGEgdGVsZXBob25lIGludGVydmlldy4g4oCcSGF5IGlzIGdldHRpbmcgc2hvcnRlciBpbiBzdXBwbHkgYW5kIHByaWNlcyBhcmUgcnVubmluZyBoaWdoZXIuIFRoZSBoZXJkIGxpcXVpZGF0aW9uIGlzIGluY3JlYXNpbmcuIFRoZSBmYWxsaW5nIGNhdHRsZSBoZXJkIGlzIGdvaW5nIHRvIHB1dCBtb3JlIHN0cmVzcyBvbiB0aGUgY2F0dGxlLXByb2Nlc3NpbmcgaW5kdXN0cnkuIEJlZWYgaXMgZ29pbmcgdG8gY29udGludWUgdG8gYmUgbW9yZSBleHBlbnNpdmUgZm9yIFUuUy4gY29uc3VtZXJzLuKAnSBGZWVkbG90cyBhbHNvIGFyZSBhY2NlbGVyYXRpbmcgc2FsZXMgdG8gbWVhdHBhY2tlcnMsIHdoaWNoIHdpbGwgdWx0aW1hdGVseSByZXN1bHQgaW4gbG93ZXIgYmVlZiBzdXBwbGllcyBhbmQgbWF5IHNlbmQgY2F0dGxlIHRvIGEgcmVjb3JkIGJ5IHRoZSBmb3VydGggcXVhcnRlciwgc2FpZCBEb24gQ2xvc2UsIGEgbWFya2V0IGRpcmVjdG9yIHdpdGggdGhlIFRleGFzIENhdHRsZSBGZWVkZXJzIEFzc29jaWF0aW9uIGluIEFtYXJpbGxvLiBDYXR0bGUgZnV0dXJlcyByZWFjaGVkICQxLjIxNjI1IGEgcG91bmQgb24gQXByaWwgNCBvbiB0aGUgQ2hpY2FnbyBNZXJjYW50aWxlIEV4Y2hhbmdlLCB0aGUgaGlnaGVzdCBldmVyLCBiZWZvcmUgcmV0cmVhdGluZyB0byAkMS4xNDkgeWVzdGVyZGF5LiDigJxTYWxlLWJhcm4gcmVjZWlwdHMgZm9yIGNvd3MgYW5kIGNhbHZlcyBoYXZlIGJlZW4gZXh0cmVtZWx5IGhlYXZ5IGJlY2F1c2UgZ3V5cyBhcmUgb3V0IG9mIGZlZWQgb3Igb3V0IG9mIHdhdGVyIGFuZCBkb27igJl0IGhhdmUgYSBjaG9pY2UgYnV0IHRvIHNlbGwgdGhlaXIgY2F0dGxlLOKAnSBDbG9zZSBzYWlkLiDigJxJdOKAmXMgZ29pbmcgdG8gbWFrZSBhIHRpZ2h0IHN1cHBseSBldmVuIHRpZ2h0ZXIsIGFzIHdlIGdldCBkb3duIHRoZSByb2FkLuKAnSBEYWlyeSBPdXRwdXQgQm9vbSBTdGlsbCwgZGVtYW5kIHJlbWFpbnMgaGlnaCBmb3IgYm90aCBjb3JuIGFuZCBoYXkgZnJvbSBkYWlyeSBmYXJtcywgd2hpY2ggYXJlIGV4cGFuZGluZyBoZXJkcyBhcyBoaWdoIG1pbGsgcHJpY2VzIG9mZnNldCB0aGUganVtcCBpbiBmZWVkIGNvc3RzLiBBdmVyYWdlIENsYXNzIEkgbWlsayBwcmljZXMgc3VyZ2VkIDc5IHBlcmNlbnQgdG8gJDIzLjkyIGluIEp1bmUgZnJvbSB0d28geWVhcnMgZWFybGllci4gVS5TLiBtaWxrIHByb2R1Y3Rpb24gY2xpbWJlZCAxLjEgaW4gSnVuZSwgd2hpbGUgdGhlIGRhaXJ5IGhlcmQgdG90YWxlZCA5LjIxIG1pbGxpb24gY293cywgdXAgMC45IHBlcmNlbnQgZnJvbSBhIHllYXIgZWFybGllciwgdGhlIFVTREEgc2FpZCBKdWx5IDE5LiDigJxXaGVuIHlvdSBsb29rIGF0IHRoZSBwcm9qZWN0ZWQgcHJpY2VzIGZvciBjb3JuLCBzb3liZWFucyBhbmQgaGF5IGFuZCB0aGUgcHJpY2Ugb2YgbWlsaywgdGhlIHByb2ZpdCBtYXJnaW4gb3ZlciBmZWVkIGNvc3RzIGlzIHZlcnkgc2xpbSzigJ0gc2FpZCBTdGV2ZSBCb2RhcnQsIGEgZGFpcnktaW5kdXN0cnkgc3BlY2lhbGlzdCBhdCBMb29rb3V0IFJpZGdlIENvbnN1bHRpbmcgaW4gQmFsZHdpbiwgV2lzY29uc2luLiDigJxXZSBhcmUgZ29pbmcgdG8gaGF2ZSB2ZXJ5IHRpZ2h0IHN1cHBsaWVzIG9mIGhheSB0aGlzIHdpbnRlciwgYW5kIHRoYXTigJlzIHdoZW4gY293IGN1bGxpbmcgd2lsbCBpbmNyZWFzZS7igJ0gUG9vciBDcm9wIENvbmRpdGlvbnMgQWJvdXQgOTQgcGVyY2VudCBvZiBwYXN0dXJlIGluIFRleGFzIHdhcyBpbiBwb29yIG9yIHZlcnkgcG9vciBjb25kaXRpb24gYXMgb2YgSnVseSAxNywgdGhlIHdvcnN0IHNoYXBlIGZvciB0aGUgZGF0ZSBzaW5jZSBhdCBsZWFzdCAxOTk1LCBhY2NvcmRpbmcgdG8gdGhlIFVTREEuIExpdHRsZSByYWluIGlzIGluIHRoZSBmb3JlY2FzdCBvdmVyIHRoZSBuZXh0IGZpdmUgZGF5cywgYW5kIHRlbXBlcmF0dXJlcyBpbiBEYWxsYXMgd2lsbCB0b3AgMTAwIGRlZ3JlZXMgRmFocmVuaGVpdCAoMzggZGVncmVlcyBDZWxzaXVzKSBmb3IgYSAyNXRoIGNvbnNlY3V0aXZlIGRheSB0b2RheSwgYWNjb3JkaW5nIHRvIHRoZSBOYXRpb25hbCBXZWF0aGVyIFNlcnZpY2UuIOKAnE91ciBwYXN0dXJlIGNvbmRpdGlvbnMgYXJlIHRlcnJpYmxlLOKAnSBzYWlkIEdlb3JnZSBFbmxvZSwgYSBwYXJ0bmVyIGF0IEFtYXJpbGxvIEJyb2tlcmFnZSBDby4sIGEgcmlzay1tYW5hZ2VtZW50IGZpcm0gaW4gQW1hcmlsbG8sIFRleGFzLiDigJxJdCBsb29rcyBsaWtlIHRoZSBtb29uLiBJdCBsb29rcyBsaWtlIGl04oCZcyB0aGUgbWlkZGxlIG9mIHRoZSB3aW50ZXIgaW4gYSByZWFsIGJhZCB5ZWFyLCBleGNlcHQgaXTigJlzIDEwMCBkZWdyZWVzIG91dHNpZGUu4oCd</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATFk0FSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDM0ODZkNTQyNzU0OTg0NjI=</field><field name="symbol" class="java.lang.String">rO0ABXQABERBTkc=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATFp9rCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAn3Cj1wo9c</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAowo9cKPXD</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAnij1wo9cK</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAnszMzMzMz</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAnszMzMzMz</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAGo6iA==</field><field name="id" class="java.lang.String">rO0ABXQAEDgyMmEyMTdjZTgxMWI1ODE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHQAAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQ4Mjg=</field><field name="title" class="java.lang.String">rO0ABXQALldoZWF0IFByaWNlIE1heSBTb2FyIGFzIEdsb2JhbCBTdG9ja3BpbGVzIERyb3A=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAS7WyLCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDBhZTJjNDY5OWFmZDUzNGE=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0xFTw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAS7b7wyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAfFHrhR64U</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAfMzMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAfAAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAfHrhR64Uf</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAXmZmZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAFVzA==</field><field name="id" class="java.lang.String">rO0ABXQAEGU5MDYwMWNiZDA5MzBmN2Q=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHjMAAAA==</field></document></documents><date>2015-05-07T06:18:27-0500</date></cacheEntry>
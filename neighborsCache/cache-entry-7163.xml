<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0COxEZWxvaXR0ZSBMTFAgc2FpZCBpdHMgY29vcGVyYXRpbmcgd2l0aCBTYXVkaSBBcmFiaWFuIHJlZ3VsYXRvcnMgb24gYSBkaXNwdXRlIHRoYXQgdGhyZWF0ZW5zIHRvIGJhbiB0aGUgZmlybSBmcm9tIGF1ZGl0aW5nIGxpc3RlZCBjb21wYW5pZXMgaW4gdGhlIGtpbmdkb20gVGhlIENvbW1pdHRlZSBmb3IgdGhlIFJlc29sdXRpb24gb2YgU2VjdXJpdGllcyBEaXNwdXRlcyBhIHVuaXQgb2YgdGhlIG1hcmtldCByZWd1bGF0b3Igc2FpZCBpbiBhIGNpcmN1bGFyIGRhdGVkIE5vdiAyNyB0aGF0IHB1YmxpY2x5IHRyYWRlZCBjb21wYW5pZXMgaXQgcmVndWxhdGVzIHNob3VsZG50IHdvcmsgd2l0aCBEZWxvaXR0ZXMgU2F1ZGkgQXJhYmlhbiBwcmFjdGljZSBmcm9tIEp1bmUgMSBUaGUgaXNzdWUgcmVsYXRlcyB0byBEZWxvaXR0ZXMgYXVkaXQgd29yayBmb3IgTW9oYW1tYWQgQWxNb2ppbCBHcm91cCBhIGNvbnN0cnVjdGlvbmluZHVzdHJ5IHNlcnZpY2VzIHByb3ZpZGVyIGJhc2VkIGluIERhbW1hbSBTYXVkaSBBcmFiaWEgZm91ciBwZW9wbGUgd2l0aCBrbm93bGVkZ2Ugb2YgdGhlIG1hdHRlciBzYWlkIFN1bmRheSBUaGUga2luZ2RvbSB0aGUgbGFyZ2VzdCBBcmFiIGVjb25vbXkgaXMgdGlnaHRlbmluZyBydWxlcyBvbiBjb3Jwb3JhdGUgZ292ZXJuYW5jZSBhbWlkIHBsYW5zIHRvIG9wZW4gaXRzIDUwMCBiaWxsaW9uIHN0b2NrIG1hcmtldCB0byBmb3JlaWduZXJzIG5leHQgeWVhciBUaGUgQ01BIGFzIHRoZSByZWd1bGF0b3IgaXMga25vd24gbGFzdCBtb250aCBzdGFydGVkIGEgcHJvYmUgdG8gZGV0ZXJtaW5lIGlmIHRlbGVjb20gcHJvdmlkZXIgRXRpaGFkIEV0aXNhbGF0IENvIHZpb2xhdGVkIHJ1bGVzIGFmdGVyIGl0IGJsYW1lZCBhdWRpdGluZyBlcnJvcnMgZm9yIGEgc2x1bXAgaW4gcHJvZml0IGFuZCBhIG1hcmtldCBzZWxsb2ZmIFRoZSBmaXJtIHJlc3BlY3RzIHRoZSBDTUFzIGltcG9ydGFudCByb2xlIGluIHJlZ3VsYXRpbmcgdGhlIFNhdWRpIGNhcGl0YWwgbWFya2V0cyBhbmQgaW50ZW5kcyB0byBmdWxseSBjb29wZXJhdGUgd2l0aCB0aGUgQ01BIERlbG9pdHRlIHNhaWQgdG9kYXkgaW4gYW4gZW1haWxlZCBzdGF0ZW1lbnQgVGhlIGZpcm0gd2lsbCBhbHNvIGJlIGFjdGl2ZWx5IGVuZ2FnaW5nIHdpdGggdGhlIENNQSBhcyB3ZWxsIGFzIG90aGVyIHJlZ3VsYXRvcnMgYW5kIHJlbGV2YW50IHN0YWtlaG9sZGVycyB0byBhZGRyZXNzIHRoaXMgbWF0dGVyIGFzIHNvb24gYXMgcG9zc2libGUgdG93YXJkcyBhIHNhdGlzZmFjdG9yeSByZXNvbHV0aW9uIFBvdGVudGlhbCBCYW4gVGhlIENNQSBoYXMgZmlsZWQgYSBjYXNlIGFnYWluc3QgQWxNb2ppbCBvZmZpY2lhbHMgd2hvIHdlcmUgdGhlcmUgYmV0d2VlbiAyMDA4IGFuZCAyMDExIGR1cmluZyBpdHMgaW5pdGlhbCBwdWJsaWMgb2ZmZXJpbmcgdGhlIHJlZ3VsYXRvciBzYWlkIG9uIE5vdiAxMSBEdXJpbmcgdGhhdCBwZXJpb2QgRGVsb2l0dGUgYWN0ZWQgYXMgYW4gYXVkaXRvciB0byB0aGUgY29tcGFueSBhbHNvIGtub3duIGFzIE1NRyBEZWxvaXR0ZSBzYWlkIGluIHRoZSBzdGF0ZW1lbnQgdGhhdCB3aGlsZSBpdCB3YXMgc3VycHJpc2VkIGJ5IHRoZSBTYXVkaSByZWd1bGF0b3JzIGRlY2lzaW9uIGl0cyBhdWRpdCBvZiB0aGUgY2xpZW50IHdhcyBpbiBhY2NvcmRhbmNlIHdpdGggYXBwbGljYWJsZSBzdGFuZGFyZHMgYW5kIHRoYXQgaXRzIGNvbW1pdHRlZCB0byB0aGUgaGlnaGVzdCBzdGFuZGFyZHMgb2YgcXVhbGl0eSBpbmRlcGVuZGVuY2UgYW5kIGV0aGljcyBpbiB0aGUgc2VydmljZXMgb2ZmZXJlZCB0byBpdHMgY2xpZW50cyBUaGUgcG90ZW50aWFsIGJhbiB3aWxsIG5vdCBhZmZlY3Qgbm9uYXVkaXQgc2VydmljZXMgRGVsb2l0dGUgc2FpZCBBdWRpdCBzZXJ2aWNlcyB0byBjb21wYW5pZXMgbm90IHJlZ3VsYXRlZCBieSB0aGUgQ01BIGFzIHRoZSBTYXVkaSBBcmFiaWFuIG1hcmtldCByZWd1bGF0b3IgaXMga25vd24gYXJlIGFsc28gbm90IGltcGFjdGVkIGJ5IHRoZSBjaXJjdWxhciBEZWxvaXR0ZSBzYWlkIE1NRyBzaGFyZXMgaGF2ZW50IHRyYWRlZCBzaW5jZSBKdWx5IDIwMTIgd2hlbiB0aGV5IHdlcmUgc3VzcGVuZGVkIGFmdGVyIGxvc3NlcyB0cmlnZ2VyZWQgbWFuZGF0b3J5IHJlcG9ydGluZyBydWxlcyB0aGF0IGl0IGRpZG50IGZ1bGZpbGwgVGhlIENNQSBkaWRudCByZXNwb25kIHRvIGNhbGxzIG9yIGFuIGVtYWlsIHJlcXVlc3RpbmcgY29tbWVudCB3aGlsZSBhIHNwb2tlc21hbiBmb3IgTU1HIGluIERhbW1hbSBkZWNsaW5lZCB0byBjb21tZW50dAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAb2FydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2UsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEzLTEyLTAzVDAwOjAwOjAwWiBUTyAyMDE0LTA3LTEwVDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDc1NTQ=</field><field name="title" class="java.lang.String">rO0ABXQAPlNFQyBKdWRnZSBCYXJzICdCaWcgRm91cicgQ2hpbmEgVW5pdHMgZm9yIDYgTW9udGhzIE92ZXIgQXVkaXRz</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUO9rwMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGQ4OGE3YWIzODgwMjIwOWQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABkpCWC5CRQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUPC1V8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCseuFHrhS</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCseuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCseuFHrhS</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCseuFHrhS</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCa4UeuFHs</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGY3ZjJjODQzMjgzYmIyNDM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFsSAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDg1MzY=</field><field name="title" class="java.lang.String">rO0ABXQAOlN3aXNzIEJhbmtzIEhpcmUgQXJteSBvZiBBZHZpc2VycyB0byBXZWlnaCBVUyBBbW5lc3R5IFBsYW4=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUMeCd8AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDNiZjNlYzA1NTA2NGM2MDY=</field><field name="symbol" class="java.lang.String">rO0ABXQAA1VCQQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUMjMDsAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyyj1wo9cK</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAy7hR64Ueu</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyvXCj1wo9</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyxR64UeuF</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxo9cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABftA==</field><field name="id" class="java.lang.String">rO0ABXQAEDhjZTExMTM5MGViNDIyOTU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHQvAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM5NzY=</field><field name="title" class="java.lang.String">rO0ABXQAPldhc2hpbmd0b24sIFJlZ3VsYXRvcnMgU2hydWcgYXQgQWxpYmFiYSdzIFBsYW4gZm9yIE1hc3NpdmUgSVBP</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcepHSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDA3MjRkOGEzODdhYzY5Y2Y=</field><field name="symbol" class="java.lang.String">rO0ABXQABFBFUlk=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcjytCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxKPXCj1wp</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxUeuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxD1wo9cKP</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxTMzMzMzN</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxTMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAF6hA==</field><field name="id" class="java.lang.String">rO0ABXQAEGVlMDVmOTQ5N2ViNWY4OWU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE6aAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIzMDQ1</field><field name="title" class="java.lang.String">rO0ABXQAP1VTIHRvIFVudmVpbCBOZWFyICQ5IEJpbGxpb24gRmluZSBmb3IgRnJhbmNlJ3MgQk5QLCBTb3VyY2VzIFNheQ==</field><field name="content" class="java.lang.String">rO0ABXQPiVRoZSBwZW5hbHRpZXMsIHdoaWNoIHRoZSBzb3VyY2VzIHNhaWQgbWF5IGFsc28gaW5jbHVkZSBhIHRlbXBvcmFyeSBiYW4gb24gc29tZSBkb2xsYXItY2xlYXJpbmcgYnVzaW5lc3MsIGNvdWxkIGhpdCBCTlAncyBkaXZpZGVuZCBwYXlvdXQsIHJlZ3VsYXRvcnkgY2FwaXRhbCByYXRpb3MgYW5kIGl0cyBpbnZlc3RtZW50IGJhbmtpbmcgdGFyZ2V0cywgYW5hbHlzdHMgc2F5LiBCTlAgaXMgZXhwZWN0ZWQgdG8gcGxlYWQgZ3VpbHR5IHRvIGEgY3JpbWluYWwgY2hhcmdlIGluIE1hbmhhdHRhbiBGZWRlcmFsIENvdXJ0IG9uIE1vbmRheSBhbmQgdGhlIFUuUy4gSnVzdGljZSBEZXBhcnRtZW50IGlzIHBsYW5uaW5nIGEgbmV3cyBjb25mZXJlbmNlIGluIFdhc2hpbmd0b24gdG8gYW5ub3VuY2UgYSBkZWFsIHRoZSBzYW1lIGRheSwgc291cmNlcyBzYWlkLiBIb3dldmVyIHRoZSBsZW5kZXIgaXMgZXhwZWN0ZWQgdG8gcmV0YWluIGl0cyBiYW5raW5nIGxpY2Vuc2UgZnJvbSB0aGUgTmV3IFlvcmsgc3RhdGUgYmFua2luZyByZWd1bGF0b3IsIGFmdGVyIG5lZ290aWF0aW9ucyB3aGljaCwgYWNjb3JkaW5nIHRvIHNvdXJjZXMgY2xvc2UgdG8gdGhlIG1hdHRlciwgYXQgb25lIHBvaW50IHJhaXNlZCB0aGUgcHJvc3BlY3Qgb2YgYW4gZXZlbiBiaWdnZXIgZmluZSB1cCB0byAkMTYgYmlsbGlvbi4gIkkgd2FudCB0byBzYXkgaXQgY2xlYXJseSBoZXJlOiB3ZSB3aWxsIHJlY2VpdmUgYSBoZWF2eSBwZW5hbHR5LCIgQk5QIENoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyIEplYW4tTGF1cmVudCBCb25uYWZlIHRvbGQgc3RhZmYgaW4gYW4gaW50ZXJuYWwgbWVzc2FnZSBzZW50IG9uIEp1bmUgMjcgYW5kIHNlZW4gYnkgUmV1dGVycy4gIkhvd2V2ZXIsIHRoZSBkaWZmaWN1bHRpZXMgdGhhdCB3ZSBhcmUgY3VycmVudGx5IGV4cGVyaWVuY2luZyBtdXN0IG5vdCBhZmZlY3Qgb3VyIHBsYW5zIGZvciB0aGUgZnV0dXJlLiIgVGhlIGJhbmsgaGFzIG5vdCBjb21tZW50ZWQgcHVibGljbHkgb24gdGhlIGNhc2Ugc2luY2UgaXQgd2FybmVkIHNoYXJlaG9sZGVycyBvbiBNYXkgMTQgdGhhdCB0aGUgZmluZSBjb3VsZCBiZSBzdGlmZmVyIHRoYW4gdGhlICQxLjEgYmlsbGlvbiBmb3Igd2hpY2ggaXQgb3JpZ2luYWxseSBwcm92aXNpb25lZC4gQSBCTlAgc3Bva2Vzd29tYW4gZGVjbGluZWQgdG8gY29tbWVudC4gVS5TLiBhdXRob3JpdGllcyBhcmUgZXhhbWluaW5nIHdoZXRoZXIgQk5QIGV2YWRlZCBVLlMuIHNhbmN0aW9ucyByZWxhdGluZyBwcmltYXJpbHkgdG8gU3VkYW4gYmV0d2VlbiAyMDAyIGFuZCAyMDA5LCBzb3VyY2VzIGhhdmUgc2FpZC4gQSAkOSBiaWxsaW9uIGZpbmUsIG5vdCBmYXIgc2hvcnQgb2YgQk5QJ3MgZW50aXJlIDIwMTMgcHJldGF4IGluY29tZSBvZiBhYm91dCA4LjIgYmlsbGlvbiBldXJvcyAoJDExLjIgYmlsbGlvbiksIHdvdWxkIGJlIHRoZSBsYXJnZXN0IHBlbmFsdHkgcGFpZCBieSBhIEV1cm9wZWFuIGJhbmsgdG8gZGF0ZSBmb3IgdmlvbGF0aW9ucyBvZiBzYW5jdGlvbnMgaW1wb3NlZCBieSB0aGUgT2ZmaWNlIG9mIEZvcmVpZ24gQXNzZXRzIENvbnRyb2wsIE1vcmdhbiBTdGFubGV5IGFuYWx5c3RzIHNhaWQuIEJOUCBoYXMgb25seSBzYWlkIHB1YmxpY2x5IHRoYXQgaXQgaXMgaW4gZGlzY3Vzc2lvbnMgd2l0aCBVLlMuIGF1dGhvcml0aWVzIGFib3V0ICJjZXJ0YWluIFUuUy4gZG9sbGFyIHBheW1lbnRzIGludm9sdmluZyBjb3VudHJpZXMsIHBlcnNvbnMgYW5kIGVudGl0aWVzIHRoYXQgY291bGQgaGF2ZSBiZWVuIHN1YmplY3QgdG8gZWNvbm9taWMgc2FuY3Rpb25zLiIgTGFzdCBtb250aCBpdCBzYWlkIGl0IGhhZCBpbXByb3ZlZCBjb250cm9sIHByb2Nlc3NlcyB0byBlbnN1cmUgbWlzdGFrZXMgZGlkIG5vdCBvY2N1ciBhZ2Fpbi4gRkFJUiBBTkQgUFJPUE9SVElPTkFURSBGcmVuY2ggUHJlc2lkZW50IEZyYW5jb2lzIEhvbGxhbmRlIGhhcyBhcHBlYWxlZCB0byBoaXMgY291bnRlcnBhcnQgQmFyYWNrIE9iYW1hIHRvIGVuc3VyZSBhbnkgcGVuYWx0eSBpcyBmYWlyIGFuZCBkb2VzIG5vdCBoYXZlIHJlcGVyY3Vzc2lvbnMgZm9yIEV1cm9wZSdzIGVjb25vbXkuIE9iYW1hIGhhcyByZXBsaWVkIHRoYXQgaXQgaXMgcHVyZWx5IGEgbWF0dGVyIGZvciB0aGUganVkaWNpYXJ5LiBFdXJvcGVhbiBVbmlvbiBpbnRlcm5hbCBtYXJrZXQgY29tbWlzc2lvbmVyIE1pY2hlbCBCYXJuaWVyIHNhaWQgaXQgd2FzIG5vcm1hbCB0aGF0IGFueSBicmVhY2ggb2YgcnVsZXMgYmUgcHVuaXNoZWQuICJUaGF0J3MgZXhhY3RseSB3aGF0IHdlIGRvIG92ZXIgaGVyZSBpZiBhIFUuUy4gY29tcGFueSBkb2VzIG5vdCByZXNwZWN0IEV1cm9wZWFuIHJ1bGVzLCIgQmFybmllciwgYSBGcmVuY2ggbmF0aW9uYWwsIHRvbGQgRnJhbmNlIEluZm8gcmFkaW8sIG5vdGluZyAyMDEzIHBlbmFsdGllcyBpbXBvc2VkIGJ5IEVVIGFudGl0cnVzdCByZWd1bGF0b3JzIG9uIE1pY3Jvc29mdCBmb3IgYnJlYWtpbmcgY29tcGV0aXRpb24gcnVsZXMuIFRoZSBpbnZlc3RpZ2F0aW9uIG9mIEJOUCBvcGVyYXRpb25zIGhhcyB0dXJuZWQgdXAgYmlsbGlvbnMgb2YgZG9sbGFycyBvZiB0cmFuc2ZlcnMgaW52b2x2aW5nIHRoZSBiYW5rIHRoYXQgc3BlY2lmaWNhbGx5IHZpb2xhdGVkIFUuUy4gc2FuY3Rpb25zLCBvbmUgc291cmNlIGhhcyBzYWlkLiBCb25uYWZlIGluaGVyaXRlZCBhIGJhbmsgdGhhdCBlbWVyZ2VkIHJlbGF0aXZlbHkgdW5zY2F0aGVkIGZyb20gdGhlIGVjb25vbWljIGNyaXNpcyBhbmQgc291Z2h0IHRvIHJhaXNlIHJldmVudWUgb3V0c2lkZSBpdHMgdHJhZGl0aW9uYWwgRXVyb3BlYW4gbWFya2V0cywganVzdCBhcyB0b3VnaGVyIGZpbmFuY2lhbCByZWd1bGF0aW9uIG1hZGUgYmFua2luZyBhIGxlc3MgcHJvZml0YWJsZSBidXNpbmVzcy4gVGhlIE5ldyBZb3JrIFN0YXRlIERlcGFydG1lbnQgb2YgRmluYW5jaWFsIFNlcnZpY2VzLCBoZWFkZWQgYnkgQmVuamFtaW4gTGF3c2t5LCBwcm9wb3NlZCB0aGUgc3VzcGVuc2lvbiBvZiBkb2xsYXItY2xlYXJpbmcgb3BlcmF0aW9ucyBhcyBvbmUgY29uZGl0aW9uIGZvciBub3QgcmV2b2tpbmcgdGhlIGxpY2Vuc2UsIFJldXRlcnMgcmVwb3J0ZWQgbGFzdCBtb250aC4gQk5QIGlzIGxpa2VseSB0byBiZSBzdXNwZW5kZWQgZnJvbSBjb252ZXJ0aW5nIGZvcmVpZ24gY3VycmVuY2llcyB0byBkb2xsYXJzIG9uIGJlaGFsZiBvZiBjbGllbnRzIGZvciBzb21lIGJ1c2luZXNzZXMgZm9yIGFzIGxvbmcgYXMgYSB5ZWFyLCBzb3VyY2VzIGhhdmUgdG9sZCBSZXV0ZXJzLiBBIHNvdXJjZSBmYW1pbGlhciB3aXRoIHRoZSBtYXR0ZXIgc2FpZCBvbiBTdW5kYXkgdGhpcyB3b3VsZCBtYWlubHkgaW52b2x2ZSBvaWwgYW5kIGdhcyBmaW5hbmNpbmcuIFR3byBzb3VyY2VzIHNhaWQgb24gU3VuZGF5IHRoZSBiYW4gd291bGQgbm90IGdvIGludG8gZWZmZWN0IGZvciBhbm90aGVyIHNpeCBtb250aHMgaW4gb3JkZXIgdG8gbGV0IHRoZSBiYW5rIGFuZCBjbGllbnRzIGFycmFuZ2Ugb3RoZXIgcGxhbnMuIE9uZSBzb3VyY2Ugc2FpZCB0aGUgc2V0dGxlbWVudCB3b3VsZCBpbmNsdWRlIGFib3V0IGEgZG96ZW4gZW1wbG95ZWVzIGxlYXZpbmcgdGhlIGJhbmsgYW5kIGRpc2NpcGxpbmFyeSBhY3Rpb24gZm9yIG90aGVycy4gU2hhcmVzIGluIEJOUCBoYXZlIGZhbGxlbiAxNyBwZXJjZW50IHNpbmNlIGl0IGZpcnN0IHNhaWQgaXQgd291bGQgbWFrZSBwcm92aXNpb25zIGZvciB0aGUgZmluZSBpbiBtaWQtRmVicnVhcnksIG9uIGNvbmNlcm5zIHRoZSBwZW5hbHRpZXMgY291bGQgYmUgYmlnIGVub3VnaCB0byByZXN0cmljdCBpdHMgZGl2aWRlbmRzIGFuZCBkcmFnIGl0cyBjYXBpdGFsIHJhdGlvIHRvIGJlbG93IDEwIHBlcmNlbnQg4oCUIGEgbGV2ZWwgc2VlbiBhcyBrZXkgdG8gc3RheWluZyBvdXQgb2YgdGhlIGRhbmdlciB6b25lIHVuZGVyIHRpZ2h0ZXIgcG9zdC1maW5hbmNpYWwgY3Jpc2lzIGd1aWRlbGluZXMu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbrJNyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDY1ZTYxMTVlMGIwMTM2Yjk=</field><field name="symbol" class="java.lang.String">rO0ABXQABElORk8=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbwSziAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+UeuFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+UeuFHrhR7</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+UeuFHrhR7</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+UeuFHrhR7</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+UeuFHrhR7</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDkyNjk0MTYwZjAyMzRkMDY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJgwAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDU2NzU=</field><field name="title" class="java.lang.String">rO0ABXQAL0F1dGhvciBNaWNoYWVsIExld2lzOiBVUyBTdG9jayBNYXJrZXQgSXMgUmlnZ2Vk</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUURW8yAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDE3OWM0OWVkNzM5NWQ1ODM=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNDSFc=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUUWgiiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7bhR64Ueu</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7fXCj1wo9</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7JmZmZmZm</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7VHrhR64U</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7Fwo9cKPX</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAG2w3A==</field><field name="id" class="java.lang.String">rO0ABXQAEDFjMzJjZmY3NTJmMTdlZDg=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFqNAAAA==</field></document></documents><date>2015-05-07T12:17:25-0500</date></cacheEntry>
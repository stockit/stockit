<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0BrpHbG9iYWwgcGVuc2lvbiBmdW5kIG1hbmFnZXJzIGN1dCB0aGVpciBleHBvc3VyZSB0byBib25kcyBpbiBmYXZvciBvZiBlcXVpdGllcyBpbiAyMDEzIGEgc3VydmV5IHNob3dlZCB1bmRlcnNjb3JpbmcgYSBzaGlmdCBhd2F5IGZyb20gZml4ZWRpbmNvbWUgc2VjdXJpdGllcyBhcyBpbnZlc3RvcnMgZXhwZWN0IHJpc2luZyBpbnRlcmVzdCByYXRlcyB0byBjdXJiIHJldHVybnMgSW5zdGl0dXRpb25hbCBwZW5zaW9uIGZ1bmQgbWFuYWdlcnMgYWNyb3NzIDEzIGNvdW50cmllcyByZWR1Y2VkIHRoZSBwcm9wb3J0aW9uIG9mIGFzc2V0cyBoZWxkIGluIGJvbmRzIHRvIDI5IHBlcmNlbnQgaW4gMjAxMyBmcm9tIDM0IHBlcmNlbnQgYSB5ZWFyIGVhcmxpZXIgd2hpbGUgYm9vc3RpbmcgdGhlaXIgZXF1aXRpZXMgaG9sZGluZyB0byA1MiBwZXJjZW50IGZyb20gNDcgcGVyY2VudCBhIGdsb2JhbCBwZW5zaW9uIGFzc2V0IHN0dWR5IGJ5IHJlc2VhcmNoZXIgVG93ZXJzIFdhdHNvbiAgQ28gc2hvd2VkIFJpc2tpZXIgYXNzZXRzIGdhaW5lZCBmYXZvciBpbiAyMDEzIGFzIHRoZSBvdXRsb29rIGZvciB0aGUgVVMgZWNvbm9teSBpbXByb3ZlZCBwdXNoaW5nIHVwIHRoZSBNU0NJIFdvcmxkIEluZGV4IG9mIGdsb2JhbCBlcXVpdGllcyBieSAyNCBwZXJjZW50IHdoaWxlIE1lcnJpbGwgTHluY2hzIGdsb2JhbCBib25kIGluZGV4IGZlbGwgMDMgcGVyY2VudCBUaGUgVVMgRmVkZXJhbCBSZXNlcnZlIGlzIHJlZHVjaW5nIHN0aW11bHVzIGtub3duIGFzIHF1YW50aXRhdGl2ZSBlYXNpbmcgcHVzaGluZyB1cCBtYXJrZXQgaW50ZXJlc3QgcmF0ZXMgVGhlIGJlbmNobWFyayBVUyAxMHllYXIgVHJlYXN1cnkgeWllbGQgY2xpbWJlZCBpbiAyMDEzIGZvciB0aGUgZmlyc3QgdGltZSBzaW5jZSAyMDA5IER1cmluZyAyMDEzIGVxdWl0aWVzIGVuam95ZWQgdGhlaXIgYmVzdCBjYWxlbmRhciB5ZWFyIG9mIHJpc2thZGp1c3RlZCByZXR1cm4gc2luY2UgdGhlIGZpbmFuY2lhbCBjcmlzaXMgYW5kIGFzIGEgcmVzdWx0IHBlbnNpb24gZnVuZHMgaW4gbW9zdCBtYXJrZXRzIGFyZSBpbiB0aGUgYmVzdCBzaGFwZSB0aGV5IGhhdmUgYmVlbiBmb3IgbWFueSB5ZWFycyBNYXJ0aW4gR29zcyBzZW5pb3IgaW52ZXN0bWVudCBjb25zdWx0YW50IGZvciBUb3dlcnMgV2F0c29uIGluIEF1c3RyYWxpYSBzYWlkIGluIGEgc3RhdGVtZW50IFRodXJzZGF5IEdsb2JhbCBpbnN0aXR1dGlvbmFsIHBlbnNpb24gZnVuZCBhc3NldHMgYWNyb3NzIHRoZSAxMyBtYWpvciBtYXJrZXRzIGNsaW1iZWQgOTUgcGVyY2VudCB0byBhIHJlY29yZCAzMTk4IHRyaWxsaW9uIFRvd2VycyBXYXRzb24gc2FpZCBiZWF0aW5nIGEgNjkgcGVyY2VudCBnYWluIGluIDIwMTIgYW5kIGF2ZXJhZ2UgaW5jcmVhc2Ugb2YgNjcgcGVyY2VudCBpbiB0aGUgcGFzdCAxMCB5ZWFycyBhY2NvcmRpbmcgdG8gdGhlIHN0dWR5IEZ1bmQgbWFuYWdlcnMgaW4gdGhlIFVTIHRoZSBsYXJnZXN0IHBlbnNpb24gbWFya2V0IHJhaXNlZCB0aGVpciBlcXVpdHkgaG9sZGluZ3MgdG8gNTcgcGVyY2VudCBpbiAyMDEzIGZyb20gNTIgcGVyY2VudCBpbiAyMDEyIGFuZCBkcm9wcGVkIGJvbmQgaG9sZGluZ3MgdG8gMjMgcGVyY2VudCBmcm9tIDI3IHBlcmNlbnQgdGhlIHN0dWR5IGZvdW5kIFVTIHBlbnNpb24gYXNzZXRzIGdyZXcgMTIgcGVyY2VudCBpbiAyMDEzIHRvIDE4OSBiaWxsaW9uIGFjY29yZGluZyB0byB0aGUgc3R1ZHl0AARyb3dzdXEAfgAKAAAAAXQAATV0AAVzdGFydHVxAH4ACgAAAAF0AAEwdAACZmx1cQB+AAoAAAABdABvYXJ0aWNsZUlkLHRpdGxlLGNvbnRlbnQsZGF0ZSxzdG9ja0hpc3RvcnlJZCxzeW1ib2wsaGlzdG9yeURhdGUsb3BlbixoaWdoLGxvdyxjbG9zZSxhZGpDbG9zZSx2b2x1bWUsaWQsX3ZlcnNpb25fdAACZnF1cQB+AAoAAAABdAA6aGlzdG9yeURhdGU6WzIwMTMtMDMtMjdUMDA6MDA6MDBaIFRPIDIwMTMtMTItMDNUNTk6NTk6NTlaXXgAcA==</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDIzOTk=</field><field name="title" class="java.lang.String">rO0ABXQASEphcGFuJ3MgUHJpbWUgTWluaXN0ZXIgQ291cnRzIE5ldyBSaXNrIFdpdGggUGxhbiB0byBKb2x0IFB1YmxpYyBQZW5zaW9ucw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8StLSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDE5Mzg3YTFlNTI1ZTEwM2U=</field><field name="symbol" class="java.lang.String">rO0ABXQABEhVR0U=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8X2xCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/mZmZmZmZm</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAyA==</field><field name="id" class="java.lang.String">rO0ABXQAEDIxYjY4MGNkZjVmYjI0Mjg=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFrTAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDg3MTg=</field><field name="title" class="java.lang.String">rO0ABXQAKkdsb2JhbCBTdG9ja3MgQ2hhbGsgVXAgQmVzdCBSdW4gU2luY2UgMjAwOQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKsvfcAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDU5NjVkYTg2NWRhZDQzOGQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAA05PVg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKx5FMAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUb1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUoeuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUQUeuFHrh</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUbCj1wo9c</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBRzCj1wo9c</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAACqmwA==</field><field name="id" class="java.lang.String">rO0ABXQAEGNiOTU3OTQwMDA1ZGE3YWM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mIrhAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwODE=</field><field name="title" class="java.lang.String">rO0ABXQAJlVTIEJvbmRzIEhhbmcgVG91Z2ggYWZ0ZXIgUm91Z2ggU3VtbWVy</field><field name="content" class="java.lang.String">rO0ABXQVDldoaWxlIHRoZSBUcmVhc3VyeSBtYXJrZXQgaXMgc3RpbGwgb24gdGhlIGhvb2sgZm9yIGEgd2VhayB5ZWFyLCBqdW5rIGJvbmRzIGFuZCBhIGZldyBvdGhlciBzZWN0b3JzIGFyZSBzZXQgdG8gZW5kIHdpdGggcmVzcGVjdGFibGUgZ2FpbnMgYWZ0ZXIgc3Vydml2aW5nIGEgdHVyYnVsZW50IHN1bW1lciBkcml2ZW4gYnkgZmVhcnMgdGhlIEZlZGVyYWwgUmVzZXJ2ZSB3b3VsZCBzdGFydCB0byBkaWFsIGJhY2sgc3RpbXVsdXMuICJNYWpvciBnb3Zlcm5tZW50IGJvbmQgbWFya2V0cyBoYXZlIGVudGVyZWQgaW50byBhIGxvbmctdGVybSBiZWFyIG1hcmtldC4gWW91IG5lZWQgYm9uZHMgdGhhdCBob2xkIHVwIHdlbGwgaW4gYSByaXNpbmcgcmF0ZSBlbnZpcm9ubWVudCwiIHNhaWQgS3Jpc3RpbmEgSG9vcGVyLCBoZWFkIG9mIGludmVzdG1lbnQgYW5kIGNsaWVudCBzdHJhdGVnaXN0IGF0IEFsbGlhbnogR2xvYmFsIEludmVzdG9ycyBpbiBOZXcgWW9yaywgd2hpY2ggbWFuYWdlcyAkNDA5IGJpbGxpb24gaW4gYXNzZXRzLiBXaGlsZSBib25kIGludmVzdG9ycyBjYW4gYnJlYXRoZSBhIHNpZ2ggb2YgcmVsaWVmIGZvciBub3csIHRoZSBvdXRsb29rIGZvciBuZXh0IHllYXIgaXMgc3RpbGwgbm90IGZvciB0aGUgZmFpbnQtaGVhcnRlZC4gVS5TLiBib25kIGludmVzdG9ycyB3aWxsIG5lZWQgdG8gaGVkZ2UgYWdhaW5zdCB0aGUgaW5ldml0YWJpbGl0eSB0aGF0IHNvb25lciBvciBsYXRlciBVLlMuLCBFdXJvcGVhbiBhbmQgSmFwYW5lc2UgY2VudHJhbCBiYW5rcyB3aWxsIHVud2luZCB0aGVpciB1bnByZWNlZGVudGVkIHN0aW11bHVzIHRvIGJvbHN0ZXIgdGhlaXIgZWNvbm9taWVzLiBCdXQgdGhhdCBtZWFucyBpbnZlc3RvcnMgd291bGQgbmVlZCB0byB0YWtlIGdyZWF0ZXIgcmlza3MuIFRoZSBVLlMuIGNlbnRyYWwgYmFuayDigJQgd2hpY2ggc3BhcmtlZCBhIG1hc3NpdmUgc2VsbG9mZiBpbiBib25kcyBpbiB0aGUgbGF0ZSBzcHJpbmcgYnkgc2lnbmFsaW5nIGl0cyBpbnRlbnQgdG8gc2hyaW5rIGl0cyAkODUgYmlsbGlvbiBtb250aGx5IHB1cmNoYXNlcyBvZiBUcmVhc3VyeXMgYW5kIG1vcnRnYWdlLWJhY2tlZCBzZWN1cml0aWVzIOKAlCBzcHVycmVkIGEgcmV2ZXJzYWwgaW4gdGhvc2UgbWFya2V0cyBhZnRlciBpdCBjaG9zZSBub3QgdG8gY3V0IHRoZSBwcm9ncmFtIGF0IGl0cyBTZXB0ZW1iZXIgbWVldGluZywgYSBwb3NpdGlvbiByZWl0ZXJhdGVkIGF0IGl0cyBPY3RvYmVyIGdhdGhlcmluZy4gQmVuY2htYXJrIFUuUy4gMTAteWVhciBUcmVhc3VyeSB5aWVsZHMgdGhlbiBmZWxsIGFzIG11Y2ggYXMgMC41MCBwZXJjZW50YWdlIHBvaW50IGZyb20gYSB0d28teWVhciBoaWdoIG9mIDMgcGVyY2VudCwgcHJvdmlkaW5nIGEgc2hvdCBpbiB0aGUgYXJtIGZvciBVLlMuIGJvbmQgbXV0dWFsIGZ1bmRzLiBUaGV5IHdlcmUgcXVvdGVkIGF0IDIuNjEgcGVyY2VudCBsYXRlIG9uIFRodXJzZGF5LiBJbiB0aGUgZmlyc3QgZWlnaHQgbW9udGhzIG9mIHRoZSB5ZWFyLCBvbmx5IDIwIHBlcmNlbnQgb2YgdGhlIDEsNjUxIGJvbmQgZnVuZHMgdHJhY2tlZCBieSBMaXBwZXIsIGEgdW5pdCBvZiBUaG9tc29uIFJldXRlcnMsIGhhZCBlYXJuZWQgYSBwb3NpdGl2ZSByZXR1cm4uIFNpbmNlIHRoZW4sIHRoYXQgc2hhcmUgaGFzIGp1bXBlZCB0byAzMiBwZXJjZW50LiBKdW5rLCBvciBoaWdoLXlpZWxkLCBib25kcyBoYXZlIHJhY2tlZCB1cCBhIDYuNCBwZXJjZW50IGdhaW4gc28gZmFyIHRoaXMgeWVhciwgYWNjb3JkaW5nIHRvIEJhbmsgb2YgQW1lcmljYSBNZXJyaWxsIEx5bmNoLiBUaGUgc2VjdG9yIHN1ZmZlcmVkIGhlYXZ5IGxvc3NlcyBpbiBNYXkgYW5kIEp1bmUgb24gdGhlIEZlZCdzIGhpbnRzIGFib3V0IGN1dHRpbmcgaXRzIHN0aW11bHVzLiBTb21ld2hhdCBsZXNzIHJpc2t5IGJhbmsgbG9hbnMsIGFzIHRyYWNrZWQgYnkgU3RhbmRhcmQgJiBQb29yJ3MsIGhhdmUgcmV0dXJuZWQgNC41IHBlcmNlbnQsIHdoaWxlIGludmVzdG1lbnQtZ3JhZGUgVS5TLiBjb3Jwb3JhdGVzIGhhdmUgbG9zdCAyLjA3IHBlcmNlbnQgc28gZmFyIGluIDIwMTMuIFRyZWFzdXJ5cyBhbmQgb3RoZXIgZ292ZXJubWVudC1yZWxhdGVkIGRlYnQgYXJlIGEgZGlmZmVyZW50IG1hdHRlciwgZGVzcGl0ZSB0aGUgcmVjZW50IGRlY2xpbmUgaW4geWllbGRzLiBUaGV5IGFyZSBhbG1vc3QgY2VydGFpbmx5IGRvb21lZCB0byBhIHdlYWsgeWVhci4gIlRyZWFzdXJ5cyBhbmQgYWdlbmNpZXMgd2lsbCBjb250aW51ZSB0byBzdHJ1Z2dsZSwiIHNhaWQgSmFtZXMgU2FybmksIG1hbmFnaW5nIHByaW5jaXBhbCBhdCBQYXlkZW4gJiBSeWdlbCBpbiBMb3MgQW5nZWxlcywgd2hpY2ggb3ZlcnNlZXMgJDgwIGJpbGxpb24gaW4gYXNzZXRzLiBVLlMuIFRyZWFzdXJ5cyBoYXZlIGxvc3QgMi40IHBlcmNlbnQgc28gZmFyIHRoaXMgeWVhciwgYW5kIGFyZSBvbiB0cmFjayBmb3IgdGhlaXIgc3RlZXBlc3QgYW5udWFsIGxvc3Mgc2luY2UgMjAwOS4gIEFnZW5jaWVzIOKAlCBib25kcyBmcm9tIHRoZSBsaWtlcyBvZiBGYW5uaWUgTWFlIGFuZCBGcmVkZGllIE1hYyDigJQgaGF2ZSBkZWNsaW5lZCAwLjg1IHBlcmNlbnQsIGFjY29yZGluZyB0byBib25kIGluZGV4ZXMgY29tcGlsZWQgYnkgQmFuayBvZiBBbWVyaWNhIE1lcnJpbGwgTHluY2guIEJ1dCBpZiBGcmlkYXkgYnJpbmdzIGEgcG9vciBzZXQgb2YgT2N0b2JlciBqb2JzIGZpZ3VyZXMsIGl0IG1heSByZWtpbmRsZSBhIHJhbGx5IGluIGJvbmRzLCBicmluZ2luZyBiZW5jaG1hcmsgMTAteWVhciBUcmVhc3VyeSB5aWVsZHMgdG93YXJkIDIuMjUgcGVyY2VudC4gQXQgdGhhdCBsZXZlbCwgdGhlIDIwMTMgcGVyZm9ybWFuY2Ugb2YgaW52ZXN0bWVudC1ncmFkZSBjb3Jwb3JhdGUgYm9uZHMgYW5kIG1vcnRnYWdlLWJhY2tlZCBzZWN1cml0aWVzIC0gd2hvc2UgcHJpY2VzIGFyZSBpbmZsdWVuY2VkIGJ5IFRyZWFzdXJ5cyAtIHdvdWxkIHByb2JhYmx5IGJlIHNhbHZhZ2VkLCBlcmFzaW5nIHRoZWlyIGxvc3NlcyBvbiB0aGUgeWVhci4gIllvdSdkIGRvIGJldHRlciB0aGFuIGJyZWFrLWV2ZW4gaWYgdGhhdCBoYXBwZW5zLCIgc2FpZCBKZWZmcmV5IFJvc2VuYmVyZywgY2hpZWYgaW52ZXN0bWVudCBzdHJhdGVnaXN0IGZvciBmaXhlZCBpbmNvbWUgYXQgQmxhY2tSb2NrLCB3aGljaCBtYW5hZ2VzICQzLjc5IHRyaWxsaW9uIGluIGFzc2V0cy4gwqAgTk9UIFRBS0lORyBDSEFOQ0VTIFN0aWxsLCB0aGUgYXV0dW1uYWwgcmVuYWlzc2FuY2UgbWlnaHQgYmUgdG9vIGxhdGUgZm9yIHRob3NlIGJvbmQgZnVuZCBtYW5hZ2VycyB3aG9zZSBsZWRnZXJzIGFyZSBzd2ltbWluZyBpbiByZWQuIEZlZCBwb2xpY3ltYWtlcnMsIHdobyBoYXZlIGNvb2xlZCBzcGVjdWxhdGlvbiBvZiBhbiBpbW1pbmVudCByZWR1Y3Rpb24gaW4gYm9uZCBidXlpbmcsIGhhdmUgbm90IGFiYW5kb25lZCB0aGUgbm90aW9uIHRoZXkgbWlnaHQgZG8gaXQgaW4gdGhlIGZpcnN0IGhhbGYgb2YgMjAxNC4gU3VjaCBhIG1vdmUgd291bGQgc3Rva2Ugc3BlY3VsYXRpb24gdGhhdCB0aGV5IHdpbGwgbWFwIG91dCBhIHRpbWV0YWJsZSBmb3IgYW4gZXZlbnR1YWwgaGlrZSBpbiBpbnRlcmVzdCByYXRlcywgd2hpY2ggaGF2ZSBiZWVuIG5lYXIgemVybyBzaW5jZSBEZWNlbWJlciAyMDA4LiBXaGVuZXZlciB0aGUgRmVkIHN0YXJ0cyB0byByZWR1Y2UgaXRzIHN0aW11bHVzLCBUcmVhc3VyeXMgYXJlIGxpa2VseSB0byBiZWFyIHRoZSBiaWdnZXN0IGJydW50IG9mIHRoZSBzZWxsaW5nLiAiSXQncyBub3QgYSBtYXR0ZXIgb2YgJ2lmJyBidXQgJ3doZW4sJyIgUGF5ZGVuICYgUnlnZWwncyBTYXJuaSBzYWlkLiAiVHJlYXN1cnlzIGFyZSBub3QgYSBnb29kIHBsYWNlIHRvIGJlIHdoZW4gcmF0ZXMgcmlzZS4iIFNvbWUgaW52ZXN0b3JzIGhhdmUgcmVzcG9uZGVkIGJ5IHNjYWxpbmcgYmFjayBib25kIGhvbGRpbmdzLCB3aXRoZHJhd2luZyAkNzggYmlsbGlvbiBmcm9tIGJvbmQgbXV0dWFsIGZ1bmRzIHNpbmNlIE1heSwgY29tcGFyZWQgd2l0aCB0aGUgJDM1IGJpbGxpb24gdGhleSBzb2NrZWQgaW50byBzdG9jayBmdW5kcywgYWNjb3JkaW5nIHRvIHRoZSBJbnZlc3RtZW50IENvbXBhbnkgSW5zdGl0dXRlLiBFdmVuIHRoZSBQaW1jbyBUb3RhbCBSZXR1cm4gRnVuZCwgdGhlIHdvcmxkJ3MgYmlnZ2VzdCBib25kIGZ1bmQsIGhhcyBub3QgYmVlbiBpbW11bmUuIEl0IGhhcyBzZWVuIG91dGZsb3dzIGZvciBzaXh0aCBzdHJhaWdodCBtb250aHMsIHJlZHVjaW5nIGl0cyBhc3NldHMgdG8gJDI0OCBiaWxsaW9uIGZyb20gJDI5MyBiaWxsaW9uIGluIEFwcmlsLCBhY2NvcmRpbmcgdG8gTW9ybmluZ3N0YXIuIFJPVEFUSU5HIElOVE8gUklTSyBFdmVuIHRob3VnaCBUcmVhc3VyeSB5aWVsZHMgaGF2ZSByaXNlbiwgYmVuY2htYXJrIHlpZWxkcyBhcmUgc3RpbGwgc3R1Y2sgbmVhciBoaXN0b3JpYyBsb3dzLiBJbnN1cmFuY2UgY29tcGFuaWVzLCBwZW5zaW9uIGZ1bmRzIGFuZCBvdGhlciBsb25nLXRlcm0gaW52ZXN0b3JzIGh1bmdyeSBmb3Igc3RlYWR5IGluY29tZSB0byBtZWV0IGJpbGxpb25zIG9mIGRvbGxhcnMgaW4gYW5udWFsIHBheW91dCBvYmxpZ2F0aW9ucyBoYXZlIHNoaWZ0ZWQgbW9uZXkgb3V0IG9mIGxvdy15aWVsZGluZyBib25kcyBhbmQgaW50byBoaWdoZXIteWllbGRpbmcgb25lcywgZnVuZCBtYW5hZ2VycyBzYWlkLiAiTWFueSBvZiBvdXIgcGVuc2lvbiBmdW5kIGNsaWVudHMgYXJlIHdvcnJpZWQgYWJvdXQgcmF0ZXMgZ29pbmcgZm9yd2FyZC4gVGhleSBhbmQgb3VyIGluc3RpdHV0aW9uYWwgY2xpZW50cyBoYXZlIGJlZW4gcm90YXRpbmcgaW50byBoaWdoLXlpZWxkIGJvbmRzIGFuZCBsZXZlcmFnZWQgYmFuayBsb2FucywiIHNhaWQgS2VpdGggQmFjaG1hbiwgaGVhZCBvZiBVLlMuIGhpZ2gteWllbGQgd2l0aCBBYmVyZGVlbiBBc3NldCBNYW5hZ2VtZW50IGluIFBoaWxhZGVscGhpYSB3aGljaCBoYXMgJDMxMiBiaWxsaW9uIGluIGFzc2V0cy4gQmFjaG1hbiwgd2hvIGV4cGVjdHMganVuayBib25kcyB0byBlYXJuIDcgdG8gOCBwZXJjZW50IHRoaXMgeWVhciBhbmQgYWdhaW4gbmV4dCB5ZWFyLCBzYWlkIHRoZXkgYXJlIGdvb2QgdmVoaWNsZXMgZm9yIHRob3NlIHdobyB3YW50IHRvIGludmVzdCBpbiBib25kcyBiZWNhdXNlIHRoZXkgaGF2ZSBlbm91Z2ggY3VzaGlvbiBldmVuIGlmIHlpZWxkcyBoZWFkIG1vZGVyYXRlbHkgaGlnaGVyIGluIGNvbWluZyBtb250aHMuIEp1bmsgYm9uZHMgYXJlIG9mZmVyaW5nIGFuIGF2ZXJhZ2UgeWllbGQgcHJlbWl1bSBvZiA0LjgwIHBlcmNlbnRhZ2UgcG9pbnRzLCBjb21wYXJlZCB3aXRoIGEgaGlzdG9yaWMgYXZlcmFnZSByYW5nZSBvZiAzLjUwIHRvIDQgcG9pbnRzLCBCYWNobWFuIHNhaWQu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUIxJVcAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI2MjBmNzU2ZjM0YTNkODQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lQQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUI2S7MAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5gAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5h64UeuFI</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5gAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5h64UeuFI</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3cKPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAADIA==</field><field name="id" class="java.lang.String">rO0ABXQAEDY2OGE4NGFjM2JhZjI1NWI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGAMAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDg3MDI=</field><field name="title" class="java.lang.String">rO0ABXQAM0dvbGQgQnVsbHMgUmV0cmVhdCBhcyBQcmljZXMgRHJvcCB0byBGb3VyLU1vbnRoIExvdw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUK3Cq8AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGRmNDQ1MGM3N2Y1NGE2NTc=</field><field name="symbol" class="java.lang.String">rO0ABXQAA05PVg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUK8MQsAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUiuFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUqZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUQzMzMzMz</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUdmZmZmZm</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBR49cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAACEpdA==</field><field name="id" class="java.lang.String">rO0ABXQAEGZmNzhiYTVlYjFiYmM4MGM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mG5hAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExNTQ1</field><field name="title" class="java.lang.String">rO0ABXQANkdvbGQgQmVhcnMgUHVsbCAkMjAuOCBCaWxsaW9uIGFzIEJsYWNrUm9jayBTYXlzIHRvIEJ1eQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6cQnCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI5YTQyOGQ3OWY1YWUwODA=</field><field name="symbol" class="java.lang.String">rO0ABXQAB01NVEMuUEs=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6haMyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAIzMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGZkYTE2NzQ4OGRiZTVmYjA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHcQAAAA==</field></document></documents><date>2015-05-07T12:11:53-0500</date></cacheEntry>
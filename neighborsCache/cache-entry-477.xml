<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0DHBNb25leSBtYXJrZXQgcG9ydGZvbGlvIG1hbmFnZXJzIGF0IEZpZGVsaXR5IEludmVzdG1lbnRzIHN0YXJ0ZWQgIHNlbGxpbmcgb2ZmIHNob3J0dGVybSBVUyBnb3Zlcm5tZW50IGRlYnQgYSBjb3VwbGUgb2Ygd2Vla3MgYWdvIE5hbmN5ICBQcmlvciBwcmVzaWRlbnQgb2YgRmlkZWxpdHlzIE1vbmV5IE1hcmtldCBHcm91cCBzYWlkIFdlZG5lc2RheSAgV2hpbGUgRmlkZWxpdHkgZXhwZWN0cyB0aGUgZGVidCBjZWlsaW5nIGlzc3VlIHRvIGJlIHJlc29sdmVkIHRoZSAgQm9zdG9uYmFzZWQgYXNzZXQgbWFuYWdlciBzYWlkIGl0IGhhcyB0YWtlbiBzdGVwcyB0byBwcm90ZWN0IGludmVzdG9ycyBXZSBleHBlY3QgQ29uZ3Jlc3Mgd2lsbCB0YWtlIHRoZSBzdGVwcyBuZWNlc3NhcnkgdG8gYXZvaWQgZGVmYXVsdCAgYnV0IGluIG91ciBwb3NpdGlvbiBhcyBtb25leSBtYXJrZXQgbWFuYWdlcnMgd2UgaGF2ZSB0byB0YWtlICBwcmVjYXV0aW9uYXJ5IG1lYXN1cmVzIFByaW9yIHNhaWQgRmlkZWxpdHkgd2hpY2ggbWFuYWdlcyA0MzAgYmlsbGlvbiBpbiBtb25leSBtYXJrZXQgbXV0dWFsIGZ1bmRzICBoYXMgdGFrZW4gc2ltaWxhciBhY3Rpb25zIGluIHRoZSBwYXN0IFRoZSBtb3N0IHJlY2VudCBpbnN0YW5jZSB3YXMgaW4gIHRoZSBzdW1tZXIgb2YgMjAxMSB3aGVuIHRoZSBVUyBnb3Zlcm5tZW50IGNhbWUgY2xvc2UgdG8gYSBkZWZhdWx0IGFuZCAgU3RhbmRhcmQgIFBvb3JzIGRvd25ncmFkZWQgdGhlIG5hdGlvbnMgY3JlZGl0IHJhdGluZyBQcmlvciAgc2FpZCBQcmlvciBzYWlkIHRoYXQgRmlkZWxpdHkgbm8gbG9uZ2VyIGhvbGRzIGFueSBVUyBkZWJ0IHRoYXQgY29tZXMgZHVlICBpbiBsYXRlIE9jdG9iZXIgb3IgZWFybHkgTm92ZW1iZXIgdGhlIHdpbmRvdyBjb25zaWRlcmVkIGJ5IG1hbnkgIGludmVzdG9ycyB0byBiZSB0aGUgbW9zdCBleHBvc2VkIGlmIHRoZSBnb3Zlcm5tZW50IHJ1bnMgb3V0IG9mIG1vbmV5IHRvICBwYXkgaXRzIGRlYnRzIE1vbmV5IG1hcmtldCBmdW5kcyBhcmUgYSBzaWduaWZpY2FudCBwYXJ0IG9mIHRoZSBVUyBmaW5hbmNpYWwgIHN5c3RlbSBJbmRpdmlkdWFscyBhbmQgaW5zdGl0dXRpb25hbCBpbnZlc3RvcnMgaGF2ZSByb3VnaGx5IDI2ODUgIHRyaWxsaW9uIGludmVzdGVkIGluIHRoZSBmdW5kcyBhY2NvcmRpbmcgdG8gZGF0YSBmcm9tIHRoZSBJbnZlc3RtZW50ICBDb21wYW55IEluc3RpdHV0ZSBNb25leSBtYXJrZXQgZnVuZHMgYXJlIHR5cGljYWxseSB1bHRyYXNhZmUgcGxhY2VzIHRvIHBhcmsgbW9uZXkgIFRoZXkgaW52ZXN0IHByaW1hcmlseSBpbiBzaG9ydHRlcm0gZGVidCB0aGF0IGNhbiBiZSBlYXNpbHkgYm91Z2h0IGFuZCAgc29sZCBzdWNoIGFzIFVTIFRyZWFzdXJ5cyBvciBjb21tZXJjaWFsIHBhcGVyIGRlYnQgaXNzdWVkIGJ5IGxhcmdlICBjb21wYW5pZXMgdG8gZnVuZCB0aGVpciBkYXl0b2RheSBleHBlbnNlcyBJbiBhIG1vbmV5IG1hcmtldCBmdW5kICBpbnZlc3RvcnMgZXhwZWN0IHRvIGdldCBiYWNrIGV2ZXJ5IGRvbGxhciB0aGV5IGludmVzdCBUaGUgVVMgVHJlYXN1cnkgaGFzIHdhcm5lZCBpdCB3aWxsIHJ1biBvdXQgb2YgbW9uZXkgaWYgQ29uZ3Jlc3MgIGRvZXMgbm90IGFncmVlIHRvIHJhaXNlIGEgMTY3IHRyaWxsaW9uIGNhcCBvbiBib3Jyb3dpbmcgYnkgT2N0IDE3IGFuZCAgYWxsb3cgaXQgdG8gaXNzdWUgbW9yZSBkZWJ0IFRoZSB3b3JyeSBoYXMgb3RoZXIgcGFydHMgb2YgdGhlIG1hcmtldCBzaG93aW5nIHNpZ25zIG9mIHN0cmVzcyBMaWtlICBGaWRlbGl0eSBvdGhlciBpbnZlc3RvcnMgaGF2ZSB0cmllZCB0byBsaW1pdCB0aGVpciBleHBvc3VyZSB0byBVUyAgZ292ZXJubWVudCBkZWJ0IHRoYXQgY29tZXMgZHVlIHRoaXMgbW9udGggd2l0aCB0aGUgaGVhdmllc3Qgc2VsbGluZyAgb2NjdXJyaW5nIGluIG9uZW1vbnRoIFRyZWFzdXJ5IGJpbGxzIFRoZSB5aWVsZCBvbiB0aGUgb25lbW9udGggVGJpbGwgIGp1bXBlZCB0byAwMjcgcGVyY2VudCBXZWRuZXNkYXkgaXRzIGhpZ2hlc3QgbGV2ZWwgc2luY2UgdGhlIDIwMDggIGZpbmFuY2lhbCBjcmlzaXMgVGhlIHlpZWxkIHdhcyBuZWFybHkgemVybyBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSAgbW9udGggTW9uZXkgbWFya2V0IG11dHVhbCBmdW5kIG1hbmFnZXJzIGRvbnQgd2FudCB0byBiZSBjYXVnaHQgaG9sZGluZyAgVVMgZ292ZXJubWVudCBkZWJ0IHRoYXQgY29tZXMgZHVlIGFyb3VuZCB0aGUgdGltZSB0aGUgZ292ZXJubWVudCBoaXRzICB0aGUgZGVidCBjZWlsaW5nIFRoZXkgZmVhciB0aGF0IHRoZSBnb3Zlcm5tZW50IG1heSBub3QgYmUgYWJsZSB0byBwYXkgIGJhY2sgYm9uZCBob2xkZXJzIHNhaWQgR2FicmllbCBNYW5uIGF0IHRoZSBSb3lhbCBCYW5rIG9mIFNjb3RsYW5kICBHcm91cCBJbnZlc3RvcnMgYXJlIGJ1eWluZyBwcm90ZWN0aW9uIE1hbm4gc2FpZCByZWZlcnJpbmcgdG8gZ3Jvd2luZyAgZGVtYW5kIGZvciBpbnN1cmFuY2UgYWdhaW5zdCB0aGUgVVMgZGVmYXVsdGluZyBvbiBpdHMgZGVidCBfXyBhICBzZWN1cml0eSBrbm93biBvbiBXYWxsIFN0cmVldCBhcyBhIGNyZWRpdCBkZWZhdWx0IHN3YXAgT3Zlcm5pZ2h0IGludGVyZXN0IHJhdGVzIGluIHRoZSByZXBvIG1hcmtldCB1c2VkIGJ5IGJhbmtzIHRvIGZ1bmQgIGRheXRvZGF5IGxlbmRpbmcgc2hvdCB1cCB0byAwMTIgcGVyY2VudCBXZWRuZXNkYXkgZnJvbSAwMDQgcGVyY2VudCAgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgbW9udGggVGhlIGluY3JlYXNlIGlzIHBhcnRseSBiZWNhdXNlIHNvbWUgYmFua3MgaGF2ZSBzdG9wcGVkIGFjY2VwdGluZyBzb21lICBVUyBUcmVhc3VyeXMgYXMgY29sbGF0ZXJhbCBvciBhcmUgcmVxdWlyaW5nIG1vcmUgY29sbGF0ZXJhbCB0byAgYm9ycm93IE5vdCBhbGwgaW52ZXN0b3JzIGFyZSB3b3JyaWVkIHRob3VnaCBXZXJlIGRvaW5nIGp1c3QgdGhlIG9wcG9zaXRlICBwcm9iYWJseSBidXlpbmcgd2hhdCBGaWRlbGl0eSBpcyAgc2VsbGluZyBCaWxsIEdyb3NzIGNvZm91bmRlciBvZiBQSU1DTyB0aGUgd29ybGRzIGxhcmdlc3QgYm9uZCBmdW5kICBtYW5hZ2VyIHNhaWQgV2VkbmVzZGF5IGluIGFuIGludGVydmlldyB3aXRoIENOQkMgR3Jvc3Mgc2FpZCB0aGUgb2RkcyBhcmUgYSBtaWxsaW9uIHRvIG9uZSB0aGF0IHRoZSBVUyB3aWxsIG5vdCBkZWZhdWx0IG9uIGl0cyBkZWJ0dAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAb2FydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2UsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEwLTA2LTEwVDAwOjAwOjAwWiBUTyAyMDEzLTA3LTMwVDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDczNzg=</field><field name="title" class="java.lang.String">rO0ABXQAPEVDQuKAmXMgTm95ZXIgU2F5cyBHcmVlayBSZXN0cnVjdHVyaW5nIFdvdWxkIEJlIOKAmEhvcnJvcuKAmQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATAgX7CAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGYwYjlhMzlmOThhN2RjNDI=</field><field name="symbol" class="java.lang.String">rO0ABXQABUhMVE9Z</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATAlhgyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEASuFHrhR64</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEASzMzMzMzN</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAShR64UeuF</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEASwo9cKPXD</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAScKPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAGshA==</field><field name="id" class="java.lang.String">rO0ABXQAEDFmZmIwZDZmYzViMDA1MWM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGEKAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDcyMzE=</field><field name="title" class="java.lang.String">rO0ABXQANU5vbXVyYTogSmFwYW4ncyBDZW50cmFsIEJhbmsgSGVscHMgVVMgRmVkLCBIb21lYnV5ZXJz</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4G6gSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDA0N2Q2ZjYyNjMyMTFkYzg=</field><field name="symbol" class="java.lang.String">rO0ABXQABkZOTS5CRQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4MEGCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/hR64UeuFI</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/hmZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/hR64UeuFI</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/hmZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/hmZmZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAA2sA==</field><field name="id" class="java.lang.String">rO0ABXQAEDk4ZGY3MzNkYTZkNGM5YzE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mIUGAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDcxNjE=</field><field name="title" class="java.lang.String">rO0ABXQAN0phcGFuJ3MgU2hvY2sgVGhlcmFweSBSaXNrcyBEaXN0dXJiaW5nIEVtZXJnaW5nIE1hcmtldHM=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4q9oiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGUxZWQ1YzI3ZTM5YjExNWQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lQQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4wHOSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7HCj1wo9c</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7HCj1wo9c</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7HCj1wo9c</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7HCj1wo9c</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4LhR64Ueu</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGJkNTRhZjE5ZTVhMWRmMmM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHUiAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExNzgx</field><field name="title" class="java.lang.String">rO0ABXQAL0NoaW5hIENyZWRpdCBTcXVlZXplIFByb21wdHMgU3VpY2lkZXMsIFZpb2xlbmNl</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATN8nKMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGJhYzM0NzI1NmU0ZDE0ZTM=</field><field name="symbol" class="java.lang.String">rO0ABXQABExPQU4=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATOBwv8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/yj1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/yj1wo9cKP</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/wAAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/wKPXCj1wp</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/tcKPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAH0A==</field><field name="id" class="java.lang.String">rO0ABXQAEDhlMzNhZjQ5YjBjMTQ4OTc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mF7zAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExNDg2</field><field name="title" class="java.lang.String">rO0ABXQAMFNtYWxsLUNvbXBhbnkgU3RvY2tzIEFyZSBXYWxsIFN0cmVldCBCcmlnaHQgU3BvdA==</field><field name="content" class="java.lang.String">rO0ABXQVS1NtYWxsLWNvbXBhbnkgc3RvY2tzIHdlcmUgYSBicmlnaHQgc3BvdCBpbiBhIHN1YmR1ZWQgc3RhcnQgdG8gdGhlIHdlZWsgZm9yIFdhbGwgU3RyZWV0LiBUaGUgUnVzc2VsbCAyMDAwLCBhbiBpbmRleCBvZiBzbWFsbC1jb21wYW55IHN0b2NrcywgY2xpbWJlZCBhYm92ZSAxLDAwMCBwb2ludHMgZm9yIHRoZSBmaXJzdCB0aW1lIGFuZCBlbmRlZCBoaWdoZXIgTW9uZGF5LCBldmVuIGFzIHRoZSBEb3cgSm9uZXMgaW5kdXN0cmlhbCBhdmVyYWdlLCB0aGUgU3RhbmRhcmQgJiBQb29yJ3MgNTAwIGluZGV4IGFuZCB0aGUgTmFzZGFxIGNvbXBvc2l0ZSBpbmRleCBhbGwgZWRnZWQgbG93ZXIuIFRoZSBnYWlucyBmb3IgdGhlIHNtYWxsZXIgY29tcGFuaWVzIGFyZSBlbmNvdXJhZ2luZyBmb3IgdGhlIGJyb2FkZXIgc3RvY2sgbWFya2V0IGJlY2F1c2UgdGhleSBzaG93IHRoYXQgaW52ZXN0b3JzIGFyZSBiZWNvbWluZyBtb3JlIGNvbWZvcnRhYmxlIGFib3V0IHRoZSBlY29ub215IGFuZCBpbnZlc3RpbmcgaW4gcmlza2llciBhc3NldHMsIHNhaWQgUm9iIEx1dHRzLCBDaGllZiBJbnZlc3RtZW50IE9mZmljZXIgYXQgQ2Fib3QgTW9uZXkgTWFuYWdlbWVudC4gU21hbGwtY29tcGFueSBzdG9ja3MgYXJlIGNvbnNpZGVyZWQgcmlza2llciB0aGFuIHRoZSBzdG9ja3Mgb2Ygd2VsbC1lc3RhYmxpc2hlZCwgbGFyZ2UgY29tcGFuaWVzIGxpa2UgSUJNIG9yIENvY2EtQ29sYS4gVGhhdCdzIGJlY2F1c2Ugc21hbGwgY29tcGFuaWVzIGFyZSBvZnRlbiByZWxhdGl2ZWx5IHlvdW5nIGFuZCB0ZW5kIHRvIGhhdmUgbGVzcyBkaXZlcnNpZmllZCBidXNpbmVzc2VzIHRoYW4gbGFyZ2VyIG9uZXMsIG1ha2luZyB0aGVtIG1vcmUgc3VzY2VwdGlibGUgdG8gc3dpbmdzIGluIGRlbWFuZCBmcm9tIHRoZWlyIGN1c3RvbWVycy4gVGhlcmUgYXJlIGFsc28gZmV3ZXIgYnV5ZXJzIGFuZCBzZWxsZXJzIGZvciB0aGVtLCB3aGljaCBjYW4gbWFrZSB0aGUgc3RvY2tzIGhhcmRlciB0byBvZmYtbG9hZCBpZiBwcmljZXMgc3RhcnQgdG8gZmFsbC4gIkhhdmluZyBzbWFsbGVyIHN0b2NrcyBoaXQgbmV3IGhpZ2hzIG1lYW5zIHRoYXQgdGhlIHJhbGx5IGlzIGJyb2FkLCIgTHV0dHMgc2FpZC4gIkl0IGdpdmVzIHVzIGEgbGl0dGxlIG1vcmUgY29uZmlkZW5jZSB0aGF0IGl0J3MgYSBnb29kLCBzdXN0YWluYWJsZSByYWxseSB0aGF0IGNhbiBob2xkIHRvZ2V0aGVyIGZvciBhIHdoaWxlLiIgVGhlIGJldHRlci1rbm93biBtYXJrZXQgYmFyb21ldGVycywgdGhlIERvdyBhbmQgdGhlIFMmUCA1MDAgaW5kZXhlcywgZmx1Y3R1YXRlZCBiZXR3ZWVuIHNtYWxsIGdhaW5zIGFuZCBsb3NzZXMgZm9yIG1vc3Qgb2YgTW9uZGF5LiBUaGV5IGVuZGVkIHNsaWdodGx5IGJlbG93IHRoZSByZWNvcmQgbGV2ZWxzIHRoZXkgcmVhY2hlZCBGcmlkYXkuIFRoZSBSdXNzZWxsIDIwMDAgcm9zZSAxLjcwIHBvaW50cywgb3IgMC4yIHBlcmNlbnQsIGhpZ2hlciBhdCA5OTcuOTguIFRoZSBpbmRleCBjbGltYmVkIGFzIGhpZ2ggYXMgMTAwMS41MCBhdCBtaWRkYXkuIFRoZSBpbmRleCBjdXJyZW50bHkgY29uc2lzdHMgb2YgMiwwMDggb2YgdGhlIHNtYWxsZXN0IHN0b2NrcyBvZiB0aGUgVS5TLiBlcXVpdHkgbWFya2V0IGFuZCB0aGUgYXZlcmFnZSBjb21wYW55IGhhdmluZyBhIHN0b2NrIG1hcmtldCB2YWx1ZSBvZiBhYm91dCAkMS41IGJpbGxpb24uIFN1bnBvd2VyIENvcnAuLCBhIG1hbnVmYWN0dXJlciBvZiBzb2xhciBwYW5lbHMsIGhhcyBsZWQgZ2FpbnMgZm9yIHRoZSBpbmRleCB0aGlzIHllYXIsIGNsaW1iaW5nICQxNy4wOCwgb3IgMzA0IHBlcmNlbnQsIHRvICQyMi43MC4gS2VyeXggQmlvcGhhcm1hY2V1dGljYWxzIGlzIHRoZSBzZWNvbmQtYmlnZ2VzdCBjbGltYmVyIGluIHRoZSBpbmRleCwgcmlzaW5nICQ1LjMyLCBvciAyMDMgcGVyY2VudCwgJDcuOTQuIFRoZSBEb3cgY2xvc2VkIGRvd24gMTkuMTIgcG9pbnRzLCBvciAwLjEgcGVyY2VudCwgYXQgMTUsMzM1LjI4LCBwYXJpbmcgaXRzIGdhaW4gZm9yIHRoZSB5ZWFyIHRvIDE3IHBlcmNlbnQuIFRoZSBTJlAgNTAwIGluZGV4IGZlbGwgMS4xOCBwb2ludHMsIG9yIDAuMSBwZXJjZW50LCB0byAxLDY2Ni4yOS4gSXRzIGFkdmFuY2UgZm9yIHRoZSB5ZWFyIG5vdyBzdGFuZHMgYXQgMTYuOCBwZXJjZW50LiBJbnZlc3RvcnMgYXJlIGZvY3VzaW5nIG9uIHRoZSBGZWRlcmFsIFJlc2VydmUgdGhpcyB3ZWVrIGFuZCBsb29raW5nIGZvciBjbHVlcyBhYm91dCB3aGF0IGl0IHBsYW5zIHRvIGRvIG5leHQgd2l0aCBpdHMgZWNvbm9taWMgc3RpbXVsdXMgcHJvZ3JhbS4gT24gV2VkbmVzZGF5IEZlZCBDaGFpcm1hbiBCZW4gQmVybmFua2Ugd2lsbCBhcHBlYXIgYmVmb3JlIENvbmdyZXNzIGFuZCB0aGUgY2VudHJhbCBiYW5rIHdpbGwgcmVsZWFzZSBtaW51dGVzIG9mIGl0cyBtb3N0IHJlY2VudCBwb2xpY3kgbWVldGluZy4gVGhlIEZlZCBpcyBidXlpbmcgJDg1IGJpbGxpb24gb2YgYm9uZHMgZXZlcnkgbW9udGggdG8ga2VlcCBsb25nLXRlcm0gaW50ZXJlc3QgcmF0ZXMgbG93LiBUaGF0IGhhcyBlbmNvdXJhZ2VkIGludmVzdG9ycyB0byBwdXQgbW9uZXkgaW50byBzdG9ja3MgaW5zdGVhZCBvZiBib25kcy4gVGhlIHlpZWxkIG9uIHRoZSAxMC15ZWFyIFRyZWFzdXJ5IG5vdGUgaGFzIGJlZW4gYmVsb3cgMiBwZXJjZW50IGFsbW9zdCBjb250aW51YWxseSBzaW5jZSBBcHJpbCAxMi4gVGhhdCdzIGxlc3MgdGhhbiBtYW55IGxhcmdlIGNvbXBhbmllcyBwYXkgaW4gZGl2aWRlbmRzLiBQb2xpY3kgbWFrZXJzIGFyZSB1bmxpa2VseSB0byBjdXQgYmFjayBvbiBzdGltdWx1cyBqdXN0IHlldCBzaW5jZSBVLlMuIGVjb25vbWljIGdyb3d0aCBpcyBsaWtlbHkgdG8gc2xvdyBpbiB0aGUgc2Vjb25kIHF1YXJ0ZXIsIHNhaWQgU2NvdHQgV3JlbiwgYSBzZW5pb3IgZXF1aXR5IHN0cmF0ZWdpc3QgYXQgV2VsbHMgRmFyZ28gQWR2aXNvcnMuIEFzIGEgY29uc2VxdWVuY2UsIFdyZW4gc2FpZCwgc3RvY2tzIGFyZSBsaWtlbHkgdG8gY29udGludWUgdG8gcmlzZS4gIkF0IHNvbWUgcG9pbnQsIHdlIHdpbGwgc2VlIHNvbWUgc29ydCBvZiBhIHB1bGxiYWNrLCBidXQgaXQgZG9lc24ndCBzZWVtIGxpa2UgaXQncyBnb2luZyB0byBiZSByaWdodCBub3csIiBzYWlkIFdyZW4uICJJbiB0aGUgbmVhciB0ZXJtIHdlJ3JlIHByb2JhYmx5IGdvaW5nIHRvIHRyYWRlIGEgbGl0dGxlIGJpdCBoaWdoZXIuIiBUaGUgc3RvY2sgbWFya2V0IHJhbGx5IGlzIGFsc28gaXMgYmVpbmcgdW5kZXJwaW5uZWQgYnkgaW52ZXN0b3JzIG1vdmluZyBiYWNrIGludG8gc3RvY2tzLCByZXZlcnNpbmcgeWVhcnMgb2Ygb3V0Zmxvd3Mgb2YgZnVuZHMgZnJvbSBlcXVpdHkgbWFya2V0cywgc2FpZCBKZXJyeSBCcmFha21hbiwgY2hpZWYgaW52ZXN0bWVudCBvZmZpY2VyIGF0IEZpcnN0IEFtZXJpY2FuIFRydXN0LiBJbnZlc3RvcnMgaGF2ZSBpbnZlc3RlZCBhYm91dCBuZXQgJDE3IGJpbGxpb24gaW50byBkb21lc3RpYyBzdG9jayBtdXR1YWwgZnVuZHMgc2luY2UgdGhlIHN0YXJ0IG9mIHRoZSB5ZWFyLCBhY2NvcmRpbmcgdG8gZGF0YSBmcm9tIHRoZSBJbnZlc3RtZW50IENvbXBhbnkgSW5zdGl0dXRlLiBJbnZlc3RvcnMgaGF2ZSBwdWxsZWQgbW9uZXkgb3V0IG9mIG11dHVhbCBmdW5kcyBldmVyeSB5ZWFyIHNpbmNlIHRoZSBiZWdpbm5pbmcgb2YgdGhlIGZpbmFuY2lhbCBjcmlzaXMgaW4gMjAwNy4gIlRoaXMgbWFya2V0IHJhbGx5IHN0aWxsIGhhcyBsZWdzLCBwYXJ0bHkgYmVjYXVzZSB3ZSd2ZSBzZWVuIGh1Z2UgcmV0YWlsIGluZmxvd3MgYmFjayBpbnRvIGVxdWl0aWVzLCIgQnJhYWttYW4gc2FpZC4gIkl0J3MgaGFyZCB0byBiZWF0IHRoZSBtb25leSBmbG93LiIgSW4gY29tbW9kaXRpZXMgdHJhZGluZywgdGhlIHByaWNlIG9mIGNydWRlIG9pbCByb3NlIDY5IGNlbnRzLCBvciAwLjcgcGVyY2VudCwgdG8gJDk2LjcxIGEgYmFycmVsLiBUaGUgcHJpY2Ugb2YgZ29sZCByb3NlIGZvciB0aGUgZmlyc3QgZGF5IGluIGVpZ2h0IGFzIHRoZSBkb2xsYXIgZmVsbC4gVGhlIHByZWNpb3VzIG1ldGFsIGNsaW1iZWQgJDE5LjQwLCBvciAxLjQgcGVyY2VudCwgdG8gJDEsMzg0LiBHb2xkIGhhcyBzbHVtcGVkIHRoaXMgbW9udGggYXMgaXRzIGF0dHJhY3Rpb24gYXMgYW4gYWx0ZXJuYXRpdmUgaW52ZXN0bWVudCBmYWRlcyBhcyB0aGUgZG9sbGFyIGFwcHJlY2lhdGVzLiBUaGUgVS5TLiBjdXJyZW5jeSBpcyBzdHJlbmd0aGVuaW5nIGJlY2F1c2UgaW52ZXN0b3JzIGJlbGlldmUgdGhlIFUuUy4gZWNvbm9teSBpcyBpbiBiZXR0ZXIgc2hhcGUgdGhhbiB0aGUgSmFwYW5lc2Ugb3IgRXVyb3BlYW4gZWNvbm9taWVzLiBUaGUgZG9sbGFyJ3MgcmFsbHkgcGF1c2VkIG9uIE1vbmRheSwgdGhvdWdoLCBhbmQgdGhlIFUuUy4gY3VycmVuY3kgZmVsbCBhZ2FpbnN0IHRoZSBldXJvIGFuZCB0aGUgeWVuLiBUaGUgZG9sbGFyIGluZGV4IGFsc28gZHJvcHBlZCwgYWZ0ZXIgY2xpbWJpbmcgdG8gaXRzIGhpZ2hlc3QgbGV2ZWwgaW4gY2xvc2UgdG8gdGhyZWUgeWVhcnMgRnJpZGF5LiBJbiBVLlMuIGdvdmVybm1lbnQgYm9uZCB0cmFkaW5nLCB0aGUgeWllbGQgb24gdGhlIDEwLXllYXIgVHJlYXN1cnkgbm90ZSByb3NlIHRvIDEuOTcgcGVyY2VudCBmcm9tIDEuOTMgcGVyY2VudC4gVGhlIE5hc2RhcSBjb21wb3NpdGUgaW5kZXggZmVsbCAyLjUzIHBvaW50cywgb3IgMC4xIHBlcmNlbnQsIHRvIDMsNDk2LjQzIHBvaW50cy4gQW1vbmcgc3RvY2tzIGluIGZvY3VzIG9uIE1vbmRheTog4oCUIEFjdGF2aXMgcm9zZSAkMS42NSwgb3IgMS4zIHBlcmNlbnQsIHRvICQxMjcuMTUgYWZ0ZXIgdGhlIHBoYXJtYWNldXRpY2FsIGNvbXBhbnkgc2FpZCBpdCdzIGJ1eWluZyBXYXJuZXIgQ2hpbGNvdHQuIFRoZSBhbGwtc3RvY2sgZGVhbCwgdmFsdWVkIGF0ICQ4LjUgYmlsbGlvbiwgd291bGQgY3JlYXRlIHRoZSB0aGlyZC1iaWdnZXN0IHNwZWNpYWx0eSBwaGFybWFjZXV0aWNhbCBjb21wYW55IGluIHRoZSBVLlMuIOKAlCBDaGVzYXBlYWtlIEVuZXJneSByb3NlIDUzIGNlbnRzLCBvciAyLjYgcGVyY2VudCwgdG8gJDIwLjgwIGFmdGVyIHRoZSBuYXR1cmFsIGdhcyBwcm9kdWNlciBuYW1lZCBBbmFkYXJrbyBQZXRyb2xldW0gZXhlY3V0aXZlIFJvYmVydCBEb3VnbGFzIExhd2xlciBhcyBpdHMgbmV3IENFTy4gSGUgdGFrZXMgb3ZlciBhcyBDaGVzYXBlYWtlIGNvbnRpbnVlcyBzZWxsaW5nIGFzc2V0cyB0byBwYXJlIGRvd24gYW4gZW5vcm1vdXMgZGVidCBidXJkZW4uIOKAlFdlYnNlbnNlLCBhbiBpbnRlcm5ldCBzZWN1cml0eSBmaXJtLCBzdXJnZWQgJDUuNTMsIG9yIDI5IHBlcmNlbnQsIHRvICQyNC43NiBhZnRlciB0aGUgY29tcGFueSBhZ3JlZWQgdG8gYmUgdGFrZW4gcHJpdmF0ZSBmb3IgJDkwNiBtaWxsaW9uIGJ5IHByaXZhdGUgZXF1aXR5IGZpcm0gVmlzdGEgRXF1aXR5IFBhcnRuZXJzLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT7ATvSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDIxMDljNGE3N2I1ZjZhYWM=</field><field name="symbol" class="java.lang.String">rO0ABXQABEtFUlg=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT7FdVCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAf9cKPXCj2</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAgZmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAfeuFHrhR7</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAgGZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAgGZmZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAABU95A==</field><field name="id" class="java.lang.String">rO0ABXQAEGNkYjU3OTY4ZjA0ODNkMmU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEaVAAAA==</field></document></documents><date>2015-05-07T12:22:49-0500</date></cacheEntry>
<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0DqlFeHBlY3RhdGlvbnMgZm9yIGZ1dHVyZSBwcmljZSBzd2luZ3MgaGF2ZSBqdW1wZWQgaW4gdGhlIHBhc3QgbW9udGggd2l0aCB0aGUgQ2hpY2FnbyBCb2FyZCBPcHRpb25zIEV4Y2hhbmdlIFZvbGF0aWxpdHkgSW5kZXggcmlzaW5nIDExIHBlcmNlbnQgc2luY2UgQXVnIDIyIHRvIDEyNzMgQXQgdGhlIHNhbWUgdGltZSB0aGUgbWFya2V0IGhhcyBiZWVuIHNvIGNhbG0gbGF0ZWx5IHRoYXQgYSBnYXVnZSBvZiBoaXN0b3JpY2FsIHZvbGF0aWxpdHkgaXMgYXQgNTkgbmVhciBhIHRocmVleWVhciBsb3cgVGhlIHJhdGlvIGJldHdlZW4gdGhlIHR3byBtZWFzdXJlcyByZWFjaGVkIGEgMTltb250aCBoaWdoIHRoaXMgd2VlayBhY2NvcmRpbmcgdG8gZGF0YSBjb21waWxlZCBieSBCbG9vbWJlcmcgRWNvbm9taWMgc3RpbXVsdXMgZnJvbSB0aGUgY2VudHJhbCBiYW5rIGlzIHNldCB0byBlbmQgbmV4dCBtb250aCBsZWF2aW5nIGludmVzdG9ycyB3b25kZXJpbmcgaG93IGxvbmcgaW50ZXJlc3QgcmF0ZXMgd2lsbCBzdGF5IG5lYXIgemVybyBhcyBkYXRhIGZyb20gbWFudWZhY3R1cmluZyB0byBjb25zdW1lciBjb25maWRlbmNlIHNob3cgc2lnbnMgb2YgZXhwYW5zaW9uIFRoZSBGZWRlcmFsIE9wZW4gTWFya2V0IENvbW1pdHRlZSB3aWxsIHJlbGVhc2UgYSBwb2xpY3kgc3RhdGVtZW50IGF0IDIgcG0gaW4gV2FzaGluZ3RvbiBXZWRuZXNkYXkgYWxvbmcgd2l0aCB1cGRhdGVkIHF1YXJ0ZXJseSBwcm9qZWN0aW9ucyBmb3IgZ3Jvd3RoIGluZmxhdGlvbiB1bmVtcGxveW1lbnQgYW5kIHRoZSBmdXR1cmUgcGF0aCBvZiBpbnRlcmVzdCByYXRlcyBGZWQgQ2hhaXIgSmFuZXQgWWVsbGVuIGlzIGR1ZSB0byBzcGVhayBpbiBhIHByZXNzIGNvbmZlcmVuY2UgYWZ0ZXJ3YXJkIFRoZSBtYXJrZXQgaXMgaXRjaHkgYW5kIGFueGlvdXMgYWJvdXQgd2hhdCB0aGUgRmVkIHdpbGwgc2F5IERhbiBEZW1pbmcgYSBtYW5hZ2luZyBkaXJlY3RvciBhdCBDaGljYWdvYmFzZWQgRXF1aXR5IEFybW9yIEludmVzdG1lbnRzIHNhaWQgVHJhZGVycyBhbmQgbWFya2V0IHBhcnRpY2lwYW50cyBhcmUgYW50aWNpcGF0aW5nIHNvbWUgbW92ZW1lbnQgaGVyZSBUaGUgdGltZXMgdGhlIEZlZCBoYXMgdHJpZWQgdG8gcmVpbiBpbiBsaXF1aWRpdHkgcHJvdmlzaW9ucyBhbmQgdGFrZW4gdGhlIElWIG91dCBvZiB0aGUgcGF0aWVudCBpdCBoYXNudCBnb25lIHRvbyB3ZWxsIFBvbGljeSBDaGFuZ2UgRmVkIHBvbGljeSBpcyBtb3JlIGxpa2VseSB0byBjaGFuZ2UgYXQgdGhpcyBtZWV0aW5nIHRoYW4gcGFzdCBvbmVzIGVjb25vbWlzdHMgYXQgSmVmZmVyaWVzIEdyb3VwIExMQyBhbmQgTm9tdXJhIEhvbGRpbmdzIEluYyB3cm90ZSBpbiByZWNlbnQgcmVwb3J0cyBPZmZpY2lhbHMgd2lsbCBwcm9iYWJseSByZW1vdmUgdGhlIGNvbnNpZGVyYWJsZSB0aW1lIGxhbmd1YWdlIHRvIG1ha2UgZ3VpZGFuY2UgbW9yZSBkYXRhIGRlcGVuZGVudCBhY2NvcmRpbmcgdG8gYSByZXBvcnQgZnJvbSBKZWZmZXJpZXMgdGhpcyB3ZWVrIE5vbXVyYSBzYWlkIGluIGEgbm90ZSBsYXN0IG1vbnRoIHRoYXQgdGhlIEZPTUMgd2lsbCBwcm9iYWJseSBtYWtlIHN1YnN0YW50aWFsIGNoYW5nZXMgdG8gdGhlaXIgZm9yd2FyZCBndWlkYW5jZSBZaWVsZHMgb24gMTB5ZWFyIFRyZWFzdXJpZXMgaGF2ZSBjbGltYmVkIHRvIDI1OSBwZXJjZW50IG5lYXIgYSB0d29tb250aCBoaWdoIEZlZCBmdW5kIGZ1dHVyZXMgc2hvdyB0aGUgb2RkcyB0aGUgY2VudHJhbCBiYW5rIHdpbGwgaW5jcmVhc2UgaXRzIGJlbmNobWFyayByYXRlIGJ5IEp1bHkgMjAxNSBoYXZlIHJpc2VuIHRvIDU1IHBlcmNlbnQgZnJvbSA1MSBwZXJjZW50IGF0IHRoZSBlbmQgb2YgQXVndXN0IFBlb3BsZSBhcmUgc3RhcnRpbmcgdG8gdGhpbmsgdGhlIEZlZCBpcyBwb2lzZWQgdG8gc3RhcnQgcmFpc2luZyByYXRlcyBSb2JlcnQgUGF2bGlrIHdobyBoZWxwcyBvdmVyc2VlIDQ1IGJpbGxpb24gYXMgY2hpZWYgbWFya2V0IHN0cmF0ZWdpc3QgYXQgQmFueWFuIFBhcnRuZXJzIExMQyBpbiBOZXcgWW9yayBzYWlkIGJ5IHBob25lIFdlIG1pZ2h0IGJlIGluIGZvciBhIGxpdHRsZSBiaXQgb2Ygc2VsbGluZyBwcmVzc3VyZSBlc3BlY2lhbGx5IGlmIHRoZXkgcmVtb3ZlIHRoZSBsYW5ndWFnZSBhYm91dCBrZWVwaW5nIGludGVyZXN0IHJhdGVzIGxvdyBmb3IgYSBjb25zaWRlcmFibGUgcGVyaW9kIG9mIHRpbWUgVGhlIFZJWCBhIGdhdWdlIG9mIDMwZGF5IGltcGxpZWQgdm9sYXRpbGl0eSBkZXJpdmVkIGZyb20gb3B0aW9ucyBvbiB0aGUgU3RhbmRhcmQgIFBvb3JzIDUwMCBJbmRleCBkcm9wcGVkIDk4IHBlcmNlbnQgdG8gMTI3MyB5ZXN0ZXJkYXkgYXMgdGhlIGVxdWl0eSBnYXVnZSByYWxsaWVkIHRoZSBtb3N0IHNpbmNlIEF1ZyAxOCBXaGlsZSBpdCBoYXMgcmlzZW4gaW4gdGhlIHBhc3QgbW9udGggaXRzIHN0aWxsIHdpdGhpbiB0aHJlZSBwb2ludHMgZnJvbSBhIHJlY29yZCBsb3cgUmVsYXRpdmUgQ2FsbSBBIG1lYXN1cmUgb2YgdGhlIFNQIDUwMHMgYWN0dWFsIHN3aW5ncyBpbiB0aGUgcGFzdCAyMCBkYXlzIGhhcyBzdGF5ZWQgcmVsYXRpdmVseSBjYWxtIHJlYWNoaW5nIDUwNiBvbiBTZXB0IDUgdGhlIGxvd2VzdCBsZXZlbCBzaW5jZSAyMDEwIGRhdGEgY29tcGlsZWQgYnkgQmxvb21iZXJnIHNob3cgVGhlIFZJWCBjbG9zZWQgMjYgdGltZXMgYWJvdmUgdGhlIDIwZGF5IHJlYWxpemVkIHZvbGF0aWxpdHkgU2VwdCAxNSB0aGUgaGlnaGVzdCBzaW5jZSBKYW51YXJ5IDIwMTMgV2Vha25lc3MgaW4gdGhlIFVTIGxhYm9yIG1hcmtldCBhbmQgZGV0ZXJpb3JhdGluZyBjb25kaXRpb25zIGluIEV1cm9wZSBtYXkgcGVyc3VhZGUgRmVkIG9mZmljaWFscyB0byByZW1haW4gYWNjb21tb2RhdGl2ZSBhY2NvcmRpbmcgdG8gQWRhbSBQZXJsYWt5IGNoaWVmIHN0cmF0ZWdpc3QgYXQgTmV3IFlvcmtiYXNlZCBicm9rZXIgTmV3IEFsYmlvbiBQYXJ0bmVycyBMTEMgSGUgY2l0ZWQgdGhpcyBtb250aHMgam9icyByZXBvcnQgd2hpY2ggc2hvd2VkIHRoZSBzbWFsbGVzdCBVUyBlbXBsb3ltZW50IGdhaW4gc28gZmFyIHRoaXMgeWVhciBhbmQgZGVjbGluaW5nIHdvcmtmb3JjZSBwYXJ0aWNpcGF0aW9uIEkgd291bGQgYmUgc3VycHJpc2VkIHRvIHNlZSBhbnkgY2hhbmdlIGluIGxhbmd1YWdlIFBlcmxha3kgc2FpZCBUaGUgbGFzdCBmZXcgbWVldGluZ3MgaGF2ZSBiZWVuIG5vdGhpbmcgdG8gc2VlIGhlcmUgZXZlbnRzIFdoaWxlIHRoZSBTUCA1MDAgaXMgbGVzcyB0aGFuIDA1IHBlcmNlbnQgYXdheSBmcm9tIGEgcmVjb3JkIGhpZ2ggZ2FpbnMgaGF2ZSBzdGFsbGVkIGFyb3VuZCB0aGUgMjAwMCBtYXJrIFRoZSBVUyBlcXVpdHkgYmVuY2htYXJrIGlzIGFscmVhZHkgdXAgODIgcGVyY2VudCB0aGlzIHllYXIgVGhlIHR3byBtb3N0b3duZWQgVklYIGNvbnRyYWN0cyBhcmUgY2FsbHMgZXhwaXJpbmcgdG9tb3Jyb3cgd2l0aCBzdHJpa2UgcHJpY2VzIG9mIDE5IGFuZCAyMCBCbG9vbWJlcmcgZGF0YSBzaG93IFdldmUgc2VlbiB0aGUgbWFya2V0IGxvc2Ugc3RlYW0gSnVzdGluIEdvbGRlbiBhIE5ldyBZb3JrYmFzZWQgcGFydG5lciBhdCBMYWtlIEhpbGwgQ2FwaXRhbCBNYW5hZ2VtZW50IExMQyBzYWlkIGJ5IHBob25lIFNvbWUgaW52ZXN0b3JzIG1pZ2h0IGp1c3QgYmUgdXNpbmcgdGhpcyBhcyBhbiBvcHBvcnR1bml0eSB0byBoZWRnZSBhbmQgdGhhdCBtYXkgYmUgd2h5IHdlcmUgc2VlaW5nIHRoZSBWSVggd2FrZSB1cCBhIGxpdHRsZSBiaXR0AARyb3dzdXEAfgAKAAAAAXQAATV0AAVzdGFydHVxAH4ACgAAAAF0AAEwdAACZmx1cQB+AAoAAAABdABvYXJ0aWNsZUlkLHRpdGxlLGNvbnRlbnQsZGF0ZSxzdG9ja0hpc3RvcnlJZCxzeW1ib2wsaGlzdG9yeURhdGUsb3BlbixoaWdoLGxvdyxjbG9zZSxhZGpDbG9zZSx2b2x1bWUsaWQsX3ZlcnNpb25fdAACZnF1cQB+AAoAAAABdAA6aGlzdG9yeURhdGU6WzIwMTMtMTItMDNUMDA6MDA6MDBaIFRPIDIwMTQtMDctMTBUNTk6NTk6NTlaXXgAcA==</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDQyNjI=</field><field name="title" class="java.lang.String">rO0ABXQAMlMmUCA1MDAgT25lIERheSBBd2F5IGZyb20gTG9uZ2VzdCBSYWxseSBTaW5jZSAxOTk4</field><field name="content" class="java.lang.String">rO0ABXQYD1RoZSBTdGFuZGFyZCAmIFBvb3LigJlzIDUwMCBJbmRleCBpcyBvbmUgdHJhZGluZyBkYXkgYXdheSBmcm9tIGNvbXBsZXRpbmcgdGhlIGxvbmdlc3Qgc3RyZXRjaCBvZiBxdWFydGVybHkgZ2FpbnMgaW4gMTYgeWVhcnMsIGFzIGNlbnRyYWwgYmFuayBzdGltdWx1cyBhbmQgY29uZmlkZW5jZSBpbiBlY29ub21pYyBncm93dGggc2VudCBzdG9ja3MgdG8gYWxsLXRpbWUgaGlnaHMuIE5ldGZsaXggSW5jLiBhbmQgRmFjZWJvb2sgSW5jLiBhZHZhbmNlZCBtb3JlIHRoYW4gMTIgcGVyY2VudCBpbiB0aGUgcXVhcnRlciwgbGVhZGluZyBhIHJlYm91bmQgZnJvbSBhIHR3by1tb250aCBzZWxsb2ZmIGluIEludGVybmV0IGFuZCBzbWFsbC1jYXAgc3RvY2tzLiBBbGxlcmdhbiBJbmMuIGFuZCBXaWxsaWFtcyBDb3MuIGp1bXBlZCBhdCBsZWFzdCA0MCBwZXJjZW50IGR1cmluZyB0aGUgYnVzaWVzdCBwZXJpb2Qgb2YgdGFrZW92ZXJzIGluIHNldmVuIHllYXJzLiBTY2hsdW1iZXJnZXIgTHRkLiBhbmQgQ29ub2NvUGhpbGxpcHMgc3VyZ2VkIG1vcmUgdGhhbiAyMCBwZXJjZW50LCBkcml2aW5nIGVuZXJneSBjb21wYW5pZXMgdG8gdGhlIGJlc3QgZ2FpbiBhbW9uZyAxMCBTJlAgNTAwIGluZHVzdHJpZXMsIGFzIG9pbCBwcmljZXMgY2xpbWJlZCBhbWlkIHVucmVzdCBpbiBJcmFxIGFuZCBVa3JhaW5lLiBUaGUgUyZQIDUwMCBoYXMgY2xpbWJlZCA0LjcgcGVyY2VudCB0byAxLDk2MC45NiBmb3IgdGhlIHRocmVlIG1vbnRocywgcG9pc2VkIGZvciBhIHNpeHRoIHF1YXJ0ZXJseSBnYWluLCB0aGUgbG9uZ2VzdCBzdHJldGNoIHNpbmNlIDE5OTguIFRoZSBEb3cgSm9uZXMgSW5kdXN0cmlhbCBBdmVyYWdlIGFkZGVkIDM5NC4xOCBwb2ludHMsIG9yIDIuNCBwZXJjZW50LCB0byAxNiw4NTEuODQuIFRoZSBOYXNkYXEgQ29tcG9zaXRlIEluZGV4IGhhcyBqdW1wZWQgNC43IHBlcmNlbnQgYW5kIHRoZSBSdXNzZWxsIDIwMDAgSW5kZXggaXMgdXAgMS40IHBlcmNlbnQuIOKAnEl04oCZcyBhcyByZW1hcmthYmxlIGFzIGFueXRoaW5nIHRoYXQgdGhlIG1hcmtldOKAmXMgYmVlbiBnaXZlbiBwbGVudHkgb2Ygb3Bwb3J0dW5pdHkgdG8gc2VsbCBvZmYgYW5kIGl0IGhhc27igJl0LOKAncKgTWFyayBMdXNjaGluaSwgY2hpZWYgaW52ZXN0bWVudCBzdHJhdGVnaXN0IGF0IFBoaWxhZGVscGhpYS1iYXNlZCBKYW5uZXkgTW9udGdvbWVyeSBTY290dCBMTEMsIHdoaWNoIG92ZXJzZWVzICQ2NSBiaWxsaW9uIGluIGFzc2V0cywgc2FpZCBieSBwaG9uZS4g4oCcVGhlIGVxdWl0eSBtYXJrZXRzIGNvbnRpbnVlIHRvIG1vdmUgaGlnaGVyIGV2ZW4gdGhvdWdoIEkgdGhpbmsgd2hhdCB3ZeKAmXJlIHNlZWluZyBtb3JlIHJlY2VudGx5IGlzIGEgYml0IG9mIGEgc3RydWdnbGUgdG8gZ2V0IHRocm91Z2ggc29tZSBvZiB0aGUgZWNvbm9taWMgZGF0YS7igJ0gVGhlIFMmUCA1MDAgcm9zZSB0byBhbiBhbGwtdGltZSBoaWdoIG9mIDEsOTYyLjg3IG9uIEp1bmUgMjAgYXMgZGF0YSBmcm9tIGVtcGxveW1lbnQgdG8gaG91c2luZyBmdWVsZWQgY29uZmlkZW5jZSB0aGF0IHRoZSBVLlMuIGVjb25vbXkgaXMgcmVib3VuZGluZyBhZnRlciB0aGUgd29yc3QgY29udHJhY3Rpb24gaW4gZ3Jvc3MgZG9tZXN0aWMgcHJvZHVjdCBzaW5jZSAyMDA5LiBUaGUgaW5kZXggaGVsZCBhdCByZWNvcmQgbGV2ZWxzIGluIHRoZSBsYXRlc3Qgd2VlaywgZmFsbGluZyBvbmx5IDAuMSBwZXJjZW50IGZvciB0aGUgZml2ZSBkYXlzLCBpbiB0aGUgZmFjZSBvZiBjb25mbGljdHMgaW4gSXJhcSBhbmQgVWtyYWluZSwgd2Vha2VyLXRoYW4tIGFudGljaXBhdGVkIGVjb25vbWljIGRhdGEgYW5kIGNvbmNlcm4gb3ZlciByaXNpbmcgcmF0ZXMuICAgICAgICAgICAgICAgICAgICAgICAgICBFY29ub21pYyBHcm93dGggRmVkIENoYWlyIEphbmV0IFllbGxlbiBzYWlkIG9uIEp1bmUgMTggdGhhdCBhY2NvbW1vZGF0aXZlIG1vbmV0YXJ5IHBvbGljeSwgcmlzaW5nIHByb3BlcnR5IGFuZCBlcXVpdHkgcHJpY2VzIGFuZCB0aGUgaW1wcm92aW5nIGdsb2JhbCBlY29ub215IHNob3VsZCBsZWFkIHRvIGFib3ZlLXRyZW5kIGdyb3d0aC4gRmVkIEJhbmsgb2YgUGhpbGFkZWxwaGlhIFByZXNpZGVudCBDaGFybGVzIFBsb3NzZXIgc2FpZCBKdW5lIDI0IHRoYXQgaGXigJlzIOKAnGZhaXJseSBvcHRpbWlzdGlj4oCdIGVjb25vbWljIGdyb3d0aCB3aWxsIGV4Y2VlZCAyLjQgcGVyY2VudCBmb3IgdGhlIHJlbWFpbmRlciBvZiB0aGlzIHllYXIgYW5kIG5leHQgYW1pZCBzdGVhZHkgZ3Jvd3RoIGluIGpvYnMuIFUuUy4gc3RvY2tzIGpvaW5lZCBhbiBlcXVpdHkgcmFsbHkgd29ybGR3aWRlIGFzIHN0aW11bHVzIHNwYW5uZWQgZnJvbSBFdXJvcGUgdG8gSmFwYW4gYW5kIHRoZSBVLlMuIFRoZSBFdXJvcGVhbiBDZW50cmFsIEJhbmsgdW52ZWlsZWQgYW4gdW5wcmVjZWRlbnRlZCBwYWNrYWdlIG9mIHN0aW11bHVzIG1lYXN1cmVzIGRlc2lnbmVkIHRvIGJvb3N0IHRoZSBlY29ub215LiBJbiBKYXBhbiwgUHJpbWUgTWluaXN0ZXIgU2hpbnpvIEFiZSBzYWlkIGRlZmxhdGlvbiBoYXMgZW5kZWQgYW5kIHdpbGwgYmUgdGh3YXJ0ZWQgYnkgbmV3IGdvdmVybm1lbnQgcG9saWNpZXMgZGVzaWduZWQgdG8gZW5jb3VyYWdlIGJ1c2luZXNzIGV4cGFuc2lvbi4gICAgICAgICAgICAgICAgICAgICAgICAgICBHbG9iYWwgUmFsbHkgVGhlIE1TQ0kgQWxsLUNvdW50cnkgV29ybGQgSW5kZXggaGFzIGNsaW1iZWQgNC4xIHBlcmNlbnQgc2luY2UgTWFyY2gsIHJlYWNoaW5nIGEgcmVjb3JkIG9uIEp1bmUgMTkuIFRoZSBTdG94eCBFdXJvcGUgNjAwIEluZGV4IGhhcyByYWxsaWVkIDIuMyBwZXJjZW50IHdoaWxlIHRoZSBNU0NJIEFzaWEgUGFjaWZpYyBJbmRleCBpcyB1cCA1LjEgcGVyY2VudC4gVm9sYXRpbGl0eSBpcyBldmFwb3JhdGluZyBhbWlkIHN0b2NrIGdhaW5zLiBUaGUgUyZQIDUwMCBoYXMgZmFpbGVkIHRvIHBvc3QgYSBnYWluIG9yIGxvc3MgZXhjZWVkaW5nIDEgcGVyY2VudCBmb3IgNTAgc3RyYWlnaHQgZGF5cywgdGhlIGxvbmdlc3Qgc3RyZXRjaCBzaW5jZSAxOTk1LiBUaGUgVS5TLiBtYXJrZXQgaGFzIGdvbmUgbW9yZSB0aGFuIHR3byB5ZWFycyB3aXRob3V0IGEgMTAgcGVyY2VudCBkcm9wLiBUaGUgQ2hpY2FnbyBCb2FyZCBPcHRpb25zIEV4Y2hhbmdlIFZvbGF0aWxpdHkgSW5kZXgsIGEgZ2F1Z2Ugb2Ygb3B0aW9uIHByaWNlcyBmb3IgdGhlIFMmUCA1MDAsIHRvdWNoZWQgYSBzZXZlbi15ZWFyIGxvdyBpbiBKdW5lIGFuZCBpcyBkb3duIDE5IHBlcmNlbnQgZm9yIHRoZSBxdWFydGVyLiDigJxXZeKAmXZlIGdvbmUgYSBsb25nIHN0cmV0Y2ggd2l0aG91dCBhbnkgc2hvY2sgdG8gdGhlIG1hcmtldCzigJ0gR2lyaSBDaGVydWt1cmksIGhlYWQgdHJhZGVyIGFuZCBwb3J0Zm9saW8gbWFuYWdlciBhdCBPYWticm9vayBJbnZlc3RtZW50cyBMTEMgaW4gTGlzbGUsIElsbGlub2lzLCBzYWlkIGluIHBob25lIGludGVydmlldy4gVGhlIGZpcm0gb3ZlcnNlZXMgJDMuMiBiaWxsaW9uLiDigJxUaGUgRmVkIG1hbmFnZXMgdGhlIG1hcmtldCBwcmV0dHkgd2VsbC4gQWx0aG91Z2ggZmlyc3QtcXVhcnRlciBHRFAgd2FzIGRvd24sIHBlb3BsZSBhcmUgd3JpdGluZyBpdCBvZmYgdG8gd2VhdGhlciBhbmQgZXhwZWN0aW5nIGEgYmV0dGVyIGVjb25vbXkgZ29pbmcgZm9yd2FyZC4gSWYgdGhhdCBkb2VzbuKAmXQgaGFwcGVuLCB0aGF04oCZcyBkZWZpbml0ZWx5IGdvaW5nIHRvIGh1cnQgdGhlIG1hcmtldC7igJ0gICAgICAgICAgICAgICAgICAgICAgICAgIEludGVyZXN0IFJhdGVzIFRoZSBGZWRlcmFsIE9wZW4gTWFya2V0IENvbW1pdHRlZSBzYWlkIGl0IGV4cGVjdHMgYmVuY2htYXJrIGludGVyZXN0IHJhdGVzIHRvIHJlbWFpbiBuZWFyIHplcm8gZm9yIGEg4oCcY29uc2lkZXJhYmxlIHRpbWXigJ0gYWZ0ZXIgY29tcGxldGluZyBhIGJvbmQtcHVyY2hhc2UgcHJvZ3JhbSB0aGF04oCZcyBzZXQgdG8gZW5kIGxhdGUgdGhpcyB5ZWFyLiBQb2xpY3kgbWFrZXJzIGF0IHRoZSBjZW50cmFsIGJhbmsgYXJlIGRlYmF0aW5nIGhvdyBsb25nIHRvIGtlZXAgYm9ycm93aW5nIGNvc3RzIGxvdyB3aGlsZSB0aGUgbGFib3IgbWFya2V0IGltcHJvdmVzLiBFcXVpdGllcyBzbHVtcGVkIG9uIEp1bmUgMjYgYWZ0ZXIgRmVkIEJhbmsgb2YgU3QuIExvdWlzIFByZXNpZGVudCBKYW1lcyBCdWxsYXJkIHNhaWQgcmF0ZXMgY291bGQgcmlzZSBzdGFydGluZyBpbiB0aGUgZmlyc3QgcXVhcnRlciBvZiAyMDE1LCBzb29uZXIgdGhhbiBtb3N0IG9mIGhpcyBjb2xsZWFndWVzIHRoaW5rLiBUaHJlZSByb3VuZHMgb2YgbW9uZXRhcnkgc3RpbXVsdXMgZnJvbSB0aGUgRmVkIGFuZCBiZXR0ZXItIHRoYW4tZm9yZWNhc3QgY29ycG9yYXRlIGVhcm5pbmdzIGhhdmUgZHJpdmVuIHRoZSBTJlAgNTAwIHVwIDE5MCBwZXJjZW50IGZyb20gaXRzIE1hcmNoIDIwMDkgYm90dG9tLiBJbnZlc3RvcnMgd2lsbCBnZXQgYW5vdGhlciBjaGFuY2UgdG8gYXNzZXNzIGNvcnBvcmF0ZSBzdHJlbmd0aCB3aGVuIGNvbXBhbmllcyBzdGFydCByZWxlYXNpbmcgZmluYW5jaWFsIHJlc3VsdHMgaW4gSnVseS4gRWFybmluZ3MgZm9yIFMmUCA1MDAgY29tcGFuaWVzIHByb2JhYmx5IGdyZXcgNS4yIHBlcmNlbnQgZHVyaW5nIHRoZSBzZWNvbmQgcXVhcnRlciB3aGlsZSBzYWxlcyByb3NlIDMuMiBwZXJjZW50LCBhbmFseXN0IGVzdGltYXRlcyBjb21waWxlZCBieSBCbG9vbWJlcmcgc2hvdy4gICAgICAgICAgICAgICAgICAgICAgICAgIOKAmEJpZyBRdWVzdGlvbuKAmSDigJxDYW4gd2UgZ2V0IHJldmVudWUgZ3Jvd3RoIHRvIGZpbmFsbHkga2ljayBpbj/igJ0gQmlsbCBTY2h1bHR6LCB3aG8gb3ZlcnNlZXMgJDEuMiBiaWxsaW9uIGFzIGNoaWVmIGludmVzdG1lbnQgb2ZmaWNlciBhdCBNY1F1ZWVuLCBCYWxsICYgQXNzb2NpYXRlcyBpbiBCZXRobGVoZW0sIFBlbm5zeWx2YW5pYSwgc2FpZCBieSBwaG9uZS4g4oCcVGhhdOKAmXMgYSBiaWcgcXVlc3Rpb24gdGhlIG1hcmtldCBpcyBnb2luZyB0byBsb29rIGF0IG1vdmluZyBmb3J3YXJkLuKAnSBNZXJnZXJzIGFuZCBhY3F1aXNpdGlvbnMgYXJlIGJvb21pbmcgYWZ0ZXIgZml2ZSB5ZWFycyBvZiBwcm9maXQgZXhwYW5zaW9ucyBib2xzdGVyZWQgY29ycG9yYXRlIGNhc2ggaG9hcmRpbmdzLiBBYm91dCAkNTI4IGJpbGxpb24gd29ydGggb2YgZGVhbHMgaGF2ZSBiZWVuIGFubm91bmNlZCB0aGlzIHF1YXJ0ZXIsIHRoZSBtb3N0IHNpbmNlIEp1bmUgMjAwNywgZGF0YSBjb21waWxlZCBieSBCbG9vbWJlcmcgc2hvdy4gQWxsZXJnYW4gcmFsbGllZCA0MCBwZXJjZW50IHRoaXMgcXVhcnRlciBhZnRlciBWYWxlYW50IFBoYXJtYWNldXRpY2FscyBJbnRlcm5hdGlvbmFsIEluYy4gb2ZmZXJlZCB0byBidXkgdGhlIEJvdG94IG1ha2VyIGZvciBhYm91dCAkNTQgYmlsbGlvbi4gV2lsbGlhbXMganVtcGVkIDQ0IHBlcmNlbnQuIFRoZSBmb3VydGgtbGFyZ2VzdCBVLlMuIHBpcGVsaW5lIG9wZXJhdG9yIGFncmVlZCB0byBidXkgY29udHJvbCBvZiBBY2Nlc3MgTWlkc3RyZWFtIFBhcnRuZXJzIExQIGZvciAkNiBiaWxsaW9uLCBjcmVhdGluZyBvbmUgb2YgdGhlIGJpZ2dlc3QgbmF0dXJhbC0gZ2FzIHRyYW5zcG9ydGVycy4gRW5lcmd5IGNvbXBhbmllcyBpbiB0aGUgUyZQIDUwMCBjbGltYmVkIDExIHBlcmNlbnQgYXMgb2lsIHJvc2UgYWJvdmUgJDEwNSBhIGJhcnJlbCBhbWlkIGVzY2FsYXRlZCB0ZW5zaW9ucyBpbiBJcmFxLiBDb25vY29QaGlsbGlwcyBhZHZhbmNlZCAyMiBhbmQgU2NobHVtYmVyZ2VyIGluY3JlYXNlZCAyMSBwZXJjZW50LiBJbnRlcm5ldCBhbmQgc21hbGwtY2FwIGNvbXBhbmllcyByZWNvdmVyZWQgYWZ0ZXIgYSBzZWxsb2ZmIGVuZGVkIGluIE1heS4gVGhlIFJ1c3NlbGwgMjAwMCBoYXMgY2xpbWJlZCA4LjUgcGVyY2VudCBzaW5jZSBpdHMgbG93IGxhc3QgbW9udGggYW5kIHRoZSBEb3cgSm9uZXMgSW50ZXJuZXQgQ29tcG9zaXRlIEluZGV4IGlzIHVwIDEzIHBlcmNlbnQuIEZhY2Vib29rLCB0aGUgd29ybGTigJlzIG1vc3QgcG9wdWxhciBzb2NpYWwtbmV0d29ya2luZyBzaXRlLCBqdW1wZWQgMTIgcGVyY2VudCBmb3IgdGhlIHF1YXJ0ZXIuIE5ldGZsaXgsIGEgdmlkZW8tc3Vic2NyaXB0aW9uIGNvbXBhbnksIHN1cmdlZCAyNiBwZXJjZW50Lg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbl/oCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGIyZTQ0ODkyMjZiM2YwY2E=</field><field name="symbol" class="java.lang.String">rO0ABXQABFZUV1Y=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbrJNyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBWPMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBWYAAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBWMo9cKPXD</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBWYAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBV/rhR64Uf</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAACvA==</field><field name="id" class="java.lang.String">rO0ABXQAEGM0ZmYyNDUyOTY2ZGNhNGI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEtVAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDE1Njc=</field><field name="title" class="java.lang.String">rO0ABXQAN1RyZWFzdXJ5IFlpZWxkcyBGYWxsIHRvIDYtTW9udGggTG93OyBFdXJvcGUgRWFzaW5nIFNlZW4=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUX5GfiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDViYTYzN2FlYzA3YjMyM2Q=</field><field name="symbol" class="java.lang.String">rO0ABXQACUNSVC1VTi5UTw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUX+QFSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAm4UeuFHrh</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAm64UeuFHs</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAmrhR64Ueu</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAm0euFHrhS</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlszMzMzMz</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAClPA==</field><field name="id" class="java.lang.String">rO0ABXQAEDFhMzQyYWM1ZTlhNGM2OTQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKSSAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDU3NzM=</field><field name="title" class="java.lang.String">rO0ABXQAOUJvbmRzIFR1bWJsZSBXaXRoIFN0b2NrcyBhcyBZZWxsZW4gT3V0bGluZXMgU3RpbXVsdXMgRXhpdA==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUTYtdiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDhhNzlkZWYyMDVmNTAxZjA=</field><field name="symbol" class="java.lang.String">rO0ABXQABUJBTVhG</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUTd3DSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBeHrhR64Uf</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBeKZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBeDhR64Ueu</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBeDhR64Ueu</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBdLCj1wo9c</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAADhA==</field><field name="id" class="java.lang.String">rO0ABXQAEDYwYTM1Nzg0ZGViY2E3ZmQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHgDAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQwMTQ=</field><field name="title" class="java.lang.String">rO0ABXQAOlN0b2NrcyBSZXRyZWF0IGZyb20gUmVjb3JkcyBBbWlkIEludGVyZXN0LVJhdGUgU3BlY3VsYXRpb24=</field><field name="content" class="java.lang.String">rO0ABXQVxVUuUy4gc3RvY2tzIGZlbGwgZnJvbSByZWNvcmQgaGlnaHMgTW9uZGF5LCBsZWQgYnkgc21hbGwgY29tcGFuaWVzLCBhcyBpbnZlc3RvcnMgd2VpZ2hlZCB2YWx1YXRpb25zIGFuZCBzcGVjdWxhdGVkIHRoZSBGZWRlcmFsIFJlc2VydmUgbWF5IHJhaXNlIGludGVyZXN0IHJhdGVzIHNvb25lciB0aGFuIGV4cGVjdGVkLiBHVCBBZHZhbmNlZCBUZWNobm9sb2dpZXMgSW5jLiBzYW5rIDE2IHBlcmNlbnQgYWZ0ZXIgQ2FuYWNjb3JkIEdlbnVpdHkgR3JvdXAgSW5jLiBkb3duZ3JhZGVkIHRoZSBzdG9jayB0byBob2xkIGZyb20gYnV5LiBFeHBlZGlhIEluYy4gc2xpZCAxLjcgcGVyY2VudCBhZnRlciBhZ3JlZWluZyB0byBtYWtlIGEgJDY1OCBtaWxsaW9uIGFjcXVpc2l0aW9uLiBQZWFib2R5IEVuZXJneSBDb3JwLiBmZWxsIDMuNyBwZXJjZW50IHRvIGxlYWQgZW5lcmd5IHByb2R1Y2VycyBsb3dlci4gUGV0U21hcnQgSW5jLiBnYWluZWQgMi41IHBlcmNlbnQgYWZ0ZXIgYSBzZWNvbmQgbGFyZ2Ugc2hhcmVob2xkZXIgcHJvZGRlZCB0aGUgY29tcGFueSB0byBjb25zaWRlciBzZWxsaW5nIGl0c2VsZi4gVGhlIFN0YW5kYXJkICYgUG9vcuKAmXMgNTAwIEluZGV4IGZlbGwgMC40IHBlcmNlbnQgdG8gMSw5NzcuNjUgYXQgNCBwLm0uIGluIE5ldyBZb3JrLiBUaGUgRG93IEpvbmVzIGluZHVzdHJpYWwgYXZlcmFnZSBkcm9wcGVkIDQ0LjA1IHBvaW50cywgb3IgMC4zIHBlcmNlbnQsIHRvIDE3LDAyNC4yMS4gVGhlIFJ1c3NlbGwgMjAwMCBJbmRleCBvZiBzbWFsbCBjb21wYW5pZXMgc2xpZCAxLjggcGVyY2VudCwgdGhlIG1vc3Qgc2luY2UgQXByaWwuIEFib3V0IDUuMSBiaWxsaW9uIHNoYXJlcyBjaGFuZ2VkIGhhbmRzIG9uIFUuUy4gZXhjaGFuZ2VzLCAxNCBwZXJjZW50IGJlbG93IHRoZSB0aHJlZS1tb250aCBhdmVyYWdlLiBVLlMuIGVxdWl0aWVzIG1hcmtldHMgd2VyZSBjbG9zZWQgRnJpZGF5IGZvciB0aGUgSW5kZXBlbmRlbmNlIERheSBob2xpZGF5LiDigJxSYXRlcyBhcmUgZ29pbmcgdG8gZ28gdXAgYmVmb3JlIHBlb3BsZSBleHBlY3Qs4oCdIFRvbSBTdHJpbmdmZWxsb3csIHByZXNpZGVudCBhbmQgY2hpZWYgaW52ZXN0bWVudCBvZmZpY2VyIG9mIFNhbiBBbnRvbmlvLWJhc2VkIEZyb3N0IEludmVzdG1lbnQgQWR2aXNvcnMgTExDLCB3aGljaCBtYW5hZ2VzIGFib3V0ICQxMCBiaWxsaW9uLCBzYWlkIGluIGEgcGhvbmUgaW50ZXJ2aWV3LiDigJxBbmQgd2hlbiByYXRlcyBkbyBnbyB1cCwgSSBleHBlY3Qgc29tZSBzb3J0IG9mIGEga25lZS1qZXJrIHJlYWN0aW9uLiBCdXQgSSBkb27igJl0IGJlbGlldmUgZm9yIGEgbW9tZW50IHRoYXQgdGhlIEZlZOKAmXMgZ29pbmcgdG8gcmFpc2UgcmF0ZXMgYXQgYSBzcGVlZCB0aGF0IGRlcmFpbHMgdGhpcyBzdGFibGUgZW52aXJvbm1lbnQu4oCdIEJvdGggdGhlIFMmUCA1MDAgYW5kIHRoZSBEb3cgYXZlcmFnZSBhZHZhbmNlZCAxLjMgcGVyY2VudCBsYXN0IHdlZWssIHdpdGggdGhlIDMwLXN0b2NrIGdhdWdlIGNsb3NpbmcgYWJvdmUgMTcsMDAwIGZvciB0aGUgZmlyc3QgdGltZSwgYXMgbW9udGhseSBwYXlyb2xsIGFkZGl0aW9uIGV4Y2VlZGVkIDIwMCwwMDAgZm9yIGEgZmlmdGggbW9udGggaW4gSnVuZS4gICAgICAgICAgICAgICAgICAgICAgICAgUmF0ZSBTcGVjdWxhdGlvbiBUaGUgUnVzc2VsbCAyMDAwIGxhc3Qgd2VlayByZWNvdmVyZWQgbmVhcmx5IGFsbCBpdHMgbG9zc2VzIGZyb20gYSB0d28tbW9udGggc2VsbG9mZiBvZiBJbnRlcm5ldCBhbmQgc21hbGwtY2FwIHNoYXJlcywgY29taW5nIHdpdGhpbiBhIHBvaW50IG9mIGFuIGFsbC10aW1lIGhpZ2guIEdvbGRtYW4gU2FjaHMgR3JvdXAgSW5jLiBicm91Z2h0IGZvcndhcmQgaXRzIGZvcmVjYXN0IGZvciB0aGUgRmVkIHRvIHJhaXNlIGludGVyZXN0IHJhdGVzLCBqb2luaW5nIGNvbXBhbmllcyBpbmNsdWRpbmcgSlBNb3JnYW4gQ2hhc2UgJiBDby4gYW5kIEJhbmsgb2YgVG9reW8tTWl0c3ViaXNoaSBVRkogTHRkLiBpbiBtb3ZpbmcgdXAgZXN0aW1hdGVzIGZvbGxvd2luZyB0aGUgam9icyBkYXRhIGxhc3Qgd2Vlay4gVGhlIGNlbnRyYWwgYmFuayB3aWxsIGluY3JlYXNlIGl0cyBiZW5jaG1hcmsgcmF0ZSBpbiB0aGUgdGhpcmQgcXVhcnRlciBvZiAyMDE1LCByYXRoZXIgdGhhbiB0aGUgZmlyc3QgdGhyZWUgbW9udGhzIG9mIDIwMTYsIEdvbGRtYW4gU2FjaHMgQ2hpZWYgRWNvbm9taXN0IEphbiBIYXR6aXVzIHdyb3RlIGluIGEgcmVwb3J0IHllc3RlcmRheS4gUG9saWN5IG1ha2VycyBoYXZlIGtlcHQgdGhlaXIgdGFyZ2V0IGZvciBvdmVybmlnaHQgbGVuZGluZyBiZXR3ZWVuIGJhbmtzIGluIGEgcmFuZ2Ugb2YgemVybyB0byAwLjI1IHBlcmNlbnQgc2luY2UgRGVjZW1iZXIgMjAwOC4gVGhlIGNlbnRyYWwgYmFuayB3aWxsIHB1Ymxpc2ggdGhlIG1pbnV0ZXMgb2YgaXRzIEp1bmUgMTctMTggbWVldGluZyBvbiBXZWRuZXNkYXkuIEZlZCBDaGFpciBKYW5ldCBZZWxsZW4gc2FpZCBvbiBKdWx5IDIgdGhhdCBjb25jZXJucyBhYm91dCBmaW5hbmNpYWwgc3RhYmlsaXR5IHNob3VsZG7igJl0IHByb21wdCBhIGNoYW5nZSBpbiBjdXJyZW50IHBvbGljeS4gVGhyZWUgcm91bmRzIG9mIG1vbmV0YXJ5IHN0aW11bHVzIGZyb20gdGhlIEZlZCBhbmQgYmV0dGVyIHRoYW4tIGZvcmVjYXN0IGNvcnBvcmF0ZSBlYXJuaW5ncyBoYXZlIGRyaXZlbiB0aGUgUyZQIDUwMCB1cCBtb3JlIHRoYW4gMTkwIHBlcmNlbnQgZnJvbSBpdHMgTWFyY2ggMjAwOSBib3R0b20uICAgICAgICAgICAgICAgICAgICAgICAgRXF1aXRpZXMgVmFsdWF0aW9uIFRoZSBlcXVpdGllcyBiZW5jaG1hcmsgaXMgdHJhZGluZyBhdCAxNi43IHRpbWVzIHRoZSBwcm9qZWN0ZWQgZWFybmluZ3Mgb2YgaXRzIG1lbWJlcnMsIGhpZ2hlciB0aGFuIHRoZSBmaXZlLXllYXIgYXZlcmFnZSBtdWx0aXBsZSBvZiAxNC4zLiBUaGUgQ2hpY2FnbyBCb2FyZCBPcHRpb25zIEV4Y2hhbmdlIFZvbGF0aWxpdHkgSW5kZXgsIHRoZSBtZWFzdXJlIGtub3duIGFzIFZJWCB0aGF0IHRyYWNrcyBpbnZlc3RvcnPigJkgZXN0aW1hdGUgb2YgZnV0dXJlIHZvbGF0aWxpdHksIHNsdW1wZWQgbGFzdCB3ZWVrIHRvIHRoZSBsb3dlc3QgbGV2ZWwgc2luY2UgRmVicnVhcnkgMjAwNy4gVGhlIGdhdWdlIHN1cmdlZCA5LjggcGVyY2VudCB0byAxMS4zMyBNb25kYXksIHRoZSBiaWdnZXN0IGdhaW4gc2luY2UgSnVuZSAyNC4g4oCcVmFsdWF0aW9ucyBhcmUgcHJldHR5IHN0cmV0Y2hlZCwgYW5kIHdlIGRvbuKAmXQgc2VlIGEgbG90IG9mIHJldmVudWUgZ3Jvd3RoLCB3aGljaCBtaWdodCBiZSBuZWdhdGl2ZSBmb3IgdGhlIG1hcmtldCzigJ0gQnJ1Y2UgQml0dGxlcywgY2hpZWYgaW52ZXN0bWVudCBzdHJhdGVnaXN0IGF0IE1pbHdhdWtlZS1iYXNlZCBSVyBCYWlyZCAmIENvLiwgd2hpY2ggb3ZlcnNlZXMgJDExMCBiaWxsaW9uLCBzYWlkIGluIGEgcGhvbmUgaW50ZXJ2aWV3LiDigJxUaGVyZSBtYXkgYmUgc29tZSBjb25jZXJuIGFib3V0IGVhcm5pbmdzLCBidXQgdGhpcyBpcyBiYXNpY2FsbHkgYSBtYXJrZXQgYmVpbmcgZHJpdmVuIGJ5IGFuIGltcHJvdmluZyBlY29ub215IGFuZCBndWFyYW50ZWVzIGJ5IHRoZSBGZWRlcmFsIFJlc2VydmUgdGhhdCB0aGV54oCZcmUgbm90IGdvaW5nIHRvIHJhaXNlIGludGVyZXN0IHJhdGVzLuKAnSBBbGNvYSBJbmMuIHdpbGwgdW5vZmZpY2lhbGx5IG9wZW4gdGhlIHNlY29uZC1xdWFydGVyIGVhcm5pbmdzLXJlcG9ydGluZyBzZWFzb24gVHVlc2RheS4gUHJvZml0IGF0IGNvbXBhbmllcyBpbiB0aGUgUyZQIDUwMCBpbmNyZWFzZWQgNSBwZXJjZW50IGluIHRoZSB0aHJlZSBtb250aHMgdGhyb3VnaCBKdW5lLCBlc3RpbWF0ZXMgY29tcGlsZWQgYnkgQmxvb21iZXJnIHNob3cuIFNldmVuIG9mIHRoZSAxMCBtYWluIFMmUCA1MDAgZ3JvdXBzIHJldHJlYXRlZCBNb25kYXksIHdpdGggbWF0ZXJpYWxzIHByb2R1Y2VycyBzbGlkaW5nIDAuOCBwZXJjZW50IGZvciB0aGUgYmlnZ2VzdCBsb3NzLiAgICAgICAgICAgICAgICAgICAgICAgICBFbmVyZ3ksIEFpcmxpbmVzIFBlYWJvZHkgRW5lcmd5IGZlbGwgMy43IHBlcmNlbnQsIGFzIGVuZXJneSBzdG9ja3MgbG9zdCAwLjYgcGVyY2VudCBhcyBhIGdyb3VwLiBDaGVzYXBlYWtlIEVuZXJneSBDb3JwLiBkcm9wcGVkIDQuNiBwZXJjZW50IGFzIHRoZSBwcmljZSBvZiBuYXR1cmFsIGdhcyBwb3N0ZWQgdGhlIGJpZ2dlc3Qgb25lLWRheSBkcm9wIGluIGZvdXIgbW9udGhzIGluIE5ldyBZb3JrLiBEZWx0YSBBaXIgTGluZXMgSW5jLiBzYW5rIDQuNCBwZXJjZW50IHRvIHRoZSBsb3dlc3Qgc2luY2UgQXByaWwgYW5kIFVuaXRlZCBDb250aW5lbnRhbCBIb2xkaW5ncyBJbmMuIGZlbGwgMy4yIHBlcmNlbnQgYXMgYWlybGluZXMgcmV0cmVhdGVkLiBHVCBBZHZhbmNlZCBUZWNobm9sb2dpZXMgZHJvcHBlZCAxNiBwZXJjZW50IHRvICQxNi41MC4gQ2FuYWNjb3JkIHNhaWQgdGhlIGNvbXBhbnkgaXMgdW5saWtlbHkgdG8gZ2V0IGEgYm9vc3QgaW4gZWFybmluZ3MgaW4gMjAxNiB1bmxlc3MgQXBwbGUgSW5jLiB1c2VzIGl0cyBzYXBwaGlyZSBpbiBhbGwgbW9kZWxzIG9mIHRoZSBpUGhvbmUuIEV4cGVkaWEgZmVsbCAxLjcgcGVyY2VudCB0byAkODAuODUuIFRoZSBvbmxpbmUgdHJhdmVsLWJvb2tpbmcgc2VydmljZSBhZ3JlZWQgU3VuZGF5IHRvIGJ1eSBBdXN0cmFsaWHigJlzIFdvdGlmLmNvbSBIb2xkaW5ncyBMdGQuIGZvciBhYm91dCAkNjU4IG1pbGxpb24sIHNlZWtpbmcgdG8gZXhwYW5kIGl0cyBwcmVzZW5jZSBpbiB0aGUgQXNpYS1QYWNpZmljIHJlZ2lvbi4gQXJjaGVyLURhbmllbHMtTWlkbGFuZCBDby4gY2xpbWJlZCAxLjYgcGVyY2VudCB0byAkNDYuNTAuIE1pbGxlciBUYWJhayArIENvLiByYWlzZWQgaXRzIHJhdGluZyBvbiB0aGUgc3RvY2sgdG8gYnV5IGZyb20gaG9sZCBhZnRlciBBRE0gc2FpZCBpdCB3aWxsIGFjcXVpcmUgV2lsZCBGbGF2b3JzIEdtYkggZm9yICQzIGJpbGxpb24uIFRoZSB0YWtlb3ZlciB3aWxsIGhlbHAgdGhlIHdvcmxk4oCZcyB0b3AgY29ybiBjcnVzaGVyIGRpdmVyc2lmeSBmcm9tIGdyYWluIHByb2Nlc3NpbmcgYW5kIGdhaW4gYSBiaWdnZXIgZm9vdGhvbGQgaW4gb3ZlcnNlYXMgbWFya2V0cyBmb3IgZm9vZCBhbmQgYmV2ZXJhZ2VzIG1hZGUgd2l0aCBtb3JlIG5hdHVyYWwgcmF3IG1hdGVyaWFscy4gUGV0U21hcnQgZ2FpbmVkIDIuNSBwZXJjZW50IHRvICQ2OC45NS4gU2hhcmVob2xkZXIgTG9uZ3ZpZXcgQXNzZXQgTWFuYWdlbWVudCBMTEMgc2VudCBhIGxldHRlciB0byB0aGUgYm9hcmQgb2YgdGhlIHBldC0gc3VwcGx5IHJldGFpbGVyIHRvZGF5IHNheWluZyB0aGUgY29tcGFueSBzaG91bGQgY29uc2lkZXIgYSBzYWxlLiBQZXRTbWFydCwgdW5kZXIgcHJlc3N1cmUgZnJvbSBoZWRnZSBmdW5kIEphbmEgUGFydG5lcnMgTExDIHRvIHB1cnN1ZSBhbHRlcm5hdGl2ZXMgaW5jbHVkaW5nIGEgc2FsZSwgc2FpZCBlYXJsaWVyIGl0IGlzIHJldmlld2luZyBjaGFuZ2VzIHRvIGl0cyBjYXBpdGFsIHN0cnVjdHVyZSB0byByZXR1cm4gbW9yZSBtb25leSB0byBzaGFyZWhvbGRlcnMu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcPMWCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGFhZGM1OTA1Y2RjZjk1NDY=</field><field name="symbol" class="java.lang.String">rO0ABXQAAkdU</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcUV7yAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7OFHrhR64</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7Sj1wo9cK</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6pmZmZmZm</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA67hR64Ueu</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6uuFHrhR7</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAC6tnA==</field><field name="id" class="java.lang.String">rO0ABXQAEDMwMjAwN2EyOTVkZTE2NDU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGWaAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQzNjI=</field><field name="title" class="java.lang.String">rO0ABXQANlRyZWFzdXJ5cyBIaXQgYnkgU2VsbGluZyBhcyBJbmZsYXRpb24gUmlzZXMsIEZlZCBNZWV0cw==</field><field name="content" class="java.lang.String">rO0ABXQWSlByaWNlcyBvZiBUcmVhc3VyeSBzZWN1cml0aWVzIHNhbmsgVHVlc2RheSwgd2l0aCAxMC15ZWFyIG5vdGVzIGZhbGxpbmcgdGhlIG1vc3QgaW4gdHdvIHdlZWtzLCBhZnRlciB0aGUgY29zdCBvZiBsaXZpbmcgYWNjZWxlcmF0ZWQgaW4gTWF5IGluIGEgc2lnbmFsIGluZmxhdGlvbiBtYXkgbW92ZSBjbG9zZXIgdG8gdGhlIEZlZGVyYWwgUmVzZXJ2ZeKAmXMgZ29hbCBhcyBwb2xpY3kgbWFrZXJzIG1lZXQuIFRyZWFzdXJ5IHR3by15ZWFyIG5vdGUgeWllbGRzIGNsaW1iZWQgdG8gdGhlIGhpZ2hlc3QgbGV2ZWwgc2luY2UgU2VwdGVtYmVyIGFzIEZlZCBvZmZpY2lhbHMgZGViYXRlZCB0aGUgc2xvd2luZyBvZiBhc3NldC1idXlpbmcgYW5kIHdoZW4gdG8gc3RhcnQgcmFpc2luZyBpbnRlcmVzdCByYXRlcyBiZWZvcmUgV2VkbmVzZGF54oCZcyBhbm5vdW5jZW1lbnQuIEV1cm9kb2xsYXIgZnV0dXJlcywgdGhlIHdvcmxk4oCZcyBtb3N0IGFjdGl2ZWx5IHRyYWRlZCBzaG9ydC10ZXJtIGludGVyZXN0LXJhdGUgY29udHJhY3QsIGFyZSB1bmRlcmVzdGltYXRpbmcgdGhlIHBhY2Ugb2YgdGlnaHRlbmluZyBvdmVyIHRoZSBuZXh0IHR3byB5ZWFycywgYWNjb3JkaW5nIHRvIDU1IHBlcmNlbnQgb2YgNTYgZWNvbm9taXN0cyBpbiB0aGUgSnVuZSAxMi0xNiBzdXJ2ZXkgYnkgQmxvb21iZXJnIE5ld3MuIOKAnEluZmxhdGlvbiBvdmVyIHRoZSBsYXN0IHRocmVlIG1vbnRocyBvciBzbyBzZWVtcyB0byBiZSBhY2NlbGVyYXRpbmcgZmFpcmx5IGJyb2FkbHks4oCdIHNhaWQgQ2hyaXN0b3BoZXIgU3VsbGl2YW4sIHdobyBvdmVyc2VlcyAkMi4zIGJpbGxpb24gYXMgY2hpZWYgaW52ZXN0bWVudCBvZmZpY2VyIGF0IFVuaXRlZCBOYXRpb25zIEZlZGVyYWwgQ3JlZGl0IFVuaW9uIGluIE5ldyBZb3JrLiDigJxVbHRpbWF0ZWx5LCBpdOKAmXMgcmVhbGx5IGFib3V0IHdoYXQgdGhlIEZlZCBzYXlzIGFuZCBkb2VzIHRvbW9ycm93LuKAnSAgRWRpdG9yJ3MgTm90ZTogU2VuaW9ycyBTY29vcCBVcCBVbmNsYWltZWQgJDIwLDUwMCBDaGVja3M/IChTZWUgaWYgWW91IHF1YWxpZnkpIAoKVGhlIDEwLXllYXIgbm90ZSB5aWVsZCByb3NlIGZpdmUgYmFzaXMgcG9pbnRzLCBvciAwLjA1IHBlcmNlbnRhZ2UgcG9pbnQsIHRvIDIuNjUgcGVyY2VudCBhdCA1IHAubS4gaW4gTmV3IFlvcmssIGFjY29yZGluZyB0byBCbG9vbWJlcmcgQm9uZCBUcmFkZXIgZGF0YS4gSXQgZWFybGllciBhZGRlZCBzaXggYmFzaXMgcG9pbnRzLCB0aGUgbGFyZ2VzdCBnYWluIHNpbmNlIEp1bmUgMy4gVGhlIHByaWNlIG9mIHRoZSAyLjUgcGVyY2VudCBub3RlIG1hdHVyaW5nIGluIE1heSAyMDI0IGZlbGwgMTUvMzIsIG9yICQ0LjY5IHBlciAkMSwwMDAgZmFjZSB2YWx1ZSwgdG8gOTggMjEvMzIuIFRoZSB0d28teWVhciB5aWVsZCBnYWluZWQgb25lIGJhc2lzIHBvaW50IHRvIDAuNDggcGVyY2VudCBhZnRlciByaXNpbmcgdG8gMC40OSBwZXJjZW50LCB0aGUgaGlnaGVzdCBzaW5jZSBTZXB0LiA2LCBhbmQgdXAgZnJvbSAwLjMyIHBlcmNlbnQgb24gTWF5IDIwLiAgICAgICAgICAgICAgICAgICAgICAgICAgICBZaWVsZCBDdXJ2ZSBUaGUgeWllbGQgZGlmZmVyZW5jZSBiZXR3ZWVuIHR3by0gYW5kIDEwLXllYXIgVHJlYXN1cnkgbm90ZXMgZXhwYW5kZWQgZml2ZSBiYXNpcyBwb2ludHMgdG8gMjE3IGJhc2lzIHBvaW50cywgYWZ0ZXIgZmFsbGluZyB0byAyMDcgb24gTWF5IDI4LCB0aGUgbGVhc3Qgc2luY2UgSnVuZSAxOSwgYmFzZWQgb24gY2xvc2luZyBwcmljZXMuIFRoZSBvbmUteWVhciBhdmVyYWdlIGlzIDIzMy4gQSB3aWRlciB5aWVsZCBjdXJ2ZSBzdWdnZXN0cyBpbnZlc3RvcnMgaGF2ZSBib29zdGVkIGdyb3d0aCBleHBlY3RhdGlvbnMuIFRyZWFzdXJ5IHByaWNlcyBkcm9wcGVkIGFmdGVyIHRoZSBjb25zdW1lciBwcmljZSBpbmRleCBpbmNyZWFzZWQgMC40IHBlcmNlbnQsIHRoZSBiaWdnZXN0IGFkdmFuY2Ugc2luY2UgRmVicnVhcnkgMjAxMywgYWZ0ZXIgY2xpbWJpbmcgMC4zIHBlcmNlbnQgdGhlIHByaW9yIG1vbnRoLCBhIExhYm9yIERlcGFydG1lbnQgcmVwb3J0IHNob3dlZCB0b2RheSBpbiBXYXNoaW5ndG9uLiBUaGUgbWVkaWFuIGZvcmVjYXN0IG9mIDgxIGVjb25vbWlzdHMgc3VydmV5ZWQgYnkgQmxvb21iZXJnIGNhbGxlZCBmb3IgYSAwLjIgcGVyY2VudCBpbmNyZWFzZS4gRXhjbHVkaW5nIHZvbGF0aWxlIGZvb2QgYW5kIGVuZXJneSBwcmljZXMsIHRoZSBnYWluIHdhcyB0aGUgbGFyZ2VzdCBpbiBhbG1vc3QgdGhyZWUgeWVhcnMuIEEgc2VwYXJhdGUgQ29tbWVyY2UgRGVwYXJ0bWVudCByZXBvcnQgc2hvd2VkIHRoYXQgYnVpbGRlcnMgYnJva2UgZ3JvdW5kIG9uIG1vcmUgdGhhbiAxIG1pbGxpb24gVS5TLiBob21lcyBpbiBNYXkgZm9yIGEgc2Vjb25kIG1vbnRoLCBpbmRpY2F0aW5nIHRoZSBpbmR1c3RyeSBpcyBwaWNraW5nIHVwIGFmdGVyIGEgd2VhdGhlci1pbmR1Y2VkIHNsdW1wIHRvIHN0YXJ0IHRoZSB5ZWFyLiAgICAgICAgICAgICAgICAgICAgICAgICAgRmVkIFNwZWN1bGF0aW9uIOKAnFRoZXJlIGlzIGluZmxhdGlvbiDigJQgeW91IGNhbiBmZWVsIGl0LCB5b3UgY2FuIHNlZSBpdCBhcyBhIGNvbnN1bWVyIOKAlCBub3cgaXTigJlzIHN0YXJ0aW5nIHRvIGNyZWVwIGludG8gdGhlIGFjdHVhbCBudW1iZXJzLOKAnSBzYWlkIE1pY2hhZWwgRnJhbnplc2UsIHNlbmlvciB2aWNlIHByZXNpZGVudCBvZiBmaXhlZC1pbmNvbWUgdHJhZGluZyBhdCBFRCZGIE1hbiBDYXBpdGFsIE1hcmtldHMgaW4gTmV3IFlvcmsuIFRoZSBGZWRlcmFsIE9wZW4gTWFya2V0IENvbW1pdHRlZSBpcyDigJxnb2luZyB0byBzZWUgdGhlc2UgbnVtYmVycywgYW5kIGhvcGVmdWxseSB3ZeKAmWxsIGdldCBzb21lIGtpbmQgb2YgZGlhbG9nLuKAnSBUcmFkZXJzIGFyZSBwcmljaW5nIGluIGEgNjMgcGVyY2VudCBjaGFuY2UgcG9saWN5IG1ha2VycyB3aWxsIHJhaXNlIGludGVyZXN0IHJhdGVzIGJ5IEp1bHkgbmV4dCB5ZWFyLiBUaGUgRmVkIGlzIHJlZHVjaW5nIGl0cyBtb250aGx5IGJvbmQgcHVyY2hhc2VzLCB3aGlsZSBrZWVwaW5nIHRoZSB0YXJnZXQgZm9yIG92ZXJuaWdodCBsZW5kaW5nIGJldHdlZW4gYmFua3MgaW4gdGhlIHJhbmdlIG9mIHplcm8gdG8gMC4yNSBwZXJjZW50IHdoZXJlIGl0IGhhcyBiZWVuIHNpbmNlIDIwMDguIE9mZmljaWFscyBzaWduYWxlZCBhdCB0aGVpciBBcHJpbCAyOS0zMCBtZWV0aW5nIHRoYXQgaW50ZXJlc3QgcmF0ZXMgd2lsbCBzdGF5IGxvdyBmb3IgYSDigJxjb25zaWRlcmFibGUgdGltZS7igJ0gVHJlYXN1cnlzIGdhaW5lZCBNb25kYXkgYWZ0ZXIgdGhlIEludGVybmF0aW9uYWwgTW9uZXRhcnkgRnVuZCBzYWlkIGl0IG5vdyBzZWVzIHRoZSB3b3JsZOKAmXMgbGFyZ2VzdCBlY29ub215IGdyb3dpbmcgMiBwZXJjZW50IHRoaXMgeWVhciwgZG93biBmcm9tIGFuIEFwcmlsIGVzdGltYXRlIG9mIDIuOCBwZXJjZW50LiBUaGUgSU1GIGxlZnQgYSAyMDE1IHByZWRpY3Rpb24gdW5jaGFuZ2VkIGF0IDMgcGVyY2VudCwgYW5kIHNhaWQgaXQgZG9lc27igJl0IGV4cGVjdCB0aGUgVS5TLiB0byBzZWUgZnVsbCBlbXBsb3ltZW50IHVudGlsIHRoZSBlbmQgb2YgMjAxNywgYW1pZCBzbG93IGluZmxhdGlvbi4gICAgICAgICAgICAgICAgICAgICAgICAgIOKAmENhbuKAmXQgSWdub3Jl4oCZIEZvciB0aGUgRmVkLCB0aGUgZm9yZWNhc3QgbWVhbnMg4oCccG9saWN5IHJhdGVzIGNvdWxkIGFmZm9yZCB0byBzdGF5IGF0IHplcm8gZm9yIGxvbmdlciB0aGFuIHRoZSBtaWQtMjAxNSBkYXRlIGN1cnJlbnRseSBmb3Jlc2VlbiBieSBtYXJrZXRzLOKAnSB0aGUgV2FzaGluZ3Rvbi1iYXNlZCBJTUYgc2FpZCBpbiBpdHMgYW5udWFsIGFzc2Vzc21lbnQgb2YgdGhlIFUuUy4gZWNvbm9teS4gVGhlIGRpZmZlcmVuY2UgYmV0d2VlbiB5aWVsZHMgb24gMTAteWVhciBub3RlcyBhbmQgc2ltaWxhci1tYXR1cml0eSBUcmVhc3VyeSBJbmZsYXRpb24gUHJvdGVjdGVkIFNlY3VyaXRpZXMsIGEgZ2F1Z2Ugb2YgZXhwZWN0YXRpb25zIGZvciBjb25zdW1lciBwcmljZXMsIHJvc2UgMC4wMyBwZXJjZW50YWdlIHBvaW50IHRvIDIuMjEgcGVyY2VudGFnZSBwb2ludHMuIFRoYXTigJlzIGRvd24gZnJvbSB0aGlzIHllYXLigJlzIGhpZ2ggb2YgMi4zMSBzZXQgaW4gSmFudWFyeSBhbmQgY29tcGFyZXMgd2l0aCB0aGUgYXZlcmFnZSBmb3IgdGhlIHBhc3QgZGVjYWRlIG9mIDIuMjAgcGVyY2VudGFnZSBwb2ludHMuIFRoZSBGZWQg4oCcY2VydGFpbmx5IGNhbuKAmXQgaWdub3JlIGl0LOKAnSBzYWlkIENocmlzIE1jUmV5bm9sZHMsIGhlYWQgb2YgVHJlYXN1cnkgdHJhZGluZyBhdCBCYXJjbGF5cyBQbGMsIG9uZSBvZiAyMiBwcmltYXJ5IGRlYWxlcnMgdGhhdCB0cmFkZSB3aXRoIHRoZSBGZWQuIOKAnFRoZXkgaGF2ZSB0byBhY2tub3dsZWRnZSBpdCB0byBzb21lIGRlZ3JlZS4gRXZlbiBiZWZvcmUgdGhlIG51bWJlciBUb2RheSB0aGV5IHdlcmUgYWxyZWFkeSBhdCB0aGVpciB5ZWFyLWVuZCBwcm9qZWN0aW9uc+KAnSBmb3IgdW5lbXBsb3ltZW50IGFuZCB0aGUgY2VudHJhbCBiYW5r4oCZcyBwcmVmZXJyZWQgbWVhc3VyZSBvZiBpbmZsYXRpb24sIHRoZSBwZXJzb25hbCBjb25zdW1wdGlvbiBleHBlbmRpdHVyZXMgZGVmbGF0b3IuICAgICAgICAgICAgICAgICAgICAgICAgIFVuZW1wbG95bWVudCBSYXRlIEZlZCBvZmZpY2lhbHMsIGF0IHRoZSBNYXJjaCAxOSBtZWV0aW5nLCBmb3JlY2FzdCB1bmVtcGxveW1lbnQgd291bGQgZW5kIHRoZSB5ZWFyIGF0IGEgcmF0ZSBiZXR3ZWVuIDYgcGVyY2VudCBhbmQgNi41IHBlcmNlbnQuIFRoZSBtZWFzdXJlIHdhcyA2LjQgcGVyY2VudCBsYXN0IG1vbnRoLCB0aGUgTGFib3IgRGVwYXJ0bWVudCBzYWlkLiBQb2xpY3kgbWFrZXJzIGZvcmVjYXN0IHllYXItZW5kIFBDRSBhdCAxLjMgcGVyY2VudCB0byAxLjggcGVyY2VudC4gVGhlIFBDRSBkZWZsYXRvciByb3NlIDEuNiBwZXJjZW50IGluIEFwcmlsIGZyb20gdGhlIHllYXItYWdvIHBlcmlvZCwgQ29tbWVyY2UgRGVwYXJ0bWVudCBkYXRhIHNob3cuIFRyZWFzdXJ5cyBoYXZlIHJldHVybmVkIDIuOCBwZXJjZW50IHRoaXMgeWVhciB0aHJvdWdoIE1vbmRheSwgY29tcGFyZWQgd2l0aCA1LjMgcGVyY2VudCBmb3IgVS5TLiBpbnZlc3RtZW50LWdyYWRlIGNvbXBhbnkgZGVidCBhbmQgNS40IHBlcmNlbnQgZm9yIGhpZ2gteWllbGQgc2VjdXJpdGllcyBkZW5vbWluYXRlZCBpbiBkb2xsYXJzLCBiYXNlZCBvbiBCbG9vbWJlcmcgaW5kZXhlcy4gVGhlIGdvdmVybm1lbnQgaXMgc2NoZWR1bGVkIHRvIHNlbGwgJDcgYmlsbGlvbiBvZiAzMC15ZWFyIFRyZWFzdXJ5IEluZmxhdGlvbi1Qcm90ZWN0ZWQgU2VjdXJpdGllcyBKdW5lIDE5LiBUaGUgZ2FwIGJldHdlZW4geWllbGRzIG9uIDMwLXllYXIgVElQUyBhbmQgbm9uLWluZGV4ZWQgZ292ZXJubWVudCBkZWJ0IG9mIGNvbXBhcmFibGUgbWF0dXJpdHkgd2lkZW5lZCAwLjAyIHBlcmNlbnRhZ2UgcG9pbnQgdG8gMi4zMCBwZXJjZW50YWdlIHBvaW50cywgZG93biBmcm9tIGEgMjAxNCBoaWdoIG9mIDIuNDUgcGVyY2VudGFnZSBwb2ludHMgaW4gSmFudWFyeSwgd2hpY2ggaXMgYWxzbyB0aGUgMTAteWVhciBhdmVyYWdlLgoKIEVkaXRvcidzIE5vdGU6IFNlbmlvcnMgU2Nvb3AgVXAgVW5jbGFpbWVkICQyMCw1MDAgQ2hlY2tzPyAoU2VlIGlmIFlvdSBxdWFsaWZ5KQ==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUaoMjCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDhjZmEyNmM3NTNiZTAzOGY=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0VELVVOLlY=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUatWIyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAAj1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAAj1wo9cKP</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAAj1wo9cKP</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAAj1wo9cKP</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/+4UeuFHrh</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDMzZDQyNGRjMWE3N2U5MjI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHckAAAA==</field></document></documents><date>2015-05-07T12:17:36-0500</date></cacheEntry>
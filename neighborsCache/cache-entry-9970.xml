<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0EaFLb3JlYSBFeGNoYW5nZSBJbmMgd2hpY2ggaGFzIGhhZCBidWxsaW9uIGZ1dHVyZXMgc2luY2UgMTk5OSBhaW1zIHRvIGdyYWR1YWxseSByZXBsYWNlIGlsbGVnYWwgc2FsZXMgdGhhdCB0b3RhbCBhcyBtdWNoIGFzIDcwIG1ldHJpYyB0b25zIGFubnVhbGx5IGFuZCBkZXByaXZlIHRoZSBzdGF0ZSBvZiBhbiBlc3RpbWF0ZWQgMjgwIG1pbGxpb24gaW4gdGF4ZXMgQ3VzdG9tcyBvZmZpY2VycyBpbnRlcmNlcHRlZCAzNjAga2lsb2dyYW1zIGxhc3QgeWVhciBhcyB0aGUgbnVtYmVyIG9mIGJ1c3RzIG1vcmUgdGhhbiBkb3VibGVkIGZyb20gMjAxMiBQdXJjaGFzaW5nIGdvbGQgYmFycyBpcyBhIGNvbW1vbiB3YXkgdG8gaGlkZSBpbmNvbWUgaW4gS29yZWEgd2hlcmUgYSBzaGFkb3cgZWNvbm9teSBvZiB1bnJlcG9ydGVkIGJ1eWluZyBhbmQgc2VsbGluZyBhY2NvdW50cyBmb3IgYSBxdWFydGVyIG9mIGdyb3NzIGRvbWVzdGljIHByb2R1Y3QgV2hpbGUgS29yZWEgRXhjaGFuZ2Ugd2lsbCByZWR1Y2UgdGF4ZXMgb24gcGh5c2ljYWwgdHJhZGVzIHNtdWdnbGVkIGdvbGQgaXMgbGlrZWx5IHRvIHJlbWFpbiBhcyBtdWNoIGFzIDcgcGVyY2VudCBjaGVhcGVyIGFjY29yZGluZyB0byB0aGUgS29yZWEgUHJlY2lvdXMgTWV0YWxzIERpc3RyaWJ1dG9ycyBBc3NvY2lhdGlvbiBJdHMgYSBiaWcgc3RydWdnbGUgZm9yIHVzIHRvIG1haW50YWluIG91ciB0cmFuc3BhcmVudCBidXNpbmVzcyBpbiBhbiBpbmR1c3RyeSB0aGF0cyB0YWludGVkIGJ5IGlsbGljaXQgZGVhbHMgc2FpZCBKZW9uZyBCeXVuZyBOYW0gYSBkaXJlY3RvciBhdCBTYW1kdWNrIE1ldGFscyBDbyBhIHJlZmluZXIgZnJvbSBJbmNoZW9uIHdlc3Qgb2YgU2VvdWwgQ29tcGFuaWVzIGxpa2UgdXMgaGF2ZSB0byBnbyBpbnRvIHRoaXMgcGh5c2ljYWwgZXhjaGFuZ2Ugd2l0aCBhIHNlbnNlIG9mIGR1dHkgb3IgcGF0cmlvdGlzbSBiZWNhdXNlIGl0IGhhcmRseSBvZmZlcnMgdXMgYW55IGJlbmVmaXRzIFNhbWR1Y2sgaXMgYW1vbmcgdGhlIDU3IHJlZmluZXJzIGpld2VsZXJzIGFuZCBzZWN1cml0aWVzIGZpcm1zIHRoYXQgaGF2ZSBqb2luZWQgdGhlIHRyYWRpbmcgcGxhdGZvcm0gT3RoZXJzIGluY2x1ZGUgU2Ftc3VuZyBTZWN1cml0aWVzIENvIEh5dW5kYWkgU2VjdXJpdGllcyBDbyBTaGluaGFuIEludmVzdG1lbnQgQ29ycCBXb29yaSBJbnZlc3RtZW50ICBTZWN1cml0aWVzIENvIERhZXN1bmcgTWV0YWxzIENvIGFuZCBLb3JlYSBHb2xkIFRyYWRpbmcgQ2VudGVyIFRheCBQYXltZW50cyBXaGlsZSB0cmFkZXJzIG9uIEtvcmVhIEV4Y2hhbmdlIGdldCBhIHdhaXZlciBvbiB0aGUgMyBwZXJjZW50IGltcG9ydCBkdXR5IGZvciBnb2xkIHRoZXkgc3RpbGwgcGF5IGEgMTAgcGVyY2VudCB2YWx1ZSBhZGRlZCB0YXggZm9yIHRha2luZyBwaHlzaWNhbCBkZWxpdmVyeSBvZiBidWxsaW9uIFRob3NlIHdobyB0cmFkZSB3aXRob3V0IHRha2luZyBwb3NzZXNzaW9uIG9mIHRoZSBtZXRhbCB3aWxsIHJlY2VpdmUgY29ycG9yYXRlIHRheCBkZWR1Y3Rpb25zIGFuZCBhIFZBVCBleGVtcHRpb24gYWNjb3JkaW5nIHRvIHRoZSBleGNoYW5nZSBUaGVyZXMgbm8gbWVhbmluZyB0byBpdCBpZiB0aGUgZXhjaGFuZ2Ugc2ltcGx5IGFic29yYnMgZXhpc3RpbmcgbGVnYWwgdHJhbnNhY3Rpb25zIHNhaWQgWXUgRG9uZyBTb28gY2hhaXJtYW4gb2YgdGhlIFNlb3VsYmFzZWQgZGlzdHJpYnV0b3JzIGFzc29jaWF0aW9uIEFsbG93aW5nIGludmVzdG9ycyB3aG8gdGFrZSBwaHlzaWNhbCBkZWxpdmVyeSB0byBiZW5lZml0IGZyb20gdGF4IGV4ZW1wdGlvbnMgd291bGQgbWFrZSBpdCBhdHRyYWN0aXZlIGZvciBkaXN0cmlidXRvcnMgS29yZWFuIEV4Y2hhbmdlIGlzIHVzaW5nIDFncmFtIHVuaXRzIG9mIGJ1bGxpb24gb2YgOTk5OSBwZXJjZW50IHB1cml0eSB0byBzcHVyIGxpcXVpZGl0eSBEZWxpdmVyeSB3aWxsIGJlIGluIDEga2lsb2dyYW0gYmFycyBUcmFkaW5nIGhvdXJzIGFyZSAxMCBhbSB0byAzIHBtIGxvY2FsIHRpbWUgVGhlcmUgaGFzIGJlZW4gbm8gdHJhZGluZyBpbiBzdGFuZGFyZCAxa2lsbyBmdXR1cmVzIGluIFNlb3VsIGZvciB0aGUgcGFzdCB0aHJlZSB5ZWFycyB3aGlsZSBhdmVyYWdlIGRhaWx5IHRyYW5zYWN0aW9ucyBmb3Igc29jYWxsZWQgbWluaWZ1dHVyZXMgcmVwcmVzZW50aW5nIDEwMCBncmFtcyB3YXMgMTQxIGNvbnRyYWN0cyBpbiAyMDEzIGV4Y2hhbmdlIGRhdGEgc2hvdyBGaXJzdCBUcmFkZSBUaGUgcGh5c2ljYWwgbWFya2V0IG9wZW5lZCB0b2RheSB3aXRoIDU2MiBncmFtcyB0cmFkZWQgYXQgNDY5NTAgd29uIHBlciBncmFtIDEzNTAgYW4gb3VuY2UgYXQgMTAgYW0gYWNjb3JkaW5nIHRvIGEgc3RhdGVtZW50IGZyb20gdGhlIGV4Y2hhbmdlIEdvbGQgZm9yIGltbWVkaWF0ZSBkZWxpdmVyeSBvbiBnbG9iYWwgbWFya2V0cyBoYXMgcmVib3VuZGVkIDEwIHBlcmNlbnQgdGhpcyB5ZWFyIGFuZCB0cmFkZWQgYXQgMTMyNjE4IGFuIG91bmNlIGF0IDExNTcgYW0gU2VvdWwgdGltZSBPbiB0aGUgVG9reW8gQ29tbW9kaXR5IEV4Y2hhbmdlIGRhaWx5IHRyYWRpbmcgaW4gSmFudWFyeSBhdmVyYWdlZCAyODUwMSBjb250cmFjdHMgZWFjaCBmb3IgMSBraWxvIHdoaWxlIHBoeXNpY2FsIHRyYWRlIG9uIHRoZSBTaGFuZ2hhaSBHb2xkIEV4Y2hhbmdlIGF2ZXJhZ2VkIDE1ODA2IGtpbG9zIGVhY2ggZGF5IGluIEphbnVhcnkgZGF0YSBmcm9tIHRoZSBib3Vyc2VzIHNob3cgWW9vbiBTdWsgWW91biBhbiBleGVjdXRpdmUgZGlyZWN0b3IgYXQgS29yZWEgRXhjaGFuZ2UgZm9yIGRlcml2YXRpdmVzIG1hcmtldHMgc2FpZCBoZSB3YXMgdGFraW5nIGEgbG9uZ3Rlcm0gdmlldyBJdCB3b250IGhhcHBlbiBvdmVybmlnaHQgaGUgdG9sZCByZXBvcnRlcnMgYXQgYSBicmllZmluZyBvbiBNYXJjaCAyMSBXZSBleHBlY3QgdGhhdCBpdCB3aWxsIHRha2UgYXQgbGVhc3Qgb25lIG9yIHR3byB5ZWFycyB0byBoYXZlIGFuIGltcGFjdCBSZWR1Y2luZyBpbGxpY2l0IHRyYWRpbmcgaW4gZ29sZCBpcyBwYXJ0IG9mIGEgd2lkZXIgY2FtcGFpZ24gYnkgUHJlc2lkZW50IFBhcmsgR2V1biBIeWVzIGdvdmVybm1lbnQgdG8gd3JpbmcgYW4gZXh0cmEgMjcyIHRyaWxsaW9uIHdvbiBpbiByZXZlbnVlIG91dCBvZiB0aGUgdW5kZXJncm91bmQgZWNvbm9teSBNb3JlIFNjcnV0aW55IFRoZSBOYXRpb25hbCBUYXggU2VydmljZSBpcyBpbmNyZWFzaW5nIHNjcnV0aW55IG9mIGdyb3VwcyBmcm9tIGJhciBvd25lcnMgdG8gZG9jdG9ycyB0byBtb21hbmRwb3AgcmV0YWlsZXJzIHdoaWxlIHRoZSBLb3JlYSBDdXN0b21zIFNlcnZpY2Ugc2FpZCBpdHMgY29udGVuZGluZyB3aXRoIGEganVtcCBpbiB0cmFmZmlja2luZyBmcm9tIHNtdWdnbGVycyB3aG8gb2J0YWluZWQgYnVsbGlvbiBvdmVyc2VhcyBsYXN0IHllYXIgYXMgZ2xvYmFsIHByaWNlcyBzbHVtcGVkIDI4IHBlcmNlbnQgU291dGggS29yZWFzIHNoYWRvdyBlY29ub215IHdhcyBlcXVhbCB0byBhbG1vc3QgMjUgcGVyY2VudCBvZiBncm9zcyBkb21lc3RpYyBwcm9kdWN0IGluIDIwMTAgYWJvdmUgYW4gYXZlcmFnZSAxOCBwZXJjZW50IGZvciBPRUNEIG1lbWJlcnMgYWNjb3JkaW5nIHRvIGEgcGFwZXIgYnkgdGhlIEluc3RpdHV0ZSBmb3IgdGhlIFN0dWR5IG9mIExhYm9yIGluIEJvbm4gR2VybWFueSBPZiBhcyBtdWNoIGFzIDExMCB0b25zIG9mIGdvbGQgdHJhZGVkIGluIHRoZSBuYXRpb24gZWFjaCB5ZWFyIGFib3V0IDcwIHRvbnMgYXJlIGVzdGltYXRlZCB0byBiZSBvbiB0aGUgYmxhY2sgbWFya2V0IGluIEtvcmVhIEFzaWFzIGZvdXJ0aGxhcmdlc3QgZWNvbm9teSB0aGUgRmluYW5jaWFsIFNlcnZpY2VzIENvbW1pc3Npb24gc2FpZCBpbiBKdWx5IFRoZSBGU0Mgc2FpZCB0aGUgdmFsdWUgd2FzIGFzIG11Y2ggYXMgMzMgdHJpbGxpb24gd29uIG9yIGFib3V0IDMgYmlsbGlvbiBUaGUgQmFuayBvZiBLb3JlYSBoZWxkIDEwNDQgdG9ucyBpbiBpdHMgdmF1bHRzIGFzIG9mIEphbnVhcnkgYWNjb3JkaW5nIHRvIGRhdGEgZnJvbSB0aGUgV29ybGQgR29sZCBDb3VuY2lsIFNvdXRoIEtvcmVhbnMgaG9sZCBhbG1vc3Qgc2V2ZW4gdGltZXMgYXMgbXVjaCBhcyB0aGVpciBjZW50cmFsIGJhbmsgV29sZ29rIEpld2VscnkgUmVzZWFyY2ggQ2VudGVyIGFuZCBHYWxsdXAgS29yZWEgc2FpZCBpbiBhIGpvaW50IHJlcG9ydCBpbiBNYXJjaCBsYXN0IHllYXIgVGhlIEFzaWEgZmluYW5jaWFsIGNyaXNpcyBvZiAxOTk3MTk5OCBicm91Z2h0IHBhcnQgb2YgdGhlIGhvYXJkIGludG8gdGhlIGxpZ2h0IEFib3V0IDM1IG1pbGxpb24gS29yZWFucyBjYW1lIGZvcndhcmQgd2l0aCAyNTAgdG9ucyBvZiBnb2xkIHRvIFNhdmUgVGhlIENvdW50cnkgYWZ0ZXIgaXRzIGZvcmVpZ24gZXhjaGFuZ2UgY29mZmVycyB3ZXJlIGRyYWluZWQgYWNjb3JkaW5nIHRvIGEgcmVwb3J0IGRhdGVkIE1heSAxOTk4IGZyb20gdGhlIExvbmRvbmJhc2VkIFdHQyBhbmQgZGF0YSBmcm9tIHRoZSBnb3Zlcm5tZW50IGluIFNlb3VsdAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAb2FydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2UsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEzLTEyLTAzVDAwOjAwOjAwWiBUTyAyMDEzLTEyLTAzVDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDM1MDI=</field><field name="title" class="java.lang.String">rO0ABXQAQEdvbGQgQmVmdWRkbGVzIEJlcm5hbmtlIGFzIENlbnRyYWwgQmFua3MnIExvc3NlcyBhdCAkNTQ1IEJpbGxpb24=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGRSUSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGE1YTE1MDQyODBhOTc5NGQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABVNDR0xZ</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGWb6CAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlD1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlGZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkvXCj1wo9</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkvXCj1wo9</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkPXCj1wo9</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAHbyA==</field><field name="id" class="java.lang.String">rO0ABXQAEDNkZTU4YjQzMzA1NTFmZDQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mITOAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDIzOTI=</field><field name="title" class="java.lang.String">rO0ABXQAOUNoaW5hJ3MgR29sZCBJbXBvcnRzIEZyb20gSG9uZyBLb25nIEZhbGwgb24gUXVvdGEgQmFja2xvZw==</field><field name="content" class="java.lang.String">rO0ABXQOU0NoaW5h4oCZcyBnb2xkIGltcG9ydHMgZnJvbSBIb25nIEtvbmcgc2x1bXBlZCBpbiBBcHJpbCBmcm9tIGEgcmVjb3JkIGFzIGJhbmtzIGZhaWxlZCB0byBnZXQgcXVvdGFzIGZhc3QgZW5vdWdoIHRvIG1lZXQgc3VyZ2luZyBkZW1hbmQgZnJvbSBtYWlubGFuZCBidXllcnMga2VlbiB0byBwdXJjaGFzZSBidWxsaW9uIGFzIHByaWNlcyBmZWxsIGludG8gYSBiZWFyIG1hcmtldC4gTWFpbmxhbmQgYnV5ZXJzIHB1cmNoYXNlZCAxMjYsMTM1IGtpbG9ncmFtcywgaW5jbHVkaW5nIHNjcmFwLCBjb21wYXJlZCB3aXRoIDIyMyw1MTkga2lsb2dyYW1zIGluIE1hcmNoLCBhY2NvcmRpbmcgdG8gSG9uZyBLb25nIGdvdmVybm1lbnQgZGF0YS4gTmV0IGltcG9ydHMsIGFmdGVyIGRlZHVjdGluZyBmbG93cyBmcm9tIENoaW5hIGludG8gSG9uZyBLb25nLCB3ZXJlIDc1LDg5MSBraWxvZ3JhbXMsIGZyb20gMTMwLDAzOCBraWxvZ3JhbXMgYSBtb250aCBlYXJsaWVyLCBhY2NvcmRpbmcgdG8gQmxvb21iZXJnIGNhbGN1bGF0aW9ucy4gR29sZCBzbGlkIGludG8gYSBiZWFyIG1hcmtldCBpbiBBcHJpbCBhbmQgaGFkIGl0cyBiaWdnZXN0IGRyb3AgaW4gMzMgeWVhcnMgaW4gdGhlIHR3byBkYXlzIHRocm91Z2ggQXByaWwgMTUgb24gY29uY2VybiB0aGF0IHRoZSBVLlMuIEZlZGVyYWwgUmVzZXJ2ZSBtYXkgcmVpbiBpbiBzdGltdWx1cyB0aGF0IGhlbHBlZCBidWxsaW9uIGNhcCBhIDEyLXllYXIgYnVsbCBydW4gaW4gMjAxMiBhbmQgYXMgaW52ZXN0b3JzIGR1bXBlZCBob2xkaW5ncyBpbiBleGNoYW5nZS10cmFkZWQgcHJvZHVjdHMgYmFja2VkIGJ5IHRoZSBtZXRhbC4gUXVvdGFzIHdlcmUgaW4gc2hvcnQgc3VwcGx5IGFmdGVyIGltcG9ydHMgcmVhY2hlZCBhIHJlY29yZCBpbiBNYXJjaC4gT25seSBxdWFsaWZpZWQgYmFua3MgdGhhdCBzZWN1cmUgcXVvdGFzIGZyb20gdGhlIENoaW5lc2UgY2VudHJhbCBiYW5rIGNhbiBpbXBvcnQgZ29sZCB0byB0aGUgbWFpbmxhbmQuIOKAnFNvbWUgcXVhbGlmaWVkIGJhbmtzIHVzZWQgdXAgdGhlaXIgZ29sZCBpbXBvcnQgcXVvdGEgaW4gdGhlIGZpcnN0IHRocmVlIG1vbnRocyBhbmQgd2VyZW7igJl0IGFibGUgdG8gZ2V0IHRoZSBwYXBlcndvcmsgZG9uZSBmYXN0IGVub3VnaCB0byBicmluZyBpbiBidWxsaW9uIGluIEFwcmlsLOKAnSBzYWlkIFRpYW4gUnVpLCB2aWNlIHByZXNpZGVudCBvZiB0aGUgcHJlY2lvdXMgbWV0YWxzIGRpdmlzaW9uIGF0IElOVEwgRkNTdG9uZSBUcmFkaW5nIENvLiDigJxXZSBtaWdodCBzZWUgaGlnaGVyIGltcG9ydHMgaW4gTWF5IGJlY2F1c2UgZGVtYW5kIHN1cmdlZCBhZnRlciB0aGUgcm91dC7igJ0gQnVsbGlvbiBvZiA5OS45OSBwZXJjZW50IHB1cml0eSBvbiB0aGUgU2hhbmdoYWkgR29sZCBFeGNoYW5nZSBkcm9wcGVkIDcuNCBwZXJjZW50IGluIEFwcmlsLCBhbmQgd2FzIGF0IDI3OC41MCB5dWFuIGEgZ3JhbSAoJDEsNDEzIGFuIG91bmNlKSB0b2RheS4gU3BvdCBHb2xkIFNwb3QgZ29sZCBmb3IgaW1tZWRpYXRlIGRlbGl2ZXJ5IHRyYWRlZCBhdCAkMSwzOTguNjUgYW4gb3VuY2UgYXQgNToyNSBwLm0uIFNoYW5naGFpIHRpbWUgYW5kIGhhcyBkZWNsaW5lZCAxNyBwZXJjZW50IHRoaXMgeWVhci4gQ2hpbmHigJlzIHB1cmNoYXNlcyBpbiBBcHJpbCB3ZXJlIDIyIHBlcmNlbnQgaGlnaGVyIHRoYW4gdGhlIDEwMyw2NDQuNSBraWxvZ3JhbXMgaW4gdGhlIHNhbWUgbW9udGggbGFzdCB5ZWFyLCBhY2NvcmRpbmcgdG8gdGhlIGRhdGEgZnJvbSB0aGUgSG9uZyBLb25nIENlbnN1cyBhbmQgU3RhdGlzdGljcyBEZXBhcnRtZW50LiBNYWlubGFuZCBDaGluYSBkb2VzbuKAmXQgcHVibGlzaCBzdWNoIGRhdGEuIEV4cG9ydHMgb2YgZ29sZCB0byBIb25nIEtvbmcgZnJvbSBDaGluYSB3ZXJlIDUwLDI0NCBraWxvZ3JhbXMgaW4gQXByaWwsIGFjY29yZGluZyB0byBhIHNlcGFyYXRlIFN0YXRpc3RpY3MgRGVwYXJ0bWVudCBzdGF0ZW1lbnQsIGRvd24gZnJvbSA5Myw0ODEga2lsb2dyYW1zIGluIE1hcmNoLCBhbmQgY29tcGFyZWQgd2l0aCAzNywzMTYga2lsb2dyYW1zIGluIEFwcmlsIDIwMTIuIFZvbHVtZXMgZm9yIHRoZSBzcG90IGNvbnRyYWN0IG9uIHRoZSBTaGFuZ2hhaSBHb2xkIEV4Y2hhbmdlLCBDaGluYeKAmXMgYmlnZ2VzdCBjYXNoIGJ1bGxpb24gbWFya2V0LCB0b3BwZWQgMzIzIHRvbnMgYmV0d2VlbiBBcHJpbCAxNiBhbmQgTWF5IDMsIGFjY29yZGluZyB0byBkYXRhIGNvbXBpbGVkIGJ5IEJsb29tYmVyZy4gVGhlIHRyYWRpbmcgdm9sdW1lIGV4Y2VlZGVkIDIwIHRvbnMgZXZlcnkgZGF5IGZyb20gQXByaWwgMTYgdG8gTWF5IDMsIHdoZW4gcHJpY2VzIGZlbGwgdG8gdGhlIGxvd2VzdCBzaW5jZSBBdWd1c3QgMjAxMC4gVGhhdOKAmXMgbW9yZSB0aGFuIGZvdXIgdGltZXMgdGhlIGRhaWx5IGF2ZXJhZ2UgaW4gMjAxMi4gVm9sdW1lcyByZWFjaGVkIGEgcmVjb3JkIDQzLDI3MiBraWxvZ3JhbXMgb24gQXByaWwgMjIuIENoaW5hIFByZW1pdW0gVGhlIHByZW1pdW0gZ29sZCBidXllcnMgaW4gQ2hpbmEgcGF5IHRvIHRha2UgaW1tZWRpYXRlIGRlbGl2ZXJ5IG9mIGJ1bGxpb24ganVtcGVkIGZvdXItZm9sZCBhcyBjb25zdW1lcnMgc3dhcm1lZCBqZXdlbHJ5IHNob3BzIGFmdGVyIHByaWNlcyBwbHVuZ2VkIGJ5IHRoZSBtb3N0IGluIHRocmVlIGRlY2FkZXMuIEluIHRoZSAxMiBtb250aHMgdGhyb3VnaCBBcHJpbCAxMiwgYmVmb3JlIHRoZSByb3V0LCBnb2xkIGZvciBpbW1lZGlhdGUgZGVsaXZlcnkgaW4gQ2hpbmEgdHJhZGVkIGF0IGFuIGF2ZXJhZ2UgcHJlbWl1bSBvZiAkNy4yMiBhbiBvdW5jZSB0byB0aGUgcHJldmFpbGluZyBMb25kb24gY291bnRlcnBhcnQsIGFjY29yZGluZyB0byBTaGFuZ2hhaSBHb2xkIEV4Y2hhbmdlIGRhdGEuIFRoZSBwcmVtaXVtIGhhcyBhdmVyYWdlZCAkMzEgYW4gb3VuY2Ugc2luY2UgbWlkLUFwcmlsLCBhcyBwaHlzaWNhbCBkZW1hbmQgc3VyZ2VkLCBhbmQgd2FzIGF0ICQxNS43NiBhdCA1OjI3IHAubS4gaW4gU2hhbmdoYWkuIFN0aWxsLCBnb2xkIGRlbWFuZCBpbiBDaGluYSwgdGhlIHdvcmxk4oCZcyBsYXJnZXN0IGNvbnN1bWVyIGFmdGVyIEluZGlhLCBtYXkgc2xvdyBhZnRlciBzdXJnaW5nIGluIEFwcmlsLCBzYWlkIFpoYW5nIEJpbmduYW4sIHNlY3JldGFyeS1nZW5lcmFsIG9mIHRoZSBDaGluYSBHb2xkIEFzc29jaWF0aW9uLiDigJxUaGUga2luZCBvZiBmcmVuemllZCBidXlpbmcgaW4gbGF0ZSBBcHJpbCBhbmQgZWFybHkgTWF5IHdvbuKAmXQgYmUgcmVwZWF0ZWQs4oCdIFpoYW5nIHNhaWQgb24gTWF5IDI4LCBhZGRpbmcgdGhhdCBzb21lIG9mIHRoZSBqZXdlbHJ5IGRlbWFuZCBlYXJtYXJrZWQgZm9yIGZlc3RpdmFscyBvciB3ZWRkaW5ncyBsYXRlciB0aGlzIHllYXIgbWF5IGhhdmUgYmVlbiBicm91Z2h0IGZvcndhcmQgdG8gQXByaWwgYW5kIE1heSBhZnRlciBwcmljZXMgZmVsbC4gQ2hpbmHigJlzIGRvbWVzdGljIGNvbnN1bXB0aW9uIHRvdGFsZWQgNzc2LjEgdG9ucyBpbiAyMDEyLCBkb3duIGZyb20gNzc5LjggdG9ucyB0aGUgcHJldmlvdXMgeWVhciwgYWNjb3JkaW5nIHRvIHRoZSBwcm9kdWNlci1mdW5kZWQgV29ybGQgR29sZCBDb3VuY2lsLiBDaGluYSBhbmQgSW5kaWEgYWNjb3VudCBmb3IgbW9yZSB0aGFuIGhhbGYgb2YgZ2xvYmFsIGRlbWFuZC4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8StLSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDFlOTAyYTJhZWJlNzI0YmM=</field><field name="symbol" class="java.lang.String">rO0ABXQABEdPTEQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8X2xCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBTYeuFHrhS</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBT2j1wo9cK</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBTNcKPXCj2</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBTxR64UeuF</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBTeuFHrhR7</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAiHNA==</field><field name="id" class="java.lang.String">rO0ABXQAEDZjNThmZWIyMzlmN2QxYjk=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKwuAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQ5MzY=</field><field name="title" class="java.lang.String">rO0ABXQAO0dvbGQgUHJpY2luZyBEcmF3cyBTY3J1dGlueSBBbWlkIEtub3dsZWRnZSBUaWVkIHRvIEVydXB0aW9u</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKS/isAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDAwMDFhOTM0YjlmNWJiYTg=</field><field name="symbol" class="java.lang.String">rO0ABXQACUJOUy1QTi5UTw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKYJIcAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6GZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6Y9cKPXCk</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6GZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6JmZmZmZm</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4jMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAARlA==</field><field name="id" class="java.lang.String">rO0ABXQAEDNiNjEzMTdmYTJkZThlY2I=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMx8AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDYyOTY=</field><field name="title" class="java.lang.String">rO0ABXQAQEdvbGQgQm9ycm93aW5nIENvc3RzIFJlbWFpbiBOZWFyIDQgMS8yLVllYXIgSGlnaCBvbiBUaWdodCBTdXBwbHk=</field><field name="content" class="java.lang.String">rO0ABXQODlRoZSBjb3N0IG9mIGJvcnJvd2luZyBnb2xkIGhlbGQgbmVhciBhIDQgMS8yLXllYXIgaGlnaCBpbiBMb25kb24gYXMgVS5TLiBmdXR1cmVzIG1vdmVkIGludG8gYmFja3dhcmRhdGlvbiB0aGlzIG1vbnRoLCBhIHNpZ25hbCB0aGF0IG5lYXItdGVybSBzdXBwbGllcyBhcmUgdGlnaHRlbmluZyBhdCBhIHRpbWUgd2hlbiBwcmljZXMgZ2FpbmVkIG9uIG1vcmUgcGh5c2ljYWwgZGVtYW5kLiBUaGUgb25lLW1vbnRoIGdvbGQgZm9yd2FyZCBvZmZlcmVkIHJhdGUsIHdoaWNoIHNob3dzIHRoZSBpbnRlcmVzdCByYXRlIGF0IHdoaWNoIGRlYWxlcnMgd2lsbCBsZW5kIG1ldGFsIGZvciBkb2xsYXJzLCBoYXMgYmVlbiBuZWdhdGl2ZSBzaW5jZSBKdWx5IDgsIHB1c2hpbmcgb25lLW1vbnRoIGxlYXNlIHJhdGVzIHRvIDAuMzA2NyBwZXJjZW50IG9uIEF1Zy4gOCwgdGhlIGhpZ2hlc3Qgc2luY2UgRGVjZW1iZXIgMjAwOC4gVGhlIGNvc3Qgb2YgYm9ycm93aW5nIHdhcyBhdCAwLjI5MjkgcGVyY2VudCB0b2RheSwgZGF0YSBjb21waWxlZCBieSBCbG9vbWJlcmcgc2hvd2VkLiBBdWd1c3QgZnV0dXJlcyBvbiB0aGUgQ29tZXggaW4gTmV3IFlvcmsgcm9zZSBhYm92ZSB0aGUgRGVjZW1iZXIgY29udHJhY3QgZm9yIHRoZSBmaXJzdCB0aW1lIG9uIEF1Zy4gMi4gU3BlY3VsYXRvcnPigJkgYmV0cyBvbiBwcmljZSBkZWNsaW5lcyBnYWluZWQgZWlnaHRmb2xkIHNpbmNlIE5vdmVtYmVyIGFzIHRoZSBtZXRhbCBoZWFkcyBmb3IgaXRzIGZpcnN0IGFubnVhbCBkcm9wIGluIDEzIHllYXJzIGFmdGVyIHNvbWUgaW52ZXN0b3JzIGxvc3QgZmFpdGggaW4gZ29sZCBhcyBhIHN0b3JlIG9mIHZhbHVlLiBCdWxsaW9uIHJlYm91bmRlZCAxNiBwZXJjZW50IGZyb20gYSAzNC1tb250aCBsb3cgb24gSnVuZSAyOCBhcyBsb3dlciBwcmljZXMgc3B1cnJlZCBtb3JlIHB1cmNoYXNlcyBvZiBqZXdlbHJ5LCBiYXJzIGFuZCBjb2lucyBmcm9tIENoaW5hIHRvIFR1cmtleS4gUmlzaW5nIGJvcnJvd2luZyBjb3N0cyDigJxjb3VsZCBiZSBiZWNhdXNlIG9mIGRlbWFuZCBmb3IgdGhlIG1ldGFsIGluIHRoZSBzaG9ydCB0ZXJtIGxpbmtlZCB0byB0aGUgcGh5c2ljYWwgbWFya2V0LOKAnSBSb3NzIE5vcm1hbiwgY2hpZWYgZXhlY3V0aXZlIG9mZmljZXIgb2YgU2hhcnBzIFBpeGxleSBMdGQuLCBhIGJyb2tlcmFnZSBoYW5kbGluZyBwaHlzaWNhbCBidWxsaW9uIGluIExvbmRvbiwgc2FpZCB0b2RheSBieSBwaG9uZS4g4oCcV2hlbiB5b3UgcnVuIGEgc2hvcnQgcG9zaXRpb24gaW4gZ29sZCwgeW914oCZcmUgc2VsbGluZyB3aGF0IHlvdSBoYXZlbuKAmXQgZ290LCBhbmQgdGhlcmVmb3JlIHlvdSBuZWVkIHRvIGJvcnJvdyBpdC4gSXQgbWF5IHNpbXBseSBiZSBhIHN5bXB0b20gb2YgdGhlIGZhY3QgdGhhdCB0aGVyZSBhcmUgYSB2ZXJ5IGxhcmdlIG51bWJlciBvZiBzaG9ydHMgb3V0IHRoZXJlIGluIHRoZSBtYXJrZXQu4oCdIEdvbGQgUHJpY2UgR29sZCBmb3IgaW1tZWRpYXRlIGRlbGl2ZXJ5IHRyYWRlZCBhdCAkMSwzNjYuNDUgYW4gb3VuY2UgYnkgMjowOCBwLm0uIGluIExvbmRvbiwgc2V0IGZvciBhbiAxOCBwZXJjZW50IHNsaWRlIHRoaXMgeWVhci4gUHJpY2VzIHJlYWNoZWQgYSB0d28tbW9udGggaGlnaCBvZiAkMSwzODQuNTUgeWVzdGVyZGF5LCByZWJvdW5kaW5nIGZyb20gYXMgbG93IGFzICQxLDE4MC41MCBpbiBKdW5lLiBDb25zdW1lciBkZW1hbmQgZm9yIGdvbGQganVtcGVkIDcxIHBlcmNlbnQgaW4gSW5kaWEsIGxhc3QgeWVhcuKAmXMgYmlnZ2VzdCBidXllciwgaW4gdGhlIHNlY29uZCBxdWFydGVyIGFuZCBnYWluZWQgODcgcGVyY2VudCBpbiBDaGluYSwgdGhlIG5leHQtbGFyZ2VzdCwgaGVscGluZyB0byBwdXNoIGdsb2JhbCBiYXIgYW5kIGNvaW4gcHVyY2hhc2VzIHRvIGEgcmVjb3JkLCB0aGUgV29ybGQgR29sZCBDb3VuY2lsIHNhaWQgQXVnLiAxNS4gUHJpY2VzIG1heSByZWFjaCAkMSw0NTAgYW4gb3VuY2UgYnkgdGhlIGVuZCBvZiAyMDEzIG9uIHJpc2luZyBkZW1hbmQgaW4gQXNpYSwgYWNjb3JkaW5nIHRvIHRoZSBtZWRpYW4gb2YgZXN0aW1hdGVzIGluIGEgc3VydmV5IG9mIDExIHRyYWRlcnMsIGpld2VsZXJzIGFuZCBhbmFseXN0cyB3aG8gYXR0ZW5kZWQgdGhlIEluZGlhIEdvbGQgQ29udmVudGlvbiBpbiBKYWlwdXIsIEluZGlhLCBvbiBBdWcuIDE2LTE3LiBDb21leCBmdXR1cmVzIGVudGVyZWQgYmFja3dhcmRhdGlvbiwgd2hlbiBuZWFyYnkgY29udHJhY3RzIGFyZSBtb3JlIGV4cGVuc2l2ZSB0aGFuIGxvbmdlci1kYXRlZCBmdXR1cmVzLCBhcyBidWxsaW9uIHN0b2NrcGlsZXMgdHJhY2tlZCBieSB0aGUgYm91cnNlIGZlbGwgdG8gdGhlIGxvd2VzdCBpbiBtb3JlIHRoYW4gc2V2ZW4geWVhcnMgb24gSnVseSAyMi4gVGhlIEF1Z3VzdCBhbmQgRGVjZW1iZXIgY29udHJhY3RzIHdlcmUgbmVhciB0aGUgc2FtZSBwcmljZSB0b2RheS4gU2FsZXMgZnJvbSBleGNoYW5nZS10cmFkZWQgcHJvZHVjdHMgc2xvd2VkIGV2ZXJ5IG1vbnRoIHNpbmNlIGxpcXVpZGF0aW9ucyBwZWFrZWQgaW4gQXByaWwsIGRhdGEgY29tcGlsZWQgYnkgQmxvb21iZXJnIHNob3cuIFNwZWN1bGF0b3Jz4oCZIFBvc2l0aW9ucyBNb25leSBtYW5hZ2Vyc+KAmSBiZXRzIG9uIGxvd2VyIHByaWNlcyBmZWxsIDI3IHBlcmNlbnQgc2luY2UgcmVhY2hpbmcgYSByZWNvcmQgb24gSnVseSA5LCBVLlMuIENvbW1vZGl0eSBGdXR1cmVzIFRyYWRpbmcgQ29tbWlzc2lvbiBkYXRhIHNob3cuIFRoYXQgaGVscGVkIGluY3JlYXNlIHRoZSBuZXQtbG9uZyBwb3NpdGlvbiwgb3IgYnVsbGlzaCB3YWdlciwgYnkgNTkgcGVyY2VudCBzaW5jZSB0aGVuLiBUaGUgb25lLW1vbnRoIGxlYXNlIHJhdGUgaW4gTG9uZG9uIGF2ZXJhZ2VkIDAuMjUyIHBlcmNlbnQgc2luY2UgdGhlIHN0YXJ0IG9mIEp1bHksIGNvbXBhcmVkIHdpdGggMC4wMDYyIHBlcmNlbnQgaW4gdGhlIHByaW9yIGZpdmUgeWVhcnMuIFJpc2luZyByYXRlcyBtYXkgaW5kaWNhdGUgYSBzY2FyY2l0eSBvZiBtZXRhbCwgYWNjb3JkaW5nIHRvIHRoZSBMb25kb24gQnVsbGlvbiBNYXJrZXQgQXNzb2NpYXRpb24uIOKAnEJvcnJvd2luZyBpbiB0aGUgbGVuZGluZyBtYXJrZXQgY2FuIGJlIHF1aXRlIGNvbXBsZXgs4oCdIHNhaWQgTm9ybWFuIGF0IFNoYXJwcyBQaXhsZXkuIOKAnFRoZSBib3Jyb3dpbmcgbWFya2V0IGlzIG5vcm1hbGx5IGNoZWFwLCBzaW1wbHkgYmVjYXVzZSB0aGVyZeKAmXMgYSBsb3Qgb2YgbGVuZGVycyBhbmQgcmVsYXRpdmVseSBmZXcgYm9ycm93ZXJzLCB0aGUgbGVuZGVycyBiZWluZyBjZW50cmFsIGJhbmtzIGFuZCB0aGUgYm9ycm93ZXJzIGJlaW5nIGpld2VscnkgcHJvZHVjZXJzLCB0eXBpY2FsbHksIGFuZCBnb2xkIG1pbmVycyB3aG8gYXJlIGhlZGdpbmcu4oCdIENlbnRyYWwgYmFua3MgYW5kIGdvdmVybm1lbnQgaW5zdGl0dXRpb25zIGhvbGQgYWJvdXQgMzEsOTEwIG1ldHJpYyB0b25zIG9mIGJ1bGxpb24gaW4gcmVzZXJ2ZXMsIGVxdWFsIHRvIGFsbW9zdCAxMiB5ZWFycyBvZiBnbG9iYWwgbWluZSBwcm9kdWN0aW9uLCBhY2NvcmRpbmcgdG8gdGhlIExvbmRvbi1iYXNlZCBXR0MgYW5kIEJhcmNsYXlzIFBsYy4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUCaGASAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDBmZTEzNjVhNTRmODc0ODE=</field><field name="symbol" class="java.lang.String">rO0ABXQABEdPTEQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUCfPmCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBTq4UeuFHs</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBT3XCj1wo9</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBTUKPXCj1x</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBTXXCj1wo9</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBTFHrhR64U</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAuJIA==</field><field name="id" class="java.lang.String">rO0ABXQAEDAzYzFhMzNiNzkwMTFiZTA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJcuAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDYzNDg=</field><field name="title" class="java.lang.String">rO0ABXQAO0dvbGQgVGF4IEluY3JlYXNlLCBGZXN0aXZhbCBEZW1hbmQgTWF5IFNwdXIgSW5kaWEgU211Z2dsaW5n</field><field name="content" class="java.lang.String">rO0ABXQT1UdvbGQgcHJlbWl1bXMgaW4gSW5kaWEgaGF2ZSBqdW1wZWQgdG8gYSByZWNvcmQgYWZ0ZXIgYmFua3MgYW5kIHRyYWRlcnMgc3VzcGVuZGVkIGltcG9ydHMgc2luY2UgdGhlIFJlc2VydmUgQmFuayBvZiBJbmRpYSBtYWRlIGl0IG1hbmRhdG9yeSBvbiBKdWx5IDIyIGZvciBzaGlwcGVycyB0byBzZXQgYXNpZGUgMjAgcGVyY2VudCBvZiBzaGlwbWVudHMgZm9yIHJlLWV4cG9ydCBhcyBqZXdlbHJ5IGFuZCB0aGUgaW5jcmVhc2UgaW4gdGFyaWZmIHRvIDEwIHBlcmNlbnQgZnJvbSA4IHBlcmNlbnQgd2lsbCBmdXJ0aGVyIGNyaW1wIHN1cHBsaWVzLCBzYWlkIEhhcmVzaCBTb25pLCBOZXcgRGVsaGktYmFzZWQgY2hhaXJtYW4gb2YgdGhlIEFsbCBJbmRpYSBHZW1zICYgSmV3ZWxsZXJ5IFRyYWRlIEZlZGVyYXRpb24uIOKAnFNtdWdnbGluZyBvZiBnb2xkIHdpbGwgaW5jcmVhc2UgYW5kIHRoZSBvcmdhbml6ZWQgaW5kdXN0cnkgd2lsbCBiZSBpbiBkaXNhcnJheSzigJ0gc2FpZCBTb25pLCB3aG9zZSBmZWRlcmF0aW9uIHJlcHJlc2VudHMgYWJvdXQgMzAwLDAwMCBqZXdlbGVycyBhbmQgYnVsbGlvbiBkZWFsZXJzLiDigJxHb29kcyB3aWxsIGJlIGtlcHQgdW5vZmZpY2lhbGx5IGFuZCB0aGUgc2l0dWF0aW9uIHdpbGwgYmUgdW5jb250cm9sbGFibGUuIEpld2VscnkgcHJpY2VzIHdpbGwgcmlzZS7igJ0gSW5kaWEgaW5jcmVhc2VkIHRheGVzIG9uIGltcG9ydHMgb2YgZ29sZCwgc2lsdmVyIGFuZCBwbGF0aW51bSB0byB0YWNrbGUgYSByZWNvcmQgY3VycmVudC1hY2NvdW50IGRlZmljaXQgdGhhdOKAmXMgd2Vha2VuZWQgdGhlIHJ1cGVlIHRvIGFuIGFsbC10aW1lIGxvdy4gT3ZlcnNlYXMgcHVyY2hhc2VzIHN1cmdlZCA4NyBwZXJjZW50IHRvIDM4MyBtZXRyaWMgdG9ucyBpbiB0aGUgZm91ciBtb250aHMgdGhyb3VnaCBKdWx5IGZyb20gYSB5ZWFyIGVhcmxpZXIgYWZ0ZXIgYSBzbHVtcCBpbiBidWxsaW9uIHByaWNlcyBzcHVycmVkIGRlbWFuZCBmb3IgamV3ZWxyeSwgYmFycyBhbmQgY29pbnMuIEluY3JlYXNlZCBzbXVnZ2xpbmcgbWF5IHVuZGVybWluZSBnb3Zlcm5tZW504oCZcyBlZmZvcnRzIHRvIGN1cmIgZGVtYW5kIGFuZCBodXJ0IHNhbGVzIGF0IHJldGFpbGVycyBpbmNsdWRpbmcgQmFuZ2Fsb3JlLWJhc2VkIFRpdGFuIEluZHVzdHJpZXMgTHRkLiBFZmZpY2FjeSBRdWVzdGlvbmVkIOKAnFRob3VnaCBtZWFzdXJlcyBhaW1lZCBhdCBnb2xkIGxvb2sgdGhlIGVhc2llc3QgdG8gaW1wbGVtZW50LCB0aGUgZWZmaWNhY3kgb2Ygc3VjaCBtZWFzdXJlcyB3aWxsIGFsd2F5cyByZW1haW4gaW4gcXVlc3Rpb24s4oCdIElDSUNJIFNlY3VyaXRpZXMgTHRkLiBzYWlkIGluIGEgcmVzZWFyY2ggcmVwb3J0LiDigJxGdXJ0aGVyIGN1cmJzIG9uIGdvbGQgaW1wb3J0cyBjb3VsZCBsZWFkIHRvIGFsdGVybmF0ZSBjaGFubmVscyBkZXZlbG9waW5nLCBhcGFydCBmcm9tIGNhdXNpbmcgc2V2ZXJlIHN0cmVzcyB0byB0aGUgamV3ZWxyeSBmaXJtcyBhbmQgY29uc2VxdWVudGx5IHVuZW1wbG95bWVudC7igJ0gVGhlIHRhcmlmZnMgb24gZ29sZCBhbmQgcGxhdGludW0gaW1wb3J0cyB3ZXJlIGluY3JlYXNlZCB0byAxMCBwZXJjZW50IGZyb20gYXMgbG93IGFzIDQgcGVyY2VudCBhdCB0aGUgc3RhcnQgb2YgdGhlIHllYXIsIHdoaWxlIHRoZSBsZXZ5IG9uIHNpbHZlciB3YXMgYm9vc3RlZCB0byAxMCBwZXJjZW50IGZyb20gNiBwZXJjZW50LCB0aGUgTWluaXN0cnkgb2YgRmluYW5jZSBzYWlkLiBUYXhlcyBvbiBzaGlwbWVudHMgb2YgZ29sZCBjb25jZW50cmF0ZXMsIG9yZXMgYW5kIGRvcmUgYmFycyB3aWxsIHJpc2UgdG8gOCBwZXJjZW50IGZyb20gNiBwZXJjZW50LCB3aGlsZSB0aGUgZHV0eSBvbiBzaWx2ZXIgZG9yZSBiYXJzIHdpbGwgY2xpbWIgdG8gNyBwZXJjZW50IGZyb20gMyBwZXJjZW50LCBpdCBzYWlkLiBGaW5hbmNlIE1pbmlzdGVyIFBhbGFuaWFwcGFuIENoaWRhbWJhcmFtIHBsYW5zIHRvIGN1cnRhaWwgaW1wb3J0cyB0byA4NTAgdG9ucyB0aGlzIHllYXIgdG8gcmVkdWNlIHRoZSBjdXJyZW50LWFjY291bnQgZGVmaWNpdCBhbmQgYm9vc3QgY2FwaXRhbCBpbmZsb3dzIGJ5IGFsbG93aW5nIHN0YXRlLXJ1biBmaW5hbmNpYWwgY29tcGFuaWVzIHRvIGlzc3VlIOKAnHF1YXNpLXNvdmVyZWlnbuKAnSBib25kcyB0byBmaW5hbmNlIGluZnJhc3RydWN0dXJlIGludmVzdG1lbnRzLiBUaGUgZGVmaWNpdCwgbWFpbmx5IGZ1ZWxlZCBieSBjcnVkZSBvaWwgYW5kIGJ1bGxpb24gaW1wb3J0cywgaXMgdGhlIGJpZ2dlc3QgcmlzayB0byB0aGUgJDEuOSB0cmlsbGlvbiBlY29ub215LCBhY2NvcmRpbmcgdG8gdGhlIGNlbnRyYWwgYmFuay4gVGhlIHJ1cGVlIGZlbGwgdG8gYSByZWNvcmQgbG93IG9mIDYxLjgwNTAgcGVyIGRvbGxhciBBdWcuIDYuIEZlc3RpdmFsIERlbWFuZCBJbXBvcnRzIGJ5IGJhbmtzIGFuZCBvdGhlciB0cmFkZXJzIGRlc2lnbmF0ZWQgdG8gc2hpcCBnb2xkIG1heSBub3QgYmUgbW9yZSB0aGFuIDE1MCB0b25zIGluIHRoZSBzaXggbW9udGhzIHRocm91Z2ggRGVjZW1iZXIgZnJvbSBhYm91dCA0NzggdG9ucyBhIHllYXIgZWFybGllciwgYWNjb3JkaW5nIHRvIEJhY2hocmFqIEJhbWFsd2EsIGEgZGlyZWN0b3IgYXQgdGhlIGpld2VscnkgZmVkZXJhdGlvbi4g4oCcR292ZXJubWVudOKAmXMgaW50ZW50aW9uIGlzIHRvIGVuc3VyZSB0aGF0IGdvbGQgaW1wb3J0cyBhcmUgcmVkdWNlZCzigJ0gc2FpZCBSYWplc2ggTWVodGEsIGNoYWlybWFuIG9mIFJhamVzaCBFeHBvcnRzIEx0ZC4g4oCcT25jZSB0aGUgZmVzdGl2YWwgc2Vhc29uIHN0YXJ0cyB0aGVyZSBjb3VsZCBiZSBhIHNob3J0YWdlIGluIHRoZSBtYXJrZXQuIFdpdGggdGhpcyBkdXR5IGluY3JlYXNlIG1vcmUgaW1wb3J0cyBmcm9tIHRoZSBsZWdpdGltYXRlIGNoYW5uZWxzIHdpbGwgZ2V0IGludG8gdGhlIGlsbGVnaXRpbWF0ZSBjaGFubmVsLuKAnSBHb2xkIGlzIGJvdWdodCBpbiBJbmRpYSBkdXJpbmcgZmVzdGl2YWxzLCBmb3IgbWFycmlhZ2VzIGFzIHBhcnQgb2YgdGhlIGJyaWRhbCB0cm91c3NlYXUgYW5kIGdpZnRlZCBpbiB0aGUgZm9ybSBvZiBqZXdlbHJ5IGJ5IHJlbGF0aXZlcy4gVGhlIGZlc3RpdmFsIHNlYXNvbiBpbiBJbmRpYSBydW5zIGZyb20gQXVndXN0IHRvIE9jdG9iZXIgZm9sbG93ZWQgYnkgdGhlIHdlZGRpbmcgc2Vhc29uIGZyb20gTm92ZW1iZXIgdG8gRGVjZW1iZXIgYW5kIGZyb20gbGF0ZSBNYXJjaCB0aHJvdWdoIGVhcmx5IE1heS4gT3JnYW5pemVkIEdhbmdzIFBvb3IgSW5kaWFuIGxhYm9yZXJzIHdvcmtpbmcgaW4gdGhlIE1pZGRsZSBFYXN0IGFyZSBhY3RpbmcgYXMgY291cmllcnMgZm9yIG9yZ2FuaXplZCBnYW5ncyBpbiByZXR1cm4gZm9yIGEgdGlja2V0IGhvbWUgYW5kIGEgZmV3IHRob3VzYW5kIHJ1cGVlcywgYWNjb3JkaW5nIHRvIFJpc2hpIFlhZGF2LCBhc3Npc3RhbnQgY29tbWlzc2lvbmVyIGF0IHRoZSBNdW1iYWkgY3VzdG9tcyBkZXBhcnRtZW504oCZcyBBaXIgSW50ZWxsaWdlbmNlIFVuaXQuIFRoZSBnYW5ncyBzZWVrIHRvIGJlbmVmaXQgYnkgc2VsbGluZyB0aGF0IHNtdWdnbGVkIGJ1bGxpb24gdG8gdHJhZGVycyBhbmQgbW9tLWFuZC1wb3AgamV3ZWxyeSBzdG9yZXMsIHdobyBiZW5lZml0IGZyb20gY2hlYXBlciBzdXBwbGllcy4gQXQgTXVtYmFpIGFpcnBvcnQsIGN1c3RvbXMgYWdlbnRzIGNvbmZpc2NhdGVkIGdvbGQgd29ydGggOTMgbWlsbGlvbiBydXBlZXMgZnJvbSBBcHJpbCB0byBKdW5lLCBhbG1vc3QgYXMgbXVjaCB0aGV5IG5hYmJlZCBpbiB0aGUgd2hvbGUgb2YgdGhlIGxhc3QgeWVhciwgYWNjb3JkaW5nIHRvIFlhZGF2LiBTcG90IEdvbGQgd2FzIGxpdHRsZSBjaGFuZ2VkIGF0ICQxLDMyMS4zMCBhbiBvdW5jZSBhdCA4OjMwIGEubS4gaW4gTXVtYmFpLiBUaGUgbWV0YWwgcmVib3VuZGVkIDEyIHBlcmNlbnQgc2luY2UgcmVhY2hpbmcgYSAzNC1tb250aCBsb3cgb2YgJDEsMTgwLjUwIG9uIEp1bmUgMjguIEdvbGQgZm9yIGRlbGl2ZXJ5IGluIE9jdG9iZXIgZmVsbCAwLjEgcGVyY2VudCB0byAyOCw4ODIgcnVwZWVzICgkNDcwKSBwZXIgMTAgZ3JhbXMgb24gdGhlIE11bHRpIENvbW1vZGl0eSBFeGNoYW5nZSBvZiBJbmRpYSBMdGQuIOKAmEh1bmdyeSBTdG9tYWNoc+KAmSBDb25zdW1wdGlvbiBpbiBJbmRpYSwgd2hpY2ggaW1wb3J0cyBhbG1vc3QgYWxsIHRoZSBidWxsaW9uIGl0IG5lZWRzLCBhY2NvdW50ZWQgZm9yIDIwIHBlcmNlbnQgb2YgZ2xvYmFsIGRlbWFuZCBpbiAyMDEyLCBhY2NvcmRpbmcgdG8gZGF0YSBmcm9tIHRoZSBnb2xkIGNvdW5jaWwuIEJ1bGxpb24gaW1wb3J0cyB3ZXJlIDg0NSB0b25zIGluIHRoZSAxMiBtb250aHMgZW5kZWQgTWFyY2ggMzEsIHdoaWxlIHNpbHZlciBzaGlwbWVudHMgdG90YWxlZCAxLDk2MyB0b25zLCBhY2NvcmRpbmcgdG8gdGhlIE1pbmlzdHJ5IG9mIEZpbmFuY2UuIFRoZSBnb3Zlcm5tZW50IGFsc28gaW5jcmVhc2VkIHRoZSBleGNpc2UgZHV0eSBvbiByZWZpbmVkIGdvbGQgdG8gOSBwZXJjZW50IGZyb20gNyBwZXJjZW50LCBhbmQgdGhhdCBvZiBzaWx2ZXIgdG8gOCBwZXJjZW50IGZyb20gNCBwZXJjZW50LCB0aGUgbWluaXN0cnkgc2FpZC4g4oCcV2UgY2Fubm90IHByZWFjaCByZWxpZ2lvbiB0byBtZW4gd2l0aCBodW5ncnkgc3RvbWFjaHMs4oCdIEJoYXJnYXYgVmFpZHlhLCBhIGRpcmVjdG9yIGF0IEIuTi4gVmFpZHlhICYgQXNzb2NpYXRlcywgYSBNdW1iYWktYmFzZWQgY29tcGFueSB3aGljaCBhZHZpc2VzIGdvbGQgdHJhZGVycy4g4oCcVGhlcmUgYXJlIG5vIHN1cHBsaWVzIGluIHRoZSBvZmZpY2lhbCBjaGFubmVsIGp1c3Qgbm93LiBTbXVnZ2xpbmcgd2lsbCBiZSBvbiB0aGUgcmlzZSBhbmQgSSBob3BlIHdlIGFyZSBub3QgZ29pbmcgYmFjayB0byB0aGUgR29sZCBDb250cm9sIEFjdCBkYXlzLOKAnSBoZSBzYWlkIHJlZmVycmluZyB0byBhIGxhdyB0aGF0IGJhcnJlZCBidWxsaW9uIGltcG9ydHMsIGV4cG9ydHMgYW5kIG1hbnVmYWN0dXJlIGFuZCBzYWxlIG9mIGpld2VscnkgYWJvdmUgMTQgY2FyYXRzIGZvciBhYm91dCB0aHJlZSBkZWNhZGVzIGZyb20gMTk2OC4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUB7MdyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDQ1NDhmMWNkNGM4ZDI3YzI=</field><field name="symbol" class="java.lang.String">rO0ABXQABk1DWC5OUw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUCAWDiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBvtMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBvtMzMzMzN</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBvtMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBvtMzMzMzN</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBuTMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDBkOGQ4MzNkZDZhN2M1MjE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKuxAAAA==</field></document></documents><date>2015-05-07T05:39:53-0500</date></cacheEntry>
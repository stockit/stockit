<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0B1pFdXJvcGVhbiBQYXJsaWFtZW50IGxhd21ha2VycyBhbmQgbmF0aW9uYWwgb2ZmaWNpYWxzIGZhaWxlZCB0byBjbGluY2ggYSBkZWFsIHRvIG92ZXJoYXVsIHRoZSBibG9jcyBmaW5hbmNpYWwgbWFya2V0IHJ1bGVib29rIHJlbGlucXVpc2hpbmcgdGhlaXIgZ29hbCBvZiBmaW5kaW5nIGFuIGFjY29yZCBieSB5ZWFyZW5kIE5lZ290aWF0aW9ucyBicm9rZSBkb3duIGluIEJydXNzZWxzIFdlZG5lc2RheSBvdmVyIHRoZSBzY29wZSBvZiBwbGFubmVkIGN1cmJzIG9uIGNvbW1vZGl0eSBkZXJpdmF0aXZlIHNwZWN1bGF0aW9uIGFuZCBvbiBpbnZlc3RvciBwcm90ZWN0aW9uIHJ1bGVzIFN2ZW4gR2llZ29sZCBhIEdlcm1hbiBsYXdtYWtlciByZXByZXNlbnRpbmcgdGhlIGFzc2VtYmx5cyBHcmVlbiBncm91cCBpbiB0aGUgdGFsa3Mgc2FpZCBpbiBhIHRlbGVwaG9uZSBpbnRlcnZpZXcgRGlzY3Vzc2lvbnMgd2lsbCByZXN1bWUgb24gSmFuIDE0IGluIFN0cmFzYm91cmcgRnJhbmNlIGhlIHNhaWQgV2UgYXJlIGFsbW9zdCB0aGVyZSBXaXRoIGEgbGl0dGxlIGJpdCBtb3JlIHdvcmsgb24gdGhlIDE0dGggd2UgaG9wZSBhIGRlYWwgY2FuIGJlIHJlYWNoZWQgQ2hhbnRhbCBIdWdoZXMgYSBzcG9rZXN3b21hbiBmb3IgTWljaGVsIEJhcm5pZXIgdGhlIEVVcyBmaW5hbmNpYWwgc2VydmljZXMgY2hpZWYgc2FpZCBieSB0ZWxlcGhvbmUgQ3VyYmluZyBjb21tb2RpdHkgZGVyaXZhdGl2ZSBzcGVjdWxhdGlvbiBoYXMgYmVlbiBhIHByaW9yaXR5IGZvciBCYXJuaWVyIHRocm91Z2hvdXQgaGlzIG1hbmRhdGUgc2hlIHNhaWQgVGhlIEVVcyBiaWQgdG8gdXBkYXRlZCBpdHMgbWFya2V0IGxlZ2lzbGF0aW9uIGlzIHRoZSBjZW50ZXJwaWVjZSBvZiB0aGUgYmxvY3MgZWZmb3J0cyB0byBpbXBsZW1lbnQgYWdyZWVtZW50cyByZWFjaGVkIGJ5IHRoZSBHcm91cCBvZiAyMCBuYXRpb25zIGluIHRoZSB3YWtlIG9mIHRoZSBmaW5hbmNpYWwgY3Jpc2lzIHRoYXQgdG9wcGxlZCBMZWhtYW4gQnJvdGhlcnMgSG9sZGluZ3MgSW5jIEJhcm5pZXIgaGFzIHNhaWQgdGhlIHVwZGF0ZWQgcnVsZXMgYXJlIG5lZWRlZCB0byByZWluIGluIHNwZWN1bGF0aXZlIHRyYWRpbmcgYWN0aXZpdGllcyBhbmQgdG8gaW1wcm92ZSB0aGUgc3RydWN0dXJlIG9mIHRoZSBtYXJrZXQgQmFybmllcnMgcHJvcG9zYWxzIHB1Ymxpc2hlZCBpbiAyMDExIG11c3QgYmUgbmVnb3RpYXRlZCBhbmQgYXBwcm92ZWQgYnkgbmF0aW9uYWwgZ292ZXJubWVudHMgYW5kIGJ5IHRoZSBFdXJvcGVhbiBwYXJsaWFtZW50IGJlZm9yZSB0aGV5IGNhbiB0YWtlIGVmZmVjdCBOZWdvdGlhdG9ycyBjbGFzaGVkIG92ZXIgdGhlIGRldGFpbHMgb2YgYSBwbGFuIHRvIHNldCBwb3NpdGlvbiBsaW1pdHMgY2FwcGluZyBpbmRpdmlkdWFsIHRyYWRlcnMgYWN0aXZpdHkgb24gdGhlIGNvbW1vZGl0eSBkZXJpdmF0aXZlcyBtYXJrZXRzIEdpZWdvbGQgc2F5cyBUaGUgc3BhdCBjZW50ZXJlZCBvbiB0aGUgcmFuZ2Ugb2YgY29udHJhY3RzIHRoYXQgc2hvdWxkIGJlIGNvdmVyZWQgYnkgdGhlIGN1cmJzIFRoZSBkZWFsIHVwZGF0ZXMgZXhpc3RpbmcgRVUgbGVnaXNsYXRpb24gZnJvbSAyMDA0IGtub3duIGFzIHRoZSBNYXJrZXRzIGluIEZpbmFuY2lhbCBJbnN0cnVtZW50cyBvciBNaWZpZCBXaGlsZSB0aGF0IGxlZ2lzbGF0aW9uIGZvY3VzZWQgbWFpbmx5IG9uIHRoZSBlcXVpdGllcyBtYXJrZXRzIGFuZCBtZWFzdXJlcyB0byBicmVhayBkb3duIG1vbm9wb2xpZXMgZW5qb3llZCBieSBuYXRpb25hbCBleGNoYW5nZXMgdGhlIHByb3Bvc2VkIG92ZXJoYXVsIGlzIGZhciBicm9hZGVyIGluY2x1ZGluZyBzd2VlcGluZyBtZWFzdXJlcyBmb3IgZGVyaXZhdGl2ZXMgYW5kIGZpeGVkIGluY29tZSBtYXJrZXRzdAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAb2FydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2UsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEzLTAzLTI3VDAwOjAwOjAwWiBUTyAyMDEzLTEyLTAzVDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDMxNDg=</field><field name="title" class="java.lang.String">rO0ABXQAMEVVIFNvZnRlbnMgTmV3IFJ1bGVzIHRvIFRhY2tsZSBCZW5jaG1hcmsgUmlnZ2luZw==</field><field name="content" class="java.lang.String">rO0ABXQOAUV1cm9wZWFuIFVuaW9uIHJlZ3VsYXRvcnMgcHJvcG9zZWQgbmV3IHJ1bGVzIG9uIFdlZG5lc2RheSBvbiBob3cgY29tbW9kaXR5LXByaWNlIGFuZCBpbnRlcmVzdC1yYXRlIGJlbmNobWFya3MgYXJlIHNldCwgYnV0IHRoZSBwbGFucyBhcmUgYSBwYXJpbmcgYmFjayBvZiBvcmlnaW5hbCBhbWJpdGlvbnMgZm9yIGdyZWF0ZXIgRVUgb3ZlcnNpZ2h0IG9mIHRoZSBtdWx0aS10cmlsbGlvbi1ldXJvIG1hcmtldHMuIFRoZSBkcmFmdCBsYXcsIHByZXNlbnRlZCBieSB0aGUgRVUncyByZWd1bGF0aW9uIGNoaWVmIE1pY2hlbCBCYXJuaWVyLCBpcyBhIGNlbnRyYWwgZWxlbWVudCBvZiB0aGUgYmxvYydzIHJlc3BvbnNlIHRvIHRoZSByaWdnaW5nIG9mIHRoZSBMb25kb24gSW50ZXJiYW5rIE9mZmVyZWQgUmF0ZSwgYSBiZW5jaG1hcmsgdXNlZCB0byBwcmljZSBwcm9kdWN0cyBmcm9tIGhvbWUgbG9hbnMgdG8gY3JlZGl0IGNhcmRzIHdvcnRoICQzMDAgdHJpbGxpb24uIEl0IHdpbGwgYWxzbyBhZmZlY3QgaG93IHRoZSBwcmljZSBvZiBjb21tb2RpdGllcywgaW5jbHVkaW5nIE5vcnRoIFNlYSBCcmVudCBjcnVkZSwgYSBjcml0aWNhbCBvaWwgYmVuY2htYXJrLCBhcmUgc2V0LiBBbHRob3VnaCB0aGUgbGVnaXNsYXRpb24gaW50cm9kdWNlcyByZWd1bGF0aW9uIHRvIGFuIGFyZWEgdGhhdCBoYXMgdW50aWwgbm93IHRocml2ZWQgYmV5b25kIHN1Y2ggc2NydXRpbnksIGl0IHdpbGwgY2hpZWZseSByZWx5IG9uIGNvdW50cmllcyBhbmQgdGhlaXIgbmF0aW9uYWwgYXV0aG9yaXRpZXMsIGluIExvbmRvbiBhbmQgZWxzZXdoZXJlLCBmb3IgZW5mb3JjZW1lbnQuIFRoZSBydWxlcyByb3cgYmFjayBvbiBlYXJsaWVyIHBsYW5zIGZvciBibGFua2V0IGxlZ2FsIGxpYWJpbGl0eSBvbiB0aG9zZSB3aG8gY29udHJpYnV0ZSBkYXRhIHRvIHNldCBwcmljZXMsIGFsdGhvdWdoIHRoZXJlIGlzIHByb3Zpc2lvbiBmb3Igc2FuY3Rpb25zIGFzIHdlbGwgYXMgYSBsZWdhbGx5IGJpbmRpbmcgY29kZSBvZiBjb25kdWN0IHRoYXQgaGFzIHdvcnJpZWQgc29tZSBpbiB0aGUgY29tbW9kaXRpZXMgaW5kdXN0cnkgdGhhdCB0aGlzIGNvdWxkIHVuZGVybWluZSB0aGVpciBwcmljZSBzZXR0aW5nLiAiQmVuY2htYXJrcyBhcmUgYXQgdGhlIGhlYXJ0IG9mIHRoZSBmaW5hbmNpYWwgc3lzdGVtOiB0aGV5IGFyZSBjcml0aWNhbCBmb3Igb3VyIG1hcmtldHMgYXMgd2VsbCBhcyB0aGUgbW9ydGdhZ2VzIGFuZCBzYXZpbmdzIG9mIG1pbGxpb25zIG9mIG91ciBjaXRpemVucywgeWV0IHVudGlsIG5vdyB0aGV5IGhhdmUgYmVlbiBsYXJnZWx5IHVucmVndWxhdGVkIGFuZCB1bnN1cGVydmlzZWQsIiBzYWlkIEJhcm5pZXIuICJUb2RheSdzIHByb3Bvc2FscyB3aWxsIGVuc3VyZSBmb3IgdGhlIGZpcnN0IHRpbWUgdGhhdCBhbGwgYmVuY2htYXJrIHByb3ZpZGVycyBoYXZlIHRvIGJlIGF1dGhvcml6ZWQgYW5kIHN1cGVydmlzZWQ7IHRoZXkgd2lsbCBlbmhhbmNlIHRyYW5zcGFyZW5jeSBhbmQgdGFja2xlIGNvbmZsaWN0cyBvZiBpbnRlcmVzdC4iIFRoZSBhbm5vdW5jZW1lbnQgZmVsbCBzaG9ydCBvZiB3aGF0IHNvbWUgbGF3bWFrZXJzIGluIEJydXNzZWxzIGhhZCBob3BlZCBmb3IsIHdoaWxlIG1hbnkgaW4gdGhlIGNvbW1vZGl0aWVzIGluZHVzdHJ5IGZlbHQgaXQgd2VudCB0b28gZmFyIGFuZCBjb3VsZCB1bmRlcm1pbmUgdGhlIGJlbmNobWFya3MgdGhleSB1c2UgdG8gZGV0ZXJtaW5lIHByaWNlcy4gVGhlIHJ1bGVzIHdpbGwgYWxzbyBhcHBseSB0byBiZW5jaG1hcmtzIHVzZWQgdG8gc2V0IHRoZSBwcmljZSBvZiBwaHlzaWNhbCBjb21tb2RpdGllcyBzdWNoIGFzIE5vcnRoIFNlYSBCcmVudCBjcnVkZSBvaWwuIFByaWNlIGFzc2Vzc21lbnQgYWdlbmNpZXMgUGxhdHRzLCBhIHVuaXQgb2YgTWNHcmF3LUhpbGwgLCBhbmQgc21hbGxlciByaXZhbHMgQXJndXMgYW5kIElDSVMsIHBhcnQgb2YgUmVlZCBFbHNldmllciwgd2FudCBCcnVzc2VscyB0byBhbGlnbiBtZXJlbHkgd2l0aCBub24tYmluZGluZyBpbmR1c3RyeSBndWlkZWxpbmVzLiBBbiBlYXJsaWVyIHN1Z2dlc3Rpb24gdGhhdCB0aGUgRXVyb3BlYW4gU2VjdXJpdGllcyBhbmQgTWFya2V0cyBBdXRob3JpdHksIGEgdGhpbmx5LXN0YWZmZWQgZmxlZGdsaW5nIEVVIGJvZHkgYmFzZWQgaW4gUGFyaXMsIGNvdWxkIGRvIHRoZSBqb2IgYWxvbmUgd2FzIGRyb3BwZWQuIEluIHRoZSBkcmFmdCBkb2N1bWVudCwgb2ZmaWNpYWxzIGluc3RlYWQgc2F5IHRoYXQgZ3JvdXBzIG9mIHN1cGVydmlzb3JzIGZyb20gZGlmZmVyZW50IGNvdW50cmllcywgYXMgd2VsbCBhcyBFU01BLCBzaG91bGQgZXhjaGFuZ2UgaW5mb3JtYXRpb24uICJJdCdzIGRpc2FwcG9pbnRpbmcsIiBzYWlkIFN2ZW4gR2llZ29sZCwgYSBHZXJtYW4gbWVtYmVyIG9mIHRoZSBFdXJvcGVhbiBQYXJsaWFtZW50LiAiVGhlIENvbW1pc3Npb24gaGFzIGdpdmVuIGluIHRvIEJyaXRpc2ggZGVtYW5kcyB0byBrZWVwIG92ZXJzaWdodCBvZiBMaWJvciBhbmQgdGhhdCBpcyBhIG1pc3Rha2UuIiAiVGhlIG5hdGlvbmFsIHN1cGVydmlzb3JzIGRpZG4ndCBjYXRjaCBwcmV2aW91cyBtYW5pcHVsYXRpb24gYW5kIEkgd291bGQgZXhwZWN0IG1vcmUgaW5kZXBlbmRlbmNlIGZyb20gYSBFdXJvcGVhbiBhdXRob3JpdHksIiBoZSBzYWlkLiBGb2xsb3dpbmcgY3JpdGljaXNtLCB0aGUgZHJhZnQgcnVsZXMgYXR0ZW1wdCB0byBhdm9pZCBpbXBvc2luZyBsaWFiaWxpdHkgc2hvdWxkIHRoZSBiZW5jaG1hcmsgcHJvdmUgbWlzbGVhZGluZywgYWx0aG91Z2ggbG9iYnlpc3RzIHNhaWQgdGhhdCBhIHByb3Bvc2FsIHRoYXQgcGFydGljaXBhbnRzIHNpZ24gYSBjb2RlIG9mIGNvbmR1Y3QgY291bGQgc2NhcmUgc29tZSBvZmYuIEluZHVzdHJ5IGxvYmJ5aXN0cyBjb25jZWRlZCB0aGF0IHRoZSBFdXJvcGVhbiBDb21taXNzaW9uLCB3aGljaCBwcm9wb3NlcyBkcmFmdCBFVSBsYXdzIGZvciBhcHByb3ZhbCBieSB0aGUgYmxvYydzIGNvdW50cmllcyBhbmQgcGFybGlhbWVudCwgaGFzIHNvZnRlbmVkIHRoZSBydWxlcywgYnV0IHRoZXkgc3RpbGwgd2FudCBhIGZ1cnRoZXIgc2NhbGluZyBiYWNrLiBUaGUgZ2VudGxlIGxlZ2lzbGF0aXZlIHJlc3BvbnNlIGZvbGxvd3MgdG90YWwgZmluZXMgb2YgJDIuNiBiaWxsaW9uIG9uIFJveWFsIEJhbmsgb2YgU2NvdGxhbmQsIEJhcmNsYXlzIGFuZCBTd2lzcyBiYW5rIFVCUyBvdmVyIHRoZSByaWdnaW5nIG9mIExpYm9yLiBUaGUgQ29tbWlzc2lvbidzIGFudGl0cnVzdCBjaGllZiBjb250aW51ZXMgdG8gaW52ZXN0aWdhdGUgYmVuY2htYXJrcyBpbmNsdWRpbmcgTGlib3IgYW5kIGhhcyBhbHNvIHJhaWRlZCBvZmZpY2VzIG9mIG9pbCBtYWpvcnMgU2hlbGwsIEJQIGFuZCBTdGF0b2lsIGluIGFuIGludmVzdGlnYXRpb24gb2Ygc3VzcGVjdGVkIG1hbmlwdWxhdGlvbiBvZiBvaWwgcHJpY2VzLiBUaGUgRXVyb3BlYW4gUGFybGlhbWVudCBhbmQgRVUgbWVtYmVyIHN0YXRlcyB3aWxsIGhhdmUgdG8gYXBwcm92ZSB0aGUgZHJhZnQgYmVmb3JlIGl0IGJlY29tZSBsYXcsIGEgcHJvY2VzcyB0aGF0IGNvdWxkIGRyYWcgb24gZm9yIHllYXJzLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEvcHCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDBlYTUyZDhlYWE3MWI4OTY=</field><field name="symbol" class="java.lang.String">rO0ABXQABVJVS0VG</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUE0lsyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAqLhR64Ueu</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAqLhR64Ueu</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAqLhR64Ueu</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAqLhR64Ueu</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEApYUeuFHrh</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDZlNmViODg3Y2NhOTI2ZDI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mM1jAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM0Nzc=</field><field name="title" class="java.lang.String">rO0ABXQAQUNvbW1vZGl0eSBQcmljZXMgV3JvbmcgYXMgT2Z0ZW4gYXMgMjcgUGVyY2VudCBvZiBUaW1lIGZvciBUcmFkZXJz</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGblfyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGE1ZmZiZjg1OTM3MTk0ZTI=</field><field name="symbol" class="java.lang.String">rO0ABXQACEdMQ05GLlBL</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGgvFiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAUzMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAU4UeuFHrh</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAUwo9cKPXD</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAU4UeuFHrh</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAUR64UeuFI</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAKKA==</field><field name="id" class="java.lang.String">rO0ABXQAEDYyODg1MzdkNzAwOTFhOTI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHfPAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQ5MzY=</field><field name="title" class="java.lang.String">rO0ABXQAO0dvbGQgUHJpY2luZyBEcmF3cyBTY3J1dGlueSBBbWlkIEtub3dsZWRnZSBUaWVkIHRvIEVydXB0aW9u</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKS/isAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDAwMDFhOTM0YjlmNWJiYTg=</field><field name="symbol" class="java.lang.String">rO0ABXQACUJOUy1QTi5UTw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKYJIcAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6GZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6Y9cKPXCk</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6GZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6JmZmZmZm</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4jMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAARlA==</field><field name="id" class="java.lang.String">rO0ABXQAEDNiNjEzMTdmYTJkZThlY2I=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMx8AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExNDk2</field><field name="title" class="java.lang.String">rO0ABXQANkhpZ2ggU3BlZWQgVHJhZGluZyBhIFN0aWZmIENoYWxsZW5nZSBmb3IgVVMgUmVndWxhdG9ycw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT7ATvSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGVlZGQ1YjlmN2UxNjgzN2M=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZFSU0=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT7FdVCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkgAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkmZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkZmZmZmZm</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkeuFHrhR7</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkeuFHrhR7</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAANrA==</field><field name="id" class="java.lang.String">rO0ABXQAEDJkZjdiODUwMDM5YzU1NGM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKH+AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExNDAz</field><field name="title" class="java.lang.String">rO0ABXQAMkhvbGxhbmRlOiBBbnkgVVMgU3B5aW5nIFRocmVhdGVucyBGcmVlLVRyYWRlIFRhbGtz</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT+YmgyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGJmY2E2MTY0Mzk2NTZlYTg=</field><field name="symbol" class="java.lang.String">rO0ABXQAA05PUg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT+dwGiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAKuFHrhR64</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEALCj1wo9cK</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAJXCj1wo9c</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAJwo9cKPXD</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAJCj1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAYgXA==</field><field name="id" class="java.lang.String">rO0ABXQAEGExYTYyNWUwZDZiYzgwM2U=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mIOPAAAA==</field></document></documents><date>2015-05-07T12:14:54-0500</date></cacheEntry>
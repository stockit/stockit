<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0AwVBbWVyaWNhbiBmYXJtZXJzIGhhdmUgcGxhbnRlZCBsZXNzIGNvcm4gdGhhbiBpbiBhbnkgeWVhciBzaW5jZSAyMDEwIGJ1dCBtb3JlIHNveWJlYW5zIHRoYW4gZXZlciBhcyBleHBlY3RlZCBUaGUgVVMgRGVwYXJ0bWVudCBvZiBBZ3JpY3VsdHVyZSBzYXlzIGluIGl0cyBhbm51YWwgQWNyZWFnZSBSZXBvcnQgcmVsZWFzZWQgTW9uZGF5IHRoYXQgZmFybWVycyBwbGFudGVkIDkxNiBtaWxsaW9uIGFjcmVzIG9mIGNvcm4gVGhhdHMgNCBwZXJjZW50IGxlc3MgdGhhbiBsYXN0IHllYXIgYnV0IHN0aWxsIHRoZSBmaWZ0aGxhcmdlc3QgY29ybiBjcm9wIHBsYW50ZWQgc2luY2UgMTk0NCBBbmFseXN0cyBleHBlY3RlZCBzb21lIGZhcm1lcnMgdG8gZGV2b3RlIG1vcmUgYWNyZWFnZSB0byBzb3liZWFucyBiZWNhdXNlIG9mIGEgZHJvcCBpbiBjb3JuIHByaWNlcyBUaGUgVVNEQSBzYXlzIGZhcm1lcnMgcGxhbnRlZCBhIHJlY29yZCBoaWdoIDg0OCBtaWxsaW9uIGFjcmVzIG9mIHNveWJlYW5zIHVwIDExIHBlcmNlbnQgZnJvbSBsYXN0IHllYXIgUmVjb3JkIHNveWJlYW4gYWNyZXMgaGF2ZSBiZWVuIHBsYW50ZWQgaW4gTWljaGlnYW4gTWlubmVzb3RhIE5lYnJhc2thIE5ldyBZb3JrIE5vcnRoIERha290YSBPaGlvIFBlbm5zeWx2YW5pYSBTb3V0aCBEYWtvdGEgYW5kIFdpc2NvbnNpbiBTZXZlbnR5c2l4IHBlcmNlbnQgb2YgdGhlIGNvcm4gY3JvcCBpcyBpbiBnb29kIHRvIGV4Y2VsbGVudCBjb25kaXRpb24gY29tcGFyZWQgd2l0aCA2MyBwZXJjZW50IGxhc3QgeWVhcnQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0wMy0yN1QwMDowMDowMFogVE8gMjAxMy0xMi0wM1Q1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwNTI=</field><field name="title" class="java.lang.String">rO0ABXQAMlRoZSBTZWNyZXQsIERpcnR5IENvc3Qgb2YgT2JhbWEncyBHcmVlbiBQb3dlciBQdXNo</field><field name="content" class="java.lang.String">rO0ABXRkjFRoZSBoaWxscyBvZiBzb3V0aGVybiBJb3dhIGJlYXIgdGhlIHNjYXJzIG9mIEFtZXJpY2EncyBwdXNoIGZvciBncmVlbiBlbmVyZ3k6IFRoZSBicm93biBnYXNoZXMgd2hlcmUgcmFpbiBoYXMgd2FzaGVkIGF3YXkgdGhlIHNvaWwuIFRoZSBwb2xsdXRlZCBzdHJlYW1zIHRoYXQgZHVtcCBmZXJ0aWxpemVyIGludG8gdGhlIHdhdGVyIHN1cHBseS4gRXZlbiB0aGUgY2VtZXRlcnkgdGhhdCBkaXNhcHBlYXJlZCBsaWtlIGFuIGFwcGFyaXRpb24gaW50byBhIGNvcm5maWVsZC4gSXQgd2Fzbid0IHN1cHBvc2VkIHRvIGJlIHRoaXMgd2F5LiBXaXRoIHRoZSBJb3dhIHBvbGl0aWNhbCBjYXVjdXNlcyBvbiB0aGUgaG9yaXpvbiBpbiAyMDA3LCBwcmVzaWRlbnRpYWwgY2FuZGlkYXRlIEJhcmFjayBPYmFtYSBtYWRlIGhvbWVncm93biBjb3JuIGEgY2VudGVycGllY2Ugb2YgaGlzIHBsYW4gdG8gc2xvdyBnbG9iYWwgd2FybWluZy4gQW5kIHdoZW4gUHJlc2lkZW50IEdlb3JnZSBXLiBCdXNoIHNpZ25lZCBhIGxhdyB0aGF0IHllYXIgcmVxdWlyaW5nIG9pbCBjb21wYW5pZXMgdG8gYWRkIGJpbGxpb25zIG9mIGdhbGxvbnMgb2YgZXRoYW5vbCB0byB0aGVpciBnYXNvbGluZSBlYWNoIHllYXIsIEJ1c2ggcHJlZGljdGVkIGl0IHdvdWxkIG1ha2UgdGhlIGNvdW50cnkgInN0cm9uZ2VyLCBjbGVhbmVyIGFuZCBtb3JlIHNlY3VyZS4iCgpFZGl0b3LigJlzIE5vdGU6ICAgT2JhbWEgRG9ub3IgQmFubmVkIFRoaXMgTWVzc2FnZSAoU2hvY2tpbmcpICBCdXQgdGhlIGV0aGFub2wgZXJhIGhhcyBwcm92ZW4gZmFyIG1vcmUgZGFtYWdpbmcgdG8gdGhlIGVudmlyb25tZW50IHRoYW4gcG9saXRpY2lhbnMgcHJvbWlzZWQgYW5kIG11Y2ggd29yc2UgdGhhbiB0aGUgZ292ZXJubWVudCBhZG1pdHMgdG9kYXkuIEFzIGZhcm1lcnMgcnVzaGVkIHRvIGZpbmQgbmV3IHBsYWNlcyB0byBwbGFudCBjb3JuLCB0aGV5IHdpcGVkIG91dCBtaWxsaW9ucyBvZiBhY3JlcyBvZiBjb25zZXJ2YXRpb24gbGFuZCwgZGVzdHJveWVkIGhhYml0YXQgYW5kIHBvbGx1dGVkIHdhdGVyIHN1cHBsaWVzLCBhbiBBc3NvY2lhdGVkIFByZXNzIGludmVzdGlnYXRpb24gZm91bmQuIEZpdmUgbWlsbGlvbiBhY3JlcyBvZiBsYW5kIHNldCBhc2lkZSBmb3IgY29uc2VydmF0aW9uIOKAlCBtb3JlIHRoYW4gWWVsbG93c3RvbmUsIEV2ZXJnbGFkZXMgYW5kIFlvc2VtaXRlIE5hdGlvbmFsIFBhcmtzIGNvbWJpbmVkIOKAlCBoYXZlIHZhbmlzaGVkIG9uIE9iYW1hJ3Mgd2F0Y2guIExhbmRvd25lcnMgZmlsbGVkIGluIHdldGxhbmRzLiBUaGV5IHBsb3dlZCBpbnRvIHByaXN0aW5lIHByYWlyaWVzLCByZWxlYXNpbmcgY2FyYm9uIGRpb3hpZGUgdGhhdCBoYWQgYmVlbiBsb2NrZWQgaW4gdGhlIHNvaWwuIFNwcmF5ZXJzIHB1bXBlZCBvdXQgYmlsbGlvbnMgb2YgcG91bmRzIG9mIGZlcnRpbGl6ZXIsIHNvbWUgb2Ygd2hpY2ggc2VlcGVkIGludG8gZHJpbmtpbmcgd2F0ZXIsIGNvbnRhbWluYXRlZCByaXZlcnMgYW5kIHdvcnNlbmVkIHRoZSBodWdlIGRlYWQgem9uZSBpbiB0aGUgR3VsZiBvZiBNZXhpY28gd2hlcmUgbWFyaW5lIGxpZmUgY2FuJ3Qgc3Vydml2ZS4gVGhlIGNvbnNlcXVlbmNlcyBhcmUgc28gc2V2ZXJlIHRoYXQgZW52aXJvbm1lbnRhbGlzdHMgYW5kIG1hbnkgc2NpZW50aXN0cyBoYXZlIG5vdyByZWplY3RlZCBjb3JuLWJhc2VkIGV0aGFub2wgYXMgYmFkIGVudmlyb25tZW50YWwgcG9saWN5LiBCdXQgdGhlIE9iYW1hIGFkbWluaXN0cmF0aW9uIHN0YW5kcyBieSBpdCwgaGlnaGxpZ2h0aW5nIGl0cyBiZW5lZml0cyB0byB0aGUgZmFybWluZyBpbmR1c3RyeSByYXRoZXIgdGhhbiBhbnkgbmVnYXRpdmUgaW1wYWN0LiBGYXJtZXJzIHBsYW50ZWQgMTUgbWlsbGlvbiBtb3JlIGFjcmVzIG9mIGNvcm4gbGFzdCB5ZWFyIHRoYW4gYmVmb3JlIHRoZSBldGhhbm9sIGJvb20sIGFuZCB0aGUgZWZmZWN0cyBhcmUgdmlzaWJsZSBpbiBwbGFjZXMgbGlrZSBzb3V0aCBjZW50cmFsIElvd2EuIFRoZSBoaWxseSwgb25jZS1ncmFzc3kgbGFuZHNjYXBlIGlzIG1hZGUgdXAgb2YgZnJhZ2lsZSBzb2lsIHRoYXQsIHVubGlrZSB0aGUgZWFydGggaW4gdGhlIHJlc3Qgb2YgdGhlIHN0YXRlLCBpcyBwb29ybHkgc3VpdGVkIGZvciBjb3JuLiBOZXZlcnRoZWxlc3MsIGl0IGhhcyB5aWVsZGVkIHRvIEFtZXJpY2EncyBkZW1hbmQgZm9yIGl0LiAiVGhleSdyZSByYXBpbmcgdGhlIGxhbmQsIiBzYWlkIEJpbGwgQWxsZXksIGEgbWVtYmVyIG9mIHRoZSBib2FyZCBvZiBzdXBlcnZpc29ycyBpbiBXYXluZSBDb3VudHksIHdoaWNoIG5vdyBiZWFycyBsaXR0bGUgcmVzZW1ibGFuY2UgdG8gdGhlIHJvbGxpbmcgY293IHBhc3R1cmVzIHNob3duIGluIHBvc3RjYXJkcyBzb2xkIGF0IGEgQ29yeWRvbiBwaGFybWFjeS4gQWxsIGVuZXJneSBjb21lcyBhdCBhIGNvc3QuIFRoZSBlbnZpcm9ubWVudGFsIGNvbnNlcXVlbmNlcyBvZiBkcmlsbGluZyBmb3Igb2lsIGFuZCBuYXR1cmFsIGdhcyBhcmUgd2VsbCBkb2N1bWVudGVkIGFuZCBzZXZlcmUuIEJ1dCBpbiB0aGUgcHJlc2lkZW50J3MgcHVzaCB0byByZWR1Y2UgZ3JlZW5ob3VzZSBnYXNlcyBhbmQgY3VydGFpbCBnbG9iYWwgd2FybWluZywgaGlzIGFkbWluaXN0cmF0aW9uIGhhcyBhbGxvd2VkIHNvLWNhbGxlZCBncmVlbiBlbmVyZ3kgdG8gZG8gbm90LXNvLWdyZWVuIHRoaW5ncy4gSW4gc29tZSBjYXNlcywgc3VjaCBhcyBpdHMgZGVjaXNpb24gdG8gYWxsb3cgd2luZCBmYXJtcyB0byBraWxsIGVhZ2xlcywgdGhlIGFkbWluaXN0cmF0aW9uIGFjY2VwdHMgZW52aXJvbm1lbnRhbCBjb3N0cyBiZWNhdXNlIHRoZXkgcGFsZSBpbiBjb21wYXJpc29uIHRvIHRoZSBoYXZvYyBpdCBiZWxpZXZlcyBnbG9iYWwgd2FybWluZyBjb3VsZCB1bHRpbWF0ZWx5IGNhdXNlLiBFdGhhbm9sIGlzIGRpZmZlcmVudC4gVGhlIGdvdmVybm1lbnQncyBwcmVkaWN0aW9ucyBvZiB0aGUgYmVuZWZpdHMgaGF2ZSBwcm92ZW4gc28gaW5hY2N1cmF0ZSB0aGF0IGluZGVwZW5kZW50IHNjaWVudGlzdHMgcXVlc3Rpb24gd2hldGhlciBpdCB3aWxsIGV2ZXIgYWNoaWV2ZSBpdHMgY2VudHJhbCBlbnZpcm9ubWVudGFsIGdvYWw6IHJlZHVjaW5nIGdyZWVuaG91c2UgZ2FzZXMuIFRoYXQgbWFrZXMgdGhlIGhpZGRlbiBjb3N0cyBldmVuIG1vcmUgc2lnbmlmaWNhbnQuICJUaGlzIGlzIGFuIGVjb2xvZ2ljYWwgZGlzYXN0ZXIsIiBzYWlkIENyYWlnIENveCB3aXRoIHRoZSBFbnZpcm9ubWVudGFsIFdvcmtpbmcgR3JvdXAsIGEgbmF0dXJhbCBhbGx5IG9mIHRoZSBwcmVzaWRlbnQgdGhhdCwgbGlrZSBvdGhlcnMsIG5vdyBmaW5kcyBpdHNlbGYgYXQgb2RkcyB3aXRoIHRoZSBXaGl0ZSBIb3VzZS4gQnV0IGl0J3MgYSBjb3N0IHRoZSBhZG1pbmlzdHJhdGlvbiBpcyB3aWxsaW5nIHRvIGFjY2VwdC4gSXQgYmVsaWV2ZXMgc3VwcG9ydGluZyBjb3JuIGV0aGFub2wgaXMgdGhlIGJlc3Qgd2F5IHRvIGVuY291cmFnZSB0aGUgZGV2ZWxvcG1lbnQgb2YgYmlvZnVlbHMgdGhhdCB3aWxsIHNvbWVkYXkgYmUgY2xlYW5lciBhbmQgZ3JlZW5lciB0aGFuIHRvZGF5J3MuIFB1bGxpbmcgdGhlIHBsdWcgb24gY29ybiBldGhhbm9sLCBvZmZpY2lhbHMgZmVhciwgbWlnaHQgbWVhbiBraWxsaW5nIGFueSBob3BlIG9mIHRoZXNlIG5leHQtZ2VuZXJhdGlvbiBmdWVscy4gIlRoYXQgaXMgd2hhdCB5b3UgZ2l2ZSB1cCBpZiB5b3UgZG9uJ3QgcmVjb2duaXplIHRoYXQgcmVuZXdhYmxlIGZ1ZWxzIGhhdmUgc29tZSBwbGFjZSBoZXJlLCIgRVBBIGFkbWluaXN0cmF0b3IgR2luYSBNY0NhcnRoeSBzYWlkIGluIGEgcmVjZW50IGludGVydmlldyB3aXRoIEFQLiAiQWxsIHJlbmV3YWJsZSBmdWVscyBhcmUgbm90IGNvcm4gZXRoYW5vbC4iIFN0aWxsLCBjb3JuIHN1cHBsaWVzIHRoZSBvdmVyd2hlbG1pbmcgbWFqb3JpdHkgb2YgZXRoYW5vbCBpbiB0aGUgVW5pdGVkIFN0YXRlcywgYW5kIHRoZSBhZG1pbmlzdHJhdGlvbiBpcyBsb2F0aCB0byBkaXNjdXNzIHRoZSBlbnZpcm9ubWVudGFsIGNvbnNlcXVlbmNlcy4gIkl0IGp1c3QgY2F1Z2h0IHVzIGNvbXBsZXRlbHkgb2ZmIGd1YXJkLCIgc2FpZCBEb3VnIERhdmVucG9ydCwgYSBEZXBhcnRtZW50IG9mIEFncmljdWx0dXJlIG9mZmljaWFsIHdobyBlbmNvdXJhZ2VzIHNvdXRoZXJuIElvd2EgZmFybWVycyB0byB1c2UgY29uc2VydmF0aW9uIHByYWN0aWNlcyBvbiB0aGVpciBsYW5kLiBEZXNwaXRlIHRob3NlIGVmZm9ydHMsIERhdmVucG9ydCBzYWlkIGhlIHdhcyBzdXJwcmlzZWQgYXQgaG93IG11Y2ggZnJhZ2lsZSwgZXJvZGlibGUgbGFuZCB3YXMgdHVybmVkIGludG8gY29ybiBmaWVsZHMuIFNob3J0bHkgYWZ0ZXIgRGF2ZW5wb3J0IHNwb2tlIHRvIFRoZSBBc3NvY2lhdGVkIFByZXNzLCBoZSBnb3QgYW4gZW1haWwgb3JkZXJpbmcgaGltIHRvIHN0b3AgdGFsa2luZy4gIldlIGp1c3Qgd2FudCB0byBoYXZlIGEgY29uc2lzdGVudCBtZXNzYWdlIG9uIHRoZSB0b3BpYywiIGFuIEFncmljdWx0dXJlIERlcGFydG1lbnQgc3Bva2VzbWFuIGluIElvd2Egc2FpZC4gVGhhdCBjb25zaXN0ZW50IG1lc3NhZ2Ugd2FzIGxhaWQgb3V0IGJ5IEFncmljdWx0dXJlIFNlY3JldGFyeSBUb20gVmlsc2Fjaywgd2hvIHNwb2tlIHRvIGV0aGFub2wgbG9iYnlpc3RzIG9uIENhcGl0b2wgSGlsbCByZWNlbnRseSBhbmQgc2FpZCBldGhhbm9sIHdhcyBnb29kIGZvciBidXNpbmVzcy4gIldlIGFyZSBjb21taXR0ZWQgdG8gdGhpcyBpbmR1c3RyeSBiZWNhdXNlIHdlIHVuZGVyc3RhbmQgaXRzIGJlbmVmaXRzLCIgaGUgc2FpZC4gIldlIHVuZGVyc3RhbmQgaXQncyBhYm91dCBmYXJtIGluY29tZS4gSXQncyBhYm91dCBzdGFiaWxpemluZyBhbmQgbWFpbnRhaW5pbmcgZmFybSBpbmNvbWUgd2hpY2ggaXMgYXQgcmVjb3JkIGxldmVscy4iIFRoZSBudW1iZXJzIGJlaGluZCB0aGUgZXRoYW5vbCBtYW5kYXRlIGhhdmUgYmVjb21lIHNvIHVud29ya2FibGUgdGhhdCwgZm9yIHRoZSBmaXJzdCB0aW1lLCB0aGUgRVBBIGlzIHNvb24gZXhwZWN0ZWQgdG8gcmVkdWNlIHRoZSBhbW91bnQgb2YgZXRoYW5vbCByZXF1aXJlZCB0byBiZSBhZGRlZCB0byB0aGUgZ2Fzb2xpbmUgc3VwcGx5LiBBbiB1bnVzdWFsIGNvYWxpdGlvbiBvZiBiaWcgb2lsIGNvbXBhbmllcywgZW52aXJvbm1lbnRhbCBncm91cHMgYW5kIGZvb2QgY29tcGFuaWVzIGlzIHB1c2hpbmcgdGhlIGdvdmVybm1lbnQgdG8gZ28gZXZlbiBmdXJ0aGVyIGFuZCByZWNvbnNpZGVyIHRoZSBlbnRpcmUgZXRoYW5vbCBwcm9ncmFtLiBUaGUgZXRoYW5vbCBpbmR1c3RyeSBpcyBmaWdodGluZyBoYXJkIGFnYWluc3QgdGhhdCBlZmZvcnQuIEluZHVzdHJ5IHNwb2tlc21hbiBCcm9va2UgQ29sZW1hbiBkaXNtaXNzZWQgdGhpcyBzdG9yeSBhcyAicHJvcGFnYW5kYSBvbiBhIHBhZ2UuIiBBbiBpbmR1c3RyeSBibG9nIGluIE1pbm5lc290YSBzYWlkIHRoZSBBUCBoYWQgc3VjY3VtYmVkICJ0byBCaWcgT2lsJ3MgZGVlcCBwb2NrZXRzIGFuZCBwb3dlcmZ1bCBpbmZsdWVuY2UuIiBUbyB1bmRlcnN0YW5kIGhvdyBBbWVyaWNhIGdvdCB0byBhbiBlbnZpcm9ubWVudGFsIHBvbGljeSB3aXRoIHN1Y2ggaGFybWZ1bCBlbnZpcm9ubWVudGFsIGNvbnNlcXVlbmNlcywgaXQncyBoZWxwZnVsIHRvIHN0YXJ0IGluIGEgZmllbGQgaW4gSW93YS4gX19fIExlcm95IFBlcmtpbnMsIGEgd2hpdGUtaGFpcmVkLCA2Ni15ZWFyLW9sZCBmYXJtZXIgaW4gZGVuaW0gb3ZlcmFsbHMsIHN0YW5kcyBzdXJyb3VuZGVkIGJ5IHdhaXN0LWhpZ2ggZ3Jhc3MgYW5kIGNsb3Zlci4gSGUgb3ducyA5MSBhY3JlcyBsaWtlIHRoaXMsIGFsbCBoaWxseSBhbmQgZXJvZGlibGUsIHRoYXQgaGUgc2V0IGFzaWRlIGZvciBjb25zZXJ2YXRpb24geWVhcnMgYWdvLiBTb29uLCBoZSB3aWxsIGhhdmUgYSBkZWNpc2lvbiB0byBtYWtlOiBrZWVwIHRoZSBsYW5kIGFzIGl0IGlzIG9yLCBsaWtlIG1hbnkgb2YgaGlzIG5laWdoYm9ycywgcGxvdyBpdCBkb3duIGFuZCBwbGFudCBjb3JuIG9yIHNveWJlYW5zLCB0aGUgbWFqb3Igc291cmNlcyBvZiBiaW9mdWVsIGluIHRoZSBVbml0ZWQgU3RhdGVzLiAiSSdkIGxpa2UgdG8ga2VlcCBpdCBpbiwiIGhlIHNhaWQuICJUaGlzIGlzIHdoYXQgc291dGhlcm4gSW93YSdzIGZvcjogcmFpc2luZyBncmFzcy4iIEZvciBkZWNhZGVzLCB0aGUgZ292ZXJubWVudCdzIENvbnNlcnZhdGlvbiBSZXNlcnZlIFByb2dyYW0gaGFzIHBhaWQgZmFybWVycyB0byBzdG9wIGZhcm1pbmcgZW52aXJvbm1lbnRhbGx5IHNlbnNpdGl2ZSBsYW5kLiBHcmFzc3kgZmllbGRzIG5hdHVyYWxseSBjb252ZXJ0IGNhcmJvbiBkaW94aWRlIGludG8gb3h5Z2VuLCB3aGljaCBoZWxwcyBjb21iYXQgZ2xvYmFsIHdhcm1pbmcuIFBsdXMsIHRoZWlyIGRlZXAgcm9vdCBzeXN0ZW1zIHByZXZlbnQgdG9wc29pbCBmcm9tIHdhc2hpbmcgYXdheS4gRm9yIFBlcmtpbnMgYW5kIGhpcyBmYXJtZXIgbmVpZ2hib3JzIGluIFdheW5lIENvdW50eSwga2VlcGluZyBmYXJtbGFuZCBpbiBjb25zZXJ2YXRpb24gd2Fzbid0IGp1c3QgZ29vZCBzdGV3YXJkc2hpcC4gSXQgbWFkZSBmaW5hbmNpYWwgc2Vuc2UuIEEgZGVjYWRlIGFnbywgV2FzaGluZ3RvbiBwYWlkIHRoZW0gYWJvdXQgJDcwIGFuIGFjcmUgZWFjaCB5ZWFyIHRvIGxlYXZlIHRoZWlyIGZhcm1sYW5kIGlkbGUuIFdpdGggY29ybiBzZWxsaW5nIGZvciBhYm91dCAkMiBwZXIgYnVzaGVsICg1NiBwb3VuZHMpIGJhY2sgdGhlbiwgZmFybWluZyB0aGUgaGlsbHksIGluZmVyaW9yIHNvaWwgd2FzIGJhZCBidXNpbmVzcy4gTWFueSBvcHRlZCBpbnRvIHRoZSBjb25zZXJ2YXRpb24gcHJvZ3JhbS4gT3RoZXJzIGtlcHQgdGhlaXIgZ3Jhc3NsYW5kcyBmb3IgY293IHBhc3R1cmVzLiBMYXRlbHksIHRob3VnaCwgdGhlIG1hdGggaGFzIGNoYW5nZWQuICJJJ20gY29taW5nIHRvIHRoZSBwb2ludCB3aGVyZSBmaW5hbmNpYWxseSwgaXQncyBub3QgZmVhc2libGUsIiBQZXJraW5zIHNhaWQuIFRoZSBjaGFuZ2UgYmVnYW4gaW4gMjAwNywgd2hlbiBDb25ncmVzcyBwYXNzZWQgYSBsYXcgcmVxdWlyaW5nIG9pbCBjb21wYW5pZXMgdG8gYmxlbmQgYmlsbGlvbnMgb2YgZ2FsbG9ucyBvZiBldGhhbm9sIGludG8gZ2Fzb2xpbmUuIE9pbCBwcmljZXMgd2VyZSBoaWdoLiBPaWwgaW1wb3J0cyB3ZXJlIHJpc2luZyBxdWlja2x5LiBUaGUgbGVnaXNsYXRpb24gaGFkIHRoZSBzdHJvbmcgYmFja2luZyBvZiB0aGUgcHJlc2lkZW50aWFsIGNhbmRpZGF0ZSB3aG8gd2FzIHRoZSBqdW5pb3Igc2VuYXRvciBmcm9tIG5laWdoYm9yaW5nIElsbGlub2lzLCB0aGUgbmF0aW9uJ3Mgc2Vjb25kLWxhcmdlc3QgY29ybiBwcm9kdWNlci4gIklmIHdlJ3JlIGdvaW5nIHRvIGdldCBzZXJpb3VzIGFib3V0IGludmVzdGluZyBpbiBvdXIgZW5lcmd5IGZ1dHVyZSwgd2UgbXVzdCBnaXZlIG91ciBmYW1pbHkgZmFybWVycyBhbmQgbG9jYWwgZXRoYW5vbCBwcm9kdWNlcnMgYSBmYWlyIHNob3QgYXQgc3VjY2VzcywiIE9iYW1hIHNhaWQgdGhlbi4gVGhlIERlbW9jcmF0aWMgcHJpbWFyeSBmaWVsZCB3YXMgY3Jvd2RlZCwgYW5kIGlmIGhlIGRpZG4ndCB3aW4gdGhlIElvd2EgY2F1Y3VzZXMgdGhlIHJvYWQgdG8gdGhlIG5vbWluYXRpb24gd291bGQgYmUgZGlmZmljdWx0LiBIaXMgc3Ryb25nIHN1cHBvcnQgZm9yIGV0aGFub2wgc2V0IGhpbSBhcGFydC4gIkFueSB0aW1lIHdlIGNvdWxkIHRhbGsgYWJvdXQgc3VwcG9ydCBmb3IgZXRoYW5vbCwgd2UgZGlkLCIgc2FpZCBNaXRjaCBTdGV3YXJ0LCB0aGUgYmF0dGxlZ3JvdW5kIHN0YXRlcyBkaXJlY3RvciBmb3IgT2JhbWEncyAyMDA4IGNhbXBhaWduLiAiSXQncyBob3cgd2Ugd291bGQgbGVhZCBhIGxvdCBvZiBkaXNjdXNzaW9ucy4iIFByZXNpZGVudCBCdXNoIHNpZ25lZCB0aGUgYmlsbCB0aGF0IERlY2VtYmVyLiBJdCB3b3VsZCBmYWxsIG9uIHRoZSBuZXh0IHByZXNpZGVudCB0byBmaWd1cmUgb3V0IGhvdyB0byBtYWtlIGl0IHdvcmsuIF9fXyBQcmVzaWRlbnQgT2JhbWEncyB0ZWFtIGF0IHRoZSBFUEEgd2FzIHNvdXIgb24gdGhlIGV0aGFub2wgbWFuZGF0ZSBmcm9tIHRoZSBzdGFydC4gQXMgYSB3YXkgdG8gcmVkdWNlIGdsb2JhbCB3YXJtaW5nLCB0aGV5IGtuZXcgY29ybiBldGhhbm9sIHdhcyBhIGR1YmlvdXMgcHJvcG9zaXRpb24uIENvcm4gZGVtYW5kcyBmZXJ0aWxpemVyLCB3aGljaCBpcyBtYWRlIHVzaW5nIG5hdHVyYWwgZ2FzLiBXaGF0J3Mgd29yc2UsIGV0aGFub2wgZmFjdG9yaWVzIHR5cGljYWxseSBidXJuIGNvYWwgb3IgZ2FzLCBib3RoIG9mIHdoaWNoIHJlbGVhc2UgY2FyYm9uIGRpb3hpZGUuIFRoZW4gdGhlcmUgd2FzIHRoZSBsYW5kIGNvbnZlcnNpb24sIHRoZSBtb3N0IGNvbnRyb3ZlcnNpYWwgYW5kIGRpZmZpY3VsdC10by1wcmVkaWN0IG91dGNvbWUuIERpZ2dpbmcgdXAgZ3Jhc3NsYW5kIHJlbGVhc2VzIGdyZWVuaG91c2UgZ2FzZXMsIHNvIGVudmlyb25tZW50YWxpc3RzIGFyZSBza2VwdGljYWwgb2YgYW55IHByb2dyYW0gdGhhdCBlbmNvdXJhZ2VzIHBsYW50aW5nIG1vcmUgY29ybi4gIkkgZG9uJ3QgcmVtZW1iZXIgYW55Ym9keSBoYXZpbmcgZ3JlYXQgcGFzc2lvbiBmb3IgdGhpcywiIHNhaWQgQm9iIFN1c3NtYW4sIHdobyBzZXJ2ZWQgb24gT2JhbWEncyB0cmFuc2l0aW9uIHRlYW0gYW5kIHJlY2VudGx5IHJldGlyZWQgYXMgRVBBJ3Mgc2VuaW9yIHBvbGljeSBjb3Vuc2VsLiAiSSBkb24ndCBoYXZlIGEgbG90IG9mIHBlcnNvbmFsIGVudGh1c2lhc20gZm9yIHRoZSBwcm9ncmFtLiIgQXQgdGhlIFdoaXRlIEhvdXNlIGFuZCB0aGUgRGVwYXJ0bWVudCBvZiBBZ3JpY3VsdHVyZSwgdGhvdWdoLCB0aGVyZSB3YXMgcGxlbnR5IG9mIGVudGh1c2lhc20uIE9uZSBvZiBPYmFtYSdzIHNlbmlvciBhZHZpc2VycywgUGV0ZSBSb3VzZSwgaGFkIHdvcmtlZCBvbiBldGhhbm9sIGlzc3VlcyBhcyBjaGllZiBvZiBzdGFmZiB0byBTZW4uIFRvbSBEYXNjaGxlIG9mIFNvdXRoIERha290YSwgYSBtYWpvciBldGhhbm9sIGJvb3N0ZXIgYW5kIG5vdyBjaGFpciBvZiB0aGUgRHVQb250IEFkdmlzb3J5IENvbW1pdHRlZSBvbiBBZ3JpY3VsdHVyZSBJbm5vdmF0aW9uIGFuZCBQcm9kdWN0aXZpdHkuIEFub3RoZXIgT2JhbWEgYWR2aXNlciBhdCB0aGUgdGltZSwgSGVhdGhlciBaaWNoYWwsIGdyZXcgdXAgaW4gbm9ydGhlYXN0IElvd2Eg4oCUIGFzIGEgY2hpbGQsIHNoZSB3YXMgY3Jvd25lZCAic3dlZXQgY29ybiBwcmluY2VzcyIg4oCUIGFuZCB3YXMgb25lIG9mIHRoZSBPYmFtYSBjYW1wYWlnbidzIGxlYWRpbmcgdm9pY2VzIG9uIGV0aGFub2wgaW4gaGVyIGhvbWUgc3RhdGUuIFRoZSBhZG1pbmlzdHJhdGlvbiBoYWQgbm8gZ3JlYXRlciBjb3JuIGV0aGFub2wgYWR2b2NhdGUgdGhhbiBWaWxzYWNrLCB0aGUgZm9ybWVyIElvd2EgZ292ZXJub3IuICJUb20gdW5kZXJzdGFuZHMgdGhhdCB0aGUgc29sdXRpb24gdG8gb3VyIGVuZXJneSBjcmlzaXMgd2lsbCBiZSBmb3VuZCBub3QgaW4gb2lsIGZpZWxkcyBhYnJvYWQgYnV0IGluIG91ciBmYXJtIGZpZWxkcyBoZXJlIGF0IGhvbWUsIiBPYmFtYSBzYWlkIGluIDIwMDguICJUaGF0IGlzIHRoZSBraW5kIG9mIGxlYWRlciBJIHdhbnQgaW4gbXkgQ2FiaW5ldC4iIF9fXyBXcml0aW5nIHRoZSByZWd1bGF0aW9ucyB0byBpbXBsZW1lbnQgdGhlIGV0aGFub2wgbWFuZGF0ZSB3YXMgYW1vbmcgdGhlIGFkbWluaXN0cmF0aW9uJ3MgZmlyc3QgbWFqb3IgZW52aXJvbm1lbnRhbCB1bmRlcnRha2luZ3MuIEluZHVzdHJ5IGFuZCBlbnZpcm9ubWVudGFsIGdyb3VwcyB3YXRjaGVkIGNsb3NlbHkuIFRoZSBFUEEncyBleHBlcnRzIGRldGVybWluZWQgdGhhdCB0aGUgbWFuZGF0ZSB3b3VsZCBpbmNyZWFzZSBkZW1hbmQgZm9yIGNvcm4gYW5kIGVuY291cmFnZSBmYXJtZXJzIHRvIHBsb3cgbW9yZSBsYW5kLiBDb25zaWRlcmluZyB0aG9zZSBmYWN0b3JzLCB0aGV5IHNhaWQsIGNvcm4gZXRoYW5vbCB3YXMgb25seSBzbGlnaHRseSBiZXR0ZXIgdGhhbiBnYXNvbGluZSB3aGVuIGl0IGNhbWUgdG8gY2FyYm9uIGRpb3hpZGUgZW1pc3Npb25zLiBTaXh0ZWVuIHBlcmNlbnQgYmV0dGVyLCB0byBiZSBleGFjdC4gQW5kIG5vdCBpbiB0aGUgc2hvcnQgdGVybS4gT25seSBieSAyMDIyLiBCeSBsYXcsIHRob3VnaCwgYmlvZnVlbHMgd2VyZSBzdXBwb3NlZCB0byBiZSBhdCBsZWFzdCAyMCBwZXJjZW50IGdyZWVuZXIgdGhhbiBnYXNvbGluZS4gRnJvbSBhIGxlZ2FsIHN0YW5kcG9pbnQsIHRoZSByZXN1bHRzIGRpZG4ndCBtYXR0ZXIuIENvbmdyZXNzIGV4ZW1wdGVkIGV4aXN0aW5nIGNvYWwtIGFuZCBnYXMtYnVybmluZyBldGhhbm9sIHBsYW50cyBmcm9tIG1lZXRpbmcgdGhpcyBzdGFuZGFyZC4gQnV0IGFzIGEgcG9saWN5IGFuZCBwdWJsaWMgcmVsYXRpb25zIGlzc3VlLCBpdCB3YXMgYSByZWFsIHByb2JsZW0uIFRoZSBiaW9mdWVsLWZyaWVuZGx5IE9iYW1hIGFkbWluaXN0cmF0aW9uIHdhcyB1bmRlcm1pbmluZyB0aGUgaW5kdXN0cnkncyBtYWpvciBzZWxsaW5nIHBvaW50OiB0aGF0IGl0IHdhcyBtdWNoIGdyZWVuZXIgdGhhbiBnYXNvbGluZS4gU28gdGhlIGV0aGFub2wgaW5kdXN0cnkgd2FzIGxpdmlkLiBMb2JieWlzdHMgZmxvb2RlZCB0aGUgRVBBIHdpdGggY3JpdGljaXNtLCBjaGFsbGVuZ2luZyB0aGUgZ292ZXJubWVudCdzIG1ldGhvZHMgYW5kIGNvbmNsdXNpb25zLiBUaGUgRVBBJ3MgY29uY2x1c2lvbiB3YXMgYmFzZWQgb24gYSBtb2RlbC4gUGx1ZyBpbiBzb21lIGFzc3VtZWQgZmlndXJlcyDigJQgdGhlIHByaWNlIG9mIGNvcm4sIHRoZSBudW1iZXIgb2YgYWNyZXMgcGxhbnRlZCwgaG93IG11Y2ggY29ybiB3b3VsZCBncm93IHBlciBhY3JlIOKAlCBhbmQgdGhlIG1vZGVsIHdvdWxkIHNwaXQgb3V0IGEgbnVtYmVyLiBUbyBnZXQgcGFzdCAyMCBwZXJjZW50LCB0aGUgRVBBIG5lZWRlZCB0byBjaGFuZ2UgaXRzIGFzc3VtcHRpb25zLiBUaGUgbW9zdCBpbXBvcnRhbnQgb2YgdGhvc2UgYXNzdW1wdGlvbnMgd2FzIGNhbGxlZCB0aGUgeWllbGQsIGEgbWVhc3VyZSBvZiBob3cgbXVjaCBjb3JuIGNvdWxkIGJlIHByb2R1Y2VkIG9uIGFuIGFjcmUgb2YgbGFuZC4gVGhlIGhpZ2hlciB0aGUgeWllbGQsIHRoZSBlYXNpZXIgaXQgd291bGQgYmUgZm9yIGZhcm1lcnMgdG8gbWVldCB0aGUgZ3Jvd2luZyBkZW1hbmQgd2l0aG91dCBwbG93aW5nIG5ldyBmYXJtbGFuZCwgd2hpY2ggY291bnRlZCBhZ2FpbnN0IGV0aGFub2wgaW4gdGhlIGdyZWVuaG91c2UgZ2FzIGVxdWF0aW9uLiBDb3JuIHlpZWxkcyBoYXZlIGluY2hlZCBzdGVhZGlseSB1cHdhcmQgb3ZlciB0aGUgeWVhcnMgYXMgZmFybXMgaGF2ZSBiZWNvbWUgbW9yZSBlZmZpY2llbnQuIFRoZSBnb3Zlcm5tZW50J3MgZmlyc3QgZXRoYW5vbCBtb2RlbCBhc3N1bWVkIHRoYXQgdHJlbmQgd291bGQgY29udGludWUsIHJpc2luZyBmcm9tIDE1MCBidXNoZWxzIHBlciBhY3JlIHRvIGFib3V0IDE4MCBieSB0aGUgeWVhciAyMDIyLiBBZ3JpY3VsdHVyZSBjb21wYW5pZXMgbGlrZSBNb25zYW50byBDby4gYW5kIER1UG9udCBQaW9uZWVyLCB3aGljaCBzdG9vZCB0byBtYWtlIG1pbGxpb25zIG9mZiBhbiBldGhhbm9sIGJvb20sIHRvbGQgdGhlIGdvdmVybm1lbnQgdGhvc2UgbnVtYmVycyB3ZXJlIHRvbyBsb3cuIFRoZXkgcHJlZGljdGVkIHRoYXQgZ2VuZXRpY2FsbHkgbW9kaWZpZWQgc2VlZHMg4oCUIHdoaWNoIHRoZXkgcHJvZHVjZSDigJQgd291bGQgc2VuZCB5aWVsZHMgc2t5cm9ja2V0aW5nLiBXaXRoIGhpZ2hlciB5aWVsZHMsIGZhcm1lcnMgY291bGQgcHJvZHVjZSBtb3JlIGNvcm4gb24gbGVzcyBsYW5kLCByZWR1Y2luZyB0aGUgZW52aXJvbm1lbnRhbCBlZmZlY3RzLiBEb2N1bWVudHMgc2hvdyB0aGUgV2hpdGUgSG91c2UgYnVkZ2V0IG9mZmljZSBhbHNvIHN1Z2dlc3RlZCB0aGUgRVBBIHJhaXNlIGl0cyB5aWVsZCBhc3N1bXB0aW9ucy4gV2hlbiB0aGUgZmluYWwgcnVsZSBjYW1lIG91dCwgdGhlIEVQQSBhbmQgQWdyaWN1bHR1cmUgb2ZmaWNpYWxzIGFkZGVkIGEgbmV3ICJoaWdoIHlpZWxkIGNhc2Ugc2NlbmFyaW8iIHRoYXQgYXNzdW1lZCAyMzAgYnVzaGVscyBwZXIgYWNyZS4gVGhlIGZsYXcgaW4gdGhvc2UgYXNzdW1wdGlvbnMsIGluZGVwZW5kZW50IHNjaWVudGlzdHMga25ldywgd2FzIHRoYXQgYSBiaWcgaW5jcmVhc2UgaW4gY29ybiBwcmljZXMgd291bGQgZW5jb3VyYWdlIHBlb3BsZSB0byBmYXJtIGluIGxlc3MgaG9zcGl0YWJsZSBhcmVhcyBsaWtlIFdheW5lIENvdW50eSwgd2hpY2ggY291bGQgbmV2ZXIgcHJvZHVjZSBzdWNoIGxhcmdlIHlpZWxkcy4gQnV0IHRoZSBFUEEncyBtb2RlbCBhc3N1bWVkIG9ubHkgYSB0aW55IGluY3JlYXNlIGluIGNvcm4gcHJpY2VzLiAiWW91IGFkanVzdCBhIGZldyBudW1iZXJzIHRvIGdldCBpdCB3aGVyZSB5b3Ugd2FudCBpdCwgYW5kIHRoZW4geW91IGNhbGwgaXQgZ29vZCwiIHNhaWQgQWRhbSBMaXNrYSwgYXNzaXN0YW50IHByb2Zlc3NvciBvZiBiaW9sb2dpY2FsIHN5c3RlbXMgZW5naW5lZXJpbmcgYXQgdGhlIFVuaXZlcnNpdHkgb2YgTmVicmFza2EuIEhlIHN1cHBvcnRzIGV0aGFub2wsIGV2ZW4gd2l0aCBpdHMgZW52aXJvbm1lbnRhbCB0cmFkZS1vZmZzLiBXaGVuIHRoZSBPYmFtYSBhZG1pbmlzdHJhdGlvbiBmaW5hbGl6ZWQgaXRzIGZpcnN0IG1ham9yIGdyZWVuLWVuZXJneSBwb2xpY3ksIGNvcm4gZXRoYW5vbCBiYXJlbHkgY3Jvc3NlZCB0aGUga2V5IHRocmVzaG9sZC4gVGhlIGZpbmFsIHNjb3JlOiAyMSBwZXJjZW50LiAiSWYgeW91IGNvcnJlY3RlZCBhbnkgb2YgYSBudW1iZXIgb2YgdGhpbmdzLCBpdCB3b3VsZCBiZSBvbiB0aGUgb3RoZXIgc2lkZSBvZiAyMCBwZXJjZW50LCIgc2FpZCBSaWNoYXJkIFBsZXZpbiBvZiB0aGUgVHJhbnNwb3J0YXRpb24gU3VzdGFpbmFiaWxpdHkgUmVzZWFyY2ggQ2VudGVyIGF0IHRoZSBVbml2ZXJzaXR5IG9mIENhbGlmb3JuaWEsIEJlcmtlbGV5LiAiSXMgaXQgYSBjb2luY2lkZW5jZSB0aGlzIGlzIHdoYXQgaGFwcGVuZWQ/IEl0IGNlcnRhaW5seSBtYWtlcyBtZSB3b25kZXIuIiBJdCBkaWRuJ3QgdGFrZSBsb25nIGZvciByZWFsaXR5IHRvIHByb3ZlIHRoZSBPYmFtYSBhZG1pbmlzdHJhdGlvbidzIHByZWRpY3Rpb25zIHdyb25nLiBUaGUgcmVndWxhdGlvbnMgdG9vayBlZmZlY3QgaW4gSnVseSAyMDEwLiBUaGUgZm9sbG93aW5nIG1vbnRoLCBjb3JuIHByaWNlcyBhbHJlYWR5IGhhZCBzdXJwYXNzZWQgdGhlIEVQQSdzIGxvbmctdGVybSBlc3RpbWF0ZSBvZiAkMy4yMiBhIGJ1c2hlbC4gVGhhdCBTZXB0ZW1iZXIsIGNvcm4gcGFzc2VkICQ0LCBvbiBpdHMgd2F5IHRvIGFib3V0ICQ3LCB3aGVyZSBpdCBoYXMgYmVlbiBtb3N0IG9mIHRoaXMgeWVhci4gWWllbGRzLCBtZWFud2hpbGUsIGhhdmUgaGVsZCBmYWlybHkgc3RlYWR5LiBCdXQgdGhlIGV0aGFub2wgYm9vbSB3YXMgdW5kZXJ3YXkuIF9fXyBJdCdzIGltcG9zc2libGUgdG8gcHJlY2lzZWx5IGNhbGN1bGF0ZSBob3cgbXVjaCBldGhhbm9sIGlzIHJlc3BvbnNpYmxlIGZvciB0aGUgc3Bpa2UgaW4gY29ybiBwcmljZXMgYW5kIGhvdyBtdWNoIHRob3NlIHByaWNlcyBsZWQgdG8gdGhlIGxhbmQgY2hhbmdlcyBpbiB0aGUgTWlkd2VzdC4gU3VwcG9ydGVycyBvZiBjb3JuIGV0aGFub2wgc2F5IGV4dHJlbWUgd2VhdGhlciDigJQgZHJ5IG9uZSB5ZWFyLCB2ZXJ5IHdldCB0aGUgbmV4dCDigJQgaHVydCBmYXJtZXJzIGFuZCByYWlzZWQgcHJpY2VzLiBCdXQgZGltaW5pc2hpbmcgc3VwcGx5IHdhc24ndCB0aGUgb25seSBmYWN0b3IuIE1vcmUgY29ybiB0aGFuIGV2ZXIgd2FzIGJlaW5nIGRpc3RpbGxlZCBpbnRvIGV0aGFub2wuIEhpc3RvcmljYWxseSwgdGhlIG92ZXJ3aGVsbWluZ2x5IG1ham9yaXR5IG9mIGNvcm4gaW4gdGhlIFVuaXRlZCBTdGF0ZXMgaGFzIGJlZW4gdHVybmVkIGludG8gbGl2ZXN0b2NrIGZlZWQuIEJ1dCBpbiAyMDEwLCBmb3IgdGhlIGZpcnN0IHRpbWUsIGZ1ZWwgd2FzIHRoZSBOby4gMSB1c2UgZm9yIGNvcm4gaW4gQW1lcmljYS4gVGhhdCB3YXMgdHJ1ZSBpbiAyMDExIGFuZCAyMDEyLiBOZXdseSByZWxlYXNlZCBEZXBhcnRtZW50IG9mIEFncmljdWx0dXJlIGRhdGEgc2hvdyB0aGF0LCB0aGlzIHllYXIsIDQzIHBlcmNlbnQgb2YgY29ybiB3ZW50IHRvIGZ1ZWwgYW5kIDQ1IHBlcmNlbnQgd2VudCB0byBsaXZlc3RvY2sgZmVlZC4gVGhlIG1vcmUgY29ybiB0aGF0IGdvZXMgdG8gZXRoYW5vbCwgdGhlIG1vcmUgdGhhdCBuZWVkcyB0byBiZSBwbGFudGVkIHRvIG1lZXQgb3RoZXIgZGVtYW5kcy4gU2NpZW50aXN0cyBwcmVkaWN0ZWQgdGhhdCBhIG1ham9yIGV0aGFub2wgcHVzaCB3b3VsZCByYWlzZSBwcmljZXMgYW5kLCBpbiB0dXJuLCBlbmNvdXJhZ2UgZmFybWVycyBsaWtlIExlcm95IFBlcmtpbnMgdG8gcGxvdyBpbnRvIGNvbnNlcnZhdGlvbiBsYW5kLiBCdXQgdGhlIGdvdmVybm1lbnQgaW5zaXN0ZWQgb3RoZXJ3aXNlLiBJbiAyMDA4LCB0aGUgam91cm5hbCBTY2llbmNlIHB1Ymxpc2hlZCBhIHN0dWR5IHdpdGggYSBkaXJlIGNvbmNsdXNpb246IFBsb3dpbmcgb3ZlciBjb25zZXJ2YXRpb24gbGFuZCByZWxlYXNlcyBzbyBtdWNoIGdyZWVuaG91c2UgZ2FzIHRoYXQgaXQgdGFrZXMgNDggeWVhcnMgYmVmb3JlIG5ldyBwbGFudHMgY2FuIGJyZWFrIGV2ZW4gYW5kIHN0YXJ0IHJlZHVjaW5nIGNhcmJvbiBkaW94aWRlLiBGb3IgYW4gZXRoYW5vbCBwb2xpY3kgdG8gd29yaywgdGhlIHN0dWR5IHNhaWQsIGZhcm1lcnMgY291bGQgbm90IHBsb3cgaW50byBjb25zZXJ2YXRpb24gbGFuZC4gVGhlIEVQQSwgaW4gYSByZXBvcnQgdG8gQ29uZ3Jlc3Mgb24gdGhlIGVudmlyb25tZW50YWwgZWZmZWN0cyBvZiBldGhhbm9sLCBzYWlkIGl0IHdhcyAidW5jZXJ0YWluIiB3aGV0aGVyIGZhcm1lcnMgd291bGQgcGxhbnQgb24gZmFybWxhbmQgdGhhdCBoYWQgYmVlbiBzZXQgYXNpZGUgZm9yIGNvbnNlcnZhdGlvbi4gVGhlIERlcGFydG1lbnQgb2YgRW5lcmd5IHdhcyBtb3JlIGNlcnRhaW4uIE1vc3QgY29uc2VydmF0aW9uIGxhbmQsIHRoZSBnb3Zlcm5tZW50IHNhaWQgaW4gaXRzIHJlc3BvbnNlIHRvIHRoZSBzdHVkeSwgImlzIHVuc3VpdGFibGUgZm9yIHVzZSBmb3IgYW5udWFsIHJvdyBjcm9wIHByb2R1Y3Rpb24uIiBBbWVyaWNhIGNvdWxkIG1lZXQgaXRzIGV0aGFub2wgZGVtYW5kIHdpdGhvdXQgbG9zaW5nIGEgc2luZ2xlIGFjcmUgb2YgY29uc2VydmF0aW9uIGxhbmQsIEVuZXJneSBvZmZpY2lhbHMgc2FpZC4gVGhleSB3b3VsZCBzb29uIGJlIHByb3ZlbiB3cm9uZy4gQmVmb3JlIHRoZSBnb3Zlcm5tZW50IGV0aGFub2wgbWFuZGF0ZSwgdGhlIENvbnNlcnZhdGlvbiBSZXNlcnZlIFByb2dyYW0gZ3JldyBldmVyeSB5ZWFyIGZvciBuZWFybHkgYSBkZWNhZGUuIEFsbW9zdCBvdmVybmlnaHQsIGZhcm1lcnMgYmVnYW4gbGVhdmluZyB0aGUgcHJvZ3JhbSwgd2hpY2ggc2ltdWx0YW5lb3VzbHkgZmVsbCB2aWN0aW0gdG8gYnVkZ2V0IGN1dHMgdGhhdCByZWR1Y2VkIHRoZSBhbW91bnQgb2YgZmFybWxhbmQgdGhhdCBjb3VsZCBiZSBzZXQgYXNpZGUgZm9yIGNvbnNlcnZhdGlvbi4gSW4gdGhlIGZpcnN0IHllYXIgYWZ0ZXIgdGhlIGV0aGFub2wgbWFuZGF0ZSwgbW9yZSB0aGFuIDIgbWlsbGlvbiBhY3JlcyBkaXNhcHBlYXJlZC4gU2luY2UgT2JhbWEgdG9vayBvZmZpY2UsIDUgbWlsbGlvbiBtb3JlIGFjcmVzIGhhdmUgdmFuaXNoZWQuIEFncmljdWx0dXJlIG9mZmljaWFscyBhY2tub3dsZWRnZSB0aGF0IGNvbnNlcnZhdGlvbiBsYW5kIGhhcyBiZWVuIGxvc3QsIGJ1dCB0aGV5IHNheSB0aGUgdHJlbmQgaXMgcmV2ZXJzaW5nLiBXaGVuIHRoZSAyMDEzIGRhdGEgY29tZXMgb3V0LCB0aGV5IHNheSBpdCB3aWxsIHNob3cgdGhhdCBhcyBjb3JuIHByaWNlcyBzdGFiaWxpemVkLCBmYXJtZXJzIG9uY2UgYWdhaW4gYmVnYW4gc2V0dGluZyBhc2lkZSBsYW5kIGZvciBjb25zZXJ2YXRpb24uIF9fXyBMb3NpbmcgY29uc2VydmF0aW9uIGxhbmQgd2FzIGJhZC4gQnV0IHNvbWV0aGluZyBldmVuIHdvcnNlIHdhcyBoYXBwZW5pbmcuIEZhcm1lcnMgYnJva2UgZ3JvdW5kIG9uIHZpcmdpbiBsYW5kLCB0aGUgdW50b3VjaGVkIHRlcnJhaW4gdGhhdCByZXByZXNlbnRzLCBmcm9tIGFuIGVudmlyb25tZW50YWwgc3RhbmRwb2ludCwgdGhlIGNvdW50cnkncyBtb3N0IGltcG9ydGFudCBhc3NldC4gVGhlIGZhcm0gaW5kdXN0cnkgYXNzdXJlZCB0aGUgZ292ZXJubWVudCB0aGF0IHdvdWxkbid0IGhhcHBlbi4gQW5kIGl0IHdvdWxkIGhhdmUgYmVlbiBhbiBlYXN5IHRoaW5nIGZvciBXYXNoaW5ndG9uIHRvIGNoZWNrLiBCdXQgcmF0aGVyIHRoYW4gaW5zaXN0aW5nIHRoYXQgZmFybWVycyByZXBvcnQgd2hlbmV2ZXIgdGhleSBwbG93IGludG8gdmlyZ2luIGxhbmQsIHRoZSBnb3Zlcm5tZW50IGRlY2lkZWQgb24gYSBtdWNoIG11cmtpZXIgb3ZlcnNpZ2h0IG1ldGhvZDogV2FzaGluZ3RvbiBpbnN0ZWFkIG1vbml0b3JzIHRoZSB0b3RhbCBudW1iZXIgb2YgYWNyZXMgb2YgY3JvcGxhbmQgbmF0aW9ud2lkZS4gTG9jYWwgdHJlbmRzIHdhc2ggYXdheSB3aGVuIHZpZXdlZCBhdCBzdWNoIGEgZGlzdGFuY2UuICJUaGV5IGNvdWxkIG5vdCBoYXZlIGRlc2lnbmVkIGEgYmV0dGVyIGFwcHJvYWNoIHRvIG5vdCBkZXRlY3QgbGFuZCBjb252ZXJzaW9uLCIgc2FpZCBCZW4gTGFyc29uLCBhbiBhZ3JpY3VsdHVyYWwgZXhwZXJ0IGZvciB0aGUgTmF0aW9uYWwgV2lsZGxpZmUgRmVkZXJhdGlvbi4gTG9vayBjbG9zZWx5IGF0IHRoZSBjb3JuIGJvb20gaW4gdGhlIG5vcnRoZXJuIEdyZWF0IFBsYWlucywgaG93ZXZlciwgYW5kIGl0J3MgY2xlYXIuIEZhcm1lcnMgYXJlIGNvbnZlcnRpbmcgdW50b3VjaGVkIHByYWlyaWUgaW50byBmYXJtbGFuZC4gVGhlIERlcGFydG1lbnQgb2YgQWdyaWN1bHR1cmUgYmVnYW4ga2VlcGluZyBmaWd1cmVzIG9uIHZpcmdpbiBsYW5kIG9ubHkgaW4gMjAxMiBhbmQgZGV0ZXJtaW5lZCB0aGF0IGFib3V0IDM4LDAwMCBhY3JlcyB2YW5pc2hlZCB0aGF0IHllYXIuIEJ1dCB1c2luZyBnb3Zlcm5tZW50IHNhdGVsbGl0ZSBkYXRhIOKAlCB0aGUgYmVzdCB0b29sIGF2YWlsYWJsZSDigJQgdGhlIEFQIGlkZW50aWZpZWQgYSBjb25zZXJ2YXRpdmUgZXN0aW1hdGUgb2YgMS4yIG1pbGxpb24gYWNyZXMgb2YgdmlyZ2luIGxhbmQgaW4gTmVicmFza2EgYW5kIHRoZSBEYWtvdGFzIGFsb25lIHRoYXQgaGF2ZSBiZWVuIGNvbnZlcnRlZCB0byBmaWVsZHMgb2YgY29ybiBhbmQgc295YmVhbnMgc2luY2UgMjAwNiwgdGhlIGxhc3QgeWVhciBiZWZvcmUgdGhlIGV0aGFub2wgbWFuZGF0ZSB3YXMgcGFzc2VkLiAiVGhlIGxhc3QgZml2ZSB5ZWFycywgd2UndmUgYmVjb21lIGZpbmFuY2lhbGx5IHNvbHZlbnQsIiBzYWlkIFJvYmVydCBNYWxzYW0sIGEgZmFybWVyIGluIEVkbXVuZHMgQ291bnR5LCBTLkQuLCB3aG8gbGlrZSBvdGhlcnMgaW4gdGhlIGNlbnRyYWwgYW5kIGVhc3Rlcm4gRGFrb3RhcyBoYXMgcGxvd2VkIGludG8gd2lsZCBncmFzc2xhbmQgdG8gZXhwYW5kIGhpcyBjb3JuIGNyb3AuIFRoZSBwcmljZSBvZiBjb3JuIGlzIHJlc2hhcGluZyB0aGUgbGFuZCBhY3Jvc3MgdGhlIE1pZHdlc3QuIEluIFdheW5lIENvdW50eSwgSW93YSwgZm9yIGV4YW1wbGUsIG9ubHkgdGhlIGRlYWQgY2FuIHN0b3AgdGhlIGNvcm4uIEEgZ3JhdmVsIHJvYWQgb25jZSBjdXQgdGhyb3VnaCBhIGdyYXNzeSBmaWVsZCBsZWFkaW5nIHRvIGEgaGlsbHRvcCBjZW1ldGVyeS4gQnV0IGFib3V0IHR3byB5ZWFycyBhZ28sIHRoZSBsYW5kb3duZXJzIHBsb3dlZCBvdmVyIHRoZSByb2FkLiBOb3csIHZpc2l0aW5nIGdyYXZlc2l0ZXMgbWVhbnMgd2Fsa2luZyBhIG5hcnJvdyBwYXRoIHRocm91Z2ggdGhlIGNvcm4uIFBlb3BsZSBoYXZlIGNvbXBsYWluZWQuIEl0J3MgdG9vIG5hcnJvdyBmb3IgYSBoZWFyc2UsIHRvbyBydXR0ZWQgZm9yIGEgd2hlZWxjaGFpciwgdG9vIHN0ZWVwIGZvciB0aGUgZWxkZXJseS4gQnV0IGl0J3MgbGVnYWwsIHNhaWQgQmlsbCBBbGxleSBmcm9tIHRoZSBib2FyZCBvZiBzdXBlcnZpc29ycy4gIlRoaXMgaXMgd2hhdCB0aGUgcHJpY2Ugb2YgY29ybiBkb2VzLCIgaGUgc2FpZC4gIlRoaXMgaXMgd2hhdCBoYXBwZW5zLCByaWdodCBoZXJlLiIgX19fIFdoZW4gQ29uZ3Jlc3MgcGFzc2VkIHRoZSBldGhhbm9sIG1hbmRhdGUsIGl0IHJlcXVpcmVkIHRoZSBFUEEgdG8gdGhvcm91Z2hseSBzdHVkeSB0aGUgZWZmZWN0cyBvbiB3YXRlciBhbmQgYWlyIHBvbGx1dGlvbi4gSW4gaGlzIHJlY2VudCBzcGVlY2ggdG8gZXRoYW5vbCBsb2JieWlzdHMsIFZpbHNhY2sgd2FzIHVuZXF1aXZvY2FsIGFib3V0IHRob3NlIGVmZmVjdHM6ICJUaGVyZSBpcyBubyBxdWVzdGlvbiBhaXIgcXVhbGl0eSwgd2F0ZXIgcXVhbGl0eSBpcyBiZW5lZml0aW5nIGZyb20gdGhpcyBpbmR1c3RyeSwiIGhlIHNhaWQuIEJ1dCB0aGUgYWRtaW5pc3RyYXRpb24gbmV2ZXIgYWN0dWFsbHkgY29uZHVjdGVkIHRoZSByZXF1aXJlZCBhaXIgYW5kIHdhdGVyIHN0dWRpZXMgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgdGhhdCdzIHRydWUuIEluIGFuIGludGVydmlldyB3aXRoIHRoZSBBUCBhZnRlciBoaXMgc3BlZWNoLCBWaWxzYWNrIHNhaWQgaGUgZGlkbid0IG1lYW4gdGhhdCBldGhhbm9sIHByb2R1Y3Rpb24gd2FzIGdvb2QgZm9yIHRoZSBhaXIgYW5kIHdhdGVyLiBIZSBzaW1wbHkgbWVhbnQgdGhhdCBnYXNvbGluZSBtaXhlZCB3aXRoIGV0aGFub2wgaXMgY2xlYW5lciB0aGFuIGdhc29saW5lIGFsb25lLiBJbiB0aGUgTWlkd2VzdCwgbWVhbndoaWxlLCBzY2llbnRpc3RzIGFuZCBjb25zZXJ2YXRpb25pc3RzIGFyZSBzb3VuZGluZyBhbGFybXMuIE5pdHJvZ2VuIGZlcnRpbGl6ZXIsIHdoZW4gaXQgc2VlcHMgaW50byB0aGUgd2F0ZXIsIGlzIHRveGljLiBDaGlsZHJlbiBhcmUgZXNwZWNpYWxseSBzdXNjZXB0aWJsZSB0byBuaXRyYXRlIHBvaXNvbmluZywgd2hpY2ggY2F1c2VzICJibHVlIGJhYnkiIHN5bmRyb21lIGFuZCBjYW4gYmUgZGVhZGx5LiBCZXR3ZWVuIDIwMDUgYW5kIDIwMTAsIGNvcm4gZmFybWVycyBpbmNyZWFzZWQgdGhlaXIgdXNlIG9mIG5pdHJvZ2VuIGZlcnRpbGl6ZXIgYnkgbW9yZSB0aGFuIG9uZSBiaWxsaW9uIHBvdW5kcy4gTW9yZSByZWNlbnQgZGF0YSBpc24ndCBhdmFpbGFibGUgZnJvbSB0aGUgQWdyaWN1bHR1cmUgRGVwYXJ0bWVudCwgYnV0IGJlY2F1c2Ugb2YgdGhlIGh1Z2UgaW5jcmVhc2UgaW4gY29ybiBwbGFudGluZywgZXZlbiBjb25zZXJ2YXRpdmUgcHJvamVjdGlvbnMgYnkgdGhlIEFQIHN1Z2dlc3QgYW5vdGhlciBiaWxsaW9uLXBvdW5kIGZlcnRpbGl6ZXIgaW5jcmVhc2Ugb24gY29ybiBmYXJtcyBzaW5jZSB0aGVuLiBEZXBhcnRtZW50IG9mIEFncmljdWx0dXJlIG9mZmljaWFscyBub3RlIHRoYXQgdGhlIGFtb3VudCBvZiBmZXJ0aWxpemVyIHVzZWQgZm9yIGFsbCBjcm9wcyBoYXMgcmVtYWluZWQgc3RlYWR5IGZvciBhIGRlY2FkZSwgc3VnZ2VzdGluZyB0aGUgZXRoYW5vbCBtYW5kYXRlIGhhc24ndCBjYXVzZWQgYSBmZXJ0aWxpemVyIGJvb20gYWNyb3NzIHRoZSBib2FyZC4gQnV0IGluIHRoZSBNaWR3ZXN0LCBjb3JuIGlzIHRoZSBkb21pbmFudCBjcm9wLCBhbmQgb2ZmaWNpYWxzIHNheSB0aGUgaW5jcmVhc2UgaW4gZmVydGlsaXplciB1c2Ug4oCUIGRyaXZlbiBieSB0aGUgaW5jcmVhc2UgaW4gY29ybiBwbGFudGluZyDigJQgaXMgaGF2aW5nIGFuIGVmZmVjdC4gVGhlIERlcyBNb2luZXMgV2F0ZXIgV29ya3MsIGZvciBpbnN0YW5jZSwgaGFzIGZhY2VkIGhpZ2ggbml0cmF0ZSBsZXZlbHMgZm9yIG1hbnkgeWVhcnMgaW4gdGhlIERlcyBNb2luZXMgYW5kIFJhY2Nvb24gUml2ZXJzLCB3aGljaCBzdXBwbHkgZHJpbmtpbmcgd2F0ZXIgdG8gNTAwLDAwMCBwZW9wbGUuIFR5cGljYWxseSwgd2hlbiBwb2xsdXRpb24gaXMgdG9vIGhpZ2ggaW4gb25lIHJpdmVyLCB3b3JrZXJzIGRyYXcgZnJvbSB0aGUgb3RoZXIuICJUaGlzIHllYXIsIHVuZm9ydHVuYXRlbHkgdGhlIG5pdHJhdGUgbGV2ZWxzIGluIGJvdGggcml2ZXJzIHdlcmUgc28gaGlnaCB0aGF0IGl0IGNyZWF0ZWQgYW4gaW1wb3NzaWJpbGl0eSBmb3IgdXMsIiBzYWlkIEJpbGwgU3Rvd2UsIHRoZSB3YXRlciBzZXJ2aWNlJ3MgZ2VuZXJhbCBtYW5hZ2VyLiBGb3IgdGhyZWUgbW9udGhzIHRoaXMgc3VtbWVyLCB3b3JrZXJzIGtlcHQgaHVnZSBtYWNoaW5lcyBydW5uaW5nIGFyb3VuZCB0aGUgY2xvY2sgdG8gY2xlYW4gdGhlIHdhdGVyLiBPZmZpY2lhbHMgYXNrZWQgY3VzdG9tZXJzIHRvIHVzZSBsZXNzIHdhdGVyIHNvIHRoZSB1dGlsaXR5IGhhZCBhIGNoYW5jZSB0byBrZWVwIHVwLiBQYXJ0IG9mIHRoZSBwcm9ibGVtIHdhcyB0aGF0IGxhc3QgeWVhcidzIGRyeSB3ZWF0aGVyIG1lYW50IGZlcnRpbGl6ZXIgc2F0IGF0b3AgdGhlIHNvaWwuIFRoaXMgc3ByaW5nJ3MgcmFpbnMgZmx1c2hlZCB0aGF0IG5pdHJvZ2VuIGludG8gdGhlIHdhdGVyIGFsb25nIHdpdGggdGhlIHJlbW5hbnRzIG9mIHRoZSBmZXJ0aWxpemVyIGZyb20gdGhlIG1vc3QgcmVjZW50IGNyb3AuIEF0IHRoZSBzYW1lIHRpbWUgdGhlIGV0aGFub2wgbWFuZGF0ZSBoYXMgZW5jb3VyYWdlZCBmYXJtZXJzIHRvIHBsYW50IG1vcmUgY29ybiwgU3Rvd2Ugc2FpZCwgdGhlIGdvdmVybm1lbnQgaGFzbid0IGRvbmUgZW5vdWdoIHRvIGxpbWl0IGZlcnRpbGl6ZXIgdXNlIG9yIHJlZ3VsYXRlIHRoZSBpbmR1c3RyaWFsIGRyYWluYWdlIHN5c3RlbXMgdGhhdCBmbHVzaCBuaXRyYXRlcyBhbmQgd2F0ZXIgaW50byByaXZlcnMgYW5kIHN0cmVhbXMuIFdpdGggdGhlIFdhdGVyIFdvcmtzIG9uIHRoZSBicmluayBvZiBjYXBhY2l0eSwgU3Rvd2Ugc2FpZCBoZSdzIGNvbnNpZGVyaW5nIHN1aW5nIHRoZSBnb3Zlcm5tZW50IHRvIGRlbWFuZCBhIHNvbHV0aW9uLiBJbiBuZWlnaGJvcmluZyBNaW5uZXNvdGEsIGEgZ292ZXJubWVudCByZXBvcnQgdGhpcyB5ZWFyIGZvdW5kIHRoYXQgc2lnbmlmaWNhbnRseSByZWR1Y2luZyB0aGUgaGlnaCBsZXZlbHMgb2Ygbml0cmF0ZXMgZnJvbSB0aGUgc3RhdGUncyB3YXRlciB3b3VsZCByZXF1aXJlIGh1Z2UgY2hhbmdlcyBpbiBmYXJtaW5nIHByYWN0aWNlcyBhdCBhIGNvc3Qgb2Ygcm91Z2hseSAkMSBiaWxsaW9uIGEgeWVhci4gIldlJ3JlIGRvaW5nIG1vcmUgdG8gYWRkcmVzcyB3YXRlciBxdWFsaXR5LCBidXQgd2UgYXJlIGJlaW5nIG92ZXJ3aGVsbWVkIGJ5IHRoZSBpbmNyZWFzZSBpbiBwcm9kdWN0aW9uIHByZXNzdXJlIHRvIHBsYW50IG1vcmUgY3JvcHMsIiBzYWlkIFN0ZXZlIE1vcnNlLCBleGVjdXRpdmUgZGlyZWN0b3Igb2YgdGhlIE1pbm5lc290YSBFbnZpcm9ubWVudGFsIFBhcnRuZXJzaGlwLiBUaGUgbml0cmF0ZXMgdHJhdmVsIGRvd24gcml2ZXJzIGFuZCBpbnRvIHRoZSBHdWxmIG9mIE1leGljbywgd2hlcmUgdGhleSBib29zdCB0aGUgZ3Jvd3RoIG9mIGVub3Jtb3VzIGFsZ2FlIGZpZWxkcy4gV2hlbiB0aGUgYWxnYWUgZGllLCB0aGUgZGVjb21wb3NpdGlvbiBjb25zdW1lcyBveHlnZW4sIGxlYXZpbmcgYmVoaW5kIGEgem9uZSB3aGVyZSBhcXVhdGljIGxpZmUgY2Fubm90IHN1cnZpdmUuIFRoaXMgeWVhciwgdGhlIGRlYWQgem9uZSBjb3ZlcmVkIDUsODAwIHNxdWFyZSBtaWxlcyBvZiBzZWEgZmxvb3IsIGFib3V0IHRoZSBzaXplIG9mIENvbm5lY3RpY3V0LiBMYXJyeSBNY0tpbm5leSwgdGhlIGV4ZWN1dGl2ZSBkaXJlY3RvciBvZiB0aGUgSGFydGUgSW5zdGl0dXRlIGF0IFRleGFzIEEmTSBVbml2ZXJzaXR5LUNvcnB1cyBDaHJpc3RpLCBzYXlzIHRoZSBldGhhbm9sIG1hbmRhdGUgd29yc2VuZWQgdGhlIGRlYWQgem9uZS4gIk9uIHRoZSBvbmUgaGFuZCwgdGhlIGdvdmVybm1lbnQgaXMgbWFuZGF0aW5nIGV0aGFub2wgdXNlLCIgaGUgc2FpZCwgImFuZCBpdCBpcyB1bmZvcnR1bmF0ZWx5IGNvbWluZyBhdCB0aGUgZXhwZW5zZSBvZiB0aGUgR3VsZiBvZiBNZXhpY28uIiBUaGUgZGVhZCB6b25lIGlzIG9uZSBleGFtcGxlIGFtb25nIG1hbnkgb2YgYSBwZWN1bGlhciBldGhhbm9sIHNpZGUgZWZmZWN0OiBBcyBvbmUgZ292ZXJubWVudCBwcm9ncmFtIGVuY291cmFnZXMgZmFybWVycyB0byBwbGFudCBtb3JlIGNvcm4sIG90aGVyIHByb2dyYW1zIHBheSBtaWxsaW9ucyB0byBjbGVhbiB1cCB0aGUgbWVzcy4gX19fIE9iYW1hIGFkbWluaXN0cmF0aW9uIG9mZmljaWFscyBrbm93IHRoZSBldGhhbm9sIG1hbmRhdGUgaGFzbid0IGxpdmVkIHVwIHRvIGl0cyBiaWxsaW5nLiBUaGUgbmV4dC1nZW5lcmF0aW9uIGJpb2Z1ZWxzIHRoYXQgd2VyZSBzdXBwb3NlZCB0byB3ZWFuIHRoZSBjb3VudHJ5IG9mZiBjb3JuIGhhdmVuJ3QgeWV0IG1hdGVyaWFsaXplZC4gRXZlcnkgeWVhciwgdGhlIEVQQSBwcmVkaWN0cyBtaWxsaW9ucyBvZiBnYWxsb25zIG9mIGNsZWFuIGZ1ZWwgd2lsbCBiZSBtYWRlIGZyb20gYWdyaWN1bHR1cmFsIHdhc3RlLiBFdmVyeSB5ZWFyLCB0aGUgZ292ZXJubWVudCBpcyB3cm9uZy4gRXZlcnkgZGF5IHdpdGhvdXQgdGhvc2UgY2xlYW5lci1idXJuaW5nIGZ1ZWxzLCB0aGUgZXRoYW5vbCBpbmR1c3RyeSBzdGF5cyByZWxpYW50IG9uIGNvcm4gYW5kIHRoZSBlbnZpcm9ubWVudGFsIGVmZmVjdHMgbW91bnQuIFRoZSBFUEEgY291bGQgcmV2aXNpdCBpdHMgbW9kZWwgYW5kIHNlZSB3aGV0aGVyIGV0aGFub2wgaXMgYWN0dWFsbHkgYXMgZ29vZCBmb3IgdGhlIGVudmlyb25tZW50IGFzIG9mZmljaWFscyBwcmVkaWN0ZWQuIEJ1dCB0aGUgYWdlbmN5IHNheXMgaXQgZG9lc24ndCBoYXZlIHRoZSBtb25leSBvciB0aGUgbWFucG93ZXIuIEV2ZW4gdW5kZXIgdGhlIGdvdmVybm1lbnQncyBvcHRpbWlzdGljIHByb2plY3Rpb25zLCB0aGUgZXRoYW5vbCBtYW5kYXRlIHdhc24ndCBnb2luZyB0byByZWR1Y2UgZ3JlZW5ob3VzZSBnYXMgcmlnaHQgYXdheS4gQW5kIHdpdGggdGhlIG1vZGVsIHNvIGZhciBvZmYgZnJvbSByZWFsaXR5LCBpbmRlcGVuZGVudCBzY2llbnRpc3RzIHNheSBpdCdzIGhhcmQgdG8gbWFrZSBhbiBhcmd1bWVudCBmb3IgZXRoYW5vbCBhcyBhIGdsb2JhbCB3YXJtaW5nIHBvbGljeS4gIkknZCBoYXZlIHRvIHRoaW5rIHJlYWxseSBoYXJkIHRvIGNvbWUgdXAgd2l0aCBhIHNjZW5hcmlvIHdoZXJlIGl0J3MgYSBuZXQgcG9zaXRpdmUsIiBzYWlkIFNpbHZpYSBTZWNjaGksIGEgU291dGhlcm4gSWxsaW5vaXMgVW5pdmVyc2l0eSBhZ3JpY3VsdHVyZSBlY29ub21pc3QuIFNoZSBwYXVzZWQgYSBmZXcgbW9tZW50cywgdGhlbiBhZGRlZCwgIkknbSBzdHVtcGVkLiIgSW4gSnVuZSwgd2hlbiBPYmFtYSBnYXZlIGEgbWFqb3IgcG9saWN5IHNwZWVjaCBvbiByZWR1Y2luZyBncmVlbmhvdXNlIGdhcywgaGUgZGlkbid0IG1lbnRpb24gZXRoYW5vbC4gQmlvZnVlbHMgaW4gZ2VuZXJhbCByZWNlaXZlZCBhIGJyaWVmLCBwYXNzaW5nIHJlZmVyZW5jZS4gV2hhdCB3YXMgb25jZSBiaWxsZWQgYXMgYW4gZW52aXJvbm1lbnRhbCBib29uIGhhcyBtb3JwaGVkIGludG8gYSBnb3Zlcm5tZW50IHByb2dyYW0gdG8gaGVscCBydXJhbCBBbWVyaWNhIHN1cnZpdmUuICJJIGRvbid0IGtub3cgd2hldGhlciBJIGNhbiBtYWtlIHRoZSBlbnZpcm9ubWVudGFsIGFyZ3VtZW50LCBvciB0aGUgZWNvbm9taWMgYXJndW1lbnQsIiBWaWxzYWNrIHNhaWQgaW4gYW4gaW50ZXJ2aWV3IHdpdGggdGhlIEFQLiAiVG8gbWUsIGl0J3MgYW4gb3Bwb3J0dW5pdHkgYXJndW1lbnQuIiBDb25ncmVzcyBhbmQgdGhlIGFkbWluaXN0cmF0aW9uIGNvdWxkIGNoYW5nZSB0aGUgZXRoYW5vbCBtYW5kYXRlLCB0d2VhayBpdHMgZ29hbHMgb3IgZGVtYW5kIG1vcmUgc2FmZWd1YXJkcy4gR29pbmcgdG8gQ29uZ3Jlc3MgYW5kIHJld3JpdGluZyB0aGUgbGF3IHdvdWxkIG1lYW4gcGlja2luZyBhIGZpZ2h0IHdpdGggYWdyaWN1bHR1cmFsIGxvYmJ5aXN0cywgYSBmaWdodCB0aGF0IHdvdWxkIHB1dCB0aGUgYWRtaW5pc3RyYXRpb24gb24gdGhlIHNpZGUgb2YgYmlnIG9pbCBjb21wYW5pZXMsIHdoaWNoIGRlc3Bpc2UgdGhlIGV0aGFub2wgcmVxdWlyZW1lbnQuIFNvIHRoZSBldGhhbm9sIHBvbGljeSBjcnVpc2VzIG9uIGF1dG9waWxvdC4gQm9iIERpbm5lZW4sIHByZXNpZGVudCBvZiB0aGUgUmVuZXdhYmxlIEZ1ZWxzIEFzc29jaWF0aW9uLCB0aGUgZXRoYW5vbCBsb2JieWluZyBncm91cCwgc2FpZCB0aGVyZSdzIG5vIHJlYXNvbiB0byBjaGFuZ2UgdGhlIHN0YW5kYXJkcy4gRXRoYW5vbCBzdGlsbCBsb29rcyBnb29kIGNvbXBhcmVkIHRvIHRoZSBvaWwgaW5kdXN0cnksIHdoaWNoIGluY3JlYXNpbmdseSByZWxpZXMgb24gZW52aXJvbm1lbnRhbGx5IHJpc2t5IHRhY3RpY3MgbGlrZSBoeWRyYXVsaWMgZnJhY3R1cmluZyBvciBwdWxscyBmcm9tIGNhcmJvbi1oZWF2eSB0YXIgc2FuZHMuIExlcm95IFBlcmtpbnMsIHRoZSBmYXJtZXIgYWdvbml6aW5nIGFib3V0IHdoYXQgdG8gZG8gd2l0aCBoaXMgOTEgYWNyZXMsIHNheXMgaGUgbGlrZXMgZXRoYW5vbCBhcyBhIHByb2R1Y3QgYW5kIGFuIGluZHVzdHJ5LiBCdXQgaGUga25vd3MgaXQgZnVlbHMgdGhlIGNvcm4gcHJpY2VzIHRoYXQgYXJlIHRyYW5zZm9ybWluZyBoaXMgY291bnR5LiAiSWYgdGhleSBkbyBjaGFuZ2UgdGhlIGZ1ZWwgc3RhbmRhcmQsIHlvdSdsbCBzZWUgdGhlIHByaWNlIG9mIGNvcm4gY29tZSBkb3duIG92ZXJuaWdodCwiIGhlIHNhaWQuICJJIGxpa2UgdG8gc2VlIGEgZ29vZCBwcmljZSBmb3IgY29ybi4gQnV0IHdoZW4gaXQncyB0b28gaGlnaCwgaXQgaHVydHMgZXZlcnlib2R5LiIgSW52ZXN0b3JzIGZyb20gYXMgZmFyIGF3YXkgYXMgTWFyeWxhbmQgYW5kIFBlbm5zeWx2YW5pYSBoYXZlIGJvdWdodCB0aG91c2FuZHMgb2YgYWNyZXMgaW4gV2F5bmUgQ291bnR5LCBzZW5kaW5nIHByaWNlcyBza3lyb2NrZXRpbmcgZnJvbSAkMzUwIHBlciBhY3JlIGEgZGVjYWRlIGFnbyB0byAkNSwwMDAgdG9kYXkuIE9uZSBpbiBldmVyeSBmb3VyIGFjcmVzIG9mIGluIHRoZSBjb3VudHkgaXMgbm93IG93bmVkIGJ5IGFuIG91dC1vZi10b3duZXIuIFRob3NlIHdobyBzdGlsbCBvd24gbGFuZCBvZnRlbiByZW50IGl0IHRvIGZhcm1pbmcgY29tcGFuaWVzIG9mZmVyaW5nICQzMDAgb3IgbW9yZSBwZXIgYWNyZS4gUGVya2lucyBjb3VsZCBtYWtlIHBlcmhhcHMgJDI3LDAwMCBhIHllYXIgaWYgaGUgbGV0IHNvbWVib2R5IHBsYW50IGNvcm4gb24gaGlzIGxhbmQuIFRoYXQncyBub3RoaW5nIHRvIGRpc21pc3MgaW4gYSBjb3VudHkgd2hlcmUgdHlwaWNhbCBob3VzZWhvbGQgaW5jb21lIGlzICQzNiwwMDAuIEJ1dCBoZSBrbm93cyB3aGF0IHRoYXQgbWVhbnMuIEhlIHNlZXMgdGhlIGJsYWNrIHN0cmVha3MgaW4gaGlzIG5laWdoYm9yJ3MgY29ybmZpZWxkcywga25vd2luZyB0aGUgdG9wc29pbCB3YXNoZXMgYXdheSB3aXRoIGV2ZXJ5IHJhaW4uIEhlIGRvZXNuJ3Qgd2FudCB0aGF0IGZvciBoaXMgZmFtaWx5J3MgbGFuZC4gIllvdSBoYXZlIHRvIGRlY2lkZSwgZG8geW91IHdhbnQgdG8gYmUgdGhlIG9uZSB0by4uLiIgSGUgZG9lc24ndCBmaW5pc2ggaGlzIHNlbnRlbmNlLiAiV2UgYWxsIGhhdmUgdG8gbG9vayBhdCBvdXIgcG9ja2V0Ym9va3MuIgoKRWRpdG9y4oCZcyBOb3RlOiAgIE9iYW1hIERvbm9yIEJhbm5lZCBUaGlzIE1lc3NhZ2UgKFNob2NraW5nKQ==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJK5SMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI3MTcyMzgzMzAxZTY3Yjg=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZBUk0=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJQC38AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyI9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABp3A==</field><field name="id" class="java.lang.String">rO0ABXQAEGIxNzhiNTk3MDYyZjcwYTE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGoqAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwMzQ=</field><field name="title" class="java.lang.String">rO0ABXQAL1ByYWlyaWVzIFZhbmlzaCBpbiB0aGUgVVMgUHVzaCBmb3IgR3JlZW4gRW5lcmd5</field><field name="content" class="java.lang.String">rO0ABXQaM1JvYmVydCBNYWxzYW0gbmVhcmx5IHdlbnQgYnJva2UgaW4gdGhlIDE5ODBzIHdoZW4gY29ybiB3YXMgY2hlYXAuIFNvIG5vdyB0aGF0IHByaWNlcyBhcmUgaGlnaCBhbmQgaGUgY2FuIGZpbmFsbHkgbWFrZSBhIHByb2ZpdCwgaGUncyBub3QgYWJvdXQgdG8gYXBvbG9naXplIGZvciByaXBwaW5nIHVwIHByYWlyaWVsYW5kIHRvIHBsYW50IGNvcm4uIEFjcm9zcyB0aGUgRGFrb3RhcyBhbmQgTmVicmFza2EsIG1vcmUgdGhhbiAxIG1pbGxpb24gYWNyZXMgb2YgdGhlIEdyZWF0IFBsYWlucyBhcmUgZ2l2aW5nIHdheSB0byBjb3JuIGZpZWxkcyBhcyBmYXJtZXJzIHRyYW5zZm9ybSB0aGUgd2lsZCBleHBhbnNlIHRoYXQgb25jZSBzZXJ2ZWQgYXMgdGhlIGJhY2tkcm9wIGZvciBBbWVyaWNhbiBwaW9uZWVycy4gVGhpcyBleHBhbnNpb24gb2YgdGhlIENvcm4gQmVsdCBpcyBmdWVsZWQgaW4gcGFydCBieSBBbWVyaWNhJ3MgZ3JlZW4gZW5lcmd5IHBvbGljeSwgd2hpY2ggcmVxdWlyZXMgb2lsIGNvbXBhbmllcyB0byBibGVuZCBiaWxsaW9ucyBvZiBnYWxsb25zIG9mIGNvcm4gZXRoYW5vbCBpbnRvIHRoZWlyIGdhc29saW5lLiBJbiAyMDEwLCBmdWVsIGJlY2FtZSB0aGUgTm8uIDEgdXNlIGZvciBjb3JuIGluIEFtZXJpY2EsIGEgdGl0bGUgaXQgaGVsZCBpbiAyMDExIGFuZCAyMDEyIGFuZCBuYXJyb3dseSBsb3N0IHRoaXMgeWVhci4gVGhhdCBoZWxwcyBrZWVwIHByaWNlcyBoaWdoLgoKRWRpdG9y4oCZcyBOb3RlOiAgU2VuaW9ycyBTY29vcCBVcCBVbmNsYWltZWQgJDIwLDUwMCBDaGVja3M/IChTZWUgSWYgWW91IFF1YWxpZnkpICAiSXQncyBub3QgaGFyZCB0byBkbyB0aGUgbWF0aCB0aGVyZSBhcyB0byB3aGF0J3MgcHJvZml0YWJsZSB0byBoYXZlLCIgTWFsc2FtIHNhaWQuICJJIHRoaW5rIGFuIGV0aGFub2wgcGxhbnQgaXMgYSBmYXJtZXIncyBmcmllbmQuIiBXaGF0IHRoZSBncmVlbi1lbmVyZ3kgcHJvZ3JhbSBoYXMgbWFkZSBwcm9maXRhYmxlLCBob3dldmVyLCBpcyBmYXIgZnJvbSBncmVlbi4gQSBwb2xpY3kgaW50ZW5kZWQgdG8gcmVkdWNlIGdsb2JhbCB3YXJtaW5nIGlzIGVuY291cmFnaW5nIGEgZmFybWluZyBwcmFjdGljZSB0aGF0IGFjdHVhbGx5IGNvdWxkIHdvcnNlbiBpdC4gVGhhdCdzIGJlY2F1c2UgcGxvd2luZyBpbnRvIHVudG91Y2hlZCBncmFzc2xhbmQgcmVsZWFzZXMgY2FyYm9uIGRpb3hpZGUgdGhhdCBoYXMgYmVlbiBuYXR1cmFsbHkgbG9ja2VkIGluIHRoZSBzb2lsLiBJdCBhbHNvIGluY3JlYXNlcyBlcm9zaW9uIGFuZCByZXF1aXJlcyBmYXJtZXJzIHRvIHVzZSBmZXJ0aWxpemVycyBhbmQgb3RoZXIgaW5kdXN0cmlhbCBjaGVtaWNhbHMuIEluIHR1cm4sIHRoYXQgZGVzdHJveXMgbmF0aXZlIHBsYW50cyBhbmQgd2lwZXMgb3V0IHdpbGRsaWZlIGhhYml0YXRzLiBJdCBhcHBlYXJlZCBzbyBkYW1hZ2luZyB0aGF0IHNjaWVudGlzdHMgd2FybmVkIHRoYXQgQW1lcmljYSdzIGNvcm4tZm9yLWV0aGFub2wgcG9saWN5IHdvdWxkIGZhaWwgYXMgYW4gYW50aS1nbG9iYWwgd2FybWluZyBzdHJhdGVneSBpZiB0b28gbWFueSBmYXJtZXJzIHBsb3dlZCBvdmVyIHZpcmdpbiBsYW5kLiBUaGUgT2JhbWEgYWRtaW5pc3RyYXRpb24gYXJndWVkIHRoYXQgd291bGQgbm90IGhhcHBlbi4gQnV0IHRoZSBhZG1pbmlzdHJhdGlvbiBkaWRuJ3Qgc2V0IHVwIGEgd2F5IHRvIG1vbml0b3Igd2hldGhlciBpdCBhY3R1YWxseSBoYXBwZW5lZC4gSXQgZGlkLiBNb3JlIHRoYW4gMS4yIG1pbGxpb24gYWNyZXMgb2YgZ3Jhc3NsYW5kIGhhdmUgYmVlbiBsb3N0IHNpbmNlIHRoZSBmZWRlcmFsIGdvdmVybm1lbnQgcmVxdWlyZWQgdGhhdCBnYXNvbGluZSBiZSBibGVuZGVkIHdpdGggaW5jcmVhc2luZyBhbW91bnRzIG9mIGV0aGFub2wsIGFuIEFzc29jaWF0ZWQgUHJlc3MgYW5hbHlzaXMgb2Ygc2F0ZWxsaXRlIGRhdGEgZm91bmQuIFBsb3RzIHRoYXQgd2VyZSB3aWxkIGdyYXNzIG9yIHBhc3R1cmVsYW5kIHNldmVuIHllYXJzIGFnbyBhcmUgbm93IGNvcm4gYW5kIHNveWJlYW4gZmllbGRzLiBUaGF0J3MgaW4gYWRkaXRpb24gdG8gdGhlIDUgbWlsbGlvbiBhY3JlcyBvZiBmYXJtbGFuZCB0aGF0IGhhZCBiZWVuIGFzaWRlIGZvciBjb25zZXJ2YXRpb24g4oCUIG1vcmUgdGhhbiBZZWxsb3dzdG9uZSwgRXZlcmdsYWRlcyBhbmQgWW9zZW1pdGUgTmF0aW9uYWwgUGFya3MgY29tYmluZWQg4oCUIHRoYXQgaGF2ZSB2YW5pc2hlZCBzaW5jZSBPYmFtYSB0b29rIG9mZmljZS4gSW4gU291dGggRGFrb3RhLCBtb3JlIHRoYW4gMzcwLDAwMCBhY3JlcyBvZiBncmFzc2xhbmQgaGF2ZSBiZWVuIHVwcm9vdGVkIGFuZCBmYXJtZWQgZnJvbSBzaW5jZSAyMDA2LiBJbiBFZG11bmRzIENvdW50eSwgYSBydXJhbCBjb21tdW5pdHkgYWJvdXQgdHdvIGhvdXJzIG5vcnRoIG9mIHRoZSBjYXBpdGFsLCBQaWVycmUsIGF0IGxlYXN0IDQyLDAwMCBhY3JlcyBvZiBncmFzc2xhbmQgaGF2ZSBiZWNvbWUgY3JvcGxhbmQg4oCUIG9uZSBvZiB0aGUgbGFyZ2VzdCB0dXJub3ZlcnMgaW4gdGhlIHJlZ2lvbi4gTWFsc2FtIHJ1bnMgYSAxMy1zcXVhcmUtbWlsZSBmYW1pbHkgZmFybSB0aGVyZS4gSGUgZ3Jvd3MgY29ybiwgc295YmVhbnMgYW5kIHdoZWF0LCB0aGVuIHJlbnRzIG91dCBoaXMgZ3Jhc3NsYW5kIGZvciBncmF6aW5nLiBFYWNoIHllYXIsIHRoZSBmYW1pbHkgY29udmVydHMgYW5vdGhlciAxNjAgYWNyZXMgZnJvbSBncmFzcyB0byBjcm9wbGFuZC4gQ2hlbWljYWxzIGtpbGwgdGhlIGdyYXNzLiBNYWNoaW5lcyByZW1vdmUgdGhlIHJvY2tzLiBUaGVuIHRyYWN0b3JzIHBsb3cgaXQgdGhyZWUgdGltZXMgdG8gYnJlYWsgdXAgdGhlIHNvZCBhbmQgcHJlcGFyZSBpdCBmb3IgcGxhbnRpbmcuIFNjYXR0ZXJlZCBhbW9uZyBmaWVsZHMgb2YgNy1mb290IHRhbGwgY29ybiBhbmQgdGhpZ2gtaGlnaCBzb3liZWFucywgc29tZSBzdHJldGNoZXMgb2YgZ3Jhc3NsYW5kIHN0aWxsIGV4aXN0LiBDYXR0bGUgbXVuY2ggb24gc29tZSBncmFzcy4gQW5kICJwcmFpcmllIHBvdGhvbGVzIiDigJQgbmF0dXJhbCBwb25kcyByYW5naW5nIGZyb20gc21hbGwgcG9vbHMgdG8gbGFyZ2VyIGxha2VzIOKAlCBzdXBwb3J0IGEgc21hdHRlcmluZyBvZiBkdWNrcywgZ2Vlc2UsIHBlbGljYW5zIGFuZCBoZXJvbnMuIFlldCB3aXRoaW4gYSBtaWxlIG9mIE1hbHNhbSdzIGZhcm0sIGZlZGVyYWwgc2F0ZWxsaXRlIGRhdGEgc2hvdywgbW9yZSB0aGFuIDMwMCBhY3JlcyBvZiBncmFzc2xhbmQgaGF2ZSBiZWVuIGNvbnZlcnRlZCB0byBzb3liZWFucyBhbmQgY29ybiBzaW5jZSAyMDA2LiBOZWJyYXNrYSBoYXMgbG9zdCBhdCBsZWFzdCA4MzAsMDAwIGFjcmVzIG9mIGdyYXNzbGFuZCwgYSB0b3RhbCBsYXJnZXIgdGhhbiBOZXcgWW9yayBDaXR5LCBMb3MgQW5nZWxlcyBhbmQgRGFsbGFzIGNvbWJpbmVkLiAiSXQncyBncmVhdCB0byBzZWUgZmFybWVycyBtYWtpbmcgbW9uZXkuIEl0IGhhc24ndCBhbHdheXMgYmVlbiB0aGF0IHdheSwiIHNhaWQgQ3JhaWcgQ294IG9mIHRoZSBFbnZpcm9ubWVudGFsIFdvcmtpbmcgR3JvdXAuIEhlIGFkdm9jYXRlcyBmb3IgY2xlYW4gZW5lcmd5IGJ1dCBvcHBvc2VzIHRoZSBldGhhbm9sIG1hbmRhdGUuICJJZiB3ZSdyZSBnb2luZyB0byBwdXNoIHRoZSBsYW5kIHRoaXMgaGFyZCwgd2UgcmVhbGx5IG5lZWQgdG8gaW50ZW5zaWZ5IGNvbnNlcnZhdGlvbiBpbiBsb2Nrc3RlcCB3aXRoIHByb2R1Y3Rpb24sIGFuZCB0aGF0J3MganVzdCBub3QgaGFwcGVuaW5nLCIgaGUgc2FpZC4gSmVmZiBMYXV0dCwgQ0VPIG9mIFBvZXQsIHdoaWNoIG9wZXJhdGVzIGV0aGFub2wgcmVmaW5lcmllcyBhY3Jvc3MgdGhlIGNvdW50cnksIGluY2x1ZGluZyBpbiBTb3V0aCBEYWtvdGEsIHNhaWQgaXQncyB1cCB0byBmYXJtZXJzIGhvdyB0byB1c2UgdGhlaXIgbGFuZC4gIlRoZSBsYXN0IEkgY2hlY2tlZCwgaXQgaXMgc3RpbGwgYW4gb3BlbiBtYXJrZXQuIEFuZCBmYXJtZXJzIHRoYXQgb3duIGxhbmQgYXJlIGZyZWUgdG8gZmFybSB0aGVpciBsYW5kIHRvIHRoZSBleHRlbnQgdGhleSB0aGluayB0aGV5IGNhbiBtYWtlIG1vbmV5IG9uIGl0IG9yIHdoYXRldmVyIHB1cnBvc2UgdGhleSBuZWVkLCIgaGUgc2FpZC4gWWV0IENocmlzIFdyaWdodCwgYSBwcm9mZXNzb3IgYXQgU291dGggRGFrb3RhIFN0YXRlIFVuaXZlcnNpdHkgd2hvIGhhcyBzdHVkaWVkIGxhbmQgY29udmVyc2lvbiwgc2FpZDogIlRoZSBjb252ZXJzYXRpb24gYWJvdXQgbGFuZCBwcmVzZXJ2YXRpb24gc2hvdWxkIHN0YXJ0IG5vdyBiZWZvcmUgaXQgYmVjb21lcyBhIHNlcmlvdXMgcHJvYmxlbS4iIFdyaWdodCByZXZpZXdlZCB0aGUgQVAncyBtZXRob2RvbG9neSBmb3IgZGV0ZXJtaW5pbmcgbGFuZCBjb252ZXJzaW9uLiBUaGUgQVAncyBhbmFseXNpcyB1c2VkIGdvdmVybm1lbnQgc2F0ZWxsaXRlIGRhdGEgdG8gY291bnQgaG93IG11Y2ggZ3Jhc3NsYW5kIGV4aXN0ZWQgaW4gMjAwNiBpbiBlYWNoIGNvdW50eSwgdGhlbiBjb21wYXJlIGVhY2ggcGxvdCBvZiBsYW5kIHRvIGNvcnJlc3BvbmRpbmcgc2F0ZWxsaXRlIGRhdGEgZnJvbSAyMDEyLiBUaGUgZGF0YSBmcm9tIHRoZSBVLlMuIEdlb2xvZ2ljYWwgU3VydmV5IGFuZCB0aGUgRGVwYXJ0bWVudCBvZiBBZ3JpY3VsdHVyZSBpZGVudGlmeSBjb3JuIGFuZCBzb3liZWFuIGZpZWxkcy4gVGhhdCBhbGxvd2VkIHRoZSBBUCB0byBzZWUgd2hpY2ggcGxvdHMgb2YgZ3Jhc3NsYW5kIGJlY2FtZSBjcm9wbGFuZC4gVG8gcmVhY2ggaXRzIGNvbnNlcnZhdGl2ZSBlc3RpbWF0ZSBvZiAxLjIgbWlsbGlvbiBhY3JlcyBsb3N0LCB0aGUgQVAgZXhjbHVkZWQgZ3Jhc3NsYW5kIHRoYXQgaGFkIGJlZW4gc2V0IGFzaWRlIHVuZGVyIHRoZSBnb3Zlcm5tZW50J3MgQ29uc2VydmF0aW9uIFJlc2VydmUgUHJvZ3JhbSwgaW4gd2hpY2ggb2xkIGZhcm1sYW5kIGlzIGFsbG93ZWQgdG8gcmV0dXJuIHRvIGEgbmVhci1uYXR1cmFsIHN0YXRlLiBUaGUgQVAgdXNlZCBoYWxmLWFjcmUgc2VjdGlvbnMgb2YgZWFydGggYW5kIGV4Y2x1ZGVkIHRpbnkgdHJhY3RzIHRoYXQgYmVjYW1lIGNvcm4sIHdoaWNoIGV4cGVydHMgc2FpZCB3ZXJlIG1vc3QgbGlrZWx5IG91dGxpZXJzLiBDb3JuIHByaWNlcyBtb3JlIHRoYW4gZG91YmxlZCBpbiB0aGUgeWVhcnMgYWZ0ZXIgQ29uZ3Jlc3MgcGFzc2VkIHRoZSBldGhhbm9sIG1hbmRhdGUgaW4gMjAwNy4gTm93LCBNYWxzYW0gc2FpZCwgZmFybWVycyBjYW4gbWFrZSBhYm91dCAkNTAwIGFuIGFjcmUgcGxhbnRpbmcgY29ybi4gSGlzIGZhcm0gaGFzIGp1c3QgYmVjb21lIHByb2ZpdGFibGUgaW4gdGhlIHBhc3QgZml2ZSB5ZWFycywgYWxsb3dpbmcgaGltIGFuZCBoaXMgd2lmZSwgVGhlcmVzYSwgdG8gYnVpbGQgYSBuZXcgaG91c2Ugb24gdGhlIGZhcm1zdGVhZC4gRm91ciBtaWxlcyBzb3V0aCwgc2lnbnMgYXQgZWFjaCBlbmQgb2YgdGhlIHRvd24gb2YgUm9zY29lIGFubm91bmNlIGEgcG9wdWxhdGlvbiBvZiBvbmx5IDMyNC4gQnV0IHRoZSB0b3duLCB3aGljaCByZWxpZXMgaW4gcGFydCBvbiBpbmNvbWVzIGxpa2UgTWFsc2FtJ3MsIHN1cHBvcnRzIGEgc2Nob29sLCBhIHJlc3RhdXJhbnQsIGEgYmFuaywgYSBncm9jZXJ5IHN0b3JlIGFuZCBhIGxhcmdlIGZhcm0gbWFjaGluZXJ5IHN0b3JlLiBUaGUgbWFuYWdlciBvZiB0aGUgZXF1aXBtZW50IGRlYWxlcnNoaXAsIEthbGViIFJvZGdlcnMsIHNhaWQgdGhlIGJvb21pbmcgZmFybSBlY29ub215IGhhcyBoZWxwZWQgdGhlIHRvd24gYW5kIHRoZSBkZWFsZXJzaGlwIHByb3NwZXIuIFRoZSBidXNpbmVzcyB3aXRoIDI4IGVtcGxveWVlcyBsYXN0IHllYXIgc29sZCBhIGRvemVuIGNvbWJpbmVzIGF0IGFib3V0ICQzMDAsMDAwIGFwaWVjZSwgcGx1cyBtb3JlIHRoYW4gNjAgdHJhY3RvcnMgd29ydGggYmV0d2VlbiAkMTAwLDAwMCBhbmQgJDMwMCwwMDAsIGhlIHNhaWQuICJJZiB3ZSBkaWRuJ3QgaGF2ZSBhbnkgZmFybWVycyB3ZSB3b3VsZG4ndCBoYXZlIGEgY29tbXVuaXR5IGhlcmUuIFdlIHdvdWxkbid0IGhhdmUgYSBidXNpbmVzcy4gSSB3b3VsZG4ndCBiZSBzaXR0aW5nIGhlcmUuIEkgd291bGRuJ3QgYmUgYWJsZSB0byBmZWVkIG15IGZhbWlseSwiIFJvZGdlcnMgc2FpZC4gIkkgdGhpbmsgZXRoYW5vbCBpcyBhIHZlcnkgZ29vZCB0aGluZy4iIEppbSBGYXVsc3RpY2gsIHByZXNpZGVudCBvZiB0aGUgU291dGggRGFrb3RhIEdyYXNzbGFuZHMgQ29hbGl0aW9uLCBzYWlkIHRoZSBuYXRpb24ncyBldGhhbm9sIGFuZCBjcm9wIGluc3VyYW5jZSBwb2xpY2llcyBoYXZlIGVuY291cmFnZWQgdGhlIHRyYW5zZm9ybWF0aW9uIG9mIHRoZSBsYW5kLiBGYXVsc3RpY2gsIHdobyBmYXJtcyBhbmQgcmFuY2hlcyBpbiBjZW50cmFsIFNvdXRoIERha290YSBuZWFyIEhpZ2htb3JlLCBzYWlkIG11Y2ggb2YgdGhlIGxhbmQgYmVpbmcgY29udmVydGVkIGlzIG5vdCBzdWl0ZWQgdG8gY3JvcCBwcm9kdWN0aW9uLCBhbmQgU291dGggRGFrb3RhJ3Mgc3Ryb25nIHdpbmRzIGFuZCByYWlucyB3aWxsIGVyb2RlIHRoZSB0b3Bzb2lsLiAiSSBndWVzcyBhIGdvb2QgbW90dG8gd291bGQgYmUgdG8gZmFybSB0aGUgYmVzdCBhbmQgbGVhdmUgdGhlIHJlc3QsIiBoZSBzYWlkLgoKRWRpdG9y4oCZcyBOb3RlOiAgU2VuaW9ycyBTY29vcCBVcCBVbmNsYWltZWQgJDIwLDUwMCBDaGVja3M/IChTZWUgSWYgWW91IFF1YWxpZnkp</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJQC38AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDg3NjgzOGZhZDcxMWEzNDA=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZBUk0=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJVMdsAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyT1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyT1wo9cKP</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyK4UeuFHs</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAC/aA==</field><field name="id" class="java.lang.String">rO0ABXQAEDVkZDcyNjJmMjIzOGQ2NmE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMt4AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDcwODU=</field><field name="title" class="java.lang.String">rO0ABXQAOENvcm4gUHJpY2VzIFN1cmdlIDYlIGFzIFVTIEZhcm1lcnMgUGxhbnQgYXQgU25haWwncyBQYWNl</field><field name="content" class="java.lang.String">rO0ABXQL+FRoZSBhYnJ1cHQgc3Bpa2UgaW4gcHJpY2VzLCB3aGljaCBoYXZlIGJlZW4gbGFuZ3Vpc2hpbmcgbmVhciB0aGVpciBsb3dlc3QgbGV2ZWxzIHNpbmNlIGxhc3QgSnVuZSwgbGlmdGVkIHdoZWF0IGFuZCBzb3liZWFuIHByaWNlcyBhcm91bmQgMyBwZXJjZW50IGFzIHdlbGwuIEEgZHJvcCBpbiB0aGUgVS5TLiBkb2xsYXIgYWxzbyBhaWRlZCBnYWlucywgd2l0aCB0cmFkZXJzIGJhbmtpbmcgb24gdGhlIEZlZGVyYWwgUmVzZXJ2ZSBhbmQgdGhlIEV1cm9wZWFuIGNlbnRyYWwgYmFuayB0byBjb250aW51ZSBlZmZvcnRzIHRvIHN0aW11bGF0ZSBncm93dGguIEFmdGVyIHRoZSBjbG9zZSBvZiB0cmFkZSwgVS5TLiBnb3Zlcm5tZW50IGRhdGEgY29uZmlybWVkIHRyYWRlcnMnIHdvcnNlIGZlYXJzIGFib3V0IHRoZSBwYWNlIG9mIHNwcmluZyBwbGFudGluZzogb25seSA1IHBlcmNlbnQgb2YgdGhlIGNyb3Agd2FzIGluIHRoZSBncm91bmQgYXMgb24gU3VuZGF5LCBtYXRjaGluZyAxOTg0J3MgcmVjb3JkIGZvciBsb3dlc3QgcGVyY2VudGFnZSBwbGFudGVkIGZvciB0aGlzIHRpbWUgb2YgeWVhci4gUGxhbnRpbmdzIGxhc3QgeWVhciB3ZXJlIDUzIHBlcmNlbnQgZG9uZS4gTWFueSBpbnZlc3RvcnMgd2VyZSBiZXR0aW5nIG9uIGEgcmV0dXJuIHRvIGJlbmVmaWNpYWwgZ3Jvd2luZyBjb25kaXRpb25zIGFmdGVyIHRoZSB3b3JzdCBkcm91Z2h0IHNpbmNlIDE5MzQgcmVkdWNlZCB5aWVsZHMgYXQgaGFydmVzdCBhbmQgcHVzaGVkIGNvcm4gZnV0dXJlcyB0byBhIHJlY29yZCBsYXN0IEF1Z3VzdC4gIlNlbnRpbWVudCBoYXMgc2hpZnRlZCBmcm9tIGRyb3VnaHQgcmVsaWVmIHRvIHRoZSBwb3NzaWJpbGl0eSBvZiBhIG1ham9yIHByb2JsZW0sIiBzYWlkIEtlbiBTbWl0aG1pZXIsIGFuYWx5c3QgYXQgdGhlIEhpZ2h0b3dlciBSZXBvcnQgaW4gQ2hpY2Fnby4gVGhlIGdhaW5zIHdlcmUgbGlrZWx5IGFtcGxpZmllZCBieSBzcGVjdWxhdGl2ZSB0cmFkZXJzIHJhY2luZyB0byBjb3ZlciBiZWFyaXNoIHNob3J0IHBvc2l0aW9ucywgd2hpY2ggbGFzdCB3ZWVrIHJlYWNoZWQgdGhlaXIgbGFyZ2VzdCBpbiB0aHJlZSB5ZWFycy4gVHJhZGVycyBlc3RpbWF0ZWQgdGhhdCBpbnZlc3RtZW50IGZ1bmRzIGJvdWdodCAyNiwwMDAgY29ybiBjb250cmFjdHMgZHVyaW5nIHRoZSBzZXNzaW9uLCB0aGUgbW9zdCB0aGlzIHllYXIuIENoaWNhZ28gQm9hcmQgb2YgVHJhZGUgY29ybiBmdXR1cmVzIGZvciBKdWx5IGRlbGl2ZXJ5ICByb3NlIGJ5IHRoZWlyIDQwLWNlbnQgZGFpbHkgbGltaXQgdG8gY2xvc2UgYXQgJDYuNTktMy80IHBlciBidXNoZWwsIHRoZSBoaWdoZXN0IGxldmVsIHNpbmNlIE1hcmNoIDI4LiBEZWNlbWJlciBjb3JuLCB3aGljaCByZWZsZWN0cyB0aGUgaGFydmVzdCBvZiBhIG5ldyBVLlMuIGNyb3AsIGVuZGVkIHVwIDM1LTEvMiBjZW50cyBhdCAkNS41OS0xLzIsIGEgZ2FpbiBvZiA2LjggcGVyY2VudC4gQ29ybiBmdXR1cmVzIHNhbmsgdG8gYSAxMC1tb250aCBsb3cgZWFybGllciB0aGlzIG1vbnRoIGFmdGVyIHRoZSBVLlMuIEFncmljdWx0dXJlIERlcGFydG1lbnQgc2FpZCBmYXJtZXJzIHdvdWxkIHBsYW50IHRoZSBsYXJnZXN0IGNvcm4gYXJlYSBzaW5jZSAxOTMzLiBCdXQgb25lIG9mIHRoZSBjb2xkZXN0LCB3ZXR0ZXN0IHNwcmluZ3MgaW4gcmVjZW50IHllYXJzIGlzIHJhaXNpbmcgdGhlIHJpc2sgdGhhdCBjb3JuIHdpbGwgbm90IGJlIHBsYW50ZWQgYnkgdGhlIG9wdGltYWwgZGF0ZSBvZiBNYXkgMTUuIEZhcm1lcnMgaGF2ZSBhbHJlYWR5IGJlZW4gaGVzaXRhbnQgYWJvdXQgc2VsbGluZyBhbnkgb2YgdGhlaXIgY3JvcHMgbGVmdCBvdmVyIGZyb20gbGFzdCB5ZWFyIGFuZCB0aGlzIHNlYXNvbidzIHNwcmluZyBwbGFudGluZyBkZWxheXMga2VwdCB0aGVtIGVkZ3kuICJUaGVyZSdzIG5vdCBnb2luZyB0byBiZSBzZWxsaW5nIHVudGlsIHRoZXkgZ2V0IHNvbWUgY3JvcCBpbiB0aGUgZ3JvdW5kLiBUaGF0J3Mgd2h5IHRoZSBmcm9udCBlbmQgaXMgbGVhZGluZywiIHNhaWQgUmljaCBGZWx0ZXMsIHZpY2UgcHJlc2lkZW50IG9mIGNvbW1vZGl0eSByZXNlYXJjaCB3aXRoIFJKIE8nQnJpZW4sIGEgbWFqb3IgYWdyaWN1bHR1cmFsIGZ1dHVyZXMgYnJva2VyYWdlLiBEcmllciBhbmQgd2FybWVyIHdlYXRoZXIgZWFybHkgdGhpcyB3ZWVrIHdpbGwgYWxsb3cgVS5TLiBmYXJtZXJzIHRvIHBsYW50IGNvcm4sIGJ1dCBhbm90aGVyIHJvdW5kIG9mIHNob3dlcnMgaXMgZXhwZWN0ZWQgYmVnaW5uaW5nIG5lYXIgbWlkd2Vlaywgc2FpZCBKb2huIERlZSwgYWdyaWN1bHR1cmUgbWV0ZW9yb2xvZ2lzdCBmb3IgR2xvYmFsIFdlYXRoZXIgTW9uaXRvcmluZy4gIldlJ2xsIHN0YXJ0IG91dCBpbiBPSyBzaGFwZSwgdGhlbiBsYXRlIFR1ZXNkYXkgaW50byBXZWRuZXNkYXkgcmFpbnMgYmVnaW4gaW4gdGhlIHdlc3QgYW5kIHNwcmVhZCB0byB0aGUgZWFzdCBieSBUaHVyc2RheSBhbmQgRnJpZGF5LCIgRGVlIHNhaWQuIENCT1QgSnVseSB3aGVhdCBmdXR1cmVzIGZpbmlzaGVkIDI0IGNlbnRzLCBvciAzLjUgcGVyY2VudCwgaGlnaGVyIGF0ICQ3LjE2LTEvMiBwZXIgYnVzaGVsLiBDQk9UIEp1bHkgc295YmVhbnMgIGVuZGVkIDI3LTMvNCBjZW50cywgb3IgMiBwZXJjZW50LCBoaWdoZXIgYXQgJDE0LjA4LTMvNC4gV2hlYXQgd2FzIHVuZGVycGlubmVkIGJ5IGNvbmNlcm5zIHRoYXQgY3JvcCBzY291dHMgb24gYSB0b3VyIHRoaXMgd2VlayB3aWxsIGZpbmQgZnJlZXplLWRhbWFnZWQgd2hlYXQgZmllbGRzIGluIHRoZSB0b3AgZ3Jvd2luZyBzdGF0ZSBvZiBLYW5zYXMuIENyb3Agc2NvdXRzIC0gYWdyb25vbWlzdHMsIHdoZWF0IGJ1eWVycywgbWlsbGVycyBhbmQgYmFrZXJzIC0gd2lsbCBzdXJ2ZXkgd2hlYXQgZmllbGRzIGluIEthbnNhcyBpbiB0aGUgYW5udWFsIFdoZWF0IFF1YWxpdHkgQ291bmNpbCB0b3VyIGJlZ2lubmluZyBvbiBUdWVzZGF5LiBUaGUgc2NvdXRzIGFyZSBleHBlY3RlZCB0byBmaW5kIGZpZWxkcyBkYW1hZ2VkIGJ5IHRoZSBvbmUtdHdvIHB1bmNoIG9mIGRyb3VnaHQgYW5kIEFwcmlsIGZyb3N0cy4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT5UKWiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGExYmUxNjNhNTBmY2NiMzU=</field><field name="symbol" class="java.lang.String">rO0ABXQABUNFTlRB</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT5ZT8SAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAhzMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAhzMzMzMzN</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAhj1wo9cKP</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAhmZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAhmZmZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAGgaA==</field><field name="id" class="java.lang.String">rO0ABXQAEDM1YTcyN2Y2MmZhYWMwM2I=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mM58AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDMwNTU=</field><field name="title" class="java.lang.String">rO0ABXQAL0Nvcm4gUHJpY2VzIEhpdCAzLVllYXIgTG93IGFzIFVTIFN1cHBsaWVzIEJ1bGdl</field><field name="content" class="java.lang.String">rO0ABXQLNUNvcm4gZnV0dXJlcyBwbHVuZ2VkIHRvIGEgdGhyZWUteWVhciBsb3cgTW9uZGF5IGFmdGVyIHRoZSBVLlMuIERlcGFydG1lbnQgb2YgQWdyaWN1bHR1cmUgYm9vc3RlZCBpdHMgaW52ZW50b3J5IGVzdGltYXRlIGJ5IDI1IHBlcmNlbnQuIFNveWJlYW5zIGRyb3BwZWQgdG8gdGhlIGNoZWFwZXN0IGluIGZpdmUgd2Vla3MgYXMgc3VwcGxpZXMgdG9wcGVkIGFuYWx5c3QgZXN0aW1hdGVzIGJ5IDExIHBlcmNlbnQuIFN0b2NrcGlsZXMgb2YgY29ybiBvbiBTZXB0LiAxIHdlcmUgODI0IG1pbGxpb24gYnVzaGVscywgdGhlIFVTREEgc2FpZCBNb25kYXkgaW4gYSByZXBvcnQuIFRoYXQgY29tcGFyZWQgd2l0aCB0aGUgYWdlbmN54oCZcyBlc3RpbWF0ZSBvZiA2NjEgbWlsbGlvbiBvbiBTZXB0LiAxMi4gQW5hbHlzdHMgaW4gYSBCbG9vbWJlcmcgTmV3cyBzdXJ2ZXkgbGFzdCB3ZWVrIGV4cGVjdGVkIDY5NCBtaWxsaW9uLCBvbiBhdmVyYWdlLiBTb3liZWFuIGludmVudG9yaWVzIHdlcmUgMTQxIG1pbGxpb24gYnVzaGVscywgYW5kIGEgZ2F1Z2Ugb2YgZGVtYW5kIHR1bWJsZWQgNDEgcGVyY2VudCBpbiB0aGUgdGhyZWUgbW9udGhzIGVuZGVkIEF1Zy4gMzEgZnJvbSBhIHllYXIgZWFybGllci4gQ29ybiBoYXMgdHVtYmxlZCAzNiBwZXJjZW50IGluIDIwMTMsIHRoZSBiaWdnZXN0IGRyb3AgYW1vbmcgMjQgcmF3IG1hdGVyaWFscyBpbiB0aGUgU3RhbmRhcmQgJiBQb29y4oCZcyBHU0NJIFNwb3QgSW5kZXgsIGFtaWQgZm9yZWNhc3RzIGZvciBhIHJlY29yZCBjcm9wLiBEZW1hbmQgZm9yIHRoZSBVLlMuIGdyYWluIGZlbGwgdGhlIG1vc3Qgc2luY2UgMTk3NSBpbiB0aGUgcGFzdCB5ZWFyLiBUaGUgbmF0aW9uIGlzIHRoZSB3b3JsZOKAmXMgdG9wIGdyb3dlci4g4oCcVGhlIG1hcmtldCBpcyBnb2luZyB0byBiZSBkZWFsaW5nIHdpdGggYmlnIGNvcm4gc3VwcGxpZXMgZm9yIHRoZSBuZXh0IHllYXIsIGFuZCB0aGF04oCZcyBnb2luZyB0byBsaW1pdCByYWxsaWVzLOKAnSBEYWxlIER1cmNoaG9seiwgdGhlIHNlbmlvciBtYXJrZXQgYW5hbHlzdCBhdCBBZ3JpVmlzb3IgTExDIGluIEJsb29taW5ndG9uLCBJbGxpbm9pcywgc2FpZCBpbiBhIHRlbGVwaG9uZSBpbnRlcnZpZXcuIENvcm4gZnV0dXJlcyBkcm9wcGVkIDIgcGVyY2VudCB0byAkNC40NSBhIGJ1c2hlbCBhdCAxOjA5IHAubS4gb24gdGhlIENoaWNhZ28gQm9hcmQgb2YgVHJhZGUuIEVhcmxpZXIsIHRoZSBwcmljZSB0b3VjaGVkICQ0LjQyMjUsIHRoZSBsb3dlc3QgZm9yIGEgbW9zdC1hY3RpdmUgY29udHJhY3Qgc2luY2UgU2VwdC4gMSwgMjAxMC4gVHJhZGluZyB3YXMgMzkgcGVyY2VudCBhYm92ZSB0aGUgYXZlcmFnZSBpbiB0aGUgcGFzdCAxMDAgZGF5cyBmb3IgdGhpcyB0aW1lLCBhY2NvcmRpbmcgdG8gZGF0YSBjb21waWxlZCBieSBCbG9vbWJlcmcuIE9uIFNlcHQuIDEyLCB0aGUgVVNEQSBlc3RpbWF0ZWQgc295YmVhbiBpbnZlbnRvcmllcyBhdCAxMjUgbWlsbGlvbi4gTGFzdCB3ZWVrLCAyOCBhbmFseXN0cyBzdXJ2ZXllZCBieSBCbG9vbWJlcmcgTmV3cyBwcm9qZWN0ZWQgMTI3IG1pbGxpb24sIG9uIGF2ZXJhZ2UuIFRoZSBVLlMuIGlzIHRoZSB0b3AgcHJvZHVjZXIuICAgICAgICAgICAgICAgICAgICAgICBIYXJ2ZXN0IEFjY2VsZXJhdGVzIOKAnFN1cHBsaWVzIGFyZSBhIGxpdHRsZSBiaWdnZXIgdGhhbiBwZW9wbGUgZXhwZWN0ZWQs4oCdIFJhbmR5IE1pdHRlbHN0YWVkdCwgdGhlIGRpcmVjdG9yIG9mIHJlc2VhcmNoIGF0IFIuSi4gT+KAmUJyaWVuICYgQXNzb2NpYXRlcyBpbiBDaGljYWdvLCBzYWlkIGluIGEgdGVsZXBob25lIGludGVydmlldy4g4oCcV2l0aG91dCBhIGJ1bGxpc2ggc3VycHJpc2UsIHRoZSBtYXJrZXQgaXMgdW5kZXIgcHJlc3N1cmUgd2l0aCB0aGUgaGFydmVzdCBjb21pbmcgdmVyeSBxdWlja2x5LiBZaWVsZHMgY29sbGVjdGVkIHNvIGZhciBoYXZlIGJlZW4gYmV0dGVyIHRoYW4gZXhwZWN0ZWQsIGFuZCBub3cgd2XigJlsbCB3YWl0IHRvIHNlZSB3aGF0IGhhcHBlbnMgdG8gdGhlIGNyb3BzIHRoYXQgd2VyZSBwbGFudGVkIGxhdGUgYmVjYXVzZSBvZiB0aGUgZmxvb2Rpbmcu4oCdIFNveWJlYW4gZnV0dXJlcyBmb3IgTm92ZW1iZXIgZGVsaXZlcnkgZmVsbCAyLjMgcGVyY2VudCB0byAkMTIuODkyNSBhIGJ1c2hlbC4gRWFybGllciwgdGhlIG9pbHNlZWQgdG91Y2hlZCAkMTIuODQsIHRoZSBsb3dlc3Qgc2luY2UgQXVnLiAyMi4gVHJhZGluZyB3YXMgNDMgcGVyY2VudCBhYm92ZSB0aGUgYXZlcmFnZSBpbiB0aGUgcGFzdCAxMDAgZGF5cyBmb3IgdGhpcyB0aW1lLCBhY2NvcmRpbmcgdG8gZGF0YSBjb21waWxlZCBieSBCbG9vbWJlcmcuIFRocm91Z2ggU2VwdC4gMjcsIHRoZSBvaWxzZWVkIGRyb3BwZWQgNi40IHBlcmNlbnQgdGhpcyB5ZWFyLiBUaGUgVVNEQSBlYXJsaWVyIHRoaXMgbW9udGggcHJlZGljdGVkIGEgcmVjb3JkIGNvcm4gaGFydmVzdCBvZiAxMy44NDMgYmlsbGlvbiBidXNoZWxzLCAyOCBwZXJjZW50IGFib3ZlIGxhc3QgeWVhciwgc2lnbmFsaW5nIGxvd2VyIGNvc3RzIGZvciBsaXZlc3RvY2sgZmVlZC4gVGhlIGFnZW5jeSB3aWxsIHVwZGF0ZSBpdHMgcHJvamVjdGlvbnMgZm9yIGNyb3BzIG9uIE9jdC4gMTEuIENoZWFwZXIgY29ybiBpcyBib29zdGluZyBwcm9maXQgZm9yIEFyY2hlci1EYW5pZWxzLU1pZGxhbmQgQ28uLCB3aGljaCBtYWtlcyBldGhhbm9sIGZyb20gdGhlIGdyYWluLCBhbmQgU2FuZGVyc29uIEZhcm1zIEluYy4sIHRoZSB0aGlyZC1sYXJnZXN0IFUuUy4gcG91bHRyeSBwcm9kdWNlci4gQ29ybiBpcyB0aGUgYmlnZ2VzdCBVLlMuIGNyb3AsIGZvbGxvd2VkIGJ5IHNveWJlYW5zLCBoYXkgYW5kIHdoZWF0LCBVU0RBIGRhdGEgc2hvdy4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUFtPMCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDUxMmMwYWM0ZGNiMzU0OTY=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNBRk0=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUFyYxyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBQVR64UeuF</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBQYKPXCj1x</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBQGuFHrhR7</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBQQzMzMzMz</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBP71wo9cKP</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAKI1A==</field><field name="id" class="java.lang.String">rO0ABXQAEDc3OTFkNzU4NDIyYjFkZTM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKJhAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQ5MzA=</field><field name="title" class="java.lang.String">rO0ABXQAO0Zhcm0gSW5jb21lIFNlZW4gQ2xpbWJpbmcgMTUgUGVyY2VudCB0byBSZWNvcmQgb24gQmlnIENyb3Bz</field><field name="content" class="java.lang.String">rO0ABXQM11N1cmdpbmcgc3VwcGxpZXMgb2YgVS5TLiBjb3JuIGFuZCBzb3liZWFucyBjb3VwbGVkIHdpdGggaGlnaGVyIHJldmVudWUgZm9yIHNwZWNpYWx0eSBjcm9wcyB3aWxsIGJvb3N0IGZhcm0gaW5jb21lcyB0byBhIHJlY29yZCB0aGlzIHllYXIgZXZlbiBhZnRlciBncmFpbiBwcmljZXMgZmVsbCwgdGhlIFUuUy4gRGVwYXJ0bWVudCBvZiBBZ3JpY3VsdHVyZSBzYWlkLiBOZXQtZmFybSBpbmNvbWUgd2lsbCByZWFjaCAkMTMxIGJpbGxpb24sIHVwIDguNiBwZXJjZW50IGZyb20gJDEyMC42IGJpbGxpb24gZm9yZWNhc3QgaW4gQXVndXN0IGFuZCAxNSBwZXJjZW50IGhpZ2hlciB0aGFuIGEgeWVhciBlYXJsaWVyLCB0aGUgVVNEQSBzYWlkIGluIGEgcmVwb3J0LiBGYXJtZXJzIGluIHRoZSBVLlMuLCB0aGUgd29ybGTigJlzIGJpZ2dlc3QgY29ybiBncm93ZXIsIGFyZSBwcm9qZWN0ZWQgdG8gcHJvZHVjZSBhIHJlY29yZCAxMy45ODkgYmlsbGlvbiBidXNoZWxzIG9mIHRoZSBncmFpbiB0aGlzIHllYXIuIFNveWJlYW4gb3V0cHV0IHdpbGwgYmUgMy4yNTggYmlsbGlvbiBidXNoZWxzLCB0aGUgdGhpcmQtYmlnZ2VzdCBldmVyLCBnb3Zlcm5tZW50IGZvcmVjYXN0cyBzaG93LiBHbG9iYWwgZm9vZCBjb3N0cyB0cmFja2VkIGJ5IHRoZSBVbml0ZWQgTmF0aW9ucyBhcmUgMTQgcGVyY2VudCBiZWxvdyB0aGUgYWxsLXRpbWUgaGlnaCBzZXQgaW4gRmVicnVhcnkgMjAxMSBhcyBjcm9wIHN1cHBsaWVzIGdhaW5lZC4g4oCcQmlnZ2VyIGdyYWluIGNyb3BzIG1lYW4gZmFybWVycyBoYXZlIG1vcmUgYnVzaGVscyB0byBzZWxsLCBhbmQgdGhhdCBoZWxwcyB0byBvZmZzZXQgdGhlIGRyb3AgaW4gZ3JhaW4gcHJpY2VzLOKAnSBNaWNoYWVsIFN3YW5zb24sIHRoZSBzZW5pb3IgYWdyaWN1bHR1cmFsIGVjb25vbWlzdCBpbiBNaW5uZWFwb2xpcyBhdCBXZWxscyBGYXJnbyAmIENvLiwgdGhlIGxhcmdlc3QgVS5TLiBmYXJtIGxlbmRlciwgc2FpZCBpbiBhIHRlbGVwaG9uZSBpbnRlcnZpZXcuIOKAnEEgbG90IG9mIHNwZWNpYWx0eSBjcm9wcyBpbmNsdWRpbmcgaGF5LCB2ZWdldGFibGVzLCBmcnVpdHMgYW5kIG51dHMgaGF2ZSBkb25lIHZlcnkgd2VsbCB0aGlzIHllYXIuIFBpc3RhY2hpb3MgYW5kIGFsbW9uZHMgYXJlIGp1c3QgZ29sZC7igJ0gQ29ybiBwcmljZXMgb24gdGhlIENoaWNhZ28gQm9hcmQgb2YgVHJhZGUgc2x1bXBlZCAzOSBwZXJjZW50IHRoaXMgeWVhciwgdGhlIGJpZ2dlc3QgZGVjbGluZSBhbW9uZyB0aGUgMjQgY29tbW9kaXRpZXMgdHJhY2tlZCBieSB0aGUgU3RhbmRhcmQgJiBQb29y4oCZcyBHU0NJIFNwb3QgSW5kZXguIFRoZSBHU0NJIGdhdWdlIGRyb3BwZWQgMy43IHBlcmNlbnQsIHdoaWxlIHRoZSBNU0NJIEFsbC1Db3VudHJ5IFdvcmxkIEluZGV4IG9mIGVxdWl0aWVzIGNsaW1iZWQgMTggcGVyY2VudC4gU295YmVhbiBTaGlwbWVudHMgU2luY2UgU2VwdC4gMSwgc295YmVhbnMgaW5zcGVjdGVkIGZvciBleHBvcnQgc2hpcG1lbnQgcm9zZSA1LjkgcGVyY2VudCBmcm9tIGEgeWVhciBlYXJsaWVyIHRvIDU4NS42IG1pbGxpb24gYnVzaGVscywgdGhlIGZhc3Rlc3QgcGFjZSBldmVyLCBVU0RBIGRhdGEgc2hvdy4gVS5TLiBjb3JuIHN0b2NrcGlsZXMgb24gQXVnLiAzMSwgMjAxNCwgYmVmb3JlIG5leHQgeWVhcuKAmXMgaGFydmVzdCwgd2lsbCBiZSAxLjg4NyBiaWxsaW9uIGJ1c2hlbHMsIG1vcmUgdGhhbiBkb3VibGUgYSB5ZWFyIGVhcmxpZXIuIEludmVudG9yaWVzIGFyZSBhZGRpbmcgJDEyIGJpbGxpb24gdG8gZmFybSBpbmNvbWUgdGhpcyB5ZWFyLCBjb21wYXJlZCB3aXRoIGFjY291bnRpbmcgZm9yIGEgbG9zcyBvZiAkOC4xIGJpbGxpb24gaW4gMjAxMiBhZnRlciB0aGUgd29yc3QgZHJvdWdodCBzaW5jZSAxOTMwIHJhdmFnZWQgY3JvcHMuIOKAnE9uIHNveWJlYW5zLCBpdOKAmXMgbWFpbmx5IHRoYXQgaGlnaGVyIHF1YW50aXRpZXMgd2VyZSBtYXJrZXRlZCB0aGFuIGV4cGVjdGVkLOKAnSBNaXRjaCBNb3JlaGFydCwgYSBVU0RBIGVjb25vbWlzdCB3aG8gb3ZlcnNlZXMgdGhlIGluY29tZSByZXBvcnQsIHNhaWQgaW4gYSB0ZWxlcGhvbmUgaW50ZXJ2aWV3LiAiT24gY29ybiwgaXTigJlzIHRoZSByZXZlcnNlLiBJdOKAmXMgYSBwb3RlbnRpYWxseSByZWNvcmQgY3JvcCwgYW5kIGEgbG90IG9mIGl0IHdpbGwgYmUgaW4geWVhci1lbmQgaW52ZW50b3JpZXMs4oCZ4oCZIHdoaWNoIHRoZSBVU0RBIGZhY3RvcnMgaW50byBpbmNvbWVzLCBoZSBzYWlkLiBUaGUgdmFsdWUgb2YgY3JvcHMgc29sZCB0byBjb21wYW5pZXMgc3VjaCBhcyBDYXJnaWxsIEluYy4sIEFyY2hlci1EYW5pZWxzLU1pZGxhbmQgQ28uIGFuZCBCbHVlIERpYW1vbmQgR3Jvd2VycyB3aWxsIGJlICQyMTcuMiBiaWxsaW9uLCB1cCAyLjkgcGVyY2VudCBmcm9tIHRoZSBBdWd1c3QgZXN0aW1hdGUuIENyb3Agc2FsZXMgd2VyZSBhIHJlY29yZCAkMjIzLjUgYmlsbGlvbiBpbiAyMDEyLiBSZXZlbnVlIGZyb20gbGl2ZXN0b2NrIHNhbGVzIHdpbGwgaW5jcmVhc2UgNS44IHBlcmNlbnQgZnJvbSBhIHllYXIgZWFybGllciB0byBhbiBhbGwtdGltZSBoaWdoIG9mICQxODEuNSBiaWxsaW9uLiBSZWFsIEVzdGF0ZSBOZXQtY2FzaCBpbmNvbWUsIHdoaWNoIG1lYXN1cmVzIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gY2FzaCBleHBlbnNlcyBhbmQgdGhlIHZhbHVlIG9mIGNvbW1vZGl0aWVzIHNvbGQsIGlzIGZvcmVjYXN0IGF0ICQxMjkuNyBiaWxsaW9uLCAzLjUgcGVyY2VudCBsZXNzIHRoYW4gYSB5ZWFyIGVhcmxpZXIuIEZhcm0gcmVhbC1lc3RhdGUgYXNzZXRzIGFyZSBlc3RpbWF0ZWQgYXQgJDIuNDg0IHRyaWxsaW9uLCB1cCA3LjUgcGVyY2VudCBmcm9tIGxhc3QgeWVhciBhbmQgNDIgcGVyY2VudCBoaWdoZXIgdGhhbiAyMDA5LiBGYXJtIGV4cGVuc2VzIGFyZSBkb3duIDAuNiBwZXJjZW50IGZyb20gdGhlIEF1Z3VzdCBmb3JlY2FzdCB0byAkMzUyIGJpbGxpb24uIFRoYXTigJlzIHN0aWxsIHVwIDMuMiBwZXJjZW50IGZyb20gYSB5ZWFyIGVhcmxpZXIsIHRoZSAxMXRoIGluY3JlYXNlIGluIHRoZSBwYXN0IDEyIHllYXJzLCB0aGUgVVNEQSBzYWlkLiBJbiBib3RoIG5vbWluYWwgYW5kIGluZmxhdGlvbi1hZGp1c3RlZCBkb2xsYXJzLCAyMDEzIHByb2R1Y3Rpb24gZXhwZW5zZXMgYXJlIHRoZSBoaWdoZXN0IG9uIHJlY29yZC4gTGFib3IgYW5kIHJlbnQgY29zdHMgd2lsbCBpbmNyZWFzZSB0aGUgbW9zdCwgd2hpbGUgcHJvZHVjZXJzIGFyZSBwcm9qZWN0ZWQgdG8gcGF5IGxlc3MgZm9yIGZ1ZWwgYW5kIGZlcnRpbGl6ZXIu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKS/isAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDBiY2RiMDA1NzAyOGYyMTc=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZBUk0=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKYJIcAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA0PXCj1wo9</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA0wo9cKPXD</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA0PXCj1wo9</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA0TMzMzMzN</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA0TMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAB0BA==</field><field name="id" class="java.lang.String">rO0ABXQAEDdjNzc4ZDQ2NzdiNmQwNGY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKsaAAAA==</field></document></documents><date>2015-05-07T12:16:38-0500</date></cacheEntry>
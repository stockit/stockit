<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0DadQcm9maXQgZXhjbHVkaW5nIGNlcnRhaW4gaXRlbXMgaW4gdGhlIGZpc2NhbCBmb3VydGggcXVhcnRlciB3aWxsIGJlIDM1IGNlbnRzIHRvIDM3IGNlbnRzIGEgc2hhcmUgb24gc2FsZXMgb2YgMTIgYmlsbGlvbiB0byAxMjMgYmlsbGlvbiBKdW5pcGVyIHNhaWQgaW4gYSBzdGF0ZW1lbnQgVHVlc2RheSBBbmFseXN0cyBvbiBhdmVyYWdlIGFyZSBwcm9qZWN0aW5nIGFkanVzdGVkIHByb2ZpdCBvZiAzNiBjZW50cyBvbiAxMjMgYmlsbGlvbiBpbiByZXZlbnVlIGFjY29yZGluZyB0byBkYXRhIGNvbXBpbGVkIGJ5IEJsb29tYmVyZyBLZXZpbiBKb2huc29uIGNoaWVmIGV4ZWN1dGl2ZSBvZmZpY2VyIG9mIHRoZSBzZWNvbmQgYmlnZ2VzdCBtYWtlciBvZiBjb21wdXRlcm5ldHdvcmtpbmcgZXF1aXBtZW50IGJlaGluZCBDaXNjbyBTeXN0ZW1zIEluYyBzYWlkIGluIGFuIGludGVydmlldyB0aGF0IEp1bmlwZXIgaXMgY3V0dGluZyAyODAgam9icyBpbW1lZGlhdGVseSBUaGUgY3V0cyB3aWxsIHRha2UgcGxhY2UgYWNyb3NzIHRoZSBidXNpbmVzcyBoZSBzYWlkIFRoZSBjb21wYW55IGlzIGJlaW5nIGh1cnQgYnkgYSBzaGlmdCBpbiB0aGUgbmV0d29ya2luZyBpbmR1c3RyeSB0byBzb2Z0d2FyZSBmb3IgaGFuZGxpbmcgdGFza3MgaW5zdGVhZCBvZiBqdXN0IGhhcmR3YXJlIHN1Y2ggYXMgcm91dGVycyBhbmQgc3dpdGNoZXMgYWNjb3JkaW5nIHRvIFNjb3R0IFRob21wc29uIGFuIGFuYWx5c3QgYXQgRkJSIENhcGl0YWwgTWFya2V0cyAgQ28gV2hlbiB3ZSBzYXcgYSBndWlkZSB0aGF0IHdhcyBlc3NlbnRpYWxseSBpbmxpbmUgdG8gc2xpZ2h0bHkgYmVsb3cgZXhwZWN0YXRpb24gbWFueSBhcmUgbGlrZWx5IHRoaW5raW5nIHRoZXJlIG1pZ2h0IGJlIG1vcmUgcmlzayB0byB0aGUgZm91cnRoIHF1YXJ0ZXIgdGhhbiB0aGV5IG1pZ2h0IHdhbnQgdG8gdGFrZSBvbiBzYWlkIFRob21wc29uIHdobyBoYXMgYW4gdW5kZXJwZXJmb3JtIHJhdGluZyB0aGUgZXF1aXZhbGVudCBvZiBhIHNlbGwgb24gSnVuaXBlciBzaGFyZXMgVGhlcmVzIGEgZGVmaW5pdGUgc2hpZnQgZ29pbmcgb24gZXNwZWNpYWxseSBpbiB0aGUgc2VydmljZSBwcm92aWRlciBzcGFjZSBJZiB5b3VyZSBub3QgYmVuZWZpdGluZyBmcm9tIHRoYXQgc2hpZnQgeW91cmUgcHJvYmFibHkgbG9zaW5nIG91dCBvbiB0aGUgb3Bwb3J0dW5pdGllcyB5b3UgbWlnaHQgaGF2ZSBvdGhlcndpc2UgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEpvYiBDdXRzIFRlbGVjb21tdW5pY2F0aW9ucyBjb21wYW5pZXMgc3BlbmQgYmlsbGlvbnMgb2YgZG9sbGFycyB1cGdyYWRpbmcgdGhlaXIgbmV0d29ya3MgSXQgY29tZXMgaW4gY2h1bmtzIGFuZCBtYW55IGhhdmUgZGVsYXllZCBjb3N0bHkgbmV0d29yayByZXRyb2ZpdHRpbmcgdG8gc3F1ZWV6ZSBtb3JlIHByb2ZpdCBvdXQgb2YgZXhpc3RpbmcgaW5mcmFzdHJ1Y3R1cmUgYXMgZWNvbm9taWMgdHJvdWJsZXMgaGF2ZSBodXJ0IGNvbnN1bWVyIHNwZW5kaW5nIEluIHRoZSBmaXNjYWwgdGhpcmQgcXVhcnRlciBlbmRlZCBTZXB0IDMwIGFkanVzdGVkIHByb2ZpdCB3YXMgMzMgY2VudHMgYSBzaGFyZSB2ZXJzdXMgYW5hbHlzdHMgYXZlcmFnZSBwcm9qZWN0aW9uIGZvciAzMSBjZW50cyBTYWxlcyB3ZXJlIDExOSBiaWxsaW9uIGNvbXBhcmVkIHRoZSBhdmVyYWdlIGVzdGltYXRlIG9mIDExNyBiaWxsaW9uIEp1bmlwZXIgZGVjbGluZWQgYXMgbXVjaCBhcyA0NSBwZXJjZW50IGluIGV4dGVuZGVkIHRyYWRpbmcgVGhlIHNoYXJlcyBmZWxsIDI0IHBlcmNlbnQgdG8gMjAzNiBhdCB0aGUgY2xvc2UgaW4gTmV3IFlvcmsgbGVhdmluZyB0aGVtIHVwIDM1IHBlcmNlbnQgc28gZmFyIHRoaXMgeWVhciBUaGUgQ0VPIHNhaWQgdGhlIGpvYiBjdXRzIGFyZSBhIHJlc3VsdCBvZiBsb29raW5nIGF0IG91ciB0b3BsaW5lIGdyb3d0aCBhZ2VuZGEgZm9yIDIwMTQgSm9obnNvbiBkZWNsaW5lZCB0byBpbmRpY2F0ZSB0aGUgcHJvamVjdGVkIHNhdmluZ3MgZnJvbSB0aGUgbW92ZSAgICAgICAgICAgICAgICAgICAgICAgIEluZHVzdHJ5IENoYWxsZW5nZXMgQ2lzY28gYWxzbyB0cmltbWVkIGpvYnMgZWFybGllciB0aGlzIHllYXIgV2l0aCB0aGUgbGF0ZXN0IHJvdW5kIG9mIDQwMDAgY3V0cyBvciA1IHBlcmNlbnQgb2Ygc3RhZmYgYW5ub3VuY2VkIGluIEF1Z3VzdCBDaXNjbyB3aWxsIGhhdmUgZWxpbWluYXRlZCAxMjMwMCBqb2JzIG92ZXIgdGhlIHBhc3QgdHdvIHllYXJzIGFzIGl0IGhhcyBleGl0ZWQgY29uc3VtZXIgYnVzaW5lc3NlcyBhbmQgZm9jdXNlZCBvbiB0ZWNobm9sb2d5IHNlcnZpY2VzIGFuZCBzb2Z0d2FyZSBEZW1hbmQgZnJvbSBsYXJnZSBzZXJ2aWNlIHByb3ZpZGVycyBpbiBFdXJvcGUgd2FzIG1peGVkIHdoaWxlIFVTIGVudGVycHJpc2Ugc2FsZXMgd2VyZSBsb3dlciBpbiBwYXJ0IGFzIGN1c3RvbWVycyBoZWxkIG9mZiBvbiBzcGVuZGluZyBiZWNhdXNlIG9mIHRoZSBnb3Zlcm5tZW50IHNodXRkb3duIGFuZCBkZWJ0IGNlaWxpbmcgZmlnaHQgaW4gQ29uZ3Jlc3MgSm9obnNvbiBzYWlkIFRoZSB1bmNlcnRhaW50eSB3YXMgcmVmbGVjdGVkIGluIHRoZSBmb3VydGhxdWFydGVyIHJldmVudWUgZm9yZWNhc3QgaGUgc2FpZCBKb2huc29uIGFsc28gc2FpZCB0aGUgY29tcGFueSBpcyBpbiB0aGUgZmluYWwgcGhhc2VzIG9mIGl0cyBzZWFyY2ggZm9yIGhpcyByZXBsYWNlbWVudCBIZSBkZWNsaW5lZCB0byBwcm92aWRlIHNwZWNpZmljcyBUaGUgU3Vubnl2YWxlIENhbGlmb3JuaWFiYXNlZCBjb21wYW55IHNhaWQgaW4gSnVseSB0aGF0IEpvaG5zb24gYSBmb3JtZXIgTWljcm9zb2Z0IENvcnAgZXhlY3V0aXZlIHdobyBoYXMgYmVlbiBKdW5pcGVycyBDRU8gZm9yIGZpdmUgeWVhcnMgaXMgcmV0aXJpbmcgSm9obnNvbiBzYWlkIGF0IHRoZSB0aW1lIHRoYXQgdGhlIGRlY2lzaW9uIHdhcyBwZXJzb25hbCBhbmQgdW5yZWxhdGVkIHRvIEp1bmlwZXJzIHBlcmZvcm1hbmNlIEp1bmlwZXJzIHN0b2NrIGhhcyBkZWNsaW5lZCBhYm91dCAxOSBwZXJjZW50IHNpbmNlIEpvaG5zb25zIGFycml2YWwgYXMgQ0VPIGluIFNlcHRlbWJlciAyMDA4IEp1bmlwZXIgZGlzY2xvc2VkIGluIEF1Z3VzdCB0aGF0IGl0cyBiZWluZyBpbnZlc3RpZ2F0ZWQgYnkgdGhlIFVTIFNlY3VyaXRpZXMgYW5kIEV4Y2hhbmdlIENvbW1pc3Npb24gYW5kIERlcGFydG1lbnQgb2YgSnVzdGljZSBmb3IgcG9zc2libGUgdmlvbGF0aW9ucyBvZiB0aGUgVVMgRm9yZWlnbiBDb3JydXB0IFByYWN0aWNlcyBBY3Qgd2hpY2ggcHJvaGliaXRzIFVTIGNvbXBhbmllcyBmcm9tIHBheWluZyBicmliZXMgdG8gZm9yZWlnbiBvZmZpY2lhbHMgdG8gd2luIGJ1c2luZXNzIEp1bmlwZXIgaXMgY29vcGVyYXRpbmcgd2l0aCB0aGUgaW52ZXN0aWdhdGlvbnMgYW5kIGNhbnQgcHJlZGljdCB0aGUgc2NvcGUgb3IgZHVyYXRpb24gTWljaGFlbCBCdXNzZWxlbiBhIHNwb2tlc21hbiBmb3IgdGhlIGNvbXBhbnkgc2FpZCBpbiBBdWd1c3R0AARyb3dzdXEAfgAKAAAAAXQAATV0AAVzdGFydHVxAH4ACgAAAAF0AAEwdAACZmx1cQB+AAoAAAABdABvYXJ0aWNsZUlkLHRpdGxlLGNvbnRlbnQsZGF0ZSxzdG9ja0hpc3RvcnlJZCxzeW1ib2wsaGlzdG9yeURhdGUsb3BlbixoaWdoLGxvdyxjbG9zZSxhZGpDbG9zZSx2b2x1bWUsaWQsX3ZlcnNpb25fdAACZnF1cQB+AAoAAAABdAA6aGlzdG9yeURhdGU6WzIwMTItMDMtMTJUMDA6MDA6MDBaIFRPIDIwMTMtMDMtMjdUNTk6NTk6NTlaXXgAcA==</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTI2MTAw</field><field name="title" class="java.lang.String">rO0ABXQANUhQIFNheXMgTGF5b2ZmcyB0byBUb3RhbCAyNywwMDA7IFByb2ZpdCBUb3BzIEZvcmVjYXN0</field><field name="content" class="java.lang.String">rO0ABXQUbEhld2xldHQtUGFja2FyZCBDby4gc2hhcmVzIHJvc2UgYWZ0ZXIgdGhlIHdvcmxk4oCZcyBsYXJnZXN0IHBlcnNvbmFsLWNvbXB1dGVyIG1ha2VyIGFubm91bmNlZCBwbGFucyB0byBzbGljZSBpdHMgd29ya2ZvcmNlIGJ5IDI3LDAwMCwgb3IgYWJvdXQgOCBwZXJjZW50LCBhbmQgcmVwb3J0ZWQgYmV0dGVyLXRoYW4tZm9yZWNhc3QgZmlzY2FsIHNlY29uZC1xdWFydGVyIHNhbGVzIGFuZCBwcm9maXQuIFByb2ZpdCBiZWZvcmUgc29tZSBjb3N0cyBpbiB0aGUgcXVhcnRlciBlbmRlZCBpbiBBcHJpbCB3YXMgOTggY2VudHMgYSBzaGFyZSwgdGhlIGNvbXBhbnkgc2FpZCBpbiBhIHN0YXRlbWVudCBXZWRuZXNkYXkuIFRoYXQgY29tcGFyZWQgd2l0aCBhbmFseXN0c+KAmSA5MS1jZW50IGF2ZXJhZ2UgZXN0aW1hdGUsIGFjY29yZGluZyB0byBkYXRhIGNvbXBpbGVkIGJ5IEJsb29tYmVyZy4gU2FsZXMgd2VyZSAkMzAuNyBiaWxsaW9uLCB0b3BwaW5nIHRoZSBhdmVyYWdlIHByb2plY3Rpb24gb2YgJDI5LjkgYmlsbGlvbi4gVGhlIHNoYXJlcyByb3NlIGFzIG11Y2ggYXMgMTIgcGVyY2VudC4gSGV3bGV0dC1QYWNrYXJk4oCZcyBmb3JlY2FzdCBmb3IgdGhpcmQtcXVhcnRlciBwcm9maXQgd2FzIGxlc3MgdGhhbiBhbmFseXN0cyBwcmVkaWN0ZWQsIGFzIHRoZSBjb21wYW55IGdyYXBwbGVzIHdpdGggc2xvd2VyIGRlbWFuZCBmb3IgcHJpbnRlcnMsIHNlcnZpY2VzIGFuZCBkYXRhLWNlbnRlciBlcXVpcG1lbnQuIFRoZSBqb2IgY3V0cywgd2hpY2ggd2lsbCBjb21lIHRocm91Z2ggZmlyaW5ncyBhbmQgZWFybHkgcmV0aXJlbWVudCBvZmZlcnMgYnkgT2N0b2JlciAyMDE0LCB3aWxsIGdlbmVyYXRlIGFubnVhbCBzYXZpbmdzIG9mIGFzIG11Y2ggYXMgJDMuNSBiaWxsaW9uLiBNYW55IG9mIHRoZSBlbXBsb3llZSBjdXRzIHdpbGwgY29tZSBpbiB0aGUgYWlsaW5nIGVudGVycHJpc2Ugc2VydmljZXMgZ3JvdXAsIHdoaWNoIG1hbmFnZXMgZGF0YSBjZW50ZXJzIGFuZCBwcm92aWRlcyBpbmZvcm1hdGlvbi10ZWNobm9sb2d5IGNvbnN1bHRpbmcuIOKAnElUIHNwZW5kaW5nIGlzIHNsb3dpbmcs4oCdIHNhaWQgQnJpYW4gV2hpdGUsIGFuIGFuYWx5c3QgYXQgVG9wZWthIENhcGl0YWwgTWFya2V0cyBpbiBOZXcgWW9yaywgd2hvIHJlY29tbWVuZHMgaG9sZGluZyB0aGUgc2hhcmVzLiBTYXZpbmdzIGZyb20gdGhlIGpvYiBjdXRzIGNvdWxkIGNvdW50ZXIgc29tZSBvZiB0aGUgb3RoZXIgY2hhbGxlbmdlcyBmYWNpbmcgSGV3bGV0dC1QYWNrYXJkLCBoZSBzYWlkLiDigJxJZiB5b3UgZ28gdGhyb3VnaCB0aGUgbWV0cmljcywgdGhleeKAmXJlIGp1c3QgdmVyeSBpbmVmZmljaWVudC7igJ0gSGV3bGV0dC1QYWNrYXJkIHNoYXJlcyByb3NlIGFzIGhpZ2ggYXMgJDIzLjUyIGFmdGVyIHRoZSBhbm5vdW5jZW1lbnRzLiBUaGV5IGhhZCBmYWxsZW4gMy4yIHBlcmNlbnQgdG8gJDIxLjA4IGF0IFdlZG5lc2RheeKAmXMgY2xvc2UgaW4gTmV3IFlvcmssIGFuZCBoYXZlIGRlY2xpbmVkIDE4IHBlcmNlbnQgdGhpcyB5ZWFyLiBXaGl0bWFu4oCZcyBUdXJuYXJvdW5kIE1lZyBXaGl0bWFuLCBjaGllZiBleGVjdXRpdmUgb2ZmaWNlciBzaW5jZSBTZXB0ZW1iZXIsIGlzIHN0cnVnZ2xpbmcgd2l0aCBhIHR1cm5hcm91bmQgZWZmb3J0IGFpbWVkIGF0IHJlZHVjaW5nIGNvc3RzIGFuZCByZXZlcnNpbmcgYSBzYWxlcyBzbHVtcCB0aGF0IGxlZCB0byB0aGUgb3VzdGVyIG9mIGhlciBwcmVkZWNlc3NvciwgTGVvIEFwb3RoZWtlci4gU2hlIGhhcyBzYWlkIHRoZSBjb21wYW55IG5lZWRzIHRvIG1ha2UgaXRzIHByb2R1Y3RzIGFuZCBzZXJ2aWNlcyBtb3JlIGNvbXBldGl0aXZlIGFuZCBzcGVuZCBtb3JlIG9uIHJlc2VhcmNoIGFuZCBwcm9kdWN0IGRldmVsb3BtZW50LgogRm9yIHRoZSBmaXNjYWwgdGhpcmQgcXVhcnRlciwgd2hpY2ggZW5kcyBpbiBKdWx5LCBwcm9maXQgZXhjbHVkaW5nIGNlcnRhaW4gaXRlbXMgd2lsbCBiZSA5NCBjZW50cyB0byA5NyBjZW50cyBhIHNoYXJlLCBQYWxvIEFsdG8sIENhbGlmb3JuaWEtYmFzZWQgSGV3bGV0dC1QYWNrYXJkIHNhaWQgaW4gdGhlIHN0YXRlbWVudC4gVGhhdCBjb21wYXJlcyB3aXRoIHRoZSAkMS4wMiBhdmVyYWdlIG9mIGFuYWx5c3QgZXN0aW1hdGVzIGNvbXBpbGVkIGJ5IEJsb29tYmVyZy4gVGhlIGNvbXBhbnkgZGlkbuKAmXQgcHJvdmlkZSBhIHRoaXJkLXF1YXJ0ZXIgc2FsZXMgZm9yZWNhc3QuIEFuYWx5c3RzIGV4cGVjdCBhIDMuMSBwZXJjZW50IGRlY2xpbmUgdG8gJDMwLjMgYmlsbGlvbi4gRm9yIHRoZSBmaXNjYWwgeWVhciwgcHJvZml0IHdpbGwgYmUgJDQuMDUgdG8gJDQuMTAgYSBzaGFyZSwgaGlnaGVyIHRoYW4gYW5hbHlzdHPigJkgcHJvamVjdGlvbnMgZm9yICQ0LjAyLiDigJhFdmVyeSBCdXNpbmVzcyBVbml04oCZIFRoZSBlbnRlcnByaXNlIHNlcnZpY2VzIGdyb3VwIHdpbGwgdGFrZSBhIGxhcmdlciBudW1iZXIgb2Ygam9iIGN1dHMgdGhhbiBvdGhlciBncm91cHMsIHNhaWQgSGV3bGV0dC1QYWNrYXJkIENoaWVmIEZpbmFuY2lhbCBPZmZpY2VyIENhdGhpZSBMZXNqYWssIHRob3VnaCBzaGUgZGVjbGluZWQgdG8gc3BlY2lmeSB0aGUgbnVtYmVyLiDigJxUaGlzIHdhc27igJl0IGEgcGVhbnV0LWJ1dHRlciBzcHJlYWQs4oCdIHNoZSBzYWlkIGluIGFuIGludGVydmlldyB0b2RheS4gTGFzdCB3ZWVrLCBwZW9wbGUgZmFtaWxpYXIgd2l0aCB0aGUgbWF0dGVyIHNhaWQgdGhlIGNvbXBhbnkgcGxhbnMgdG8gcmVkdWNlIGl0cyBzZXJ2aWNlcyB3b3JrZm9yY2UgYnkgMTAsMDAwIHRvIDE1LDAwMCBwZW9wbGUuIE5vIHVuaXQgb2YgdGhlIGNvbXBhbnkgd2FzIHNwYXJlZCBjdXRzLCBMZXNqYWsgc2FpZC4g4oCcRXZlcnkgYnVzaW5lc3MgdW5pdCwgZXZlcnkgZnVuY3Rpb24gYW5kIGV2ZXJ5IHJlZ2lvbiBoYXMgYSByb2xlIHRvIHBsYXkgaGVyZSzigJ0gc2hlIHNhaWQuIFRoZSBjb21wYW55IHJhaXNlZCBpdHMgcHJvZml0IGZvcmVjYXN0IGZvciB0aGUgeWVhciBiZWNhdXNlIGl0IHdpbGwgYmVnaW4gdG8gc2VlIGNvc3Qgc2F2aW5ncyBpbiB0aGUgZmlzY2FsIGZvdXJ0aCBxdWFydGVyLCBMZXNqYWsgc2FpZC4gVGhlIGpvYiBjdXRzIHdpbGwgcGFyZSBIZXdsZXR0LVBhY2thcmTigJlzIHdvcmtmb3JjZSBvZiAzNDksNjAwLiBUaGUgY29tcGFueeKAmXMgZW50ZXJwcmlzZSBzZXJ2aWNlcyBidXNpbmVzcyBleHBhbmRlZCB3aGVuIEhld2xldHQtUGFja2FyZCBib3VnaHQgRWxlY3Ryb25pYyBEYXRhIFN5c3RlbXMgQ29ycC4gZm9yICQxMy4yIGJpbGxpb24gaW4gMjAwOC4gQ29tcGV0aW5nIFdpdGggSUJNIFRoZSB1bml0IGNvbXBldGVzIHdpdGggSW50ZXJuYXRpb25hbCBCdXNpbmVzcyBNYWNoaW5lcyBDb3JwLiwgSW5mb3N5cyBMdGQuIGFuZCBvdGhlcnMgaW4gdGhlIG1hcmtldCBmb3IgbWFuYWdpbmcgY29tcGFuaWVz4oCZIElUIG9wZXJhdGlvbnMuIFlldCB0aGUgZ3Jvd3RoIGluIHRoZSBzZXJ2aWNlcyBtYXJrZXQgaGFzIHNoaWZ0ZWQgYXdheSBmcm9tIHRoZSBsYWJvci1pbnRlbnNpdmUgb3V0c291cmNpbmcgY29udHJhY3RzIHRoYXQgbWFkZSB1cCBtb3N0IG9mIEVEU+KAmXMgc2FsZXMsIHRoZSBjb21wYW55IGhhcyBzYWlkLiBDdXN0b21lcnMgd2FudCBoZWxwIG1vZGVybml6aW5nIGJ1c2luZXNzIGFwcGxpY2F0aW9ucywgcmV0b29saW5nIGRhdGEgY2VudGVycyBmb3IgSW50ZXJuZXQtZGVsaXZlcmVkIGNsb3VkLWNvbXB1dGluZyBzb2Z0d2FyZSwgYW5kIGFuYWx5emluZyByZWFtcyBvZiBkYXRhLCBhbmQgSGV3bGV0dC1QYWNrYXJkIGRvZXNu4oCZdCBoYXZlIGVub3VnaCBleHBlcnRzIGluIHRob3NlIGFyZWFzIHRvIHdpbiBkZWFscywgZm9ybWVyIENFTyBBcG90aGVrZXIgYW5kIG90aGVyIGV4ZWN1dGl2ZXMgaGF2ZSBzYWlkLiBTdGlsbCwgdGhlIGpvYiBjdXRzIGNvdWxkIHRha2UgeWVhcnMgdG8gaW1wcm92ZSBwcm9maXRzLCBLYXR5IEh1YmVydHksIGFuIGFuYWx5c3QgYXQgTW9yZ2FuIFN0YW5sZXkgaW4gTmV3IFlvcmssIHNhaWQgaW4gYSBNYXkgMTcgcmVzZWFyY2ggbm90ZS4g4oCcV2UgdmlldyBhbnkgcmVzdHJ1Y3R1cmluZyBhbm5vdW5jZW1lbnQgYXMgYSBwb3NpdGl2ZSBtb3ZlLCBidXQgb25lIHRoYXQgd2lsbCB0YWtlIHNldmVyYWwgeWVhcnMgdG8gc3VzdGFpbmFibHkgaW1wcm92ZSBtYXJnaW5zLCBFUFMgYW5kIGZyZWUgY2FzaCBmbG93LOKAnSBzaGUgc2FpZC4gQm9vc3RpbmcgUiZEIFdoaXRtYW4gaGFzIHNhaWQgdGhlIGNvbXBhbnkgYWxzbyBuZWVkcyB0byBib29zdCBSJkQgc3BlbmRpbmcsIHdoaWNoIHdhcyAkMy4yNSBiaWxsaW9uIGluIHRoZSBsYXN0IGZpc2NhbCB5ZWFyLiBCcmlhbiBNYXJzaGFsbCwgYW4gYW5hbHlzdCBhdCBJU0kgR3JvdXAsIHNhaWQgaW4gYSByZXNlYXJjaCBub3RlIGxhc3QgbW9udGggdGhlIGNvbXBhbnkgb3VnaHQgdG8gc3BlbmQgJDQgYmlsbGlvbiB0byAkNSBiaWxsaW9uIG9uIFImRCB0byBjb21wZXRlIHdpdGggSUJNIGFuZCBDaXNjbyBTeXN0ZW1zIEluYy4gaW4gZGV2ZWxvcGluZyBuZXcgcHJvZHVjdHMgZm9yIGNvcnBvcmF0ZSBkYXRhIGNlbnRlcnMuIEluIHRoZSBQQyBtYXJrZXQsIEhld2xldHQtUGFja2FyZCBpcyBmaWdodGluZyBBcHBsZSBJbmMu4oCZcyByaXNpbmcgbWFya2V0IHNoYXJlIGZvciBpdHMgTWFjIGNvbXB1dGVycyBhbmQgaVBhZCB0YWJsZXQuIEhld2xldHQtUGFja2FyZOKAmXMgcmVwb3J0IGZvbGxvd3MgTm8uIDMgUEMgbWFrZXIgRGVsbCBJbmMu4oCZcyBmb3JlY2FzdCB5ZXN0ZXJkYXkgZm9yIGxvd2VyLXRoYW4tcHJvamVjdGVkIHNhbGVzIGZvciB0aGUgcXVhcnRlciBlbmRpbmcgaW4gSnVseSwgYXMgZGVtYW5kIGZvciBzbWFydHBob25lcyBhbmQgdGFibGV0IGNvbXB1dGVycyBlcm9kZXMgUEMgc2FsZXMuIFRhYmxldCBzYWxlcyBhcmUgY3V0dGluZyBpbnRvIHRob3NlIG9mIHRyYWRpdGlvbmFsIGxhcHRvcHM6IDExOC45IG1pbGxpb24gdGFibGV0IGRldmljZXMgd2lsbCBiZSBzb2xkIGluIDIwMTIsIGFsbW9zdCBkb3VibGluZyBmcm9tIDIwMTEsIGFjY29yZGluZyB0byBtYXJrZXQtcmVzZWFyY2ggZmlybSBHYXJ0bmVyIEluYy4sIHdpdGggQXBwbGUgYWNjb3VudGluZyBmb3IgNjEuNCBwZXJjZW50IG9mIHRoZSBtYXJrZXQuIFBDIHNoaXBtZW50cyB3b3JsZHdpZGUgd2lsbCByaXNlIDQuNCBwZXJjZW50IHRvIDM2OCBtaWxsaW9uIHRoaXMgeWVhciwgR2FydG5lciBlc3RpbWF0ZXMu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATd4ENyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDIzMWUwMWFmYjUzZmQwMjE=</field><field name="symbol" class="java.lang.String">rO0ABXQAAVI=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATd9NziAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBFwAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBGDMzMzMzN</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBFqj1wo9cK</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBGCj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBE0euFHrhS</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAABG+lA==</field><field name="id" class="java.lang.String">rO0ABXQAEDhiYjdiZGRlNTY0YTU0YWM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHWJAAAQ==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTI2MTg5</field><field name="title" class="java.lang.String">rO0ABXQAUFlhaG9v4oCZcyBDRU8gRGVwYXJ0cyBBbWlkIElucXVpcnkgYXMgQWN0aXZpc3QgSW52ZXN0b3IgTG9lYiBXaW5zIEJvYXJkIFNoYWtlLXVw</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATdJt6CAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDYwN2ZhNTYzMWVhYzg0MzI=</field><field name="symbol" class="java.lang.String">rO0ABXQABVRQTlRG</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATdO3fyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkmZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkmZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkmZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkmZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAihR64UeuF</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGVjZGZjZWVhOWE5N2NmYmU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mI/QAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE2MDA4</field><field name="title" class="java.lang.String">rO0ABXQAMVBhbG8gQWx0byBOZXR3b3Jrc+KAmSBQcm9maXQsIFNhbGVzIFRvcCBFc3RpbWF0ZXM=</field><field name="content" class="java.lang.String">rO0ABXQF8lBhbG8gQWx0byBOZXR3b3JrcyBJbmMuIHJlcG9ydGVkIGEgZm91cnRoLXF1YXJ0ZXIgcHJvZml0IHRoYXQgYmVhdCBhbmFseXN0c+KAmSBlc3RpbWF0ZXMsIGhlbHBlZCBieSByaXNpbmcgZGVtYW5kIGZvciBhbnRpLWhhY2tpbmcgdGVjaG5vbG9naWVzIGFuZCBvdGhlciBzZWN1cml0eSBwcm9kdWN0cyBpbiBpdHMgZmlyc3QgcXVhcnRlciBhcyBhIHB1YmxpY2x5IHRyYWRlZCBjb21wYW55LiBQcm9maXQgYmVmb3JlIGNlcnRhaW4gY29zdHMgaW4gdGhlIHBlcmlvZCB0aGF0IGVuZGVkIGluIEp1bHkgd2FzIDMgY2VudHMgYSBzaGFyZSwgY29tcGFyZWQgd2l0aCBhbmFseXN0c+KAmSBhdmVyYWdlIHByb2plY3Rpb24gdGhhdCB0aGUgY29tcGFueSB3b3VsZCBicmVhayBldmVuLCBhY2NvcmRpbmcgdG8gZGF0YSBjb21waWxlZCBieSBCbG9vbWJlcmcuIFRoZSBuZXQgbG9zcyB3YXMgJDQuNiBtaWxsaW9uLCBvciAxOCBjZW50cywgUGFsbyBBbHRvIHNhaWQgTW9uZGF5IGluIGEgc3RhdGVtZW50LiBTYWxlcyByb3NlIHRvICQ3NS42IG1pbGxpb24sIGhpZ2hlciB0aGFuIHRoZSBhdmVyYWdlIHByZWRpY3Rpb24gZm9yICQ3MS40IG1pbGxpb24uIFRoZSBTYW50YSBDbGFyYSwgQ2FsaWZvcm5pYS1iYXNlZCBjb21wYW55IGlzIGJlbmVmaXRpbmcgYXMgY29tcGFuaWVzIHNlZWsgdG8gZGVmZW5kIHRoZW1zZWx2ZXMgYW1pZCBhIHJpc2UgaW4gc29waGlzdGljYXRlZCBoYWNraW5nIGF0dGFja3MgdGhhdCB0cmFkaXRpb25hbCBzZWN1cml0eSB0ZWNobm9sb2dpZXMgaGF2ZSBoYWQgZGlmZmljdWx0eSBzdG9wcGluZy4gUGFsbyBBbHRvIGlzIHN0aWxsIGEgc21hbGwgcGxheWVyIGluIHRoZSBuZXR3b3JrLXNlY3VyaXR5IG1hcmtldCwgd2hlcmUgaXQgY29tcGV0ZXMgd2l0aCBDaXNjbyBTeXN0ZW1zIEluYy4sIEp1bmlwZXIgTmV0d29ya3MgSW5jLiBhcyB3ZWxsIGFzIENoZWNrIFBvaW50IFNvZnR3YXJlIFRlY2hub2xvZ2llcyBMdGQuIGFuZCBGb3J0aW5ldCBJbmMuIFdvcmxkd2lkZSBzZWN1cml0eSBzb2Z0d2FyZSByZXZlbnVlIHJvc2UgNy41IHBlcmNlbnQgbGFzdCB5ZWFyIHRvICQxNy43IGJpbGxpb24sIGRyaXZlbiBieSBncm93dGggaW4gYWR2YW5jZWQgdGhyZWF0cyBhbmQgcmVndWxhdG9yeSByZXF1aXJlbWVudHMsIGFjY29yZGluZyB0byBtYXJrZXQgcmVzZWFyY2hlciBHYXJ0bmVyIEluYy4gUGFsbyBBbHRv4oCZcyB0ZWNobm9sb2dpZXMgYXJlIGEgY29tYmluYXRpb24gb2YgaGFyZHdhcmUgYW5kIHNvZnR3YXJlLiBQYWxvIEFsdG8gcmFpc2VkICQyOTkuNSBtaWxsaW9uIGluIGl0cyBKdWx5IDE5IGluaXRpYWwgcHVibGljIG9mZmVyaW5nLCB3aGVuIGl0IHNvbGQgNy4xMyBtaWxsaW9uIHNoYXJlcywgaW5jbHVkaW5nIGFuIG92ZXItYWxsb3RtZW50LCBhdCAkNDIgYXBpZWNlLiBUaGUgc3RvY2sgaGFzIHJpc2VuIDcxIHBlcmNlbnQgc2luY2UgdGhlbi4gU2hhcmVzIGdhaW5lZCAxLjQgcGVyY2VudCB0byAkNzEuNzUgYXQgTW9uZGF54oCZcyBjbG9zZSBpbiBOZXcgWW9yay4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATmujGSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDczMjMxZThhOWNkMDgyZTU=</field><field name="symbol" class="java.lang.String">rO0ABXQABFBBTlc=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATmzssCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBQsAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBRb1wo9cKP</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBQFR64UeuF</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBQpmZmZmZm</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBQpmZmZmZm</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAC4riA==</field><field name="id" class="java.lang.String">rO0ABXQAEGE3MGE5YTk3MmZlZmFhN2M=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEP2AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDExMTg=</field><field name="title" class="java.lang.String">rO0ABXQALFR3byBUZWNoIElQT3MgRHJhdyBCdXllcnMgYXMgTWFya2V0IEhlYXRzIFVw</field><field name="content" class="java.lang.String">rO0ABXQSYlBhbG8gQWx0byBOZXR3b3JrcyBJbmMuIGFuZCBLYXlhayBTb2Z0d2FyZSBDb3JwLiByYWlzZWQgYSBjb21iaW5lZCAkMzUxLjQgbWlsbGlvbiwgcHJpY2luZyB0aGVpciBpbml0aWFsIHB1YmxpYyBvZmZlcmluZ3MgYWJvdmUgdGhlIHByb3Bvc2VkIHJhbmdlcyBhbmQgdGFwcGluZyByZW5ld2VkIGludmVzdG9yIGRlbWFuZCBmb3IgdGVjaG5vbG9neSBzaGFyZXMuIFBhbG8gQWx0bywgYSBtYWtlciBvZiBJbnRlcm5ldCBmaXJld2FsbHMsIHJhaXNlZCAkMjYwLjQgbWlsbGlvbiBzZWxsaW5nIDYuMiBtaWxsaW9uIHNoYXJlcyBhdCAkNDIgYXBpZWNlLCBpdCBzYWlkIGluIGEgc3RhdGVtZW50IFRodXJzZGF5LCBhZnRlciBvZmZlcmluZyB0aGUgc2hhcmVzIGZvciAkMzggdG8gJDQwIGVhY2guIEtheWFrLCBhbiBvbmxpbmUgdHJhdmVsIGNvbXBhbnksIHJhaXNlZCAkOTEgbWlsbGlvbiBzZWxsaW5nIDMuNSBtaWxsaW9uIHNoYXJlcyBhdCAkMjYgYXBpZWNlLCBhIGRvbGxhciBtb3JlIHRoYW4gdGhlIHRvcCBlbmQgb2YgdGhlIG1hcmtldGVkIHJhbmdlLiBQYWxvIEFsdG8gYW5kIEtheWFrIGpvaW4gc2NoZWR1bGVkIElQT3MgdGhpcyB3ZWVrIGZyb20gY29tcGFuaWVzIGluY2x1ZGluZyBGaXZlIEJlbG93IEluYy4gYW5kIEZlbmRlciBNdXNpY2FsIEluc3RydW1lbnRzIENvcnAuLCB0byBtYXJrIHRoZSBidXNpZXN0IHdlZWsgZm9yIFUuUy4gaW5pdGlhbCBvZmZlcmluZ3Mgc2luY2UgTWFyY2gsIGFjY29yZGluZyB0byBkYXRhIGNvbXBpbGVkIGJ5IEJsb29tYmVyZy4gUm9idXN0IGRlbWFuZCBmb3IgdGhlIG9mZmVyaW5ncyBmb2xsb3dzIGEgbW9udGhsb25nIGRyb3VnaHQgaW4gdGhlIHdha2Ugb2YgRmFjZWJvb2sgSW5jLuKAmXMgZGlzYXBwb2ludGluZyBNYXkgZGVidXQgYW5kIG1heSBpbmRpY2F0ZSByZW5ld2VkIGludmVzdG9yIGRlbWFuZCBmb3IgY29tcGFuaWVzIHRoYXQgcHJvbWlzZSBncm93dGgsIGFjY29yZGluZyB0byBKYXlzb24gTm9sYW5kLCBhbiBhbmFseXN0IHdpdGggUm9iZXJ0IFcuIEJhaXJkICYgQ28uIOKAnFRoZXJl4oCZcyBhbiBhcHBldGl0ZSBmb3IgaW5ub3ZhdGlvbiBhbmQgZ3Jvd3RoIG91dCB0aGVyZSBhbmQgdGhlcmXigJlzIGdvaW5nIHRvIGJlIGEgcHJlbWl1bSBwbGFjZWQgb24gZ3Jvd3RoLCB3aGV0aGVyIGl04oCZcyB0ZWNoIG9yIGFueXdoZXJlIGVsc2Us4oCdIHNhaWQgTm9sYW5kIGJ5IHRlbGVwaG9uZS4g4oCcV2XigJl2ZSBzZWVuIGEgcHJldHR5IHN0ZWVwIGRpc2NvdW50IG9uIGNvbXBhbmllcyB0aGF0IGFyZSBmYWNpbmcgYSBzZWN1bGFyIGRlY2xpbmUu4oCdIFBhbG8gQWx0byBpbml0aWFsbHkgc2FpZCBpdCB3b3VsZCBvZmZlciB0aGUgc2hhcmVzIGZvciAkMzQgdG8gJDM3IGFuZCByYWlzZWQgdGhlIHJhbmdlIHRoaXMgd2Vlay4gVGhlIHN0b2NrIHdpbGwgc3RhcnQgdHJhZGluZyBGcmlkYXkgb24gdGhlIE5ldyBZb3JrIFN0b2NrIEV4Y2hhbmdlIHVuZGVyIHRoZSBzeW1ib2wgUEFOVy4gVHJhZGluZyBGcmlkYXkgS2F5YWssIHdoaWNoIHdpbGwgdHJhZGUgdW5kZXIgdGhlIHRpY2tlciBLWUFLIG9uIHRoZSBOYXNkYXEgU3RvY2sgTWFya2V0LCBoYWQgcGxhbm5lZCB0byBzZWxsIHRoZSBzaGFyZXMgYXQgJDIyIHRvICQyNSBhcGllY2UuIFRoZSBvZmZlcmluZyB2YWx1ZeKAmXMgS2F5YWsgYXQgYWJvdXQgJDEgYmlsbGlvbiwgYmFzZWQgb24gaXRzIDM4LjYgbWlsbGlvbiBzaGFyZXMgb3V0c3RhbmRpbmcuIFBhbG8gQWx0b+KAmXMgSVBPIHByaWNlIHZhbHVlcyBpdCBhdCBhYm91dCAkMi44IGJpbGxpb24sIG9yIGFsbW9zdCAxMyB0aW1lcyBzYWxlcyBvZiAkMjIwIG1pbGxpb24gaW4gdGhlIDEyIG1vbnRocyB0aHJvdWdoIEFwcmlsIDMwLCBCbG9vbWJlcmcgZGF0YSBzaG93LiBUaGF04oCZcyBkb3VibGUgdGhlIGF2ZXJhZ2UgbXVsdGlwbGUgb2YgNi40IGZvciBzaW1pbGFyLXNpemVkIHBlZXJzIHN1Y2ggYXMgSnVuaXBlciBOZXR3b3JrcyBJbmMuIGFuZCBDaGVjayBQb2ludCBTb2Z0d2FyZSBUZWNobm9sb2dpZXMgTHRkLiBMYXJnZXIgY29tcGV0aXRvciBDaXNjbyBTeXN0ZW1zIEluYy4gdHJhZGVzIGF0IGEgbXVsdGlwbGUgb2YgMiwgYW5kIEludGVsIENvcnAuIHRyYWRlcyBhdCAyLjQgdGltZXMuIFBhbG8gQWx0b+KAmXMgb2ZmZXJpbmcgZm9sbG93cyB0aGUgc3VjY2Vzc2Z1bCBkZWJ1dCBieSBTZXJ2aWNlTm93IEluYy4gbGFzdCBtb250aCwgd2hpY2ggb3BlbmVkIHRoZSBnYXRlcyBmb3Igb3RoZXIgSVBPcyBhZnRlciB0aGUgZmxvcCBvZiBGYWNlYm9va+KAmXMgJDE2IGJpbGxpb24gaW5pdGlhbCBzaGFyZSBzYWxlIGZyb3plIHRoZSBVLlMuIG1hcmtldCBmb3IgbW9yZSB0aGFuIGEgbW9udGguIEVtZXJnaW5nIEZvcmNlIFdoaWxlIHNoYXJlcyBvZiBJbnRlcm5ldCBjb21wYW5pZXMgc3VjaCBhcyBGYWNlYm9vaywgR3JvdXBvbiBJbmMuIGFuZCBaeW5nYSBJbmMuIGhhdmUgZGVjbGluZWQgc2luY2UgdGhlaXIgSVBPcyBpbiB0aGUgcGFzdCB5ZWFyLCBzb21lIHRlY2hub2xvZ3kgZmlybXMgdGhhdCBzZWxsIHNlcnZpY2VzIGFuZCBwcm9kdWN0cyB0byBjb21wYW5pZXMgaGF2ZSBmYXJlZCBiZXR0ZXIuIEluIGFkZGl0aW9uIHRvIFNlcnZpY2VOb3csIHdoaWNoIHNlbGxzIHRlY2hub2xvZ3ktbWFuYWdlbWVudCBzb2Z0d2FyZSwgU3BsdW5rIEluYy4sIGEgZGF0YS1hbmFseXRpY3MgY29tcGFueSwgaGFzIHJpc2VuIDcyIHBlcmNlbnQgc2luY2UgaXRzIElQTyBvbiBBcHJpbCAxOC4gUGFsbyBBbHRvIGlzIGFuIGVtZXJnaW5nIGZvcmNlIGluIHRoZSBtYXJrZXQgZm9yIGNvcnBvcmF0ZSBhbnRpLWhhY2tpbmcgdGVjaG5vbG9neSwgd2hlcmUgaXRzIGNvbXBldGl0b3JzIGluY2x1ZGUgQ2lzY28sIEp1bmlwZXIgTmV0d29ya3MgYW5kIENoZWNrIFBvaW50IFNvZnR3YXJlIFRlY2hub2xvZ2llcy4gUmV2ZW51ZSBhdCB0aGUgY29tcGFueSwgbGVkIGJ5IENoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyIE1hcmsgTWNMYXVnaGxpbiwgaGFzIHN1cmdlZCBhdCBsZWFzdCA1Ny1mb2xkIHNpbmNlIDIwMDggYXMgbW9yZSBidXNpbmVzc2VzIGludmVzdCB0byBzaGllbGQgdGhlaXIgbmV0d29ya3MgZnJvbSBvdXRzaWRlIHRocmVhdHMuIFRoZSBjb21wYW55LCBmb3VuZGVkIGluIDIwMDUsIG9mZmVyZWQgNC42OSBtaWxsaW9uIHNoYXJlcywgd2hpbGUgZXhpc3RpbmcgaG9sZGVycyBvZmZlcmVkIDEuNSBtaWxsaW9uLCByZWd1bGF0b3J5IGZpbGluZ3Mgc2hvdy4gVmVudHVyZSBmaXJtcyBHcmV5bG9jayBQYXJ0bmVycyBhbmQgU2VxdW9pYSBDYXBpdGFsIGRpZG7igJl0IHBsYW4gdG8gc2VsbCBzaGFyZXMgYW5kIHdpbGwgb3duIG1vcmUgdGhhbiA0MSBwZXJjZW50IG9mIHRoZSBjb21wYW55IGFmdGVyIHRoZSBJUE8sIGFjY29yZGluZyB0byByZWd1bGF0b3J5IGZpbGluZ3MuIE92ZXItQWxsb3RtZW50cyBQYWxvIEFsdG8gYWxzbyBzYWlkIGl0IGhhcyBncmFudGVkIHRoZSB1bmRlcndyaXRlcnMgYSAzMC0gZGF5IG9wdGlvbiB0byBwdXJjaGFzZSB1cCB0byBhbiBhZGRpdGlvbmFsIDkzMCwwMDAgc2hhcmVzIG9mIGNvbW1vbiBzdG9jayB0byBjb3ZlciBhbnkgb3Zlci1hbGxvdG1lbnRzLsKgTW9yZ2FuIFN0YW5sZXksIEdvbGRtYW4gU2FjaHMgR3JvdXAgSW5jLiBhbmQgQ2l0aWdyb3VwIEluYy4gbGVkIFBhbG8gQWx0b+KAmXMgc2hhcmUgb2ZmZXJpbmcuIFRoZSBjb21wYW554oCZcyBzYWxlcyBpbiB0aGUgdGhyZWUgbW9udGhzIGVuZGVkIEFwcmlsIDMwIHdlcmUgJDY1LjcgbWlsbGlvbiwgbW9yZSB0aGFuIGRvdWJsZSB0aGUgJDMxLjIgbWlsbGlvbiBhIHllYXIgZWFybGllciwgYWNjb3JkaW5nIHRvIGRhdGEgY29tcGlsZWQgYnkgQmxvb21iZXJnLiBOZXQgaW5jb21lIGluIHRoZSBuaW5lIG1vbnRocyBlbmRlZCBBcHJpbCAzMCB3YXMgJDUuMzQgbWlsbGlvbiwgY29tcGFyZWQgd2l0aCBhIGxvc3MgYSB5ZWFyIGVhcmxpZXIsIHdpdGggc2FsZXMgZm9yIHRoYXQgcGVyaW9kIGFwcHJvYWNoaW5nICQxODAgbWlsbGlvbiwgdGhlIGNvbXBhbnkgc2FpZCBpbiBhIGZpbGluZy4gVGhlIGdsb2JhbCBtYXJrZXQgZm9yIGVudGVycHJpc2UgbmV0d29yayBzZWN1cml0eSBtYXkgcmlzZSB0byAkMTIuNSBiaWxsaW9uIGJ5IDIwMTUgZnJvbSAkMTAgYmlsbGlvbiB0aGlzIHllYXIsIFBhbG8gQWx0byBzYWlkIGluIGl0cyBmaWxpbmcsIGNpdGluZyBJREMuIEtheWFrLCB3aGljaCBmaXJzdCBmaWxlZCB0byBnbyBwdWJsaWMgaW4gTm92ZW1iZXIgMjAxMCwgaXMgdGhlIGZpcnN0IFUuUy4gY29uc3VtZXIgSW50ZXJuZXQgY29tcGFueSB0byBnbyBwdWJsaWMgc2luY2UgRmFjZWJvb2vigJlzIElQTyBpbiBNYXkuIE5vcndhbGssIENvbm5lY3RpY3V0LWJhc2VkIEtheWFrIGRlbGF5ZWQgaXRzIHJvYWRzaG93IGFmdGVyIEZhY2Vib29rIHNoYXJlcyB0dW1ibGVkLiBSZXZlbnVlIGF0IEtheWFrIGp1bXBlZCAzOSBwZXJjZW50IGluIHRoZSBmaXJzdCBxdWFydGVyIHRvICQ3My4zIG1pbGxpb24sIGZyb20gJDUyLjcgbWlsbGlvbiBhIHllYXIgZWFybGllci4gVGhlIGNvbXBhbnkgcmVwb3J0ZWQgbmV0IGluY29tZSBpbiB0aGUgcGVyaW9kIG9mICQ0LjEgbWlsbGlvbiwgZm9sbG93aW5nIGEgJDYuOSBtaWxsaW9uIGxvc3MgaW4gdGhlIHllYXItZWFybGllciBxdWFydGVyIGJlY2F1c2Ugb2YgYSB3cml0ZWRvd24gcmVsYXRlZCB0byBpdHMgU2lkZVN0ZXAgYnJhbmQu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATidm1iAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDExNDJkMTBmYjBmMzJjMDQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABFBBTlc=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATiiwbSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBLkzMzMzMz</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBPCPXCj1wp</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBKjMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBKkKPXCj1x</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBKkKPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAGsOpA==</field><field name="id" class="java.lang.String">rO0ABXQAEDRjNGQyMGFiMGY3NGQwNzk=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE30AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDEwODE=</field><field name="title" class="java.lang.String">rO0ABXQAOURvdyBDaGFsa3MgVXAgQmlnZ2VzdCBHYWluIGluIGEgTW9udGggb24gSG9wZXMgZm9yIEV1cm9wZQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATjBp9yAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGNlOGNkYTJmOGVmZTA5MTI=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0VTSQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATjGzjiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBFiPXCj1wp</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBGKj1wo9cK</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBFdwo9cKPX</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBFtwo9cKPX</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBFtwo9cKPX</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAm0xA==</field><field name="id" class="java.lang.String">rO0ABXQAEDkyNzhhZGFmZGI2NzQ5ZGU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMPfAAAA==</field></document></documents><date>2015-05-07T12:06:10-0500</date></cacheEntry>
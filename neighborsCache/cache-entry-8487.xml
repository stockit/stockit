<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0CpJUaGUgbW92ZSBtZWFucyB0aGF0IENvdXR0cyBmb3VuZGVkIGluIHRoZSAxOHRoIGNlbnR1cnkgYW5kIGJlc3Qga25vd24gYXMgYmFua2VyIHRvIHRoZSBRdWVlbiBvZiBFbmdsYW5kIGNvdWxkIGJlIHNwbGl0IGludG8gdHdvIGJ1c2luZXNzZXMgIG9uZSBiYXNlZCBpbiBCcml0YWluIGFuZCBvbmUgaW4gWnVyaWNoIGZyb20gd2hlcmUgaXQgcnVucyBvcGVyYXRpb25zIGluIEhvbmcgS29uZyBTaW5nYXBvcmUgQWJ1IERoYWJpIGFuZCBEdWJhaSB0aGF0IG1hbmFnZSBuZWFybHkgMzYgYmlsbGlvbiBpbiBjbGllbnQgYXNzZXRzIFJCUyBoYXMgYXR0cmFjdGVkIGEgdmFyaWV0eSBvZiBvZmZlcnMgZnJvbSBhIHJhbmdlIG9mIGJpZGRlcnMgaW5jbHVkaW5nIHVubmFtZWQgQXNpYW4gYW5kIE5vcnRoIEFtZXJpY2FuIHBhcnRpZXMgZm9yIENvdXR0cyBJbnRlcm5hdGlvbmFsIHR3byBzb3VyY2VzIHdpdGgga25vd2xlZGdlIG9mIHRoZSBvcGVyYXRpb24gc2FpZCBUaGUgc2FsZSBjb3VsZCBuZXQgUkJTIGJldHdlZW4gNzIwIG1pbGxpb24gYW5kIDExIGJpbGxpb24gYmFzZWQgb24gYSBtdWx0aXBsZSBvZiAyIHRvIDMgcGVyY2VudCBvZiBhc3NldHMgdW5kZXIgbWFuYWdlbWVudCBzYWlkIGEgdGhpcmQgcGVyc29uIHdpdGgga25vd2xlZGdlIG9mIHRoZSBtYXR0ZXIgVGhlIGJhbmsgdG9sZCBzdGFmZiBvbiBNb25kYXkgdGhhdCBpdCB3YXMgZXhwbG9yaW5nIGEgc2FsZSBjb25maXJtaW5nIGEgcmVwb3J0IGJ5IFJldXRlcnMgZWFybGllciBpbiB0aGUgZGF5IFdlIHdpbGx3b3JrIHdpdGggbG9jYWwgbWFuYWdlbWVudCB0ZWFtcyB0byBleHBsb3JlIG9wdGlvbnMgaW5jbHVkaW5nIG1lcmdpbmcgdGhlIHJlbWFpbmRlciBvZiB0aGUgY3VycmVudCBDb3V0dHMgSW50ZXJuYXRpb25hbCBidXNpbmVzcyBjb25zaWRlcmluZyBqb2ludCB2ZW50dXJlcyBvciBhIHNhbGUgdGhlcmVieSByZWR1Y2luZyBSQlNzIGZvb3RwcmludCBpbnRlcm5hdGlvbmFsbHkgUkJTIGV4ZWN1dGl2ZXMgQWxpc29uIFJvc2UgYW5kIExlcyBNYXRoZXNvbiB3cm90ZSBpbiBhIG1lbW9yYW5kdW0gc2VlbiBieSBSZXV0ZXJzIFJCUyBpcyA4MXBlcmNlbnQgb3duZWQgYnkgdGhlIHN0YXRlIGZvbGxvd2luZyBhIDQ1IGJpbGxpb25wb3VuZCA3NTUyIGJpbGxpb24gcmVzY3VlIG9wZXJhdGlvbiBwb3N0ZmluYW5jaWFsIGNyaXNpcyBhbmQgaXMgbm93IHVuZGVyIHByZXNzdXJlIHRvIGZvY3VzIG9uIGxvYW5zIHRvIFVLIGhvdXNlaG9sZHMgYW5kIGJ1c2luZXNzZXMgYW5kIGhlbHAgc3VwcG9ydCB0aGUgY291bnRyeXMgZWNvbm9taWMgcmVjb3ZlcnkgSXQgaGFzIHVuZGVyZ29uZSBhIG1ham9yIHJlc3RydWN0dXJpbmcgaW4gb3JkZXIgdG8gcGF5IGJhY2sgdGF4cGF5ZXJzIGZ1bmRzIGFuZCBldmVudHVhbGx5IHJldHVybiB0byBwcml2YXRlIG93bmVyc2hpcCBhbmQgYXBwZWFyZWQgYSBzdGVwIGNsb3NlciB0byBkb2luZyBib3RoIGFmdGVyIGl0IHBvc3RlZCBhIHN1cnByaXNlIDEgYmlsbGlvbiBwb3VuZCBxdWFydGVybHkgcHJvZml0IHJlY2VudGx5IEFzIHBhcnQgb2YgdGhlIFJCUyBvdmVyaGF1bCBDb3V0dHMgaW50ZXJuYXRpb25hbCB1bml0IHdoaWNoIGVtcGxveXMgMTIwMCBzdGFmZiBoYXMgZHJhbWF0aWNhbGx5IGN1dCB0aGUgbnVtYmVyIG9mIGNvdW50cmllcyBpdCBzZXJ2ZXMgTGlrZSBtYW55IFN3aXNzIHByaXZhdGUgYmFua3MgQ291dHRzIEludGVybmF0aW9uYWxzIHByb3NwZWN0cyBoYXZlIGRpbW1lZCBkdWUgdG8gYW4gaW50ZXJuYXRpb25hbCBjcmFja2Rvd24gb24gdW50YXhlZCBhc3NldHMgYmVpbmcgaGVsZCBpbiBzb2NhbGxlZCBvZmZzaG9yZSBjZW50ZXJzIHN1Y2ggYXMgU3dpdHplcmxhbmQgV2hpbGUgQ291dHRzIGlzbnQgdW5kZXIgY3JpbWluYWwgaW52ZXN0aWdhdGlvbiBpbiB0aGUgVVMgaXQgaXMgb25lIG9mIG1vcmUgdGhhbiBhIDEwMCBTd2lzcyBiYW5rcyB3aGljaCBoYXZlIGNvbWUgZm9yd2FyZCB0byBBbWVyaWNhbiBwcm9zZWN1dG9ycyBpbiBhIHRheCBwcm9iZSBTd2lzcyBiYW5rcyB3aXRoIHJlYXNvbiB0byBiZWxpZXZlIHRoZXkgbWF5IGhhdmUgY29tbWl0dGVkIHRheCBvZmZlbnNlcyBieSBoZWxwaW5nIHdlYWx0aHkgQW1lcmljYW5zIGV2YWRlIHRheGVzIGFyZSBlbGlnaWJsZSBmb3IgYSBub25wcm9zZWN1dGlvbiBhZ3JlZW1lbnQgaWYgdGhleSBjb21lIGNsZWFuIGFuZCBmYWNlIGZpbmVzIFRoZSBDb3V0dHMgdW5pdCB3aGljaCBwb3N0ZWQgYSBuZXQgbG9zcyBsYXN0IHllYXIgZHVlIHRvIHByb3Zpc2lvbnMgaW5jbHVkaW5nIGZvciBhIFVTIHRheCBjcmFja2Rvd24gaXMgdW5saWtlbHkgdG8gaGl0IGEgcmV0dXJuIG9uIGVxdWl0eSB0YXJnZXQgb2YgbW9yZSB0aGFuIDE1IHBlcmNlbnQgc2FpZCB0aGUgbWVtbyBmcm9tIFJCUyB3aGljaCBhbHNvIHJlZmVycmVkIHRvIGNvbXByZXNzZWQgbWFyZ2lucyBhbmQgdGhlIGluY3JlYXNpbmcgbmVlZCBmb3Igc2NhbGUgaW4gaW50ZXJuYXRpb25hbCBidXNpbmVzcyBMYXN0IHllYXIgQ291dHRzIEludGVybmF0aW9uYWxzIG9wZXJhdGluZyBwcm9maXQgc3Rvb2QgYXQgMTAzIG1pbGxpb24gZnJhbmNzIHdoZW4gc3RyaXBwaW5nIG91dCBjb3N0cyB0byBjb3ZlciB0aGUgVVMgdGF4IGNyYWNrZG93biBjbG9zZSBhIGJyYW5jaCBpbiBCZXJuZSBTd2l0emVybGFuZCBhbmQgZm9yIGJhZCBsb2FucyBncmFudGVkIGluIEFzaWF0AARyb3dzdXEAfgAKAAAAAXQAATV0AAVzdGFydHVxAH4ACgAAAAF0AAEwdAACZmx1cQB+AAoAAAABdABvYXJ0aWNsZUlkLHRpdGxlLGNvbnRlbnQsZGF0ZSxzdG9ja0hpc3RvcnlJZCxzeW1ib2wsaGlzdG9yeURhdGUsb3BlbixoaWdoLGxvdyxjbG9zZSxhZGpDbG9zZSx2b2x1bWUsaWQsX3ZlcnNpb25fdAACZnF1cQB+AAoAAAABdAA6aGlzdG9yeURhdGU6WzIwMTMtMTItMDNUMDA6MDA6MDBaIFRPIDIwMTQtMDctMTBUNTk6NTk6NTlaXXgAcA==</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDg1MzY=</field><field name="title" class="java.lang.String">rO0ABXQAOlN3aXNzIEJhbmtzIEhpcmUgQXJteSBvZiBBZHZpc2VycyB0byBXZWlnaCBVUyBBbW5lc3R5IFBsYW4=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUMeCd8AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDNiZjNlYzA1NTA2NGM2MDY=</field><field name="symbol" class="java.lang.String">rO0ABXQAA1VCQQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUMjMDsAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyyj1wo9cK</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAy7hR64Ueu</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyvXCj1wo9</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyxR64UeuF</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxo9cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABftA==</field><field name="id" class="java.lang.String">rO0ABXQAEDhjZTExMTM5MGViNDIyOTU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHQvAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDE2NDQ=</field><field name="title" class="java.lang.String">rO0ABXQAOVJ1c3NpYSBLbm93cyBFdXJvcGUgU2FuY3Rpb25zIEluZWZmZWN0aXZlIFdpdGggVGF4IEhhdmVucw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUXKwLyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDdjMzlhZWFiMGNhZWM5Yjc=</field><field name="symbol" class="java.lang.String">rO0ABXQABE5PUkQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUXP5xiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzczMzMzMz</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAznCj1wo9c</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAy7hR64Ueu</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzQAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzQAAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAADbiA==</field><field name="id" class="java.lang.String">rO0ABXQAEGI2ZTU1NzIwNDU4YzFhNjA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJGwAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQzMjI=</field><field name="title" class="java.lang.String">rO0ABXQAQFJlY29yZCBKYXBhbiBCdXliYWNrcyBTYWx2YWdlIFN0b2NrcyBMZWZ0IE91dCBvZiBXb3JsZHdpZGUgUmFsbHk=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbB8fyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDg3Nzk0OGFhOTZhMDQyNmI=</field><field name="symbol" class="java.lang.String">rO0ABXQABk1DTi5CRQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbHGFiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEApBR64UeuF</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEApBR64UeuF</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEApBR64UeuF</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEApBR64UeuF</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEApBR64UeuF</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDA3NmYyN2U0YjcxNmExN2I=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJ+dAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDgyNTU=</field><field name="title" class="java.lang.String">rO0ABXQAN0phcGFuLCAyMDEzJ3MgQmlnIFdpbm5lciwgQmVjb21lcyBUaGlzIFllYXIncyBCaWcgTG9zZXI=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUP2VPcAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGNiYzZlZWQ4MTRiYzc5OTE=</field><field name="symbol" class="java.lang.String">rO0ABXQABUNNVERG</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUP7e1MAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAS9cKPXCj2</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAS9cKPXCj2</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAS9cKPXCj2</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAS9cKPXCj2</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEASUeuFHrhS</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGZmOGNmMWQ3N2VlMmQ1MGY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJE/AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIwMDQx</field><field name="title" class="java.lang.String">rO0ABXQAN1JldXRlcnM6IENyZWRpdCBTdWlzc2UgaW4gVGFsa3MgdG8gUmVzb2x2ZSBVUyBUYXggUHJvYmU=</field><field name="content" class="java.lang.String">rO0ABXQHRVRoZSBwZW5hbHR5IGNvdWxkIGJlIHJvdWdobHkgdHdpY2UgdGhlIGFtb3VudCBwYWlkIGJ5IFVCUyBBRyAsIHdoaWNoIHNldHRsZWQgc2ltaWxhciBjaGFyZ2VzIGluIDIwMDkgZm9yICQ3ODAgbWlsbGlvbiBhbmQgYWdyZWVkIHRvIGlkZW50aWZ5IGl0cyBjdXN0b21lcnMuIFByb3NlY3V0b3JzIGhhdmUgYWxzbyBiZWVuIHB1c2hpbmcgZm9yIENyZWRpdCBTdWlzc2UgdG8gcGxlYWQgZ3VpbHR5IGluIGNvbm5lY3Rpb24gd2l0aCB0aGUgcHJvYmUsIHR3byBwZW9wbGUgd2l0aCBrbm93bGVkZ2Ugb2YgdGhlIHRhbGtzIHNhaWQuIFRoZSBzZXR0bGVtZW50IHRhbGtzIGFyZSBpbiBwcm9ncmVzcywgYW5kIHRoZSBkZXRhaWxzIGFyZSBzdGlsbCBiZWluZyBmaW5hbGl6ZWQuIEFuIGFncmVlbWVudCBjb3VsZCBjb21lIGluIHRoZSBuZXh0IGZldyB3ZWVrcywgdGhlIHNvdXJjZXMgc2FpZC4gQSBzcG9rZXNtYW4gZm9yIENyZWRpdCBTdWlzc2UgZGVjbGluZWQgY29tbWVudC4gQ3JlZGl0IFN1aXNzZSBoYXMgYWxyZWFkeSBzZXQgYXNpZGUgODk1IG1pbGxpb24gU3dpc3MgZnJhbmNzICgkMS4wMiBiaWxsaW9uKSB0byBwYXkgcG90ZW50aWFsIHBlbmFsdGllcyB0byB0aGUgVW5pdGVkIFN0YXRlcyBpbiBjb25uZWN0aW9uIHdpdGggdGhlIG1hdHRlci4gSXQgYWdyZWVkIGluIEZlYnJ1YXJ5IHRvIHBheSAkMTk2IG1pbGxpb24gdG8gcmVzb2x2ZSBhIHJlbGF0ZWQgY2FzZSBmcm9tIHRoZSBVLlMuIFNlY3VyaXRpZXMgYW5kIEV4Y2hhbmdlIENvbW1pc3Npb24sIHdoaWNoIGFjY3VzZWQgdGhlIFN3aXNzIGJhbmsgb2YgcHJvdmlkaW5nIGJyb2tlcmFnZSBhbmQgYWR2aXNvcnkgc2VydmljZXMgdG8gVS5TLiBjbGllbnRzIHdpdGhvdXQgcmVnaXN0ZXJpbmcgd2l0aCB0aGUgU0VDLiBFYXJsaWVyIG9uIE1vbmRheSwgdGhlIEp1c3RpY2UgRGVwYXJ0bWVudCBwb3N0ZWQgYSB2aWRlbyBpbiB3aGljaCBBdHRvcm5leSBHZW5lcmFsIEVyaWMgSG9sZGVyIHNhaWQgY2xvc2UgY29vcGVyYXRpb24gd2l0aCByZWd1bGF0b3JzIHdhcyBwYXZpbmcgdGhlIHdheSBmb3IgY3JpbWluYWwgYWN0aW9ucyBhZ2FpbnN0IGZpbmFuY2lhbCBpbnN0aXR1dGlvbnMsIGFsdGhvdWdoIGhlIGRpZCBub3QgbmFtZSBzcGVjaWZpYyBiYW5rcy4gVGhlIEp1c3RpY2UgRGVwYXJ0bWVudCBoYXMgY29tZSB1bmRlciBmaXJlIGZyb20gYSBjb25ncmVzc2lvbmFsIGNvbW1pdHRlZSB0aGF0IGhhcyBhY2N1c2VkIHRoZSBkZXBhcnRtZW50IG9mIG5vdCBhZ2dyZXNzaXZlbHkgcHVyc3VpbmcgU3dpc3MgYmFua3MgdGhhdCBoZWxwZWQgQW1lcmljYW5zIGRvZGdlIHRheGVzLCBpbmNsdWRpbmcgQ3JlZGl0IFN1aXNzZS4gVGhlIFNlbmF0ZSBQZXJtYW5lbnQgU3ViY29tbWl0dGVlIG9uIEludmVzdGlnYXRpb25zIGluIEZlYnJ1YXJ5IGZhdWx0ZWQgcHJvc2VjdXRvcnMgZm9yIG9idGFpbmluZyBvbmx5IGEgaGFuZGZ1bCBvZiBjbGllbnQgbmFtZXMgZnJvbSBvdGhlciBTd2lzcyBiYW5rcyBmaXZlIHllYXJzIGFmdGVyIFN3aXR6ZXJsYW5kJ3MgbGFyZ2VzdCBiYW5rLCBVQlMsIGFncmVlZCB0byBwcm92aWRlIGluZm9ybWF0aW9uLiBTaW5jZSAyMDA5LCB0aGUgSnVzdGljZSBEZXBhcnRtZW50IGhhcyBjaGFyZ2VkIGFib3V0IHRocmVlIGRvemVuIGJhbmtlcnMgYW5kIGFkdmlzZXJzIGZvciB0aGVpciBzdXNwZWN0ZWQgcm9sZXMgaW4gb2Zmc2hvcmUgdGF4IGV2YXNpb24uIE9uZSBiYW5rZXIgd2hvIGZvdW5kZWQgYSB0cnVzdCBjb21wYW55IHRoYXQgd29ya2VkIHdpdGggQ3JlZGl0IFN1aXNzZSBwbGVhZGVkIGd1aWx0eSBsYXN0IHdlZWsgYW5kIGFkbWl0dGVkIGhlIGhlbHBlZCBVLlMuIGNsaWVudHMgZXZhZGUgdGF4ZXMuwqA=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUXKwLyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDY1NjRjMDZmMmM5YjE2Nzc=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZJVkU=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUXP5xiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBDr1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBEAo9cKPXD</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBDTMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBDZR64UeuF</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBDZR64UeuF</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAZSXA==</field><field name="id" class="java.lang.String">rO0ABXQAEGJiNzMyYjk3ZDA4ZjBhMDA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHNLAAAA==</field></document></documents><date>2015-05-07T12:25:21-0500</date></cacheEntry>
<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0CvpVUyB0YXhwYXllcnMgd2lsbCBmb3JnbyBtb3JlIHRoYW4gMSBiaWxsaW9uIGluIHJldmVudWUgaW4gdGhlIG5leHQgZGVjYWRlIG5vdyB0aGF0IG9mZmljaWFscyBoYXZlIGRyb3BwZWQgcGxhbnMgdG8gaW5jcmVhc2Ugcm95YWx0eSByYXRlcyBmb3IgZHJpbGxpbmcgb24gZmVkZXJhbCBsYW5kIGEgcmVwb3J0IHJlbGVhc2VkIG9uIFR1ZXNkYXkgY29uY2x1ZGVkIE9mZmljaWFscyBoYXZlIGZvciB5ZWFycyBjb25zaWRlcmVkIGJvb3N0aW5nIHRoZSByb3lhbHR5IHJhdGUgZm9yIG9uc2hvcmUgb2lsIGFuZCBnYXMgZGV2ZWxvcG1lbnQgYXMgYSB3YXkgdG8gcHJvdGVjdCB0YXhwYXllcnMgc3Rha2UgaW4gYSBkb21lc3RpYyBlbmVyZ3kgYm9vbSBCdXQgdGhlIFVTIERlcGFydG1lbnQgb2YgdGhlIEludGVyaW9yIGhhcyBsYXRlbHkgZGVjaWRlZCB0byBkcm9wIHRob3NlIHBsYW5zIGFjY29yZGluZyB0byBhIHJlcG9ydCBmcm9tIHRoZSBHb3Zlcm5tZW50IEFjY291bnRhYmlsaXR5IE9mZmljZSB0aGUgaW52ZXN0aWdhdGl2ZSBhcm0gb2YgQ29uZ3Jlc3MgQWNjb3JkaW5nIHRvIEludGVyaW9yIG9mZmljaWFscyB0aGUgZGVwYXJ0bWVudCBkb2VzIG5vdCBoYXZlIGVub3VnaCBpbmZvcm1hdGlvbiB0byBkZXRlcm1pbmUgaG93IHRvIGFkanVzdCBvbnNob3JlIHJveWFsdHkgcmF0ZXMgdGhlIEdBTyBzYWlkIGluIGEgc3R1ZHkgb2Ygcm95YWx0eSBjb2xsZWN0aW9ucyBvbiBmb3NzaWwgZnVlbHMgQW4gSW50ZXJpb3Igb2ZmaWNpYWwgc2FpZCB0aGUgZGVwYXJ0bWVudCB3YXMgY29tbWl0dGVkIHRvIHJlZm9ybWluZyB0aGUgcm95YWx0eSBwcm9ncmFtIHRvIGVuc3VyZSBhIGZhaXIgcmV0dXJuIHRvIHRoZSBBbWVyaWNhbiB0YXhwYXllciBJbnRlcmlvciBTZWNyZXRhcnkgU2FsbHkgSmV3ZWxsIGEgZm9ybWVyIGNoaWVmIGV4ZWN1dGl2ZSBmb3Igb3V0ZG9vciByZXRhaWxlciBSRUkgaGFzIHRoZSBmaW5hbmNpYWwga25vd2hvdyB0byBicmluZyB0aG9zZSByZWZvcm1zIHRvIGxpZmUgY29uc2VydmF0aW9uIGFjdGl2aXN0cyBzYWlkIEFzIHRoZSBvbmx5IGZvcm1lciBDRU8gaW4gdGhlIGNhYmluZXQgU2VjcmV0YXJ5IEpld2VsbCBjYW4gZGVsaXZlciBhIGRvc2Ugb2YgY29tbW9uIHNlbnNlIGFuZCBidXNpbmVzcyBzZW5zZSB0byB0aGlzIGlzc3VlIHNhaWQgSmVzc2ljYSBHb2FkIG9mIHRoZSBDZW50ZXIgZm9yIEFtZXJpY2FuIFByb2dyZXNzIGEgbGliZXJhbCB0aGluayB0YW5rIHRoYXQgYWR2aXNlcyB0aGUgT2JhbWEgV2hpdGUgSG91c2UgRU5FUkdZIEJPT00gQWR2YW5jZXMgaW4gZHJpbGxpbmcgdGVjaG5vbG9neSBoYXZlIHVubG9ja2VkIHZhc3QgZm9zc2lsIGZ1ZWwgZGVwb3NpdHMgaW4gTm9ydGggRGFrb3RhIGVhc3QgVGV4YXMgYW5kIGVsc2V3aGVyZSBpbiByZWNlbnQgeWVhcnMgcHVzaGluZyBkb21lc3RpYyBvaWwgYW5kIGdhcyBwcm9kdWN0aW9uIHVwIHNoYXJwbHkgVVMgY3J1ZGUgb2lsIG91dHB1dCBpcyBzdXJnaW5nIGZhc3RlciB0aGFuIGV4cGVjdGVkIGFuZCB3aWxsIHRvdWNoIGEgaGlzdG9yaWMgaGlnaCBieSAyMDE2IGFjY29yZGluZyB0byBkYXRhIHJlbGVhc2VkIG9uIE1vbmRheSBieSB0aGUgVVMgRW5lcmd5IEluZm9ybWF0aW9uIEFkbWluaXN0cmF0aW9uIHBhcnQgb2YgdGhlIERlcGFydG1lbnQgb2YgRW5lcmd5IERyaWxsZXJzIG5vdyBwYXkgYSAxMjUgcGVyY2VudCByb3lhbHR5IG9uIG9pbCBhbmQgZ2FzIHB1bGxlZCBmcm9tIGZlZGVyYWwgbGFuZCBTaW5jZSAyMDA5IEludGVyaW9yIG9mZmljaWFscyBoYXZlIGNvbnRlbXBsYXRlZCBpbmNyZWFzaW5nIHRoZSBnb3Zlcm5tZW50cyB0YWtlIHRvIG1hdGNoIGdsb2JhbCBzdGFuZGFyZHMgYWNjb3JkaW5nIHRvIHRoZSBHQU8gcmVwb3J0IE9mZmljaWFscyBsYXN0IHllYXIgZHJhZnRlZCBwbGFucyBmb3IgYW4gMTg3NSBwZXJjZW50IHJveWFsdHkgZm9yIG9uc2hvcmUgb2lsIHByb2R1Y3Rpb24gYnV0IGRlY2lkZWQgdG8gcHV0IHRob3NlIHBsYW5zIG9uIGljZSBhY2NvcmRpbmcgdG8gdGhlIEdBTyByZXBvcnQgSW4gVGV4YXMgdGhlIHJveWFsdHkgcmF0ZSBpcyAyNSBwZXJjZW50IFRvZGF5cyByZXBvcnQgZHJpdmVzIGhvbWUgdGhlIHBvaW50IHRoYXQgSW50ZXJpb3IgbWF5IG5vdCBiZSBrZWVwaW5nIHVwIHdpdGggdGhlIHRpbWVzIHNhaWQgU2VuYXRvciBSb24gV3lkZW4gYW4gT3JlZ29uIERlbW9jcmF0IGFuZCBjaGFpcm1hbiBvZiB0aGUgU2VuYXRlIEVuZXJneSBhbmQgTmF0dXJhbCBSZXNvdXJjZXMgQ29tbWl0dGVlIHdobyByZXF1ZXN0ZWQgdGhlIEdBTyBzdHVkeSBQcmVzaWRlbnQgR2VvcmdlIFcgQnVzaCB0d2ljZSBpbmNyZWFzZWQgcm95YWx0eSByYXRlcyBmb3IgZHJpbGxpbmcgaW4gdGhlIEd1bGYgb2YgTWV4aWNvIGFuZCBLZW4gU2FsYXphciBQcmVzaWRlbnQgQmFyYWNrIE9iYW1hcyBmaXJzdCBJbnRlcmlvciBzZWNyZXRhcnkgc2FpZCBpbiAyMDExIHRoYXQgYSBib29zdCB0byBvbnNob3JlIHJveWFsdGllcyB3YXMgZHVlIEluIGhpcyAyMDE0IGJ1ZGdldCBwcm9wb3NhbCBPYmFtYSBzYWlkIGFkanVzdGluZyBvbnNob3JlIHJveWFsdHkgcmF0ZXMgd2FzIGEgcHJpb3JpdHkgQWJvdXQgYSB0aGlyZCBvZiBVUyBvaWwgYW5kIGdhcyBjb21lcyBmcm9tIGZlZGVyYWwgbGFuZCBtYW5hZ2VkIGJ5IHRoZSBJbnRlcmlvciBEZXBhcnRtZW50IGFuZCBpdHMgb3ZlcnNpZ2h0IG9mIGVuZXJneSBkZXZlbG9wbWVudCBoYXMgYmVlbiBzaW5nbGVkIG91dCBieSB0aGUgR0FPIGFtb25nIGFnZW5jaWVzIG1vc3QgdnVsbmVyYWJsZSB0byBmcmF1ZCB3YXN0ZSBvciBhYnVzZXQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0wMy0yN1QwMDowMDowMFogVE8gMjAxMy0xMi0wM1Q1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwNTI=</field><field name="title" class="java.lang.String">rO0ABXQAMlRoZSBTZWNyZXQsIERpcnR5IENvc3Qgb2YgT2JhbWEncyBHcmVlbiBQb3dlciBQdXNo</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJK5SMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI3MTcyMzgzMzAxZTY3Yjg=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZBUk0=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJQC38AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyI9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABp3A==</field><field name="id" class="java.lang.String">rO0ABXQAEGIxNzhiNTk3MDYyZjcwYTE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGoqAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDY0MDc=</field><field name="title" class="java.lang.String">rO0ABXQAN0NoZXNhcGVha2UgRHJvcHMgRW5lcmd5IExlYXNlcyBpbiBGcmFja2luZy1TaHkgTmV3IFlvcms=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUBR/vyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGFjNjgwZDcyZGFjZTQ4OTg=</field><field name="symbol" class="java.lang.String">rO0ABXQABEFDUkU=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUBXJViAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAp64UeuFHs</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAqKPXCj1wp</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAo0euFHrhS</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEApTMzMzMzN</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAl64UeuFHs</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAiqwA==</field><field name="id" class="java.lang.String">rO0ABXQAEDRjNjIwOTczZDBmYTJhNDg=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEQKAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTEzODAx</field><field name="title" class="java.lang.String">rO0ABXQAOEdFIE1hbmFnZW1lbnQgU2h1ZmZsZSBTaWduYWxzIE1vcmUgQ2xvdXQgZm9yIEVuZXJneSBVbml0</field><field name="content" class="java.lang.String">rO0ABXQXR1NpbW9uZWxsaSdzIHN1Y2Nlc3MgaW4gcmVpbnZpZ29yYXRpbmcgR0UncyB0cmFuc3BvcnRhdGlvbiBidXNpbmVzcyBhcHBlYXJzIHRvIGJlIHRoZSBtYWluIHJlYXNvbiBmb3IgaGlzIHByb21vdGlvbi4gU2luY2UgaGUgdG9vayB0aGUgaGVsbSBvZiB0aGUgdW5pdCBpbiAyMDA4LCBpdCBncmV3IGZyb20gYSAkMy40IGJpbGxpb24gYnVzaW5lc3MgZm9jdXNlZCBhbG1vc3QgZXhjbHVzaXZlbHkgb24gYnVpbGRpbmcgbG9jb21vdGl2ZXMgaW4gTm9ydGggQW1lcmljYSB0byBhIGRpdmVyc2lmaWVkIGJ1c2luZXNzIHdpdGggYW5udWFsIHJldmVudWVzIG9mICQ1LjYgYmlsbGlvbi4gSWYgdGhlIDE5LXllYXIgR0UgdmV0ZXJhbiBjYW4gcmVwbGljYXRlIHRoYXQgc3VjY2VzcyBpbiBvaWwgYW5kIGdhcyAtIGFscmVhZHkgdGhlIGNvbXBhbnkncyBmYXN0ZXN0LWdyb3dpbmcgYnVzaW5lc3Mgd2l0aCAkMTUgYmlsbGlvbiBpbiBhbm51YWwgcmV2ZW51ZXMgLSB0aGUgNDAteWVhci1vbGQgU2ltb25lbGxpIHdvdWxkIGxpa2VseSBlbWVyZ2UgYXMgYSBzdHJvbmcgY29udGVuZGVyIHRvIHN1Y2NlZWQgR0UgQ2hhaXJtYW4gYW5kIENoaWVmIEV4ZWN1dGl2ZSBKZWZmIEltbWVsdCwgYW5hbHlzdHMgc2F5LiAiU2ltb25lbGxpIGhhcyBkb25lIGEgZ29vZCBqb2Igb2YgdHJ5aW5nIHRvIGJyaW5nIGFuIHVuZGVycGVyZm9ybWVyLCBwZXJoYXBzIGFuIGFmdGVydGhvdWdodCwgaW50byBhIHByb2ZpdGFibGUgYW5kIGdyb3dpbmcgYnVzaW5lc3MgZm9yIEdFLCIgc2FpZCBNb3JuaW5nc3RhciBhbmFseXN0IERhbmllbCBIb2xsYW5kLiBUaGUgb2lsIGFuZCBnYXMgdW5pdCwgYnkgY29udHJhc3QsIGlzIGhhcmRseSBhbiBhZnRlcnRob3VnaHQgYXMgU2ltb25lbGxpIHRha2VzIHRoZSByZWlucy4gSXQgaXMgY3J1Y2lhbCB0byBHRSdzIGV4cGFuc2lvbiBzdHJhdGVneSBhdCBhIHRpbWUgd2hlbiBpdCBpcyByZXRyZWF0aW5nIGZyb20gZmluYW5jZSwgd2hpY2ggYWxtb3N0IHRvb2sgdGhlIGNvbXBhbnkgZG93biBkdXJpbmcgdGhlIDIwMDctMjAwOCBmaW5hbmNpYWwgY3Jpc2lzIGFuZCBzdGlsbCB3ZWlnaHMgb24gdGhlIGNvbXBhbnkncyBzdG9jay4gU2luY2UgMjAwNywgR0UgaGFzIHNwZW50IG92ZXIgJDE0IGJpbGxpb24gYWNxdWlyaW5nIGNvbXBhbmllcyB0aGF0IHByb3ZpZGUgZXF1aXBtZW50IG9yIHNlcnZpY2VzIHRvIHRoZSBvaWwgYW5kIGdhcyBpbmR1c3RyeS4gVGhlIHNwZW5kaW5nIHNwcmVlIGFudGljaXBhdGVkIHRoZSBzdXJnZSBpbiBVLlMuIGVuZXJneSBwcm9kdWN0aW9uIGluIHJlY2VudCB5ZWFycyBkdWUgdG8gbmV3IHRlY2hub2xvZ3kgdGhhdCBlbmFibGVzIG9pbCBhbmQgZ2FzIHRyYXBwZWQgaW4gc2hhbGUgcm9jayBmb3JtYXRpb25zIHRvIGJlIGV4dHJhY3RlZCBhdCBhIHByb2ZpdC4gIk9pbCBhbmQgZ2FzIGlzIHRoZSBiaWdnZXN0IGluZHVzdHJpYWwgZ3Jvd3RoIHBsYXRmb3JtIGZvciB0aGUgY29tcGFueSByaWdodCBub3csIGFuZCBwcm9iYWJseSBmb3IgdGhlIG5leHQgZGVjYWRlLXBsdXMsIiBzYWlkIGFuYWx5c3QgTmljaG9sYXMgSGV5bWFubiBvZiBXaWxsaWFtIEJsYWlyICYgQ28sIHdoaWNoIHRyYWRlcyBHRSBzaGFyZXMuIFRoaXMgc3ByaW5nIEdFIHBhaWQgJDMuMyBiaWxsaW9uIGZvciBvaWxmaWVsZCBwdW1wbWFrZXIgTHVma2luLCB0dXJuaW5nIHRoZSBjb21wYW55IG92ZXJuaWdodCBpbnRvIGEgbWFqb3Igc3VwcGxpZXIgb2YgZXF1aXBtZW50IHRvIGNvbXBhbmllcyB0aGF0IGRyaWxsIHNoYWxlIHJvY2suICBJdHMgZW5lcmd5IGJ1c2luZXNzIGFsc28gbWFrZXMgdW5kZXJncm91bmQgcHVtcHMgdGhhdCBwdWxsIG9pbCBhbmQgZ2FzIHRvIHRoZSBzdXJmYWNlLCBhcyB3ZWxsIGFzIHdlbGxoZWFkcywgY29tcHJlc3NvcnMgYW5kIGZpbHRlcnMuICJJbiB0aGlzIGluZHVzdHJ5IHRoZXJlIGFyZSB2ZXJ5IGZldyBvbmUtc3RvcCBzaG9wcywiIHNhaWQgVGltIEdocmlza2V5IG9mIFNvbGFyaXMgQXNzZXQgTWFuYWdlbWVudCwgd2hpY2ggb3ducyBHRSBzaGFyZXMuICJHRSBoYXMgYWxtb3N0IGEgZnJvbnQtZW5kIHRvIGJhY2stZW5kIG9mZmVyaW5nIGxpbmUuIiBHRSdzIGludmVzdG1lbnQgYW5kIHJlc2VhcmNoIGluIG5ldyB0ZWNobm9sb2dpZXMgY291bGQgaGVscCBkcml2ZSBpbm5vdmF0aW9uIGF0IGEgdGltZSB3aGVuIHRoZSBOb3J0aCBBbWVyaWNhbiBzaGFsZSBib29tIGlzIHNoaWZ0aW5nIGZyb20gdGhlICJsYW5kIHJ1c2giIHN0YWdlLCB3aGVyZSBjb21wYW5pZXMgY29tcGV0ZSB0byBsb2NrIHVwIGxlYXNlcywgdG8gYSAibWFudWZhY3R1cmluZyIgc3RhZ2UsIHdpdGggYSBmb2N1cyBvbiBpbXByb3ZpbmcgZWZmaWNpZW5jeSBhbmQgbG93ZXJpbmcgY29zdHMuICJJdCdzIGZ1cnRoZXIgYWNrbm93bGVkZ2VtZW50IGJ5IG9uZSBvZiB0aGUgb2xkZXN0IG1hbnVmYWN0dXJlcnMgaW4gdGhlIGNvdW50cnkgYW5kIGluIHRoZSB3b3JsZCB0aGF0IHRoaXMgaXMgYW5kIHdpbGwgYmUgdGhlIGdyb3d0aCBzZWN0b3IgaW4gb3VyIGVjb25vbXksIGFuZCBmcmFua2x5IGFyb3VuZCB0aGUgd29ybGQsIGZvciBhIGxvbmcgdGltZSB0byBjb21lLCIgc2FpZCBDaHJpc3RvcGhlciBHdWl0aCwgdmljZSBwcmVzaWRlbnQgb2YgcG9saWN5IGF0IHRoZSBVUyBDaGFtYmVyIG9mIENvbW1lcmNlJ3MgSW5zdGl0dXRlIGZvciAyMXN0IENlbnR1cnkgRW5lcmd5LiBJVEFMSUFOIFJPT1RTIEdFIGRvdmUgaW50byB0aGUgb2lsIGFuZCBnYXMgYnVzaW5lc3MgaW4gMTk5NCB3aGVuIGl0IGFjcXVpcmVkIE51b3ZvIFBpZ25vbmUsIGEgbWFrZXIgb2YgdHVyYmluZXMgYW5kIGNvbXByZXNzb3JzIGJhc2VkIGluIEZsb3JlbmNlLCBJdGFseS4gSXQgYmVnYW4gZXhwYW5kaW5nIGludG8gb3RoZXIgc2VjdG9ycyBpbiAyMDA3LCB3aGVuIGl0IGJvdWdodCBWZXRjbyBHcmF5LCBhIGRyaWxsaW5nIGNvbXBhbnkuIEJ1dCB0aGUgYWNxdWlzaXRpb24gZHJpdmUgd2VudCBpbnRvIGZ1bGwgZ2VhciBmcm9tIDIwMTAgdG8gMjAxMywgd2hlbiBHRSBib3VnaHQgc2V2ZXJhbCBjb21wYW5pZXMsIGluY2x1ZGluZyBXZWxsc3RyZWFtLCB3aGljaCBtYWtlcyBmbGV4aWJsZSBwaXBlbGluZSBwcm9kdWN0cyBmb3IgZGVlcHdhdGVyIHByb2R1Y3Rpb24sIGFuZCB0aGUgd2VsbCBzdXBwb3J0IGRpdmlzaW9uIG9mIHRoZSBKb2huIFdvb2QgR3JvdXAsIHdoaWNoIG1ha2VzIHB1bXBzLiBHRSBleGVjdXRpdmVzIHNheSB0aGUgZGl2aXNpb24gZ3JldyBhdCBhIGNvbXBvdW5kIGFubnVhbCByYXRlIG9mIG92ZXIgMjAgcGVyY2VudCBvdmVyIHRoZSBsYXN0IHNldmVyYWwgeWVhcnMuIE9yZGVycyBncmV3IGZyb20gJDEgYmlsbGlvbiBpbiAxOTk0IHRvICQxNiBiaWxsaW9uIGluIDIwMTEuIEl0IGFjY291bnRzIGZvciAxMCBwZXJjZW50IG9mIHRoZSBjb21wYW55J3MgcmV2ZW51ZSBhbmQgZW1wbG95cyA0MywwMDAgcGVvcGxlIGluIDEwMCBjb3VudHJpZXMuIFRocm91Z2hvdXQgdGhlIGV4cGFuc2lvbiwgdGhlIGhlYWRxdWFydGVycyBvZiB0aGUgb2lsIGFuZCBnYXMgZGl2aXNpb24gcmVtYWluZWQgaW4gRmxvcmVuY2UuIFRoYXQgc2hvdWxkIG1ha2UgU2ltb25lbGxpIGZlZWwgcmlnaHQgYXQgaG9tZSwgc2luY2UgaGUgd2FzIGJvcm4gaW4gdGhlIFR1c2NhbnkgY2FwaXRhbCBrbm93biBtb3JlIGZvciBSZW5haXNzYW5jZSBhcnQgYW5kIGhpZ2ggZmFzaGlvbiB0aGFuIGFzIGFuIGluZHVzdHJpYWwgY2VudGVyLiBCdXQgU2ltb25lbGxpIHdvbid0IGhhdmUgbXVjaCB0aW1lIHRvIHB1dCBkb3duIGZyZXNoIHJvb3RzLiBJbiBKdWx5LCBHRSBzYWlkIGl0IHdvdWxkIGVzdGFibGlzaCBhIG5ldyBnbG9iYWwgb2lsIGFuZCBnYXMgaGVhZHF1YXJ0ZXJzIGluIExvbmRvbiBhdCB0aGUgYmVnaW5uaW5nIG9mIDIwMTQgZm9yIGFsbCB0aGUgYnVzaW5lc3NlcyBleGNlcHQgdHVyYm9tYWNoaW5lcnkuIFRIRSBQT1dFUiBPRiBQVU1QUyBPbmUgYXJlYSB3aGVyZSBHRSBzZWVzIG9wcG9ydHVuaXR5IGlzIGluIHB1bXBzIGFuZCBvdGhlciBlcXVpcG1lbnQgdGhhdCBoZWxwIHB1c2ggb2lsIG9yIGdhcyB0byB0aGUgc3VyZmFjZS4gVGhhdCBpcyBlc3BlY2lhbGx5IGltcG9ydGFudCBpbiBzaGFsZSBmaWVsZHMsIHdoZXJlIHByb2R1Y3Rpb24gc3RhcnRzIG91dCBxdWl0ZSBoaWdoIGFuZCB0aGVuIGRyb3BzIG9mZiBmYWlybHkgcXVpY2tseSBhcyBwcmVzc3VyZSBkZWNyZWFzZXMuIFRoYXQncyB3aGVyZSB0aGUgSm9obiBXb29kIGFuZCBMdWZraW4gYWNxdWlzaXRpb25zIGNvbWUgaW50byBwbGF5LiBHRSBub3cgb3ducyBlbGVjdHJpYyBzdWJtZXJzaWJsZSBwdW1wcyBhbmQgZmxvdyBjb250cm9sIHN5c3RlbXMgZm9ybWVybHkgbWFkZSBieSBKb2huIFdvb2QuIEx1ZmtpbiBhbHNvIGlzIGluIHRoZSBzby1jYWxsZWQgImFydGlmaWNpYWwgbGlmdCIgYnVzaW5lc3MsIG1ha2luZyB0aGUgZG9ua2V5IGVhciBwdW1wcyB0aGF0IHB1bGwgb2lsIG9yIGdhcyBvdXQgb2YgdHJhZGl0aW9uYWwgd2VsbHMuICJXaGVuIHdlIG1ha2UgdGhlc2UgdHlwZXMgb2YgYWNxdWlzaXRpb25zIHdlIGxvb2sgZm9yIHRoaW5ncyB0aGF0IHBsYXkgdG8gR0UncyBzdHJlbmd0aHMgb3IgcGxheSB0byBzY2FsZSwiIHNhaWQgRXJpYyBHZWJoYXJkdCwgY2hpZWYgdGVjaG5vbG9neSBvZmZpY2VyIGF0IEdFIE9pbCAmIEdhcy4gIlJvdGF0aW5nIGVxdWlwbWVudCwgbGlrZSBlbGVjdHJpY2FsIHN1Ym1lcnNpYmxlIHB1bXBzLCBpcyBzb21ldGhpbmcgR0UgaXMgYSBzcGVjaWFsaXN0IGluLCBmcm9tIGF2aWF0aW9uIGVuZ2luZXMgdG8gdGhlIG1vdG9yIGRpdmlzaW9uIHRvIHBvd2VyIGdlbmVyYXRpb24uIiBXb3JraW5nIHdpdGggZXhwZXJ0cyBmcm9tIHRob3NlIGRpdmlzaW9ucywgR0UncyByZXNlYXJjaCBjZW50ZXIgdG9vayBleGlzdGluZyB0ZWNobm9sb2d5IGFuZCBhcHBsaWVkIGl0IHRvIHRoZSBwdW1wcyBpdCBhY3F1aXJlZCBmcm9tIHRoZSBXb29kIEdyb3VwLiBUaGUgcmVzdWx0IHdhcyBhIHRlbmZvbGQgaW1wcm92ZW1lbnQgaW4gdGhlIGxhYiwgR2ViaGFyZHQgc2FpZCwgd2l0aCB0aGUgdGVjaG5vbG9neSBub3cgaW4gZmllbGQgdHJpYWxzIHdpdGggYSBjdXN0b21lci4gSXQgYWxzbyB1c2VkIGFuYWx5dGljcyBhbmQgbW9kZWxpbmcgdG8gcmVkZXNpZ24gZ2FzIHB1bXBpbmcgc3RhdGlvbnMgdG8gZXhwYW5kIHRoZSBjYXBhY2l0eSBpbiBzaGFsZSBmaWVsZHMgbGlrZSBOb3J0aCBEYWtvdGEncyBCYWtrZW4sIEdlYmhhcmR0IHNhaWQuICJXaGVuIHlvdSdyZSB0YWxraW5nIGFib3V0IHdlbGxzIGNvc3RpbmcgJDcgKGJpbGxpb24pIHRvICQxMiBiaWxsaW9uIGRvbGxhcnMgYSBwb3AgY29tcGFyZWQgdG8gJDUwMCwwMDAgZm9yIGEgY29udmVudGlvbmFsIG9uc2hvcmUgd2VsbCwgZXZlcnkgZGF5IGNvdW50cywiIHNhaWQgR3VpdGggb2YgdGhlIFUuUy4gQ2hhbWJlci4gIkFueSBzZWVtaW5nbHkgc21hbGwgZWZmaWNpZW5jeSBpbXByb3ZlbWVudCBjb3VsZCBtZWFuIHRoZSBkaWZmZXJlbmNlIG9mIHRlbnMgaWYgbm90IGh1bmRyZWRzIG9mIHRob3VzYW5kcyBvZiBkb2xsYXJzLiIgTm93IGl0J3MgdXAgdG8gU2ltb25lbGxpIHRvIG1hbmFnZSB0aGUgcGF0Y2h3b3JrIG9mIGNvbXBhbmllcyB0aGF0IEhlaW50emVsbWFuIGFuZCBoaXMgcHJlZGVjZXNzb3JzIHB1bGxlZCB0b2dldGhlci4gIklmIGhlIGlzIHN1Y2Nlc3NmdWwsIGl0IHB1dHMgaGltIGluIHRoZSBmcm9udCBvZiB0aGUgbGluZSB0byBzdWNjZWVkIEplZmYgSW1tZWx0LCIgc2FpZCBHaHJpc2tleS4gIkJ1dCBpdCB3aWxsIGJlIGEgdGVzdCwgbm90IGEgbGF5dXAuIiBUaGUgY29tcGFueSBoYXMgc2V0IG5vIHRpbWV0YWJsZSBmb3IgSW1tZWx0IHRvIHN0ZXAgZG93biBmcm9tIGEgam9iIGhlIGhhcyBoZWxkIHNpbmNlIDIwMDEsIHdoZW4gaGUgdG9vayBvdmVyIGZyb20gSmFjayBXZWxjaC4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEvcHCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDhjYWMyMTAxOGVhYWE5NTk=</field><field name="symbol" class="java.lang.String">rO0ABXQABVdER0pG</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUE0lsyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAq9cKPXCj2</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArOFHrhR64</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAq9cKPXCj2</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArOFHrhR64</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAqqPXCj1wp</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAFeA==</field><field name="id" class="java.lang.String">rO0ABXQAEGQyZmEzOWMwYzU5MDJkOTY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKx1AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE0MjY2</field><field name="title" class="java.lang.String">rO0ABXQAOUV4eG9uIENsZWFucyBBcmthbnNhcyBPaWwgU3BpbGwgYXMgS2V5c3RvbmUgUGxhbiBBc3NhaWxlZA==</field><field name="content" class="java.lang.String">rO0ABXQWeUV4eG9uIHNwb2tlc21hbiBBbGFuIEplZmZlcnMgc2FpZCBvbiBTdW5kYXkgdGhhdCBjcmV3cyBoYWQgeWV0IHRvIGV4Y2F2YXRlIHRoZSBhcmVhIGFyb3VuZCB0aGUgcGlwZWxpbmUgYnJlYWNoLCBhIG5lZWRlZCBzdGVwIGJlZm9yZSB0aGUgY29tcGFueSBjYW4gZXN0aW1hdGUgaG93IGxvbmcgcmVwYWlycyB3aWxsIHRha2UgYW5kIHdoZW4gdGhlIGxpbmUgbWlnaHQgcmVzdGFydC4gIkkgY2FuJ3Qgc3BlY3VsYXRlIG9uIHdoZW4gaXQgd2lsbCBoYXBwZW4sIiBKZWZmZXJzIHNhaWQuICJFeGNhdmF0aW9uIGlzIG5lY2Vzc2FyeSBhcyBwYXJ0IG9mIGFuIGludmVzdGlnYXRpb24gdG8gZGV0ZXJtaW5lIHRoZSBjYXVzZSBvZiB0aGUgaW5jaWRlbnQuIiBFeHhvbidzIFBlZ2FzdXMgcGlwZWxpbmUsIHdoaWNoIGNhbiBjYXJyeSBtb3JlIHRoYW4gOTAsMDAwIGJhcnJlbHMgcGVyIGRheSAoYnBkKSBvZiBjcnVkZSBmcm9tIFBhdG9rYSwgSWxsaW5vaXMgdG8gTmVkZXJsYW5kLCBUZXhhcywgd2FzIHNodXQgYWZ0ZXIgdGhlIGxlYWsgd2FzIGRpc2NvdmVyZWQgbGF0ZSBGcmlkYXkgYWZ0ZXJub29uIGluIGEgc3ViZGl2aXNpb24gbmVhciB0aGUgdG93biBvZiBNYXlmbG93ZXIuIFRoZSBsZWFrIGZvcmNlZCB0aGUgZXZhY3VhdGlvbiBvZiAyMiBob21lcy4gRXh4b24gYWxzbyBoYWQgbm8gc3BlY2lmaWMgZXN0aW1hdGUgb2YgaG93IG11Y2ggY3J1ZGUgb2lsIGhhZCBzcGlsbGVkLCBidXQgdGhlIGNvbXBhbnkgc2FpZCAxMiwwMDAgYmFycmVscyBvZiBvaWwgYW5kIHdhdGVyIGhhZCBiZWVuIHJlY292ZXJlZCAtIHVwIGZyb20gNCw1MDAgYmFycmVscyBvbiBTYXR1cmRheS4gVGhlIGNvbXBhbnkgZGlkIG5vdCBzYXkgaG93IG11Y2ggb2YgdGhlIHRvdGFsIHdhcyBvaWwgYW5kIGhvdyBtdWNoIHdhcyB3YXRlci4gQWxsZW4gRG9kc29uLCBGYXVsa25lciBDb3VudHkganVkZ2Ugd2hvIGlzIHRoZSB0b3AgZXhlY3V0aXZlIGZvciB0aGUgY291bnR5IHdoZXJlIHRoZSBzcGlsbCBvY2N1cnJlZCwgdG9sZCBSZXV0ZXJzIGluIGFuIGludGVydmlldyBvbiBTdW5kYXkgdGhhdCB0aGUgc21lbGwgb2YgY3J1ZGUgd2FzIGxlc3MgcG90ZW50IG9uIFN1bmRheSBhcyBjbGVhbnVwIGVmZm9ydHMgY29udGludWVkLCBzYXlpbmcgaXQgd2FzIHdlYWtlciB0aGFuIHRoZSBzbWVsbCBvZiBmcmVzaCBhc3BoYWx0IGxhaWQgb24gYSByb2FkLiAiVGhlIGZyZWVzdGFuZGluZyBvaWwgb24gdGhlIHN0cmVldCBoYXMgYmVlbiByZW1vdmVkLiBJdCdzIHN0aWxsIGRhbXAgd2l0aCBvaWwsIGl0J3MgdGFja3ksIGxpa2UgaXQgaXMgYmVmb3JlIHdlIGRvIGFuIGFzcGhhbHQgb3ZlcmxheSwiIGhlIHNhaWQuIEV4eG9uIHNhaWQgaXQgc3RhZ2VkIHRoZSByZXNwb25zZSB0byBoYW5kbGUgMTAsMDAwIGJhcnJlbHMgb2Ygb2lsICJ0byBlbnN1cmUgYWRlcXVhdGUgcmVzb3VyY2VzIGFyZSBpbiBwbGFjZS4iIE9mZmljaWFscyBmcm9tIHRoZSBVLlMuIEVudmlyb25tZW50YWwgUHJvdGVjdGlvbiBBZ2VuY3kgYW5kIHRoZSBEZXBhcnRtZW50IG9mIFRyYW5zcG9ydGF0aW9uJ3MgUGlwZWxpbmUgYW5kIEhhemFyZG91cyBNYXRlcmlhbHMgU2FmZXR5IEFkbWluaXN0cmF0aW9uIChQSE1TQSkgYWxzbyB3ZXJlIG9uIHNpdGUgdG8gaW52ZXN0aWdhdGUgdGhlIHNwaWxsLiBGaWZ0ZWVuIHZhY3V1bSB0cnVja3MgcmVtYWluZWQgb24gdGhlIHNjZW5lIGZvciBjbGVhbnVwLCBhbmQgMzMgc3RvcmFnZSB0YW5rcyB3ZXJlIGRlcGxveWVkIHRvIHRlbXBvcmFyaWx5IHN0b3JlIHRoZSBvaWwuIFRoZSBwaXBlbGluZSB3YXMgY2FycnlpbmcgQ2FuYWRpYW4gV2FiYXNjYSBIZWF2eSBjcnVkZSBhdCB0aGUgdGltZSBvZiB0aGUgbGVhay4gQW4gb2lsIHNwaWxsIG9mIG1vcmUgdGhhbiAxLDAwMCBiYXJyZWxzIGludG8gYSBXaXNjb25zaW4gZmllbGQgZnJvbSBhbiBFbmJyaWRnZSBJbmMgcGlwZWxpbmUgbGFzdCBzdW1tZXIga2VwdCB0aGF0IGxpbmUgc2h1dHRlcmVkIGZvciBhcm91bmQgMTEgZGF5cy4gVGhlIDg0OC1taWxlICgxLDM4MSBrbSkgcGlwZWxpbmUgdXNlZCB0byB0cmFuc3BvcnQgY3J1ZGUgb2lsIGZyb20gVGV4YXMgdG8gSWxsaW5vaXMuIEluIDIwMDYgRXh4b24gcmV2ZXJzZWQgaXQgdG8gbW92ZSBjcnVkZSBmcm9tIElsbGlub2lzIHRvIFRleGFzIGluIHJlc3BvbnNlIHRvIGdyb3dpbmcgQ2FuYWRpYW4gb2lsIHByb2R1Y3Rpb24gYW5kIHRoZSBhYmlsaXR5IG9mIFUuUy4gR3VsZiBDb2FzdCByZWZpbmVyaWVzIHRvIHByb2Nlc3MgaGVhdnkgY3J1ZGUuIFRoZSBBcmthbnNhcyBzcGlsbCBkcmV3IGZhc3QgcmVhY3Rpb24gZnJvbSBvcHBvbmVudHMgb2YgdGhlIDgwMCwwMDAgYnBkIEtleXN0b25lIFhMIHBpcGVsaW5lLCB3aGljaCBhbHNvIHdvdWxkIGNhcnJ5IGhlYXZ5IGNydWRlIGZyb20gQ2FuYWRhJ3MgdGFyIHNhbmRzIHRvIHRoZSBHdWxmIENvYXN0IHJlZmluaW5nIGh1Yi4gRW52aXJvbm1lbnRhbGlzdHMgaGF2ZSBleHByZXNzZWQgY29uY2VybnMgYWJvdXQgdGhlIGltcGFjdCBvZiBkZXZlbG9waW5nIHRoZSBvaWwgc2FuZHMgYW5kIHNheSB0aGUgY3J1ZGUgaXMgbW9yZSBjb3Jyb3NpdmUgdG8gcGlwZWxpbmVzIHRoYW4gY29udmVudGlvbmFsIG9pbC4gT24gV2VkbmVzZGF5LCBhIHRyYWluIGNhcnJ5aW5nIENhbmFkaWFuIGNydWRlIGRlcmFpbGVkIGluIE1pbm5lc290YSwgc3BpbGxpbmcgMTUsMDAwIGdhbGxvbnMgb2Ygb2lsLiAiV2hldGhlciBpdCdzIHRoZSBwcm9wb3NlZCBLZXlzdG9uZSBYTCBwaXBlbGluZSwgb3IgLi4uICh0aGUpIG1lc3MgaW4gQXJrYW5zYXMsIEFtZXJpY2FucyBhcmUgcmVhbGl6aW5nIHRoYXQgdHJhbnNwb3J0aW5nIGxhcmdlIGFtb3VudHMgb2YgdGhpcyBjb3Jyb3NpdmUgYW5kIHBvbGx1dGluZyBmdWVsIGlzIGEgYmFkIGRlYWwgZm9yIEFtZXJpY2FuIHRheHBheWVycyBhbmQgZm9yIG91ciBlbnZpcm9ubWVudCwiIHNhaWQgUmVwcmVzZW50YXRpdmUgIEVkIE1hcmtleSwgYSBNYXNzYWNodXNldHRzIERlbW9jcmF0LiBTdXBwb3J0ZXJzIG9mIEtleXN0b25lIFhMIGFuZCBvaWwgc2FuZHMgZGV2ZWxvcG1lbnQgc2F5IHRoZSB2YXN0IENhbmFkaWFuIHJlc2VydmVzIGNhbiBoZWxwIGRyaXZlIGRvd24gZnVlbCBjb3N0cyBpbiB0aGUgVW5pdGVkIFN0YXRlcy4gQSByZXBvcnQgZnJvbSB0aGUgQ2FuYWRpYW4gRW5lcmd5IFBpcGVsaW5lIEFzc29jaWF0aW9uLCBwdXQgdG9nZXRoZXIgYnkgb2lsIGFuZCBnYXMgY29uc3VsdGFuY3kgUGVuc3BlbiwgYXJndWVkIGRpbHV0ZWQgYml0dW1lbiBpcyBubyBtb3JlIGNvcnJvc2l2ZSB0aGFuIG90aGVyIGhlYXZ5IGNydWRlLiBBIHllYXIgYWdvIEV4eG9uIHdvbiBhIGNvdXJ0IGFwcGVhbCB0byBjaGFyZ2UgbWFya2V0IHJhdGVzIG9uIHRoZSBQZWdhc3VzIGxpbmUsIG9yIHJhdGVzIHRoYXQgYXJlIG5vdCBjYXBwZWQgYW5kIHRoYXQgY2FuIGNoYW5nZSBhbG9uZyB3aXRoIG1hcmtldCBjb25kaXRpb25zIHdpdGhvdXQgcHJpb3IgYXBwcm92YWwgZnJvbSB0aGUgRmVkZXJhbCBFbmVyZ3kgUmVndWxhdG9yeSBDb21taXNzaW9uLiBUaGF0IGRlY2lzaW9uIGJ5IHRoZSBVLlMuIENvdXJ0IG9mIEFwcGVhbHMgaW4gV2FzaGluZ3RvbiBELkMuIHNhaWQgdGhlIFBlZ2FzdXMgcGlwZWxpbmUgaXMgbm93IHRoZSAicHJpbWFyeSBhdmVudWUiIHRvIG1vdmUgQ2FuYWRpYW4gY3J1ZGUgb2lsIHRvIHRoZSBHdWxmIENvYXN0LiBUaGUgcnVsaW5nIGFsc28gc2FpZCBFeHhvbiBtb3ZlcyBhYm91dCA2NiwwMDAgYmFycmVscyBwZXIgZGF5IG9uIHRoZSBsaW5lLiBMYXN0IHdlZWsgUEhNU0EgcHJvcG9zZWQgdGhhdCBFeHhvbiBwYXkgYSAkMS43IG1pbGxpb24gZmluZSBvdmVyIHBpcGVsaW5lIHNhZmV0eSB2aW9sYXRpb25zIHN0ZW1taW5nIGZyb20gYSBKdWx5IDIwMTEgb2lsIHNwaWxsIGZyb20gaXRzIFNpbHZlcnRpcCBwaXBlbGluZSBpbiB0aGUgWWVsbG93c3RvbmUgUml2ZXIuIFRoZSBsaW5lLCB3aGljaCBjYXJyaWVzIDQwLDAwMCBiYXJyZWxzIHBlciBkYXkgaW4gTW9udGFuYSwgbGVha2VkIGFib3V0IDEsNTAwIGJhcnJlbHMgb2YgY3J1ZGUgYWZ0ZXIgaGVhdnkgZmxvb2RpbmcgaW4gdGhlIGFyZWEuIEV4eG9uIGhhcyAzMCBkYXlzIGZyb20gdGhlIE1hcmNoIDI1IG9yZGVyIHRvIGNvbnRlc3QgdGhvc2UgdmlvbGF0aW9ucy4gQWNjb3JkaW5nIHRvIFBITVNBLCB0aGUgVS5TLiBoYXMgMi4zIG1pbGxpb24gbWlsZXMgb2YgcGlwZWxpbmVzLiBDTEVBTlVQIEV4eG9uIHNhaWQgdGhhdCBieSAzIGEubS4gU2F0dXJkYXkgdGhlcmUgd2FzIG5vIGFkZGl0aW9uYWwgb2lsIHNwaWxsaW5nIGZyb20gdGhlIHBpcGVsaW5lIGFuZCB0aGF0IHRydWNrcyBoYWQgYmVlbiBicm91Z2h0IGluIHRvIGFzc2lzdCB3aXRoIHRoZSBjbGVhbnVwLiBJbWFnZXMgZnJvbSBsb2NhbCBtZWRpYSBzaG93ZWQgY3J1ZGUgb2lsIHNuYWtpbmcgYWxvbmcgYSBzdWJ1cmJhbiBzdHJlZXQgYW5kIHNwZXdlZCBhY3Jvc3MgbGF3bnMuIFR3ZW50eS10d28gaG9tZXMgaW4gdGhlIGFmZmVjdGVkIHN1YmRpdmlzaW9uIHJlbWFpbmVkIGV2YWN1YXRlZCBvbiBTdW5kYXksIHRob3VnaCBNYXlmbG93ZXIgcG9saWNlIHdlcmUgcHJvdmlkaW5nIGVzY29ydHMgZm9yIHJlc2lkZW50cyB0byB0ZW1wb3JhcmlseSByZXR1cm4gdG8gcmV0cmlldmUgcGVyc29uYWwgaXRlbXMuIEplZmZlcnMgc2FpZCBhIGNvdXBsZSBvZiBob21lcyAiYXBwZWFyIHRvIGhhdmUgc21hbGwgYW1vdW50cyBvZiBvaWwgb24gdGhlaXIgZm91bmRhdGlvbnMsIiBidXQgaGUgaGFkIG5vIGluZm9ybWF0aW9uIG9uIGRhbWFnZSBlc3RpbWF0ZXMgb3IgY2xhaW1zLiBFeHhvbiBoYWQgZXN0YWJsaXNoZWQgYSBjbGFpbXMgaG90bGluZSBmb3IgYWZmZWN0ZWQgcmVzaWRlbnRzIGFuZCBzYWlkIGFib3V0IDUwIGNsYWltcyBoYWQgYmVlbiBtYWRlIHNvIGZhci4gRG9kc29uIHNhaWQgb2lsIHRoYXQgbWFkZSBpdCB0byB0aGUgc3RyZWV0IHdlbnQgaW50byBzdG9ybSBkcmFpbnMgdGhhdCBldmVudHVhbGx5IGxlYWQgdG8gYSBjb3ZlIGNvbm5lY3RlZCB0byBuZWFyYnkgTGFrZSBDb253YXksIGtub3duIGFzIGEgZmlzaGluZyBsYWtlIHN0b2NrZWQgd2l0aCBiYXNzLCBjYXRmaXNoLCBicmVhbSBhbmQgY3JhcHBpZS4gSGUgc2FpZCBsb2NhbCByZXNwb25kZXJzIHRoYXQgaW5jbHVkZWQgZmlyZW1lbiwgY2l0eSBlbXBsb3llZXMsIGNvdW50eSByb2FkIGNyZXdzLCBwb2xpY2UgcXVpY2tseSBidWlsdCBkaWtlcyBvZiBkaXJ0IGFuZCByb2NrIHRvIGJsb2NrIGN1bHZlcnRzIGFsb25nIHRoYXQgcGF0aCB0aGF0IHN0b3BwZWQgY3J1ZGUgZnJvbSBmb3VsaW5nIHRoZSBsYWtlLiAiV2Ugd2VyZSBqdXN0IGluIHRoZSBuaWNrIG9mIHRpbWUsIiBoZSBzYWlkLiBFeHhvbiBsYXRlciBkZXBsb3llZCAzLDYwMCBmZWV0IG9mIGJvb20gbmVhciB0aGUgbGFrZSBhcyBhIHByZWNhdXRpb24uIERvZHNvbiBzYWlkIGNydWRlIGFsc28gZ290IGludG8gc2V2ZXJhbCBob21lb3duZXJzJyB5YXJkcywgd2hpY2ggd2lsbCB0YWtlIGxvbmdlciB0byBjbGVhbiB1cC4gIldlJ3ZlIGp1c3QgZ290dGVuIHVzZWQgdG8gaGF2aW5nIHBpcGVsaW5lcyBnbyB0aHJvdWdoIGNpdGllcyBhbmQgY291bnRpZXMsIGFuZCB5b3UgaG9wZSBzb21ldGhpbmcgbGlrZSB0aGlzIGRvZXNuJ3QgaGFwcGVuLiBNeSBoZWFydCBnb2VzIG91dCB0byBhbGwgb2YgdGhlIHBlb3BsZSBwZXJzb25hbGx5IGltcGFjdGVkLCIgRG9kc29uIHNhaWQu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT3D91iAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDk5ZjZmYTI0MzZkNmM4ZjM=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0VELVVOLlY=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT3JHbSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/IUeuFHrhS</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/IUeuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/IUeuFHrhS</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/IUeuFHrhS</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEALmZmZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDdlZDIzZmQ1NjU5ZWRhNjE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGHUAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDMxOTU=</field><field name="title" class="java.lang.String">rO0ABXQAOEZyYWNraW5nIFB1c2hlcyBDcnVkZSBPdXRwdXQgdG8gSGlnaGVzdCBMZXZlbCBTaW5jZSAxOTg5</field><field name="content" class="java.lang.String">rO0ABXQKQ1UuUy4gb2lsIHByb2R1Y3Rpb24ganVtcGVkIGxhc3Qgd2VlayB0byB0aGUgaGlnaGVzdCBsZXZlbCBzaW5jZSBNYXkgMTk4OSwgY3V0dGluZyBjb25zdW1wdGlvbiBvZiBmb3JlaWduIGZ1ZWwgYW5kIHB1dHRpbmcgdGhlIFUuUy4gY2xvc2VyIHRvIGVuZXJneSBpbmRlcGVuZGVuY2UuIERyaWxsaW5nIHRlY2huaXF1ZXMgaW5jbHVkaW5nIGh5ZHJhdWxpYyBmcmFjdHVyaW5nLCBvciBmcmFja2luZywgcHVzaGVkIGNydWRlIG91dHB1dCB1cCBieSAxMjQsMDAwIGJhcnJlbHMsIG9yIDEuNiBwZXJjZW50LCB0byA3Ljc0NSBtaWxsaW9uIGJhcnJlbHMgYSBkYXkgaW4gdGhlIHNldmVuIGRheXMgZW5kZWQgU2VwdC4gNiwgdGhlIEVuZXJneSBJbmZvcm1hdGlvbiBBZG1pbmlzdHJhdGlvbiBzYWlkLiBSaXNpbmcgY3J1ZGUgc3VwcGxpZXMgZnJvbSBmaWVsZHMgaW5jbHVkaW5nIE5vcnRoIERha290YeKAmXMgQmFra2VuIHNoYWxlIGFuZCB0aGUgRWFnbGUgRm9yZCBpbiBUZXhhcyBoYXZlIGhlbHBlZCB0aGUgVS5TLiBiZWNvbWUgdGhlIHdvcmxk4oCZcyBsYXJnZXN0IGV4cG9ydGVyIG9mIHJlZmluZWQgZnVlbHMgaW5jbHVkaW5nIGdhc29saW5lIGFuZCBkaWVzZWwuIFRleGFzIHB1bXBlZCAyLjU3NSBtaWxsaW9uIGJhcnJlbHMgYSBkYXkgaW4gSnVuZSwgYWNjb3JkaW5nIHRvIHRoZSBFSUEsIGVub3VnaCB0byByYW5rIGl0IGFoZWFkIG9mIHNldmVuIG1lbWJlcnMgb2YgdGhlIE9yZ2FuaXphdGlvbiBvZiBQZXRyb2xldW0gRXhwb3J0aW5nIENvdW50cmllcy4g4oCcSXTigJlzIGFtYXppbmcs4oCdIHNhaWQgQW5keSBMaXBvdywgcHJlc2lkZW50IG9mIExpcG93IE9pbCBBc3NvY2lhdGVzIExMQywgYSBIb3VzdG9uLWJhc2VkIGNvbnN1bHRpbmcgZmlybSwgd2hvIHByZWRpY3RlZCBsYXN0IG1vbnRoIHRoYXQgdGhlIFUuUy4gd291bGQgYmUgcHVtcGluZyA3Ljc1IG1pbGxpb24gYmFycmVscyBhIGRheSBieSB0aGUgZW5kIG9mIHRoZSB5ZWFyLiDigJxUaGUgc3RhdGUgb2YgVGV4YXMgaXMgbm93IHByb2R1Y2luZyBtb3JlIG9pbCB0aGFuIHRoZSBjb3VudHJ5IG9mIElyYW4u4oCdIElyYW4gcHJvZHVjZWQgMi41NiBtaWxsaW9uIGJhcnJlbHMgYSBkYXkgaW4gSnVuZSwgYWNjb3JkaW5nIHRvIGEgQmxvb21iZXJnIHN1cnZleSBvZiBvaWwgY29tcGFuaWVzLCBwcm9kdWNlcnMgYW5kIGFuYWx5c3RzLiBTYXVkaSBBcmFiaWEsIElyYXEsIEt1d2FpdCwgdGhlIFVuaXRlZCBBcmFiIEVtaXJhdGVzIGFuZCBWZW5lenVlbGEgcHVtcGVkIG1vcmUgdGhhbiBUZXhhcyB0aGF0IG1vbnRoLiBXZXN0IFRleGFzIEludGVybWVkaWF0ZSwgdGhlIFUuUy4gYmVuY2htYXJrLCByb3NlIDUwIGNlbnRzLCBvciAwLjUgcGVyY2VudCwgdG8gJDEwNy44OSBhIGJhcnJlbCBvbiB0aGUgTmV3IFlvcmsgTWVyY2FudGlsZSBFeGNoYW5nZSBhcyBvZiAxOjU1IHAubS4gaW4gTmV3IFlvcmsuIEJyZW50IGZ1dHVyZXMgYWR2YW5jZWQgMjcgY2VudHMsIG9yIDAuMiBwZXJjZW50LCB0byAkMTExLjUyIG9uIElDRSBGdXR1cmVzIEV1cm9wZSBpbiBMb25kb24uIFRoZSBVLlMuIG1ldCA4NyBwZXJjZW50IG9mIGl0cyBvd24gZW5lcmd5IG5lZWRzIGluIHRoZSBmaXJzdCBmaXZlIG1vbnRocyBvZiAyMDEzLCBvbiBwYWNlIHRvIGJlIHRoZSBoaWdoZXN0IGFubnVhbCByYXRlIHNpbmNlIDE5ODYsIEVJQSBkYXRhIHNob3cuIERvbWVzdGljIGNydWRlIG91dHB1dCB3aWxsIGF2ZXJhZ2UgNy41IG1pbGxpb24gYmFycmVscyBhIGRheSBpbiAyMDEzIGFuZCA4LjQgbWlsbGlvbiBpbiAyMDE0LCB0aGUgRUlBIHNhaWQgeWVzdGVyZGF5IGluIGl0cyBTaG9ydC1UZXJtIEVuZXJneSBPdXRsb29rLiBSaXNpbmcgU3VwcGxpZXMgUmlzaW5nIGRvbWVzdGljIHN1cHBsaWVzIGhhdmUgY3VyYmVkIGNvbnN1bXB0aW9uIG9mIGZvcmVpZ24gZnVlbC4gTmV0IGltcG9ydHMgb2YgY3J1ZGUgb2lsIGFuZCBwZXRyb2xldW0gcHJvZHVjdHMgd2lsbCBmYWxsIHRvIDUuNCBtaWxsaW9uIGJhcnJlbHMgYSBkYXkgYnkgMjAxNCwgZG93biBmcm9tIDEyLjUgbWlsbGlvbiBpbiAyMDA1LCB0aGUgRUlBLCBhIHVuaXQgb2YgdGhlIEVuZXJneSBEZXBhcnRtZW50LCBzYWlkIGluIHRoZSByZXBvcnQuIFRoZSBhYnVuZGFuY2Ugb2YgY3J1ZGUgaGFzIG1hZGUgdGhlIFUuUy4gYW4gaW5jcmVhc2luZ2x5IGltcG9ydGFudCByZWZpbmluZyBodWIuIFUuUy4gZXhwb3J0cyBvZiBkaXN0aWxsYXRlIGZ1ZWwgb2lsLCBsYXJnZWx5IGNvbXByaXNlZCBvZiBkaWVzZWwsIHJvc2UgdG8gYW4gYWxsLXRpbWUgaGlnaCBvZiAxLjI4NSBtaWxsaW9uIGJhcnJlbHMgYSBkYXkgaW4gSnVuZSwgdGhlIEVJQSBzYWlkIEF1Zy4gMjkuIENoYXJ0ZXJzIGZvciBwcm9kdWN0IHRhbmtlcnMgZnJvbSB0aGUgVS5TLiBHdWxmIENvYXN0IHJlYWNoZWQgYSByZWNvcmQgb2YgNDIgbGFzdCB3ZWVrLCBhY2NvcmRpbmcgdG8gYSBTZXB0LiA2IHdlZWtseSBzaGlwcGluZyByZXBvcnQgYnkgQ2hhcmxlcyBSLiBXZWJlciBDby4sIGEgc2hpcCBicm9rZXIgYmFzZWQgaW4gR3JlZW53aWNoLCBDb25uZWN0aWN1dC4gQWJvdXQgMTUgb2YgdGhvc2Ugd2VyZSBib3VuZCBmb3IgRXVyb3BlLCBhbHNvIGEgcmVjb3JkLCB0aGUgZGF0YSBzaG93ZWQu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUELY+yAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDRmNzkwMmZiNjIzYWJhODQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNISVA=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEQikiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/7Cj1wo9cK</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/+4UeuFHrh</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/6uFHrhR64</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/8o9cKPXCk</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/8o9cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABclA==</field><field name="id" class="java.lang.String">rO0ABXQAEDZhY2UzODIzYTY5Mzc1ODU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGBOAAAA==</field></document></documents><date>2015-05-07T12:17:00-0500</date></cacheEntry>
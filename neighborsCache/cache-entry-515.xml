<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0CzZBbiBleGNoYW5nZXRyYWRlZCBmdW5kIG9mIFJ1c3NpYW4gc3RvY2tzIGdhaW5lZCBpbiBOZXcgWW9yayB0cmFkaW5nIGFzIHRoZSBFdXJvcGVhbiBVbmlvbnMgcHJvcG9zZWQgc2FuY3Rpb25zIHRvIHB1bmlzaCB0aGUgY291bnRyeSBmb3IgaXRzIHN1cHBvcnQgb2Ygc2VwYXJhdGlzdHMgaW4gVWtyYWluZSB3ZXJlbnQgYXMgZGVlcCBhcyBzb21lIGludmVzdG9ycyBoYWQgZXhwZWN0ZWQgVGhlIE1hcmtldCBWZWN0b3JzIFJ1c3NpYSBFVEYgdGhlIGxhcmdlc3QgVVMgZGVkaWNhdGVkIGV4Y2hhbmdldHJhZGVkIGZ1bmQgdHJhY2tpbmcgdGhlIG5hdGlvbnMgY29tcGFuaWVzIGluY3JlYXNlZCAwNiBwZXJjZW50IHRvIDI1MDkgYXMgb2YgMzMwIHBtIGluIE5ldyBZb3JrIEFtZXJpY2FuIGRlcG9zaXRhcnkgcmVjZWlwdHMgb2YgT0FPIE1lY2hlbCBhbmQgIE9BTyBHTUsgTm9yaWxzayBOaWNrZWwgYWR2YW5jZWQgYXMgbXVjaCBhcyAxNyBwZXJjZW50IFRoZSBCbG9vbWJlcmcgUnVzc2lhVVMgRXF1aXR5IGluZGV4IHNsaXBwZWQgMDIgcGVyY2VudCB0byA4NjU0IGFmdGVyIHJpc2luZyBhcyBtdWNoIGFzIDA0IHBlcmNlbnQgZWFybGllciBUaGUgRVRGIGdhaW5lZCBhcyBhIGRyYWZ0IGRvY3VtZW50IG9idGFpbmVkIGJ5IEJsb29tYmVyZyBzaG93ZWQgdGhlIEV1cm9wZWFuIFVuaW9uIGlzIHByZXBhcmluZyB0byBzYW5jdGlvbiB0b3AgUnVzc2lhbiBzZWN1cml0eSBvZmZpY2lhbHMgYW5kIGRpZCBub3QgbWVudGlvbiB0YXJnZXRpbmcgYW55IG1ham9yIGNvbXBhbmllcyBUaGUgMjhtZW1iZXIgYmxvYyBpcyBhbHNvIGNvbnNpZGVyaW5nIGEgYmFuIG9uIEV1cm9wZWFuIHB1cmNoYXNlcyBvZiBib25kcyBvciBzaGFyZXMgc29sZCBieSBSdXNzaWFzIHN0YXRlb3duZWQgYmFua3MgYW1vbmcgdGhlIG9wdGlvbnMgZm9yIHN0ZXBwZWR1cCBtZWFzdXJlcyBhZ2FpbnN0IHRoZSBLcmVtbGluIGFjY29yZGluZyB0byBhIHByb3Bvc2FsIHByZXNlbnRlZCB0byBtZW1iZXIgc3RhdGVzIEludmVzdG9ycyBhcmUgcmVsaWV2ZWQgSWx5YSBLcmF2ZXRzIHRoZSBOZXcgWW9ya2Jhc2VkIGRpcmVjdG9yIG9mIGludmVzdG1lbnQgcmVzZWFyY2ggYXQgRGFuaWxvZmYgQ2FwaXRhbCBMTEMgc2FpZCBieSBwaG9uZSBUaGUgbWFya2V0IGV4cGVjdGVkIG11Y2ggdG91Z2hlciBzYW5jdGlvbnMgYW5kIHRoYXQgaGFzbnQgbWF0ZXJpYWxpemVkIHNvIGZhciBUaGUgVVMgYW5kIEVVIGhhdmUgc291Z2h0IHRvIGlzb2xhdGUgUHJlc2lkZW50IFZsYWRpbWlyIFB1dGluIGZvciBzdXBwb3J0aW5nIHNlcGFyYXRpc3RzIGluIGVhc3Rlcm4gVWtyYWluZSBMYXN0IHdlZWtzIGRvd25pbmcgb2YgTWFsYXlzaWFuIEFpciBmbGlnaHQgTUgxNyB3aGljaCB0aGUgVVMgc2F5cyB3YXMgcHJvYmFibHkgZGVzdHJveWVkIGJ5IGEgUnVzc2lhbm1hZGUgbWlzc2lsZSBzeXN0ZW0gaGFzIGdhbHZhbml6ZWQgaW50ZXJuYXRpb25hbCBzZW50aW1lbnQgYWdhaW5zdCBQdXRpbiBUaGUgcmViZWxzIGRlbnkgdGhleSBzaG90IGRvd24gdGhlIGpldCBUaGUgY3Jhc2gga2lsbGVkIGFsbCAyOTggcGVvcGxlIGFib2FyZCBDYXV0aW91cyBTZW50aW1lbnQgQSByZXNvbHV0aW9uIG9mIHRoZSBzaXR1YXRpb24gaXMgcmVxdWlyZWQgZm9yIGEgbW9yZSBzdXN0YWluYWJsZSByZWNvdmVyeSBmb3IgUnVzc2lhIGFuZCB0aGUgcmlzayBvZiBjb3Vyc2UgaXMgbm90IG9ubHkgYSBwcm9sb25nZWQgc3RhbmRvZmYgYnV0IGFsc28gaGFyc2hlciBzYW5jdGlvbnMgSm9zZSBNb3JhbGVzIHdobyBvdmVyc2VlcyAyNSBiaWxsaW9uIGluIGdsb2JhbCBlcXVpdGllcyBhdCBNaXJhZSBBc3NldCBHbG9iYWwgSW52ZXN0bWVudCBpbiBOZXcgWW9yayBzYWlkIGJ5IGVtYWlsIHllc3RlcmRheSBXZSByZW1haW4gcG9zaXRpdmUgb24gUnVzc2lhbiBwcml2YXRlbHkgb3duZWQgY29tcGFuaWVzIGFuZCBjb25zdW1wdGlvbnJlbGF0ZWQgc3RvcmllcyBUaGUgVVMgYW5kIEVVIGhhdmUgaW1wb3NlZCBtZWFzdXJlcyBpbmNsdWRpbmcgdHJhdmVsIGJhbnMgYW5kIGFzc2V0IGZyZWV6ZXMgZm9yIFB1dGluIGFsbGllcyBmb2xsb3dpbmcgUnVzc2lhcyBhbm5leGF0aW9uIG9mIHRoZSBCbGFjayBTZWEgcGVuaW5zdWxhIG9mIENyaW1lYSBpbiBNYXJjaCBUaGUgVVMgYWxzbyBoYXMgYmxvY2tlZCBPQU8gUm9zbmVmdCBPQU8gTm92YXRlayBPQU8gR2F6cHJvbWJhbmsgYW5kIFZuZXNoZWNvbm9tYmFuayBmcm9tIGFjY2Vzc2luZyBBbWVyaWNhbiBlcXVpdHkgb3IgZGVidCBtYXJrZXRzIGZvciBuZXcgZmluYW5jaW5nIHdpdGggbWF0dXJpdGllcyBsb25nZXIgdGhhbiA5MCBkYXlzIFJUUyBzdG9ja2luZGV4IGZ1dHVyZXMgcm9zZSAxMSBwZXJjZW50IHRvIDEyNjYzMCBUaGUgUlRTIFZvbGF0aWxpdHkgSW5kZXggZGVjcmVhc2VkIDQyIHBlcmNlbnQgdG8gMzIyMSBNZWNoZWwgUnVzc2lhcyBiaWdnZXN0IGNva2luZ2NvYWwgc3VwcGxpZXIganVtcGVkIDMgcGVyY2VudCB0byAyMDUgdGhlIGJlc3QgcGVyZm9ybWFuY2Ugb24gdGhlIEJsb29tYmVyZyBSdXNzaWFVUyBFcXVpdHkgaW5kZXggdG9kYXkgVGhlIGluZGV4IGlzIGRvd24gYWJvdXQgMTUgcGVyY2VudCB0aGlzIHllYXIgVGhlIHNlbnRpbWVudCByZW1haW5zIGNhdXRpb3VzIHRvd2FyZCBSdXNzaWFuIGVxdWl0aWVzIE1pcmFlcyBNb3JhbGVzIHNhaWQgTmV3IHNhbmN0aW9ucyBhcmUgc3RpbGwgYSBwb3NzaWJpbGl0eSBnaXZlbiB0aGUgb25nb2luZyBzdGFuZCBvZmYgVGhpcyB3aWxsIGNvbnRpbnVlIHRvIHB1dCBwcmVzc3VyZSBvbiBSdXNzaWFuIGVxdWl0aWVzIGluIHRoZSBuZWFyIHRlcm0gYW5kIHdpbGwgYWxzbyBoYXZlIGEgbmVnYXRpdmUgaW1wYWN0IG9uIGVjb25vbWljIGdyb3d0aHQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMC0wNi0xMFQwMDowMDowMFogVE8gMjAxMy0wNy0zMFQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDcyNTA=</field><field name="title" class="java.lang.String">rO0ABXQAQFJ1c3NpYSBTdG9ja3MgUGx1bmdlIDEwJSBGcm9tIEhpZ2ggYXMgR2F6cHJvbSBGYWxscyB0byDigJgwOSBMb3c=</field><field name="content" class="java.lang.String">rO0ABXQPS1J1c3NpYW4gc2hhcmVzIHR1bWJsZWQgdG8gYSBOb3ZlbWJlciBsb3csIGZhbGxpbmcgMTAgcGVyY2VudCBmcm9tIHRoZSBoaWdoZXN0IGxldmVsIHRoaXMgeWVhciwgYXMgT0FPIEdhenByb20gc2x1bXBlZCBhbmQgY3J1ZGUgb2lsLCB0aGUgY291bnRyeeKAmXMgbWFpbiBleHBvcnQgZWFybmVyLCBoYWx0ZWQgaXRzIGFkdmFuY2UuIFZvbGF0aWxpdHkgc3VyZ2VkLiBUaGUgTWljZXggSW5kZXggcmV0cmVhdGVkIDEuOCBwZXJjZW50IHRvIDEsNDAwLjQ0IGJ5IDI6NDEgcC5tLiBpbiBNb3Njb3csIHRoZSBsb3dlc3QgaW50cmFkYXkgbGV2ZWwgc2luY2UgTm92LiAzMCBhbmQgYSAxMCBwZXJjZW50IGRyb3AgZnJvbSB0aGlzIHllYXLigJlzIGhpZ2ggb24gSmFuLiAyOC4gVHJhZGluZyB2b2x1bWVzIHdlcmUgMTIgcGVyY2VudCBhYm92ZSB0aGUgMzAtZGF5IGF2ZXJhZ2UsIHdoaWxlIDEwLWRheSBwcmljZSBzd2luZ3Mgcm9zZSB0byAxMi45MywgdGhlIG1vc3Qgc2luY2UgTWFyY2ggMjguIE1ldGFsIHByb2R1Y2VycyBPQU8gTWFnbml0b2dvcnNrIElyb24gJiBTdGVlbCwgT0FPIFNldmVyc3RhbCBhbmQgT0FPIE5vdm9saXBldHNrIFN0ZWVsIGZlbGwgYXQgbGVhc3QgNCBwZXJjZW50LiBDcnVkZSBvaWwsIHdoaWNoIHRvZ2V0aGVyIHdpdGggbmF0dXJhbCBnYXMgYWNjb3VudHMgZm9yIGFib3V0IGhhbGYgUnVzc2lh4oCZcyBidWRnZXQgcmV2ZW51ZSwgcmV0cmVhdGVkIDAuMiBwZXJjZW50IHRvICQ5NC40NiBwZXIgYmFycmVsIGluIE5ldyBZb3JrLiBNb3N0IG1ldGFscyBkcm9wcGVkIGluIExvbmRvbiwgaW5jbHVkaW5nIHRpbiwgY29wcGVyIGFuZCB6aW5jLiBHYXpwcm9tLCBSdXNzaWHigJlzIGJpZ2dlc3QgY29tcGFueSBhbmQgbmF0dXJhbC1nYXMgZXhwb3J0IG1vbm9wb2x5LCBsb3N0IDIuNyBwZXJjZW50IHRvIDEyNS45MCBydWJsZXMsIHRoZSBsb3dlc3QgaW50cmFkYXkgbGV2ZWwgc2luY2UgQXByaWwgMjAwOS4gVGhlIHN0b2NrIGhhcyB0aGUgdGhpcmQtYmlnZ2VzdCB3ZWlnaHRpbmcgb24gdGhlIE1pY2V4LiDigJxJbnZlc3RvcnMgYXJlIGN1dHRpbmcgdGhlaXIgUnVzc2lhbiBob2xkaW5ncyzigJ0gTWFyayBSdWJpbnN0ZWluLCBoZWFkIG9mIHJlc2VhcmNoIGF0IE1ldHJvcG9sIElGQyBpbiBNb3Njb3csIHNhaWQgYnkgcGhvbmUuIOKAnEdhenByb20gaXMgZHJhZ2dpbmcgdGhlIHdob2xlIGluZGV4IGRvd24uIE1ldGFscyBhcmUgZG93biBhbmQgbWV0YWwgcHJvZHVjZXJzIGFyZSBzbHVtcGluZy7igJ0gT0FPIFJvc25lZnQgZHJvcHBlZCAyLjYgcGVyY2VudCB0byAyMjAgcnVibGVzLCB0aGUgbG93ZXN0IHNpbmNlIE9jdC4gMjMuIFJ1c3NpYSBpcyBjb25zaWRlcmluZyBzZWxsaW5nIGEgMTkgcGVyY2VudCBzdGFrZSBpbiB0aGUgbmF0aW9u4oCZcyBiaWdnZXN0IG9pbCBwcm9kdWNlciB0aGlzIHllYXIsIEVjb25vbXkgTWluaXN0ZXIgQW5kcmVpIEJlbG91c292IHRvbGQgcmVwb3J0ZXJzLiBPQU8gTWVjaGVsLCBhIGNva2luZyBjb2FsIGFuZCBzdGVlbCBwcm9kdWNlciwgZmVsbCA0LjcgcGVyY2VudCB0byAxNDEuMjAgcnVibGVzLiBUaGUgZG9sbGFyLWRlbm9taW5hdGVkIFJUUyBJbmRleCBzYW5rIDEuNSBwZXJjZW50IHRvIDEsNDMxLjcwLiBSZWxhdGl2ZSBTdHJlbmd0aCBUaGUgUmVsYXRpdmUgU3RyZW5ndGggSW5kZXggb24gdGhlIE1pY2V4IHdhcyBhYm91dCAzMi4gQSB2YWx1ZSBiZWxvdyAzMCBzaWduYWxzIHRoZSBpbmRleCBoYXMgYmVlbiBvdmVyc29sZCBhbmQgbWF5IHJldmVyc2UgbG9zc2VzLiBMb2NhbCBzdG9ja3MgZmVsbCB0aGUgbW9zdCBzaW5jZSBOb3YuIDEzIG9uIE1hcmNoIDE4IG9uIGNvbmNlcm4gQ3lwcnVz4oCZcyBwbGFuIHRvIHJlc2N1ZSBpdHMgZWNvbm9teSB0aHJvdWdoIGEgdGF4IG9uIHNhdmluZ3MgYWNjb3VudHMgbWF5IGFmZmVjdCAkNjAgYmlsbGlvbiBvZiBsb2FucyBhbmQgZGVwb3NpdHMgZnJvbSBSdXNzaWEuIEN5cHJ1cyBpcyB0aGUgYmlnZ2VzdCBkaXJlY3QgaW52ZXN0b3IgaW50byBSdXNzaWEgYW5kIHRoZSBjaGllZiByZWNpcGllbnQgb2YgUnVzc2lhbiBpbnZlc3RtZW50IGFicm9hZCBiZWNhdXNlIG9mIGEgZG91YmxlLXRheCBhdm9pZGFuY2UgdHJlYXR5IGFuZCBsb3cgdGF4IHJhdGVzLCBhY2NvcmRpbmcgdG8gUnVzc2lh4oCZcyBjZW50cmFsIGJhbmsuIE1ldGFsIHByb2R1Y2VycyBsZWQgdGhlIHJldHJlYXQgaW4gTG9uZG9uLiBOTE1LIGZlbGwgNC41IHBlcmNlbnQgdG8gJDE1LjQxIGluIExvbmRvbiB0cmFkaW5nLCB3aGlsZSBTZXZlcnN0YWwgbG9zdCA0LjEgcGVyY2VudCB0byAkOC4yOC4gT0FPIFJvc3RlbGVjb20sIHRoZSBjb3VudHJ54oCZcyBiaWdnZXN0IGZpeGVkLWxpbmUgcGhvbmUgb3BlcmF0b3IsIGZlbGwgYXMgbXVjaCBhcyAxIHBlcmNlbnQgYmVmb3JlIHRyYWRpbmcgZG93biAwLjUgcGVyY2VudCBhdCAxMTUuNTAgcnVibGVzLiBLb25zdGFudGluIE1hbG9mZWV24oCZcyBNYXJzaGFsbCBDYXBpdGFsIFBhcnRuZXIgYW5udWxlZCB0aGUgc2FsZSBvZiBpdHMgMTEgcGVyY2VudCBzdGFrZSBpbiBSb3N0ZWxlY29tIHRvIGJpbGxpb25haXJlIEFya2FkeSBSb3RlbmJlcmcsIGFjY29yZGluZyB0byBhIHN0YXRlbWVudC4gUm90ZW5iZXJn4oCZcyBjb21wYW55IGFncmVlZCB0byBidXkgdGhlIHNoYXJlcyBmcm9tIE1hcnNoYWxsIGZvciBhbiB1bmRpc2Nsb3NlZCBhbW91bnQgaW4gRmVicnVhcnkuIE5lZ2F0aXZlIFJlYWN0aW9uIOKAnFRoZSBsb3NzIG9mIGFuIGluZmx1ZW50aWFsIHNoYXJlaG9sZGVyIHN1Y2ggYXMgUm90ZW5iZXJnIG1heSBjYXVzZSBhIG5lZ2F0aXZlIG1hcmtldCByZWFjdGlvbizigJ0gQWxmYSBCYW5rIGFuYWx5c3RzIEVsaW5hIEt1bGlldmEgYW5kIERtaXRyeSBEb3JvbmluIHNhaWQgaW4gYW4gZS1tYWlsZWQgbm90ZS4gQXQgdGhlIHNhbWUgdGltZSwgdGhlIGNhbmNlbGF0aW9uIG9mIHRoZSBkZWFsIOKAnG1heSByZWR1Y2UgZmVhcnMgdGhhdCBSb3N0ZWxlY29tIHdpbGwgdXNlIG5vbi1tYXJrZXQgbWV0aG9kcyB3aGVuIGV4cGFuZGluZyBpbnRvIHRoZSBtb2JpbGUgc2VnbWVudCzigJ0gdGhlIEFsZmEgQmFuayBhbmFseXN0cyBzYWlkLiBUaGF0IHdvdWxkIGJlIOKAnHBvc2l0aXZlIGZvciBNVFMsIFZpbXBlbENvbSBhbmQgTWVnYUZvbi7igJ0gT0FPIE1vYmlsZSBUZWxlU3lzdGVtcyB0cmFkZWQgc3RlYWR5IGF0IDI2Ni4yMiBydWJsZXMgYWZ0ZXIgcmlzaW5nIGFzIG11Y2ggYXMgMS4zIHBlcmNlbnQuIFRoZSBSVFMgVm9sYXRpbGl0eSBJbmRleCwgd2hpY2ggbWVhc3VyZXMgZXhwZWN0ZWQgc3dpbmdzIGluIHN0b2NrIGZ1dHVyZXMsIGNsaW1iZWQgOC42IHBlcmNlbnQgdG9kYXkgdG8gMjAuODAsIHRoZSBmb3VydGggZGF5IG9mIGdhaW5zIGFuZCB0aGUgYmlnZ2VzdCBqdW1wIHNpbmNlIE1hcmNoIDE4IG9uIGEgY2xvc2luZyBiYXNpcy4gVGhlIE1hcmtldCBWZWN0b3JzIFJ1c3NpYSBFVEYsIHRoZSBsYXJnZXN0IGRlZGljYXRlZCBSdXNzaWFuIGV4Y2hhbmdlLXRyYWRlZCBmdW5kLCBhZGRlZCAwLjIgcGVyY2VudCB0byAkMjcuNjQgeWVzdGVyZGF5LiBUaGUgQmxvb21iZXJnIFJ1c3NpYS1VUyBFcXVpdHkgSW5kZXggaW5jcmVhc2VkIDAuNiBwZXJjZW50IHRvIDk2LjQ1IGluIE5ldyBZb3JrLiBSdXNzaWFuIGVxdWl0aWVzIGhhdmUgdGhlIGNoZWFwZXN0IHZhbHVhdGlvbnMgYW1vbmcgMjEgZW1lcmdpbmcgbWFya2V0cyB0cmFja2VkIGJ5IEJsb29tYmVyZy4gVGhlIE1pY2V4IHRyYWRlcyBhdCA1LjIgdGltZXMgZXN0aW1hdGVkIGVhcm5pbmdzIGFuZCBoYXMgbG9zdCA0LjQgcGVyY2VudCB0aGlzIHllYXIsIGNvbXBhcmVkIHdpdGggMTAuNCB0aW1lcyBmb3IgdGhlIE1TQ0kgRW1lcmdpbmcgTWFya2V0cyBJbmRleCwgd2hpY2ggaGFzIHNsaWQgMi44IHBlcmNlbnQgdGhpcyB5ZWFyLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT33dvCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGIzNzdhMjk3ZmExM2VjOTA=</field><field name="symbol" class="java.lang.String">rO0ABXQAA01UUw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT38nUyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxFHrhR64U</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxOuFHrhR7</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxFHrhR64U</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxNcKPXCj2</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAvlHrhR64U</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAACsRA==</field><field name="id" class="java.lang.String">rO0ABXQAEGI1YTdmNTE4YTliNzI2YjI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEdrAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUzNTk=</field><field name="title" class="java.lang.String">rO0ABXQAP1MmUCA1MDAgQmVhdGluZyBHb2xkIE1vc3QgU2luY2UgMTk5OSBhcyBFYXJuaW5ncyBFc3RpbWF0ZXMgUmlzZQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATZxbIiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGJiN2EzMDQ2ZDZmOWVjZWM=</field><field name="symbol" class="java.lang.String">rO0ABXQAAVA=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATZ2kuSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkvXCj1wo9</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlMzMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAklHrhR64U</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAk8KPXCj1x</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAk8KPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAC1pZA==</field><field name="id" class="java.lang.String">rO0ABXQAEDBjZmU2YzNkZDk1MDllMmU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMl3AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDkzMjA=</field><field name="title" class="java.lang.String">rO0ABXQAQVMmUCA1MDAgVmFsdWF0aW9uIFNsaXBzIDE5JSBCZWxvdyAyMDExIGFzIFNoYW91bCBBZHZpc2VzIFBhdGllbmNl</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATe13SyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGQxODhlMWU2ZTBjYzhhNzc=</field><field name="symbol" class="java.lang.String">rO0ABXQAAk1O</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATe7A4iAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArFHrhR64U</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArQo9cKPXD</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAqij1wo9cK</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAq64UeuFHs</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAnszMzMzMz</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAsiA==</field><field name="id" class="java.lang.String">rO0ABXQAEDE2YTZmMTI1NTk1Y2M3MDc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJLtAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQAAzIzMQ==</field><field name="title" class="java.lang.String">rO0ABXQAOVB1dGluIFR1cm5zIEJsYWNrIEdvbGQgdG8gQnVsbGlvbiBhcyBSdXNzaWEgT3V0YnV5cyBXb3JsZA==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATzH1qsAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDIxZjgyNDBhNjk2MjZkNjc=</field><field name="symbol" class="java.lang.String">rO0ABXQABEdPTEQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATzM/QcAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBWjhR64Ueu</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBWvMzMzMzN</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBWaZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBWtwo9cKPX</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBWPMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAApzyA==</field><field name="id" class="java.lang.String">rO0ABXQAEDJhMmJhYTJjYzJkZjMxYjc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKtaAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE3NjIy</field><field name="title" class="java.lang.String">rO0ABXQASkJQIFNlZW4gYXMgVGFrZW92ZXIgVGFyZ2V0IGFzIFZhbHVhdGlvbiBTaW5rcyBBZnRlciBTcGlsbCBBZnRlciBTZXR0bGVtZW50</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATsXQHsAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGMxMzUwNzc5NmU1YWVmZGQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAA1ROSw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATscZtcAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEADwo9cKPXD</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAD64UeuFHs</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEADcKPXCj1x</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEADhR64UeuF</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEACAAAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAApt7A==</field><field name="id" class="java.lang.String">rO0ABXQAEDZjYzQ0MWM5MjBiNjdiODU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mM0+AAAA==</field></document></documents><date>2015-05-07T12:23:18-0500</date></cacheEntry>
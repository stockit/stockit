<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0CdtDYWxpZm9ybmlhIGlzIHBvaXNlZCB0byBzaGFrZSBvZmYgYSBsZWdhY3kgb2YgYnVkZ2V0IGRlZmljaXRzIHdpdGggYW4gb3BlcmF0aW5nIHN1cnBsdXMgbW9yZSB0aGFuIGRvdWJsaW5nIHRvIDIyIGJpbGxpb24gYnkgdGhlIGVuZCBvZiBKdW5lIG9uIHRheCBpbmNyZWFzZXMgYW5kIGdhaW5zIGluIHN0b2NrcyB0aGUgc3RhdGVzIG5vbnBhcnRpc2FuIExlZ2lzbGF0aXZlIEFuYWx5c3RzIE9mZmljZSBzYWlkIFRoZSBzdXJwbHVzIHByb2plY3RlZCB0byByZWFjaCAzMiBiaWxsaW9uIGluIHRoZSBmb2xsb3dpbmcgeWVhciBzaG91bGQgYmUgdXNlZCB0byBleHBhbmQgcHJvZ3JhbXMgYW5kIHBheSBkb3duIDY2IGJpbGxpb24gaW4gcmVjdXJyaW5nIGJvcnJvd2luZyB0aGF0IERlbW9jcmF0aWMgR292ZXJub3IgSmVycnkgQnJvd24gY2FsbHMgYSB3YWxsIG9mIGRlYnQgdGhlIGFuYWx5c3Qgc2FpZCBXZWRuZXNkYXkgaW4gYSByZXBvcnQgSW5jb21lIHRheGVzIGluIHRoZSBtb3N0IHBvcHVsb3VzIFVTIHN0YXRlIGZ1ZWxlZCBsYXJnZWx5IGJ5IGNhcGl0YWwgZ2FpbnMgZnJvbSB0aGUgcGVyZm9ybWFuY2Ugb2YgdGhlIHN0b2NrIG1hcmtldCBwcm92aWRlIHRoZSBiaWdnZXN0IHNoYXJlIG9mIHJldmVudWUgVm90ZXJzIGluIDIwMTIgcmFpc2VkIHJhdGVzIHRvIDEzMyBwZXJjZW50IG9uIHRob3NlIG1ha2luZyAxIG1pbGxpb24gb3IgbW9yZSB0aGUgbW9zdCBvZiBhbnkgc3RhdGUgYW5kIGJvb3N0ZWQgc2FsZXMgbGV2aWVzIFRoZSBzdGF0ZXMgYnVkZ2V0YXJ5IGNvbmRpdGlvbiBpcyBzdHJvbmdlciB0aGFuIGF0IGFueSBwb2ludCBpbiB0aGUgcGFzdCBkZWNhZGUgTGVnaXNsYXRpdmUgQW5hbHlzdCBNYWMgVGF5bG9yIHNhaWQgaW4gdGhlIHJlcG9ydCBUaGUgc3RhdGVzIHN0cnVjdHVyYWwgZGVmaWNpdCAgaW4gd2hpY2ggb25nb2luZyBzcGVuZGluZyBjb21taXRtZW50cyB3ZXJlIGdyZWF0ZXIgdGhhbiBwcm9qZWN0ZWQgcmV2ZW51ZXMgIGlzIG5vIG1vcmUgVGhlIFN0YW5kYXJkICBQb29ycyBpbmRleCBvZiBzaGFyZXMgaGFzIGdhaW5lZCBhYm91dCAyNSBwZXJjZW50IHRoaXMgeWVhciBhZnRlciBhIDEzNCBwZXJjZW50IGluY3JlYXNlIGluIDIwMTIgSW5jb21ldGF4IHJldmVudWUgY292ZXJlZCA2MSBwZXJjZW50IG9mIGdlbmVyYWxmdW5kIHNwZW5kaW5nIGxhc3QgeWVhciBUaGUgc3RhdGVzIHJlbGF0aXZlIGJvcnJvd2luZyBjb3N0cyBoYXZlIGRlY2xpbmVkIHRoaXMgeWVhciBhcyBpdHMgZmlzY2FsIG91dGxvb2sgaGFzIGltcHJvdmVkIEludmVzdG9ycyBkZW1hbmQgYWJvdXQgMDM1IHBlcmNlbnRhZ2UgcG9pbnQgb2YgZXh0cmEgeWllbGQgdG8gb3duIDEweWVhciBDYWxpZm9ybmlhIGRlYnQgcmF0aGVyIHRoYW4gdG9wcmF0ZWQgYm9uZHMgZG93biBmcm9tIGEgZ2FwIG9mIGFib3V0IDA2IHBlcmNlbnRhZ2UgcG9pbnQgaW4gSmFudWFyeSBkYXRhIGNvbXBpbGVkIGJ5IEJsb29tYmVyZyBzaG93IFBoYXNlIE91dCBUaGUgc3RhdGVzIHJldmVudWUgZ3Jvd3RoIHdpbGwgc2xvdyB3aGVuIHNhbGVzIHRheCBpbmNyZWFzZXMgZW5kIGluIDIwMTYgYW5kIHRoZSBoaWdoZXIgcmF0ZXMgb24gaW5jb21lcyBzdGFydGluZyBhdCAyNTAwMDAgZXhwaXJlIGluIDIwMTggdGhlIGFuYWx5c3Qgc2FpZCBCcm93biA3NSBmb3JlY2FzdCBhbiA4MTcgbWlsbGlvbiBzdXJwbHVzIHRoaXMgeWVhciB0aGUgZmlyc3QgaW4gYWxtb3N0IGEgZGVjYWRlIG1hcmtpbmcgYSB0dXJuYXJvdW5kIGFmdGVyIHRoZSBzdGF0ZSBoYWQgc3RyYWluZWQgdW5kZXIgbW9yZSB0aGFuIDEwMCBiaWxsaW9uIG9mIGN1bXVsYXRpdmUgZGVmaWNpdHMgc2luY2UgMjAwNyBTdGFuZGFyZCAgUG9vcnMgcmFpc2VkIHRoZSBzdGF0ZXMgY3JlZGl0IHJhdGluZyB0byBBIHNpeHRoaGlnaGVzdCBpbiBKYW51YXJ5IHRoZSBmaXJzdCBib29zdCBzaW5jZSAyMDA2IEZpdGNoIFJhdGluZ3MgZGlkIGxpa2V3aXNlIGluIEF1Z3VzdCBNb29keXMgSW52ZXN0b3JzIFNlcnZpY2UgZ3JhZGVzIGl0IGZvdXIgc3RlcHMgYmVsb3cgdGhlIHRvcCBDYWxpZm9ybmlhIGhhZCBhYm91dCAxMDMgYmlsbGlvbiBvZiBncm9zcyB0YXhzdXBwb3J0ZWQgZGVidCBpbiAyMDEyIHJhbmtpbmcgaXQgZmlyc3QgYW1vbmcgVVMgc3RhdGVzIGFjY29yZGluZyB0byBNb29keXMgSXQgcGxhY2VkIHNldmVudGggb24gYSBkZWJ0cGVyY2FwaXRhIGJhc2lzIFRheCByZXZlbnVlIHRvdGFsZWQgMjU1IGJpbGxpb24gZnJvbSBKdWx5IHRocm91Z2ggT2N0b2JlciBvZiB0aGlzIHllYXIgb3IgMjQgcGVyY2VudCBhYm92ZSBwcm9qZWN0aW9ucyBzdGF0ZSBDb250cm9sbGVyIEpvaG4gQ2hpYW5nIHNhaWQgaW4gYSBOb3YgOCB1cGRhdGUgVGhlIHN0cm9uZ2VydGhhbmV4cGVjdGVkIHJldmVudWVzIGRlbW9uc3RyYXRlIHRoYXQgdGhlIEdyZWF0IFJlY2Vzc2lvbiBpcyBiZWNvbWluZyBhIGZhaW50IGltYWdlIGluIHRoZSByZWFyIHZpZXcgbWlycm9yIENoaWFuZyBzYWlkIGluIHRoZSBzdGF0ZW1lbnQgb24gaGlzIHdlYnNpdGV0AARyb3dzdXEAfgAKAAAAAXQAATV0AAVzdGFydHVxAH4ACgAAAAF0AAEwdAACZmx1cQB+AAoAAAABdABvYXJ0aWNsZUlkLHRpdGxlLGNvbnRlbnQsZGF0ZSxzdG9ja0hpc3RvcnlJZCxzeW1ib2wsaGlzdG9yeURhdGUsb3BlbixoaWdoLGxvdyxjbG9zZSxhZGpDbG9zZSx2b2x1bWUsaWQsX3ZlcnNpb25fdAACZnF1cQB+AAoAAAABdAA6aGlzdG9yeURhdGU6WzIwMTAtMDYtMTFUMDA6MDA6MDBaIFRPIDIwMTMtMDctMzBUNTk6NTk6NTlaXXgAcA==</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQAAzQ1Mw==</field><field name="title" class="java.lang.String">rO0ABXQAPENhbGlmb3JuaWEgSGFzIHRvIERlbGF5IEJpbGxzIHRvIEF2ZXJ0IElPVXMsIENvbnRyb2xsZXIgU2F5cw==</field><field name="content" class="java.lang.String">rO0ABXQQZ09jdC4gNCAoQmxvb21iZXJnKSAtLSBDYWxpZm9ybmlhIG1heSBoYXZlIHRvIGlzc3VlIElPVXMgdW5sZXNzIGxhd21ha2VycyBhZ3JlZSB0byBkZWxheSBwYXlpbmcgc29tZSBvZiB0aGUgYmlsbHMgdGhhdCBhY2N1bXVsYXRlZCBhcyBHb3Zlcm5vciBBcm5vbGQgU2Nod2FyemVuZWdnZXIgYW5kIGxlZ2lzbGF0aXZlIGxlYWRlcnMgbmVnb3RpYXRlZCBhIGJ1ZGdldCBjb21wcm9taXNlLCBhIHNwb2tlc3dvbWFuIGZvciB0aGUgY29udHJvbGxlcuKAmXMgb2ZmaWNlIHNhaWQuICAgICAgVGhlIGRlZmVycmFscyBhcmUgbmVlZGVkIGJlY2F1c2UgQ2FsaWZvcm5pYSByYWNrZWQgdXAgJDguNCBiaWxsaW9uIG9mIGRlbGlucXVlbnQgYmlsbHMgYXMgaXQgb3BlcmF0ZWQgd2l0aG91dCBhIHNwZW5kaW5nIHBsYW4gZm9yIG1vcmUgdGhhbiB0aHJlZSBtb250aHMsIHNhaWQgSGFsbHllIEpvcmRhbiwgc3Bva2Vzd29tYW4gZm9yIENvbnRyb2xsZXIgSm9obiBDaGlhbmcuIFRoYXTigJlzIG1vcmUgdGhhbiB0aGUgJDUgYmlsbGlvbiBicmlkZ2UgbG9hbiBUcmVhc3VyZXIgQmlsbCBMb2NreWVyIGlzIGxpbmluZyB1cCBmcm9tIGEgZ3JvdXAgb2YgV2FsbCBTdHJlZXQgYmFua3MgdG8gdGlkZSB0aGUgc3RhdGUgb3Zlci4gICAgICBTY2h3YXJ6ZW5lZ2dlciBhbmQgdG9wIGxhd21ha2VycyBzYWlkIE9jdC4gMiB0aGF0IHRoZXkgYWdyZWVkIG9uIGhvdyB0byBjbG9zZSBhICQxOS4xIGJpbGxpb24gZGVmaWNpdCBhbmQgZW5kIGEgc3RhbGVtYXRlIHRoYXQgaGFzIGxlZnQgdGhlIG1vc3QgcG9wdWxvdXMgVS5TLiBzdGF0ZSB3aXRob3V0IGEgc3BlbmRpbmcgcGxhbiBzaW5jZSB0aGUgSnVseSAxIHN0YXJ0IG9mIGl0cyBmaXNjYWwgeWVhci4gQ2hpYW5nIHNhaWQgcmVwZWF0ZWRseSB0aGF0IGEgcHJvbG9uZ2VkIGltcGFzc2UgY291bGQgZm9yY2UgaGltIHRvIGlzc3VlIElPVXMgZm9yIGEgc2Vjb25kLXN0cmFpZ2h0IHllYXIgaW4gb3JkZXIgdG8gY29uc2VydmUgY2FzaCB0byBtYWtlIHByaW9yaXR5IHBheW1lbnRzIHN1Y2ggYXMgZGVidCBzZXJ2aWNlLiAgICAgIOKAnE5vYm9keSB3YW50cyB0byBkbyBJT1VzIGJlY2F1c2Ugb2YgdGhlIGRhbWFnZSBpdCB3aWxsIGRvIHRvIG91ciBjcmVkaXQgcmF0aW5ncyByaWdodCBhcyB3ZSB3aWxsIG5lZWQgdG8gYm9ycm93LOKAnSBKb3JkYW4gc2FpZC4g4oCcSU9VcyBhcmUgYW4gb3B0aW9uIG5vYm9keSB3YW50cy7igJ0gICAgICBUaGUgZ292ZXJub3IgYW5kIHRoZSBsZWdpc2xhdHVyZSBtdXN0IGFwcHJvdmUgZGVsYXllZCBwYXltZW50cywgSm9yZGFuIHNhaWQuIENoaWFuZyBoYXNu4oCZdCBkZWNpZGVkIGhvdyBtYW55IG9yIHdoaWNoIGJpbGxzIHRvIHJlY29tbWVuZCB0aGV5IHB1dCBvZmYgcGF5aW5nLCBKb3JkYW4gc2FpZC4gICAgICBCZXR0ZXItdGhhbi1leHBlY3RlZCB0YXggcmVjZWlwdHMgZnJvbSBTZXB0ZW1iZXIgYW5kIHNpZ25pZmljYW50IHNhdmluZ3MgYnVpbHQgaW50byB0aGUgYnVkZ2V0IG1heSBsb3dlciB0aGUgYW1vdW50IHRoYXQgbmVlZHMgdG8gYmUgcHV0IG9mZiwgc2hlIHNhaWQuIFRoZSBzdGF0ZeKAmXMgY2FzaCBwdXJzZSB3aWxsIGRyb3AgdG8gYWJvdXQgJDEuMiBiaWxsaW9uIGJ5IE9jdC4gMjgsIHNoZSBzYWlkLiAgICAgICAgICAgICAgICAgICAgICAgICAgIERlZmVycmVkIEJpbGxzICAgICAgTG9ja3llciBoYXMgc2FpZCBoZSB3aWxsIHJlcGF5IHRoZSBicmlkZ2UgbG9hbiB3aXRoIHByb2NlZWRzIGZyb20gdGhlIHNhbGUgb2YgYWJvdXQgJDEwIGJpbGxpb24gb2YgcmV2ZW51ZSBhbnRpY2lwYXRpb24gbm90ZXMsIGEgdHlwZSBvZiBzaG9ydC10ZXJtIHRheC1leGVtcHQgbXVuaWNpcGFsIGJvbmQgdGhhdCBzdGF0ZXMgYW5kIGxvY2FsIGdvdmVybm1lbnRzIGNvbW1vbmx5IHVzZSB0byBwYXkgYmlsbHMgdW50aWwgdGF4IHJldmVudWUgYXJyaXZlcyBsYXRlciBpbiB0aGUgeWVhci4gICAgICBUaG9zZSBub3RlcyB3b3VsZCBsaWtlbHkgYmUgc29sZCB3aXRoaW4gc2l4IHdlZWtzIG9mIGJ1ZGdldCBwYXNzYWdlLCBhY2NvcmRpbmcgdG8gdGhlIHRyZWFzdXJlci4gSGUgaGFzbuKAmXQgYmVlbiBhYmxlIHRvIGJvcnJvdyB0aGUgbW9uZXkgYmVjYXVzZSB0aGUgcHJvbWlzZSB0byByZXBheSB0aGUgbm90ZXMgbXVzdCBiZSBpbmNsdWRlZCBpbiB0aGUgYnVkZ2V0LiAgICAgIFN0YXRlIGZpbmFuY2Ugb2ZmaWNpYWxzIGFscmVhZHkgZGVmZXJyZWQgcGF5aW5nICQyLjkgYmlsbGlvbiBvZiBzdWJzaWRpZXMgdG8gc2Nob29scyBhbmQgY291bnRpZXMgaW4gU2VwdGVtYmVyIHRvIG1ha2Ugc3VyZSB0aGVyZeKAmXMgZW5vdWdoIG1vbmV5IGZvciBib25kaG9sZGVycy4gVGhhdCB3YXMgb24gdG9wIG9mICQzLjIgYmlsbGlvbiB0aGUgc3RhdGUgcHVzaGVkIGJhY2sgaW4gSnVseS4gICAgICBMYXdtYWtlcnMgYW5kIFNjaHdhcnplbmVnZ2VyLCBhIDYzLXllYXItb2xkIFJlcHVibGljYW4sIHJlZnVzZWQgdG8gZGlzY2xvc2UgZGV0YWlscyBvZiB0aGVpciBkZWZpY2l0LWN1dHRpbmcgYWdyZWVtZW50LiBUaGV5IGRpZCBzYXkgdGhlIGFjY29yZCBkb2VzbuKAmXQgcmFpc2UgdGF4ZXMsIGFzIHNvdWdodCBieSBEZW1vY3JhdHMsIG5vciBkb2VzIGl0IGRpc21hbnRsZSB0aGUgc3RhdGXigJlzIHdlbGZhcmUgc3lzdGVtLCBhcyBwcm9wb3NlZCBieSBSZXB1YmxpY2Fucy4gICAgICAgICAgICAgICAgICAgICAgICAgICBCdWRnZXQgUHJvY2VzcyAgICAgIEEgcHVibGljIGhlYXJpbmcgb24gdGhlIHByb3Bvc2FsIGlzIHNjaGVkdWxlZCBmb3IgT2N0LiA2LCB3aXRoIFNlbmF0ZSBhbmQgQXNzZW1ibHkgdm90ZXMgcGxhbm5lZCB0aGUgbmV4dCBkYXkuIENhbGlmb3JuaWEgcmVxdWlyZXMgYSB0d28tdGhpcmRzIHZvdGUgaW4gYm90aCBob3VzZXMgdG8gcGFzcyBidWRnZXRzLCBhbmQgbmVpdGhlciBwYXJ0eSBob2xkcyBlbm91Z2ggc2VhdHMgdG8gbWVldCB0aGF0IHRocmVzaG9sZC4gICAgICBDYWxpZm9ybmlhLCB3aXRoIHRoZSB3b3JsZOKAmXMgZWlnaHRoLWxhcmdlc3QgZWNvbm9teSwgaXNzdWVkICQyLjYgYmlsbGlvbiBvZiBJT1VzIGxhc3QgeWVhciBhZnRlciBhIHNpbWlsYXIgc3RhbGVtYXRlLiBUaGF0IHdhcyBvbmx5IHRoZSBzZWNvbmQgdGltZSBzaW5jZSB0aGUgR3JlYXQgRGVwcmVzc2lvbiB0aGF0IHRoZSBzdGF0ZSBoYWQgdG8gdXNlIHdhcnJhbnRzIHRvIGNvdmVyIGNvc3RzIGFuZCBjb25zZXJ2ZSBjYXNoLiBGaXRjaCBSYXRpbmdzIGFuZCBNb29keeKAmXMgSW52ZXN0b3JzIFNlcnZpY2UgY3V0IHRoZSBzdGF0ZeKAmXMgY3JlZGl0IHJhdGluZyB3aGVuIHRoZSBJT1VzIGJlZ2FuIGxhc3QgeWVhci4gICAgICBUaGUgc3RhdGXigJlzIGNvbnN0aXR1dGlvbiBzYXlzIGxhd21ha2VycyBtdXN0IHNlbmQgYSBidWRnZXQgdG8gdGhlIGdvdmVybm9yIGJ5IEp1bmUgMTUsIGFib3V0IHR3byB3ZWVrcyBiZWZvcmUgdGhlIHN0YXJ0IG9mIHRoZSBmaXNjYWwgeWVhci4gVGhlIExlZ2lzbGF0dXJlIGhhcyBtZXQgdGhhdCBkZWFkbGluZSBmaXZlIHRpbWVzIGluIHRoZSBsYXN0IDMwIHllYXJzLiBUaGUgZmlzY2FsIDIwMDggYnVkZ2V0IHdhcyBzZW50IHRvIFNjaHdhcnplbmVnZ2VyIG9uIFNlcHQuIDE2IG9mIHRoYXQgeWVhciBhbmQgc2lnbmVkIGludG8gbGF3IG9uIFNlcHQuIDIzLCB0aGUgbGF0ZXN0IHRoZSBzdGF0ZSB3ZW50IHdpdGhvdXQgYSBzcGVuZGluZyBwbGFuIHVudGlsIHRoaXMgeWVhci4gICAgICBJbiBKYW51YXJ5LCBTdGFuZGFyZCAmIFBvb3LigJlzIGN1dCBDYWxpZm9ybmlh4oCZcyBjcmVkaXQgZ3JhZGUgdG8gQS0sIGl0cyBsb3dlc3QgYW1vbmcgVS5TLiBzdGF0ZXMsIGNpdGluZyBmaXNjYWwgaW1iYWxhbmNlcyBhbmQgcmVjdXJyaW5nIGNhc2gtZmxvdyBwcm9ibGVtcy4gUyZQIGhhcyBzYWlkIGl0IG1heSByZWR1Y2UgdGhlIHN0YXRl4oCZcyByYXRpbmcgYWdhaW4gaWYgdGhlIGJ1ZGdldCBjcmlzaXMgd29yc2Vucy4gLS1FZGl0b3JzOiBTdGFjaWUgU2VydmV0YWgsIFN0ZXBoZW4gTWVyZWxtYW4gVG8gY29udGFjdCB0aGUgcmVwb3J0ZXIgb24gdGhpcyBzdG9yeTogTWljaGFlbCBNYXJvaXMgaW4gU2FjcmFtZW50byBhdCBtbWFyb2lzQGJsb29tYmVyZy5uZXQgVG8gY29udGFjdCB0aGUgZWRpdG9yIHJlc3BvbnNpYmxlIGZvciB0aGlzIHN0b3J5OiBNYXJrIFRhbm5lbmJhdW0gYXQgbXRhbm5lbkBibG9vbWJlcmcubmV0</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAASt1nFCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDQxNWZlNTk2MjY5YTk4MDU=</field><field name="symbol" class="java.lang.String">rO0ABXQAA05PUg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAASt6wqyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAg1wo9cKPX</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAg5mZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAgeuFHrhR7</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAg0euFHrhS</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAZXCj1wo9c</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAGbVA==</field><field name="id" class="java.lang.String">rO0ABXQAEGIxOTk1NjRkMjU0N2IxOGQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mK0zAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUzNTk=</field><field name="title" class="java.lang.String">rO0ABXQAP1MmUCA1MDAgQmVhdGluZyBHb2xkIE1vc3QgU2luY2UgMTk5OSBhcyBFYXJuaW5ncyBFc3RpbWF0ZXMgUmlzZQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATZxbIiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGJiN2EzMDQ2ZDZmOWVjZWM=</field><field name="symbol" class="java.lang.String">rO0ABXQAAVA=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATZ2kuSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkvXCj1wo9</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlMzMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAklHrhR64U</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAk8KPXCj1x</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAk8KPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAC1pZA==</field><field name="id" class="java.lang.String">rO0ABXQAEDBjZmU2YzNkZDk1MDllMmU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMl3AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUxNzk=</field><field name="title" class="java.lang.String">rO0ABXQAPUluZGlh4oCZcyBJbnZlc3RtZW50IEdyYWRlIFJhdGluZyBhdCBSaXNrIGFzIFMmUCBDdXRzIE91dGxvb2s=</field><field name="content" class="java.lang.String">rO0ABXQVsuKAnEluZGlh4oCZcyBpbnZlc3RtZW50IGFuZCBlY29ub21pYyBncm93dGggaGF2ZSBzbG93ZWQsIGFuZCBpdHMgY3VycmVudC1hY2NvdW50IGRlZmljaXQgaGFzIHdpZGVuZWQs4oCdIFMmUCBzYWlkIGluIGEgc3RhdGVtZW50IHRvZGF5LCByZWFmZmlybWluZyBpdHMgQkJCLSBsb25nLXRlcm0gSW5kaWEgcmF0aW5nLCB0aGUgbG93ZXN0IGludmVzdG1lbnQgZ3JhZGUuIOKAnFdlIGFyZSByZXZpc2luZyB0aGUgb3V0bG9vayBvbiB0aGUgbG9uZy10ZXJtIHJhdGluZ3Mgb24gSW5kaWEgdG8gbmVnYXRpdmUgdG8gcmVmbGVjdCBhdCBsZWFzdCBhIG9uZS1pbi10aHJlZSBsaWtlbGlob29kIG9mIGEgZG93bmdyYWRlLuKAnSBCb25kcyBmZWxsLCBzdG9ja3MgZGVjbGluZWQgYW5kIHRoZSBydXBlZSBwYXJlZCBnYWlucyBhcyBTJlDigJlzIGRlY2lzaW9uIHVuZGVyc2NvcmVkIHJpc2luZyBjb25jZXJuIHRoYXQgQXNpYeKAmXMgdGhpcmQtIGxhcmdlc3QgZWNvbm9teSB3aWxsIGZhaWwgdG8gc3RlbSBhIGdyb3d0aCBzbG93ZG93biBhbmQgd2lkZW5pbmcgYnVkZ2V0IGFuZCBjdXJyZW50LWFjY291bnQgZGVmaWNpdHMuIFNpbmdo4oCZcyBwdXNoIHRvIGx1cmUgaW52ZXN0bWVudCBoYXMgYmVlbiBodXJ0IGJ5IGNvcnJ1cHRpb24gc2NhbmRhbHMsIGluZmxhdGlvbiBhbmQgcG9saXRpY2FsIG9wcG9zaXRpb24gdG8gc3RlcHMgc3VjaCBhcyBvcGVuaW5nIHRoZSByZXRhaWwgaW5kdXN0cnkgdG8gZm9yZWlnbiBjb21wYW5pZXMuIOKAnFRoaXMganVzdCBsZW5ndGhlbnMgdGhlIHNoYWRvdyB0aGF0IGhhcyBiZWVuIGNhc3Qgb3ZlciB0aGUgSW5kaWEgc3Rvcnks4oCdIHNhaWQgVmlzaG51IFZhcmF0aGFuLCBhbiBlY29ub21pc3QgYXQgTWl6dWhvIENvcnBvcmF0ZSBCYW5rIEx0ZC4gaW4gU2luZ2Fwb3JlLiDigJxJdCByYWlzZXMgdGhlIGJpZyBmZWFyIG9mIGxvc2luZyB0aGUgaW52ZXN0bWVudCBncmFkZSByYXRpbmcsIGFuZCB3aGF0IHRoYXQgbWVhbnMgZm9yIGZpbmFuY2luZyBjb3N0cyBhbmQgdGhlIGVmZm9ydHMgZm9yIGZpc2NhbCBjb25zb2xpZGF0aW9uLuKAnSBCb25kcywgU3RvY2tzIGFuZCBSdXBlZSBUaGUgeWllbGQgb24gdGhlIDguNzkgcGVyY2VudCBub3RlIGR1ZSBOb3ZlbWJlciAyMDIxIHJvc2Ugc2V2ZW4gYmFzaXMgcG9pbnRzLCBvciAwLjA3IHBlcmNlbnRhZ2UgcG9pbnQsIHRvIDguNjQgcGVyY2VudCBhcyBvZiAzOjMyIHAubS4gbG9jYWwgdGltZS4gVGhlIEJTRSBJbmRpYSBTZW5zaXRpdmUgSW5kZXggZGVjbGluZWQgMC4yIHBlcmNlbnQuIFRoZSBydXBlZSBwYXJlZCBlYXJsaWVyIGdhaW5zIGFuZCB3YXMgdXAgMC4zIHBlcmNlbnQgdG8gNTIuNTIgcGVyIGRvbGxhci4gSXQgc2x1bXBlZCAxNiBwZXJjZW50IGxhc3QgeWVhciwgdGhlIG1vc3QgaW4gQXNpYS4gUyZQIHNhaWQgZGltaW5pc2hpbmcgZ3Jvd3RoIHByb3NwZWN0cywgYSBkZXRlcmlvcmF0aW9uIGluIHRyYWRlIHBlcmZvcm1hbmNlIG9yIHNsb3cgcHJvZ3Jlc3Mgb24gZmlzY2FsIHJlZm9ybXMgY291bGQgbGVhZCB0byBhIHJhdGluZ3MgY3V0LiBJdCBleHBlY3RzIHRoZSBnb3Zlcm5tZW50IOKAnHRvIGZhY2UgaGVhZHdpbmQgaW4gaW1wbGVtZW50aW5nIHBvbGljeSBtZWFzdXJlcyB0byBpbXByb3ZlIGl0cyBmaXNjYWwgYW5kIG1hY3JvZWNvbm9taWMgcGFyYW1ldGVycyBpbiB0aGUgbmVhciBmdXR1cmUsIGdpdmVuIHRoZSBjdXJyZW50IHVuZmF2b3JhYmxlIHBvbGl0aWNhbCBlbnZpcm9ubWVudC7igJ0gVGhlcmUgaXMgbm8gbmVlZCB0byBwYW5pYyBmb2xsb3dpbmcgUyZQ4oCZcyBtb3ZlLCBGaW5hbmNlIE1pbmlzdGVyIFByYW5hYiBNdWtoZXJqZWUgc2FpZCBpbiBOZXcgRGVsaGkgdG9kYXksIGFkZGluZyByZWZvcm1zIHdpbGwgYmUgb24gdHJhY2sgYW5kIHRoYXQgaGUgaXMgY29uZmlkZW50IEluZGlh4oCZcyBlY29ub215IHdpbGwgZXhwYW5kIGFib3V0IDcgcGVyY2VudCBpbiB0aGUgZmlzY2FsIHllYXIgdGhyb3VnaCBNYXJjaCAzMSwgMjAxMy4gSW4gbGFzdCBtb250aOKAmXMgYW5udWFsIGJ1ZGdldCwgTXVraGVyamVlIGVzdGltYXRlZCBJbmRpYeKAmXMgZmlzY2FsIGRlZmljaXQgYXQgNS45IHBlcmNlbnQgb2YgZ3Jvc3MgZG9tZXN0aWMgcHJvZHVjdCBpbiAyMDExLSAyMDEyLCB0aGUgd2lkZXN0IGluIHRoZSBzby1jYWxsZWQgQlJJQyBncm91cCBvZiBiaWdnZXN0IGVtZXJnaW5nIG1hcmtldHMgdGhhdCBhbHNvIGluY2x1ZGVzIEJyYXppbCwgUnVzc2lhIGFuZCBDaGluYS4gUmVjb3JkIEJvcnJvd2luZyBIZSBwcm9wb3NlZCBhIGNhcCBvbiBhIHN1YnNpZHkgcHJvZ3JhbSByYW5naW5nIGZyb20gZGllc2VsIHRvIGZlcnRpbGl6ZXJzIGFuZCByYWlzZWQgc2VydmljZSBhbmQgZXhjaXNlIHRheGVzLCBzZWVraW5nIHRvIHBhcmUgdGhlIGdhcCB0byA1LjEgcGVyY2VudCBvZiBHRFAgdGhpcyBmaW5hbmNpYWwgeWVhci4gRnVuZGluZyB0aGUgc2hvcnRmYWxsIHJlcXVpcmVzIHJlY29yZCBib3Jyb3dpbmcgb2YgNS42OSB0cmlsbGlvbiBydXBlZXMgKCQxMDggYmlsbGlvbikgaW4gMjAxMi0yMDEzLCB0aGUgZ292ZXJubWVudCBlc3RpbWF0ZXMuIEZpdGNoIFJhdGluZ3MgYW5kIE1vb2R54oCZcyBJbnZlc3RvcnMgU2VydmljZSBhbHNvIGdyYWRlIEluZGlhIG9uZSBzdGVwIGFib3ZlIHNvLWNhbGxlZCBqdW5rIHN0YXR1cy4gRml0Y2ggeWVzdGVyZGF5IGRlY2xpbmVkIHRvIGNvbW1lbnQgb24gd2hldGhlciBpdCBwbGFucyB0byByZXZpZXcgb3IgcmV2aXNlIEluZGlh4oCZcyByYXRpbmcgYW55dGltZSBzb29uIGFuZCByZWl0ZXJhdGVkIGl0cyBCQkItIGdyYWRlLCB3aXRoIGEgc3RhYmxlIG91dGxvb2ssIG9uIHRoZSBuYXRpb27igJlzIGxvbmctdGVybSBkZWJ0LiBJbmRpYeKAmXMgZWNvbm9taWMgZXhwYW5zaW9uIG1vZGVyYXRlZCB0byA2LjEgcGVyY2VudCBpbiB0aGUgcXVhcnRlciBlbmRlZCBEZWMuIDMxLCB0aGUgc2xvd2VzdCBwYWNlIGluIGFsbW9zdCB0aHJlZSB5ZWFycywgYXMgY29zdGxpZXIgY3JlZGl0IGh1cnQgY29uc3VtZXIgc3BlbmRpbmcgYW5kIGRlbnRlZCBpbnZlc3RtZW50LiBUaGUgc2xvd2Rvd24gc2FwcGVkIHRheCByZWNlaXB0cyBldmVuIGFzIHN1YnNpZGllcyBhbmQgYSBqb2ItIGd1YXJhbnRlZSBwcm9ncmFtIGZvciBydXJhbCB3b3JrZXJzIGZhbm5lZCBzcGVuZGluZy4gUmVzZXJ2ZSBCYW5rIG9mIEluZGlhIEdvdmVybm9yIER1dnZ1cmkgU3ViYmFyYW8gY3V0IHRoZSBiZW5jaG1hcmsgaW50ZXJlc3QgcmF0ZSBieSBhIGdyZWF0ZXItdGhhbi1mb3JlY2FzdCBoYWxmIGEgcGVyY2VudGFnZSBwb2ludCBvbiBBcHJpbCAxNywgdG8gOCBwZXJjZW50LCBzZWVraW5nIHRvIGJvbHN0ZXIgZ3Jvd3RoIHdpdGggdGhlIGZpcnN0IHJlZHVjdGlvbiBzaW5jZSAyMDA5LiBMaW5nZXJpbmcgUHJpY2UgUHJlc3N1cmVzIEF0IHRoZSBzYW1lIHRpbWUsIHRoZSBSZXNlcnZlIEJhbmsgc2lnbmFsZWQgdGhhdCBwcmljZSBwcmVzc3VyZXMgbWlnaHQgbGltaXQgcm9vbSBmb3IgZnVydGhlciBjdXRzLiBJbmRpYeKAmXMgd2hvbGVzYWxlIHByaWNlcyByb3NlIDYuODkgcGVyY2VudCBpbiBNYXJjaCBmcm9tIGEgeWVhciBlYXJsaWVyLCBnaXZpbmcgaXQgdGhlIGZhc3Rlc3QgQlJJQyBpbmZsYXRpb24uIEluZGlhbiBjb21wYW5pZXMgc2Vla2luZyBjcmVkaXQgb3ZlcnNlYXMgbWF5IGZhY2UgaGlnaGVyIGJvcnJvd2luZyBjb3N0cyBhZnRlciBTJlDigJlzIG1vdmUsIHNhaWQgTWFkYW4gU2FibmF2aXMsIGNoaWVmIGVjb25vbWlzdCBhdCBDcmVkaXQgQW5hbHlzaXMgJiBSZXNlYXJjaCBMdGQuIGluIE11bWJhaS4gQXQgdGhlIHNhbWUgdGltZSwgdGhlIG5hdGlvbuKAmXMgbG9uZy10ZXJtIGdyb3d0aCBvdXRsb29rIHNob3VsZCBoZWxwIHVuZGVycGluIGludmVzdG1lbnQgZmxvd3MsIGhlIHNhaWQuIFRoZSBSZXNlcnZlIEJhbmsgcHJlZGljdHMgSW5kaWFuIGVjb25vbWljIGV4cGFuc2lvbiBvZiA3LjMgcGVyY2VudCBpbiAyMDEyLTIwMTMuIFRoZSBjaGFuY2Ugb2YgYSBjdXQgaW4gSW5kaWHigJlzIHNvdmVyZWlnbiByYXRpbmcgaXMgbG93IHBhcnRseSBiZWNhdXNlIGl0cyBlY29ub215IGlzIHNldCB0byByZWJvdW5kIGluIHRoZSBuZWFyIHRlcm0gYW5kIGdpdmVuIHRoYXQgdGhlIGZpc2NhbCBkZWZpY2l0IGlzIHVubGlrZWx5IHRvIHdvcnNlbiBzdWJzdGFudGlhbGx5LCBzYWlkIFNvbmFsIFZhcm1hLCBhbiBlY29ub21pc3QgYXQgTm9tdXJhIEhvbGRpbmdzIEluYy4gaW4gTXVtYmFpLiBTJlAgc2FpZCBpdCBtYXkgY2hhbmdlIEluZGlh4oCZcyBvdXRsb29rIG9yIGNyZWRpdCByYXRpbmdzIGFueXRpbWUgaW4gdGhlIG5leHQgMjQgbW9udGhzLiBUaGUgY29tcGFueSBzYWlkIHRoZSByYXRpbmdzIG1heSBzdGFiaWxpemUgaWYgdGhlIGdvdmVybm1lbnQgdGFrZXMgc3RlcHMgdG8g4oCccmVkdWNlIHN0cnVjdHVyYWwgZmlzY2FsIGRlZmljaXRzIGFuZCB0byBpbXByb3ZlIGl0cyBpbnZlc3RtZW50IGNsaW1hdGUu4oCdIENoYWxsZW5naW5nIFBlcmlvZCBSYXRpbmdzIGNoYW5nZXMgYXJlbuKAmXQgbmVjZXNzYXJpbHkgYWNjb21wYW5pZWQgYnkgY29ycmVzcG9uZGluZyBtb3ZlcyBpbiBib25kIHByaWNlcy4gSW5zdGVhZCBvZiBmYWxsaW5nIGluIHZhbHVlIGFmdGVyIFMmUCBzdHJpcHBlZCB0aGUgVS5TLiBvZiB0aGUgdG9wIEFBQSBzb3ZlcmVpZ24gcmF0aW5nLCBUcmVhc3VyaWVzIHJhbGxpZWQgYW5kIHRoZSBnb3Zlcm5tZW504oCZcyBib3Jyb3dpbmcgY29zdHMgZmVsbCB0byByZWNvcmQgbG93cy4gU2luZ2jigJlzIGFkbWluaXN0cmF0aW9uIGlzIGZhY2luZyBvbmUgb2YgdGhlIG1vc3QgY2hhbGxlbmdpbmcgcGVyaW9kcyBzaW5jZSB0YWtpbmcgb2ZmaWNlIGluIDIwMDQuIEFtb25nIHRoZSBzZXRiYWNrcyB3YXMgdGhlIHN1c3BlbnNpb24gaW4gRGVjZW1iZXIgb2YgcGxhbnMgdG8gb3BlbiBJbmRpYeKAmXMgcmV0YWlsIGluZHVzdHJ5IHRvIGZvcmVpZ24gY29tcGFuaWVzIHN1Y2ggYXMgV2FsLU1hcnQgU3RvcmVzIEluYy4gVHJhZGUgb3JnYW5pemF0aW9ucyBoYXZlIGFsc28gc2FpZCB0aGF0IGJ1c2luZXNzZXMgYXJvdW5kIHRoZSB3b3JsZCBhcmUgcmUtZXZhbHVhdGluZyBpbnZlc3RtZW50cyBpbiBJbmRpYSBiZWNhdXNlIG9mIHVuY2VydGFpbnR5IG92ZXIgdGhlIG5hdGlvbuKAmXMgdGF4IGxhd3MgZm9sbG93aW5nIGNoYW5nZXMgcHJvcG9zZWQgaW4gdGhlIE1hcmNoIDE2IGJ1ZGdldC4gVG9kYXnigJlzIGFjdGlvbiBieSBTJlAg4oCcaXMgYSBuZWdhdGl2ZSBtb3ZlIGFuZCBmdXJ0aGVyIHNvbGlkaWZpZXMgdGhlIG1hY3JvZWNvbm9taWMgcmlza3MgSW5kaWEgaXMgZmFjaW5nLOKAnSBzYWlkIFJhamVldiBNYWxpaywgc2VuaW9yIGVjb25vbWlzdCBhdCBDTFNBIEFzaWEtUGFjaWZpYyBNYXJrZXRzIGluIFNpbmdhcG9yZS4g4oCcQ29taW5nIGZyb20gdGhlIG1vc3QgY29uc2VydmF0aXZlIG9mIHRoZSByYXRpbmcgYWdlbmNpZXMsIGl04oCZcyBhIHdha2UtdXAgY2FsbCBmb3IgdGhlIGdvdmVybm1lbnQgdG8gZG8gc29tZXRoaW5nIG1lYW5pbmdmdWwgc29vbi7igJ0=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATbn3syAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDZhMmNjMDRiMGJhZmY0NGU=</field><field name="symbol" class="java.lang.String">rO0ABXQABENBU1Q=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATbtBSiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAQ9cKPXCj2</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAQ9cKPXCj2</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAQ9cKPXCj2</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAQ9cKPXCj2</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAQ9cKPXCj2</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDRiZjFiMTNjNzIwNGEwNzE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMQAAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDIxOTQ=</field><field name="title" class="java.lang.String">rO0ABXQAMFRyZWFzdXJ5IEF1Y3Rpb24gQmlkZGluZyBTaHJpdmVscyBhcyBZaWVsZHMgUmlzZQ==</field><field name="content" class="java.lang.String">rO0ABXQVlUEgbWVhc3VyZSBvZiBkZW1hbmQgYXQgdGhlIFUuUy4gVHJlYXN1cnkgRGVwYXJ0bWVudOKAmXMgZGVidCBhdWN0aW9ucyBoYXMgZmFsbGVuIHRoaXMgeWVhciB0byB0aGUgbG93ZXN0IGxldmVsIHNpbmNlIDIwMDkgYXMgYSBkcm9wIGluIGJvbmQgcHJpY2VzIGdlbmVyYXRlcyB0aGUgYmlnZ2VzdCBsb3NzZXMgb24gZ292ZXJubWVudCBzZWN1cml0aWVzIGluIGZvdXIgeWVhcnMuIEludmVzdG9ycyBiaWQgJDIuOTQgZm9yIGVhY2ggJDEgb2YgdGhlICQxLjA3NyBiaWxsaW9uIG9mIG5vdGVzIGFuZCBib25kcyBzb2xkIGJ5IHRoZSBUcmVhc3VyeSB0aGlzIHllYXIsIGNvbXBhcmVkIHdpdGggYSByZWNvcmQgaGlnaCAkMy4xNSBvZiBiaWRzIGxhc3QgeWVhci4gSXTigJlzIHRoZSBmaXJzdCBkZWNsaW5lIGluIGRlbWFuZCBhdCB0aGUgYXVjdGlvbnMgc2luY2UgMjAwOCwgd2hlbiB0aGUgVS5TLiBnb3Zlcm5tZW50IGluY3JlYXNlZCBub3RlIGFuZCBib25kIG9mZmVyaW5ncyA1OSBwZXJjZW50IHRvICQ5MjIgYmlsbGlvbiBhcyB0aGUgcmVjZXNzaW9uIGFuZCB0aGUgZmluYW5jaWFsIGNyaXNpcyBkZWVwZW5lZC4gRGltaW5pc2hlZCBhcHBldGl0ZSBmb3IgVHJlYXN1cmllcyBjb21lcyBhcyBpbXByb3ZpbmcgZWNvbm9taWMgZGF0YSBoYXMgbGVkIHRvIHNwZWN1bGF0aW9uIHRoZSBGZWRlcmFsIFJlc2VydmUgbWF5IHJlZHVjZSB0aGUgcGFjZSBvZiBpdHMgYm9uZCBwdXJjaGFzZXMuIEludmVzdG9ycyBzZWFyY2hpbmcgZm9yIHlpZWxkIGFtaWQgY29uY2VybiB0aGUgMzAteWVhciBidWxsIG1hcmtldCBmb3IgYm9uZHMgaGFzIGVuZGVkIGluZGljYXRlIHRoZSBVLlMuIGdvdmVybm1lbnQgc2hvdWxkIGFudGljaXBhdGUgZmV3ZXIgb3JkZXJzIGZvciBpdHMgZGVidC4g4oCcRGVtYW5kIGlzIHNvbWV3aGF0IG1vcmUgcXVlc3Rpb25hYmxlIGZvciBUcmVhc3VyaWVzIGF0IHRoaXMgcG9pbnQs4oCdIHNhaWQgSXJhIEplcnNleSwgYW4gaW50ZXJlc3QtcmF0ZSBzdHJhdGVnaXN0IGF0IENyZWRpdCBTdWlzc2UgR3JvdXAgQUcgaW4gTmV3IFlvcmssIG9uZSBvZiAyMSBwcmltYXJ5IGRlYWxlcnMgdGhhdCBhcmUgb2JsaWdhdGVkIHRvIGJpZCBhdCBVLlMuIGdvdmVybm1lbnQgZGVidCBvZmZlcmluZ3MuIOKAnFRoZSBwcm94aW1hdGUgY2F1c2UgaXMgdGhlIGlkZWEgdGhhdCB0aGUgRmVkZXJhbCBSZXNlcnZlIHdvbuKAmXQgYmUgYXMgaW52b2x2ZWQgaW4gdGhlIG1hcmtldCBnb2luZyBmb3J3YXJkIGFuZCBwdWxsZWQgZm9yd2FyZCB0aGVpciBndWlkYW5jZSBmb3Igd2hlbiB0aGV54oCZbGwgYmUgbmV1dHJhbCBvbiBtb25ldGFyeSBwb2xpY3ku4oCdICAgICAgICAgICAgICAgICAgICAgICAgICAgRGVtYW5kIERyb3AgVHJlYXN1cnkgc29sZCAkMjkgYmlsbGlvbiBvZiBzZXZlbi15ZWFyIG5vdGVzIFRodXJzZGF5LCBkcmF3aW5nIGJpZHMgb2YgJDIuNjEgZm9yICQxIG9mZmVyZWQsIGNvbXBhcmVkIHdpdGggYW4gYXZlcmFnZSBvZiAkMi42NyBhdCB0aGUgcHJldmlvdXMgMTAgc2FsZXMuIERlbWFuZCBhdCBhbGwgVS5TLiBub3RlIGFuZCBib25kIGF1Y3Rpb25zIGhhcyBkZWNsaW5lZCBmb3IgZml2ZSBjb25zZWN1dGl2ZSBtb250aHMgc3RhcnRpbmcgaW4gSmFudWFyeSwgd2hlbiBpbnZlc3RvcnMgYmlkIDMuMTEgdGltZXMgdGhlIGFtb3VudCBvZiBUcmVhc3VyaWVzIHNvbGQsIGZhbGxpbmcgdG8gMi43IHRpbWVzIGluIEp1bmUsIHRoZSBsb3dlc3QgcmF0aW8gc2luY2UgQXVndXN0IDIwMDksIGFjY29yZGluZyB0byBkYXRhIHJlbGVhc2VkIGJ5IHRoZSBUcmVhc3VyeSBhbmQgY29tcGlsZWQgYnkgQmxvb21iZXJnLiBUaGUgMTAteWVhciBub3RlIHlpZWxkIGhhcyBjbGltYmVkIDcxIGJhc2lzIHBvaW50cyB0aGlzIHllYXIsIG9yIDAuNzEgcGVyY2VudGFnZSBwb2ludCwgdG8gMi40NyBwZXJjZW50LCBhY2NvcmRpbmcgdG8gQmxvb21iZXJnIEJvbmQgVHJhZGVyIHByaWNlcy4gSXQgcmVhY2hlZCAyLjY2IHBlcmNlbnQgb24gSnVuZSAyNCwgdGhlIGhpZ2hlc3Qgc2luY2UgQXVndXN0IDIwMTEuIFRyZWFzdXJpZXMgbG9zdCAyIHBlcmNlbnQgaW4gTWF5LCB0aGVpciB3b3JzdCBtb250aGx5IHBlcmZvcm1hbmNlIHNpbmNlIERlY2VtYmVyIDIwMDksIGFjY29yZGluZyB0byBCYW5rIG9mIEFtZXJpY2EgTWVycmlsbCBMeW5jaOKAmXMgVS5TLiBUcmVhc3VyeSBJbmRleC4gVGhleSBoYXZlIHBsdW5nZWQgMi44IHBlcmNlbnQgaW4gMjAxMywgdGhlIGJpZ2dlc3QgeWVhci0gdG8tZGF0ZSBsb3NzZXMgdG8gdGhpcyBwb2ludCBzaW5jZSAyMDA5LCB3aGVuIHRoZXkgZHJvcHBlZCA0LjUgcGVyY2VudCB0aHJvdWdoIEp1bmUuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNb3ZlIEF3YXkg4oCcVGhlcmUgaXMgdGhpcyBxdWVzdCBmb3IgeWllbGQsIGFuZCBwZW9wbGUgYXJlIGdvaW5nIHRvIG1pZ3JhdGXigJ0gYXdheSBmcm9tIFRyZWFzdXJpZXMsIHNhaWQgUmljaGFyZCBTY2hsYW5nZXIsIHdobyBoZWxwcyBpbnZlc3QgJDIwIGJpbGxpb24gaW4gZml4ZWQtaW5jb21lIHNlY3VyaXRpZXMgYXMgdmljZSBwcmVzaWRlbnQgYXQgUGlvbmVlciBJbnZlc3RtZW50cyBpbiBCb3N0b24uIFBpb25lZXIgaGFzIGJlZW4gdW5kZXJ3ZWlnaHQgVHJlYXN1cmllcyBpbiAyMDEzIGFuZCBpcyBpbnZlc3RpbmcgaW4gc2hvcnQtdGVybSBmbG9hdGluZy1yYXRlIG5vdGVzIGFuZCBub24tYWdlbmN5IG1vcnRnYWdlLWJhY2tlZCBzZWN1cml0aWVzLCBTY2hsYW5nZXIgc2FpZC4gVGhlIDEwLXllYXIgeWllbGQgd2lsbCBsaWtlbHkgZW5kIHRoZSB5ZWFyIHlpZWxkaW5nIGJldHdlZW4gMi41IHBlcmNlbnQgYW5kIDMgcGVyY2VudCwgaGUgc2FpZC4gVGhlIGxhc3QgdGhyZWUgdGltZXMgVHJlYXN1cmllcyBzdWZmZXJlZCBhbiBhbm51YWwgbG9zcyB3ZXJlIDIwMDksIDE5OTkgYW5kIDE5OTQsIGFjY29yZGluZyB0byBCYW5rIG9mIEFtZXJpY2EgaW5kZXggZGF0YS4gSW4gMjAwOSwgeWllbGRzIHJvc2UgZm9sbG93aW5nIGEgJDc4NyBiaWxsaW9uIGZpc2NhbCBzdGltdWx1cyBwbGFuIHByb3Bvc2VkIGJ5IFByZXNpZGVudCBCYXJhY2sgT2JhbWEgYW5kICQxLjc1IHRyaWxsaW9uIG9mIG1vbmV0YXJ5IGFjY29tbW9kYXRpb24gYW5ub3VuY2VkIGJ5IHRoZSBGZWQgaW4gcmVzcG9uc2UgdG8gcHJvYmxlbXMgY2F1c2VkIGJ5IHRoZSB3b3JzdCBmaW5hbmNpYWwgY3Jpc2lzIHNpbmNlIHRoZSBHcmVhdCBEZXByZXNzaW9uLiBZaWVsZHMgY2xpbWJlZCBpbiAxOTk5IGFzIHRoZSBpbXBhY3Qgb2YgdGhlIGNvbGxhcHNlIG9mIExvbmctVGVybSBDYXBpdGFsIE1hbmFnZW1lbnQgTExDIHVud291bmQuIEluIDE5OTQsIHRoZSBGZWQgc3VycHJpc2VkIHRoZSBtYXJrZXQgYnkgcmFpc2luZyBpdHMgYmVuY2htYXJrIG92ZXJuaWdodCBib3Jyb3dpbmcgcmF0ZSB0byA1LjUgcGVyY2VudCBhdCB5ZWFyIGVuZCBmcm9tIDMgcGVyY2VudCBhdCB0aGUgc3RhcnQgb2YgdGhlIHllYXIuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBGZWQgVmlldyBJbiByZXNwb25zZSB0byBxdWVzdGlvbnMgTWF5IDIyIGluIHRlc3RpbW9ueSB0byBDb25ncmVzcywgRmVkIENoYWlybWFuIEJlbiBTLiBCZXJuYW5rZSBpbmRpY2F0ZWQgdGhlIGNlbnRyYWwgYmFuayBoYWQgZ2l2ZW4gdGhvdWdodCB0byByZWR1Y2luZyBpdHMgc3RpbXVsdXMgYXQgc29tZSBwb2ludC4g4oCcSWYgdGhlIGluY29taW5nIGRhdGEgYXJlIGJyb2FkbHkgY29uc2lzdGVudCB3aXRoIHRoaXMgZm9yZWNhc3QsIHRoZSBjb21taXR0ZWUgY3VycmVudGx5IGFudGljaXBhdGVzIHRoYXQgaXQgd291bGQgYmUgYXBwcm9wcmlhdGUgdG8gbW9kZXJhdGUgdGhlIG1vbnRobHkgcGFjZSBvZiBwdXJjaGFzZXMgbGF0ZXIgdGhpcyB5ZWFyLOKAnSBCZXJuYW5rZSBzYWlkIEp1bmUgMTksIHJlZmVycmluZyB0byB0aGUgRmVk4oCZcyBvdXRsb29rIGZvciDigJxtb2RlcmF0ZeKAnSBlY29ub21pYyBncm93dGgsIGZ1cnRoZXIgbGFib3ItbWFya2V0IGdhaW5zIGFuZCBpbmZsYXRpb24gYWNjZWxlcmF0aW5nIHRvd2FyZCB0aGUgRmVk4oCZcyAyIHBlcmNlbnQgZ29hbC4gVGhlIGVjb25vbXkgaGFzIGFkZGVkIGFuIGF2ZXJhZ2Ugb2YgMTg5LDAwMCBqb2JzIGVhY2ggbW9udGggdGhyb3VnaCBNYXksIHRoZSBmYXN0ZXN0IHBhY2Ugc2luY2UgMjAwNSB3aGVuIGl0IGNyZWF0ZWQgMjA3LDAwMCBwZXIgbW9udGgsIExhYm9yIERlcGFydG1lbnQgZGF0YSBzaG93LiBUaGUgdW5lbXBsb3ltZW50IHJhdGUgZmVsbCB0byA3LjYgcGVyY2VudCBpbiBNYXksIGZyb20gOC4xIHBlcmNlbnQgaW4gQXVndXN0LiDigJxUaGUgZGF0YSBjb21pbmcgb3V0IGlzIGp1c3QgcmVhbGx5IGdvb2Qgb24gdGhlIGVjb25vbXkgYW5kIHRoYXQga2VlcHMgcHV0dGluZyBtb3JlIHByZXNzdXJlIG9uIGV2ZXJ5Ym9keSzigJ0gc2FpZCBNaWNoYWVsIEZyYW56ZXNlLCBzZW5pb3IgdmljZSBwcmVzaWRlbnQgb2YgZml4ZWQtaW5jb21lIHRyYWRpbmcgYXQgRUQmRiBNYW4gQ2FwaXRhbCBNYXJrZXRzIGluIE5ldyBZb3JrLiDigJxFdmVyeSBwaWVjZSBvZiBwb3NpdGl2ZSBkYXRhIHRoYXQgY29tZXMgb3V0IHdpbGwgdHJpY2tsZSBpbnRvIHRoZSBlbXBsb3ltZW50IHJhdGUgYW5kIHRodXMgdGhlIEZlZCBpcyBjb3JyZWN0IGluIGl0cyBhc3Nlc3NtZW50IHRoYXQgd2Ugc2hvdWxkIHN0YXJ0IHRoZSB0YXBlcmluZy7igJ0gICAgICAgICAgICAgICAgICAgICAgICAgICBEZWJ0IFNlcnZpY2UgVG90YWwgbWFya2V0YWJsZSBVLlMuIGdvdmVybm1lbnQgZGVidCBoYXMgZ3Jvd24gdG8gJDExLjQgdHJpbGxpb24gaW4gTWF5IGZyb20gJDQuNCB0cmlsbGlvbiBpbiBKdWx5IDIwMDcgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgZmluYW5jaWFsIGNyaXNpcywgVHJlYXN1cnkgZGF0YSBzaG93LiBPdXRzdGFuZGluZyBkZWJ0IGRlY2xpbmVkIGluIE1heSBieSAkMTkuNCBiaWxsaW9uLCB0aGUgZmlyc3QgbW9udGhseSByZWR1Y3Rpb24gc2luY2UgU2VwdGVtYmVyIDIwMTIuIFRoZSBVLlMuIGJ1ZGdldCBkZWZpY2l0IHdpbGwgc2hyaW5rIHRoaXMgZmlzY2FsIHllYXIgdG8gJDY0MiBiaWxsaW9uLCB0aGUgc21hbGxlc3Qgc2hvcnRmYWxsIGluIGZpdmUgeWVhcnMsIHRoZSBub25wYXJ0aXNhbiBDb25ncmVzc2lvbmFsIEJ1ZGdldCBPZmZpY2Ugc2FpZCBpbiBhIE1heSAxNCByZXBvcnQuIFRoZSBkZWZpY2l0IHdpbGwgY29udHJhY3QgdG8gNCBwZXJjZW50IG9mIGdyb3NzIGRvbWVzdGljIHByb2R1Y3QsIGZyb20gMTAuMSBwZXJjZW50IGluIGZpc2NhbCAyMDA5LiBUaGUgQ0JPIHJlZHVjZWQgaXRzIGVzdGltYXRlIG9mIHRoZSBsaWtlbHkgc2hvcnRmYWxsLCBjaXRpbmcgc3Ryb25nZXItdGhhbi1leHBlY3RlZCB0YXggcmVjZWlwdHMuIEluIEZlYnJ1YXJ5LCBpdCBoYWQgcHJvamVjdGVkIGEgJDg0NSBiaWxsaW9uIGRlZmljaXQgZm9yIHRoZSAyMDEzIGZpc2NhbCB5ZWFyLCB3aGljaCBlbmRzIFNlcHQuIDMwLiBMYXN0IHllYXLigJlzIGRlZmljaXQgd2FzICQxLjEgdHJpbGxpb24u</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT+EAJyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDAwMzRhMmEyYzE3MDMwMTY=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0VELVVOLlY=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT+JJviAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/DMzMzMzMz</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/DMzMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/DMzMzMzMz</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/DMzMzMzMz</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAFwo9cKPXD</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDU4ZGVhYzkxZTI1NDg1NDc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEhiAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE1NDM1</field><field name="title" class="java.lang.String">rO0ABXQAO0Nhc2ggUGlsZXMgVXAgYXMgQ0VPcyBQbGF5IGl0IFNhZmUgV2l0aCBTbG93LUdyb3d0aCBFY29ub215</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT7PwgiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDdiNzdkNGUxMWNjZTBjZWY=</field><field name="symbol" class="java.lang.String">rO0ABXQABFZUSFI=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT7U6GSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBS7rhR64Uf</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBS71wo9cKP</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBS64UeuFHs</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBS64UeuFHs</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSYKPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAFFA==</field><field name="id" class="java.lang.String">rO0ABXQAEDUyOWIwNDE0NjU5Yzc4NGI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE7KAAAA==</field></document></documents><date>2015-05-07T06:32:30-0500</date></cacheEntry>
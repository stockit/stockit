<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hGcm9tIHRoZSBkYXkgaXQgb3BlbmVkIGxlc3MgdGhhbiBhIHllYXIgYWdvIFJldmVsIGRlY2lkZWQgdG8gYnJlYWsgdGhlIHJ1bGVzIFRoZSBuZXdlc3QgY2FzaW5vIGluIEF0bGFudGljIENpdHkgYmFubmVkIHNtb2tpbmcgZGlkbnQgb2ZmZXIgYSBidWZmZXQgdHVybmVkIGl0cyBiYWNrIG9uIGJ1c3JpZGluZyBkYXkgdHJpcHBlcnMgYW5kIGZvY3VzZWQgb24gdGhlIHVwc2NhbGUgbGVpc3VyZSB0cmF2ZWxlciBtb3JlIHRoYW4gdGhlIHNsb3RwbGF5aW5nIHNlbmlvciBjaXRpemVuIEJ1dCBNb25kYXkgdGhlIDI0IGJpbGxpb24gcmVzb3J0IGZvdW5kIGl0IGNvdWxkIG5vdCBicmVhayB0aGUgbGF3IG9mIHN1cHBseSBhbmQgZGVtYW5kIGFzIGl0IGZpbGVkIGZvciBDaGFwdGVyIDExIGJhbmtydXB0Y3kgcHJvdGVjdGlvbiBpbiBVUyBCYW5rcnVwdGN5IENvdXJ0IGluIENhbWRlbiBEcmFnZ2VkIGRvd24gYnkgYSBjb21iaW5hdGlvbiBvZiBiYWQgdGltaW5nIEl0IHN0YXJ0ZWQgY29uc3RydWN0aW9uIGp1c3QgYmVmb3JlIHRoZSBVUyBlY29ub215IGNyYXRlcmVkIGFuZCB3YXMgdG9vIGZhciBhbG9uZyB0byBzY3JhcCB3aGVuIHRoaW5ncyB3ZXJlIGF0IHRoZWlyIHdvcnN0IGFuZCBidXNpbmVzcyBkZWNpc2lvbnMgdGhhdCBmbGV3IGluIHRoZSBmYWNlIG9mIHdoYXQgaGFkIHByZXZpb3VzbHkgd29ya2VkIHdoZW4gdGhpbmdzIHdlcmUgZ29pbmcgd2VsbCBmb3IgQXRsYW50aWMgQ2l0eSB0aGUgY2FzaW5vaG90ZWwgdGhhdCB3YXMgdmlld2VkIGFzIHRoZSByZXNvcnRzIGJlc3QgaG9wZSBmaW5kcyBpdHNlbGYgaW4gdGhlIHNhbWUgcGxhY2UgdGhhdCBtYW55IG9mIHRoZSBjaXR5cyBvdGhlciBjYXNpbm9zIGhhdmUgYmVlbiBvciBoYXZlIGJhcmVseSBlc2NhcGVkIEluIGZpbGluZ3Mgd2l0aCBzZWN1cml0aWVzIHJlZ3VsYXRvcnMgbGFzdCB3ZWVrIFJldmVsIHNhaWQgaXQgd2FzIHdvcnRoIG5vIG1vcmUgdGhhbiA0NTAgbWlsbGlvbiBhbmQgaXQgY291bGQgdGFrZSBmb3VyIHllYXJzIHRvIGJlY29tZSBmdWxseSBwcm9maXRhYmxlIEEgbWFqb3JpdHkgb2YgUmV2ZWxzIGxlbmRlcnMgaGFzIGFscmVhZHkgc2lnbmVkIG9mZiBvbiB0aGUgc29jYWxsZWQgcHJlcGFja2FnZWQgYmFua3J1cHRjeSB3aGljaCB0aGUgY29tcGFueSBob3BlcyB0byBzcGVlZCB0aHJvdWdoIGJhbmtydXB0Y3kgY291cnQgZW1lcmdpbmcgYnkgZWFybHkgc3VtbWVyIEl0IHBsYW5zIHRvIGNvbnRpbnVlIG5vcm1hbCBvcGVyYXRpb25zIHBheWluZyBlbXBsb3llZXMgYW5kIHZlbmRvcnMgYW5kIHByZWRpY3RzIGd1ZXN0cyB3aWxsIG5vdCBub3RpY2UgYW55dGhpbmcgZGlmZmVyZW50IEJhY2tlZCBieSBvdmVyd2hlbG1pbmcgbGVuZGVyIHN1cHBvcnQgd2UgcmVtYWluIG9uIHRyYWNrIHRvIGNvbXBsZXRlIG91ciBmaW5hbmNpYWwgcmVzdHJ1Y3R1cmluZyBhaGVhZCBvZiB0aGUgY3JpdGljYWwgc3VtbWVyIHNlYXNvbiBzYWlkIEplZmZyZXkgSGFydG1hbm4gUmV2ZWxzIGludGVyaW0gQ0VPIFdlIHdpbGwgZW1lcmdlIGZyb20gdGhpcyByZWNhcGl0YWxpemF0aW9uIHBvc2l0aW9uZWQgZm9yIGxvbmd0ZXJtIHN1Y2Nlc3Mgd2l0aCB0aGUgZmluYW5jaWFsIGNhcGFjaXR5IHRvIHB1cnN1ZSBvdXIgYW1lbml0eSBlbmhhbmNlbWVudCBvcHBvcnR1bml0aWVzIGFuZCB0aGUgYWJpbGl0eSB0byBjb250aW51ZSBwcm92aWRpbmcgb3VyIGd1ZXN0cyB3aXRoIGEgc2lnbmF0dXJlIFJldmVsIGV4cGVyaWVuY2UgVGhlIGRlYWwgd2lsbCB3aXBlIG91dCA4MiBwZXJjZW50IG9mIFJldmVscyAxNSBiaWxsaW9uIGluIGRlYnQgYnkgY29udmVydGluZyBpdCBpbnRvIGVxdWl0eSBmb3IgbGVuZGVycyBUaGF0IHdpbGwgbGVhdmUgdGhlIGNvbXBhbnkgUmV2ZWwgQUMgd2l0aCBhIG11Y2ggbW9yZSBtYW5hZ2VhYmxlIDI3MiBtaWxsaW9uIGluIGRlYnQgU29tZSBvZiBpdHMgbGVuZGVycyB3aWxsIHByb3ZpZGUgMjUwIG1pbGxpb24gaW4gZGVidG9yaW5wb3NzZXNzaW9uIGZpbmFuY2luZyBhcHByb3hpbWF0ZWx5IDQyIG1pbGxpb24gb2Ygd2hpY2ggY29uc3RpdHV0ZXMgbmV3IG1vbmV5IGNvbW1pdG1lbnRzIEluIGFkZGl0aW9uIFJldmVscyBsZW5kZXJzIGhhdmUgY29tbWl0dGVkIDMzNSBtaWxsaW9uIGluIGV4aXQgZmluYW5jaW5nIHdoaWNoIGNvbnNpc3RzIG9mIGEgNzUgbWlsbGlvbiByZXZvbHZlciBhbmQgMjYwIG1pbGxpb24gdGVybSBsb2FuIFRoZSBwcm9jZWVkcyBvZiB0aGUgZXhpdCBmaW5hbmNpbmcgd2lsbCBiZSB1c2VkIHRvIHByb3ZpZGUgUmV2ZWwgd2l0aCBhZGRpdGlvbmFsIHdvcmtpbmcgY2FwaXRhbCBwYXkgZm9yIHNvbWUgY2FwaXRhbCBleHBlbmRpdHVyZXMgcmVwYXkgdGhlIGRlYnRvcmlucG9zc2Vzc2lvbiBmaW5hbmNpbmcgYW5kIHBheSBleHBlbnNlcyByZWxhdGVkIHRvIHRoZSByZXN0cnVjdHVyaW5nIHdoZW4gUmV2ZWwgZW1lcmdlcyBmcm9tIGJhbmtydXB0Y3kgY291cnQgdGhlIGNvbXBhbnkgc2FpZCBSZXZlbCBvcGVuZWQgQXByaWwgMiB3aXRoIHNreWhpZ2ggaG9wZXMgYW5kIHRoZSBleHBlY3RhdGlvbiBvZiBtYW55IGluIHdoYXQgd2FzIHRoZW4gdGhlIG5hdGlvbnMgc2Vjb25kbGFyZ2VzdCBnYW1ibGluZyBtYXJrZXQgdGhhdCBpdCBjb3VsZCBoZWxwIHR1cm4gYXJvdW5kIEF0bGFudGljIENpdHlzIHNhZ2dpbmcgZm9ydHVuZXMgQnV0IFJldmVsIGhhcyBsYWdnZWQgbmVhciB0aGUgYm90dG9tIG9mIHRoZSBjaXR5cyAxMiBjYXNpbm9zIGluIHRlcm1zIG9mIGdhbWJsaW5nIHJldmVudWUgYW5kIEF0bGFudGljIENpdHkgaGFzIHNpbmNlIGxvc3QgaXRzIHBvc2l0aW9uIGFzIHRoZSBuYXRpb25zIE5vIDIgbWFya2V0IHRvIFBlbm5zeWx2YW5pYSBTdGV2ZSBOb3J0b24gYSBjYXNpbm8gYW5hbHlzdCB3aG8gd2FzIHZpY2UgcHJlc2lkZW50IG9mIFJlc29ydHMgd2hlbiBpdCBvcGVuZWQgYXMgdGhlIGZpcnN0IFVTIGNhc2lubyBvdXRzaWRlIE5ldmFkYSBpbiAxOTc4IHNhaWQgUmV2ZWwgaGFzIHRvIHJlY29uc2lkZXIgaXRzIG5vc21va2luZyBwb2xpY3kgYW5kIHJlb3JpZW50IGl0cyBtYXJrZXRpbmcgbW9yZSB0byBjYXNpbm8gcGxheWVycyBpbnN0ZWFkIG9mIGNvbnZlbnRpb25lZXJzIEl0IGFsc28gaXMgaHVydCBieSBiZWluZyBhIHN0YW5kYWxvbmUgcHJvcGVydHkgdW5hZmZpbGlhdGVkIHdpdGggYSBsYXJnZXIgcGFyZW50IGNvbXBhbnkgd2l0aCBhbiBleHRlbnNpdmUgbXVsdGlzdGF0ZSBkYXRhYmFzZSBvZiBjdXN0b21lcnMgZnJvbSB3aGljaCB0byBkcmF3IE5vcnRvbiBzYWlkIEFuZCBoZSBhbHNvIHNhaWQgUmV2ZWwgbmVlZHMgdG8gZ2V0IHJlYWwgd2hlbiBpdCBjb21lcyB0byBmb29kIGFuZCBob3RlbCByb29tIHByaWNlcyB3aGljaCBhcmUgaGlnaGVyIHRoYW4gdGhvc2Ugb2YgbW9zdCBvZiBpdHMgY29tcGV0aXRpb24gSW5kZWVkIGp1c3QgYSBmZXcgaG91cnMgYmVmb3JlIGZpbGluZyB0aGUgYmFua3J1cHRjeSBwZXRpdGlvbiBNb25kYXkgUmV2ZWwgc2VudCBvdXQgYSBtYXJrZXRpbmcgZW1haWwgb2ZmZXJpbmcgaG90ZWwgcm9vbXMgc3RhcnRpbmcgYXQgMTI5IGEgbmlnaHQgZHVyaW5nIHRoZSB3ZWVrIG1vcmUgaW4gbGluZSB3aXRoIGl0cyBsb3dlcmNvc3QgY29tcGV0aXRvcnMgV2hpbGUgdGhpcyB3b3VsZCBub3QgYmUgYSBwcm9ibGVtIGZvciB0aGUgY29udmVudGlvbiB0cmFkZXMgd2hlcmUgdGhlIGF0dGVuZGVlIGlzIG9uIGFuIGV4cGVuc2UgYWNjb3VudCBpdCBjYW4gYmUgYSBiaWcgbmVnYXRpdmUgZm9yIHRoZSBmcmVxdWVudCBpbmRlcGVuZGVudCB0cmF2ZWxlciBvdmVybmlnaHQgZ3Vlc3QgYW5kIHRoZSBkYXkgdHJpcHBlciB0aGF0IHByb3ZpZGVzIG11Y2ggb2YgQXRsYW50aWMgQ2l0eXMgY3VzdG9tZXIgYmFzZSBOb3J0b24gc2FpZCBSZXZlbCBkb2VzbnQgaGF2ZSB0aGUgbGV2ZWwgb2YgbG93IHByaWNlZCBmb29kIG9wdGlvbnMgbGlrZSBldmVyeSBvdGhlciBBdGxhbnRpYyBDaXR5IGNhc2lubyBOb3J0b24gc2FpZCBSZXZlbCB3YXMgaHVydCBieSBtYW55IGZhY3RvcnMgaW5jbHVkaW5nIHRoZSBkZWNpc2lvbiBub3QgdG8gYnVpbGQgYSBzZWNvbmQgaG90ZWwgdG93ZXIgd2hlbiB0aGUgcHJvamVjdCByYW4gb3V0IG9mIG1vbmV5IGhhbGZ3YXkgdGhyb3VnaCBjb25zdHJ1Y3Rpb24gSGUgYWxzbyBzcGVjaWZpY2FsbHkgYWJzb2x2ZWQgZm9ybWVyIENFTyBLZXZpbiBEZVNhbmN0aXMgb2YgcmVzcG9uc2liaWxpdHkgZm9yIGl0cyBwcm9ibGVtcyBEZVNhbmN0aXMgaXMgc3RheWluZyB3aXRoIGEgY29ycG9yYXRlIGFmZmlsaWF0ZSB0byB3b3JrIG9uIGFtZW5pdHkgcHJvamVjdHMgZm9yIHRoZSByZXNvcnQgVGhlIHN1YnN0YW50aWFsIGNvbnN0cnVjdGlvbiBjb3N0IG9mIFJldmVsIHRoZSBsb3NzIG9mIDE5MDAgb2YgdGhlaXIgcm9vbXMgdGhlIGdlbmVyYWwgY29sbGFwc2Ugb2YgdGhlIGVjb25vbXkgdGhlIFVTIHVuZW1wbG95bWVudCBwcm9ibGVtIGFuZCBuZXcgZ2FtaW5nIG9wdGlvbnMgaW4gUGVubnN5bHZhbmlhIGFuZCBOZXcgWW9yayAgIGFsbCBjYXVzaW5nIGEgNDAgcGVyY2VudCBkZWNsaW5lIGluIGNhc2lubyByZXZlbnVlcyAgIGFyZSB0aGUgcHJpbWFyeSByZWFzb25zIGZvciBSZXZlbHMgZmFpbHVyZSBub3QgS2V2aW4gRGVTYW5jdGlzIE5vcnRvbiBzYWlkIEFuZCB3aXRob3V0IGhpbSB0aGUgcHJvcGVydHkgd291bGQgc3RpbGwgYmUgYW4gZW1wdHkgc2hlbGwgbGlrZSBCb3lkcyBFY2hlbG9uIFBsYWNlIG9yIHRoZSBGb250YWluZWJsZWF1IG9uIHRoZSBWZWdhcyBTdHJpcCBTdGV2ZW4gU21pdGggYSBwYXJ0bmVyIHNwZWNpYWxpemluZyBpbiByZXN0cnVjdHVyaW5nIGFuZCBpbnNvbHZlbmN5IHdpdGggdGhlIGxhdyBmaXJtIEVkd2FyZHMgV2lsZG1hbiBQYWxtZXIgc2FpZCB0aGUga2V5IHF1ZXN0aW9uIGlzIGhvdyBhIGJhbmtydXB0Y3kgY291cnQganVkZ2UgcmVhY3RzIHRvIHRoZSBwcmVwbGFubmVkIGFncmVlbWVudCBSZXZlbCBleHBlY3RzIHRoYXQgaXQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMC0wNi0xMFQwMDowMDowMFogVE8gMjAxMi0wNi0xMFQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTIzODU0</field><field name="title" class="java.lang.String">rO0ABXQAOFNoYXJlcyBTaW5rIGFzIE1HTSBSZXNvcnRzLCBLZXJrb3JpYW4gUGxhbiB0byBTZWxsIFN0b2Nr</field><field name="content" class="java.lang.String">rO0ABXQSB1RoZSBjb21wYW55LCB0aGUgYmlnZ2VzdCBjYXNpbm8gb3BlcmF0b3Igb24gdGhlIExhcyBWZWdhcyBTdHJpcCwgd2lsbCBzZWxsIDQwLjkgbWlsbGlvbiBzaGFyZXMgZm9yICQxMi42NSBhcGllY2UsIGFjY29yZGluZyB0byBzdGF0ZW1lbnRzIHRvZGF5IGFuZCB5ZXN0ZXJkYXkuIFRoZSBwcmljZSBpcyA3IHBlcmNlbnQgbGVzcyB0aGFuIHllc3RlcmRheeKAmXMgY2xvc2luZyBwcmljZS4gRm91bmRlciBhbmQgdG9wIHNoYXJlaG9sZGVyIEtpcmsgS2Vya29yaWFuIHdpbGwgc2VsbCAyNy44IG1pbGxpb24gc2hhcmVzLCByZWR1Y2luZyBoaXMgaG9sZGluZyBhZnRlciBjb25zaWRlcmluZyBzdHJhdGVnaWMgYWx0ZXJuYXRpdmVzIGZvciB0aGUgcGFzdCB5ZWFyLiBNR00gc2hhcmVzIGRyb3BwZWQgJDEuMjUsIG9yIDkuMiBwZXJjZW50LCB0byAkMTIuMzYgYXQgMTA6NDUgYS5tLiBpbiBOZXcgWW9yayBTdG9jayBFeGNoYW5nZSBjb21wb3NpdGUgdHJhZGluZy4gVGhlIGNvbXBhbnkgc2FpZCBpdCBwbGFucyB0byB1c2UgdGhlIHByb2NlZWRzIHByaW1hcmlseSB0byByZXBheSBzb21lIG9mIGl0cyBhbG1vc3QgJDEzIGJpbGxpb24gaW4gZGVidC4gTUdNIGFuZCBLZXJrb3JpYW7igJlzIFRyYWNpbmRhIENvcnAuIGFyZSB0YXBwaW5nIHB1YmxpYyBtYXJrZXRzIGFzIGEgcmVjb3JkIHNsdW1wIGluIExhcyBWZWdhcyBlYXNlcyBhbmQgY2FzaW5vIHNlY3VyaXRpZXMgcmFsbHkuIExhcyBWZWdhcyBTdHJpcCBnYW1ibGluZyByZXZlbnVlIGp1bXBlZCAyMSBwZXJjZW50IGluIEF1Z3VzdCwgTmV2YWRh4oCZcyBHYW1pbmcgQ29udHJvbCBCb2FyZCBzYWlkIGxhc3Qgd2Vlay4gVGhlIGNvbXBhbnkgc2FpZCB5ZXN0ZXJkYXkgdGhhdCBjYXNoIGZsb3cgYXQgaXRzIENpdHlDZW50ZXIgam9pbnQgdmVudHVyZSBvbiB0aGUgU3RyaXAgdHVybmVkIHBvc2l0aXZlIGluIHRoZSB0aGlyZCBxdWFydGVyLiDigJxJdCBlbGltaW5hdGVzIHNvbWUgb2YgdGhlIGRlYnQgaXNzdWVzIHRoYXQgY291bGQgcmVhbGx5IGh1cnQgdGhlIGNvbXBhbnks4oCdIERhdmlkIEJhaW4sIGFuIGFuYWx5c3QgYXQgU3Rlcm5lIEFnZWUgJiBMZWFjaCBJbmMuLCBzYWlkIG9mIHRoZSBzaGFyZSBzYWxlcy4gQm9yZ2F0YSBIb3RlbCBNR00gc2FpZCBpdCBmb3VuZCBhIGJ1eWVyIGZvciBpdHMgaGFsZi1pbnRlcmVzdCBpbiB0aGUgQm9yZ2F0YSBIb3RlbCBDYXNpbm8gJiBTcGEgaW4gQXRsYW50aWMgQ2l0eSwgYnJpbmdpbmcgcHJvY2VlZHMgb2YgYWJvdXQgJDI1MCBtaWxsaW9uLCBhbmQgdGhhdCB0aGUgY29tcGFueSBleHBlY3RzIHRvIHJlY2VpdmUgYWJvdXQgJDEyNSBtaWxsaW9uIGluIGxvYW4gcmVwYXltZW50cyB0aGlzIG1vbnRoIGZyb20gaXRzIE1hY2F1IGpvaW50IHZlbnR1cmUsIHRoZSBNR00gR3JhbmQgTWFjYXUuIFRoZSBvZmZlciBmb3IgdGhlIEJvcmdhdGEgaXMgYmVsb3cgdGhlIHByb3BlcnR54oCZcyBjYXJyeWluZyB2YWx1ZSBhbmQgd2lsbCByZXN1bHQgaW4gYSAkMTI4IG1pbGxpb24gcHJldGF4IGNoYXJnZSBpbiB0aGUgdGhpcmQgcXVhcnRlciwgTUdNIHNhaWQuIFBhcnRuZXIgQm95ZCBHYW1pbmcgQ29ycC4sIHdoaWNoIHJ1bnMgdGhlIHJlc29ydCwgaGFzIHRoZSByaWdodCB0byBtYXRjaCBhbnkgYmlkLiBUaGUgc3RvY2sgYmVpbmcgc29sZCBieSBNR00gcmVwcmVzZW50cyBhYm91dCBhIDkuMyBwZXJjZW50IGluY3JlYXNlIGluIHNoYXJlcyBvdXRzdGFuZGluZywgYmFzZWQgb24gZGF0YSBjb21waWxlZCBieSBCbG9vbWJlcmcuIEFuIGFkZGl0aW9uYWwgNi4xMzUgbWlsbGlvbiBzaGFyZXMgZnJvbSB0aGUgY29tcGFueSBhbmQgNC4xNjcgbWlsbGlvbiBmcm9tIFRyYWNpbmRhIHdpbGwgYmUgb2ZmZXJlZCBmb3Igb3ZlcmFsbG90bWVudHMuIEJhcmNsYXlzIENhcGl0YWwgSW5jLiBpcyBtYW5hZ2luZyB0aGUgc2hhcmUgc2FsZS4gVGhlIHN0b2NrIHNhbGVzIHdvdWxkIGRpbHV0ZSBLZXJrb3JpYW7igJlzIHN0YWtlIHRvIGFib3V0IDMwIHBlcmNlbnQsIFRyYWNpbmRhIHNhaWQgc2VwYXJhdGVseS4gVGhlIDkzLXllYXItb2xkIGJpbGxpb25haXJlIGlzIG5vIGxvbmdlciBzZWVraW5nIHN0cmF0ZWdpYyBhbHRlcm5hdGl2ZXMgZm9yIGhpcyBNR00gc3Rha2UsIGFjY29yZGluZyB0byB0aGUgc3RhdGVtZW50LiBIZSBzYWlkIGEgeWVhciBhZ28gTUdNIFJlc29ydHMgd2FzIHVuZGVydmFsdWVkIGFuZCBoZSB3YXMgb3BlbiB0byBkZWFsIHByb3Bvc2Fscy4gVHJhY2luZGEgbm93IG93bnMgMzcgcGVyY2VudCwgYWNjb3JkaW5nIHRvIEJsb29tYmVyZyBkYXRhLiDigJxUcmFjaW5kYSBiZWxpZXZlcyB0aGF0IHRoZXJlIGlzIHN1YnN0YW50aWFsIHZhbHVlIGluIHRoZSBhc3NldHMgb2YgdGhlIGNvbXBhbnkgYW5kIHRoYXQgTUdNIFJlc29ydHMgaXMgYSBnb29kIGxvbmctdGVybSBpbnZlc3RtZW50LOKAnSBpdCBzYWlkIGluIGEgc3RhdGVtZW50LiDigJxUcmFjaW5kYSBpcyBub3QgY3VycmVudGx5IHNlZWtpbmcgb3RoZXIgc3RyYXRlZ2ljIGFsdGVybmF0aXZlcyB3aXRoIHJlc3BlY3RpdmUgdG8gaXRzIGludmVzdG1lbnQgaW4gTUdNIFJlc29ydHMu4oCdIOKAmFdvcmsgdG8gRG/igJkgTUdNIFJlc29ydHMgYWxzbyByZXBvcnRlZCBhIHByZWxpbWluYXJ5IHRoaXJkLXF1YXJ0ZXIgbmV0IGxvc3Mgb2YgNzIgY2VudHMgYSBzaGFyZSwgY29tcGFyZWQgd2l0aCBhIGxvc3Mgb2YgJDEuNzAgYSB5ZWFyIGVhcmxpZXIuIFJldmVudWUgd2FzIGFib3V0ICQxLjU2IGJpbGxpb24sIHRoZSBjb21wYW55IHNhaWQuIEFuYWx5c3RzIGV4cGVjdGVkICQxLjU1IGJpbGxpb24sIHRoZSBhdmVyYWdlIG9mIDE3IGVzdGltYXRlcy4gQ2FzaCBmbG93IGF0IHdob2xseSBvd25lZCBjYXNpbm9zLCBtZWFzdXJlZCBhcyBhZGp1c3RlZCBlYXJuaW5ncyBiZWZvcmUgaW50ZXJlc3QsIHRheGVzLCBkZXByZWNpYXRpb24gYW5kIGFtb3J0aXphdGlvbiwgZGVjbGluZWQgMTMgcGVyY2VudCB0byAkMzE0IG1pbGxpb24gaW4gdGhlIHF1YXJ0ZXIuIEFkanVzdGVkIEViaXRkYSBhdCBDaXR5Q2VudGVyLCBNR03igJlzIFN0cmlwIGpvaW50IHZlbnR1cmUgd2l0aCBEdWJhaSBXb3JsZCwgd2FzICQ0MSBtaWxsaW9uIGluIHRoZSB0aGlyZCBxdWFydGVyLCBvbiByZXZlbnVlIG9mICQ0MTMgbWlsbGlvbiwgaGVscGVkIGJ5IGNvbmRvbWluaXVtIHNhbGVzIGFuZCB0YWJsZSBnYW1lIHdpbm5pbmdzIGF0IHRoZSBkZXZlbG9wbWVudOKAmXMgQXJpYSBjYXNpbm8uIOKAnFRoaXMgY29tcGFueSBoYXMgYSBsb3QgbW9yZSB3b3JrIHRvIGRvLOKAnSBCYWluIHNhaWQuIOKAnFRoZXNlIFZlZ2FzIG51bWJlcnMgYXJlIGxlc3MgdGhhbiBzdGVsbGFyLuKAnSBTb2x2ZW5jeSBDaGllZiBFeGVjdXRpdmUgT2ZmaWNlciBKaW0gTXVycmVuIHJlc29sdmVkIHNvbHZlbmN5IGNvbmNlcm5zIHN1cnJvdW5kaW5nIE1HTSBSZXNvcnRzIGluIE1heSAyMDA5IGFmdGVyIHJlZmluYW5jaW5nIGRlYnQgYW5kIHNlbGxpbmcgbW9yZSB0aGFuICQxIGJpbGxpb24gaW4gY29tbW9uIHN0b2NrIGFuZCAkMS41IGJpbGxpb24gaW4gc2VuaW9yIHNlY3VyZWQgbm90ZXMgYXMgcGFydCBvZiBhIHJlY2FwaXRhbGl6YXRpb24uIE11cnJlbiBoYXMgc3Vic2VxdWVudGx5IHRhcHBlZCBjYXBpdGFsIG1hcmtldHMgd2hlbiBpbnZlc3RvciBkZW1hbmQgZm9yIGp1bmsgZGVidCBhbmQgY2FzaW5vIHN0b2NrcyBoYXMgcmFsbGllZCwgaW5jbHVkaW5nIGEgJDEgYmlsbGlvbiBjb252ZXJ0aWJsZSBub3RlIHNhbGUgaW4gQXByaWwuIE1HTeKAmXMgJDQ3NSBtaWxsaW9uIG9mIG5vdGVzIGR1ZSBNYXJjaCAyMDE4IGNsaW1iZWQgMy43NSBjZW50cyBvbiB0aGUgZG9sbGFyIHRvIDEwNC4yNSBjZW50cyB0byB5aWVsZCAxMC41IHBlcmNlbnQgYXQgOTo0MiBhLm0uIGluIE5ldyBZb3JrLCBhY2NvcmRpbmcgdG8gVHJhY2UsIHRoZSBib25kIHByaWNlIHJlcG9ydGluZyBzeXN0ZW0gb2YgdGhlIEZpbmFuY2lhbCBJbmR1c3RyeSBSZWd1bGF0b3J5IEF1dGhvcml0eS4gVGhlIGRlYnQgaGFzIGNsaW1iZWQgMTEuNjI1IGNlbnRzIHNpbmNlIHRyYWRpbmcgYXQgOTIuNjI1IGNlbnRzIG9uIFNlcHQuIDIzLCBUcmFjZSBkYXRhIHNob3cuIE1HTSBwdXQgaXRzIHN0YWtlIGluIEJvcmdhdGEgb24gdGhlIG1hcmtldCBhbmQgaXMgbGVhdmluZyBBdGxhbnRpYyBDaXR5IGFzIHBhcnQgb2YgYSBzZXR0bGVtZW50IHdpdGggTmV3IEplcnNleSByZWd1bGF0b3JzLCB3aG8gZm91bmQgdGhlIGNvbXBhbnnigJlzIHBhcnRuZXIgaW4gdGhlIE1HTSBHcmFuZCBNYWNhdSwgUGFuc3kgSG8sIHRvIGJlIOKAnHVuc3VpdGFibGUu4oCdIEFuIGluaXRpYWwgcHVibGljIG9mZmVyaW5nIG9mIHRoZSB2ZW50dXJlIGlzIHBsYW5uZWQgZm9yIHRoaXMgeWVhciwgTXVycmVuIGhhcyBzYWlkLiBBIGRlYWwgYW5ub3VuY2VkIGluIHRoZSBzdW1tZXIgdG8gc2VsbCB0aGUgbGFuZCBiZW5lYXRoIEJvcmdhdGEgdG8gVm9ybmFkbyBSZWFsdHkgVHJ1c3QgYW5kIEdleXNlciBIb2xkaW5ncyB3aWxsIGNsb3NlIGluIHRoZSBmb3VydGggcXVhcnRlciwgYW5kIGRlbGl2ZXIgbmV0IHByb2NlZWRzIG9mIGFib3V0ICQ3MSBtaWxsaW9uLCBNR00gUmVzb3J0cyBzYWlkIHllc3RlcmRheS4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAASuj9YyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDYzYmYzNDViMDQ5YmY2Mjg=</field><field name="symbol" class="java.lang.String">rO0ABXQAA01HTQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAASupG+iAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAomZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAoqPXCj1wp</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAm8KPXCj1x</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAnHrhR64Uf</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAnHrhR64Uf</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAyCxWA==</field><field name="id" class="java.lang.String">rO0ABXQAEDUwMWI2NmM5YjE1YjM1YjA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mK5PAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExNzgx</field><field name="title" class="java.lang.String">rO0ABXQAL0NoaW5hIENyZWRpdCBTcXVlZXplIFByb21wdHMgU3VpY2lkZXMsIFZpb2xlbmNl</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATN8nKMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGJhYzM0NzI1NmU0ZDE0ZTM=</field><field name="symbol" class="java.lang.String">rO0ABXQABExPQU4=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATOBwv8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/yj1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/yj1wo9cKP</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/wAAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/wKPXCj1wp</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/tcKPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAH0A==</field><field name="id" class="java.lang.String">rO0ABXQAEDhlMzNhZjQ5YjBjMTQ4OTc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mF7zAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDE3NDc=</field><field name="title" class="java.lang.String">rO0ABXQAMkJvcmRlcnMnIFNlZWtzIEFwcHJvdmFsIHRvIExpcXVpZGF0ZSwgQ2xvc2UgU3RvcmVz</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATFAw9CAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGNmZjMzMjI5YTNiMzViN2I=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0JLUw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATFF6iyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAx8zMzMzMz</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyHCj1wo9c</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxj1wo9cKP</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAx0euFHrhS</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAx0euFHrhS</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAQNHA==</field><field name="id" class="java.lang.String">rO0ABXQAEGFmM2ZhOGJjNGYwZGJjZGM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMIWAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE1MjUw</field><field name="title" class="java.lang.String">rO0ABXQAMlBsYXlib3kgUGlucyBIb3BlcyBvbiBDbHVicywgTGljZW5zZSBEZWFscyBpbiBBc2lh</field><field name="content" class="java.lang.String">rO0ABXQVDEZlYnJ1YXJ5IG1hcmtzIHRoZSBzdGFydCBvZiB0aGUgeWVhciBvZiB0aGUgcmFiYml0IGluIHRoZSBDaGluZXNlIGx1bmFyIGNhbGVuZGFyLiBJdCBtYXkgYmUgYW4gYXVzcGljaW91cyBzaWduIGZvciBQbGF5Ym95IEVudGVycHJpc2VzIEluYy4sIHdoaWNoIG9wZW5lZCBhIG5pZ2h0Y2x1YiBpbiBNYWNhdSBsYXN0IG1vbnRoIGFzIGl0IHNlZWtzIHRvIGV4cGFuZCBpdHMgYnVzaW5lc3MgYnkgbGljZW5zaW5nIHRoZSB0cmFkZW1hcmsgYnVubnkgaGVhZCBsb2dvIG9uIGxpZmVzdHlsZSBwcm9kdWN0cyBpbiBBc2lhLCBpdHMgZmFzdGVzdCBncm93aW5nIHJlZ2lvbi4gVGhlIGNvbXBhbnksIGZvdW5kZWQgYnkgSHVnaCBIZWZuZXIgaW4gMTk1MywgYWxzbyBwbGFucyB0byBvcGVuIGEgUGxheWJveSBNYW5zaW9uIGluIDIwMTIgaW4gTWFjYXUsIGEgZm9ybWVyIFBvcnR1Z3Vlc2UgY29sb255IG9uIHRoZSBzb3V0aGVybiBjb2FzdCBvZiBDaGluYSwgYW5kIGhhcyBiZWVuIGJ1c3kgY3V0dGluZyBkZWFscyB0byBzZWxsIFBsYXlib3ktYnJhbmRlZCBtZXJjaGFuZGlzZSBhY3Jvc3MgQXNpYS4gSXRzIG5hbWVzYWtlIG1hZ2F6aW5lLCB3aGljaCBpcyBiYW5uZWQgaW4gQ2hpbmEgYW5kIGRlZnVuY3QgaW4gSW5kb25lc2lhIGR1ZSB0byB2aW9sZW50IGJhY2tsYXNoIGZyb20gTXVzbGltIGhhcmQtbGluZXJzLCBoYXMgc3RydWdnbGVkIHdpdGggY29tcGV0aXRpb24gZnJvbSB0aGUgSW50ZXJuZXQsIGxvc2luZyByZWFkZXJzIGFuZCBhZHZlcnRpc2Vycy4gUGxheWJveSBFbnRlcnByaXNlcyBoYXNuJ3QgdHVybmVkIGEgcHJvZml0IHNpbmNlIHRoZSB0aGlyZCBxdWFydGVyIG9mIDIwMDcgYW5kIGxhc3QgbW9udGggcmVwb3J0ZWQgdGhhdCBsb3NzZXMgd2lkZW5lZCB0byAkMjcuNCBtaWxsaW9uIGluIHRoZSBtb3N0IHJlY2VudCBxdWFydGVyLiBUaGUgcmVuZXdlZCBmb2N1cyBvbiBBc2lhIGlzIHNvbWV0aGluZyBvZiBhIGRvLW9yLWRpZSBtb3ZlIGZvciB0aGUgY29tcGFueSBhcyBpdCB0cmllcyB0byB0cmFuc2Zvcm0gaXRzZWxmIGZyb20gdGhlIHB1Ymxpc2hlciBvZiBhIG1hZ2F6aW5lIHN5bm9ueW1vdXMgdGhlIHdvcmxkIG92ZXIgd2l0aCBjZW50ZXJmb2xkcyBvZiBiYXJlLWJyZWFzdGVkIHdvbWVuIGludG8gYW4gZW50ZXJ0YWlubWVudCBhbmQgbGlmZXN0eWxlIGJyYW5kLiAiSXQncyBvdXIgYmlnZ2VzdCBhbmQgZmFzdGVzdCBncm93aW5nIG1hcmtldCwgYW5kIG9idmlvdXNseSB0aGVyZSdzIGEgbWFzcyBhcHBlYWwsIiBzYWlkIGNoaWVmIGV4ZWN1dGl2ZSBTY290dCBGbGFuZGVycy4gIkkgdGhpbmsgd2UncmUgbW9yZSBwb3B1bGFyIGV2ZW4gaW4gQXNpYSB0aGFuIHdlIGFyZSBpbiB0aGUgVS5TLiBXZSdyZSBtb3JlIG9mIGEgZmFzaGlvbiBicmFuZC4gV2UncmUgbW9yZSBsaWtlIExvdWlzIFZ1aXR0b24uIiBQbGF5Ym95IGhhZCBiZWVuIHRyeWluZyB0byBvcGVuIGEgY2x1YiBpbiBNYWNhdSBmb3IgYSBsb25nIHRpbWUsIEZsYW5kZXJzIHNhaWQuIFRoZSBjb21wYW55IGZpbmFsbHkgbWFuYWdlZCB0byByZWFjaCBhIGRlYWwgd2l0aCBTYW5kcyBDaGluYSBMdGQuLCBhIHVuaXQgb2YgY2FzaW5vIG9wZXJhdG9yIExhcyBWZWdhcyBTYW5kcyBDb3JwLiwgd2hpY2ggaXMgbGVkIGJ5IGJpbGxpb25haXJlIFNoZWxkb24gQWRlbHNvbi4gVGhlIDEyLDAwMC1zcXVhcmUtZm9vdCAoMSwxMTUtc3F1YXJlLW1ldGVyKSBjbHViIG9wZW5lZCBOb3YuIDIwIGF0b3AgdGhlIFNhbmRzIGhvdGVsLWNhc2lubywgc3RhZmZlZCBieSAxOCBQbGF5Ym95ICJidW5uaWVzIiB3ZWFyaW5nIGFuIHVwZGF0ZWQgdmVyc2lvbiBvZiB0aGUgc2lnbmF0dXJlIG91dGZpdCBvZiBidW5ueSBlYXJzLCBmbHVmZnkgY290dG9udGFpbCwgY29yc2V0IGFuZCBjdWZmcy4gVGhlIGJ1bm5pZXMg4oCUIGZyb20gdGhlIFUuUy4sIEF1c3RyYWxpYSwgRXN0b25pYSwgSG9uZyBLb25nIGFuZCBNYWNhdSDigJQgc2VydmUgZHJpbmtzIGFuZCBjaGF0IHdpdGggY3VzdG9tZXJzLiBUaGUgY2x1YiwgZGVjb3JhdGVkIHdpdGggYmxhY2sgdGlsZSBhbmQgZGFyayB2ZWx2ZXQgY3VydGFpbnMsIGZlYXR1cmVzIHByaXZhdGUgZ2FtaW5nIHJvb21zIGFuZCBvZmZlcnMgc3dlZXBpbmcgdmlld3Mgb2YgdGhlIG5lb24tbGl0IE1hY2F1IHNreWxpbmUuIFRoZSBjbHViIGFpbXMgdG8gYXR0cmFjdCB0aGUgd2VhbHRoeSwgaGlnaC1zcGVuZGluZyBDaGluZXNlIHdobyBmbG9jayB0byBNYWNhdSwgdGhlIG9ubHkgcGxhY2UgaW4gQ2hpbmEgd2hlcmUgZ2FtYmxpbmcgaXMgbGVnYWwuICJXZSB3YW50IHBlb3BsZSB0byBjb21lIGluLCB3aGV0aGVyIHRoZXkncmUgbG9jYWwgb3IgZnJvbSBaaHVoYWksIFNoZW56aGVuLCBIb25nIEtvbmcgb3IgR3Vhbmd6aG91LCIgc2FpZCBSZWdnaWUgTWFydGluLCB0aGUgY2x1YidzIGdlbmVyYWwgbWFuYWdlciwgbmFtaW5nIHNldmVyYWwgb2YgdGhlIHN1cnJvdW5kaW5nIGNpdGllcy4gTWFjYXUgcmV0dXJuZWQgdG8gQ2hpbmVzZSBydWxlIGluIDE5OTksIGFsdGhvdWdoIGl0IGhhcyByZXRhaW5lZCBpdHMgb3duIGxlZ2FsIHN5c3RlbS4gSXQgaGFzIGJlY29tZSB0aGUgd29ybGQncyBiaWdnZXN0IGdhbWJsaW5nIG1hcmtldCBzaW5jZSBhIGNhc2lubyBtb25vcG9seSB3YXMgYnJva2VuIHVwIGVpZ2h0IHllYXJzIGFnby4gTWFydGluIHNhaWQgdGhlIGNsdWIgaXMgYWltZWQgYXQgbWVuIGFuZCB3b21lbiwgZ2FtYmxlcnMgYW5kIG5vbi1nYW1ibGVycy4gIkl0J3MgYnkgbm8gbWVhbnMgZXZlbiBjbG9zZSB0byBiZWluZyBhIGdlbnRsZW1hbidzIGNsdWIsIiBoZSBzYWlkLiBUaGUgbWVudSBmZWF0dXJlcyBhIGZldyBsb2NhbGl6ZWQgc3BlY2lhbHRpZXMgc3VjaCBhcyBidW5ueSBkaW0gc3VtIOKAlCBQbGF5Ym95IGJ1bm55LXNoYXBlZCBzaHJpbXAgZHVtcGxpbmdzIOKAlCBhdCA0IHBpZWNlcyBmb3IgODAgTWFjYXUgcGF0YWNhcyAoJDEwKS4gVGhlIFBsYXlib3kgTWFuc2lvbiB0aGF0IGlzIHNldCB0byBvcGVuIGluIGFub3RoZXIgU2FuZHMgZGV2ZWxvcG1lbnQgd2lsbCBzcHJhd2wgb3ZlciAzMCwwMDAgc3F1YXJlIGZlZXQuIFBsYXlib3kgb3duZWQgYW5kIG9wZXJhdGVkIG1vcmUgdGhhbiAzMCBjbHVicyBhcm91bmQgdGhlIHdvcmxkIHN0YXJ0aW5nIGluIDE5NjAuIFRoZXkgc3RhcnRlZCBsb3NpbmcgbW9uZXkgaW4gdGhlIDE5NzBzLCBhbmQgdGhlIGxhc3QgY2xvc2VkIGluIDE5OTEuIFRoaXMgdGltZSBhcm91bmQsIFBsYXlib3kgaXMgbWVyZWx5IGNvbGxlY3RpbmcgYSBmZWUgZm9yIGxpY2Vuc2luZyB0aGUgdXNlIG9mIGl0cyBuYW1lIG9uIHRoZSB2ZW51ZSwgRmxhbmRlcnMgc2FpZC4gQ2x1YnMgaGF2ZSBhbHNvIG9wZW5lZCB0aGlzIHllYXIgaW4gTGFzIFZlZ2FzIGFuZCBDYW5jdW4sIE1leGljbywgYW5kIHRoZXJlIGFyZSBwbGFucyBmb3Igb3RoZXJzIGluIE1pYW1pIGFuZCBMb25kb24uIEZsYW5kZXJzIHNhaWQgdGhlIGNvbXBhbnkgd291bGQgbG92ZSB0byBvcGVuIG9uZSBpbiBTaW5nYXBvcmUsIHdoaWNoIG9wZW5lZCBpdHMgZmlyc3QgY2FzaW5vcyB0aGlzIHllYXIuIEJ5IDIwMTEsIEFzaWEgd2lsbCBhY2NvdW50IGZvciAzNCBwZXJjZW50IG9mIGxpY2Vuc2luZyByZXZlbnVlLCBkb3VibGUgd2hhdCBpdCB3YXMgdHdvIHllYXJzIGFnbywgRmxhbmRlcnMgc2FpZC4gQnkgMjAxMiwgQXNpYSB3aWxsIGJyaW5nIGluICQyMCBtaWxsaW9uIGluIGxpY2Vuc2luZyByZXZlbnVlLCBoZSBzYWlkLiAiQXNpYSBjb3VsZCBiZSBhIGdyb3d0aCBhcmVhIHRvIFBsYXlib3kgc2luY2UgdGhlIFUuUy4gaXMgYSBtYXR1cmUgbWFya2V0IGFuZCBFdXJvcGUgaXMgYmVjb21pbmcgYSBtYXR1cmUgbWFya2V0LCIgc2FpZCBTdGV2ZSBNYXJhc2NpYSwgZGlyZWN0b3Igb2YgcmVzZWFyY2ggYXQgQ2FwaXRvbCBTZWN1cml0aWVzLiBNYXJhc2NpYSBzYWlkIHRoZSBjbHVicyB3aWxsIGhlbHAgcmFpc2UgdGhlIGJyYW5kJ3MgcHJvZmlsZSBpbiBBc2lhLiAiUG90ZW50aWFsbHksIGFzIG1vcmUgcGVvcGxlIGluIEFzaWEgYmVjb21lIGF3YXJlIG9mIFBsYXlib3ksIHRoZXkgbWF5IHdhbnQgdG8gYnV5IHRoZSBwcm9kdWN0cyBvZmZlcmVkIGJ5ICh0aGUpIGxpY2Vuc2luZyB1bml0LCIgaGUgc2FpZC4gVG93ZWxzLCBiZWRzaGVldHMgYW5kIGhhbmRiYWdzIGNhcnJ5aW5nIHRoZSBmYW1pbGlhciBib3ctdGllZCBidW5ueSBsb2dvIGFyZSBhbW9uZyB0aGUgcG9wdWxhciBpdGVtcyBzb2xkIGluIEFzaWEsIEZsYW5kZXJzIHNhaWQuIEluIEphcGFuLCB0ZW5uaXMgc2hvZXMgYW5kIHNvY2tzIHNlbGwgcGFydGljdWxhcmx5IHdlbGwuIFN5bXB0b21hdGljIG9mIHRoZSBsb25nLXRlcm0gZGVjbGluZSBpbiBQbGF5Ym95J3MgZm9ydHVuZXMsIGl0cyBzdG9jayBoYXMgZmFsbGVuIGZyb20gYSBoaWdoIG9mICQzMi4xOSBvbiBBcHJpbCAzMCwgMTk5OSwgdG8gYSBsb3cgb2YgJDEuMjUgaW4gTm92ZW1iZXIgMjAwOC4gSXQgbm93IHRyYWRlcyBhdCBqdXN0IG92ZXIgJDUuIEl0cyByZWNlbnQgZ2FpbiBoYXMgYmVlbiBoZWxwZWQgYnkgSGVmbmVyJ3Mgb2ZmZXIgZWFybGllciB0aGlzIHllYXIgdG8gYnV5IHRoZSByZXN0IG9mIHRoZSBzdG9jayB0aGF0IGhlIGRvZXNuJ3QgYWxyZWFkeSBvd24uIFRoZSBib2FyZCBvZiBkaXJlY3RvcnMgaXMgc3RpbGwgY29uc2lkZXJpbmcgdGhlIG9mZmVyLiBUaGUgY29tcGFueSB0cmllZCB0byBvcGVuIGEgY2x1YiBpbiBTaGFuZ2hhaSBidXQgcGxhbnMgZmVsbCBhcGFydCBpbiAyMDA0LCBvc3RlbnNpYmx5IG92ZXIgYSBkaXNhZ3JlZW1lbnQgYmV0d2VlbiBpbnZlc3RvcnMgYW5kIGxvY2FsIG9mZmljaWFscy4gSG93ZXZlciwgbGFzdCBtb250aCBpdCBpbmtlZCBhIGZpdmUteWVhciwgJDUwIG1pbGxpb24gZGVhbCB3aXRoIENoaW5lc2UgY29tcGFueSBHbG9yeSBSYWJiaXQsIHdoaWNoIHBsYW5zIHRvIG9wZW4gYXQgbGVhc3QgMiwwMDAgUGxheWJveS1icmFuZGVkIHJldGFpbCBzdG9yZXMgaW4gQ2hpbmEuIEEgMiw1MDAtc3F1YXJlLWZvb3Qgc3RvcmUgUGxheWJveSBzdG9yZSBhbHNvIG9wZW5lZCBpbiBUYWl3YW4gbGFzdCBtb250aCBhbmQgSU1HLCBQbGF5Ym95J3MgbGljZW5zaW5nIGFnZW50LCBpcyB3b3JraW5nIG9uIGRlYWxzIGluIEphcGFuLCBTb3V0aCBLb3JlYSBhbmQgSW5kaWEsIEZsYW5kZXJzIHNhaWQuIFRoZSBlZmZvcnRzIGNvdWxkIGJlIHBheWluZyBvZmYsIGFuYWx5c3RzIHNhaWQuICJJdCBhcHBlYXJzIElNRyBpcyBtYWtpbmcgcHJvZ3Jlc3MgaW4gQXNpYSBhbmQgaW5jcmVhc2luZyBzYWxlcyBvZiBQbGF5Ym95J3MgcHJvZHVjdHMsIiBNYXJhc2NpYSBzYWlkLiAiVGhpcyBjb3VsZCBhZGQgcmV2ZW51ZXMgdG8gUGxheWJveSdzIGJhbGFuY2Ugc2hlZXQuIg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAS0maW8AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDgzODVhNDAzYmFjOWUxYzg=</field><field name="symbol" class="java.lang.String">rO0ABXQABENMVUI=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAS0rj8sAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAPMzMzMzMz</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAPmZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAOuFHrhR64</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAO4UeuFHrh</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAGKPXCj1wp</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAACQiA==</field><field name="id" class="java.lang.String">rO0ABXQAEGJkM2U2MGUzOTBiZTU1ZGM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFS1AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDI3ODY=</field><field name="title" class="java.lang.String">rO0ABXQAMkJQIE5vdCBTcGVhcmhlYWRpbmcgT2lsIEluZHVzdHJ5IE1vdmUgQmFjayBpbiBHdWxm</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAASwK9LyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDM4MjNjYzVmY2QzZGU3NDU=</field><field name="symbol" class="java.lang.String">rO0ABXQABEdVTEY=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAASwQGxiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwa4UeuFHs</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwa4UeuFHs</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwQAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwWZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArYUeuFHrh</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAQaA==</field><field name="id" class="java.lang.String">rO0ABXQAEGIyZjY1ZmQzMzkzZTAwM2E=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKo/AAAA==</field></document></documents><date>2015-05-07T04:43:09-0500</date></cacheEntry>
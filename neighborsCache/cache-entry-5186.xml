<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0BQxGZWRlcmFsIFJlc2VydmUgb2ZmaWNpYWxzIHNob3VsZCBrZWVwIGdsb2JhbCBmaW5hbmNpYWwgc3RhYmlsaXR5IGNvbmNlcm5zIGluIG1pbmQgYXMgdGhleSBhaW0gYXQgZG9tZXN0aWMgcG9saWN5IGdvYWxzIGV2ZW4gdGhvdWdoIGVtZXJnaW5nIG1hcmtldHMgaGF2ZSBiZWNvbWUgYmV0dGVyIGVxdWlwcGVkIHRvIGhhbmRsZSBmaW5hbmNpYWwgdm9sYXRpbGl0eSBzYWlkIE5ldyBZb3JrIEZlZCBQcmVzaWRlbnQgV2lsbGlhbSBEdWRsZXkgR2l2ZW4gdGhlIHJvbGUgb2YgdGhlIGRvbGxhciBhcyB0aGUgZ2xvYmFsIHJlc2VydmUgY3VycmVuY3kgdGhlIEZlZGVyYWwgUmVzZXJ2ZSBoYXMgYSBzcGVjaWFsIHJlc3BvbnNpYmlsaXR5IHRvIG1hbmFnZSBwb2xpY3kgaW4gYSB3YXkgdGhhdCBoZWxwcyBwcm9tb3RlIGdsb2JhbCBmaW5hbmNpYWwgc3RhYmlsaXR5IER1ZGxleSBzYWlkIFRodXJzZGF5IGluIHJlbWFya3MgcmVsZWFzZWQgYnkgdGhlIE5ldyBZb3JrIEZlZCBmcm9tIGEgbWVldGluZyB0aGF0IHdhcyBjbG9zZWQgdG8gdGhlIHByZXNzIER1ZGxleSB3aG8gaGFzIGEgcGVybWFuZW50IHZvdGUgb24gdGhlIHJhdGVzZXR0aW5nIEZlZGVyYWwgT3BlbiBNYXJrZXQgQ29tbWl0dGVlIHNhaWQgY2VudHJhbCBiYW5rcyBpbmNsdWRpbmcgdGhlIEZlZCBjb3VsZCBiZSBiZXR0ZXIgZ2xvYmFsIHN0ZXdhcmRzIGJ5IG1ha2luZyBzdXJlIHRoZXkgY29tbXVuaWNhdGUgZWZmZWN0aXZlbHkgYWJvdXQgdGhlaXIgcG9saWNpZXMgYW5kIGJ5IHN0ZW1taW5nIGNyZWRpdCBleGNlc3NlcyBUaGUgTVNDSSBFbWVyZ2luZyBNYXJrZXRzIEluZGV4IGhhcyByZXRyZWF0ZWQgYXMgbXVjaCBhcyAxNiBwZXJjZW50IHNpbmNlIE1heSAyMiB3aGVuIHRoZSBGZWQgc2lnbmFsZWQgaXRzIGFzc2V0YnV5aW5nIHByb2dyYW0gY291bGQgYmUgdHJpbW1lZCBpZiB0aGUgZWNvbm9teSBzaG93ZWQgaW1wcm92ZW1lbnQgRW1lcmdpbmdtYXJrZXQgZWNvbm9taWVzIGhhdmUgbG93ZXJlZCBleHRlcm5hbCBkZWJ0IGxldmVscyBpbXByb3ZlZCBmaXNjYWwgZGlzY2lwbGluZSBhbmQgc3RyZW5ndGhlbmVkIHRoZWlyIGJhbmtpbmcgc3lzdGVtcyBhbGwgb2Ygd2hpY2ggbWFrZSB0aGVtIG1vcmUgcmVzaWxpZW50IHRvIEZlZCB0aWdodGVuaW5nIGN5Y2xlcyBEdWRsZXkgc2FpZCBUaGUgTmV3IFlvcmsgRmVkIHByZXNpZGVudCBhbHNvIGNhbGxlZCBmb3IgYSBiZXR0ZXIgaW50ZXJuYXRpb25hbCBtZWNoYW5pc20gdG8gY3VzaGlvbiB0aGUgYmxvd3Mgb2YgYWJydXB0IGNoYW5nZXMgaW4gY2FwaXRhbCBmbG93c3QABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0wMy0yN1QwMDowMDowMFogVE8gMjAxMy0xMi0wM1Q1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDYyNTM=</field><field name="title" class="java.lang.String">rO0ABXQAM0VtZXJnaW5nIE1hcmtldCBTbHVtcCBIaWdobGlnaHRzIEZlZCdzIEdsb2JhbCBSZWFjaA==</field><field name="content" class="java.lang.String">rO0ABXQVw1doZW4gdGhlIEZlZGVyYWwgUmVzZXJ2ZSB3YXMgcmFtcGluZyB1cCBpdHMgYXNzZXQgcHVyY2hhc2VzIHRvIHN1cHBvcnQgYSBmbGFnZ2luZyBVLlMuIGVjb25vbXksIG1hbnkgb2ZmaWNpYWxzIG92ZXJzZWFzIGNyaXRpY2l6ZWQgdGhlIFVuaXRlZCBTdGF0ZXMgZm9yIHB1dHRpbmcgdW5kdWUgdXB3YXJkIHByZXNzdXJlIG9uIHRoZWlyIGN1cnJlbmNpZXMuIE1vc3QgbWVtb3JhYmx5LCBCcmF6aWxpYW4gRmluYW5jZSBNaW5pc3RlciBHdWlkbyBNYW50ZWdhIHN1Z2dlc3RlZCByaWNoIGNvdW50cmllcyB3ZXJlIGVuZ2FnZWQgaW4gYSAiY3VycmVuY3kgd2FyIiBvciBhIHJhY2UgdG8gZGV2YWx1ZSB0byBnYWluIGEgdHJhZGUgYWR2YW50YWdlLiBOb3cgdGhhdCB0aGUgRmVkIGlzIG1vdmluZyB0b3dhcmQgc2h1dHRlcmluZyBpdHMgYm9uZC1idXlpbmcgcHJvZ3JhbSwgY3VycmVuY2llcyBpbiBlbWVyZ2luZyBtYXJrZXRzIGhhdmUgYmVndW4gdG8gcGx1bmdlIGFuZCB0aGVyZSBhcmUgZ3Jvd2luZyBmZWFycyBvZiBhIHBvc3NpYmxlIGNyaXNpcy4gVGhlIEluZGlhbiBydXBlZSBhbmQgVHVya2lzaCBsaXJhIGhhdmUgc3VuayB0byByZWNvcmQgbG93cyBhZ2FpbnN0IHRoZSBkb2xsYXIsIHdoaWxlIHRoZSBJbmRvbmVzaWFuIHJ1cGlhaCBoYXMgaGl0IGEgZm91ci15ZWFyIGxvdy4gTWV4aWNvIGFuZCBLb3JlYSBoYXZlIGZhY2VkIHByZXNzdXJlLCBhcyBoYXMgQnJhemlsLCB3aGljaCBsYXN0IHdlZWsgcHV0IHVwICQ2MCBiaWxsaW9uIHRvIHN0ZW0gdGhlIHJlYWwncyBzbGlkZS4gVGhlIHJpc2sgb2YgdGhlc2UgcHJlc3N1cmVzIHNub3diYWxsaW5nIGludG8gYSBjcmlzaXMgdGhhdCBlbmd1bGZzIHRoZSB3b3JsZCBlY29ub215IHdhcyB0aGUgZm9jdXMgb2YgbXVjaCBvZiB0aGlzIHllYXIncyBGZWRlcmFsIFJlc2VydmUgY29uZmVyZW5jZSBhdCBKYWNrc29uIEhvbGUsIHdob3NlIHRoZW1lIHdhcyB0aGUgZ2xvYmFsIGRpbWVuc2lvbnMgb2YgbW9uZXRhcnkgcG9saWN5LiBDZW50cmFsIGJhbmtlcnMgZnJvbSBhcm91bmQgdGhlIHdvcmxkIGF0dGVuZGVkIHRoZSBjb25mZXJlbmNlLCB3aGljaCB3cmFwcGVkIHVwIG9uIFNhdHVyZGF5LCBhbmQgdGhlaXIgY29uY2x1c2lvbiB3YXMgbm90IHN0YXJ0bGluZzogdW5jb252ZW50aW9uYWwgbW9uZXRhcnkgcG9saWN5IGluIGRldmVsb3BlZCBuYXRpb25zIHN1Y2ggYXMgdGhlIFVuaXRlZCBTdGF0ZXMsIHdoaWxlIGFwcHJvcHJpYXRlIGZvciBkb21lc3RpYyBvYmplY3RpdmVzLCBjYW4gaGF2ZSBiaWcgc3BpbGxvdmVyIGVmZmVjdHMuIEFuZCwgZm9yIGJldHRlciBvciB3b3JzZSwgdGhlc2UgcG9saWNpZXMg4oCTIHN1Y2ggYXMgdGhlIEZlZCdzIGJvbmQgYnV5aW5nIGFuZCBuZWFyLXplcm8gaW50ZXJlc3QgcmF0ZXMg4oCTIGhhdmUgc3B1cnJlZCB0aGUgbmVlZCBmb3IgZGV2ZWxvcGluZyBjb3VudHJpZXMgdG8gY3JlYXRlIHRoZWlyIG93biB1bmNvbnZlbnRpb25hbCB0b29scyB0byBjb250cm9sIG1vbmV0YXJ5IGZsb3dzLiBCdXQgdGhlcmUgd2FzIGRpc2FncmVlbWVudCBhcyB0byB0aGUgZGVncmVlIGNlbnRyYWwgYmFua2VycyBpbiByaWNoIG5hdGlvbnMgc2hvdWxkIHBheSBhdHRlbnRpb24gdG8gdGhlIG92ZXJzZWFzIGltcGFjdCBvZiB0aGVpciBwb2xpY2llcywgYXMgb3Bwb3NlZCB0byBzaW1wbHkgZm9jdXNpbmcgb24gdGhlIGVjb25vbWljIGdvYWxzIG9mIHRoZWlyIGhvbWUgY291bnRyeSwgYXMgaGFzIGJlZW4gdHJhZGl0aW9uYWxseSB0aGUgY2FzZS4gQWd1c3RpbiBDYXJzdGVucywgZ292ZXJub3Igb2YgTWV4aWNvJ3MgY2VudHJhbCBiYW5rLCBhcmd1ZWQgdGhhdCBjZW50cmFsIGJhbmtzIGluIHJpY2ggY291bnRyaWVzIGNhbm5vdCBjb25kdWN0IHBvbGljeSBpbiBhIHZhY3V1bSwgYW5kIG11c3Qga2VlcCBpbiBtaW5kIHRoZSBpbnRlcm5hdGlvbmFsIGVmZmVjdHMgb3IgcmlzayBzcGFya2luZyBhbm90aGVyIGZpbmFuY2lhbCBjcmlzaXMuIENhcnN0ZW5zIHdhcm5lZCBhYm91dCB0aGUgZGFuZ2VycyBhIG1pc21hbmFnZWQgZXhpdCBmcm9tIHVuY29udmVudGlvbmFsIG1vbmV0YXJ5IHBvbGljaWVzIGluIGNvdW50cmllcyBsaWtlIHRoZSBVbml0ZWQgU3RhdGVzIHdvdWxkIHBvc2UgZm9yIHRoZSBkZXZlbG9waW5nIHdvcmxkLiAiSXQgd291bGQgYmUgZGVzaXJhYmxlIGZvciBhZHZhbmNlZCBlY29ub21pZXMgdG8gaW1wbGVtZW50IGEgbW9yZSBwcmVkaWN0YWJsZSBleGl0LCIgaGUgc2FpZCBkdXJpbmcgYSBwYW5lbCBkaXNjdXNzaW9uIG9uIEZyaWRheS4gIkJldHRlciBjb21tdW5pY2F0aW9uLCBzcGVha2luZyB3aXRoIG9uZSB2b2ljZSwgaXMgdmVyeSBpbXBvcnRhbnQuIiBNSU5ESU5HIE9VUiBPV04gQlVTSU5FU1MgRmVkIG9mZmljaWFscywgYm90aCBjdXJyZW50IGFuZCBmb3JtZXIsIHNob3dlZCBsaXR0bGUgaW50ZXJlc3QgaW4gZ2l2aW5nIHRoZSBpbnRlcm5hdGlvbmFsIGltcGFjdCBvZiB0aGVpciBwb2xpY2llcyBtb3JlIHdlaWdodC4gVGhlIEZlZCBoYXMgYmVlbiBidXlpbmcgJDg1IGJpbGxpb24gaW4gYm9uZHMgZWFjaCBtb250aCwgYnV0IHBsYW5zIHRvIHNjYWxlIHRoYXQgYmFjayBiZWZvcmUgeWVhciBlbmQgYW5kIGJyaW5nIHRoZSBwdXJjaGFzZXMgdG8gYSBoYWx0IGJ5IG1pZC0yMDE0LiAiV2UgYXJlIHRoZXJlIHRvIHNldCBuYXRpb25hbCBwb2xpY3kgZm9yIHRoZSBiZXR0ZXJtZW50IG9mIHRoZSBVLlMuIGVjb25vbXkgYW5kIGRvIG5vdCBoYXZlIGEgbG90IG9mIHNjb3BlIHRvIGdvIG91dHNpZGUgdGhhdCBzZXQgb2YgY29uc2lkZXJhdGlvbnMsIiBBdGxhbnRhIEZlZGVyYWwgUmVzZXJ2ZSBCYW5rIFByZXNpZGVudCBEZW5uaXMgTG9ja2hhcnQgdG9sZCBSZXV0ZXJzIG9uIFNhdHVyZGF5LiAiQnV0IGlmIChhIFUuUy4gcG9saWN5bWFrZXIpIHNhdyByZWFsIGdsb2JhbCByaXNrLCBhbmQgc2FpZCB0aGF0IGlzIGdvaW5nIHRvIGJlIGEgc2Vjb25kIG9yZGVyIGVmZmVjdCBvbiBvdXIgZG9tZXN0aWMgZWNvbm9teSwgdGhlbiB0aGF0IGNsZWFybHkgY291bGQgYmUgY29uc2lkZXJlZCwgYW5kIEkgd291bGQgY29uc2lkZXIgaXQuIiBEb25hbGQgS29obiwgYSBmb3JtZXIgRmVkIHZpY2UgY2hhaXIgYW5kIGEgY2FuZGlkYXRlIGZvciB0aGUgdG9wIGpvYiB3aGVuIGN1cnJlbnQgY2hhaXJtYW4gQmVuIEJlcm5hbmtlJ3MgdGVybSBlbmRzIGluIEphbnVhcnksIGNvdW50ZXJlZCB0aGUgY2xhaW0gdGhhdCBtb25ldGFyeSBwb2xpY3kgbWlnaHQgYmUgdG9vIGxvb3NlIGdsb2JhbGx5LCBjaXRpbmcgZWxldmF0ZWQgam9ibGVzcyByYXRlcyBpbiByaWNoIGNvdW50cmllcy4gSGUgc3VnZ2VzdGVkIHRoZSBsYWNrIG9mIGV4Y2hhbmdlIHJhdGUgZmxleGliaWxpdHkgaW4gc29tZSBuYXRpb25zLCBzdWNoIGFzIENoaW5hLCBtZWFudCBvdGhlciBlbWVyZ2luZyBlY29ub21pZXMgaGFkIHRvIGJlYXIgdGhlIGJydW50IG9mIGFkdmVyc2UgZWZmZWN0cyBmcm9tIHRoZSBGZWQncyBwb2xpY2llcy4gIk9uZSBvZiB0aGUgd2F5cyB0aGF0IG1vbmV0YXJ5IHBvbGljeSBvZiB0aGUgVW5pdGVkIFN0YXRlcyB3YXMgdHJhbnNtaXR0ZWQgd2FzIGJ5IHJlc2lzdGFuY2UgdG8gZXhjaGFuZ2UgcmF0ZSBhcHByZWNpYXRpb24gaW4gb3RoZXIgY291bnRyaWVzLCIgaGUgc2FpZC4gUkFJU0UgU0hJRUxEUyBUaGUgZGlzY3Vzc2lvbiB2ZWVyZWQgZnJvbSB0aGUgcmlwcGxlcyBvZiBGZWQgcG9saWN5IGludG8gd2hhdCBlbWVyZ2luZyBzdGF0ZXMgY2FuIGRvIHRvIGluc3VsYXRlIHRoZW1zZWx2ZXMuIE9uZSBvZiB0aGUgcGFwZXJzIHByZXNlbnRlZCBjYWxsZWQgb24gcG9vcmVyIG5hdGlvbnMgdG8gYWRvcHQgc28tY2FsbGVkIG1hY3JvcHJ1ZGVudGlhbCBwb2xpY2llcywgcmFuZ2luZyBmcm9tIHZlcnkgdGFyZ2V0ZWQgcmVzdHJhaW50cyBvbiBjcmVkaXQgYW5kIGxldmVyYWdlIHRvIG1vcmUgc3dlZXBpbmcgY2FwaXRhbCBjb250cm9scywgdG8gdGVtcGVyIHZvbGF0aWxpdHkgaW4gZXhjaGFuZ2UgcmF0ZXMgYW5kIGludmVzdG1lbnRzLiAiTWFjcm9wcnVkZW50aWFsIHBvbGljaWVzIGFyZSBuZWNlc3NhcnkgdG8gcmVzdG9yZSBtb25ldGFyeSBwb2xpY3kgaW5kZXBlbmRlbmNlIGZvciB0aGUgbm9uf2NlbnRyYWwgY291bnRyaWVzLCIgd3JvdGUgSGVsZW5lIFJleSwgYSBwcm9mZXNzb3IgYXQgdGhlIExvbmRvbiBCdXNpbmVzcyBTY2hvb2wuICJUaGV5IGNhbiBzdWJzdGl0dXRlIGZvciBjYXBpdGFsIGNvbnRyb2xzLCBhbHRob3VnaCBpZiB0aGV5IGFyZSBub3Qgc3VmZmljaWVudCwgY2FwaXRhbCBjb250cm9scyBtdXN0IGFsc28gYmUgY29uc2lkZXJlZC4iIENocmlzdGluZSBMYWdhcmRlLCBtYW5hZ2luZyBkaXJlY3RvciBvZiB0aGUgSW50ZXJuYXRpb25hbCBNb25ldGFyeSBGdW5kLCBhZ3JlZWQgY2FwaXRhbCBjb250cm9scyBtaWdodCBiZSBuZWVkZWQgaW4gY2VydGFpbiBjaXJjdW1zdGFuY2VzIGJ1dCBzYWlkIHRoZXkgc2hvdWxkIG5vdCBiZSBhIGZpcnN0IGxpbmUgb2YgZGVmZW5zZS4gVGhlIElNRiBoYWQgbG9uZyBzdG9vZCBhZ2FpbnN0IGJhcnJpZXJzIHRvIGNhcGl0YWwgZmxvd3MsIGJ1dCBpdHMgdmlldyBoYXMgZXZvbHZlZCBpbiB0aGUgd2FrZSBvZiB0aGUgMjAwNy0yMDA5IGZpbmFuY2lhbCBjcmlzaXMuIE1hbnkgYW5hbHlzdHMgd29ycnkgYWJvdXQgdGhlIGVmZmljYWN5IG9mIHN1Y2ggcG9saWNpZXMsIGdpdmVuIGEgbG9uZyBoaXN0b3J5IG9mIGZhaWxlZCBjdXJyZW5jeSBpbnRlcnZlbnRpb25zIGFyb3VuZCB0aGUgd29ybGQgdGhhdCBvZnRlbiwgYnkgcmV2ZWFsaW5nIGEgY291bnRyeSdzIGZpbmFuY2lhbCB3ZWFrbmVzcywgIGhhdmUgYXR0cmFjdGVkIHNwZWN1bGF0b3JzIHJhdGhlciB0aGFuIGRldGVycmVkIHRoZW0uIFRoZSBkZXB1dHkgY2VudHJhbCBiYW5rIGdvdmVybm9yIG9mIEJyYXppbCwgd2hpY2ggaGFzIGVtcGxveWVkIGNhcGl0YWwgY29udHJvbHMgdG8gc3RlbSByYXBpZCBpbmZsb3dzIGluIHJlY2VudCB5ZWFycywgc3VnZ2VzdGVkIHRoZXkgaGF2ZSBsaWtlbHkgaGVscGVkIHRvIHRlbXBlciB0aGUgbW9uZXRhcnkgcHJlc3N1cmVzIHRoZSBjb3VudHJ5IGlzIG5vdyBmYWNpbmcuIEx1aXogUGVyZWlyYSBzdHJ1Y2sgYSBsaWdodGVyIG5vdGUgaW4gbWFraW5nIGhpcyBwb2ludC4gIklmIHlvdSdyZSB0aHJvd2luZyBhIHBhcnR5IGFuZCB5b3Ugd2FudCB0byBiZSBtb3JlIHNlbGVjdGl2ZSBpbiBhbGxvd2luZyBndWVzdHMgaW50byB5b3VyIG93biBwYXJ0eSwgcHJvYmFibHkgeW91IHdpbGwgaGF2ZSBmZXdlciBwZW9wbGUgcnVubmluZyBmb3IgdGhlIGV4aXQgZG9vcnMiIGlmIHNvbWV0aGluZyBnb2VzIHRlcnJpYmx5IHdyb25nLCBoZSBzYWlkLiBJZiBubyByZXN0cmljdGlvbnMgd2VyZSBwbGFjZWQgb24gdGhlIGd1ZXN0IGxpc3QsIGhlIGNvbnRpbnVlZCwgInRoZSBwYXJ0eSBnZXRzIHRvbyB3aWxkIHRvbyBzb29uLiIgIldoZW4geW91IHRyeSB0byBzZWxlY3QgeW91ciBndWVzdHMsIHlvdSB3YW50IHRoZSBvbmVzIHdobyBjb21lIHN0YXkgbG9uZ2VyIHdpdGhvdXQgZ2V0dGluZyB0b28gZHJ1bmsuIg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUCz19CAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGIwZjQwYzVhYmE2ODdiMWM=</field><field name="symbol" class="java.lang.String">rO0ABXQAB1dJTEQuUEs=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUC4/iyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/XrhR64Ueu</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/XrhR64Ueu</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/R64UeuFHs</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/T1wo9cKPX</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/T1wo9cKPX</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAp3TA==</field><field name="id" class="java.lang.String">rO0ABXQAEDU3ODMwZTFkNWVjODA2NTA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGkBAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDMxOTg=</field><field name="title" class="java.lang.String">rO0ABXQAOUVtZXJnaW5nLU1hcmtldCBJbnZlc3RvcnMgR2V0IFBpY2t5IFdpdGggRmVkIFNldCB0byBUYXBlcg==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUELY+yAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI4Mzk0ZDdmMzY4ZThmMWQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lDQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEQikiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwZmZmZmZm</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwbhR64Ueu</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwTMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwUeuFHrhS</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAulHrhR64U</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAyAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGU4YWJiZGU0MDBkOWEwZWQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEY3AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDMxODY=</field><field name="title" class="java.lang.String">rO0ABXQAR0luZG9uZXNpYSBIaWtlcyBSYXRlcywgT3RoZXIgQXNpYS1QYWNpZmljIEJhbmtzIEhvbGQgQmVmb3JlIEZlZCBNZWV0aW5n</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEQikiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGVlYjZhNDM3ODk1ZTI3MGE=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lTRg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEVsKSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA2wAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA25mZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA2uuFHrhR7</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA21wo9cKPX</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA0xR64UeuF</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAFaGA==</field><field name="id" class="java.lang.String">rO0ABXQAEDU1ZTU1NWEzNWY0ZDVhZmM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFtJAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM1MDI=</field><field name="title" class="java.lang.String">rO0ABXQAQEdvbGQgQmVmdWRkbGVzIEJlcm5hbmtlIGFzIENlbnRyYWwgQmFua3MnIExvc3NlcyBhdCAkNTQ1IEJpbGxpb24=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGRSUSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGE1YTE1MDQyODBhOTc5NGQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABVNDR0xZ</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGWb6CAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlD1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlGZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkvXCj1wo9</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkvXCj1wo9</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkPXCj1wo9</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAHbyA==</field><field name="id" class="java.lang.String">rO0ABXQAEDNkZTU4YjQzMzA1NTFmZDQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mITOAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDcxNjE=</field><field name="title" class="java.lang.String">rO0ABXQAN0phcGFuJ3MgU2hvY2sgVGhlcmFweSBSaXNrcyBEaXN0dXJiaW5nIEVtZXJnaW5nIE1hcmtldHM=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4q9oiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGUxZWQ1YzI3ZTM5YjExNWQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lQQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4wHOSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7HCj1wo9c</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7HCj1wo9c</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7HCj1wo9c</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7HCj1wo9c</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4LhR64Ueu</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGJkNTRhZjE5ZTVhMWRmMmM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHUiAAAA==</field></document></documents><date>2015-05-07T12:06:36-0500</date></cacheEntry>
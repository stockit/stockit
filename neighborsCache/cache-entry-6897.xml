<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0EU9UaGUgYXJjaCByaXZhbCBvZiBBcHBsZSBJbmMgZHJldyBvbiBpdHMgNTAgYmlsbGlvbiBjYXNoIHBpbGUgdG8gbWFyayAyMCB5ZWFycyBvZiB0cmFuc2Zvcm1hdGlvbiBpbnRvIEFzaWFzIG1vc3QgdmFsdWFibGUgY29tcGFueSAganVzdCB0d28gbW9udGhzIGFmdGVyIGludmVzdG9ycyBjcml0aWNpemVkIGl0IGZvciBub3Qgc3BlbmRpbmcgZW5vdWdoIHRvIGluY3JlYXNlIGl0cyBkaXZpZGVuZCB5aWVsZCBUaGUgYm9udXMgdG8gY29tbWVtb3JhdGUgQ2hhaXJtYW4gTGVlIEt1bmhlZXMgTmV3IE1hbmFnZW1lbnQgc3RyYXRlZ3kgaGl0IE9jdG9iZXJEZWNlbWJlciBvcGVyYXRpbmcgcHJvZml0IHdoaWNoIFNhbXN1bmcgc2FpZCBsaWtlbHkgZmVsbCA2IHBlcmNlbnQgb24geWVhciBhbmQgMTggcGVyY2VudCBmcm9tIGEgcmVjb3JkIHRoaXJkIHF1YXJ0ZXIgdG8gODMgdHJpbGxpb24gd29uIDc4IGJpbGxpb24gSW5pdGlhbCBzdHJlZXQgZXN0aW1hdGVzIHB1dCB0aGUgYm9udXMgYXQgMzAwIGJpbGxpb24gdG8gNzAwIGJpbGxpb24gd29uIGJ1dCB0aGUgZXh0ZW50IG9mIHRoZSBwcm9maXQgZGVjbGluZSBpbmRpY2F0ZWQgYSBwYXlvdXQgY2xvc2VyIHRvIDEgdHJpbGxpb24gd29uIG9yIGFuIGF2ZXJhZ2UgNDAwMCBmb3IgZWFjaCBvZiB0aGUgY29tcGFueXMgMjQwMDAwIGVtcGxveWVlcyBhbmFseXN0cyBzYXkgVGhhdCBpcyBsaWtlbHkgdG8gaGF2ZSBzZW50IGZvdXJ0aHF1YXJ0ZXIgcHJvZml0IGJlbG93IGV2ZW4gdGhlIG1vc3QgYmVhcmlzaCBmb3JlY2FzdCBhbW9uZyAyMyBwb2xsZWQgYW5hbHlzdHMgb2YgODggdHJpbGxpb24gd29uIHRvIHRoZSBsb3dlc3QgbGV2ZWwgc2luY2UgdGhlIDgxIHRyaWxsaW9uIHdvbiBvZiBKdWx5U2VwdGVtYmVyIDIwMTIgVGhpcyBib251cyBjb3VsZCBpbmNyZWFzZSBwcmVzc3VyZSBmcm9tIHNvbWUgc2hhcmVob2xkZXJzIHRvIHJhaXNlIHNoYXJlaG9sZGVyIHJldHVybnMgYW5kIEkgYWxzbyBkbyBoYXZlIHNvbWUgaG9wZXMgZm9yIG1vcmUgcGF5b3V0IGVpdGhlciBpbiB0aGUgZm9ybSBvZiBhIHNoYXJlIGJ1eWJhY2sgb3IgZGl2aWRlbmRzIHNhaWQgS2ltIEt5dW5neW9vbiBoZWFkIG9mIGVxdWl0aWVzIG1hbmFnZW1lbnQgYXQgS3lvYm8gQXhhIEludmVzdG1lbnQgTWFuYWdlcnMgd2hpY2ggb3ducyBTYW1zdW5nIHNoYXJlcyBMaWtlIG1vc3QgU291dGggS29yZWFuIGNvbXBhbmllcyBTYW1zdW5nIGhhcyBrZXB0IGl0cyBkaXZpZGVuZCB5aWVsZCBsb3cgYXQgYXJvdW5kIDEgcGVyY2VudCBvciBsZXNzIHdoaWNoIGlzIGEgcHJpbWFyeSByZWFzb24gaXRzIHNoYXJlcyBhcmUgbm90IGFzIHZhbHVhYmxlIGFzIGdsb2JhbCBwZWVycyBXZSBhcmUgbm90IGFnYWluc3QgcGF5aW5nIGJvbnVzZXMgdG8gd29ya2VycyBidXQgYXQgbGVhc3QgdGhlIHNoYXJlaG9sZGVycyBzaG91bGQgZ2V0IGFzIG11Y2ggc2FpZCBNYXJrIE1vYml1cyBleGVjdXRpdmUgY2hhaXJtYW4gb2YgVGVtcGxldG9uIEVtZXJnaW5nIE1hcmtldHMgR3JvdXAgVGhleSBzaG91bGQgcmVhbGx5IGNlbGVicmF0ZSB0aGUgZXZlbnQgd2l0aCBhIGJpZyBib251cyBhIGJpZ2dlciBkaXZpZGVuZCB3aGljaCBtYXkgaGFwcGVuIFNhbXN1bmcgc2hhcmVzIHNhdyB0aGVpciBmaXJzdCBhbm51YWwgZGVjbGluZSBpbiAyMDEzIGluIGZpdmUgeWVhcnMgcGFydGx5IGR1ZSB0byB0aGUgY29tcGFueXMgY29uc2VydmF0aXZlIHNoYXJlaG9sZGVyIHJldHVybiBwb2xpY3kgZGVzcGl0ZSBvcGVyYXRpbmcgcHJvZml0IGxpa2VseSBncm93aW5nIDI4IHBlcmNlbnQgdG8gYSByZWNvcmQgMzY4IHRyaWxsaW9uIHdvbiBUaGV5IGNsb3NlZCBkb3duIDAyIHBlcmNlbnQgb24gVHVlc2RheSB2ZXJzdXMgYSAwMyBwZXJjZW50IHJpc2UgaW4gdGhlIGJyb2FkZXIgbWFya2V0IFJldHVybnMgZXF1YWwgYXJvdW5kIDUxIHBlcmNlbnQgb2YgcHJvZml0IHRoZSBsb3dlc3Qgc2luY2UgMjAwNyB3aGVuIFNhbXN1bmcgbGFzdCBib3VnaHQgYmFjayBzaGFyZXMgYXQgd2hpY2ggdGltZSBpdHMgcmF0ZSBvZiByZXR1cm4gd2FzIDE1OCBwZXJjZW50IE5PIFRSQU5TUEFSRU5DWSBMZWUgd2hvIHRvb2sgb3ZlciBTYW1zdW5nIEdyb3VwIGluIDE5ODcgZnJvbSBoaXMgZm91bmRlcmZhdGhlciBpbiAxOTkzIG9yZGVyZWQgbGlldXRlbmFudHMgdG8gY2hhbmdlIGV2ZXJ5dGhpbmcgZXhjZXB0IHlvdXIgd2lmZSBhbmQgY2hpbGRyZW4gdG8gdHJhbnNmb3JtIFNhbXN1bmcgRWxlY3Ryb25pY3MgZnJvbSBhIG1pZHRpZXIgdGVsZXZpc2lvbiBzZXQgbWFudWZhY3R1cmVyIGludG8gYSBnbG9iYWwgdGVjaG5vbG9neSBsZWFkZXIgSXQgaGFzIHNpbmNlIG92ZXJ0YWtlbiBTb255IENvcnAgaW4gVFZzIE5va2lhIE95aiAgaW4gbW9iaWxlIHBob25lcyBhbmQgQXBwbGUgaW4gc21hcnRwaG9uZXMgTGVlIHdobyB0dXJucyA3MiB0aGlzIHdlZWsgc2V0IHRoZSBhZ2VuZGEgZm9yIHRoZSBmdXR1cmUgaW4gaGlzIE5ldyBZZWFyIHNwZWVjaCBieSBzdHJlc3NpbmcgdGhlIG5lZWQgdG8gZHJvcCBhIGhhcmR3YXJlY2VudHJpYyBjdWx0dXJlIGFuZCBhZG9wdCBuZXcgd2F5cyBvZiB0aGlua2luZyB0byBzdGltdWxhdGUgaW5ub3ZhdGlvbiBJbiB0aGVvcnkgdGhpcyBib251cyBoYXMgbm90aGluZyB0byBkbyB3aXRoIFNhbXN1bmdzIGVub3Jtb3VzIHByb2ZpdCBhbmQgd2lsbCBub3QgYmUgcmVwZWF0ZWQgYWx0aG91Z2ggdGhlcmUgaXMgbm8gdHJhbnNwYXJlbmN5IG9uIHRoaXMgaXNzdWUgYW5kIHNvIG5vIGd1YXJhbnRlZXMgQ0xTQSBhbmFseXN0IE1hdHQgRXZhbnMgc2FpZCBpbiBhIG5vdGUgV2hldGhlciBzaGFyZWhvbGRlcnMgd2lsbCByZWNlaXZlIGFueSBzaW1pbGFyIGJvbnVzIGluIHRoZSBmb3JtIG9mIGEgbWVhbmluZ2Z1bCBkaXZpZGVuZCBvciBzaGFyZSBidXliYWNrIHJlbWFpbnMgdG8gYmUgc2VlbiBIb3dldmVyIHRoaXMgYW5hbHlzdCBpcyBub3QgaG9sZGluZyBoaXMgYnJlYXRoIGFzIE1BcyBhcmUgYSBtb3JlIGxpa2VseSB3YXkgb2YgdXNpbmcgaXRzIGNhc2ggcmVzZXJ2ZXMgS29yZWFuIGNvbXBhbmllcyBvZnRlbiB0b3AgdXAgbG93IHNhbGFyaWVzIHdpdGggYm9udXNlcyBTYW1zdW5nIEVsZWN0cm9uaWNzIGdpdmVzIHVwIHRvIDUwIHBlcmNlbnQgb2YgYW5udWFsIHNhbGFyeSBieSByZXR1cm5pbmcgMjAgcGVyY2VudCBvZiBwcm9maXQgdGhhdCBleGNlZWRzIHRhcmdldHMgSXQgYWxzbyBvZmZlcnMgdXAgdG8gMTAwIHBlcmNlbnQgb2YgYmFzaWMgbW9udGhseSBzYWxhcnkgdG8gZW1wbG95ZWVzIGluIHVuaXRzIHdoaWNoIGFjaGlldmUgdGFyZ2V0cyBTTUFSVFBIT05FIFNBTEVTIEZvdXJ0aHF1YXJ0ZXIgZWFybmluZ3Mgd2VyZSBhbHNvIGxpa2VseSBhZmZlY3RlZCBieSBTYW1zdW5ncyBmbGFnc2hpcCBHYWxheHkgUyBhbmQgTm90ZSBzbWFydHBob25lcyBsb3Npbmcgb3V0IHNvbWV3aGF0IHRvIEFwcGxlcyBpUGhvbmUgaW4gcHJpbWFyeSBtYXJrZXRzIHN1Y2ggYXMgdGhlIFVuaXRlZCBTdGF0ZXMgYW5kIEphcGFuIGR1cmluZyB0aGUgeWVhcmVuZCBob2xpZGF5IHNlYXNvbiBUaGUgY29tcGFueSBhaGVhZCBvZiByZWxlYXNpbmcgZmluYWwgZmlndXJlcyBvbiBKYW4gMjQgZXN0aW1hdGVkIGZvdXJ0aHF1YXJ0ZXIgc2FsZXMgb2YgNTkgdHJpbGxpb24gd29uIFRoaXMgY29tcGFyZWQgd2l0aCB0aGUgNjEgdHJpbGxpb24gd29uIFRob21zb24gUmV1dGVycyBTdGFybWluZSBTbWFydEVzdGltYXRlIG9mIDIzIGFuYWx5c3RzIHdoaWNoIGdpdmVzIGdyZWF0ZXIgd2VpZ2h0aW5nIHRvIHRoZSBtb3JlIGFjY3VyYXRlIGFuYWx5c3RzIEV2ZW4gdGFraW5nIGludG8gYWNjb3VudCBvbmVvZmYgY29zdHMgdGhlIGZvdXJ0aHF1YXJ0ZXIgcHJvZml0IGlzIGxvd2VyIHRoYW4gZXhwZWN0ZWQgU2Ftc3VuZyBoYXMgbm90IHByb3ZpZGVkIGRldGFpbHMgYnV0IHNtYXJ0cGhvbmUgcHJvZml0IG1heSBoYXZlIGZhcmVkIHdvcnNlIHRoYW4gZXhwZWN0ZWQgZ2l2ZW4gaW5jcmVhc2VkIG1hcmtldGluZyBleHBlbnNlcyBzYWlkIElCSyBJbnZlc3RtZW50ICBTZWN1cml0aWVzIGFuYWx5c3QgTGVlIFNldW5nd29vIFNhbXN1bmcgaXMgYnJhY2luZyBpdHNlbGYgZm9yIGl0cyB0b3VnaGVzdCB5ZWFyIGF0IGl0cyBtb2JpbGUgZGV2aWNlcyBkaXZpc2lvbiBzaW5jZSBpdCBzdGFydGVkIG1ha2luZyBzbWFydHBob25lcyBpbiAyMDA3IGFzIEFwcGxlIHJhaXNlcyBpdHMgQ2hpbmEgcHJlc2VuY2UgYW5kIGZpZ2h0cyBiYWNrIHdpdGggbGFyZ2Vyc2NyZWVuIG9mZmVyaW5ncyBBbmFseXN0cyBlc3RpbWF0ZSAyMDE0IHByb2ZpdCBncm93dGggYXQgaXRzIG1vYmlsZSBhcm0gdG8gcmFuZ2UgZnJvbSBsb3cgc2luZ2xlIGRpZ2l0IHRvIG1pbGQgY29udHJhY3Rpb24gYWZ0ZXIgZ3Jvd2luZyBlaWdodCB0aW1lcyBvdmVyIHRoZSBwYXN0IGZpdmUgeWVhcnN0AARyb3dzdXEAfgAKAAAAAXQAATV0AAVzdGFydHVxAH4ACgAAAAF0AAEwdAACZmx1cQB+AAoAAAABdABvYXJ0aWNsZUlkLHRpdGxlLGNvbnRlbnQsZGF0ZSxzdG9ja0hpc3RvcnlJZCxzeW1ib2wsaGlzdG9yeURhdGUsb3BlbixoaWdoLGxvdyxjbG9zZSxhZGpDbG9zZSx2b2x1bWUsaWQsX3ZlcnNpb25fdAACZnF1cQB+AAoAAAABdAA6aGlzdG9yeURhdGU6WzIwMTMtMDMtMjdUMDA6MDA6MDBaIFRPIDIwMTMtMTItMDNUNTk6NTk6NTlaXXgAcA==</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTE3MzM2</field><field name="title" class="java.lang.String">rO0ABXQAOEhpZ2gtRW5kIFNtYXJ0cGhvbmUgQm9vbSBFbmRpbmcgYXMgUHJpY2UgRHJvcCBIaXRzIEFwcGxl</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT//mTyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDRiYjg3ZmEzOWE2OWRlMjg=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0FCSQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUAEv5iAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/seuFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/seuFHrhR7</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/seuFHrhR7</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/seuFHrhR7</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/seuFHrhR7</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGUzNjgxMmMxNGFjNTMxMGY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mLPiAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE3NDY1</field><field name="title" class="java.lang.String">rO0ABXQANkJsYWNrQmVycnkgSW52ZXN0b3JzIHRvIFR1cm4gdXAgdGhlIEhlYXQgb24gTWFuYWdlbWVudA==</field><field name="content" class="java.lang.String">rO0ABXQOs0JsYWNrQmVycnkgIHdpbGwgbGlrZWx5IGZhY2UgdG91Z2ggcXVlc3Rpb25zIGFib3V0IGl0cyBmdXR1cmUgYXQgaXRzIGFubnVhbCBtZWV0aW5nIG9uIFR1ZXNkYXkgYWZ0ZXIgZGlzbWFsIHF1YXJ0ZXJseSByZXN1bHRzIGxhc3Qgd2VlayB0cmlnZ2VyZWQgYSAyOCBwZXJjZW50IHBsdW5nZSBpbiB0aGUgQ2FuYWRpYW4gc21hcnRwaG9uZSBtYWtlcidzIHNoYXJlIHByaWNlLiBTYWxlcyBvZiBCbGFja0JlcnJ5J3MgbWFrZS1vci1icmVhayBuZXcgbGluZSBvZiBzbWFydHBob25lcyBpbiB0aGUgcXVhcnRlciBlbmRlZCBKdW5lIDEgY2FtZSBpbiB3ZWxsIGJlbG93IGFuYWx5c3RzJyBleHBlY3RhdGlvbnMgYW5kIG9mZmVyZWQgbGl0dGxlIGV2aWRlbmNlIHRoYXQgdGhlIGNvbXBhbnkgY2FuIHF1aWNrbHkgd2luIGJhY2sgbWFya2V0IHNoYXJlIGZyb20gQXBwbGUgSW5jJ3MgaVBob25lLCBTYW1zdW5nJ3MgR2FsYXh5IGRldmljZXMsIGFuZCBvdGhlciBwaG9uZXMgcG93ZXJlZCBieSBHb29nbGUgSW5jJ3MgQW5kcm9pZCBvcGVyYXRpbmcgc3lzdGVtLiAiVGhlIHJlc3VsdHMgd2VyZSBhIHF1YXNpIGRlYXRoIGtuZWxsIGZvciBCbGFja0JlcnJ5LCIgc2FpZCBKb2huIEdvbGRzbWl0aCwgdGhlIGRlcHV0eSBoZWFkIG9mIGVxdWl0aWVzIGF0IE1vbnRydXNjbyBCb2x0b24sIHdoaWNoIG93bnMgbW9yZSB0aGFuIDEuNSBtaWxsaW9uIEJsYWNrQmVycnkgc2hhcmVzLiAiVGhlIHNoYXJlIG1vdmUgbGFzdCB3ZWVrIHdhcyB2ZXJ5IHZpb2xlbnQuIEkgdGhpbmsgeW91IGFyZSBnb2luZyB0byBnZXQgcGVvcGxlIHN0YW5kaW5nIHVwIGFuZCBtYWtpbmcgdGhlaXIgdm9pY2VzIGhlYXJkIGF0IHRoZSBBR00uIiBCbGFja0JlcnJ5IGhhcyBmb3JlY2FzdCBhbm90aGVyIG9wZXJhdGluZyBsb3NzIGZvciB0aGUgY3VycmVudCBxdWFydGVyLCBidXQgQ2hpZWYgRXhlY3V0aXZlIFRob3JzdGVuIEhlaW5zIHNhaWQgdGhlIGNvbXBhbnkgaXMgb24gdGhlIHJpZ2h0IHRyYWNrIGFuZCBqdXN0IG5lZWRzIG1vcmUgdGltZS4gIlRoaXMgaXMgYSB5ZWFyIG9mIGludmVzdG1lbnQuIFdlIGhhdmUgbWFuYWdlZCBvdXIgY2FzaCBjYXJlZnVsbHkgYW5kIHBydWRlbnRseSwgYW5kIHdlIG5vdyBoYXZlIHRoZSBmdW5kcyB0byBpbnZlc3QsIHNvIHRoaXMgaXMgdGhlICdjcmVhdGUgdGhlIGZ1dHVyZScgeWVhciwiIEhlaW5zIHRvbGQgUmV1dGVycy4gU29tZSBpbnZlc3RvcnMgc2F5IEJsYWNrQmVycnkgbXVzdCBub3cgbG9vayBhdCBhbGwgaXRzIG9wdGlvbnMsIGZyb20gYSBzYWxlIG9mIHRoZSB3aG9sZSBjb21wYW55IHRvIGEgc2FsZSBvZiBwYXJ0cy4gSXRzIHZhbHVhYmxlIHBhdGVudCBwb3J0Zm9saW8gYW5kIGhpZ2gtbWFyZ2luIHNlcnZpY2VzIGJ1c2luZXNzIGNvdWxkIGRyYXcgaW50ZXJlc3QgZnJvbSB0ZWNobm9sb2d5IGNvbXBhbmllcywgYWNjb3JkaW5nIHRvIGJhbmtlcnMgYW5kIGludmVzdG9ycy4gSW50ZXJlc3QgZnJvbSBwcml2YXRlIGVxdWl0eSBpcyBzZWVuIHRvIGJlIHdlYWssIGhvd2V2ZXIsIGFuZCBzb21lIGludmVzdG9ycyBzYWlkIHRoZXkgZmVhciB0aGF0IEJsYWNrQmVycnkgd2lsbCBvbmx5IGxvc2UgbW9yZSB2YWx1ZSBpZiBpdCBrZWVwcyBwb3N0aW5nIGxvc3NlcywgYnVybmluZyB0aHJvdWdoIGNhc2ggYW5kIGJsZWVkaW5nIHN1YnNjcmliZXJzLiAiSSB0aGluayB0aGUgcGllY2VzIHdlcmUgd29ydGggbW9yZSB0aGFuIHRoZSB3aG9sZSBhIHllYXIgb3IgdHdvIGFnbywgYnV0IHRoYXQncyBiZWNvbWluZyBsZXNzIG9mIGEgY29udmluY2luZyBhcmd1bWVudCBhbmQgSSBhbSBub3Qgc3VyZSBpdCBpcyB0cnVlLCIgc2FpZCBvbmUgZnVuZCBtYW5hZ2VyLCB3aG9zZSBmaXJtIGlzIG9uZSBvZiBCbGFja0JlcnJ5J3MgdG9wIDIwIHNoYXJlaG9sZGVycy4gVGhlIG1hbmFnZXIgZGVjbGluZWQgdG8gYmUgaWRlbnRpZmllZCwgY2l0aW5nIHRvIGhpcyBmaXJtJ3MgcG9saWN5LiBPdHRhd2EgcmV2aWV3cyBhbnkgYmlnIHRha2VvdmVyIG9mIGEgQ2FuYWRpYW4gY29tcGFueSBmb3IgY29tcGV0aXRpdmUgYW5kIG5hdGlvbmFsIHNlY3VyaXR5IHJlYXNvbnMuIEdvdmVybm1lbnQgb2ZmaWNpYWxzIGhhdmUgb2Z0ZW4gc2FpZCB0aGV5IHdhbnQgQmxhY2tCZXJyeSB0byBzdWNjZWVkIGFzIGEgQ2FuYWRpYW4gY29tcGFueSwgYnV0IGNvbmNlZGUgdGhleSBkbyBub3Qga25vdyBob3cgdGhpbmdzIHdpbGwgcGxheSBvdXQuIEdpdmVuIHRoZSB1bmNlcnRhaW50eSBhYm91dCBpdHMgdHVybmFyb3VuZCBwcm9zcGVjdHMsIGEgZm9yZWlnbiBiaWQgZm9yIEJsYWNrQmVycnkgY291bGQgYmUgcGFsYXRhYmxlIHRvIENhbmFkaWFuIHJlZ3VsYXRvcnMsIHNvbWUgc2hhcmVob2xkZXJzIHNheS4gUFJPU1BFQ1RTIFRISU5OSU5HIEhlaW5zIHNhaWQgQmxhY2tCZXJyeSBpcyBkZXRlcm1pbmVkIHRvIHN0aWNrIHRvIGl0cyBzdHJhdGVneSwgYW5kIHdpbGwgdW52ZWlsIG1vcmUgZGV2aWNlcyB0aGF0IHJ1biBvbiBpdHMgbmV3IEJsYWNrQmVycnkgMTAgb3BlcmF0aW5nIHN5c3RlbSBvdmVyIHRoZSBuZXh0IGVpZ2h0IG1vbnRocy4gIldlIHN0YXkgdGhlIGNvdXJzZS4gVGhpcyBpcyB0aGUgY291cnNlIHRoYXQgbWFuYWdlbWVudCBoYXMgY3JlYXRlZCBhbmQgaXQgaXMgY291cnNlIHRoYXQgdGhlIGJvYXJkIGhhcyBhY2NlcHRlZCwiIGhlIHNhaWQuIEEgc291cmNlIGNsb3NlIHRvIEJsYWNrQmVycnkgc2FpZCB0aGUgc2hhcnAgZHJvcCBpbiB0aGUgY29tcGFueSdzIHNoYXJlIHByaWNlIGNvdWxkIHRyaWdnZXIgcHJlc3N1cmUgb24gdGhlIGJvYXJkIHRvIHJlLWV4YW1pbmUgaXRzIG9wdGlvbnMsIGluIHNwaXRlIG9mIHJlbHVjdGFuY2UgdG8gZG8gYSBkZWFsLiAiSXQgaXMgdGhlIGJvYXJkJ3Mgam9iIHRvIGRlYWwgd2l0aCB0aGlzIG9iamVjdGl2ZWx5LCBhbmQgd2UgaG9wZSB0aGV5IHdvdWxkIGJlIG9iamVjdGl2ZSBlbm91Z2ggdG8gZG8gdGhlIGJlc3QgdGhpbmcgZm9yIHRoZSBzaGFyZWhvbGRlcnMsIiBzYWlkIERvbiBZYWNrdG1hbiBvZiBZYWNrdG1hbiBBc3NldCBNYW5hZ2VtZW50LCBhbm90aGVyIHRvcCAyMCBpbnZlc3RvciBpbiBCbGFja0JlcnJ5LCB3aXRoIDUuOCBtaWxsaW9uIHNoYXJlcywgYWNjb3JkaW5nIHRvIFRob21zb24gUmV1dGVycyBkYXRhLiBNYW55IGludmVzdG9ycyBzYXkgQmxhY2tCZXJyeSdzIG5ldyBkZXZpY2VzIGFyZSBpbXByZXNzaXZlLCBidXQgdGhleSBmZWFyIHRoZSBjb21wYW55IGxhY2tzIHRoZSB3aGVyZXdpdGhhbCBmb3IgYSBkcmF3bi1vdXQgZmlnaHQgYWdhaW5zdCBBcHBsZSBhbmQgU2Ftc3VuZy4gQmxhY2tCZXJyeSBhbHNvIGNvbXBldGVzIGFnYWluc3QgTWljcm9zb2Z0IENvcnAgdG8gYmUgdGhlIE5vLiAzIHBsYXRmb3JtIGluIHRoZSBzbWFydHBob25lIG1hcmtldC4gIlRoZSBwcm9ibGVtIGhlcmUgaXMgdGhleSBhcmUgZmFjaW5nIEdvbGlhdGhzIGxpa2UgQXBwbGUgYW5kIFNhbXN1bmcsIGZvcmdldCBhYm91dCB0aGUgb3RoZXIgQW5kcm9pZCBkZXZpY2VzLiBXaXRoIGEgcmVzZWFyY2ggYW5kIGRldmVsb3BtZW50IGJ1ZGdldCB0aGF0IGlzIGEgZnJhY3Rpb24gb2YgdGhhdCBvZiB0aG9zZSB0d28gY29tcGFuaWVzLCBob3cgb24gZWFydGggY2FuIHRoZXkgY29tcGV0ZT8iIEdvbGRzbWl0aCBzYWlkLiAiSSBsb3ZlIGZhaXJ5IHRhbGUgZW5kaW5ncyBhcyBtdWNoIGFzIHRoZSBuZXh0IHBlcnNvbiwgYnV0IHRoaXMgaXMgRGF2aWQgdmVyc3VzIHR3byBHb2xpYXRocywgc28gZ29vZCBsdWNrLiI=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT+3gDSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGFiYTdlYWZhOWIzZDk5MGU=</field><field name="symbol" class="java.lang.String">rO0ABXQABUdPT0RQ</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT+8ppCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5TMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5TMzMzMzN</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5TMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5TMzMzMzN</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA2I9cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDY5ZGJhNGFlOGM5MzdlZTQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMtQAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIyMjY3</field><field name="title" class="java.lang.String">rO0ABXQAOlNhbXN1bmcsIFNvbnkgU2FpZCB0byBQbGFuIERldmljZSBEZWJ1dHMgQmVmb3JlIE5ldyBJUGhvbmU=</field><field name="content" class="java.lang.String">rO0ABXQS31NhbXN1bmcgRWxlY3Ryb25pY3MgQ28uIGFuZCBTb255IENvcnAuIGFyZSBzYWlkIHRvIGJlIHVudmVpbGluZyBuZXcgZGV2aWNlcyBuZXh0IG1vbnRoIGFzIHR3byBvZiBBc2lh4oCZcyBiaWdnZXN0IHRlY2hub2xvZ3kgY29tcGFuaWVzIHRyeSB0byBzaG93Y2FzZSB0aGVpciBwcm9kdWN0cyBiZWZvcmUgQXBwbGUgSW5jLiByZWxlYXNlcyBuZXcgaVBob25lcyBhbmQgaVBhZHMuIFNhbXN1bmfigJlzIEdhbGF4eSBHZWFyLCBhIHdyaXN0d2F0Y2gtbGlrZSBkZXZpY2Ugd2l0aCBmZWF0dXJlcyBvZiBhIHNtYXJ0cGhvbmUsIGFuZCBOb3RlIDMgd2lsbCBiZSBpbnRyb2R1Y2VkIFNlcHQuIDQsIGFjY29yZGluZyB0byBwZW9wbGUgZmFtaWxpYXIgd2l0aCB0aGUgbWF0dGVyLiBTb2554oCZcyBsYXRlc3QgWHBlcmlhIGhhbmRzZXQsIGZlYXR1cmluZyBpbWFnaW5nIHNlbnNvcnMgdXNlZCBpbiBpdHMgVFZzIGFuZCBjYW1lcmFzLCB3aWxsIGJlIHVudmVpbGVkIHRoZSBzYW1lIGRheSwgdHdvIG90aGVyIHBlb3BsZSBzYWlkLiBTYW1zdW5nIGFuZCBTb255IGFyZSBpbnRyb2R1Y2luZyB0aGVpciBkZXZpY2VzIGZvciB0aGUgaG9saWRheSBzaG9wcGluZyBzZWFzb24gYXMgdGhleSB0cnkgdG8gc3RlYWwgYSBtYXJjaCBvbiBBcHBsZSwgd2hpY2ggaGFzIHByb21pc2VkIOKAnHNldmVyYWwgbW9yZSBnYW1lIGNoYW5nZXJz4oCdIGluIHRoZSBwcm9kdWN0IHBpcGVsaW5lLiBBcHBsZSwgd2hpY2ggaGFzbuKAmXQgcmVsZWFzZWQgYSBuZXcgaGFuZHNldCB0aGlzIHllYXIsIHBsYW5zIHRvIGludHJvZHVjZSBuZXcgdmVyc2lvbnMgb2YgaXRzIGlQaG9uZSBhbmQgaVBhZCBhdCBhIFNlcHQuIDEwIGV2ZW50LCBhY2NvcmRpbmcgdG8gYSBwZXJzb24gZmFtaWxpYXIgd2l0aCB0aGUgbWF0dGVyLiDigJxJdCBpcyBtZWFuaW5nZnVsIGZvciBTYW1zdW5nIHRvIGxhdW5jaCB0aGUgcHJvZHVjdCBmaXJzdCBhaGVhZCBvZiBBcHBsZSzigJ0gc2FpZCBKYW1lcyBTb25nLCBhIFNlb3VsLWJhc2VkIGFuYWx5c3QgYXQgRGFld29vIFNlY3VyaXRpZXMgQ28uIOKAnFB1dHRpbmcgbmV3IGRldmljZXMgb3V0IHRoZXJlIGFoZWFkIG9mIEFwcGxlIHdpbGwgYXQgbGVhc3QgaGF2ZSBzb21lIHBvc2l0aXZlIGxlYXBmcm9nZ2luZyBpbXBhY3Qgb24gYm90aCBjb21wYW5pZXMu4oCdIFNob3cgT3BlbmVycyBUaGUgU2Ftc3VuZyBhbmQgU29ueSBhbm5vdW5jZW1lbnRzIGFyZSBib3RoIHNjaGVkdWxlZCB0d28gZGF5cyBiZWZvcmUgdGhlIHN0YXJ0IG9mIHRoZSBJRkEgY29uc3VtZXIgZWxlY3Ryb25pY3Mgc2hvdyBpbiBCZXJsaW4uIFNhbXN1bmcgZmVsbCAwLjcgcGVyY2VudCB0byAxLDI4NiwwMDAgd29uIGluIFNlb3VsIHRyYWRpbmcsIGV4dGVuZGluZyB0aGlzIHllYXLigJlzIGRlY2xpbmUgdG8gMTYgcGVyY2VudC4gU29ueSBnYWluZWQgMC42IHBlcmNlbnQgdG8gMSw5NzUgeWVuIGluIFRva3lvIGFuZCBoYXMgZG91YmxlZCB0aGlzIHllYXIuIEFwcGxlLCB0aGUgd29ybGTigJlzIG1vc3QtdmFsdWFibGUgdGVjaG5vbG9neSBjb21wYW55LCBzZXQgdGhlIHN0YW5kYXJkIGZvciBwcm9kdWN0IGFubm91bmNlbWVudHMgdW5kZXIgZm91bmRlciBTdGV2ZSBKb2JzLCBhbmQgdGhhdCBoYXMgY29udGludWVkIHVuZGVyIENoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyIFRpbSBDb29rLiBUaGUgY29tcGFueeKAmXMgcmVsZWFzZXMgb2YgZGV2aWNlcyBpbmNsdWRpbmcgdGhlIGlQb2QsIGlQaG9uZSBhbmQgaVBhZCBnYWluZWQgZ2xvYmFsIG1lZGlhIGF0dGVudGlvbi4gQXBwbGUgZ2FpbmVkIDEuOCBwZXJjZW50IHRvICQ1MTEuNTIgYXQgMTI6MzUgcC5tLiBpbiBOZXcgWW9yay4gQXBwbGXigJlzIFBsYXlib29rIFdoZW4gU2Ftc3VuZyBpbnRyb2R1Y2VkIGl0cyBmbGFnc2hpcCBHYWxheHkgUzQgaGFuZHNldCBpbiBNYXJjaCwgdGhlIGNvbXBhbnkgdG9vayBhIHBhZ2UgZnJvbSBBcHBsZeKAmXMgYm9vayB3aXRoIGEgZ2xpdHp5IGxhdW5jaCBhdCBSYWRpbyBDaXR5IE11c2ljIEhhbGwgaW4gTmV3IFlvcmsgdGhhdCB3YXMgYWxzbyBzdHJlYW1lZCBsaXZlIHRvIHZpZGVvIHNjcmVlbnMgaW4gVGltZXMgU3F1YXJlLiBUaGUgU291dGggS29yZWFuIGNvbXBhbnkgYWxzbyBwbGFucyBhdCBsZWFzdCB0d28gb3RoZXIgaGlnaC1lbmQgaGFuZHNldHMgdGhpcyB5ZWFyLCBpbmNsdWRpbmcgYSBkZXZpY2UgdXNpbmcgdGhlIFRpemVuIG9wZXJhdGluZyBzeXN0ZW0uIFNhbXN1bmcsIHdoaWNoIG92ZXJ0b29rIEFwcGxlIGFzIHRoZSB3b3JsZOKAmXMgbGFyZ2VzdCBzbWFydHBob25lIG1ha2VyIGxhc3QgeWVhciwgbmV4dCBtb250aCB3aWxsIGludHJvZHVjZSBhIHdyaXN0d2F0Y2gtbGlrZSBkZXZpY2UgdGhhdCBjYW4gbWFrZSBwaG9uZSBjYWxscywgc3VyZiB0aGUgV2ViIGFuZCBoYW5kbGUgZS1tYWlscywgYWNjb3JkaW5nIHRvIHBlb3BsZSBmYW1pbGlhciB3aXRoIHRoZSBtYXR0ZXIgd2hvIGFza2VkIG5vdCB0byBiZSBpZGVudGlmaWVkIGJlZm9yZSBhIGZvcm1hbCBhbm5vdW5jZW1lbnQuIFRoZSBkZXZpY2Ugd2lsbCBiZSBwb3dlcmVkIGJ5IEdvb2dsZSBJbmMu4oCZcyBBbmRyb2lkIG9wZXJhdGluZyBzeXN0ZW0gYW5kIGdvIG9uIHNhbGUgdGhpcyB5ZWFyIHRvIGJlYXQgYSBwb3RlbnRpYWxseSBjb21wZXRpbmcgcHJvZHVjdCBmcm9tIEFwcGxlLCB0aGUgcGVvcGxlIHNhaWQuIFRoZSBHYWxheHkgR2VhciBiZWluZyByZWxlYXNlZCBuZXh0IG1vbnRoIHdvbuKAmXQgaGF2ZSBhIGZsZXhpYmxlIGRpc3BsYXksIHRob3VnaCB0aGUgY29tcGFueSBpcyBjb250aW51aW5nIHRvIHdvcmsgb24gZGV2ZWxvcGluZyBhIGJlbmRhYmxlIHNjcmVlbiwgb25lIHBlcnNvbiBzYWlkLiBXZWFyYWJsZSBEZXZpY2VzIFNhbXN1bmcsIEFzaWHigJlzIGJpZ2dlc3QgdGVjaG5vbG9neSBjb21wYW55LCBpcyByYWNpbmcgU29ueSBhbmQgb3RoZXIgY29tcGV0aXRvcnMgdG8gY3JlYXRlIGEgbmV3IGluZHVzdHJ5IG9mIHdlYXJhYmxlIGRldmljZXMgYXMgdGhlIG1hcmtldCBmb3IgdG9wLWVuZCBoYW5kc2V0cyBuZWFycyBzYXR1cmF0aW9uLiBUaGUgZ2xvYmFsIHdhdGNoIGluZHVzdHJ5IHdpbGwgZ2VuZXJhdGUgbW9yZSB0aGFuICQ2MCBiaWxsaW9uIGluIHNhbGVzIHRoaXMgeWVhci4g4oCcSWYgU2Ftc3VuZ+KAmXMgbmV3IHdhdGNoIGlzIHN0eWxpc2ggd2l0aCBhIGxvdCBvZiBjb29sIGFuZCDigJh3b3figJkgZmFjdG9ycywgYW5kIGFsc28gaXMgd2VsbC10ZXRoZXJlZCB3aXRoIHNtYXJ0cGhvbmVzLCBpdCBjb3VsZCBjcmVhdGUgbmV3IGRlbWFuZCzigJ0gc2FpZCBMZWUgRG8gSG9vbiwgYW4gYW5hbHlzdCBhdCBDSU1CIEdyb3VwIEhvbGRpbmdzIEJoZCBpbiBTZW91bC4g4oCcSWYgdGhlIHdhdGNoIHNlbGxzIHdlbGwsIHRoZSB1cHNpZGUgcG90ZW50aWFsIGZvciBpdHMgZWFybmluZ3Mgd2lsbCBiZSBxdWl0ZSBiaWcu4oCdIEFwcGxlIGhhZCBhIHRlYW0gb2YgYWJvdXQgMTAwIHBlb3BsZSB3b3JraW5nIG9uIGEgd2F0Y2gtbGlrZSBkZXZpY2UsIHR3byBwZW9wbGUgZmFtaWxpYXIgd2l0aCB0aGUgbWF0dGVyIHNhaWQgaW4gRmVicnVhcnkuIFRoZSBDdXBlcnRpbm8sIENhbGlmb3JuaWEtYmFzZWQgY29tcGFueSBpcyBzZWVraW5nIGEgdHJhZGVtYXJrIGZvciDigJxpV2F0Y2jigJ0gaW4gSmFwYW4uIEhpcmFp4oCZcyBQbGFuIFNvbnnigJlzIG5ldyBmbGFnc2hpcCBYcGVyaWEgc21hcnRwaG9uZSwgZGV2ZWxvcGVkIHVuZGVyIHRoZSBjb2RlbmFtZSBIb25hbWksIHdpbGwgZmVhdHVyZSBpbWFnaW5nIHRlY2hub2xvZ3kgZGV2ZWxvcGVkIGZvciBpdHMgY2FtZXJhcyBhbmQgdWx0cmEtaGlnaCBkZWZpbml0aW9uIFRWcywgYWNjb3JkaW5nIHRvIHR3byBwZW9wbGUgZmFtaWxpYXIgd2l0aCB0aGUgbWF0dGVyLiBYcGVyaWEgaGFuZHNldHMgYXJlIHBhcnQgb2YgQ0VPIEthenVvIEhpcmFp4oCZcyBwbGFuIHRvIHJldml2ZSBTb255IHdpdGggc21hcnRwaG9uZXMsIFRWcyBhbmQgZ2FtZSBjb25zb2xlcyB0aGF0IGNvbm5lY3Qgd2l0aCB0aGUgY29tcGFueeKAmXMgZW50ZXJ0YWlubWVudCBjb250ZW50LiBUbyBsdXJlIGN1c3RvbWVycyBmcm9tIEFwcGxlIGFuZCBTYW1zdW5nLCB0aGUgVG9reW8tYmFzZWQgY29tcGFueSBpcyB1c2luZyDigJxYLSBSZWFsaXR54oCdIHBpY3R1cmUtZW5oYW5jZW1lbnQgY2hpcHMgZGV2ZWxvcGVkIGZvciBUVnMgYW5kIHNlbnNvcnMgZm9yIEN5YmVyLXNob3QgY2FtZXJhcywgdGhlIHBlb3BsZSBzYWlkLiBZdSBUb21pbmFnYSwgYSBUb2t5by1iYXNlZCBzcG9rZXNtYW4sIGRlY2xpbmVkIHRvIGNvbW1lbnQgb24gd2hldGhlciBhIG5ldyBYcGVyaWEgbW9kZWwgd2lsbCBiZSBpbnRyb2R1Y2VkIGJlZm9yZSB0aGUgSUZBIHNob3cuIEJpbGxpb25haXJlIERhbmllbCBMb2ViLCB3aG9zZSBUaGlyZCBQb2ludCBMTEMgY29udHJvbHMgZnVuZHMgdGhhdCBvd24gYWJvdXQgNi45IHBlcmNlbnQgb2YgU29ueSwgY2l0ZWQgSG9uYW1pIGFuZCBvdGhlciBwcm9kdWN0cyBhcyB3YXlzIGZvciBTb255IHRvIGdhaW4gbWFya2V0IHNoYXJlLCBhY2NvcmRpbmcgdG8gYSBKdWx5IDI5IGxldHRlciB0byBpbnZlc3RvcnMuIFNvbnkgdGhpcyBtb250aCByZWplY3RlZCBMb2Vi4oCZcyBwdXNoIGZvciBhIHBhcnRpYWwgc2FsZSBvZiBpdHMgZW50ZXJ0YWlubWVudCBhc3NldHMsIHdpdGggSGlyYWkgY2l0aW5nIGdyb3dpbmcgWHBlcmlhIHNhbGVzIGZvciB0aGUgY29tcGFueeKAmXMgZGVjaXNpb24uIFRoZSBjb21wYW55IGV4cGVjdHMgdG8gc2VsbCA0MiBtaWxsaW9uIHNtYXJ0cGhvbmVzIHRoaXMgeWVhciwgaXQgc2FpZC4gSUZBIHJ1bnMgU2VwdC4gNi0xMS4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUCU8aiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDYzNjI3MWViOWZiM2E1OGY=</field><field name="symbol" class="java.lang.String">rO0ABXQABEdBTUU=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUCaGASAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEASmZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEATZmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEASFHrhR64U</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEASHrhR64Uf</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEASHrhR64Uf</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAB4XhA==</field><field name="id" class="java.lang.String">rO0ABXQAEGZhNGIwOGQ4YjJkNTdlM2I=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHgWAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIxMjg1</field><field name="title" class="java.lang.String">rO0ABXQAOUFwcGxlIEltcG9ydCBCYW4gb24gT2xkIGlQaG9uZXMgU3Rva2VzIFNhbXN1bmcgUGF0ZW50IFdhcg==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8StLSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDhmNzJiNTYwODg1NGRkOGE=</field><field name="symbol" class="java.lang.String">rO0ABXQACUhPVC1VTi5UTw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8X2xCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlZmZmZmZm</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAmAAAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlZmZmZmZm</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAmAAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAi1wo9cKPX</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABH4A==</field><field name="id" class="java.lang.String">rO0ABXQAEDhmYzdlMjE2OWNlMDlhYzE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mM5YAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExNTQ5</field><field name="title" class="java.lang.String">rO0ABXQAP1dhbGwgU3RyZWV0J3MgUmFsbHkgTWF0Y2hlcyAxOTkwcyDigJMgd2l0aCBWYWx1YXRpb25zIDI4JSBMb3dlcg==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6XHBSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGNlODRhMmIwNTMyMGI2MDQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAAk1O</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6cQnCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAysKPXCj1x</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzZmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAysKPXCj1x</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzT1wo9cKP</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxz1wo9cKP</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAGUTA==</field><field name="id" class="java.lang.String">rO0ABXQAEDJkZjgwZDJjYzNiZGY3MTA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFC9AAAA==</field></document></documents><date>2015-05-07T05:39:11-0500</date></cacheEntry>
<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0EM5Bc2lhbiBzdG9ja3MgZmVsbCB3aXRoIHRoZSByZWdpb25hbCBlcXVpdGllcyBiZW5jaG1hcmsgaW5kZXggaGVhZGVkIGZvciBpdHMgYmlnZ2VzdCBkcm9wIGluIHNldmVuIHdlZWtzIHdpdGggSmFwYW5lc2Ugc2hhcmVzIGRlY2xpbmluZyBhcyB0aGUgeWVuIG1haW50YWluZWQgZ2FpbnMgYW5kIGFtaWQgbW91bnRpbmcgY29uY2VybiBDaGluYXMgZWNvbm9teSBpcyBzbG93aW5nIFBhbmFzb25pYyBDb3JwIGEgSmFwYW5lc2UgY29uc3VtZXIgZWxlY3Ryb25pY3MgY29tcGFueSB0aGF0IGdldHMgaGFsZiBpdHMgcmV2ZW51ZSBvdmVyc2VhcyBkcm9wcGVkIDI4IHBlcmNlbnQgU29mdEJhbmsgQ29ycCB3aGljaCBvd25zIHN0YWtlIGEgaW4gQWxpYmFiYSBHcm91cCBIb2xkaW5nIEx0ZCBzbGlkIDM4IHBlcmNlbnQgYWZ0ZXIgdGhlIENoaW5lc2UgZWNvbW1lcmNlIGNvbXBhbnkgZmlsZWQgZm9yIGEgVVMgaW5pdGlhbCBwdWJsaWMgb2ZmZXJpbmcgR2lvcmRhbm8gSW50ZXJuYXRpb25hbCBMdGQgZmVsbCAxNSBwZXJjZW50IGluIEhvbmcgS29uZyBhZnRlciB0aGUgY2xvdGhpZXIgZm9yZWNhc3QgbG93ZXIgcHJvZml0IEx5bmFzIENvcnAgd2hpY2ggc2FpZCBpdCBwbGFucyB0byBkZWZlciBzb21lIGRlYnQgcmVwYXltZW50cyBhbmQgc2VsbCBzaGFyZXMgbG9zdCA4MyBwZXJjZW50IHRvIGV4dGVuZCB0aGlzIHdlZWtzIGRlY2xpbmUgaW4gU3lkbmV5IFRoZSBNU0NJIEFzaWEgUGFjaWZpYyBJbmRleCBmZWxsIDEzIHBlcmNlbnQgdG8gMTM3MTIgYXMgb2YgMTE1OCBhbSBpbiBUb2t5byB3aXRoIGFsbCAxMCBpbmR1c3RyeSBncm91cHMgb24gdGhlIGdhdWdlIGZhbGxpbmcgYXMgbWFya2V0cyBpbiBKYXBhbiBIb25nIEtvbmcgYW5kIFNvdXRoIEtvcmVhIHJlb3BlbmVkIGZvbGxvd2luZyBob2xpZGF5cyBKYXBhbiBhbmQgSG9uZyBLb25nIGVxdWl0aWVzIGhhdmUgcG9zdGVkIHRoZSBsYXJnZXN0IGRlY2xpbmVzIHRoaXMgeWVhciBhbW9uZyAyNCBkZXZlbG9wZWQgbWFya2V0cyB0cmFja2VkIGJ5IEJsb29tYmVyZyBhcyB0aGUgeWVuIHN0cmVuZ3RoZW5lZCBhbmQgY29uY2VybiBncmV3IHRoYXQgQ2hpbmVzZSBlY29ub21pYyBncm93dGggaXMgc2xvd2luZyBJbnZlc3RvcnMgbmVlZCB0byByZW1haW4gY2F1dGlvdXMgTWF0dGhldyBTaGVyd29vZCBTeWRuZXliYXNlZCBoZWFkIG9mIGludmVzdG1lbnQgbWFya2V0cyByZXNlYXJjaCBhdCBQZXJwZXR1YWwgTHRkIHdoaWNoIG1hbmFnZXMgYWJvdXQgMjkgYmlsbGlvbiBzYWlkIGluIGFuIGVtYWlsIFRoZXkgaGF2ZSBkZWNpZGVkIHRvIHRha2Ugc29tZSBwcm9maXRzIGluIHRoZSB3YWtlIG9mIHJlY2VudCB1cGJlYXQgc2VudGltZW50IFRoZSBVUyB0cmFkZSBkZWZpY2l0IG5hcnJvd2VkIGluIE1hcmNoIGFzIGV4cG9ydHMgZ3JldyBieSB0aGUgbW9zdCBpbiBuaW5lIG1vbnRocyB0aGUgQ29tbWVyY2UgRGVwYXJ0bWVudCByZXBvcnRlZCBBIFB1cmNoYXNpbmcgTWFuYWdlcnMgSW5kZXggZm9yIHNlcnZpY2VzIGluIHRoZSBldXJvIHJlZ2lvbiBjbGltYmVkIHRvIDUzMSBpbiBBcHJpbCBmcm9tIDUyMiBpbiBNYXJjaCBNYXJraXQgRWNvbm9taWNzIHNhaWQgWWVsbGVuIFRlc3RpbW9ueSBGZWRlcmFsIFJlc2VydmUgQ2hhaXIgSmFuZXQgWWVsbGVuIGlzIGR1ZSB0byB0ZXN0aWZ5IHRvIGxhd21ha2VycyB0b2RheSBhZnRlciB0aGUgVVMgY2VudHJhbCBiYW5rIHByZXNzZWQgYWhlYWQgQXByaWwgMzAgd2l0aCByZWR1Y3Rpb25zIHRvIGl0cyBtb250aGx5IGJvbmQgYnV5aW5nIHdoaWxlIGhvbGRpbmcgaXRzIHNob3J0dGVybSBpbnRlcmVzdCByYXRlIHRhcmdldCBhdCBuZWFyIHplcm8gSmFwYW5zIFRvcGl4IGluZGV4IHNsaWQgMjIgcGVyY2VudCBhcyB0aGUgeWVuIHRyYWRlZCBhdCAxMDE2MCBhZnRlciBzdHJlbmd0aGVuaW5nIHRvIGEgdGhyZWV3ZWVrIGhpZ2ggVHVlc2RheSBNb3N0IG1lbWJlcnMgb2YgdGhlIEJhbmsgb2YgSmFwYW4gYWdyZWVkIHRvIGtlZXAgZWFzaW5nIG1vbmV0YXJ5IHBvbGljeSB1bnRpbCBpbmZsYXRpb24gc3RhYmlsaXplcyBhdCAyIHBlcmNlbnQgYWNjb3JkaW5nIHRvIG1pbnV0ZXMgb2YgdGhlIEFwcmlsIDc4IHBvbGljeSBtZWV0aW5nIHJlbGVhc2VkIFdlZG5lc2RheSBJZGVtaXRzdSBLb3NhbiBDbyBhbiBvaWwgcmVmaW5lciB0dW1ibGVkIDUgcGVyY2VudCB0byAyMTI3IHllbiBpbiBUb2t5byBhZnRlciBmb3JlY2FzdGluZyBuZXQgaW5jb21lIHRoYXQgdHJhaWxlZCBlc3RpbWF0ZXMgUmVnaW9uYWwgR2F1Z2VzIEhvbmcgS29uZ3MgSGFuZyBTZW5nIEluZGV4IGZlbGwgMSBwZXJjZW50IGFuZCBIYW5nIFNlbmcgQ2hpbmEgRW50ZXJwcmlzZXMgSW5kZXggb2YgbWFpbmxhbmQgc2hhcmVzIHRyYWRlZCBpbiB0aGUgY2l0eSByZXRyZWF0ZWQgMDcgcGVyY2VudCBhcyBDaGluZXNlIGRldmVsb3BlcnMgZHJvcHBlZCBhZnRlciB0aGUgQ2hpbmEgU2VjdXJpdGllcyBKb3VybmFsIHNhaWQgc29tZSBtZWRpdW0gYW5kIHNtYWxsIHByb3BlcnR5IGRldmVsb3BlcnMgYXJlIGZhY2luZyBsaXF1aWRpdHkgcHJvYmxlbXMgVGhlIFNoYW5naGFpIENvbXBvc2l0ZSBJbmRleCBsb3N0IDA1IHBlcmNlbnQgYXMgYSBzZXJ2aWNlcyBpbmRleCBmb3IgQ2hpbmEgcmVsZWFzZWQgYnkgSFNCQyBIb2xkaW5ncyBQbGMgYW5kIE1hcmtpdCBFY29ub21pY3MgZGVjbGluZWQgaW4gQXByaWwgZnJvbSBNYXJjaCBOZXcgWmVhbGFuZHMgTlpYIDUwIEluZGV4IHJvc2UgMDEgcGVyY2VudCBhZnRlciBSZXNlcnZlIEJhbmsgR292ZXJub3IgR3JhZW1lIFdoZWVsZXIgc2FpZCBpdCBtYXkgc2VsbCB0aGUgbmF0aW9ucyBjdXJyZW5jeSBpZiBpdCByZW1haW5zIGhpZ2ggQXVzdHJhbGlhcyBTUEFTWCAyMDAgSW5kZXggcmV0cmVhdGVkIDExIHBlcmNlbnQgYWZ0ZXIgYSByZXBvcnQgc2hvd2VkIE1hcmNoIHJldGFpbCBzYWxlcyByb3NlIGxlc3MgdGhhbiBlY29ub21pc3RzIGZvcmVjYXN0IFNvdXRoIEtvcmVhcyBLb3NwaSBpbmRleCBkZWNsaW5lZCAwOSBwZXJjZW50IHdoaWxlIFNpbmdhcG9yZXMgU3RyYWl0cyBUaW1lcyBJbmRleCBsb3N0IDA1IHBlcmNlbnQgVGFpd2FucyBUYWlleCBpbmRleCBzbGlwcGVkIDA0IHBlcmNlbnQgQWxpYmFiYSBHcm91cCBDaGluYXMgbGFyZ2VzdCBlY29tbWVyY2Ugb3BlcmF0b3IgbWF5IHJhaXNlIGFzIG11Y2ggYXMgMjAgYmlsbGlvbiB2aWEgYW4gaW5pdGlhbCBwdWJsaWMgb2ZmZXJpbmcgaW4gdGhlIFVTIHRvcHBpbmcgdGhlIDE5NjUgYmlsbGlvbiBvZmZlcmluZyBieSBWaXNhIEluYyBpbiAyMDA4IGRhdGEgY29tcGlsZWQgYnkgQmxvb21iZXJnIHNob3cgVGhlIGNvbXBhbnkgZGlkbnQgc3BlY2lmeSB0aGUgbnVtYmVyIG9yIHByaWNlIG9mIHNoYXJlcyBpdCB3aWxsIG9mZmVyIFNvZnRCYW5rIHdoaWNoIG93bnMgMzQgcGVyY2VudCBvZiBBbGliYWJhIHNsaWQgMzggcGVyY2VudCB0byA3NTI1IHllbiBpbiBUb2t5byBZYWhvbyBJbmMgaXMgdGhlIHNlY29uZGxhcmdlc3QgaW52ZXN0b3IgYXQgYWxtb3N0IDIzIHBlcmNlbnQgQWxpYmFiYSBJUE8gV2Ugc3Ryb25nbHkgYmVsaWV2ZSB0aGF0IG11Y2ggb2YgdGhlIGdvb2QgbmV3cyBpbiByZWdhcmRzIHRvIHRoZSBBbGliYWJhIElQTyBoYXMgYmVlbiBiYWtlZCB3ZWxsIGludG8gU29mdEJhbmtzIHNoYXJlIHByaWNlIHNhaWQgQW1pciBBbnZhcnphZGVoIGEgbWFuYWdlciBvZiBKYXBhbmVzZSBlcXVpdHkgc2FsZXMgaW4gU2luZ2Fwb3JlIGF0IEJHQyBQYXJ0bmVycyBJbmMgTW9yZW92ZXIgd2UgYWxzbyBleHBlY3QgVVMgaW52ZXN0b3JzIHRvIGRpdmVzdCBmcm9tIFNvZnRCYW5rIGFuZCBZYWhvbyBhcyBtb3N0IHdpbGwgd2FudCBkaXJlY3QgZXhwb3N1cmUgdG8gQWxpYmFiYSB3aXRob3V0IHRoZSB0ZWxlY29tIGJ1c2luZXNzZXMgd2hpY2ggYXJlIGZhY2luZyBwcmljaW5nIHByZXNzdXJlIFRoZSBNU0NJIEFzaWEgUGFjaWZpYyBJbmRleCB0cmFkZWQgeWVzdGVyZGF5IGF0IDEyNyB0aW1lcyBlc3RpbWF0ZWQgZWFybmluZ3MgY29tcGFyZWQgd2l0aCAxNTkgZm9yIHRoZSBTdGFuZGFyZCAgUG9vcnMgNTAwIEluZGV4IGFjY29yZGluZyB0byBkYXRhIGNvbXBpbGVkIGJ5IEJsb29tYmVyZyBGdXR1cmVzIG9uIHRoZSBTUCA1MDAgZHJvcHBlZCAwMSBwZXJjZW50IHRvZGF5IFRoZSBnYXVnZSB5ZXN0ZXJkYXkgcmV0cmVhdGVkIDA5IHBlcmNlbnQgYXMgVHdpdHRlciBJbmMgbGVkIGEgc2VsbG9mZiBpbiBJbnRlcm5ldCBzaGFyZXMgd2hpbGUgQW1lcmljYW4gSW50ZXJuYXRpb25hbCBHcm91cCBJbmMgZHJhZ2dlZCBkb3duIGZpbmFuY2lhbCBjb21wYW5pZXN0AARyb3dzdXEAfgAKAAAAAXQAATV0AAVzdGFydHVxAH4ACgAAAAF0AAEwdAACZmx1cQB+AAoAAAABdABvYXJ0aWNsZUlkLHRpdGxlLGNvbnRlbnQsZGF0ZSxzdG9ja0hpc3RvcnlJZCxzeW1ib2wsaGlzdG9yeURhdGUsb3BlbixoaWdoLGxvdyxjbG9zZSxhZGpDbG9zZSx2b2x1bWUsaWQsX3ZlcnNpb25fdAACZnF1cQB+AAoAAAABdAA6aGlzdG9yeURhdGU6WzIwMTMtMDMtMjdUMDA6MDA6MDBaIFRPIDIwMTMtMTItMDNUNTk6NTk6NTlaXXgAcA==</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDMyMzE=</field><field name="title" class="java.lang.String">rO0ABXQAQ0phcGFuJ3MgU3dlZXQgU3BvdDogU3RvY2sgUHJpY2VzIFJpc2UsIFByb2ZpdCBGb3JlY2FzdHMgUmlzZSBGYXN0ZXI=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUD78NiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGI2MDAzZDA4ZmZkMTNmZTU=</field><field name="symbol" class="java.lang.String">rO0ABXQAA01UVQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEBFzSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAZAAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAZXCj1wo9c</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAY9cKPXCj2</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAZXCj1wo9c</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAZXCj1wo9c</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAABBL4A==</field><field name="id" class="java.lang.String">rO0ABXQAEDc4MTY1NWQ3YTllZmFiYjM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFDjAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDcxNzQ=</field><field name="title" class="java.lang.String">rO0ABXQAPEVtZXJnaW5nIFN0b2NrcyBGYWxsIHRvIDUtTW9udGggTG93IGFzIEFwcGxlIFN1cHBsaWVycyBTbHVtcA==</field><field name="content" class="java.lang.String">rO0ABXQOJUVtZXJnaW5nLW1hcmtldCBzdG9ja3MgZHJvcHBlZCB0byB0aGUgbG93ZXN0IGxldmVsIGluIGFsbW9zdCBmaXZlIG1vbnRocyBUaHVyc2RheSBhcyBBcHBsZSBJbmMuIHN1cHBsaWVycyByZXRyZWF0ZWQgYW5kIGNvbmNlcm4gZ3JldyB0aGF0IHRoZSBnbG9iYWwgZWNvbm9teSBpcyBmYWx0ZXJpbmcuIExHIERpc3BsYXkgQ28uIHNsaWQgdGhlIG1vc3QgaW4gZm91ciBtb250aHMgaW4gU2VvdWwgYWZ0ZXIgYXVkaW8tY2hpcG1ha2VyIENpcnJ1cyBMb2dpYyBJbmMuIHJlcG9ydGVkIGFuIGludmVudG9yeSBnbHV0IHRoYXQgc3VnZ2VzdHMgc2xvd2luZyBpUGhvbmUgc2FsZXMuIEppYW5neGkgQ29wcGVyIENvLiBzYW5rIDIuNSBwZXJjZW50IGluIEhvbmcgS29uZywgd2hpbGUgUnVzc2lh4oCZcyBNaWNleCBJbmRleCByZXZlcnNlZCBlYXJsaWVyIGdhaW5zLCBjbG9zaW5nIGF0IHRoZSBsb3dlc3QgbGV2ZWwgc2luY2UgSnVuZSAyNS4gQnJhemls4oCZcyBCb3Zlc3BhIGluZGV4IHJlYm91bmRlZCBmcm9tIGEgbmluZS1tb250aCBsb3csIGFzIEdvbCBMaW5oYXMgQWVyZWFzIEludGVsaWdlbnRlcyBTQSBqdW1wZWQgMTEgcGVyY2VudC4gVGhlIE1TQ0kgRW1lcmdpbmcgTWFya2V0cyBJbmRleCBmZWxsIDAuNCBwZXJjZW50IHRvIDk5Ny4zMyBpbiBOZXcgWW9yaywgdGhlIGxvd2VzdCBsZXZlbCBzaW5jZSBOb3YuIDI4LiBTdG9ja3Mgam9pbmVkIGxvc3NlcyBpbiB0aGUgVS5TLiBlcXVpdHkgbWFya2V0IGFzIGRhdGEgb24gbGVhZGluZyBlY29ub21pYyBpbmRpY2F0b3JzIGFuZCBQaGlsYWRlbHBoaWEtYXJlYSBtYW51ZmFjdHVyaW5nIHRyYWlsZWQgZXN0aW1hdGVzLiBFYXJsaWVyIHRoaXMgd2VlaywgdGhlIEludGVybmF0aW9uYWwgTW9uZXRhcnkgRnVuZCB0cmltbWVkIGl0cyBnbG9iYWwgZ3Jvd3RoIGZvcmVjYXN0LiDigJxJdOKAmXMgZ2xvYmFsLCB2ZXJ5IG11Y2ggbGlrZSBhIGNvbGQgdGhhdCBzZWVtcyB0byBiZSBnb2luZyBhcm91bmQs4oCdIExhd3JlbmNlIENyZWF0dXJhLCBhIFJvY2hlc3RlciwgTmV3IFlvcmstYmFzZWQgZnVuZCBtYW5hZ2VyIGF0IEZlZGVyYXRlZCBJbnZlc3RvcnMgSW5jLiwgd2hpY2ggb3ZlcnNlZXMgYWJvdXQgJDM4MCBiaWxsaW9uLCBzYWlkIGJ5IHBob25lLiDigJxFYXJsaWVyIGluIHRoZSB5ZWFyLCB0aGUgbWFjcm8gZGF0YSB3YXMgb24gYSBtb3JlIHJlbGlhYmx5IHVwd2FyZCB0cmFqZWN0b3J5LiBOb3cgdGhlcmUgYXBwZWFycyB0byBiZSBhIG1vZGVyYXRpb24gZ29pbmcgb24u4oCdIEEgZ2F1Z2Ugb2YgdGVjaG5vbG9neSBzaGFyZXMgaW4gdGhlIE1TQ0kgRW1lcmdpbmcgTWFya2V0cyBJbmRleCBmZWxsIDEuNCBwZXJjZW50LCB0aGUgbW9zdCBhbW9uZyAxMCBncm91cHMuIFRoZSBlbWVyZ2luZy0gbWFya2V0cyBpbmRleCBoYXMgbG9zdCA1LjUgcGVyY2VudCB0aGlzIHllYXIsIHRyYWlsaW5nIGEgNS42IHBlcmNlbnQgaW5jcmVhc2UgaW4gdGhlIE1TQ0kgV29ybGQgSW5kZXggb2YgZGV2ZWxvcGVkLWNvdW50cnkgc3RvY2tzLiBUaGUgZW1lcmdpbmctbWFya2V0cyBtZWFzdXJlIHRyYWRlcyBhdCAxMC41IHRpbWVzIDEyLSBtb250aCBwcm9qZWN0ZWQgcHJvZml0LCBjb21wYXJlZCB3aXRoIHRoZSBNU0NJIFdvcmxk4oCZcyAxMy43IHZhbHVhdGlvbiwgYWNjb3JkaW5nIHRvIGRhdGEgY29tcGlsZWQgYnkgQmxvb21iZXJnLiAgICAgICAgICAgICAgICAgICAgICAgICAgIEVtZXJnaW5nIEVURiBUaGUgaVNoYXJlcyBNU0NJIEVtZXJnaW5nIE1hcmtldHMgSW5kZXggZXhjaGFuZ2UtdHJhZGVkIGZ1bmQgd2FzIGxpdHRsZSBjaGFuZ2VkIGF0ICQ0MS4wNS4gVGhlIENoaWNhZ28gQm9hcmQgT3B0aW9ucyBFeGNoYW5nZSBFbWVyZ2luZyBNYXJrZXRzIEVURiBWb2xhdGlsaXR5IEluZGV4LCBhIG1lYXN1cmUgb2Ygb3B0aW9ucyBwcmljZXMgb24gdGhlIGZ1bmQgYW5kIGV4cGVjdGF0aW9ucyBvZiBwcmljZSBzd2luZ3MsIGp1bXBlZCAzLjMgcGVyY2VudCB0byAyMy4yMC4gQnJhemls4oCZcyBCb3Zlc3BhIHJvc2UgMC41IHBlcmNlbnQgYW5kIHN3YXAgcmF0ZXMgdHVtYmxlZCBhZnRlciB0aGUgY2VudHJhbCBiYW5rIHJhaXNlZCBiZW5jaG1hcmsgYm9ycm93aW5nIGNvc3RzIHllc3RlcmRheSBsZXNzIHRoYW4gc29tZSBhbmFseXN0cyBoYWQgZm9yZWNhc3QsIHNwdXJyaW5nIHNwZWN1bGF0aW9uIHRoYXQgbW9uZXRhcnkgdGlnaHRlbmluZyB3aWxsIGJlIGxpbWl0ZWQuIEdvbCBzdXJnZWQgdGhlIG1vc3Qgc2luY2UgRGVjLiAyNiBvbiBzcGVjdWxhdGlvbiBhIHJlZHVjdGlvbiBpbiBmdWVsIHRheGVzIHdpbGwgaGVscCByZWR1Y2UgY29zdHMuIE1leGljb+KAmXMgSVBDIEluZGV4IGZlbGwgMC40IHBlcmNlbnQgdG8gYSBvbmUtbW9udGggbG93LiBSdXNzaWHigJlzIE1pY2V4IG1lYXN1cmUgY2xvc2VkIGxpdHRsZSBjaGFuZ2VkIGFmdGVyIGNsaW1iaW5nIGFzIG11Y2ggYXMgMS4xIHBlcmNlbnQgZWFybGllciBpbiB0aGUgZGF5LiBGZXJ0aWxpemVyIHByb2R1Y2VyIE9BTyBQaG9zQWdybyBqdW1wZWQgMi44IHBlcmNlbnQsIGVuZGluZyBhIGVpZ2h0LWRheSBzbGlkZSwgZm9sbG93aW5nIGFuIG9mZmVyIHRvIGJ1eSBzaGFyZXMgb2YgT0FPIEFwYXRpdC4gICAgICAgICAgICAgICAgICAgICAgICAgIFR1cmtleSwgUG9sYW5kIEJlbmNobWFyayBnYXVnZXMgaW4gVHVya2V5LCBQb2xhbmQgYW5kIEh1bmdhcnkgcmV0cmVhdGVkLiBUaGUgQ3plY2ggUmVwdWJsaWPigJlzIFBYIGluZGV4IHNsaWQgZm9yIGEgZmlmdGggZGF5IHRvIHRoZSBsb3dlc3QgbGV2ZWwgc2luY2UgQXVnLiAxNC4gU291dGggS29yZWHigJlzIEtvc3BpIEluZGV4IGRlY2xpbmVkIDEuMiBwZXJjZW50IHRvIGFuIGFsbW9zdCBmaXZlLW1vbnRoIGxvdyBhcyBmb3JlaWduIGZ1bmRzIHNvbGQgJDMuOCBiaWxsaW9uIG1vcmUgZXF1aXRpZXMgdGhhbiB0aGV5IGJvdWdodCB0aGlzIHllYXIgdGhyb3VnaCBXZWRuZXNkYXksIGV4Y2hhbmdlIGRhdGEgc2hvdy4gTEcgRGlzcGxheSwgd2hpY2ggc3VwcGxpZXMgdG91Y2ggc2NyZWVucyBmb3IgQXBwbGXigJlzIGlQaG9uZSBhbmQgaVBhZCwgZHJvcHBlZCA0LjggcGVyY2VudC4gSG9uIEhhaSBQcmVjaXNpb24gSW5kdXN0cnkgQ28uLCB3aGljaCBhc3NlbWJsZXMgQXBwbGXigJlzIGlQaG9uZSwgZmVsbCAxLjMgcGVyY2VudCBpbiBUYWlwZWkgdG8gdGhlIGxvd2VzdCBsZXZlbCBzaW5jZSBBdWcuIDMuIFRoZSBIYW5nIFNlbmcgQ2hpbmEgRW50ZXJwcmlzZXMgSW5kZXggb2YgbWFpbmxhbmQgY29tcGFuaWVzIGxpc3RlZCBpbiBIb25nIEtvbmcgc2xpZCAwLjMgcGVyY2VudCB3aGlsZSB0aGUgU2hhbmdoYWkgQ29tcG9zaXRlIEluZGV4IHJvc2UgMC4yIHBlcmNlbnQuIEluZGlh4oCZcyBTJlAgQlNFIFNlbnNleCBnYWluZWQgMS41IHBlcmNlbnQuIEppYW5neGkgQ29wcGVyIGNhcHBlZCBpdHMgc2l4dGggZGF5IG9mIGRlY2xpbmVzLiBUaGUgZXh0cmEgeWllbGQgaW52ZXN0b3JzIGRlbWFuZCB0byBvd24gZW1lcmdpbmctbWFya2V0IGRlYnQgb3ZlciBVLlMuIFRyZWFzdXJpZXMgd2FzIHVuY2hhbmdlZCBhdCAyOTcgYmFzaXMgcG9pbnRzLCBhY2NvcmRpbmcgdG8gSlBNb3JnYW4gQ2hhc2UgJiBDby7igJlzIEVNQkkgR2xvYmFsIEluZGV4Lg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4bg3SAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGI0MTZiYjE5N2M3Yjg4ZTA=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0dPTA==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4gqdCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAZeuFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAamZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAZAAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAahR64UeuF</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAahR64UeuF</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAC7V2A==</field><field name="id" class="java.lang.String">rO0ABXQAEGNhNzBlNTYwMzRkMjNlZDk=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mLU/AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDg3MTg=</field><field name="title" class="java.lang.String">rO0ABXQAKkdsb2JhbCBTdG9ja3MgQ2hhbGsgVXAgQmVzdCBSdW4gU2luY2UgMjAwOQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKsvfcAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDU5NjVkYTg2NWRhZDQzOGQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAA05PVg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKx5FMAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUb1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUoeuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUQUeuFHrh</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUbCj1wo9c</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBRzCj1wo9c</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAACqmwA==</field><field name="id" class="java.lang.String">rO0ABXQAEGNiOTU3OTQwMDA1ZGE3YWM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mIrhAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDI0Mjg=</field><field name="title" class="java.lang.String">rO0ABXQAOE1hcmtldCBTY29yZWNhcmQgZm9yIE1heTogQm9uZHMgVHVtYmxlLCBTdG9ja3MgSGl0IEhpZ2hz</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8DQaCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGY4MjcxYTE4ODg5YTc2OGE=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lQQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8IZ/yAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7AAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7AAAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7AAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7AAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4Fwo9cKPX</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDI1OTJmYTlkOTBkNWYxMGU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mERpAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDIzNzU=</field><field name="title" class="java.lang.String">rO0ABXQAMUdvbGQgVHJhZGVycyBNb3N0IEJ1bGxpc2ggU2luY2UgQmVhciBNYXJrZXQgQmVnYW4=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8X2xCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDQzMGNhNDhmY2Y3MWRlYzE=</field><field name="symbol" class="java.lang.String">rO0ABXQAA1BUWQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8dAWyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAy8KPXCj1x</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzKPXCj1wp</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAy1HrhR64U</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAsAAAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAbk2A==</field><field name="id" class="java.lang.String">rO0ABXQAEDNjYjk2ZmE5M2JlMzQ4ZDQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKFLAAAA==</field></document></documents><date>2015-05-07T12:16:19-0500</date></cacheEntry>
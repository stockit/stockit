<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hBZnRlciB5ZWFycyBvZiBkcm91Z2h0IHRoZSBib3VudGlmdWwgaGFydmVzdHMgbWF5IGhhdmUgY29tZSBhcyBhIHJlbGllZiB0byBBbWVyaWNhcyBoZWFydGxhbmQgaWYgaXQgd2VyZSBub3QgZm9yIHRoZSBzZXZlcmUgdHJhbnNwb3J0YXRpb24gYm90dGxlbmVja3MgdGhhdCBoYXZlIGRldmVsb3BlZCBUaGUgcmlzaW5nIHRpZGUgb2YgY29ybiBhbmQgc295YmVhbnMgaXMgY2F1c2luZyBzZXZlcmUgc2xvd2Rvd25zIGFsb25nIGFuIGludGVybG9ja2luZyBuZXR3b3JrIG9mIHJhaWxyb2FkcyBoaWdod2F5cyBhbmQgcml2ZXJzIEJhcmdlcyBhbmQgaG9wcGVyIGNhcnMgYXJlIG92ZXJib29rZWQgaW4gYSBzeXN0ZW0gYWxyZWFkeSBzdHJhaW5lZCBieSBuZXcgZGVtYW5kIGZvciBkZWxpdmVyeSBvZiBvaWwgYnkgcmFpbCBhIGRlbGF5IG9mIHJlcGFpcnMgdG8gcml2ZXIgbG9ja3MgYW5kIGJhY2tsb2dzIGF0IGludGVybmF0aW9uYWwgc2hpcHBpbmcgdGVybWluYWxzIEV2ZXJ5IGVsZXZhdG9yIGFuZCBjb29wIEl2ZSB0YWxrZWQgdG8gc2F5cyB0aGUgc2FtZSB0aGluZyBUaGV5IGRvbnQga25vdyBob3cgdGhleSBhcmUgZ29pbmcgdG8gZ2V0IGFsbCB0aGVpciBEZWNlbWJlciBkZWxpdmVyaWVzIGRlbGl2ZXJlZCBzYWlkIE1pa2UgSGFsbCBhIGdyYWluIGJyb2tlciBpbiBjZW50cmFsIElsbGlub2lzIFRoZXJlIGlzIGp1c3QgYSB3b3JsZCBvZiBncmFpbiB0byBtb3ZlIGluIERlY2VtYmVyIEh1Z2UgYW1vdW50cyBUaGUgTWlzc2lzc2lwcGkgUml2ZXIgYW5kIGl0cyB0cmlidXRhcmllcyBhcmUgYSBoaWdod2F5IGZvciBncmFpbiBiYXJnZXMgYW5kIHRoZSBjaGVhcGVzdCBtZWFucyB0byBoYXVsIGNyb3BzIGZyb20gdGhlIGhlYXJ0IG9mIHRoZSBNaWR3ZXN0IGZhcm0gYmVsdCB0byBHdWxmIENvYXN0IGV4cG9ydCB0ZXJtaW5hbHMgV2hlbiBib3R0bGVuZWNrcyBkZXZlbG9wIGluIHRoZSBNaXNzaXNzaXBwaSBzeXN0ZW0gYW5kIHRoZSBncmFpbiBiZWx0cyByYWlsIGxpbmVzIHRoZSBkZWxheXMgY2FuIGRyaXZlIHVwIGV4cG9ydCBwcmljZXMgbWFraW5nIFVTIGdyYWluIGxlc3MgY29tcGV0aXRpdmUgVGhleSBhbHNvIGNyZWF0ZSBhIGdsdXQgaW4gdGhlIGludGVyaW9yIHdoaWNoIGNhbiBjaGlwIGF3YXkgYXQgcHJvZml0cyBmb3IgdGhlIG5hdGlvbnMgZmFybWVycyBJbmRlZWQgZmFybWVycyBhcmUgZXhwZWN0ZWQgdG8gc2VlIG5ldCBjYXNoIHJlY2VpcHRzIGZyb20gZ3JhaW4gY3JvcHMgZmFsbCBieSAzIHBlcmNlbnQgaW4gMjAxMyBpbiBhIHllYXIgb2Ygb3ZlcmFsbCByb2J1c3Qgdm9sdW1lIGFjY29yZGluZyB0byBhIGxhdGUgTm92ZW1iZXIgcmVwb3J0IGZyb20gdGhlIFVTIERlcGFydG1lbnQgb2YgQWdyaWN1bHR1cmUgTWFueSBmYXJtZXJzIHByb3RlY3QgdGhlbXNlbHZlcyBmcm9tIHByaWNlIGZsdWN0dWF0aW9ucyBhZnRlciBoYXJ2ZXN0IGJ5IGxvY2tpbmcgaW4gcHJpY2VzIGR1cmluZyB0aGUgc3VtbWVyIHdpdGggZnV0dXJlcyB0cmFkaW5nIGFuZCBvdGhlciBmb3JtcyBvZiBmb3J3YXJkIGNvbnRyYWN0aW5nIFRoZSBkZWNsaW5lIHdpbGwgb2NjdXIgaW4gYSB5ZWFyIG9mIHJvYnVzdCBwcm9maXRzIG92ZXJhbGwgZm9yIGZhcm1lcnMgd2l0aCBpbmNvbWUgZm9yZWNhc3QgdG8gaGl0IDEzMSBiaWxsaW9uIHVwIDE1IHBlcmNlbnQgZnJvbSBsYXN0IHllYXIgYW5kIHRoZSBtb3N0IHByb2ZpdGFibGUgcGVyZm9ybWFuY2UgaW4gNDAgeWVhcnMgTXVjaCBvZiB0aGUgaW5jcmVhc2UgaXMgZHVlIHRvIHNreSBoaWdoIGxpdmVzdG9jayBwcmljZXMgdGhlIFVTREEgc2FpZCBDb3JuIGlzIHRoZSBsYXJnZXN0IFVTIGNyb3AgaW4gdm9sdW1lIGFuZCB0eXBpY2FsbHkgaXMgYSBtYWpvciBjb250cmlidXRvciB0byBmYXJtIGluY29tZSBCdXQgQW1lcmljYW4gZmFybWVycyBoYXZlIGZhY2VkIHNpZ25pZmljYW50IGNoYWxsZW5nZXMgd2l0aCB0aGlzIHllYXJzIGNyb3AgQSBsYXRlIHNwcmluZyBwbGFudGluZyBtZWFudCB0aGUgaGFydmVzdCB3aGljaCB0eXBpY2FsbHkgbGFzdHMgMTAgdG8gMTIgd2Vla3Mgd2FzIGNvbmRlbnNlZCBpbnRvIGFib3V0IG5pbmUgd2Vla3MgRmFybWVycyBydXNoZWQgdG8gbWFrZSB1cCBmb3IgdGhlIGRlbGF5IGJyaW5naW5nIGluIHRoZSBoYXJ2ZXN0IGZyb20gbGF0ZSBPY3RvYmVyIHRvIGVhcmx5IE5vdmVtYmVyICB0aGUgdmVyeSBzdXJnZSB0aGF0IGlzIHRheGluZyB0aGUgdHJhbnNwb3J0YXRpb24gc3lzdGVtIFdlIHdlbnQgZnJvbSB6ZXJvIHRvIDYwIGluIGFib3V0IHR3byB3ZWVrcyB0aW1lIG9uY2UgdGhpcyBoYXJ2ZXN0IHN0YXJ0ZWQga2lja2luZyBpbiBzYWlkIE1hcnRpbiBIZXR0ZWwgb2YgQUVQIFJpdmVyIE9wZXJhdGlvbnMgY29tcGFyaW5nIHRoZSBhY2NlbGVyYXRpb24gb2YgdGhpcyB5ZWFycyBoYXJ2ZXN0IHRvIGEgcmFjZSBjYXIgSGV0dGVsIGhlbHBzIHN1cGVydmlzZSB0aGUgb3BlcmF0aW9uIG9mIG1vcmUgdGhhbiAyOTAwIGJhcmdlcyBPcGVyYXRvcnMgd2hvIHdlcmUgc3R1Y2sgd2l0aCBlbXB0eSBib2F0cyBpbiB0aGUgbGFzdCB0d28geWVhcnMgd2hlbiBzdW1tZXIgZHJvdWdodCBwcm9kdWNlZCB3ZWFrIFVTIGhhcnZlc3RzIHdlcmUgZXhwZWN0ZWQgdG8gYmUgYm9va2VkIHRocm91Z2ggYXQgbGVhc3QgRmVicnVhcnkgSGV0dGVsIHNhaWQgU29tZSBzaGlwcGVycyBhcmUgYWxyZWFkeSByYWNpbmcgYWdhaW5zdCBlbmNyb2FjaGluZyB3aW50ZXIgd2VhdGhlciBhbmQgaWNlIGJ1aWxkdXBzIG9uIHNvbWUgd2F0ZXJ3YXlzIE5vcnRoZXJuIHN0cmV0Y2hlcyBvZiBtYW55IE1pZHdlc3Qgcml2ZXJzIGFyZSBjbG9zZWQgdG8gYmFyZ2UgdHJhZmZpYyB3aXRoIG1vcmUgY2xvc3VyZXMgZXhwZWN0ZWQgaW4gY29taW5nIHdlZWtzIFRoYXQgaXMgZXhwZWN0ZWQgdG8gZXhhY2VyYmF0ZSB0aGUgYmFja2xvZyBmb3IgZ3JhaW4gbWVyY2hhbmRpc2VycyBhbHJlYWR5IHN0cnVnZ2xpbmcgdG8gZmluZCBlbXB0eSBzcGFjZSBvbiB2ZXNzZWxzIFRoZSBVU0RBIGhhcyBwZWdnZWQgdGhpcyB5ZWFycyBjb3JuIGNyb3AgYXQgYSByZWNvcmQgMTM5ODkgYmlsbGlvbiBidXNoZWxzIGFuZCB0aGUgc295YmVhbiBjcm9wIGF0IDMzIGJpbGxpb24gYnVzaGVscyBUaGUgY29ybiBoYXJ2ZXN0ICB1cCAzMCBwZXJjZW50IGZyb20gbGFzdCB5ZWFyICBpcyBleHBlY3RlZCB0byBtb3JlIHRoYW4gZG91YmxlIGRvbWVzdGljIHN0b2NrcGlsZXMgd2hpY2ggaGFkIGJlZW4gZGVwbGV0ZWQgYnkgZHJvdWdodCBpbiAyMDEyIHRvIGEgMTd5ZWFyIGxvdyBGb3Igc295YmVhbnMgc3RvY2twaWxlcyB3ZXJlIHNlZW4gcmlzaW5nIDIxIHBlcmNlbnQgYWZ0ZXIgd2hhdCBpcyBlc3RpbWF0ZWQgYXMgdGhlIHRoaXJkYmlnZ2VzdCBjcm9wIG9uIHJlY29yZCBHcmFpbiBlbGV2YXRvcnMgdGhhdCBoYWQgZ29uZSBuZWFybHkgZW1wdHkgYSB5ZWFyIGFnbyBzdWRkZW5seSBhcmUgc3R1ZmZlZCB3aXRoIGdyYWluIHRoYW5rcyB0byB0aGUgZmFtaW5ldG9mZWFzdCBzaGlmdCBpbiBncmFpbiBwcm9kdWN0aW9uIE9uIHJhaWxyb2FkcyBncmFpbiBkZWFsZXJzIGhhdmUgc3RydWdnbGVkIHRvIGZpbmQgZW1wdHkgdHJhaW4gY2FycyBUbyBtYWtlIG1hdHRlcnMgd29yc2UgcmFpbHdheSBjb25zdHJ1Y3Rpb24gYW5kIGV4cGFuc2lvbiBoYXZlIGNhdXNlZCB0cmFpbnMgdG8gdHJhdmVsIHNsb3dlciB0aGFuIHVzdWFsIHRoaXMgYXV0dW1uIGZ1cnRoZXIgc3F1ZWV6aW5nIGNhcGFjaXR5IFN0dWZmZWQgd2l0aCBncmFpbiBob3BwZXIgY2FycyBvbiB0aGUgQk5TRiBSYWlsd2F5ICBsYXN0IG1vbnRoIHdlcmUgbW92aW5nIGF0IGFib3V0IDIwNSBtaWxlcyBwZXIgaG91ciAzMyBrcGggY29tcGFyZWQgd2l0aCAyMzMgbXBoIGR1cmluZyB0aGUgbGFzdCBxdWFydGVyIG9mIDIwMTIgYWNjb3JkaW5nIHRvIGRhdGEgb24gdGhlIEFzc29jaWF0aW9uIG9mIEFtZXJpY2FuIFJhaWxyb2FkcyB3ZWJzaXRlIEFzIGEgcmVzdWx0IHRyYWlucyBzdHJldGNoaW5nIDEwMCBjYXJzIGxvbmcgd2hpY2ggbm9ybWFsbHkgY2FuIG1ha2UgdGhyZWUgdHJpcHMgYSBtb250aCBiZXR3ZWVuIHRoZSBDb3JuIEJlbHQgYW5kIGV4cG9ydCB0ZXJtaW5hbHMgb24gdGhlIFBhY2lmaWMgTm9ydGh3ZXN0IGFyZSBsb2dnaW5nIG9ubHkgdHdvIHRyaXBzIGdyYWluIGhhbmRsZXJzIHNheSBEZXZlbG9wbWVudCBvZiB0aGUgaHVnZSBCYWtrZW4gc2hhbGUgZGVwb3NpdCB3aGljaCBoYXMgY3JlYXRlZCBkZW1hbmQgZm9yIHRyYW5zcG9ydGluZyBvaWwgYnkgcmFpbCBhY3Jvc3MgdGhlIG5vcnRoZXJuIFVTIFBsYWlucyBoYXMgY29udHJpYnV0ZWQgdG8gdGhlIHNsb3dkb3duIEJha2tlbiBvaWwgdHJhdmVsaW5nIGZyb20gdGhlIERha290YXMgdG8gcmVmaW5lcmllcyBpbiB0aGUgTWlkd2VzdCBhbmQgZWxzZXdoZXJlIGlzIGNvbXBldGluZyBmb3IgZXhpc3RpbmcgdHJhY2sgY2FwYWNpdHkgRnJlaWdodCBjb3N0cyB0byB0aGUgUGFjaWZpYyBOb3J0aHdlc3QgYXJlIHNvYXJpbmcgU29tZSBncmFpbiBoYW5kbGVycyB3aG8gaGFkIGJvb2tlZCBmcmVpZ2h0IGluIGFkdmFuY2Ugb2YgdGhlIGhhcnZlc3QgaGF2ZSBiZWVuIGFibGUgdG8gcmVzZWxsIHRoZSBzcGFjZSBhdCBhIHRpZHkgcHJvZml0IHRvIG90aGVyIGdyYWluIHNoaXBwZXJzIGNhdWdodCBzaG9ydCBieSB0aGUgcmVkdWNlZCBmbG93IG9mIHRyYWlucyBCdXQgdGhvc2UgcmVzZWxsZXJzIGNhbiBsb3NlIG1vbmV5IGVsc2V3aGVyZSBIdWdlIHBpbGVzIG9mIGdyYWluIHN0b3JlZCBvbiB0aGUgZ3JvdW5kIG91dHNpZGUgY291bnRyeSBlbGV2YXRvcnMgaGF2ZSBzdGVhZGlseSBsb3N0IHZhbHVlIGFzIHN1cnBsdXNlcyBjYXVzZSBwcmljZXMgdG8gdHVtYmxlIFlvdSBtaWdodCBiZSBhYmxlIHRvIGdpdmUgdXAgYSB0cmFpbiBoZXJlIGFuZCB0aGVyZSBhbmQgbWFrZSAzMDAwMDAgb3Igc29tZXRoaW5nIEJ1dCBhdCB0aGUgc2FtZSB0aW1lIHlvdXIgZ3JhaW4gaXMgc2l0dGluZyB0aGVyZXQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0wMy0yN1QwMDowMDowMFogVE8gMjAxMy0xMi0wM1Q1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDQ5MzA=</field><field name="title" class="java.lang.String">rO0ABXQAO0Zhcm0gSW5jb21lIFNlZW4gQ2xpbWJpbmcgMTUgUGVyY2VudCB0byBSZWNvcmQgb24gQmlnIENyb3Bz</field><field name="content" class="java.lang.String">rO0ABXQM11N1cmdpbmcgc3VwcGxpZXMgb2YgVS5TLiBjb3JuIGFuZCBzb3liZWFucyBjb3VwbGVkIHdpdGggaGlnaGVyIHJldmVudWUgZm9yIHNwZWNpYWx0eSBjcm9wcyB3aWxsIGJvb3N0IGZhcm0gaW5jb21lcyB0byBhIHJlY29yZCB0aGlzIHllYXIgZXZlbiBhZnRlciBncmFpbiBwcmljZXMgZmVsbCwgdGhlIFUuUy4gRGVwYXJ0bWVudCBvZiBBZ3JpY3VsdHVyZSBzYWlkLiBOZXQtZmFybSBpbmNvbWUgd2lsbCByZWFjaCAkMTMxIGJpbGxpb24sIHVwIDguNiBwZXJjZW50IGZyb20gJDEyMC42IGJpbGxpb24gZm9yZWNhc3QgaW4gQXVndXN0IGFuZCAxNSBwZXJjZW50IGhpZ2hlciB0aGFuIGEgeWVhciBlYXJsaWVyLCB0aGUgVVNEQSBzYWlkIGluIGEgcmVwb3J0LiBGYXJtZXJzIGluIHRoZSBVLlMuLCB0aGUgd29ybGTigJlzIGJpZ2dlc3QgY29ybiBncm93ZXIsIGFyZSBwcm9qZWN0ZWQgdG8gcHJvZHVjZSBhIHJlY29yZCAxMy45ODkgYmlsbGlvbiBidXNoZWxzIG9mIHRoZSBncmFpbiB0aGlzIHllYXIuIFNveWJlYW4gb3V0cHV0IHdpbGwgYmUgMy4yNTggYmlsbGlvbiBidXNoZWxzLCB0aGUgdGhpcmQtYmlnZ2VzdCBldmVyLCBnb3Zlcm5tZW50IGZvcmVjYXN0cyBzaG93LiBHbG9iYWwgZm9vZCBjb3N0cyB0cmFja2VkIGJ5IHRoZSBVbml0ZWQgTmF0aW9ucyBhcmUgMTQgcGVyY2VudCBiZWxvdyB0aGUgYWxsLXRpbWUgaGlnaCBzZXQgaW4gRmVicnVhcnkgMjAxMSBhcyBjcm9wIHN1cHBsaWVzIGdhaW5lZC4g4oCcQmlnZ2VyIGdyYWluIGNyb3BzIG1lYW4gZmFybWVycyBoYXZlIG1vcmUgYnVzaGVscyB0byBzZWxsLCBhbmQgdGhhdCBoZWxwcyB0byBvZmZzZXQgdGhlIGRyb3AgaW4gZ3JhaW4gcHJpY2VzLOKAnSBNaWNoYWVsIFN3YW5zb24sIHRoZSBzZW5pb3IgYWdyaWN1bHR1cmFsIGVjb25vbWlzdCBpbiBNaW5uZWFwb2xpcyBhdCBXZWxscyBGYXJnbyAmIENvLiwgdGhlIGxhcmdlc3QgVS5TLiBmYXJtIGxlbmRlciwgc2FpZCBpbiBhIHRlbGVwaG9uZSBpbnRlcnZpZXcuIOKAnEEgbG90IG9mIHNwZWNpYWx0eSBjcm9wcyBpbmNsdWRpbmcgaGF5LCB2ZWdldGFibGVzLCBmcnVpdHMgYW5kIG51dHMgaGF2ZSBkb25lIHZlcnkgd2VsbCB0aGlzIHllYXIuIFBpc3RhY2hpb3MgYW5kIGFsbW9uZHMgYXJlIGp1c3QgZ29sZC7igJ0gQ29ybiBwcmljZXMgb24gdGhlIENoaWNhZ28gQm9hcmQgb2YgVHJhZGUgc2x1bXBlZCAzOSBwZXJjZW50IHRoaXMgeWVhciwgdGhlIGJpZ2dlc3QgZGVjbGluZSBhbW9uZyB0aGUgMjQgY29tbW9kaXRpZXMgdHJhY2tlZCBieSB0aGUgU3RhbmRhcmQgJiBQb29y4oCZcyBHU0NJIFNwb3QgSW5kZXguIFRoZSBHU0NJIGdhdWdlIGRyb3BwZWQgMy43IHBlcmNlbnQsIHdoaWxlIHRoZSBNU0NJIEFsbC1Db3VudHJ5IFdvcmxkIEluZGV4IG9mIGVxdWl0aWVzIGNsaW1iZWQgMTggcGVyY2VudC4gU295YmVhbiBTaGlwbWVudHMgU2luY2UgU2VwdC4gMSwgc295YmVhbnMgaW5zcGVjdGVkIGZvciBleHBvcnQgc2hpcG1lbnQgcm9zZSA1LjkgcGVyY2VudCBmcm9tIGEgeWVhciBlYXJsaWVyIHRvIDU4NS42IG1pbGxpb24gYnVzaGVscywgdGhlIGZhc3Rlc3QgcGFjZSBldmVyLCBVU0RBIGRhdGEgc2hvdy4gVS5TLiBjb3JuIHN0b2NrcGlsZXMgb24gQXVnLiAzMSwgMjAxNCwgYmVmb3JlIG5leHQgeWVhcuKAmXMgaGFydmVzdCwgd2lsbCBiZSAxLjg4NyBiaWxsaW9uIGJ1c2hlbHMsIG1vcmUgdGhhbiBkb3VibGUgYSB5ZWFyIGVhcmxpZXIuIEludmVudG9yaWVzIGFyZSBhZGRpbmcgJDEyIGJpbGxpb24gdG8gZmFybSBpbmNvbWUgdGhpcyB5ZWFyLCBjb21wYXJlZCB3aXRoIGFjY291bnRpbmcgZm9yIGEgbG9zcyBvZiAkOC4xIGJpbGxpb24gaW4gMjAxMiBhZnRlciB0aGUgd29yc3QgZHJvdWdodCBzaW5jZSAxOTMwIHJhdmFnZWQgY3JvcHMuIOKAnE9uIHNveWJlYW5zLCBpdOKAmXMgbWFpbmx5IHRoYXQgaGlnaGVyIHF1YW50aXRpZXMgd2VyZSBtYXJrZXRlZCB0aGFuIGV4cGVjdGVkLOKAnSBNaXRjaCBNb3JlaGFydCwgYSBVU0RBIGVjb25vbWlzdCB3aG8gb3ZlcnNlZXMgdGhlIGluY29tZSByZXBvcnQsIHNhaWQgaW4gYSB0ZWxlcGhvbmUgaW50ZXJ2aWV3LiAiT24gY29ybiwgaXTigJlzIHRoZSByZXZlcnNlLiBJdOKAmXMgYSBwb3RlbnRpYWxseSByZWNvcmQgY3JvcCwgYW5kIGEgbG90IG9mIGl0IHdpbGwgYmUgaW4geWVhci1lbmQgaW52ZW50b3JpZXMs4oCZ4oCZIHdoaWNoIHRoZSBVU0RBIGZhY3RvcnMgaW50byBpbmNvbWVzLCBoZSBzYWlkLiBUaGUgdmFsdWUgb2YgY3JvcHMgc29sZCB0byBjb21wYW5pZXMgc3VjaCBhcyBDYXJnaWxsIEluYy4sIEFyY2hlci1EYW5pZWxzLU1pZGxhbmQgQ28uIGFuZCBCbHVlIERpYW1vbmQgR3Jvd2VycyB3aWxsIGJlICQyMTcuMiBiaWxsaW9uLCB1cCAyLjkgcGVyY2VudCBmcm9tIHRoZSBBdWd1c3QgZXN0aW1hdGUuIENyb3Agc2FsZXMgd2VyZSBhIHJlY29yZCAkMjIzLjUgYmlsbGlvbiBpbiAyMDEyLiBSZXZlbnVlIGZyb20gbGl2ZXN0b2NrIHNhbGVzIHdpbGwgaW5jcmVhc2UgNS44IHBlcmNlbnQgZnJvbSBhIHllYXIgZWFybGllciB0byBhbiBhbGwtdGltZSBoaWdoIG9mICQxODEuNSBiaWxsaW9uLiBSZWFsIEVzdGF0ZSBOZXQtY2FzaCBpbmNvbWUsIHdoaWNoIG1lYXN1cmVzIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gY2FzaCBleHBlbnNlcyBhbmQgdGhlIHZhbHVlIG9mIGNvbW1vZGl0aWVzIHNvbGQsIGlzIGZvcmVjYXN0IGF0ICQxMjkuNyBiaWxsaW9uLCAzLjUgcGVyY2VudCBsZXNzIHRoYW4gYSB5ZWFyIGVhcmxpZXIuIEZhcm0gcmVhbC1lc3RhdGUgYXNzZXRzIGFyZSBlc3RpbWF0ZWQgYXQgJDIuNDg0IHRyaWxsaW9uLCB1cCA3LjUgcGVyY2VudCBmcm9tIGxhc3QgeWVhciBhbmQgNDIgcGVyY2VudCBoaWdoZXIgdGhhbiAyMDA5LiBGYXJtIGV4cGVuc2VzIGFyZSBkb3duIDAuNiBwZXJjZW50IGZyb20gdGhlIEF1Z3VzdCBmb3JlY2FzdCB0byAkMzUyIGJpbGxpb24uIFRoYXTigJlzIHN0aWxsIHVwIDMuMiBwZXJjZW50IGZyb20gYSB5ZWFyIGVhcmxpZXIsIHRoZSAxMXRoIGluY3JlYXNlIGluIHRoZSBwYXN0IDEyIHllYXJzLCB0aGUgVVNEQSBzYWlkLiBJbiBib3RoIG5vbWluYWwgYW5kIGluZmxhdGlvbi1hZGp1c3RlZCBkb2xsYXJzLCAyMDEzIHByb2R1Y3Rpb24gZXhwZW5zZXMgYXJlIHRoZSBoaWdoZXN0IG9uIHJlY29yZC4gTGFib3IgYW5kIHJlbnQgY29zdHMgd2lsbCBpbmNyZWFzZSB0aGUgbW9zdCwgd2hpbGUgcHJvZHVjZXJzIGFyZSBwcm9qZWN0ZWQgdG8gcGF5IGxlc3MgZm9yIGZ1ZWwgYW5kIGZlcnRpbGl6ZXIu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKS/isAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDBiY2RiMDA1NzAyOGYyMTc=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZBUk0=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKYJIcAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA0PXCj1wo9</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA0wo9cKPXD</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA0PXCj1wo9</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA0TMzMzMzN</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA0TMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAB0BA==</field><field name="id" class="java.lang.String">rO0ABXQAEDdjNzc4ZDQ2NzdiNmQwNGY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKsaAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwNTI=</field><field name="title" class="java.lang.String">rO0ABXQAMlRoZSBTZWNyZXQsIERpcnR5IENvc3Qgb2YgT2JhbWEncyBHcmVlbiBQb3dlciBQdXNo</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJK5SMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI3MTcyMzgzMzAxZTY3Yjg=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZBUk0=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJQC38AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyI9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABp3A==</field><field name="id" class="java.lang.String">rO0ABXQAEGIxNzhiNTk3MDYyZjcwYTE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGoqAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDYyMDM=</field><field name="title" class="java.lang.String">rO0ABXQAO0V4cGFuZGluZyBEcm91Z2h0LCBFeGNlc3NpdmUgSGVhdCBIdXJ0IElvd2EgQ29ybiwgU295IENyb3Bz</field><field name="content" class="java.lang.String">rO0ABXQPD0hpZ2ggaGVhdCBhbmQgbGl0dGxlIHJhaW4gZHVyaW5nIHRoZSBwYXN0IHdlZWsgbGVkIHRvIGFuIHVudXN1YWwsIHF1aWNrIGV4cGFuc2lvbiBvZiBkcm91Z2h0IGNvbmRpdGlvbnMgaW4gSW93YSBhbmQgSWxsaW5vaXMsIGRhbWFnaW5nIGNyb3BzIGluIHRoZSBiaWdnZXN0IFUuUy4gY29ybi0gYW5kIHNveWJlYW4tZ3Jvd2luZyBzdGF0ZXMuIEFib3V0IDI1IHBlcmNlbnQgb2YgSW93YSBoYWQgYSBtb2RlcmF0ZSBkcm91Z2h0IG9uIEF1Zy4gMjcsIHVwIGZyb20gNy45IHBlcmNlbnQgYSB3ZWVrIGVhcmxpZXIsIHdoaWxlIElsbGlub2lzIGp1bXBlZCB0byAyMCBwZXJjZW50IGZyb20gbm9uZSwgdGhlIFUuUy4gRHJvdWdodCBNb25pdG9yIHNhaWQgVGh1cnNkYXkgaW4gYSByZXBvcnQuIFBhcnRzIG9mIElvd2EgcmVjZWl2ZWQgbGVzcyB0aGFuIDI1IHBlcmNlbnQgb2Ygbm9ybWFsIHJhaW4gZHVyaW5nIHRoZSBwYXN0IDYwIGRheXMsIGFuZCBtdWNoIG9mIElsbGlub2lzIGdvdCBsZXNzIHRoYW4gaGFsZiBvZiBub3JtYWwgc2luY2UgSnVuZSAzMCwgZGF0YSBmcm9tIHRoZSBIaWdoIFBsYWlucyBSZWdpb25hbCBDbGltYXRlIENlbnRlciBzaG93LiBBZnRlciBhIHdldCBNYXkgYW5kIEp1bmUgZGVsYXllZCBwbGFudGluZywgdGhlIFUuUy4gRGVwYXJ0bWVudCBvZiBBZ3JpY3VsdHVyZSBjdXQgaXRzIHNveWJlYW4tY3JvcCBmb3JlY2FzdCBieSA0LjggcGVyY2VudCBvbiBBdWcuIDEyIGFuZCByZWR1Y2VkIGl0cyBjb3JuIGVzdGltYXRlIGZvciBhIHRoaXJkIHN0cmFpZ2h0IG1vbnRoLiBKdWx5IHdhcyB0aGUgMjB0aCBjb2xkZXN0IGluIDExOSB5ZWFycyBpbiBNaW5uZXNvdGEsIFdpc2NvbnNpbiwgTWljaGlnYW4gYW5kIElvd2EsIE5hdGlvbmFsIFdlYXRoZXIgU2VydmljZSBkYXRhIHNob3cuIFNveWJlYW4gZnV0dXJlcyBhcmUgdXAgMTggcGVyY2VudCBmcm9tIGFuIDE4LSBtb250aCBsb3cgb24gQXVnLiA3IG9uIGZvcmVjYXN0cyBmb3IgZHJ5IHdlYXRoZXIsIGFuZCBjb3JuIHJvc2UgOCBwZXJjZW50IGZyb20gYSAzNS1tb250aCBsb3cgb24gQXVnLiAxMy4g4oCcVGhlIGhlYXQgYW5kIGRyb3VnaHQgYXJlIHNwZWVkaW5nIGNyb3AgZGV2ZWxvcG1lbnQgYW5kIHJlZHVjaW5nIHlpZWxkIHBvdGVudGlhbCBkYWlseSzigJ0gUm9nZXIgRWxtb3JlLCBhbiBhZ3Jvbm9taXN0IGF0IElvd2EgU3RhdGUgVW5pdmVyc2l0eSBpbiBBbWVzLCBzYWlkIGluIGEgdGVsZXBob25lIGludGVydmlldy4g4oCcV2UgYXJlIHNraXBwaW5nIG92ZXIgY3JpdGljYWwgc3RhZ2VzIG9mIGRldmVsb3BtZW50IHRoYXQgcHJvYmFibHkgY2Fu4oCZdCByZWNvdmVyIGV2ZW4gaWYgdGVtcGVyYXR1cmVzIGNvb2wgYW5kIGEgbGl0dGxlIHJhaW4gZmFsbHMu4oCdIFdoaWxlIHRoZSBjcm9wcyBuZWVkIGhvdCB3ZWF0aGVyIHRvIGRldmVsb3AsIHRlbXBlcmF0dXJlcyB0aGF0IGFwcHJvYWNoZWQgMTAwIGRlZ3JlZXMgRmFocmVuaGVpdCAoMzggQ2Vsc2l1cykgZnJvbSBOZWJyYXNrYSB0byBJbmRpYW5hIGluIHRoZSBwYXN0IGZpdmUgZGF5cyBjYW4gY3V0IGNvcm4geWllbGRzIGF0IGxlYXN0IDMgcGVyY2VudCBhIGRheSB3aGlsZSByZWR1Y2luZyB0aGUgbnVtYmVyIG9mIHNlZWRzIGFuZCBzZWVkIHdlaWdodCBpbiBzb3liZWFucywgRWxtb3JlIHNhaWQuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFlpZWxkIExvc3MgQ29vbCB3ZWF0aGVyIGR1cmluZyB0aGUgZmlyc3QgMTkgZGF5cyBvZiBBdWd1c3QgbWFza2VkIHRoZSBzdHJlc3MgdGhhdCB0aGUgZHJ5IHNwZWxsIHdhcyBjYXVzaW5nIHRvIGNyb3BzIG92ZXIgbW9zdCBvZiB0aGUgTWlkd2VzdCwgUGxhbmFseXRpY3MgSW5jLiBzYWlkIGluIGEgcmVwb3J0IFRodXJzZGF5LiBUaGUgZXBpY2VudGVyIG9mIHRoZSBjcm9wIGRhbWFnZSBpcyBpbiBJb3dhLCBiYXNlZCBvbiB0aGUgdmVnZXRhdGl2ZSBncm93dGggaW5kZXggdGhhdCB0aGUgZm9yZWNhc3RlciBjb25zdHJ1Y3RzIGJpd2Vla2x5IGZyb20gc2F0ZWxsaXRlIGltYWdlcy4gQ29ybiB5aWVsZHMgaW4gSW93YSBwcm9iYWJseSBhcmUgZG93biB0byBhYm91dCAxNTAgYnVzaGVscyBhbiBhY3JlLCBjb21wYXJlZCB3aXRoIGFuIGVzdGltYXRlIG9mIDE2NSBidXNoZWxzIGEgd2VlayBhZ28sIHNhaWQgS2VudCBKZXNzZW4sIHRoZSBkaXJlY3RvciBvZiBtZXJjaGFuZGlzaW5nIGZvciBXZXN0IERlcyBNb2luZXMsIElvd2EtYmFzZWQgSGVhcnRsYW5kIENvb3BlcmF0aXZlLCB3aGljaCBoYXMgNTIgZ3JhaW4gdGVybWluYWxzIGFjcm9zcyAxNyBjb3VudGllcy4gU295YmVhbiB5aWVsZHMgd2lsbCBiZSAzNSBidXNoZWxzIGFuIGFjcmUgYXQgYmVzdCBpbiBoaXMgYXJlYSwgY29tcGFyZWQgd2l0aCA0OCBhIHllYXIgYWdvLiBUaGUgYXZlcmFnZSB5aWVsZCBpbiB0aGUgcmVnaW9uIHdoZXJlIGRyb3VnaHQgaXMgbW9zdCBzZXZlcmUgaW4gSW93YSB3YXMgNTIgYnVzaGVscyBmcm9tIDIwMDcgdG8gMjAxMSwgaGUgc2FpZC4g4oCcVGhlIGZsYXNoIGRyb3VnaHQgaGFzIGNhdXNlZCBzZXZlcmUgYW5kIGlycmV2ZXJzaWJsZSBkYW1hZ2UgdmVyeSBxdWlja2x5LOKAnSBKZXNzZW4gc2FpZC4g4oCcVGhlIGJlYW5zIGFyZSBnb2luZyBkb3duaGlsbCBtdWNoIHF1aWNrZXIgdGhhbiB0aGUgbW9yZSBtYXR1cmUgY29ybi4gVGhlcmUgYXJlIHNvbWUgc295YmVhbiBmaWVsZHMgdGhhdCBoYXZlIHJlY2VpdmVkIG9ubHkgMiBpbmNoZXMgb2YgcmFpbiBzaW5jZSB0aGV5IHdlcmUgcGxhbnRlZCBpbiBKdW5lLuKAnSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTGVzcyBSYWluIFRoZSBNaWR3ZXN0IHdpbGwgZ2V0IGxlc3MgcmFpbiBiZWNhdXNlIHRoZXJlIHdpbGwgYmUgYSBsYXJnZSByaWRnZSBvZiBoaWdoIHByZXNzdXJlIG92ZXIgdGhlIHJlZ2lvbiBpbiB0aGUgbmV4dCAxMCBkYXlzLCBpbmNyZWFzaW5nIHN0cmVzcyBvbiBhYm91dCA0NSBwZXJjZW50IG9mIFUuUy4gY3JvcHMsIENvbW1vZGl0eSBXZWF0aGVyIEdyb3VwIExMQyBzYWlkIGluIGEgcmVwb3J0IFRodXJzZGF5LiBTb3liZWFuLWNyb3AgY29uZGl0aW9ucyBkZWNsaW5lZCBpbiAxNCBvZiB0aGUgdG9wIDE4IHByb2R1Y2luZyBzdGF0ZXMgYXMgb2YgQXVnLiAyNSwgYW5kIGNvcm4gcmF0aW5ncyBkZWNsaW5lZCBpbiAxMSBzdGF0ZXMsIHRoZSBVU0RBIHNhaWQgaW4gYSByZXBvcnQgdGhpcyB3ZWVrLiBDcm9wIGNvbmRpdGlvbnMgd2lsbCBmYWxsIGFnYWluIGluIG5leHQgd2Vla+KAmXMgVVNEQSB1cGRhdGUsIGFjY29yZGluZyBSYW5keSBNaXR0ZWxzdGFlZHQsIHRoZSBkaXJlY3RvciBvZiByZXNlYXJjaCBmb3IgUi5KLiBP4oCZQnJpZW4gJiBBc3NvY2lhdGVzIGluIENoaWNhZ28uIEJhc2VkIG9uIHRoaXMgd2Vla+KAmXMgd2VhdGhlciBhbmQgY3JvcCBjb25kaXRpb25zLCBNaXR0ZWxzdGFlZHQgZm9yZWNhc3RzIGEgVS5TLiBjb3JuIGhhcnZlc3Qgb2YgMTMuNTMgYmlsbGlvbiBidXNoZWxzLCAxLjcgcGVyY2VudCBsZXNzIHRoYW4gdGhlIFVTREHigJlzIEF1Zy4gMTIgZm9yZWNhc3Qgb2YgMTMuNzYzIGJpbGxpb24uIFNveWJlYW4gd2lsbCBiZSAzLjIxOCBiaWxsaW9uIGJ1c2hlbHMsIGhlIHNhaWQsIG9yIDEuMSBwZXJjZW50IGxlc3MgdGhhbiB0aGUgZ292ZXJubWVudOKAmXMgZXN0aW1hdGUgb2YgMy4yNTUgYmlsbGlvbi4g4oCcVGhlIGNyb3BzIGFyZSBzdGlsbCBnb2luZyBiYWNrd2FyZCzigJ0gTWl0dGVsc3RhZWR0IHNhaWQuIOKAnFRoZSBjcm9wcyB3b27igJl0IGdldCBhbnkgYmlnZ2VyIGFuZCBwcm9iYWJseSB3aWxsIGhhdmUgdG8gYmUgcmVkdWNlZCBtb3JlIGlmIHJhaW5zIG1pc3MgdGhlIE1pZHdlc3QgYWdhaW4gbmV4dCB3ZWVrLuKAnQ==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUDIcUCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDIwYTNjZmFiMmU0YzFhMDI=</field><field name="symbol" class="java.lang.String">rO0ABXQACUhPVC1VTi5UTw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUDNl5yAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAk9cKPXCj2</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlLhR64Ueu</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAk5mZmZmZm</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAk5mZmZmZm</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAiR64UeuFI</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAj8A==</field><field name="id" class="java.lang.String">rO0ABXQAEGM3OTg2YzJmNTNiOGE1YWE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mIB7AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM0MDg=</field><field name="title" class="java.lang.String">rO0ABXQAN1VTIENhbmNlbHMgT2N0b2JlciBDcm9wIFJlcG9ydCwgRmlyc3QgTWlzcyBpbiAxNDcgWWVhcnM=</field><field name="content" class="java.lang.String">rO0ABXQRN1RoZSBVLlMuIGdvdmVybm1lbnQgY2FuY2VsZWQgaXRzIG1vbnRobHkgcmVwb3J0IG9uIGdyYWluIGFuZCBjb3R0b24gcHJvZHVjdGlvbiBmb3IgdGhlIGZpcnN0IHRpbWUgc2luY2UgcmVwb3J0aW5nIGJlZ2FuIGluIDE4NjYgYW5kIHNhaWQgaXQgd2lsbCBub3QgZXN0aW1hdGUgVS5TLiBvciB3b3JsZCBjcm9wIHByb2R1Y3Rpb24gdW50aWwgZWFybHkgTm92ZW1iZXIuIENhbmNlbGF0aW9uIG9mIHRoZSBPY3RvYmVyIHJlcG9ydCBtZWFucyB0aGUgZmlyc3QgaGFydmVzdC10aW1lIGVzdGltYXRlIG9mIFUuUy4gY3JvcHMgd2lsbCBiZSBOb3YuIDguIFRoZSBwcm9kdWN0aW9uIHJlcG9ydCBhbmQgY29tcGFuaW9uIGRhdGEgb24gY3JvcHMgd29ybGR3aWRlIGFyZSB0aGUgVS5TLiBBZ3JpY3VsdHVyZSBEZXBhcnRtZW50J3MgcHJlbWllcmUgcmVwb3J0cy4gVGhleSBhdHRyYWN0IGEgd29ybGR3aWRlIGF1ZGllbmNlIGFuZCBmcmVxdWVudGx5IG1vdmUgY29tbW9kaXR5IHByaWNlcywgYW5kIHdpdGggdGhlIGdhcCBvZiBhbiBhZGRpdGlvbmFsIG1vbnRoLCBwb3RlbnRpYWxseSBtb3JlIHNvIHRoYW4gdXN1YWwuIFRoZSB3aWRlbHkgZm9sbG93ZWQgVVNEQSByZXBvcnRzIHdlcmUgdGhlIGJpZ2dlc3QgaW1tZWRpYXRlIGNhc3VhbHRpZXMgb2YgdGhlIDE3LWRheSBnb3Zlcm5tZW50IHNodXRkb3duLiBPZmZpY2lhbHMgd2VyZSBhbHNvIGRlY2lkaW5nIG9uIFRodXJzZGF5IHdoZXRoZXIgdG8gaXNzdWUgYW4gb3ZlcmR1ZSByZXBvcnQgb24gdGhlIFUuUy4gaW5mbGF0aW9uIHJhdGUuICJJdCdzIGEgZ3JlYXQgc2hhbWUuIFdlIGxvc2UgdGhlIGNvbnRpbnVpdHkgb2YgdGhlIHNlcmllcywgdGhlIGNvdXJzZSBjb3JyZWN0aW9uIHRoYXQgaXQgcHJvdmlkZXMsIiBzYWlkIEJpbGwgTmVsc29uLCBhbmFseXN0IHdpdGggRG9hbmUgQWR2aXNvcnkgU2VydmljZXMgaW4gU3QuIExvdWlzLiBXaXRoIHRoZSBjYW5jZWxhdGlvbiwgdGhlIE5vdmVtYmVyIHJlcG9ydCB3aWxsIGJlIFVTREEncyBmaXJzdCBoYXJ2ZXN0LXRpbWUgZXN0aW1hdGUgb2YgVS5TLiBjcm9wcy4gQnkgTm92ZW1iZXIsIHRoZSBjb3JuIGFuZCBzb3liZWFuIGhhcnZlc3RzIGFyZSB1c3VhbGx5IGluIHRoZSBmaW5hbCBzdHJldGNoIGFuZCBjb3R0b24gaXMgaGFsZiBoYXJ2ZXN0ZWQuIFVzZXJzIG9mIGNvcm4gYW5kIHNveWJlYW5zLCBmcm9tIGZvb2QgY29tcGFuaWVzIHRvIGV4cG9ydGVycywgd2lsbCBiZSBjb3VudGluZyBldmVyeSBidXNoZWwgdG8gZGV0ZXJtaW5lIGlmIHN1cHBsaWVzIHJlY292ZXIgYWZ0ZXIgdGhyZWUgeWVhcnMgb2YgZGVjbGluaW5nIHByb2R1Y3Rpb24uIEFzIGEgcmVzdWx0LCBtYXJrZXRzIGhhdmUgYmVlbiBoaWdobHkgc2Vuc2l0aXZlIHRvIHRoZSBVU0RBIGVzdGltYXRlcy4gIlRoZXJlIGlzIGFsd2F5cyB0aGUgcG90ZW50aWFsIGZvciBhIHNob2NrIGluIGVhY2ggbW9udGhseSByZXBvcnQgc28gSSdkIHN1Z2dlc3QgdGhlcmUgYXJlIHR3aWNlIHRoZSBjaGFuY2VzIHRoYXQgd2UnbGwgZ2V0IGEgc2hvY2sgdGhpcyB0aW1lLCBvciB0aGF0IHRoZSBzaG9jayB3aWxsIGJlIHR3aWNlIHdoYXQgaXQgb3JkaW5hcmlseSB3b3VsZCBiZSwiIHNhaWQgYSBmdXR1cmVzIGJyb2tlci4gVVNEQSdzIHByZXZpb3VzIGNyb3AgZXN0aW1hdGUgd2FzIGlzc3VlZCBvbiBTZXB0IDEyLiBJdCBhbHNvIG9uIFRodXJzZGF5IGNhbmNlbGVkIG9yIHBvc3Rwb25lZCBhIHJhbmdlIG9mIHJlcG9ydHMgYmVjYXVzZSBpdCBjb3VsZCBub3QgZ2F0aGVyIGRhdGEgZHVyaW5nIHRoZSBzaHV0ZG93biBkdWUgdG8gbGFjayBvZiBmdW5kaW5nLiBHT09EIFRPIEJFIEJBQ0sgQWdyaWN1bHR1cmUgU2VjcmV0YXJ5IFRvbSBWaWxzYWNrIGdyZWV0ZWQgZW1wbG95ZWVzIGFzIHRoZXkgcmV0dXJuZWQgdG8gdGhlIFVTREEgY29tcGxleCBvbiB0aGUgbmF0aW9uYWwgTWFsbC4gIkdvb2QgdG8gaGF2ZSB5b3UgYmFjaywiIGhlIHNhaWQgcmVwZWF0ZWRseSwgc2hha2luZyBoYW5kcyB3aXRoIHdvcmtlcnMuICJXZSBoYXZlIG5ldmVyIG1pc3NlZCBhIHJlcG9ydCBpbiB0aGUgcGFzdCwiIHNhaWQgYSBVU0RBIHNwb2tlc21hbiwgd2hvIHNhaWQgdGhlIGNhbmNlbGF0aW9uIG9mIHRoZSBjcm9wIHJlcG9ydCB3YXMgInRoZSBmaXJzdCB0aW1lIGV2ZXIuIiBVU0RBIGJlZ2FuIGNyb3AgcmVwb3J0cyBpbiAxODY2LCBjb3ZlcmluZyBjb3R0b24gYW5kIHRvYmFjY28sIGEgeWVhciBhZnRlciB0aGUgZW5kIG9mIHRoZSBDaXZpbCBXYXIuIFRoZSBsYXN0IHRpbWUgVVNEQSBkZWxheWVkIGl0cyBwcmVtaWVyZSByZXBvcnRzIHdhcyBTZXB0ZW1iZXIgMjAwMSwgd2hlbiB0aGV5IHdlcmUgaGVsZCB1cCBmb3IgdHdvIGRheXMgaW4gdGhlIHdha2Ugb2YgdGhlIFNlcHQuIDExIHRlcnJvciBhdHRhY2tzLiBCZXNpZGVzIHRoZSBjcm9wIHJlcG9ydCBhbmQgdGhlIGNvbXBhbmlvbiBXb3JsZCBBZ3JpY3VsdHVyYWwgU3VwcGx5IGFuZCBEZW1hbmQgRXN0aW1hdGVzIHJlcG9ydCwgVVNEQSBzYWlkIGl0IGNhbmNlbGVkIHR3byB3ZWVrbHkgcmVwb3J0cyBvbiBjcm9wIGNvbmRpdGlvbnMuIEl0IHNhaWQgYSBtb250aGx5IENhdHRsZSBvbiBGZWVkIHJlcG9ydCwgZHVlIG9uIEZyaWRheSwgd291bGQgYmUgcG9zdHBvbmVkLCBhbG9uZyB3aXRoIGEgcmVwb3J0IG9uIHBlYW51dCBwcmljZXMuICJOQVNTIGlzIGFzc2Vzc2luZyBpdHMgZGF0YSBjb2xsZWN0aW9uIHBsYW5zIGFuZCBldmFsdWF0aW5nIHRoZSB0aW1pbmcgb2YgdXBjb21pbmcgcmVwb3J0cywiIFVTREEgc2FpZCBvZiBpdHMgTmF0aW9uYWwgQWdyaWN1bHR1cmFsIFN0YXRpc3RpY3MgU2VydmljZS4gT2ZmaWNpYWxzIGFsc28gbWV0IHRvIGRlY2lkZSB3aGF0IHRvIGRvIGFib3V0IFVTREEncyB3ZWVrbHkgcmVwb3J0IG9mIGdyYWluLCBzb3liZWFuLCBjb3R0b24gYW5kIG1lYXQgZXhwb3J0cywgYW4gaW1wb3J0YW50IGluZGljYXRvciBvZiBhY3Rpdml0eSBmb3IgdGhlIHdvcmxkJ3MgbGFyZ2VzdCBhZ3JpY3VsdHVyYWwgZXhwb3J0ZXIuIER1cmluZyB0aGUgc2h1dGRvd24gdHJhZGVycyBnb3QgZXhwb3J0IG5ld3MgaW4gZHJpYnMgYW5kIGRyYWJzLiBSZXV0ZXJzIHJlcG9ydGVkIG92ZXJuaWdodCB0aGF0IENoaW5hIGhhcyBib3VnaHQgY2xvc2UgdG8gMS4yIG1pbGxpb24gdG9ucyBvZiBVLlMuIGNvcm4gdGhpcyBtb250aCwgYnV0IGFyZSBhbnhpb3VzIGZvciBhIGNvbXBsZXRlIGFjY291bnRpbmcuICJTb21lIG9mIHRoZSBleHBvcnRzIGFuZCB0aGUgbmV3cyB3ZSB3ZXJlIGhlYXJpbmcgd2FzIG1vcmUgc3BlY3VsYXRpb24gYW5kIHNvIHdlIHdpbGwgYWN0dWFsbHkgYmUgYWJsZSB0byBwdXQgc29tZSBmYWN0cyB3aXRoIGl0LiBUaGUgbG9uZ2VyIHRoZSBnb3Zlcm5tZW50IHdhcyBnb25lLCB0aGUgbW9yZSBvdXQgb2Ygd2hhY2sgdGhpbmdzIGdvdCwiIHNhaWQgSmFzb24gQnJpdHQsIHByZXNpZGVudCBvZiBDZW50cmFsIFN0YXRlcyBDb21tb2RpdGllcy4gRm9yIHRoZSBOb3ZlbWJlciBjcm9wIHJlcG9ydCwgVVNEQSB3aWxsIHJ1biBpdHMgdXN1YWwgc3VydmV5IG9mIG1vcmUgdGhhbiAxMCwwMDAgZ3Jvd2VycyBhbmQgc2VuZCBjcm9wIGVudW1lcmF0b3JzIHRvIGNoZWNrIHlpZWxkcyBhdCBodW5kcmVkcyBvZiBmaWVsZHMgdGhhdCB3ZXJlIHNlbGVjdGVkIGZvciBtb250aGx5IGluc3BlY3Rpb25zLiBVU0RBJ3MgY3JvcCBlc3RpbWF0ZXMsIGlzc3VlZCBhcm91bmQgdGhlIDEwdGggb2YgZWFjaCBtb250aCwgYXJlIGJhc2VkIG9uIGNvbmRpdGlvbnMgb24gdGhlIGZpcnN0IG9mIHRoZSBtb250aC4gSXRzIE5vdmVtYmVyIGZvcmVjYXN0cyBoYXZlIGEgbWFyZ2luIG9mIGVycm9yIG9mIDIuMSBwZXJjZW50IGZvciBjb3JuIGFuZCAyLjMgcGVyY2VudCBmb3Igc295YmVhbnMuIEJ5IGNvbXBhcmlzb24sIHRoZSBTZXB0ZW1iZXIgcmVwb3J0IGhhZCBhbiBlcnJvciBtYXJnaW4gb2YgOC41IHBlcmNlbnQgZm9yIHRoZSBjb3JuIGNyb3AgYW5kIDkuNiBwZXJjZW50IGZvciBzb3liZWFucy4gTWFya2V0IHBhcnRpY2lwYW50cyB3aWxsIGhhdmUgdG8gd2FpdCBhIGJpdCBsb25nZXIgZm9yIHRoZSBDb21taXRtZW50cyBvZiBUcmFkZXJzIHJlcG9ydCBmcm9tIHRoZSBDb21tb2RpdHkgRnV0dXJlcyBUcmFkaW5nIENvbW1pc3Npb24sIHR5cGljYWxseSBkdWUgZWFjaCBGcmlkYXkuIENGVEMsIHRoZSBVLlMuIGZ1dHVyZXMgaW5kdXN0cnkgd2F0Y2hkb2csIHNhaWQgaXQgd2lsbCBub3QgaGF2ZSB0aW1lIHRvIHB1dCB0aGlzIHdlZWsncyByZXBvcnQgdG9nZXRoZXIuIFRoZSByZXBvcnQgc2hvd3MgdGhlIGhvbGRpbmdzIG9mIHZhcmlvdXMgcGFydGljaXBhbnRzIGluIFUuUy4gZnV0dXJlcyBtYXJrZXRzIGFuZCBhcmUgdXNlZCB0byBpbmZlciBwb3RlbnRpYWwgcHJpY2UgdHJlbmRzLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUHEyNyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDM3ZWY5MGUwNjFjYWFiY2M=</field><field name="symbol" class="java.lang.String">rO0ABXQAA05PVg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUHJ7ziAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUbMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUm4UeuFHs</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUbCj1wo9c</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUij1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBR5mZmZmZm</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAADEyiA==</field><field name="id" class="java.lang.String">rO0ABXQAEDBhNjRkOGE0MDQ5ZGRmZWQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mNATAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDMwNTU=</field><field name="title" class="java.lang.String">rO0ABXQAL0Nvcm4gUHJpY2VzIEhpdCAzLVllYXIgTG93IGFzIFVTIFN1cHBsaWVzIEJ1bGdl</field><field name="content" class="java.lang.String">rO0ABXQLNUNvcm4gZnV0dXJlcyBwbHVuZ2VkIHRvIGEgdGhyZWUteWVhciBsb3cgTW9uZGF5IGFmdGVyIHRoZSBVLlMuIERlcGFydG1lbnQgb2YgQWdyaWN1bHR1cmUgYm9vc3RlZCBpdHMgaW52ZW50b3J5IGVzdGltYXRlIGJ5IDI1IHBlcmNlbnQuIFNveWJlYW5zIGRyb3BwZWQgdG8gdGhlIGNoZWFwZXN0IGluIGZpdmUgd2Vla3MgYXMgc3VwcGxpZXMgdG9wcGVkIGFuYWx5c3QgZXN0aW1hdGVzIGJ5IDExIHBlcmNlbnQuIFN0b2NrcGlsZXMgb2YgY29ybiBvbiBTZXB0LiAxIHdlcmUgODI0IG1pbGxpb24gYnVzaGVscywgdGhlIFVTREEgc2FpZCBNb25kYXkgaW4gYSByZXBvcnQuIFRoYXQgY29tcGFyZWQgd2l0aCB0aGUgYWdlbmN54oCZcyBlc3RpbWF0ZSBvZiA2NjEgbWlsbGlvbiBvbiBTZXB0LiAxMi4gQW5hbHlzdHMgaW4gYSBCbG9vbWJlcmcgTmV3cyBzdXJ2ZXkgbGFzdCB3ZWVrIGV4cGVjdGVkIDY5NCBtaWxsaW9uLCBvbiBhdmVyYWdlLiBTb3liZWFuIGludmVudG9yaWVzIHdlcmUgMTQxIG1pbGxpb24gYnVzaGVscywgYW5kIGEgZ2F1Z2Ugb2YgZGVtYW5kIHR1bWJsZWQgNDEgcGVyY2VudCBpbiB0aGUgdGhyZWUgbW9udGhzIGVuZGVkIEF1Zy4gMzEgZnJvbSBhIHllYXIgZWFybGllci4gQ29ybiBoYXMgdHVtYmxlZCAzNiBwZXJjZW50IGluIDIwMTMsIHRoZSBiaWdnZXN0IGRyb3AgYW1vbmcgMjQgcmF3IG1hdGVyaWFscyBpbiB0aGUgU3RhbmRhcmQgJiBQb29y4oCZcyBHU0NJIFNwb3QgSW5kZXgsIGFtaWQgZm9yZWNhc3RzIGZvciBhIHJlY29yZCBjcm9wLiBEZW1hbmQgZm9yIHRoZSBVLlMuIGdyYWluIGZlbGwgdGhlIG1vc3Qgc2luY2UgMTk3NSBpbiB0aGUgcGFzdCB5ZWFyLiBUaGUgbmF0aW9uIGlzIHRoZSB3b3JsZOKAmXMgdG9wIGdyb3dlci4g4oCcVGhlIG1hcmtldCBpcyBnb2luZyB0byBiZSBkZWFsaW5nIHdpdGggYmlnIGNvcm4gc3VwcGxpZXMgZm9yIHRoZSBuZXh0IHllYXIsIGFuZCB0aGF04oCZcyBnb2luZyB0byBsaW1pdCByYWxsaWVzLOKAnSBEYWxlIER1cmNoaG9seiwgdGhlIHNlbmlvciBtYXJrZXQgYW5hbHlzdCBhdCBBZ3JpVmlzb3IgTExDIGluIEJsb29taW5ndG9uLCBJbGxpbm9pcywgc2FpZCBpbiBhIHRlbGVwaG9uZSBpbnRlcnZpZXcuIENvcm4gZnV0dXJlcyBkcm9wcGVkIDIgcGVyY2VudCB0byAkNC40NSBhIGJ1c2hlbCBhdCAxOjA5IHAubS4gb24gdGhlIENoaWNhZ28gQm9hcmQgb2YgVHJhZGUuIEVhcmxpZXIsIHRoZSBwcmljZSB0b3VjaGVkICQ0LjQyMjUsIHRoZSBsb3dlc3QgZm9yIGEgbW9zdC1hY3RpdmUgY29udHJhY3Qgc2luY2UgU2VwdC4gMSwgMjAxMC4gVHJhZGluZyB3YXMgMzkgcGVyY2VudCBhYm92ZSB0aGUgYXZlcmFnZSBpbiB0aGUgcGFzdCAxMDAgZGF5cyBmb3IgdGhpcyB0aW1lLCBhY2NvcmRpbmcgdG8gZGF0YSBjb21waWxlZCBieSBCbG9vbWJlcmcuIE9uIFNlcHQuIDEyLCB0aGUgVVNEQSBlc3RpbWF0ZWQgc295YmVhbiBpbnZlbnRvcmllcyBhdCAxMjUgbWlsbGlvbi4gTGFzdCB3ZWVrLCAyOCBhbmFseXN0cyBzdXJ2ZXllZCBieSBCbG9vbWJlcmcgTmV3cyBwcm9qZWN0ZWQgMTI3IG1pbGxpb24sIG9uIGF2ZXJhZ2UuIFRoZSBVLlMuIGlzIHRoZSB0b3AgcHJvZHVjZXIuICAgICAgICAgICAgICAgICAgICAgICBIYXJ2ZXN0IEFjY2VsZXJhdGVzIOKAnFN1cHBsaWVzIGFyZSBhIGxpdHRsZSBiaWdnZXIgdGhhbiBwZW9wbGUgZXhwZWN0ZWQs4oCdIFJhbmR5IE1pdHRlbHN0YWVkdCwgdGhlIGRpcmVjdG9yIG9mIHJlc2VhcmNoIGF0IFIuSi4gT+KAmUJyaWVuICYgQXNzb2NpYXRlcyBpbiBDaGljYWdvLCBzYWlkIGluIGEgdGVsZXBob25lIGludGVydmlldy4g4oCcV2l0aG91dCBhIGJ1bGxpc2ggc3VycHJpc2UsIHRoZSBtYXJrZXQgaXMgdW5kZXIgcHJlc3N1cmUgd2l0aCB0aGUgaGFydmVzdCBjb21pbmcgdmVyeSBxdWlja2x5LiBZaWVsZHMgY29sbGVjdGVkIHNvIGZhciBoYXZlIGJlZW4gYmV0dGVyIHRoYW4gZXhwZWN0ZWQsIGFuZCBub3cgd2XigJlsbCB3YWl0IHRvIHNlZSB3aGF0IGhhcHBlbnMgdG8gdGhlIGNyb3BzIHRoYXQgd2VyZSBwbGFudGVkIGxhdGUgYmVjYXVzZSBvZiB0aGUgZmxvb2Rpbmcu4oCdIFNveWJlYW4gZnV0dXJlcyBmb3IgTm92ZW1iZXIgZGVsaXZlcnkgZmVsbCAyLjMgcGVyY2VudCB0byAkMTIuODkyNSBhIGJ1c2hlbC4gRWFybGllciwgdGhlIG9pbHNlZWQgdG91Y2hlZCAkMTIuODQsIHRoZSBsb3dlc3Qgc2luY2UgQXVnLiAyMi4gVHJhZGluZyB3YXMgNDMgcGVyY2VudCBhYm92ZSB0aGUgYXZlcmFnZSBpbiB0aGUgcGFzdCAxMDAgZGF5cyBmb3IgdGhpcyB0aW1lLCBhY2NvcmRpbmcgdG8gZGF0YSBjb21waWxlZCBieSBCbG9vbWJlcmcuIFRocm91Z2ggU2VwdC4gMjcsIHRoZSBvaWxzZWVkIGRyb3BwZWQgNi40IHBlcmNlbnQgdGhpcyB5ZWFyLiBUaGUgVVNEQSBlYXJsaWVyIHRoaXMgbW9udGggcHJlZGljdGVkIGEgcmVjb3JkIGNvcm4gaGFydmVzdCBvZiAxMy44NDMgYmlsbGlvbiBidXNoZWxzLCAyOCBwZXJjZW50IGFib3ZlIGxhc3QgeWVhciwgc2lnbmFsaW5nIGxvd2VyIGNvc3RzIGZvciBsaXZlc3RvY2sgZmVlZC4gVGhlIGFnZW5jeSB3aWxsIHVwZGF0ZSBpdHMgcHJvamVjdGlvbnMgZm9yIGNyb3BzIG9uIE9jdC4gMTEuIENoZWFwZXIgY29ybiBpcyBib29zdGluZyBwcm9maXQgZm9yIEFyY2hlci1EYW5pZWxzLU1pZGxhbmQgQ28uLCB3aGljaCBtYWtlcyBldGhhbm9sIGZyb20gdGhlIGdyYWluLCBhbmQgU2FuZGVyc29uIEZhcm1zIEluYy4sIHRoZSB0aGlyZC1sYXJnZXN0IFUuUy4gcG91bHRyeSBwcm9kdWNlci4gQ29ybiBpcyB0aGUgYmlnZ2VzdCBVLlMuIGNyb3AsIGZvbGxvd2VkIGJ5IHNveWJlYW5zLCBoYXkgYW5kIHdoZWF0LCBVU0RBIGRhdGEgc2hvdy4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUFtPMCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDUxMmMwYWM0ZGNiMzU0OTY=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNBRk0=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUFyYxyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBQVR64UeuF</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBQYKPXCj1x</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBQGuFHrhR7</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBQQzMzMzMz</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBP71wo9cKP</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAKI1A==</field><field name="id" class="java.lang.String">rO0ABXQAEDc3OTFkNzU4NDIyYjFkZTM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKJhAAAA==</field></document></documents><date>2015-05-07T12:15:42-0500</date></cacheEntry>
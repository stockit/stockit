<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hBIGRvY3RvciBhdCBhIGhvc3BpdGFsIGluIGNlbnRyYWwgSGEgVGluaCBwcm92aW5jZSBzYWlkIGZpdmUgVmlldG5hbWVzZSB3b3JrZXJzIGFuZCAxNiBvdGhlciBwZW9wbGUgZGVzY3JpYmVkIGFzIENoaW5lc2Ugd2VyZSBraWxsZWQgb24gV2VkbmVzZGF5IG5pZ2h0IGluIHJpb3Rpbmcgb25lIG9mIHRoZSB3b3JzdCBicmVha2Rvd25zIGluIFNpbm9WaWV0bmFtZXNlIHJlbGF0aW9ucyBzaW5jZSB0aGUgbmVpZ2hib3JzIGZvdWdodCBhIGJyaWVmIGJvcmRlciB3YXIgaW4gMTk3OSBUaGVyZSB3ZXJlIGFib3V0IGEgaHVuZHJlZCBwZW9wbGUgc2VudCB0byB0aGUgaG9zcGl0YWwgbGFzdCBuaWdodCBNYW55IHdlcmUgQ2hpbmVzZSBNb3JlIGFyZSBiZWluZyBzZW50IHRvIHRoZSBob3NwaXRhbCB0aGlzIG1vcm5pbmcgdGhlIGRvY3RvciBhdCBIYSBUaW5oIEdlbmVyYWwgSG9zcGl0YWwgdG9sZCBSZXV0ZXJzIGJ5IHBob25lIExvY2FsIG1lZGlhIGhhcyBob3dldmVyIHNhaWQgb25seSBwZXJzb24gd2FzIGtpbGxlZCB3aGlsZSBDaGluYXMgc3RhdGUgbmV3cyBhZ2VuY3kgWGluaHVhIHJlcG9ydGVkIHRoYXQgYXQgbGVhc3QgdHdvIENoaW5lc2UgbmF0aW9uYWxzIGhhZCBkaWVkIGFuZCBtb3JlIHRoYW4gMTAwIGhvc3BpdGFsaXplZCBWaWV0bmFtZXNlIFByaW1lIE1pbmlzdGVyIE5ndXllbiBUYW4gRHVuZyBjYWxsZWQgb24gcG9saWNlIGFuZCBzdGF0ZSBhbmQgbG9jYWwgYXV0aG9yaXRpZXMgdG8gcmVzdG9yZSBvcmRlciBhbmQgZW5zdXJlIHRoZSBzYWZldHkgb2YgcGVvcGxlIGFuZCBwcm9wZXJ0eSBpbiB0aGUgYWZmZWN0ZWQgYXJlYXMgQXBwcm9wcmlhdGUgbWVhc3VyZXMgc2hvdWxkIGJlIHRha2VuIGltbWVkaWF0ZWx5IHRvIGhlbHAgYnVzaW5lc3NlcyBzdGFiaWxpemUgcXVpY2tseSBhbmQgcmV0dXJuIHRvIG5vcm1hbCBwcm9kdWN0aW9uIGFjdGl2aXRpZXMgaGUgc2FpZCBpbiBhIHN0YXRlbWVudCB3aXRob3V0IGVsYWJvcmF0aW5nIFRoZSBQbGFubmluZyBhbmQgSW52ZXN0bWVudCBNaW5pc3RyeSBibGFtZWQgdGhlIGNsYXNoZXMgb24gZXh0cmVtaXN0cyBhbmQgd2FybmVkIHRoYXQgdGhleSBjb3VsZCBzZXJpb3VzbHkgYWZmZWN0IHRoZSBpbnZlc3RtZW50IGVudmlyb25tZW50IGluIFZpZXRuYW0gRm9ybW9zYSBQbGFzdGljcyBHcm91cCBUYWl3YW5zIGJpZ2dlc3QgaW52ZXN0b3IgaW4gVmlldG5hbSBzYWlkIGl0cyB1cGNvbWluZyBzdGVlbCBwbGFudCBpbiBIYSBUaW5oIHdhcyBzZXQgb24gZmlyZSBhZnRlciBmaWdodGluZyBiZXR3ZWVuIGl0cyBWaWV0bmFtZXNlIGFuZCBDaGluZXNlIHdvcmtlcnMgT25lIENoaW5lc2Ugd29ya2VyIHdhcyBraWxsZWQgYW5kIDkwIG90aGVycyBpbmp1cmVkIGl0IHNhaWQgaW4gYSBzdGF0ZW1lbnQgaW4gVGFpcGVpIEl0IHdhcyBub3QgaW1tZWRpYXRlbHkgY2xlYXIgaWYgdGhlIGNhc3VhbHRpZXMgd2VyZSBhbW9uZyB0aG9zZSBhZG1pdHRlZCB0byB0aGUgSGEgVGluaCBob3NwaXRhbCBUaGUgcGxhbnQgaXMgZXhwZWN0ZWQgdG8gYmUgU291dGhlYXN0IEFzaWFzIGxhcmdlc3Qgc3RlZWwgbWFraW5nIGZhY2lsaXR5IHdoZW4gaXQgaXMgY29tcGxldGVkIGluIDIwMTcgTm8gZGV0YWlscyBvZiBmaXJlIGRhbWFnZSBvciBmaW5hbmNpYWwgbG9zc2VzIHdlcmUgaW1tZWRpYXRlbHkgYXZhaWxhYmxlIHRoZSBjb21wYW55IHNhaWQgVGhlIEhhIFRpbmggaW5kdXN0cmlhbCBwYXJrIGVzdGltYXRlZCB0byBjb3N0IG1vcmUgdGhhbiAyMCBiaWxsaW9uIGlzIG1vcmUgdGhhbiBoYWxmIGNvbXBsZXRlIFdoZW4gZmluaXNoZWQgaW4gMjAyMCBpdCB3aWxsIGhhdmUgYSBwb3J0IGEgMjEwME1XIHBvd2VyIHBsYW50IGFuZCBzaXggZnVybmFjZXMgVmlldG5hbWVzZSBtZWRpYSBzYXkgIE1BSU5TVEFZIE9GIEVDT05PTVkgU3VjaCBpbmR1c3RyaWFsIHpvbmVzIGFyZSB0aGUgYmFja2JvbmUgb2YgVmlldG5hbXMgMTM4IGJpbGxpb24gZWNvbm9teSBUaGUgY291bnRyeSBoYXMgMTkwIHJlZ2lzdGVyZWQgaW5kdXN0cmlhbCBwYXJrcyBlbXBsb3lpbmcgYWJvdXQgMjEgbWlsbGlvbiBwZW9wbGUgVGhleSBtYW51ZmFjdHVyZWQgcHJvZHVjdHMgd29ydGggMzggYmlsbGlvbiBpbiBleHBvcnRzIGxhc3QgeWVhciBvciAzMCBwZXJjZW50IG9mIFZpZXRuYW1zIHRvdGFsIGV4cG9ydCByZXZlbnVlIFRoZSBhbnRpQ2hpbmEgcmlvdHMgZXJ1cHRlZCBpbiBpbmR1c3RyaWFsIHpvbmVzIGluIHRoZSBzb3V0aCBvZiB0aGUgY291bnRyeSBvbiBUdWVzZGF5IGFmdGVyIHByb3Rlc3RzIGFnYWluc3QgQmVpamluZyBwbGFjaW5nIGFuIG9pbCByaWcgaW4gYSBwYXJ0IG9mIHRoZSBTb3V0aCBDaGluYSBTZWEgY2xhaW1lZCBieSBIYW5vaSBUaGUgYnJ1bnQgb2YgdGhlIHZpb2xlbmNlIGhhcyBiZWVuIGJvcm5lIGJ5IFRhaXdhbmVzZSBmaXJtcyBtaXN0YWtlbiBieSB0aGUgcmlvdGVycyBhcyBiZWluZyBvd25lZCBieSBtYWlubGFuZCBDaGluZXNlIENoaW5hIGV4cHJlc3NlZCBzZXJpb3VzIGNvbmNlcm4gb3ZlciB0aGUgdmlvbGVuY2UgaW4gVmlldG5hbSAgYW5kIHVyZ2VkIGl0IHRvIHB1bmlzaCBjcmltaW5hbHMgYW5kIGNvbXBlbnNhdGUgdmljdGltcyBGb3JlaWduIE1pbmlzdHJ5IHNwb2tlc3dvbWFuIEh1YSBDaHVueWluZyBzdWdnZXN0ZWQgSGFub2kgaGFkIHR1cm5lZCBhIGJsaW5kIGV5ZSB0byB0aGUgcHJvdGVzdGVycyBUaGUgbG9vdGluZyBhbmQgc3RlYWxpbmcgdGhhdCBoYXMgdGFrZW4gcGxhY2UgYXQgQ2hpbmVzZSBidXNpbmVzc2VzIGFuZCB0byBDaGluZXNlIHBlb3BsZSBoYXMgYSBkaXJlY3QgcmVsYXRpb25zaGlwIHdpdGggVmlldG5hbXMgd2lua2luZyBhdCBhbmQgaW5kdWxnaW5nIGxhdyBicmVha2VycyB0aGVyZSBBbHRob3VnaCB0aGUgdHdvIENvbW11bmlzdCBuZWlnaGJvcnMgaGF2ZSBjbG9zZSBlY29ub21pYyBhbmQgcG9saXRpY2FsIHRpZXMgVmlldG5hbWVzZSByZXNlbnRtZW50IGFnYWluc3QgQ2hpbmEgcnVucyBkZWVwIHJvb3RlZCBpbiBmZWVsaW5ncyBvZiBuYXRpb25hbCBwcmlkZSBhbmQgdGhlIHN0cnVnZ2xlIGZvciBpbmRlcGVuZGVuY2UgYWZ0ZXIgZGVjYWRlcyBvZiB3YXIgYW5kIG1vcmUgdGhhbiAxMDAwIHllYXJzIG9mIENoaW5lc2UgY29sb25pYWwgcnVsZSB0aGF0IGVuZGVkIGluIHRoZSAxMHRoIGNlbnR1cnkgIFRoZSBkaXNwdXRlIGluIHRoZSBTb3V0aCBDaGluYSBTZWEgaGFzIHNwYXJrZWQgYW5nZXIgb24gYm90aCBzaWRlcyBEb3plbnMgb2YgdmVzc2VscyBmcm9tIHRoZSB0d28gY291bnRyaWVzIGFyZSBhcm91bmQgdGhlIG9pbCByaWcgYW5kIGJvdGggc2lkZXMgaGF2ZSBhY2N1c2VkIHRoZSBvdGhlciBvZiBpbnRlbnRpb25hbCBjb2xsaXNpb25zIGluY3JlYXNpbmcgdGhlIHJpc2sgb2YgYSBjb25mcm9udGF0aW9uIFZpZXRuYW1lc2UgYXJlIGFsc28gYW5nZXJlZCBieSB3aGF0IHRoZXkgY2FsbCBleHBsb2l0YXRpb24gb2YgaXRzIHJhdyBtYXRlcmlhbHMgYW5kIHJlc291cmNlcyBieSBDaGluZXNlIGZpcm1zIGFuZCBzYXkgYWx0aG91Z2ggYmlsYXRlcmFsIHRyYWRlIGlzIG92ZXIgNTAgYmlsbGlvbiBhbm51YWxseSBDaGluZXNlIGludmVzdG1lbnQgaW4gVmlldG5hbSBpcyBvbmx5IGFyb3VuZCAyMyBiaWxsaW9uIENoaW5hIGZhY2VzIHNpbWlsYXIgYWNjdXNhdGlvbiBpbiBvdGhlciBlbWVyZ2luZyBtYXJrZXRzIGVzcGVjaWFsbHkgaW4gQWZyaWNhIFNvbWUgODUgcGVyY2VudCBvZiBDaGluYXMgZXhwb3J0cyBmcm9tIEFmcmljYSBhcmUgcmF3IG1hdGVyaWFscyBzdWNoIGFzIG9pbCBhbmQgbWluZXJhbHMgYW5kIEJlaWppbmcgaGFzIGJlZW4gYWNjdXNlZCBvZiBob2xkaW5nIGJhY2sgdGhlIGNvbnRpbmVudHMgZWNvbm9taWMgZGV2ZWxvcG1lbnQgYnkgaWdub3JpbmcgdGhlIGNyZWF0aW9uIG9mIGxvY2FsIGpvYnMgYW5kIG1hcmtldHMKClRob3VzYW5kcyBvZiBWaWV0bmFtZXNlIHNldCBmaXJlIHRvIGZvcmVpZ24gZmFjdG9yaWVzIGFuZCByYW1wYWdlZCB0aHJvdWdoIGluZHVzdHJpYWwgem9uZXMgaW4gQmluaCBEdW9uZyBhbmQgRG9uZyBOYWkgcHJvdmluY2VzIG5lYXIgSG8gQ2hpIE1pbmggQ2l0eSBvbiBUdWVzZGF5IG9mZmljaWFscyBzYWlkIFByb3Rlc3RzIGNvbnRpbnVlZCBvbiBXZWRuZXNkYXkgSHVuZHJlZHMgb2YgQ2hpbmVzZSB3b3JraW5nIGluIHRoZSB6b25lcyBoYXZlIGZsZWQgbW9zdCB0byBuZWlnaGJvcmluZyBDYW1ib2RpYSBhbmQgb3RoZXJzIGJ5IGFpciBZZXN0ZXJkYXkgbW9yZSB0aGFuIDYwMCBDaGluZXNlIHBlb3BsZSBmcm9tIFZpZXRuYW0gY3Jvc3NlZCBhdCBCYXZldCBpbnRlcm5hdGlvbmFsIGNoZWNrcG9pbnQgaW50byBDYW1ib2RpYSBDYW1ib2RpYW4gTmF0aW9uYWwgUG9saWNlIHNwb2tlc21hbiBLaXJ0IENoYW50aGFyaXRoIHRvbGQgUmV1dGVycyBCYXZldCBpcyBvbiBhIGhpZ2h3YXkgc3RyZXRjaGluZyBmcm9tIEhvIENoaSBNaW5oIENpdHkgVmlldG5hbXMgY29tbWVyY2lhbCBjZW50ZXIgdG8gQ2FtYm9kaWFzIGNhcGl0YWwgUGhub20gUGVuaCBBdCBIbyBDaGkgTWluaCBDaXR5IGFpcnBvcnQgc2NvcmVzIG9mIENoaW5lc2Ugd2VyZSBhcnJpdmluZyBpbiBsYXJnZSBncm91cHMgcXVldWluZyB0byBncmFiIHRpY2tldHMgb3IgZ2V0IG9uIHRoZSBmaXJzdCBmbGlnaHRzIHRvIE1hbGF5c2lhIENhbWJvZGlhIFRhaXdhbiBTaW5nYXBvcmUgYW5kIENoaW5hIFBlb3BsZSBkb250IGZlZWwgc2FmZSBoZXJlIHNvIHdlIGp1c3Qgd2FudCB0byBnZXQgb3V0IG9mIFZpZXRuYW0gc2FpZCBYdSBXZW4gSG9uZyB3aG8gd29ya3MgZm9yIGFuIGlyb24gYW5kIHN0ZWVsIGNvbXBhbnkgYW5kIGJvdWdodCBhIG9uZXdheSB0aWNrZXQgdG8gQ2hpbmEgRXZlbiB0byBUaGFpbGFuZCBhbmQgQ2FtYm9kaWEgSWYgdGhlcmUgYXJlIG5vIG1vcmUgdGlja2V0cyB0byBDaGluYSB0aGV5IHRoaW5rIGp1c3QgbGVhdmluZyBWaWV0bmFtIGlzIGVub3VnaCBXZXJlIHNjYXJlZCBvZiBjb3Vyc2UgV2l0aCBhbGwgdGhlIHQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0wMy0yN1QwMDowMDowMFogVE8gMjAxMy0xMi0wM1Q1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDIyNzU=</field><field name="title" class="java.lang.String">rO0ABXQAP0NoaW5hLVZpZXRuYW0gRXhwYW5kIEpvaW50IEV4cGxvcmF0aW9uIERlYWwgQW1pZCBUZW5zaW9uIGF0IFNlYQ==</field><field name="content" class="java.lang.String">rO0ABXQI7VRoZSBwcmVzaWRlbnRzIG9mIENoaW5hIGFuZCBWaWV0bmFtIHNldCB1cCBhIGhvdC1saW5lIHRvIGRlZnVzZSB0ZXJyaXRvcmlhbCBkaXNwdXRlcyBhbmQgZXhwYW5kZWQgYSAyMDA2IGFncmVlbWVudCB0byBqb2ludGx5IGV4cGxvcmUgZm9yIG9pbCBpbiB0aGUgR3VsZiBvZiBUb25raW4sIGFzIHRoZSB0d28gbmF0aW9ucyBzZWVrIHRvIHN0cmVuZ3RoZW4gZWNvbm9taWMgdGllcy4gVmlldG5hbSBPaWwgYW5kIEdhcyBHcm91cOKAmXMgYWdyZWVtZW50IHdpdGggQ2hpbmEgTmF0aW9uYWwgT2Zmc2hvcmUgT2lsIENvcnAuLCBhbm5vdW5jZWQgZHVyaW5nIFByZXNpZGVudCBUcnVvbmcgVGFuIFNhbmfigJlzIHZpc2l0IHRvIEJlaWppbmcgdG9kYXksIGV4cGFuZHMgdGhlIGV4cGxvcmF0aW9uIGFyZWEgdG8gNCwwMDAgc3F1YXJlIGtpbG9tZXRlcnMgKDIsNTAwIG1pbGVzKSBhbmQgZXh0ZW5kcyB0aGUgcGxhbiB0aHJvdWdoIDIwMTYsIHRoZSBWaWV0bmFtIGdvdmVybm1lbnQgc2FpZCBvbiBpdHMgd2Vic2l0ZS4gVGhlIGFncmVlbWVudCBhbmQgaG90bGluZSBhaW0gdG8gY2FsbSB0ZW5zaW9ucyBhZnRlciBkaXNwdXRlcyBpbiB0aGUgd2F0ZXJzIHN0cmFpbmVkIHRpZXMgYmV0d2VlbiB0aGUgbmVpZ2hib3JzIGFuZCBzcGFya2VkIHByb3Rlc3RzIGluIEhhbm9pLiBTYW5nIGlzIHNlZWtpbmcgdG8gc3B1ciBhbiBlY29ub215IHRoYXQgZ3JldyBhdCB0aGUgc2xvd2VzdCBwYWNlIGluIDEzIHllYXJzIGFuZCBuYXJyb3cgQ2hpbmHigJlzIHRyYWRlIHN1cnBsdXMsIHdoaWNoIGhpdCAkMTEgYmlsbGlvbiBmcm9tIEphbnVhcnkgdGhyb3VnaCBNYXkuIOKAnEl0IHNlZW1zIENoaW5hIGFuZCBWaWV0bmFtIGFyZSBiZW5kaW5nIG92ZXIgYmFja3dhcmQgdG8gbWFrZSB0aGlzIHBvc2l0aXZlLOKAnSBzYWlkIENhcmx5bGUgVGhheWVyLCBhbiBlbWVyaXR1cyBwcm9mZXNzb3IgYXQgdGhlIEF1c3RyYWxpYW4gRGVmZW5zZSBGb3JjZSBBY2FkZW15IGluIENhbmJlcnJhLiDigJxUaGVyZSBhcmUgc29tZSBzaWduaWZpY2FudCBpc3N1ZXMsIHRoZSB0cmFkaW5nIGRlYnQgVmlldG5hbSBoYXMgYW5kIGlsbGVnYWwgQ2hpbmVzZSB3b3JrZXJzLuKAnSBUaGUgdHdvIG5hdGlvbnPigJkgYWdyaWN1bHR1cmUgbWluaXN0ZXJzIHNpZ25lZCBhbiBhZ3JlZW1lbnQgdG8gZXN0YWJsaXNoIHRoZSBob3QtbGluZS4gTm8gZGV0YWlscyB3ZXJlIHByb3ZpZGVkLiBJbiBoaXMgbWVldGluZyB3aXRoIFNhbmcgeWVzdGVyZGF5LCBDaGluZXNlIFByZXNpZGVudCBYaSBKaW5waW5nIHNhaWQgdGhlIHR3byBzaWRlcyBzaG91bGQgc2VlayBhIHBvbGl0aWNhbCBzb2x1dGlvbiB0byB0aGVpciB0ZXJyaXRvcmlhbCBkaXNwdXRlLiBDb21wZXRpdGlvbiBmb3IgZmlzaCwgZ2FzIGFuZCBvaWwgaGFzIGludGVuc2lmaWVkIGJldHdlZW4gQ2hpbmEgYW5kIG90aGVyIEFzaWFuIGNvdW50cmllcywgd2l0aCBWaWV0bmFtIGFuZCB0aGUgUGhpbGlwcGluZXMgcmVqZWN0aW5nIENoaW5h4oCZcyBtYXJpdGltZSBjbGFpbXMgYXMgYSBiYXNpcyBmb3Igam9pbnQgZGV2ZWxvcG1lbnQgb2Ygb2lsIGFuZCBnYXMgcmVzZXJ2ZXMgaW4gYXJlYXMgc291dGggb2YgdGhlIEd1bGYgb2YgVG9ua2luLiBMYXN0IG1vbnRoIFZpZXRuYW0gZGVtYW5kZWQgY29tcGVuc2F0aW9uIGFmdGVyIGEgQ2hpbmVzZSBzaGlwIHJhbW1lZCBhIGZpc2hpbmcgYm9hdCBvZmYgaXRzIGNvYXN0LiBWaWV0bmFtIEZpc2hlcm1lbiBJbiBNYXJjaCwgVmlldG5hbSBhY2N1c2VkIGEgQ2hpbmVzZSBzaGlwIG9mIGZpcmluZyBvbiBmaXNoZXJtZW4gbmVhciB0aGUgUGFyYWNlbCBJc2xhbmRzLCB3aGljaCBDaGluYSBoYXMgY29udHJvbGxlZCBzaW5jZSBhIGJhdHRsZSB3aXRoIFZpZXRuYW0gaW4gMTk3NC4gVmlldG5hbSBhbmQgQ2hpbmEgYWxzbyBzZXBhcmF0ZWx5IGNsYWltIHNvbWUgb2YgdGhlIFNwcmF0bHkgSXNsYW5kcyBhcmVhLiBTYW5nIGVtcGhhc2l6ZWQg4oCcdGhlIGlzc3VlIG9mIGZpc2hpbmcsIHdoaWNoIGlzIGNsb3NlbHkgcmVsYXRlZCB0byB0aGUgbGl2ZWxpaG9vZCBhbmQgaW50ZXJlc3RzIG9mIG1pbGxpb25zIG9mIFZpZXRuYW1lc2UgZmlzaGVybWVuLOKAnSB0aGUgZ292ZXJubWVudCB3ZWJzaXRlIHJlcG9ydGVkLiBUaGUgZ292ZXJubWVudCB3ZWJzaXRlIGFsc28gcmVwb3J0ZWQgU2FuZyBzb3VnaHQgQ2hpbmVzZSBpbnZlc3RtZW50IGluIGluZnJhc3RydWN0dXJlLCBtYW51ZmFjdHVyaW5nIGFuZCB0ZWNobm9sb2d5IHByb2plY3RzIHRvIGJvb3N0IFZpZXRuYW3igJlzIGVjb25vbXku</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT9f9BiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGZkNGRjZDU1ZTViNTEwMTk=</field><field name="symbol" class="java.lang.String">rO0ABXQACUhPVC1VTi5UTw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT9lGnSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlvXCj1wo9</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAmMzMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlvXCj1wo9</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAmMzMzMzMz</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAjBR64UeuF</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABO6A==</field><field name="id" class="java.lang.String">rO0ABXQAEDAzOGRlMDdlMDFmN2NmZjY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMWEAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDIzODk=</field><field name="title" class="java.lang.String">rO0ABXQAMkNoaW5hIEhpdHMgQmFjayBhdCBFVSBXaW5lIE92ZXIgU29sYXIgUGFuZWwgRHV0aWVz</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8StLSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDNjODE2MzIzNTY2ZTI5Yzc=</field><field name="symbol" class="java.lang.String">rO0ABXQABkJJTi5UTw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8X2xCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA29cKPXCj2</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3EeuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA2yj1wo9cK</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA2zMzMzMzN</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA11wo9cKPX</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAOe9A==</field><field name="id" class="java.lang.String">rO0ABXQAEGM5ODc2NjkyZmI0MWM2ZGM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJxRAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQ5ODE=</field><field name="title" class="java.lang.String">rO0ABXQAPENyZWRpdC1Ecml2ZW4gQ2hpbmEgR2x1dCBUaHJlYXRlbnMgdG8gU3BhcmsgQmFuayBEZWJ0IENyaXNpcw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJu8acAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDRmMmY0MjA3YzNmYTg2NWI=</field><field name="symbol" class="java.lang.String">rO0ABXQABExPQU4=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJ0GAMAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/+ZmZmZmZm</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/+ZmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/8zMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/9cKPXCj1x</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/7MzMzMzMz</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAOEA==</field><field name="id" class="java.lang.String">rO0ABXQAEGYwMTkxZDcwMTZmMDQyM2M=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEsMAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTEzOTY4</field><field name="title" class="java.lang.String">rO0ABXQAPFJhdHRsZWQgYnkgUHJvYmVzLCBGb3JlaWduIEZpcm1zIGluIENoaW5hIEJlZWYgVXAgQ29tcGxpYW5jZQ==</field><field name="content" class="java.lang.String">rO0ABXQbUVRoZSBpbnZlc3RpZ2F0aW9ucyByZXByZXNlbnQgb25lIG9mIHRoZSBtb3N0IHNpZ25pZmljYW50IHJpc2tzIHRvIGRvaW5nIGJ1c2luZXNzIGluIENoaW5hIGluIHllYXJzLiBBbnRpdHJ1c3QgcmVndWxhdG9ycyBoYXZlIGxvb2tlZCBpbnRvIHNlY3RvcnMgc3VjaCBhcyBwaGFybWFjZXV0aWNhbHMsIG1pbGsgcG93ZGVyIGFuZCBqZXdlbGxlcnkgaW4gcmVjZW50IG1vbnRocyBhbmQgc3VnZ2VzdGVkIHRoYXQgYXV0b3MsIHRlbGVjb21tdW5pY2F0aW9ucywgYmFua3MgYW5kIG9pbCBmaXJtcyBjb3VsZCBiZSBuZXh0LiBDb3JydXB0aW9uIHByb2JlcyBoYXZlIHRhcmdldGVkIHRoZSBwaGFybWFjZXV0aWNhbCBpbmR1c3RyeSB3aGlsZSBhdXRob3JpdGllcyBoYXZlIGFsc28gbGF1bmNoZWQgYSBtYWpvciBpbnZlc3RpZ2F0aW9uIGludG8gQ2hpbmEncyBsZWFkaW5nIG9pbCBhbmQgZ2FzIGNvbXBhbnkuIE9uZSBleGVjdXRpdmUgZnJvbSBhIGZvcmVpZ24tbGlzdGVkIG1lZGljYWwgZGV2aWNlIG1ha2VyIHRvbGQgUmV1dGVycyBoZSBjYW5jZWxsZWQgaGlzIHN1bW1lciB2YWNhdGlvbnMgcGxhbnMgYW5kIGluc3RlYWQgc3BlbnQgdGhlIHBhc3QgbW9udGggY3Jpc3MtY3Jvc3NpbmcgQ2hpbmEgdG8gbWFrZSBzdXJlIHRoZSBjb21wYW55J3Mgb3BlcmF0aW9ucyB3ZXJlIG5vdCB2aW9sYXRpbmcgYW55IENoaW5lc2UgbGF3cy4gTGF3eWVycyBpbiBDaGluYSBzYXkgY2xpZW50IGVucXVpcmllcyByZWxhdGVkIHRvIGEgZml2ZS15ZWFyIG9sZCBhbnRpLW1vbm9wb2x5IGxhdyDigJQgc3VkZGVubHkgYmVpbmcgZW5mb3JjZWQgd2l0aCB6ZWFsIOKAlCBoYXZlIGp1bXBlZCwgaW5jbHVkaW5nIHJlcXVlc3RzIGZvciBhbnRpdHJ1c3QgYXVkaXRzLiBSZXV0ZXJzIHNwb2tlIHRvIHR3byBkb3plbiBmb3JlaWduIGV4ZWN1dGl2ZXMsIGJ1c2luZXNzIGNvbnN1bHRhbnRzIGFuZCBsYXd5ZXJzLiBBbGwgdGhlIGNvbXBhbnkgZXhlY3V0aXZlcyBkZWNsaW5lZCB0byBiZSBpZGVudGlmaWVkIGZvciBmZWFyIG9mIGF0dHJhY3Rpbmcgc2NydXRpbnkgZnJvbSByZWd1bGF0b3JzLiBPdmVyYWxsLCB0aGV5IHNhaWQgdGhleSB3ZXJlIHN0aWxsIG9wdGltaXN0aWMgYWJvdXQgZG9pbmcgYnVzaW5lc3MgaW4gQ2hpbmEsIHdoZXJlIGh1bmRyZWRzIG9mIG1pbGxpb25zIG9mIG1vcmUgY29uc3VtZXJzIHdpbGwgam9pbiB0aGUgbWlkZGxlIGNsYXNzIGV2ZW4gYXMgdGhlIGVjb25vbXkgbG9va3Mgc2V0IHRvIGdyb3cgaW4gMjAxMyBhdCBpdHMgc2xvd2VzdCBwYWNlIGluIDIzIHllYXJzLiBXaGlsZSBjb3JydXB0aW9uIGludmVzdGlnYXRpb25zIHBlcmlvZGljYWxseSBtYWtlIHRoZSBoZWFkbGluZXMsIHRoZSBsYXRlc3QgY2FtcGFpZ24gYXBwZWFycyB0byBoYXZlIG1vcmUgdGVldGggdGhhbiB1c3VhbCB3aXRoIFByZXNpZGVudCBYaSBKaW5waW5nLCB3aG8gdG9vayBvZmZpY2UgaW4gTWFyY2gsIHVzaW5nIHRoZSBjcmFja2Rvd24gYXMgYSB0b3RlbSBmb3IgaGlzIGFkbWluaXN0cmF0aW9uLiBUaGUgYmlnZ2VzdCBmb3JlaWduIGZpcm0gaW4gdGhlIHNwb3RsaWdodCBpcyBCcml0aXNoIGRydWdtYWtlciBHbGF4b1NtaXRoS2xpbmUsIHdoaWNoIENoaW5lc2UgcG9saWNlIGhhdmUgYWNjdXNlZCBvZiBmdW5uZWxsaW5nIHVwIHRvIDMgYmlsbGlvbiB5dWFuICgkNDg5LjkyIG1pbGxpb24pIHRvIHRyYXZlbCBhZ2VuY2llcyB0byBmYWNpbGl0YXRlIGJyaWJlcyB0byBkb2N0b3JzIHRvIGJvb3N0IHRoZSBzYWxlIG9mIGl0cyBtZWRpY2luZXMuIEdTSyBoYXMgc2FpZCBzb21lIG9mIGl0cyBzZW5pb3IgQ2hpbmVzZSBleGVjdXRpdmVzIGFwcGVhcmVkIHRvIGhhdmUgYnJva2VuIHRoZSBsYXcuICJHUkVZIFpPTkUiIFRoZSBtZWRpY2FsIGRldmljZXMgZXhlY3V0aXZlIHNhaWQgaGUgd2VudCB0byBhbGwgaGlzIGNvbXBhbnkncyBvZmZpY2VzIGluIENoaW5hIGFuZCByZXZpZXdlZCB0aGlyZC1wYXJ0eSBzYWxlcyBhZ2VudHMgdG8gZW5zdXJlIG5vICJncmV5IHpvbmUiIGJ1c2luZXNzIHdhcyBiZWluZyBkb25lLiAiRG9pbmcgYnVzaW5lc3MgaW4gQ2hpbmEgY29tZXMgd2l0aCByaXNrcywgc3VjaCBhcyBicmliZXJ5LiBXZSBoYXZlIHRvIGp1Z2dsZSB0aGlzIGFnYWluc3Qgb3VyIGJ1c2luZXNzIHRhcmdldCBhbmQgdGhhdCBoYXMgYmVjb21lIGluY3JlYXNpbmdseSBkaWZmaWN1bHQgYWZ0ZXIgR1NLLCIgaGUgc2FpZCwgZGVjbGluaW5nIHRvIGJlIGlkZW50aWZpZWQgYmVjYXVzZSBvZiB0aGUgc2Vuc2l0aXZpdHkgb2YgdGhlIGlzc3VlLiBBIHZldGVyYW4gaGVhbHRoY2FyZSBpbmR1c3RyeSBleGVjdXRpdmUgc2FpZCBoaXMgZmlybSBoYWQgaW5jcmVhc2VkIHRoZSBmcmVxdWVuY3kgb2YgaXRzIGludGVybmFsIGF1ZGl0cy4gIldlIGhhdmUgdG8gbWFrZSBzdXJlIHdlIHNlZSB3aGF0J3MgdW5kZXJuZWF0aCwiIGhlIHNhaWQuIFNldW5nIENob25nLCBhIEhvbmcgS29uZy1iYXNlZCBwYXJ0bmVyIGFuZCByZWd1bGF0b3J5IGV4cGVydCBhdCBPcnJpY2sgbGF3IGZpcm0sIHNhaWQgZW5xdWlyaWVzIGZyb20gY2xpZW50cyB0byBnZXQgdGhlaXIgY29kZXMgb2YgY29uZHVjdCB1cCB0byBVLlMuIGFuZCBFVSBzdGFuZGFyZHMgd2VyZSBncm93aW5nLCBlc3BlY2lhbGx5IHdpdGggYW50aS1jb3JydXB0aW9uIHBvbGljaWVzLiBJdCBpcyB0aGUgYW50aXRydXN0IGludmVzdGlnYXRpb25zLCBob3dldmVyLCB0aGF0IGhhdmUgcmVhbGx5IGFjY2VsZXJhdGVkLiBSZXV0ZXJzIHJlcG9ydGVkIG9uIEF1Zy4gMjEgdGhhdCBhbiBvZmZpY2lhbCBmcm9tIHRoZSBOYXRpb25hbCBEZXZlbG9wbWVudCBhbmQgUmVmb3JtIENvbW1pc3Npb24gKE5EUkMpLCB3aGljaCByZWd1bGF0ZXMgcHJpY2VzLCBwdXQgcHJlc3N1cmUgb24gc29tZSAzMCBmb3JlaWduIGZpcm1zIGF0IGEgbWVldGluZyBpbiBsYXRlIEp1bHkgdG8gY29uZmVzcyB0byBhbnkgYW50aXRydXN0IHZpb2xhdGlvbnMuIEluIHBhcnRpY3VsYXIsIGF1dGhvcml0aWVzIGFyZSBwYXlpbmcgYXR0ZW50aW9uIHRvIHdoZXRoZXIgbWFudWZhY3R1cmVycyBhcmUgZm9yY2luZyByZXRhaWxlcnMgdG8gc2V0IG1pbmltdW0gcHJpY2VzIGZvciBwcm9kdWN0cywgd2hpY2ggd291bGQgY29udHJhdmVuZSB0aGUgYW50aS1tb25vcG9seSBsYXcuIEluIHNvbWUgY2FzZXMsIGxlZ2FsIHRlYW1zIGhhZCBiZWVuIGhpcmVkIHRvIGludGVydmlldyBlbXBsb3llZXMgdG8gZW5zdXJlIHRoZWlyIGJlaGF2aW91ciB3aGVuIHRhbGtpbmcgdG8gY2xpZW50cyBhbmQgY29tcGV0aXRvcnMgZG9lcyBub3QgdmlvbGF0ZSBDaGluZXNlIGxhdywgbGF3eWVycyBzYWlkLiAiVGhlIHJlY2VudCBsZXZlbCBvZiBlbmZvcmNlbWVudCBpcyBjZXJ0YWlubHkgbWFraW5nIGNvbXBhbmllcyBzaXQgdXAgYW5kIHRha2Ugbm90aWNlLCIgc2FpZCBGcmFuY29pcyBSZW5hcmQsIGEgQmVpamluZy1iYXNlZCBhbnRpdHJ1c3QgZXhwZXJ0IHdpdGggbGF3IGZpcm0gQWxsZW4gJiBPdmVyeS4gV0hBVCdTIERSSVZJTkcgVEhFIElOVkVTVElHQVRJT05TPyBPZmZpY2lhbHMgaGF2ZSBzYWlkIGxpdHRsZSB0byBleHBsYWluIHRoZSBtb3RpdmF0aW9uIGJlaGluZCB0aGUgYW50aXRydXN0IGludmVzdGlnYXRpb25zLiBDaGluYSdzIHRocmVlIHJlZ3VsYXRvcnMg4oCUIHRoZSBORFJDLCB0aGUgU3RhdGUgQWRtaW5pc3RyYXRpb24gZm9yIEluZHVzdHJ5IGFuZCBDb21tZXJjZSAoU0FJQykgYW5kIHRoZSBDb21tZXJjZSBNaW5pc3RyeSDigJQgZGlkIG5vdCByZXNwb25kIHRvIGZheGVkIHF1ZXN0aW9ucyBmb3IgY29tbWVudC4gU0FJQyBoYW5kbGVzIG5vbi1wcmljZSByZWxhdGVkIGFudGktY29tcGV0aXRpb24gaXNzdWVzIGFuZCBjb21tZXJjaWFsIGJyaWJlcnkgd2hpbGUgdGhlIENvbW1lcmNlIE1pbmlzdHJ5IHJldmlld3MgbWVyZ2VycyBhbmQgYWNxdWlzaXRpb25zLiBPZmZpY2lhbCBtZWRpYSBoYXZlIHNhaWQgdGhlIHByb2JlcyBhcmUgcGFydCBvZiBlZmZvcnRzIHRvIHRvdWdoZW4gZW5mb3JjZW1lbnQgb2YgdGhlIGFudGktbW9ub3BvbHkgbGF3IGFuZCBhcmUgbm90IGp1c3QgZGlyZWN0ZWQgYXQgZm9yZWlnbiBmaXJtcy4gQnV0IHZhcmlvdXMgcmVwb3J0cyBoYXZlIGFsc28gbm90ZWQgdGhhdCBDaGluZXNlIHBheSBtb3JlIGZvciBzb21lIGZvcmVpZ24gcHJvZHVjdHMgdGhhbiBpbiBvdGhlciBjb3VudHJpZXMuIEFjY29yZGluZyB0byBhIHN0dWR5IGJ5IER1dGNoLWJhc2VkIEhlYWx0aCBBY3Rpb24gSW50ZXJuYXRpb25hbCwgYSBub24tcHJvZml0IGdyb3VwLCBwcmljZXMgY2hhcmdlZCBmb3IgV2VzdGVybiBkcnVncyBpbiBub3J0aHdlc3Rlcm4gU2hhYW54aSBwcm92aW5jZSBsYXN0IHllYXIgd2VyZSBhYm91dCAxMSB0aW1lcyBhbiBpbnRlcm5hdGlvbmFsIHJlZmVyZW5jZSBwcmljZS4gQSBYaW5odWEgbmV3cyBhZ2VuY3kgY29tbWVudGFyeSBpbiBsYXRlIEp1bHkgc2FpZCBzb21lIGltcG9ydGVkIGNhcnMgd2VyZSB0d2ljZSBhcyBleHBlbnNpdmUgaW4gQ2hpbmEgdGhhbiBvdmVyc2Vhcy4gVGFyaWZmcyBhbmQgb3RoZXIgZHV0aWVzIGRvIHB1c2ggdXAgdGhlIHByaWNlIG9mIGZvcmVpZ24gZ29vZHMgaW4gQ2hpbmEuIE5ldmVydGhlbGVzcywgc29tZSBleGVjdXRpdmVzIHNhaWQgdGhleSBiZWxpZXZlZCBtdWx0aW5hdGlvbmFsIGNvbXBhbmllcyB3ZXJlIGJlaW5nIHNpbmdsZWQgb3V0LiBUaGUgTkRSQyBoYXMgbGF1bmNoZWQgbmVhcmx5IDIwIHByaWNpbmctcmVsYXRlZCBwcm9iZXMgaW50byBkb21lc3RpYyBhbmQgZm9yZWlnbiBmaXJtcyBpbiB0aGUgbGFzdCB0aHJlZSB5ZWFycywgYWNjb3JkaW5nIHRvIG9mZmljaWFsIG1lZGlhIHJlcG9ydHMgYW5kIHJlc2VhcmNoIHB1Ymxpc2hlZCBieSBsYXcgZmlybXMuIEJ1dCBhbnRpdHJ1c3QgZXhwZXJ0cyBzYXkgdGhhdCBmZXcgaW52b2x2aW5nIENoaW5lc2UgZmlybXMgd2VyZSBtYWpvciBjYXNlcyBvciByZXN1bHRlZCBpbiBzdGlmZiBwdW5pc2htZW50LiBPZiBzaXggbWlsayBwb3dkZXIgbWFrZXJzIGZpbmVkIGEgcmVjb3JkICQxMTAgbWlsbGlvbiBpbiBBdWd1c3QgZm9yIGFudGktY29tcGV0aXRpdmUgYmVoYXZpb3VyLCBmaXZlIHdlcmUgZm9yZWlnbiBpbmNsdWRpbmcgTWVhZCBKb2huc29uIE51dHJpdGlvbiBDbyBhbmQgRGFub25lIC4gIk1OQ3MgYXJlIHVuZGVyc3RhbmRhYmx5IG9idmlvdXMgdGFyZ2V0cyBmb3IgdGhpcyBleHBhbmRlZCBlbmZvcmNlbWVudCBvbiBjb21wZXRpdGlvbiBpc3N1ZXMgYmVjYXVzZSBvZiB0aGVpciBzaXplLCBtYXJrZXQgc2hhcmUgYW5kIHZ1bG5lcmFiaWxpdHksIiBzYWlkIFNjb3R0IEtlbm5lZHksIGRpcmVjdG9yIG9mIHRoZSBSZXNlYXJjaCBDZW50ZXIgZm9yIENoaW5lc2UgUG9saXRpY3MgJiBCdXNpbmVzcyBhdCBJbmRpYW5hIFVuaXZlcnNpdHkuIFRVUkYgV0FSIEFudGl0cnVzdCBleHBlcnRzIGJlbGlldmUgYnVyZWF1Y3JhdGljIHJpdmFscnkgbWF5IGFsc28gYmUgYSBmYWN0b3IgYmVoaW5kIHRoZSBpbnZlc3RpZ2F0aW9ucy4gV2hlbiB0aGUgYW50aS1tb25vcG9seSBsYXcgd2FzIGJlaW5nIGRyYWZ0ZWQsIGEgc2luZ2xlIGVudGl0eSB3YXMgc3VwcG9zZWQgdG8gaGFuZGxlIGVuZm9yY2VtZW50LCB0aGV5IHNhaWQsIHdoaWNoIHNldCB0aGUgc3RhZ2UgZm9yIHRoZSB0aHJlZSBhZ2VuY2llcyB0byB3b3JrIG91dCBkaXN0aW5jdCByb2xlcyBhZnRlciBjb25zaWRlcmFibGUgd3JhbmdsaW5nLiAiVGhlIG9ubHkgdGhpbmcgdGhlIHRocmVlIGNvdWxkIGFncmVlIG9uIHdhcyB0aGF0IHRoZXkgZGlkbid0IHdhbnQgdGhlIG90aGVyIGFnZW5jaWVzIC0gb3IgZXZlbiB3b3JzZSwgYSBuZXcgYWdlbmN5LCB0byBnZXQgaXQuIFNvIGEgZGVhbCB3YXMgbWFkZSB0byBjYXJ2ZSB1cCBlbmZvcmNlbWVudCByZXNwb25zaWJpbGl0aWVzLCIgc2FpZCBNYXJrIFdpbGxpYW1zLCBhbiBhbnRpdHJ1c3QgZXhwZXJ0IGFuZCBhIGxhdyBwcm9mZXNzb3IgYXQgSG9uZyBLb25nIFBvbHl0ZWNobmljIFVuaXZlcnNpdHkuIEZpdmUgeWVhcnMgbGF0ZXIsIG1hbnkgZXhwZXJ0cyBzZWUgdGhlIGluY3JlYXNlZCBlbmZvcmNlbWVudCBhcyBhbiBhdHRlbXB0IGJ5IGVhY2ggYWdlbmN5IHRvIHByb3ZlIGl0cyB3b3J0aC4gUmVnYXJkbGVzcyBvZiB3aGljaCBsZWFkZXJzIG9yIGFnZW5jaWVzIGFyZSBzZXR0aW5nIHRoZSBhZ2VuZGEsIHRoZXJlIGlzIHNjZXB0aWNpc20gYW1vbmcgc2Nob2xhcnMgYW5kIGxhd3llcnMgdGhhdCByZWd1bGF0b3JzIGhhdmUgdGhlIG1hbmRhdGUgb3IgdGhlIHBvbGl0aWNhbCBjbG91dCB0byBnbyBhZnRlciB0b3AgQ2hpbmVzZSBzdGF0ZSBmaXJtcy4gQW4gZXhjZXB0aW9uIGFwcGVhcnMgdG8gYmUgZW5lcmd5IGdpYW50IENoaW5hIE5hdGlvbmFsIFBldHJvbGV1bSBDb3Jwb3JhdGlvbiAoQ05QQykuIEluIHRoZSBwYXN0IHdlZWssIGF1dGhvcml0aWVzIGhhdmUgYW5ub3VuY2VkIHRoYXQgZm91ciBzZW5pb3IgZXhlY3V0aXZlcyBhbmQgYSBmb3JtZXIgY2hhaXJtYW4gYXJlIGJlaW5nIGludmVzdGlnYXRlZCBmb3IgInNlcmlvdXMgZGlzY2lwbGluZSB2aW9sYXRpb25zIiwgc2hvcnRoYW5kIGdlbmVyYWxseSB1c2VkIHRvIGRlc2NyaWJlIGNvcnJ1cHRpb24uIEluZGVlZCwgaGVscGluZyBzdGF0ZS1vd25lZCBlbnRlcnByaXNlcyDigJQgd2hpY2ggYXJlIGVmZmVjdGl2ZWx5IGNvbnRyb2xsZWQgYnkgdGhlIHJ1bGluZyBDb21tdW5pc3QgUGFydHkgdmlhIHBlcnNvbm5lbCBkZWNpc2lvbnMg4oCUIGNoYWxsZW5nZSBmb3JlaWduIGZpcm1zIGlzIGEgZ292ZXJubWVudCBwcmlvcml0eSwgc2FpZCBXaWxsaWFtcy4gIldoZW4geW91IGhhdmUgdGhhdCBuYXRpb25hbCBhZ2VuZGEsIG9uZSBzdGF0ZSBvcmdhbiBpbXBlZGluZyB0aGUgb3BlcmF0aW9ucyBvZiBhbm90aGVyIHN0YXRlIGVudGl0eSBieSBpbnZlc3RpZ2F0aW5nIHN1c3BlY3RlZCBhbnRpLW1vbm9wb2x5IHZpb2xhdGlvbnMgaXMgdmVyeSBkaWZmaWN1bHQsIiBoZSBzYWlkLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUDdCrCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDRkMWQ2NjA2Zjg4MGQ0NTQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAA01KTg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUDiMQyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSuj1wo9cK</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBS4AAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSjXCj1wo9</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBS0euFHrhS</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSSFHrhR64</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAABXsHA==</field><field name="id" class="java.lang.String">rO0ABXQAEDI4ZTNlYzM0NTlkNDEyZjM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE0pAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExNDI3</field><field name="title" class="java.lang.String">rO0ABXQAQUNoaW5hJ3MgQXBwZXRpdGUgZm9yIFBvcmsgU3B1cnMgJDQuNyBCaWxsaW9uIFNtaXRoZmllbGQgRm9vZHMgQnV5</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT7zzoyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI5MTYxNGEwNTI5MmUzMGM=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0NQSU4uSks=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT749OiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECzVgAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEC0HgAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECzVgAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECzVgAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECy7e4UeuFI</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAANUyIA==</field><field name="id" class="java.lang.String">rO0ABXQAEGE4YzM3MGYxOTJkZDMyNzM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGDkAAAA==</field></document></documents><date>2015-05-07T12:09:18-0500</date></cacheEntry>
<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0DOtDb25ucyB3aWxsIGFsc28gd2lsbCBzZWVrIGEgcHJlc2lkZW50IGFuZCBjaGllZiByaXNrIG9mZmljZXIgYXMgcGFydCBvZiBhbiBlZmZvcnQgdG8gaW1wcm92ZSBvdmVyc2lnaHQgYWNjb3JkaW5nIHRvIGEgc3RhdGVtZW50IGZyb20gdGhlIFdvb2RsYW5kcyBUZXhhc2Jhc2VkIGNvbXBhbnkgVHVlc2RheSBNYXJrIEhhbGV5IGNoaWVmIGFjY291bnRpbmcgb2ZmaWNlciB3aWxsIGJlIGFjdGluZyBDRk8gd2hpbGUgQ29ubnMgc2VhcmNoZXMgZm9yIGEgbmV3IGZpbmFuY2UgY2hpZWYgQnJpYW4gVGF5bG9yIHdobyBoYWQgaGVsZCB0aGF0IHJvbGUgc2luY2UgMjAxMiBpcyBzdGVwcGluZyBkb3duIFRoZSByZXRhaWxlciB3aGljaCBjYXRlcnMgdG8gbG93aW5jb21lIGN1c3RvbWVycyBhbm5vdW5jZWQgYSBzdHJhdGVnaWMgcmV2aWV3IGluIE9jdG9iZXIgdGhhdCBpdCBzYWlkIGNvdWxkIGluY2x1ZGUgc3BsaXR0aW5nIG9mZiBpdHMgY3JlZGl0IGRpdmlzaW9uIFR1ZXNkYXkgQ29ubnMgc2FpZCB0aGF0IHRoZSBwcm9jZXNzIGlzIG9uZ29pbmcgYW5kIGRvZXNudCBoYXZlIGEgdGltZXRhYmxlIFRoZSBjb21wYW55IGFsc28gc2FpZCBpdHMgcHJvdmlzaW9uIGZvciBiYWQgZGVidHMgcm9zZSB0byA3MiBtaWxsaW9uIGxhc3QgcXVhcnRlciBmcm9tIDQ5NCBtaWxsaW9uIGEgeWVhciBlYXJsaWVyIE91ciBjb25maWRlbmNlIGlzIHNoYXR0ZXJlZCBMYXVyYSBDaGFtcGluZSBhbiBhbmFseXN0IHdpdGggQ2FuYWNjb3JkIEdlbnVpdHkgQ29ycCBzYWlkIGluIGEgbm90ZSB0byBpbnZlc3RvcnMgVG90YWwgbGF0ZXN0YWdlIGRlbGlucXVlbmNpZXMgYXJlIG5vdyBhdCB0aGUgaGlnaGVzdCByYXRlIHNpbmNlIHRoZSBmb3VydGggcXVhcnRlciBvZiAyMDEwIHRob3VnaCB0aGV5IGFwcGVhciB0byBoYXZlIGhlbGQgYXQgdGhhdCBsZXZlbCBpbiBOb3ZlbWJlciBzYWlkIHRoZSBhbmFseXN0IHdobyBjaGFuZ2VkIGhlciByYXRpbmcgdG8gYSBob2xkIGZyb20gYSBidXkgVHVlc2RheSBUaGUgc2hhcmVzIHR1bWJsZWQgMTQyNiB0byAyMDgzIGF0IHRoZSBjbG9zZSBpbiBOZXcgWW9yayBtYXJraW5nIHRoZSBiaWdnZXN0IG9uZWRheSBkZWNsaW5lIHNpbmNlIEZlYiAyMCBsZWF2aW5nIHRoZSBjb21wYW55IHdpdGggYSBtYXJrZXQgdmFsdWUgb2YgNzU1IG1pbGxpb24gVGhlIHN0b2NrIHdhcyBhbHJlYWR5IGRvd24gNTUgcGVyY2VudCB0aGlzIHllYXIgYmVmb3JlIFR1ZXNkYXkgICAgICAgICAgICAgICAgICAgICAgICAgICAgTGVnYWwgRmlnaHQgSW4gYWRkaXRpb24gdG8gdGhlIG1hbmFnZW1lbnQgc2hha2V1cCB0aGUgY29tcGFueSBpcyBmYWNpbmcgbGVnYWwgY2hhbGxlbmdlcyBvdmVyIGl0cyBkZWJ0IHdvZXMgQ29ubnMgc2hhcmVob2xkZXJzIHN1ZWQgY29ycG9yYXRlIGluc2lkZXJzIG92ZXIgY2xhaW1zIHRoZXkgc29sZCBtb3JlIHRoYW4gNjYgbWlsbGlvbiBpbiBzdG9jayBiZWZvcmUgcmV2ZWFsaW5nIHByb2JsZW1zIHdpdGggaXRzIGN1c3RvbWVyIGNyZWRpdCBwcm9ncmFtIGNhdXNpbmcgc2hhcmVzIHRvIHBsdW5nZSBUaGUgY2FzZSBhIHNvY2FsbGVkIGRlcml2YXRpdmUgbGF3c3VpdCBmaWxlZCBvbiBiZWhhbGYgb2YgdGhlIGNvbXBhbnkgbmFtZXMgVGhlb2RvcmUgV3JpZ2h0IENvbm5zIGNoYWlybWFuIHByZXNpZGVudCBhbmQgY2hpZWYgZXhlY3V0aXZlIG9mZmljZXIgYWxvbmcgd2l0aCBzaXggb3RoZXIgYm9hcmQgbWVtYmVycyBUYXlsb3IgdGhlIGZvcm1lciBDRk8gYW5kIE1pY2hhZWwgSiBQb3BwZSBpdHMgb3BlcmF0aW9ucyBjaGllZiBhcmUgYWxzbyBuYW1lZCBpbiB0aGUgY29tcGxhaW50IEFsbCBtZW1iZXJzIG9mIHRoZSBib2FyZCBrbmV3IHRoYXQgQ29ubnMgbG93ZXJlZCBpdHMgdW5kZXJ3cml0aW5nIHN0YW5kYXJkcyBhbmQgb2ZmZXJlZCBjcmVkaXQgbGluZXMgdG8gY3VzdG9tZXJzIHdobyBsYWNrZWQgY3JlZGl0d29ydGhpbmVzcyBhcyBhIHN0cmF0ZWd5IHRvIGdlbmVyYXRlIHJldmVudWUgc2FpZCBsYXd5ZXJzIGluIGEgY29tcGxhaW50IGZpbGVkIERlYyAxIGluIEhvdXN0b24gZmVkZXJhbCBjb3VydCAgICAgICAgICAgICAgICAgICAgICAgICBEZXJpdmF0aXZlIFN1aXRzIERlcml2YXRpdmUgbGF3c3VpdHMgc2VlayB0byByZXByZXNlbnQgdGhlIGNvbXBhbnkgYW5kIG9mdGVuIHJlc3VsdCBpbiBjb3Jwb3JhdGVnb3Zlcm5hbmNlIGNoYW5nZXMgIGFuZCBsYXd5ZXJzIGZlZXMgVGhlIGRpcmVjdG9ycyBhbmQgb2ZmaWNlcnMgYnJlYWNoZWQgdGhlaXIgZmlkdWNpYXJ5IHJlc3BvbnNpYmlsaXR5IGJ5IG1pc3JlcHJlc2VudGluZyBDb25ucyB0cnVlIGZpbmFuY2lhbCBjb25kaXRpb24gZmFpbGluZyB0byBjb3JyZWN0IG1pc3N0YXRlbWVudHMgYW5kIG1pc21hbmFnaW5nIHRoZSBjb21wYW55IHRvIHByb3AgdXAgdGhlIHNoYXJlIHByaWNlIHRoZSBsYXd5ZXJzIGNsYWltIFRoZSBpbnZlc3RvcnMgY29udGVuZCB0aGlzIHNlbGZkZWFsaW5nIGNhdXNlZCBDb25ucyBzdG9jayB0byB0cmFkZSBhdCBhcnRpZmljaWFsbHkgaW5mbGF0ZWQgcHJpY2VzIGNsaW1iaW5nIGZyb20gMzkwMSBhIHNoYXJlIHRvIDc5MjQgYSBzaGFyZSBiZXR3ZWVuIEFwcmlsIGFuZCBEZWNlbWJlciBvZiBsYXN0IHllYXIgV2hlbiB0aGUgdHJ1dGggd2FzIHJldmVhbGVkIGFib3V0IHRoZSBjb21wYW55cyB0cnVlIGZpbmFuY2lhbCBjb25kaXRpb24gb24gRmViIDIwIHNoYXJlcyBwbHVtbWV0ZWQgdG8gMzE4OSBhY2NvcmRpbmcgdG8gdGhlIGNvbXBsYWludCBXcmlnaHQgUG9wcGUgYW5kIHRocmVlIGRpcmVjdG9ycyBhbGxlZ2VkbHkgc29sZCBhdCBsZWFzdCA2NjggbWlsbGlvbiBpbiBzaGFyZXMgZnJvbSBBcHJpbCBvZiBsYXN0IHllYXIgdG8gRmViIDE5IHRoZSBpbnZlc3RvcnMgY2xhaW1lZCBJbiBzcGl0ZSBvZiBhbGxlZ2F0aW9ucyBvZiBzZWxmZGVhbGluZyBieSBzZW5pb3IgbWFuYWdlbWVudCB0aGUgYm9hcmQgaGFzIG5vdCBmaWxlZCBhbnkgbGF3c3VpdHMgYWdhaW5zdCBhbnkgZGlyZWN0b3JzIG9mIG9mZmljZXJzIHdobyB3ZXJlIHJlc3BvbnNpYmxlIGZvciB0aGUgbG9zc2VzIGFjY29yZGluZyB0byB0aGUgY29tcGxhaW50IENvbm5zIHdoaWNoIG9wZXJhdGVzIG1vcmUgdGhhbiA5MCBzdG9yZXMgaGFkIHNhaWQgaW4gU2VwdGVtYmVyIHRoYXQgaXQgZXhwZWN0ZWQgMjAxNSBlYXJuaW5ncyBleGNsdWRpbmcgY2VydGFpbiBpdGVtcyBvZiAyODAgdG8gMyBhIHNoYXJlIFRoZSBjYXNlIGlzIEhhY2sgdiBXcmlnaHQgMTQwMzQ0MiBVUyBEaXN0cmljdCBDb3VydCBTb3V0aGVybiBEaXN0cmljdCBvZiBUZXhhcyBIb3VzdG9udAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAb2FydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2UsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEzLTEyLTAzVDAwOjAwOjAwWiBUTyAyMDE0LTA3LTEwVDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDM5NzY=</field><field name="title" class="java.lang.String">rO0ABXQAPldhc2hpbmd0b24sIFJlZ3VsYXRvcnMgU2hydWcgYXQgQWxpYmFiYSdzIFBsYW4gZm9yIE1hc3NpdmUgSVBP</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcepHSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDA3MjRkOGEzODdhYzY5Y2Y=</field><field name="symbol" class="java.lang.String">rO0ABXQABFBFUlk=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcjytCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxKPXCj1wp</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxUeuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxD1wo9cKP</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxTMzMzMzN</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxTMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAF6hA==</field><field name="id" class="java.lang.String">rO0ABXQAEGVlMDVmOTQ5N2ViNWY4OWU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE6aAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIzMTAz</field><field name="title" class="java.lang.String">rO0ABXQAOUFtZXJpY2FuIEFwcGFyZWwgSW52ZXN0b3IgTm90IFBsYW5uaW5nIHRvIFN1cHBvcnQgQ2hhcm5leQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbHGFiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDAyMzgzNTUzNzYyNTRjZGQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABFJPVEg=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbMPrSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAHUwA==</field><field name="id" class="java.lang.String">rO0ABXQAEGNhN2ZiMmEzNjdjMjVhMDU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKv9AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIwMDQy</field><field name="title" class="java.lang.String">rO0ABXQAMVRhcmdldCdzIERlY2lzaW9uIHRvIFJlbW92ZSBDRU8gUmF0dGxlcyBJbnZlc3RvcnM=</field><field name="content" class="java.lang.String">rO0ABXQTTVRoZSBib2FyZCBvZiBkaXJlY3RvcnMgcmVtb3ZlZCBTdGVpbmhhZmVsIG9uIE1vbmRheSwgc2F5aW5nIGl0IHdhbnRzIG5ldyBsZWFkZXJzaGlwIHRvIGhlbHAgcmVzdG9yZSBjb25zdW1lciBjb25maWRlbmNlIGluIHRoZSBOby4gMiBVLlMuIGRpc2NvdW50IHJldGFpbGVyLiAiWW91IGdvdCB0byB3b25kZXIgd2hhdCBwcm9tcHRlZCBpdCBub3cuIFdoYXQgZWxzZSB3aWxsIGNvbWUgdG8gbGlnaHQsIiBzYWlkIERpZXRlciBXYWl6ZW5lZ2dlciwgZXhlY3V0aXZlIGRpcmVjdG9yLCBvZiBDdFcgSW52ZXN0bWVudCBHcm91cCwgd2hpY2ggYWR2aXNlcyB1bmlvbiBwZW5zaW9uIGZ1bmRzIHdpdGggYWJvdXQgJDI1MCBiaWxsaW9uIHVuZGVyIG1hbmFnZW1lbnQsIGluY2x1ZGluZyB0aG9zZSBvd25pbmcgYWJvdXQgMy4zIG1pbGxpb24gVGFyZ2V0IHNoYXJlcy4gVGhlIG1hc3NpdmUgZGF0YSBicmVhY2ggYW5kIGxhc3QgeWVhcidzIG1pc2d1aWRlZCBwdXNoIGludG8gQ2FuYWRhIGhhdmUgYWxyZWFkeSBodXJ0IHByb2ZpdCBhbmQgcmV2ZW51ZS4gQW5hbHlzdHMgYW5kIHNoYXJlaG9sZGVycyBleHBlY3QgdG8gaGVhciBtb3JlIG9mIHRoZSBzYW1lIHdoZW4gdGhlIGNvbXBhbnkgcmVwb3J0cyByZXN1bHRzIE1heSAyMSBmb3IgdGhlIHF1YXJ0ZXIgZW5kZWQgTWF5IDMgYW5kIHdvcnJ5IHRoYXQgdGhlIGNvbXBhbnkgY291bGQgZGlzY2xvc2Ugb3RoZXIgcHJvYmxlbXMgYXMgd2VsbC4gIldlIHdvdWxkIGhhemFyZCBhIGd1ZXNzIHRoYXQgZmlyc3QtcXVhcnRlciBzYWxlcyBjb250aW51ZWQgdG8gYmUgaHVydCBieSB0aGUgZGF0YSBicmVhY2ggYWZ0ZXJtYXRoIGFuZCB0aGF0IHRoZSBDYW5hZGEgZXhwYW5zaW9uIGlzIHN0aWxsIGluIHRyb3VibGUsIiBDYXJvbCBMZXZlbnNvbiwgYW4gYW5hbHlzdCB3aXRoIGJvbmQgcmVzZWFyY2hlciBHaW1tZSBDcmVkaXQsIHNhaWQgaW4gYSByZXBvcnQuIFRhcmdldCdzIHNoYXJlcyBmZWxsIDMuNSBwZXJjZW50IHRvIGNsb3NlIGF0ICQ1OS44NyBvbiBNb25kYXksIGEgc2lnbiBpbnZlc3RvcnMgd2VyZSBub3QgY29udmluY2VkIGEgY2hhbmdlIGF0IHRoZSB0b3AgYWxvbmUgd291bGQgc29sdmUgdGhlIHByb2JsZW1zIGZhY2luZyB0aGUgY29tcGFueS4gSW4gdGhlIHllYXIgdXAgdG8gRnJpZGF5J3MgY2xvc2UsIHRoZSBzdG9jayBmZWxsIDEzLjggcGVyY2VudCwgd2hpbGUgdGhlIFMmUCA1MDAgcm9zZSAxNS42IHBlcmNlbnQuIEEgMzUteWVhciB2ZXRlcmFuIG9mIHRoZSBjb21wYW55LCBTdGVpbmhhZmVsLCA1OSwgaGFkIGJlZW4gIENFTyBzaW5jZSAyMDA4LiBKdXN0IHR3byB5ZWFycyBhZ28sIHRoZSBjb21wYW55IHdhcyBjZWxlYnJhdGVkIGFzIHRoZSAiY2hlYXAgY2hpYyIgYWx0ZXJuYXRpdmUgdG8gTm8uIDEgV2FsLU1hcnQgU3RvcmVzIEluYy4gVGhlIE1pbm5lYXBvbGlzLWJhc2VkIGNvbXBhbnkgbmFtZWQgQ2hpZWYgRmluYW5jaWFsIE9mZmljZXIgSm9obiBNdWxsaWdhbiBhcyBpbnRlcmltIGNoaWVmIGV4ZWN1dGl2ZSwgYW5kIFJveGFubmUgQXVzdGluLCBhIG1lbWJlciBvZiB0aGUgYm9hcmQgb2YgZGlyZWN0b3JzLCBhcyBpbnRlcmltIG5vbi1leGVjdXRpdmUgY2hhaXJ3b21hbiBvZiB0aGUgYm9hcmQuIFRoZSBjb21wYW55IHNhaWQgaXQgaGlyZWQgcmVjcnVpdGluZyBmaXJtIEtvcm4gRmVycnkgdG8gaGVscCB0aGUgYm9hcmQgZmluZCBhIG5ldyBDRU8sIGluZGljYXRpbmcgaXQgaXMgb3BlbiB0byBmaW5kaW5nIGFuIG91dHNpZGVyIHRvIGd1aWRlIGl0IG91dCBvZiBpdHMgY3VycmVudCBtYWxhaXNlLCByYXRoZXIgdGhhbiBwdWxsaW5nIGl0cyBuZXh0IENFTyBmcm9tIGl0cyBleGVjdXRpdmUgcmFua3MgYXMgaXQgZGlkIHdoZW4gaXQgcHJvbW90ZWQgU3RlaW5oYWZlbCBmcm9tIHByZXNpZGVudC4gRkJSIENhcGl0YWwgTWFya2V0cyBhbmFseXN0IERhbmllbCBJdmVzIHNhaWQgaGUgYmVsaWV2ZWQgU3RlaW5oYWZlbCwgd2hvIHdpbGwgc3RheSBvbiBpbiBhbiBhZHZpc29yeSByb2xlIGZvciBhIHdoaWxlLCBpcyB0aGUgZmlyc3QgQ0VPIHRvIGJlIHJlbW92ZWQgZm9sbG93aW5nIGEgbWFqb3IgZGF0YSBicmVhY2guIFRoZSB0aW1pbmcgb2YgdGhlIHN1ZGRlbiBjaGFuZ2UgaW4gbGVhZGVyc2hpcCwgZ2l2ZW4gYWxsIHRoZSBwcm9ibGVtcyB0aGF0IFRhcmdldCBpcyBmYWNpbmcsIGlzIGhhcmRseSBpZGVhbCwgc2FpZCBNb29keSdzIEludmVzdG9ycyBTZXJ2aWNlLCB0aGUgY3JlZGl0IHJhdGluZyBmaXJtLiAiV2UgYmVsaWV2ZSB0aGlzIHRvIGJlIGEgdmVyeSBpbm9wcG9ydHVuZSB0aW1lIGZvciBhIGNoYW5nZSBhdCB0aGUgdG9wIG9mIFRhcmdldCwgZ2l2ZW4gdGhlIGNoYWxsZW5nZXMgdGhlIGNvbXBhbnkgaXMgZmFjaW5nIG9uIG11bHRpcGxlIGZyb250cywiIE1vb2R5J3MgVmljZSBQcmVzaWRlbnQgQ2hhcmxlcyBPJ1NoZWEgc2FpZC4gRkFMTElORyBQUk9GSVRTIFRoZSBtb3N0IHByZXNzaW5nIHRhc2tzIGZhY2luZyBTdGVpbmhhZmVsJ3Mgc3VjY2Vzc29yIGluY2x1ZGUgZml4aW5nIFRhcmdldCdzIENhbmFkaWFuIG9wZXJhdGlvbnMuIExhc3QgeWVhciwgaXQgb3BlbmVkIDEyNCBzdG9yZXMgYWxvbmcgd2l0aCB0aHJlZSBkaXN0cmlidXRpb24gY2VudGVycyBpbiBDYW5hZGEsIGl0cyBmaXJzdCBtYXJrZXQgb3V0c2lkZSB0aGUgVW5pdGVkIFN0YXRlcy4gTm8gcmV0YWlsZXIgaGFzIGV2ZXIgb3BlbmVkIHRoaXMgbWFueSBzdG9yZXMgYXQgb25lIHRpbWUgaW4gQ2FuYWRhLiBOaW5lIG1vcmUgc3RvcmVzIGFyZSBwbGFubmVkIGZvciAyMDE0LiBXaGlsZSB0aGUgYW1iaXRpb3VzIGxhdW5jaCBnYXZlIFRhcmdldCBhIGhlZnR5IG1hcmtldCBwcmVzZW5jZSBpbW1lZGlhdGVseSwgaXQgYWxzbyBjcmVhdGVkIG1ham9yIGxvZ2lzdGljcyBoZWFkYWNoZXMuIEV4cGVuc2VzIHNvYXJlZCBhcyBUYXJnZXQgb3ZlciBzdGFmZmVkIHN0b3JlcyBhbmQgZ3JhcHBsZWQgd2l0aCB3aGF0IGl0IGRlc2NyaWJlZCBhcyBzdXBwbHktY2hhaW4gY29uZ2VzdGlvbi4gVGhhdCBsZWZ0IG1hbnkgc3RvcmVzIHdpdGggYmFycmVuIHNoZWx2ZXMgYW5kIGNvbXBsYWluaW5nIGNvbnN1bWVycywgbWFueSBvZiB3aG9tIGhhdmUgYmVlbiBzcG9pbGVkIGJ5IGxlc3MtZXhwZW5zaXZlIGNob2ljZXMgb2ZmZXJlZCBpbiBUYXJnZXQgc3RvcmVzIGp1c3QgYWNyb3NzIHRoZSBVLlMuIGJvcmRlci4gRm9yIDIwMTMsIHRoZSBjb21wYW55IHJlcG9ydGVkIGEgbG9zcyBvZiBuZWFybHkgJDEgYmlsbGlvbiBpbiBDYW5hZGEgb24gc2FsZXMgb2YgJDEuMyBiaWxsaW9uLiBPdmVyYWxsLCB0aGUgY29tcGFueSByZXBvcnRlZCBhIDM0IHBlcmNlbnQgZHJvcCBpbiBuZXQgcHJvZml0IGxhc3QgeWVhciB0byAkMS45NyBiaWxsaW9uLiAiQ2xlYXJseSwgdGhleSBqdXN0IHdlcmVuJ3QgcHJlcGFyZWQsIiBzYWlkIE1hdXJlZW4gQXRraW5zb24sIHNlbmlvciBwYXJ0bmVyIGF0IFRvcm9udG8tYmFzZWQgZ2xvYmFsIHJldGFpbCBjb25zdWx0YW5jeSBKLkMuIFdpbGxpYW1zIEdyb3VwLiBUYXJnZXQgQ2FuYWRhIFByZXNpZGVudCBUb255IEZpc2hlciB3YXMgdW5hdmFpbGFibGUgZm9yIGNvbW1lbnQsIGJ1dCBhIHNwb2tlc3dvbWFuIHNhaWQgdGhlIGNvbXBhbnkgaXMgbWFraW5nIHByb2dyZXNzLiBUaGUgcHJvYmxlbXMgZXh0ZW5kIGJleW9uZCBpdHMgc3VwcGx5IGNoYWluLCByZXRhaWwgZXhwZXJ0cyBzYXkuIFRhcmdldCB1bmRlcmVzdGltYXRlZCBjb21wZXRpdGlvbiBmcm9tIGJvdGggZG9tZXN0aWMgcmV0YWlsZXJzIGFuZCBpdHMgYmlnZ2VzdCByaXZhbCwgV2FsLU1hcnQuICJJIHRoaW5rIHRoZXkgd2lsbCBnZXQgaXQgcmlnaHQgaW4gdGhlIGxvbmcgcnVuLCBidXQgdGhleSd2ZSBnb3QgYSBsb3Qgb2YgZml4aW5nIHRvIGRvLCIgc2FpZCBBdGtpbnNvbi4gIlVuZm9ydHVuYXRlbHksIGZvciBjdXN0b21lcnMsIGl0J3MgaGFyZGVyIHRvIGZvcmdldCB0aGFuIHJlbWVtYmVyLiBCUkVBQ0ggVFJPVUJMRVMgTXVsbGlnYW4sIHRoZSBpbnRlcmltIENFTywgaGFzIHNlcnZlZCBhcyB0aGUgY29tcGFueSdzIGNoaWVmIHNwb2tlc21hbiBvbiB0aGUgZGF0YSBicmVhY2gsIGhvbGRpbmcgdXAgd2VsbCB1bmRlciBzY3J1dGlueSBkdXJpbmcgQ29uZ3Jlc3Npb25hbCBoZWFyaW5ncy4gVGFyZ2V0IGRpc2Nsb3NlZCB0aGUgY3liZXIgYXR0YWNrIGluIERlY2VtYmVyLCByZXZlYWxpbmcgdGhlIHRoZWZ0IG9mIGF0IGxlYXN0IDQwIG1pbGxpb24gcGF5bWVudCBjYXJkIG51bWJlcnMgYW5kIDcwIG1pbGxpb24gb3RoZXIgcGllY2VzIG9mIGN1c3RvbWVyIGRhdGEuICJIZSBoYXMgcGxheWVkIGEga2V5IHJvbGUgaW4gdGhlIHJlY292ZXJ5IGVmZm9ydHMsIiBzYWlkIFRhcmdldCBzcG9rZXN3b21hbiBEdXN0ZWUgSmVua2lucy4gVGhlIGltcGFjdCBvZiB0aGUgYnJlYWNoIGlzIGV4cGVjdGVkIHRvIGhhdmUgZXh0ZW5kZWQgaW50byB0aGUgZmlyc3QgcXVhcnRlciBvZiB0aGUgeWVhci4gQW5hbHlzdHMgb24gYXZlcmFnZSBleHBlY3QgdGhlIGNvbXBhbnkgdG8gcmVwb3J0IGEgZGVjbGluZSBvZiBhYm91dCAxIHBlcmNlbnQgaW4gZmlyc3QtcXVhcnRlciBzYWxlcyBhdCBlc3RhYmxpc2hlZCBzdG9yZXMgd2hlbiBpdCByZWxlYXNlcyByZXN1bHRzIGluIHR3byB3ZWVrcywgYWNjb3JkaW5nIHRvIFRob21zb24gUmV1dGVycyBJL0IvRS9TLiAiVGhlIENhbmFkaWFuIGNvbXBvbmVudCBvZiB0aGUgc3RvcnkgaXMgc2FsdCBpbiB0aGUgd291bmQsIGJ1dCBpdCBpcyBieSBubyBtZWFucyB0aGUgd291bmQsIiBzYWlkIEppbSBEYW5haHkgZGlyZWN0b3Igb2YgdGhlIENlbnRyZSBmb3IgUmV0YWlsIExlYWRlcnNoaXAgYXQgWW9yayBVbml2ZXJzaXR5IGluIFRvcm9udG8uICJUaGUgd291bmQgZm9yIHRoaXMgY29tcGFueSBpcyB3aXRob3V0IHF1ZXN0aW9uIHRoZSBzZWN1cml0eSBicmVhY2guIg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUXKwLyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGE0NGYxNjVjNTRhMjYzYWU=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0ZCUg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUXP5xiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkYUeuFHrh</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAknrhR64Uf</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkQo9cKPXD</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkcKPXCj1x</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkcKPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAABFfRA==</field><field name="id" class="java.lang.String">rO0ABXQAEDA4ZDdmMTRiYzljMjU2Yjg=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFdZAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIyMTIz</field><field name="title" class="java.lang.String">rO0ABXQAOElCTSBVc2VzIER1dGNoIFRheCBIYXZlbiB0byBCb29zdCBQcm9maXRzIGFzIFNhbGVzIFNsaWRl</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUP2VPcAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDJmYTk1ZmZlMTEyMGViYzM=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lCTQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUP7e1MAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBlsPXCj1wp</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBluAAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBli4UeuFHs</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBlmuFHrhR7</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBk8j1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAEJfaA==</field><field name="id" class="java.lang.String">rO0ABXQAEGQ4YTU3ZjJjYTIxMTIxOTU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHbUAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE0NDgy</field><field name="title" class="java.lang.String">rO0ABXQALVRveXMgJ1InIFVzIExldmVyYWdlZCBMaWtlICcwNSBhcyBMb3NzIE1vdW50cw==</field><field name="content" class="java.lang.String">rO0ABXQW4FRveXMg4oCcUuKAnSBVc+KAmXMgZGVidCByYXRpb3MgcmV0dXJuZWQgdG8gbGV2ZWxzIGxhc3Qgc2VlbiBmb2xsb3dpbmcgaXRzICQ2LjYgYmlsbGlvbiBsZXZlcmFnZWQgYnV5b3V0IGluIDIwMDUsIHVuZGVyc2NvcmluZyBoZWlnaHRlbmVkIGNvbmNlcm4gYW1vbmcgaW52ZXN0b3JzIHRoYXQgdGhlIHJldGFpbGVyIG1heSBub3QgYmUgYWJsZSB0byByZWNvdmVyIGZyb20gaXRzIGJpZ2dlc3QgbG9zcyBpbiBuZWFybHkgdGhyZWUgZGVjYWRlcy4g4oCcSXTigJlzIGFsd2F5cyB0aGVyZSwgeW91IG5ldmVyIGdldCBhd2F5IGZyb20gaXQs4oCdIFNlYW4gTWNHb3dhbiwgYW4gZXF1aXR5IGFuYWx5c3Qgd2hvIGZvY3VzZXMgb24gdGhlIHRveSBpbmR1c3RyeSBhdCBOZWVkaGFtICYgQ28uIGluIE5ldyBZb3JrLCBzYWlkIGFib3V0IHRoZSBjb21wYW554oCZcyBkZWJ0IGxvYWQuIOKAnFNvbWV0aGluZ+KAmXMgZ290IHRvIGNoYW5nZSwgdGhhdOKAmXMgZm9yIHN1cmUu4oCdIERlYnQgYXQgdGhlIFdheW5lLCBOZXcgSmVyc2V5LWJhc2VkIGNvbXBhbnkgaGFzIGNsaW1iZWQgdG8gbW9yZSB0aGFuIDggdGltZXMgaXRzIGNhc2ggZmxvdywgdGhlIHNhbWUgYXMgd2hlbiBpdCB3YXMgYm91Z2h0IG5pbmUgeWVhcnMgYWdvIGJ5IEtLUiAmIENvLiwgQmFpbiBDYXBpdGFsIExMQyBhbmQgVm9ybmFkbyBSZWFsdHkgVHJ1c3QsIGFjY29yZGluZyB0byBNb29keeKAmXMgSW52ZXN0b3JzIFNlcnZpY2UuIFRoZSByYXRpbyBpcyB1cCBmcm9tIDUuNSB0aW1lcyBhIHllYXIgYWdvIGFuZCBjb21wYXJlcyB3aXRoIGFuIGluZHVzdHJ5IGF2ZXJhZ2Ugb2YgYWJvdXQgMywgYWNjb3JkaW5nIHRvIGRhdGEgY29tcGlsZWQgYnkgQmxvb21iZXJnLiBBIGNhbmRpZGF0ZSBmb3IgYW4gaW5pdGlhbCBwdWJsaWMgb2ZmZXJpbmcgYXMgcmVjZW50bHkgYXMgMjAxMCwgdGhlIHRveSBzZWxsZXIgaXMgbm93IHN0cnVnZ2xpbmcgdG8gcmV2ZXJzZSBhIGJpbGxpb24tZG9sbGFyIGxvc3MgbGFzdCB5ZWFyIGluIGFuIGVudmlyb25tZW50IHdoZXJlIHRocmVlIHNwZWNpYWx0eSByZXRhaWxlcnMgaGF2ZSBzb3VnaHQgYmFua3J1cHRjeSBwcm90ZWN0aW9uIHNpbmNlIERlY2VtYmVyIGFtaWQgc2x1Z2dpc2ggY29uc3VtZXIgc3BlbmRpbmcuIE1vcmUgdGhhbiAkODUwIG1pbGxpb24gb2YgaXRzIGJvbmRzIHRyYWRlIGF0IGRpc3RyZXNzZWQgbGV2ZWxzLCBhbmQgTW9vZHnigJlzIGN1dCB0aGUgY29tcGFueeKAmXMgY3JlZGl0IHJhdGluZyB0aGlzIG1vbnRoIHRvIHNpeCBsZXZlbHMgYmVsb3cgaW52ZXN0bWVudCBncmFkZS4gS2F0aGxlZW4gV2F1Z2gsIGEgc3Bva2VzbWFuIGZvciBUb3lzIOKAnFLigJ0gVXMsIHdhc27igJl0IGF2YWlsYWJsZSB0byBjb21tZW50IG9uIHRoZSBjb21wYW554oCZcyBsZXZlcmFnZSBvciByZWNlbnQgZWFybmluZ3MuIEJvbmRzIFBsdW5nZSBUaGUgcmV0YWlsZXLigJlzICQ0NTAgbWlsbGlvbiBvZiAxMC4zNzUgcGVyY2VudCBib25kcyBkdWUgaW4gQXVndXN0IDIwMTcsIHRyYWRlZCBhdCA4MSBjZW50cyBvbiB0aGUgZG9sbGFyIEFwcmlsIDExLCBkb3duIGZyb20gMTEwLjUgY2VudHMgaW4gTWF5LCBhY2NvcmRpbmcgdG8gVHJhY2UsIHRoZSBib25kLXByaWNlIHJlcG9ydGluZyBzZXJ2aWNlIG9mIHRoZSBGaW5hbmNpYWwgSW5kdXN0cnkgUmVndWxhdG9yeSBBdXRob3JpdHkuIFRoZXkgeWllbGRlZCAxNy41IHBlcmNlbnRhZ2UgcG9pbnRzIG1vcmUgdGhhbiBzaW1pbGFyLW1hdHVyaXR5IFRyZWFzdXJ5cy4gVGhvc2UgZGViZW50dXJlcyBhbG9uZyB3aXRoICQ0MDAgbWlsbGlvbiBvZiA3LjM3NSBwZXJjZW50IG5vdGVzIGR1ZSBPY3RvYmVyIDIwMTggYXJlIGFtb25nIHRoZSAxNDggc2VjdXJpdGllcyBjb25zaWRlcmVkIGRpc3RyZXNzZWQsIEJsb29tYmVyZyBkYXRhIHNob3cuIFRoZSBtZWFzdXJlIHRyYWNrcyBib25kcyB0aGF0IHlpZWxkIGF0IGxlYXN0IDEwIHBlcmNlbnRhZ2UgcG9pbnRzIG1vcmUgdGhhbiBjb21wYXJhYmxlIGdvdmVybm1lbnQgZGVidC4gTGFzdCBtb250aCwgVG95cyDigJxS4oCdIFVzIGFubm91bmNlZCBhICQxIGJpbGxpb24gbG9zcyBmb3IgZmlzY2FsIDIwMTMsIGl0cyB3b3JzdCBwZXJmb3JtYW5jZSBzaW5jZSBhdCBsZWFzdCAxOTg3LCBCbG9vbWJlcmcgZGF0YSBzaG93LiBTYWxlcyBhdCBzdG9yZXMgb3BlbiBhdCBsZWFzdCBhIHllYXIgZmVsbCA1IHBlcmNlbnQgYXQgVS5TLiBsb2NhdGlvbnMgYW5kIGRyb3BwZWQgMy4zIHBlcmNlbnQgaW50ZXJuYXRpb25hbGx5LiDigJxUaGV5IHdlcmUgb3V0IG9mIHN0b2NrLCBhbmQgdGhhdCBtYXkgYmUgcmVsYXRlZCB0byBtYW5hZ2luZyBjYXNoIHRvbyB0aWdodGx5LCBidXQgaXTigJlzIGluZXhjdXNhYmxlIGZvciBUb3lzIOKAmOKAmFLigJnigJkgVXMgdG8gYmUgb3V0IG9mIHN0b2NrLOKAnSBNY0dvd2FuIHNhaWQuIFJldGFpbCBDb21wZXRpdGlvbiBUaGUgcmV0YWlsZXIgY29tcGV0ZXMgd2l0aCBnaWFudHMgc3VjaCBhcyBXYWwtTWFydCBTdG9yZXMgSW5jLiBhbmQgVGFyZ2V0IENvcnAuIHRoYXQgYXR0cmFjdCBhIHN0ZWFkeSBzdHJlYW0gb2YgY3VzdG9tZXJzIHdpdGggZ3JvY2VyaWVzIGFuZCBvdGhlciBiYXNpY3MuIEFuZCB0aGUgb25lIGFyZWEgd2hlcmUgVG95cyDigJxS4oCdIFVzIGhhZCBkaXN0aW5ndWlzaGVkIGl0c2VsZiBpbiB0aGUgcGFzdCwgdGhlIGJyZWFkdGggb2Ygc2VsZWN0aW9uLCBpcyBub3cgY2hhbGxlbmdlZCBieSBBbWF6b24uY29tIEluYy4sIE1jR293YW4gc2FpZC4g4oCcV2hhdCBXYWwtTWFydCwgVGFyZ2V0IGFuZCBBbWF6b24gY2FuIGRvIGlzIHRoZXkgY2FuIHVzZSB0b3lzIHRvIGRyaXZlIHRyYWZmaWMgdG8gc3RvcmVzIG9yIG9ubGluZSwgYW5kIGlmIG5vdCB0b3lzIHRoZW4gdGhleSBjYW4gc2VsbCBvdGhlciBzdHVmZizigJ0gQ2hhcmxlcyBP4oCZU2hlYSwgYW4gYW5hbHlzdCBhdCBNb29keeKAmXMsIHNhaWQgaW4gYSB0ZWxlcGhvbmUgaW50ZXJ2aWV3LiBPbiBBcHJpbCA0LCBNb29keeKAmXMgY3V0IHRoZSBjb21wYW554oCZcyBjb3Jwb3JhdGUgZmFtaWx5IHJhdGluZyBvbmUgbGV2ZWwgdG8gQjMsIHNpeCBsZXZlbHMgYmVsb3cgaW52ZXN0bWVudCBncmFkZS4gU3RhbmRhcmQgJiBQb29y4oCZcyBoYXMgYW4gZXF1aXZhbGVudCBCLSByYXRpbmcgb24gdGhlIGRlYnQuIE1vb2R54oCZcyBhbmFseXN0cyBjaXRlZCB0aGUgdG95IHNlbGxlcuKAmXMgaW5hYmlsaXR5IHRvIGNhcGl0YWxpemUgb24gaXRzIHZpZGVvIGJ1c2luZXNzLCBhbiBhcmVhIHRoYXQgaGFzIGJlZW4gYmVuZWZpY2lhbCB0byBjb21wZXRpdG9ycy4gTGV2ZXJhZ2UgU3VyZ2VzIFRveXMg4oCcUuKAnSBVcyBsZXZlcmFnZSwgYWZ0ZXIgaGF2aW5nIGltcHJvdmVkIGluIHRoZSBsYXN0IGZldyB5ZWFycywgaXMgYmFjayB0byBwb3N0LWJ1eW91dCBjb25kaXRpb25zIGFmdGVyIOKAnG9uZSBiYWQgeWVhcizigJ0gaGUgc2FpZC4g4oCcSXQganVzdCBzaG93cyBob3cgZnJhZ2lsZSB0aGUgY29tcGFueeKAmXMgY3JlZGl0IG1ldHJpY3MgdHVybmVkIG91dCB0byBiZSBnaXZlbiB0aGUgaGlnaGx5IGxldmVyYWdlZCBjYXBpdGFsIHN0cnVjdHVyZS7igJ0gVG95cyDigJxS4oCdIFVz4oCZcyB0b3RhbCBkZWJ0IG9mICQ1IGJpbGxpb24gY29tcGFyZXMgd2l0aCBhZGp1c3RlZCBlYXJuaW5ncyBiZWZvcmUgaW50ZXJlc3QsIHRheGVzLCBkZXByZWNpYXRpb24gYW5kIGFtb3J0aXphdGlvbiBvZiAkNTg4IG1pbGxpb24gZm9yIHRoZSB5ZWFyIGVuZGVkIEZlYi4gMSwgYWNjb3JkaW5nIHRvIGEgTWFyY2ggMzEgcmVndWxhdG9yeSBmaWxpbmcuIFRoZSBhdmVyYWdlIGxldmVyYWdlLCBvciB0aGUgcmF0aW8gb2YgZGVidCB0byBFYml0ZGEgZm9yIHB1YmxpY2x5IHRyYWRlZCBVLlMuIGNvbnN1bWVyIGRpc2NyZXRpb25hcnkgY29tcGFuaWVzIHdpdGggYXQgbGVhc3QgJDUwMCBtaWxsaW9uIGluIG9ibGlnYXRpb25zIGlzIDMgdGltZXMsIEJsb29tYmVyZyBkYXRhIHNob3cuIFRoZSBjb21wYW554oCZcyBvd25lcnMgaGFkIGxvb2tlZCB0byB0aGUgZXF1aXR5IG1hcmtldHMgdG8gaGVscCBpdCBjdXQgZGVidCwgZmlsaW5nIGZvciBhbiAkODAwIG1pbGxpb24gaW5pdGlhbCBwdWJsaWMgb2ZmZXJpbmcgaW4gTWF5IDIwMTAuIEl0IHNoZWx2ZWQgdGhlIHBsYW4gYWxtb3N0IHRocmVlIHllYXJzIGxhdGVyLCBjaXRpbmcgcG9vciBtYXJrZXQgY29uZGl0aW9ucyBhbmQgYSBwZW5kaW5nIGxlYWRlcnNoaXAgY2hhbmdlLiBUb3lzIOKAnFLigJ0gVXMgbmFtZWQgQW50b25pbyBVcmNlbGF5LCB3aG8gc2VydmVkIGFzIGludGVyaW0gY2hpZWYgZXhlY3V0aXZlIG9mZmljZXIgYWZ0ZXIgbGVhZGluZyB0aGUgRXVyb3BlYW4gZGl2aXNpb24sIGFzIHBlcm1hbmVudCBoZWFkIGluIE9jdG9iZXIuIEF0IHRoZSBzYW1lIHRpbWUsIGl0IGFubm91bmNlZCBIYW5rIE11bGxhbnksIGEgZm9ybWVyIGV4ZWN1dGl2ZSBhdCBXYWwtTWFydCwgYXMgcHJlc2lkZW50IG9mIGl0cyBVLlMuIGJ1c2luZXNzLiBNYXR1cml0eSBXYWxsIFRoZSBjb21wYW55IGNvbXBldGVzIGZvciBhIHNoYXJlIG9mIHRoZSBnbG9iYWwgdG95IG1hcmtldCwgd2hpY2ggaGFzIGJlZW4gZmxhdCBhdCBhYm91dCAkODQgYmlsbGlvbiBvdmVyIHRoZSBwYXN0IGZvdXIgeWVhcnMsIGFjY29yZGluZyB0byBhIEphbi4gMjggRml0Y2ggUmF0aW5ncyByZXBvcnQuIFRyYWRpdGlvbmFsIHByb2R1Y3QgY2F0ZWdvcmllcyBoYXZlIGZhY2VkIGluY3JlYXNpbmcgaGVhZHdpbmRzIHdpdGggY2hpbGRyZW4gZXhwcmVzc2luZyBhIHByZWZlcmVuY2UgZm9yIGRpZ2l0YWwgZ2FtZXMsIHRoZSByZXBvcnQgc2FpZC4gSXQgZmFjZXMgbW9yZSB0aGFuICQxIGJpbGxpb24gb2YgZGVidCBjb21pbmcgZHVlIGluIDIwMTYgZXZlbiBhcyBjYXBpdGFsIGV4cGVuZGl0dXJlcyB3aWxsIGV4Y2VlZCBjYXNoIGZyb20gb3BlcmF0aW5nIGFjdGl2aXRpZXMgYnkgYXMgbXVjaCBhcyAkMjUwIG1pbGxpb24gb3ZlciB0aGUgbmV4dCB0d28geWVhcnMsIEZpdGNoIGFuYWx5c3QgSXNhYmVsIEh1IHNhaWQuIENvbGR3YXRlciBDcmVlayBJbmMuLCBhIHdvbWVu4oCZcyBjbG90aGluZyByZXRhaWxlciwgZmlsZWQgZm9yIGJhbmtydXB0Y3kgcHJvdGVjdGlvbiBsYXN0IHdlZWssIGZvbGxvd2luZyBEb3RzIExMQyBhbmQgTG9laG1hbm7igJlzIEluYy4sIGFzIGNvbnN1bWVyIHNwZW5kaW5nIHJlbWFpbnMgc2hha3kuIOKAnFRoZXJlIGlzIGluY3JlYXNpbmcgYnVzaW5lc3MgcmlzayBhcyB3ZWxsIGFzIGxpcXVpZGl0eSBwcmVzc3VyZSzigJ0gSHUgc2FpZCBpbiBhIHRlbGVwaG9uZSBpbnRlcnZpZXcuIFdoaWxlIHJldml2aW5nIGFuIElQTyBtaWdodCBiZSBhIGJlc3QtY2FzZSBvcHRpb24gaW4gdHdvIG9yIHRocmVlIHllYXJzLCB0aGUga2V5IGZvciB0aGUgbW9tZW50IGlzIHRvIHN0YWJpbGl6ZSBvcGVyYXRpb25zIGFuZCB0aGVuIHRyeSB0byBwdXNoIG91dCBkZWJ0IG1hdHVyaXRpZXMsIFN0ZXZlbiBBemFyYmFkLCBjby1mb3VuZGVyIG9mIE1hZ2xhbiBDYXBpdGFsIExQLCBhIE5ldyBZb3JrLWJhc2VkIGhlZGdlIGZ1bmQgc3BlY2lhbGl6aW5nIGluIGRpc3RyZXNzZWQgc2VjdXJpdGllcywgc2FpZCBpbiBhIHRlbGVwaG9uZSBpbnRlcnZpZXcuIOKAnEkgdGhpbmsgZXZlcnlvbmUgaXMganVzdCByZWFsbHkgbG9va2luZyBhdCB0aGlzIHJpZ2h0IG5vdyBhcyBhIHNob3ctbWUgc3Rvcnks4oCdIEF6YXJiYWQgc2FpZC4gVGhlIG93bmVycyDigJxkZWZpbml0ZWx5IHdhbnQgdG8gYnV5IHRoZW1zZWx2ZXMgbW9yZSB0aW1lLiBDbGVhcmx5IGEgbmVhci10ZXJtIGV4aXQgb24gdGhpcyBpbnZlc3RtZW50IGlzIG5vdCBpbiB0aGUgb2ZmaW5nLuKAnQ==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUVemzCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDg1MmMyZTdlN2Y1MGU5NDU=</field><field name="symbol" class="java.lang.String">rO0ABXQAAVI=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUVjwYyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBT1cKPXCj2</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBT/Cj1wo9c</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBTkAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBTw9cKPXCk</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBTceuFHrhS</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAunNA==</field><field name="id" class="java.lang.String">rO0ABXQAEGY1MmUyZjg5MTA1NmU3MTM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFdgAAAA==</field></document></documents><date>2015-05-07T12:20:07-0500</date></cacheEntry>
<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0ClBOZXQgaW5jb21lIGZlbGwgdG8gODg0IG1pbGxpb24gb3IgODcgY2VudHMgYSBzaGFyZSBmcm9tIDE5NSBtaWxsaW9uIG9yIDE5NCBhIHllYXIgZWFybGllciB0aGUgVGVtcGUgQXJpem9uYWJhc2VkIGNvbXBhbnkgc2FpZCBUaHVyc2RheSBpbiBhIHN0YXRlbWVudCBFeGNsdWRpbmcgYSAyNmNlbnQgdGF4IGJlbmVmaXQgcHJvZml0IHdhcyA2MSBjZW50cyBtaXNzaW5nIHRoZSA2NGNlbnQgYXZlcmFnZSBvZiAxNiBhbmFseXN0cyBlc3RpbWF0ZXMgY29tcGlsZWQgYnkgQmxvb21iZXJnIFNhbGVzIGZlbGwgdG8gODg5MyBtaWxsaW9uIEZpcnN0IFNvbGFyIGJ1aWxkcyBsYXJnZSBzb2xhciBmYXJtcyBtYWlubHkgZm9yIHV0aWxpdGllcyBhbmQgcmVjb2duaXplcyByZXZlbnVlIGF0IGlycmVndWxhciBwZXJpb2RzIENoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyIEppbSBIdWdoZXMgaXMgcHVyc3Vpbmcgb3JkZXJzIGZvciBzbWFsbGVyIHV0aWxpdHkgcHJvamVjdHMgYW5kIGxhcmdlIGNvbW1lcmNpYWwgY3VzdG9tZXJzIGluIG5ldyBtYXJrZXRzIGluIEFzaWEgYW5kIFNvdXRoIEFtZXJpY2EgaW5jbHVkaW5nIGFib3V0IDI1MCBtZWdhd2F0dHMgaW4gSmFwYW4gSHVnaGVzIG1haW50YWluZWQgaGlzIDIwMTQgZWFybmluZ3MgZm9yZWNhc3Qgb2YgMjQwIHRvIDI4MCBhIHNoYXJlIGZvciB0aGUgeWVhciBUaGUgZGF5cyBvZiA1MDAgbWVnYXdhdHQgcGxhbnRzIGhhdmUgc2FpbGVkIEFuZ2VsbyBaaW5vIGFuIGFuYWx5c3QgYXQgU1AgQ2FwaXRhbCBJUSBpbiBOZXcgWW9yayBzYWlkIGluIGFuIGludGVydmlldyBiZWZvcmUgdGhlIHN0YXRlbWVudCB3YXMgcmVsZWFzZWQgRmlyc3QgU29sYXIgbmVlZHMgdG8gY29tcGV0ZSBtb3JlIGluIHRoZSA1MCB0byAxMDBtZWdhd2F0dCByYW5nZSBhbmQgZGV2ZWxvcCBvdXRzaWRlIHRoZSBVUyBaaW5vIGhhcyBhIGJ1eSByYXRpbmcgb24gdGhlIHNoYXJlcyBGaXJzdCBTb2xhciBzaGFyZXMgc2FuayBvbiB0aGUgbmV3cyB3aGljaCB3YXMgcmVwb3J0ZWQgYWZ0ZXIgcmVndWxhciBzdG9jayB0cmFkaW5nIGVuZGVkIFNob3J0bHkgYWZ0ZXIgNiBwbSBpbiBOZXcgWW9yayB0aGUgc2hhcmVzIHdlcmUgZG93biA2OSBwZXJjZW50IGF0IDUyNTMgYWZ0ZXIgcG9zdGluZyBhIHNtYWxsIGdhaW4gZHVyaW5nIHRoZSByZWd1bGFyIHNlc3Npb24gdG8gY2xvc2UgYXQgNTY0MSAgICAgICAgICAgICAgICAgICAgICAgICAgRGVzZXJ0IFN1bmxpZ2h0IEZpcnN0IFNvbGFycyBzYWxlcyBmb3IgdGhlIHRoaXJkIHF1YXJ0ZXIgb2YgbGFzdCB5ZWFyIGFsbW9zdCBkb3VibGVkIHdoZW4gaXQgYWRkZWQgYWJvdXQgaGFsZiB0aGUgcmV2ZW51ZSBmcm9tIHRoZSA1NTBtZWdhd2F0dCBEZXNlcnQgU3VubGlnaHQgcHJvamVjdCBpbiBTb3V0aGVybiBDYWxpZm9ybmlhIHRvIGl0cyBiYWxhbmNlIHNoZWV0IFRoYXQgYW5kIHRoZSBjb21wYW55cyA1NTBtZWdhd2F0dCBUb3BheiBwcm9qZWN0IGFyZSB0aGUgYmlnZ2VzdCBpbiB0aGUgVVMgYW5kIEZpcnN0IFNvbGFyIGhhcyBub3RoaW5nIGVsc2Ugb2YgdGhhdCBzY2FsZSBpbiBpdHMgcGlwZWxpbmUgRmlyc3QgU29sYXIgaXMgd29ya2luZyB0byBpbmNyZWFzZSB0aGUgb3V0cHV0IG9mIGl0cyBwYW5lbHMgYW5kIG1ha2UgdGhlbSBiZXR0ZXIgc3VpdGVkIGZvciBjb21tZXJjaWFsIHByb2plY3RzIEF2ZXJhZ2UgY29udmVyc2lvbiBlZmZpY2llbmN5IHRoZSBhbW91bnQgb2YgZWxlY3RyaWNpdHkgcHJvZHVjZWQgZnJvbSBzdW5saWdodCByb3NlIHRvIDE0MiBwZXJjZW50IGluIHRoZSB0aGlyZCBxdWFydGVyIGFuZCBIdWdoZXMgc2FpZCB0b2RheSBvbiBhIGNvbmZlcmVuY2UgY2FsbCB0aGF0IHdpbGwgcmVhY2ggMTU5IHBlcmNlbnQgaW4gMjAxNSBUaGUgY29tcGFueSBoYXMgcmVwb3J0ZWQgZWZmaWNpZW5jeSByYXRlcyBhcyBoaWdoIGFzIDE3IHBlcmNlbnQgaW4gYSBsYWJvcmF0b3J5IEdldHRpbmcgdGhlIGVmZmljaWVuY3kgdXAgd2lsbCBoZWxwIHRoZW0gcGVuZXRyYXRlIG1vcmUgb2YgdGhlIHNwYWNlY29uc3RyYWluZWQgYXJlYXMgbGlrZSBjb21tZXJjaWFsIHJvb2Z0b3BzIFppbm8gc2FpZCBGaXJzdCBTb2xhciBwbGFucyB0byBiZWdpbiBpbmNyZWFzaW5nIHByb2R1Y3Rpb24gY2FwYWNpdHkgYnkgYXMgbXVjaCBhcyA0NiBwZXJjZW50IGluIE9oaW8gYW5kIE1hbGF5c2lhIG5leHQgeWVhciBwYXJ0bHkgYmVjYXVzZSBlZmZpY2llbmN5IGltcHJvdmVtZW50cyBoYXZlIGhlbHBlZCB3aW4gb3JkZXJzIHNhaWQgQ2hpZWYgRmluYW5jaWFsIE9mZmljZXIgTWFyayBXaWRtYXIgV2V2ZSBiZWVuIGFibGUgdG8gaW5jcmVhc2Ugb3VyIHdpbiByYXRlcyBpbiB0aGUgbWFya2V0IFdpZG1hciBzYWlkIG9uIHRoZSBjYWxsIFRoZSB0ZWNobm9sb2d5IGhhcyBiZWNvbWUgbW9yZSBhbmQgbW9yZSBjb21wZXRpdGl2ZSBBbm90aGVyIHJlYXNvbiB0byBib29zdCBjYXBhY2l0eSBpcyBhbiBleHBlY3RlZCBpbmNyZWFzZSBpbiBkZW1hbmQgaW4gdGhlIFVTIG92ZXIgdGhlIG5leHQgdHdvIHllYXJzIEh1Z2hlcyBzYWlkIFdlcmUgb3B0aW1pc3RpYyB0aGF0IGRlbWFuZCBmb3IgcHJvamVjdHMgd2lsbCBpbmNyZWFzZSBhaGVhZCBvZiB0aGUgcmVkdWN0aW9uIGluIFVTIHRheCBpbmNlbnRpdmVzIGluIDIwMTd0AARyb3dzdXEAfgAKAAAAAXQAATV0AAVzdGFydHVxAH4ACgAAAAF0AAEwdAACZmx1cQB+AAoAAAABdABvYXJ0aWNsZUlkLHRpdGxlLGNvbnRlbnQsZGF0ZSxzdG9ja0hpc3RvcnlJZCxzeW1ib2wsaGlzdG9yeURhdGUsb3BlbixoaWdoLGxvdyxjbG9zZSxhZGpDbG9zZSx2b2x1bWUsaWQsX3ZlcnNpb25fdAACZnF1cQB+AAoAAAABdAA6aGlzdG9yeURhdGU6WzIwMTMtMTItMDNUMDA6MDA6MDBaIFRPIDIwMTQtMDctMTBUNTk6NTk6NTlaXXgAcA==</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDE0NTU=</field><field name="title" class="java.lang.String">rO0ABXQAQ0JsYWNrc3RvbmUgVW5pdCBGb3Jlc2hhZG93cyBHb29nbGUgUGF0aCB0byBCZWNvbWluZyBhIFBvd2VyIENvbXBhbnk=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUZGWVyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDBjN2NlODc2Y2M3MmZiMDc=</field><field name="symbol" class="java.lang.String">rO0ABXQABEdSSUQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUZLf7iAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCw9cKPXCk</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCw9cKPXCk</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCo9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCo9cKPXCk</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCceuFHrhS</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAB9A==</field><field name="id" class="java.lang.String">rO0ABXQAEGI1NGM3MjZjNDIyMDQ5Njk=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mIBKAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQyOTU=</field><field name="title" class="java.lang.String">rO0ABXQARENydW1ibGluZyBVUyBFbmVyZ3kgR3JpZCBHZXRzIEpvbHQgQ3JlYXRpbmcgU21hcnRlciBQb3dlciBpbiBIb3VzdG9u</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbRZRCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDkxNTAxOGJiODRkMDliMjE=</field><field name="symbol" class="java.lang.String">rO0ABXQABEdSSUQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbWi2yAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCqj1wo9cK</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCqj1wo9cK</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCqj1wo9cK</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCqj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCnXCj1wo9</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDI3NjFiMjdmYjU4MDhmZDE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mLWHAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE5ODI0</field><field name="title" class="java.lang.String">rO0ABXQAOUFiZXJjcm9tYmllIFJlc3VsdHMgQmVhdCBFc3RpbWF0ZXMgYXMgU2FsZXMgRGVjbGluZSBTbG93cw==</field><field name="content" class="java.lang.String">rO0ABXQO/EFiZXJjcm9tYmllICYgRml0Y2ggQ28uLCB0aGUgY2xvdGhpbmcgcmV0YWlsZXIgd29ya2luZyB0byByZWdhaW4gdGVlbnPigJkgZmF2b3IsIHBvc3RlZCBhIGZpcnN0LXF1YXJ0ZXIgbG9zcyB0aGF0IHdhcyBuYXJyb3dlciB0aGFuIGFuYWx5c3RzIGVzdGltYXRlZCBhcyBuZXcgc3R5bGVzIG9mIHNob3J0cyBhbmQgY3JvcCB0b3BzIHNsb3dlZCBpdHMgc2FsZXMgZGVjbGluZS4gRXhjbHVkaW5nIHNvbWUgaXRlbXMsIHRoZSBsb3NzIGluIHRoZSBxdWFydGVyIGVuZGVkIE1heSAzIHdhcyAxNyBjZW50cyBhIHNoYXJlLCB0aGUgTmV3IEFsYmFueSwgT2hpby1iYXNlZCBjb21wYW55IHNhaWQgaW4gYSBzdGF0ZW1lbnQgdG9kYXkuIFRoZSBhdmVyYWdlIG9mIDM0IGFuYWx5c3Rz4oCZIGVzdGltYXRlcyBjb21waWxlZCBieSBCbG9vbWJlcmcgd2FzIGZvciBhIGxvc3Mgb2YgMTkgY2VudHMuIENoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyIE1pa2UgSmVmZnJpZXMgaGFzIGJlZW4gd29ya2luZyB0byByZXZpdmUgQWJlcmNyb21iaWXigJlzIGFwcGVhbCBhbW9uZyB0ZWVuYWdlIHNob3BwZXJzIHdob+KAmXZlIHN0cmF5ZWQgZnJvbSB0aGUgY2hhaW4gaW4gZmF2b3Igb2YgZmFzdC1mYXNoaW9uIHB1cnZleW9ycyBzdWNoIGFzIEZvcmV2ZXIgMjEgYW5kIEhlbm5lcyAmIE1hdXJpdHogQUIuIEFiZXJjcm9tYmllIGhhcyBpbnRyb2R1Y2VkIG5ldyBjcm9wIHRvcHMgd2l0aCB2YXJ5aW5nIHNsZWV2ZSBsZW5ndGhzIGFuZCBkaWZmZXJlbnQgc3R5bGVzIG9mIHNob3J0cyB0byBhcHBlYWwgdG8gc2hvcHBlcnMgc2Vla2luZyBhIG1vcmUgY3VzdG9taXplZCBsb29rLiBGaXJzdC1xdWFydGVyIHNhbGVzIGZlbGwgMS45IHBlcmNlbnQgdG8gJDgyMi40IG1pbGxpb24sIHRvcHBpbmcgYW5hbHlzdHPigJkgJDc5Ni4zIG1pbGxpb24gYXZlcmFnZSBlc3RpbWF0ZS4g4oCcVGhleSBvZmZlciBhIGZldyBwaWVjZXMgdGhhdCBhdCBsZWFzdCBkYWJibGUgaW4gb25lIG9mIHRoZSBtb3N0IHBlcnZhc2l2ZSBsb29rcyBvZiBzdW1tZXIgc28gZmFyLOKAnSBIb3dhcmQgVHViaW4sIGEgTmV3IFlvcmstYmFzZWQgYW5hbHlzdCBhdCBSQkMgQ2FwaXRhbCBNYXJrZXRzIGluIE5ldyBZb3JrLCBzYWlkIGluIGEgbm90ZSBiZWZvcmUgdGhlIHJlc3VsdHMgd2VyZSByZWxlYXNlZC4g4oCcV2UgZG8gc2VlIHNvbWUgcmVwcmVzZW50YXRpb24gb2Ygb3RoZXIgaW1wb3J0YW50IHRyZW5kcyBmb3IgdGhlIHNlYXNvbi7igJ0gSGUgaGFzIHRoZSBlcXVpdmFsZW50IG9mIGEgaG9sZCByYXRpbmcgb24gdGhlIHNoYXJlcy4gQWJlcmNyb21iaWUgcm9zZSA4LjUgcGVyY2VudCB0byAkMzguMTAgYXQgODowNCBhLm0uIGluIGVhcmx5IHRyYWRpbmcgaW4gTmV3IFlvcmsuIFRoZSBzaGFyZXMgZ2FpbmVkIDYuNyBwZXJjZW50IHRoaXMgeWVhciB0aHJvdWdoIHllc3RlcmRheSwgY29tcGFyZWQgd2l0aCBhIDMuMyBwZXJjZW50IGluY3JlYXNlIGluIHRoZSBTdGFuZGFyZCAmIFBvb3LigJlzIDUwMCBJbmRleC4gQWJlcmNyb21iaWUgbWFpbnRhaW5lZCBpdHMgZm9yZWNhc3QgZm9yIHByb2ZpdCBwZXIgc2hhcmUgb2YgJDIuMTUgdG8gJDIuMzUgdGhpcyB5ZWFyLiBBbmFseXN0cyBlc3RpbWF0ZSAkMi4zNS4gU2FtZS1TdG9yZSBTYWxlcyBGaXJzdC1xdWFydGVyIHNhbGVzIGF0IHN0b3JlcyBvcGVuIGF0IGxlYXN0IGEgeWVhciBkZWNyZWFzZWQgNCBwZXJjZW50LCBzbG93ZXIgdGhhbiB0aGUgMTcgcGVyY2VudCBkcm9wIGEgeWVhciBlYXJsaWVyIGFuZCBsZXNzIHRoYW4gYW5hbHlzdHPigJkgYXZlcmFnZSBlc3RpbWF0ZSBmb3IgYSA2LjkgcGVyY2VudCBkZWNsaW5lLiBUaGUgbmV0IGxvc3MgZm9yIHRoZSBxdWFydGVyIHdpZGVuZWQgdG8gJDIzLjcgbWlsbGlvbiwgb3IgMzIgY2VudHMgYSBzaGFyZSwgZnJvbSAkNy4yIG1pbGxpb24sIG9yIDkgY2VudHMsIGEgeWVhciBlYXJsaWVyLCB0aGUgY29tcGFueSBzYWlkLiBBYmVyY3JvbWJpZSBoYXMgYmVlbiB1bmRlcmdvaW5nIHJhcGlkIGNoYW5nZS4gVGhlIGNoYWluIGhhcyBjdXQgSmVmZnJpZXPigJlzIHBheSBhbmQgc3RyaXBwZWQgaGltIG9mIHRoZSBjaGFpcm1hbiByb2xlLiBJdCBjcmVhdGVkIGEgbmV3IGNoaWVmIG9wZXJhdGluZyBvZmZpY2VyIGpvYiBhbmQgbmFtZWQgZm91ciBuZXcgaW5kZXBlbmRlbnQgZGlyZWN0b3JzIHRvIHRoZSBib2FyZCBhcyBwYXJ0IG9mIGEgZGVhbCB3aXRoIGFjdGl2aXN0IGludmVzdG9yIEVuZ2FnZWQgQ2FwaXRhbCBMTEMuIFRoZSByZXRhaWxlciBhbHNvIGlzIHdvcmtpbmcgdG8gcmVwb3NpdGlvbiBpdHMgYnJhbmRzLiBUaGUgbWFpbiBBYmVyY3JvbWJpZSBuYW1lcGxhdGUgd2lsbCBiZSBhaW1lZCBhdCBzaG9wcGVycyB3aXRoIG1vcmUgbW9uZXkgdG8gc3BlbmQsIHJhdGhlciB0aGFuIHRlZW5zLiBUaGUgSG9sbGlzdGVyIGJyYW5kLCBhIFNvdXRoZXJuIENhbGlmb3JuaWEtaW5mbHVlbmNlZCBjbG90aGluZyBsaW5lLCB3aWxsIHVzZSBsb3cgcHJpY2VzIGFuZCByYXBpZGx5IGNoYW5naW5nIHN0eWxlcyB0byByZWNhcHR1cmUgY3VzdG9tZXJzIHdobyBoYXZlIHR1cm5lZCB0byBjaGFpbnMgbGlrZSBGb3JldmVyIDIxLiBSZXZhbXBpbmcgU3RvcmVzIEluIGFuIGVmZm9ydCB0byBsdXJlIHNob3BwZXJzIGJhY2sgaW50byBzdG9yZXMsIEFiZXJjcm9tYmllIGlzIHJldmFtcGluZyBpdHMgbWFsbC1iYXNlZCBsb2NhdGlvbnMuIFRoZSBIb2xsaXN0ZXIgc3RvcmVzIGFyZSBicmlnaHRlciwgdGhlIG11c2ljIGhhcyBiZWVuIHR1cm5lZCBkb3duLCBhbmQgdGhlIGNvbXBhbnkgaGFzIHJlZHVjZWQgdGhlIGZyYWdyYW5jZSBzcHJpdHplZCBhbW9uZyB0aGUgcmFja3MgYnkgMjUgcGVyY2VudC4gVGhlIGJsaW5kcyBoYXZlIGNvbWUgb2ZmIHRoZSBBYmVyY3JvbWJpZSB3aW5kb3dzIGluIGZhdm9yIG9mIGRpc3BsYXlzIGFuZCBtYW5uZXF1aW5zIHNob3djYXNpbmcgdGhlIGNsb3RoaW5nLiBUaGUgY2hhaW4gaGFzIHVwZGF0ZWQgaXRzIG1lcmNoYW5kaXNlLCB0b28uIEl0IGhhcyBpbnRyb2R1Y2VkIGJsYWNrIGNsb3RoaW5nLCBhZGRlZCBsYXJnZXIgc2l6ZXMgYW5kIHdpbGwgcm9sbCBvdXQgYSDigJxjbGFzc2ljIGZpdOKAnSBULXNoaXJ0IG9ubGluZSB0aGF04oCZcyBsb29zZXIgdGhhbiB0aGUgY29tcGFueeKAmXMgc3RhbmRhcmQgbXVzY2xlLXN0eWxlIHNoaXJ0LiBBYmVyY3JvbWJpZSBhbHNvIGlzIHJlZHVjaW5nIHRoZSB1c2Ugb2YgbG9nb3MgYWNyb3NzIGl0cyBicmFuZHMgYW5kIHBhcnRuZXJpbmcgd2l0aCB0aGlyZCBwYXJ0aWVzIHRvIHByb2R1Y2UgbmV3IGl0ZW1zLiBJbiB0aGUgbWVhbnRpbWUsIHRoZSBjb21wYW55IGhhcyBhbGlnbmVkIDY5LXllYXItb2xkIEplZmZyaWVz4oCZcyBjb21wZW5zYXRpb24gd2l0aCB0aGUgcmV0YWlsZXLigJlzIHBlcmZvcm1hbmNlLiBIZSBkaWRu4oCZdCByZWNlaXZlIGFueSBwZXJmb3JtYW5jZS1iYXNlZCBib251c2VzIGluIGZpc2NhbCAyMDEzLCBhY2NvdW50aW5nIGZvciBtdWNoIG9mIHRoZSBkZWNyZWFzZSBpbiBoaXMgdG90YWwgY29tcGVuc2F0aW9uLiBIZSBhbHNvIGRpZG7igJl0IGdldCBhIGNhc2ggYm9udXMgb3IgYW55IGVxdWl0eSBhd2FyZHMgZHVyaW5nIHRoZSB5ZWFyIGJlY2F1c2UgQWJlcmNyb21iaWUgZmFpbGVkIHRvIGFjaGlldmUgZmluYW5jaWFsIHRhcmdldHMgYW5kIGl0cyBzdG9jayBwZXJmb3JtZWQgcG9vcmx5LiBKZWZmcmllc+KAmXMgc2FsYXJ5IHJlbWFpbmVkIGFib3V0IHRoZSBzYW1lLiBUaGUgY29tcGFueeKAmXMgc3RvY2sgZmVsbCAzMSBwZXJjZW50IGluIDIwMTMsIG1hcmtpbmcgdGhlIHRoaXJkIHN0cmFpZ2h0IHllYXIgb2YgZGVjbGluZXMu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUZGWVyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDIzZWVmMGY2YjlmNmRkZWY=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0FORg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUZLf7iAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCmZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBDEzMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCj1wo9cKP</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBDAUeuFHrh</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCsKPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAADVduA==</field><field name="id" class="java.lang.String">rO0ABXQAEGRiNDNhYTA0YTM3NGFkNjQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEzxAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE0MzY0</field><field name="title" class="java.lang.String">rO0ABXQAPkludmVzdG9ycyBTbGFtIFN0b2NrIG9mIFVuaXRlZCwgT25seSBVUyBBaXJsaW5lIHRvIFJlcG9ydCBMb3Nz</field><field name="content" class="java.lang.String">rO0ABXQXDUNvbXBldGl0b3JzIG1hZGUgbW9uZXkgbGFzdCBxdWFydGVyIGFzIHRoZXkga2VwdCBjb3N0cyBpbiBjaGVjayB3aGlsZSBncmFwcGxpbmcgd2l0aCB0aGUgc3Rvcm1zLiBBbWVyaWNhbiBBaXJsaW5lcyBHcm91cCBJbmMuLCB0aGUgd29ybGTigJlzIGJpZ2dlc3QgYWlybGluZSwgcmVwb3J0ZWQgaXRzIGxhcmdlc3QtZXZlciBmaXJzdC1xdWFydGVyIHByb2ZpdCwgYW5kIFNvdXRod2VzdCBBaXJsaW5lcyBDby4gc2FpZCBlYXJuaW5ncyBleGNsdWRpbmcgc29tZSBpdGVtcyBhbHNvIHNldCBhIHJlY29yZCBmb3IgdGhlIHBlcmlvZC4gVW5pdGVk4oCZcyBzdHJ1Z2dsZXMgdG8gcmVhcCB0aGUgYmVuZWZpdHMgb2YgaXRzIDIwMTAgbWVyZ2VyIHdpdGggQ29udGluZW50YWwgQWlybGluZXMgY29udHJhc3RlZCB3aXRoIHRoZSBwZXJmb3JtYW5jZSBvZiBBbWVyaWNhbiBhbmQgRGVsdGEgQWlyIExpbmVzIEluYy4gVGhvc2UgdHdvIGNhcnJpZXJzIGJvdGggaGF2ZSBiZW5lZml0ZWQgZnJvbSBjb25zb2xpZGF0aW9uIHRoYXQgaGFzIHNocnVuayB0aGUgVS5TLiBpbmR1c3RyeSBmcm9tIHNpeCBtYWpvciBhaXJsaW5lcyB0byB0aHJlZSBpbiB0aGUgcGFzdCBkZWNhZGUsIHNhaWQgUm9iZXJ0IE1hbm4sIGFuIGF2aWF0aW9uIGNvbnN1bHRhbnQuIOKAnFRoZSBhbmFseXN0IGluZHVzdHJ5IGlzIGtpbmQgb2YgbG9zaW5nIGZhaXRoIGluIFVuaXRlZOKAmXMgZ3Jhc3Agb2Ygc3RyYXRlZ3kgYW5kIGV4ZWN1dGlvbizigJ0gc2FpZCBNYW5uLCB3aG8gaGVhZHMgUi5XLiBNYW5uICYgQ28uIGluIFBvcnQgV2FzaGluZ3RvbiwgTmV3IFlvcmsuIOKAnEkganVzdCBzZW5zZSB0aGVyZeKAmXMgbGl0dGxlIGNvbmZpZGVuY2UgdGhleSBjYW4gcnVuIGFuIG9uLXRpbWUgYW5kIGNvbXBldGl0aXZlIGFpcmxpbmUu4oCdIFVuaXRlZCB0dW1ibGVkIDkuOCBwZXJjZW50IHRvICQ0MS41MyBhdCB0aGUgY2xvc2UgaW4gTmV3IFlvcmssIGRyYWdnaW5nIHRoZSAxMS1jYXJyaWVyIEJsb29tYmVyZyBVLlMuIEFpcmxpbmVzIEluZGV4IHRvIGEgZHJvcCBvZiAxLjYgcGVyY2VudC4gVGhlIHNsaWRlIGFsc28gZXJhc2VkIG1vcmUgdGhhbiBoYWxmIHRoZSBzdG9ja+KAmXMgeWVhci10by1kYXRlIGdhaW4sIGxlYXZpbmcgdGhlIHNoYXJlcyB3aXRoIGEgOS44IHBlcmNlbnQgYWR2YW5jZS4gV2hpbGUgVW5pdGVk4oCZcyAzMiBwZXJjZW50IGdhaW4gaW4gdGhlIHBhc3QgeWVhciBiZWF0IGVxdWl0eSBiZW5jaG1hcmtzIHN1Y2ggYXMgdGhlIFJ1c3NlbGwgMTAwMCBJbmRleCwgdGhlIGNvbXBhbnkgdHJhaWxlZCBwZWVycyBzdWNoIGFzIERlbHRhLCB3aGljaCBtb3JlIHRoYW4gZG91YmxlZCBpbiB0aGF0IHNwYW4uIEFtZXJpY2FuIGhhcyBnYWluZWQgNTEgcGVyY2VudCBzaW5jZSBjbG9zaW5nIG9uIHRoZSBVUyBBaXJ3YXlzIG1lcmdlciBvbiBEZWMuIDksIGFsbW9zdCBmaXZlIHRpbWVzIGFzIG11Y2ggYXMgVW5pdGVk4oCZcyByYWxseS4gICAgICAgICAgICAgICAgICAgICAgICDigJhBcHByb3ByaWF0ZSBTdGVwc+KAmSBUaGUgbG9zcyBvZiAkNDg5IG1pbGxpb24sIG9yICQxLjMzIGEgc2hhcmUsIGV4Y2x1ZGluZyBzb21lIGl0ZW1zLCB3aWRlbmVkIGZyb20gYSBsb3NzIG9mICQzNTggbWlsbGlvbiwgb3IgJDEuMDgsIGEgeWVhciBlYXJsaWVyLCBDaGljYWdvLWJhc2VkIFVuaXRlZCBzYWlkIFRodXJzZGF5LiBUaGF0IHdhcyBuYXJyb3dlciB0aGFuIHRoZSAkMS4zNiBhdmVyYWdlIG9mIDE2IGVzdGltYXRlcyBjb21waWxlZCBieSBCbG9vbWJlcmcuIFNhbGVzIGZlbGwgMC4zIHBlcmNlbnQgdG8gJDguNyBiaWxsaW9uLiDigJxUaGlzIHF1YXJ0ZXLigJlzIGZpbmFuY2lhbCBwZXJmb3JtYW5jZSBpcyB3ZWxsIGJlbG93IHdoYXQgd2UgY2FuIGFuZCBzaG91bGQgYWNoaWV2ZSzigJ0gQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXIgSmVmZiBTbWlzZWsgc2FpZCBpbiBhIHN0YXRlbWVudC4g4oCcV2UgYXJlIHRha2luZyB0aGUgYXBwcm9wcmlhdGUgc3RlcHMgd2l0aCBvdXIgb3BlcmF0aW9ucywgbmV0d29yaywgc2VydmljZSBhbmQgcHJvZHVjdCB0byBkZWxpdmVyIHNpZ25pZmljYW50bHkgYmV0dGVyIGZpbmFuY2lhbCByZXN1bHRzLuKAnSBBIHNlcmllcyBvZiBzdG9ybXMgcHVtbWVsZWQgdGhlIGNlbnRyYWwgYW5kIGVhc3Rlcm4gVS5TLiBpbiBKYW51YXJ5IGFuZCBGZWJydWFyeSwgYWZmZWN0aW5nIFVuaXRlZCBodWJzIGluIENoaWNhZ28gYW5kIE5ld2FyaywgTmV3IEplcnNleS4gVW5pdGVkIHdhcyBmb3JjZWQgdG8gZ3JvdW5kIDM1LDAwMCBmbGlnaHRzLCByZWR1Y2luZyB0aGUgbnVtYmVyIG9mIHBhc3NlbmdlcnMgZmxvd24gYnkgMS40IHBlcmNlbnQuICAgICAgICAgICAgICAgICAgICAgICAgIEJsYW1pbmcgU3Rvcm1zIOKAnEV2ZXJ5Ym9keSBsaWtlcyB0byBibGFtZSB0aGUgc3Rvcm1zLCBidXQgdGhlcmUgYXJlIHN0b3JtcyBldmVyeSB5ZWFyLOKAnSBzYWlkIFJvZ2VyIEtpbmcsIHNlbmlvciB0cmFuc3BvcnRhdGlvbiBhbmFseXN0IHdpdGggQ3JlZGl0U2lnaHRzIEluYy4sIGJhc2VkIGluIE5ldyBZb3JrLiDigJxJdOKAmXMgbm90IGFuIGV4Y3VzZS4gSXQgc2VlbXMgbGlrZSB0aGV54oCZcmUgbGFnZ2luZyBvbiBncm93dGggYW5kIGZhcmVzLuKAnSBVbml0ZWQsIG5vdyB3b3JraW5nIHRvIGN1dCAkMiBiaWxsaW9uIGluIGFubnVhbCBjb3N0cyBieSAyMDE3LCB3YXMgaGFtcGVyZWQgYnkgc2x1Z2dpc2ggcmV2ZW51ZS4gSW50ZXJuYXRpb25hbCBzYWxlcyB3ZXJlIOKAnHVnbHkgYWNyb3NzIHRoZSBib2FyZCzigJ0gS2V2aW4gQ3Jpc3NleSwgYW4gYW5hbHlzdCBhdCBNYWh3YWgsIE5ldyBKZXJzZXktYmFzZWQgU2t5bGluZSBSZXNlYXJjaCBMTEMgd3JvdGUgaW4gYSByZXNlYXJjaCBub3RlLiBSZXZlbnVlIGZvciBlYWNoIHNlYXQgZmxvd24gYSBtaWxlLCBhbiBpbmR1c3RyeSBiZW5jaG1hcmssIGRlY2xpbmVkIGluIHRoZSB0aHJlZSBtYWpvciBnZW9ncmFwaGljIHNlZ21lbnRzIOKAlCBhY3Jvc3MgdGhlIEF0bGFudGljIGFuZCBQYWNpZmljIGFuZCB0byBMYXRpbiBBbWVyaWNhLiBBbWVyaWNhbiwgd2hpY2ggY2xhaW1lZCB0aGUgdGl0bGUgb2Ygd29ybGTigJlzIGxhcmdlc3QgY2FycmllciBmcm9tIFVuaXRlZCBsYXN0IHllYXIsIHJlcG9ydGVkIGFkanVzdGVkIHByb2ZpdCBvZiAkNDAyIG1pbGxpb24sIG9yIDU0IGNlbnRzIGEgc2hhcmUsIGluIGl0cyBmaXJzdCBmdWxsIHF1YXJ0ZXIgc2luY2UgbWVyZ2luZyB3aXRoIFVTIEFpcndheXMuIEFuYWx5c3RzIHByb2plY3RlZCBlYXJuaW5ncyBvbiB0aGF0IGJhc2lzIG9mIDQ4IGNlbnRzIGEgc2hhcmUsIGJhc2VkIG9uIHRoZSBhdmVyYWdlIG9mIDE0IGVzdGltYXRlcyBjb21waWxlZCBieSBCbG9vbWJlcmcuIOKAnEluIHRoZSBlbnRpcmUgaGlzdG9yeSBvZiBBbWVyaWNhbiBBaXJsaW5lcywgd2UgaGF2ZSBuZXZlciBlYXJuZWQgJDQwMCBtaWxsaW9uIGluIHRoZSBmaXJzdCB0aHJlZSBtb250aHMgb2YgYSB5ZWFyLCBidXQgaW4gdGhlIGZpcnN0IHRocmVlIG1vbnRocyBzaW5jZSB0aGUgbWVyZ2VyLCB3ZSBkaWQs4oCdIENFTyBEb3VnIFBhcmtlciBzYWlkIGluIGEgbWVzc2FnZSB0byBlbXBsb3llZXMuICAgICAgICAgICAgICAgICAgICAgICAgICBBbWVyaWNhbuKAmXMgV2ludGVyIFRoZSBjYXJyaWVyLCB3aXRoIGh1YnMgaW4gQ2hpY2FnbyBhbmQgTmV3IFlvcmssIHdhcyBhbHNvIGJ1ZmZldGVkIGJ5IG9uZSBvZiB0aGUgd29yc3Qgd2ludGVycyBvbiByZWNvcmQgaW4gdGhvc2UgcmVnaW9ucy4gVGhlIHdlYXRoZXIgcmVkdWNlZCByZXZlbnVlIGZvciB0aGUgRm9ydCBXb3J0aCwgVGV4YXMtYmFzZWQgYWlybGluZSBieSAkMTE1IG1pbGxpb24gYW5kIG5ldCBvcGVyYXRpbmcgcHJvZml0IGJ5ICQ2MCBtaWxsaW9uLiBBbWVyaWNhbiBlbmRlZCB0aGUgcXVhcnRlciB3aXRoICQxMC42IGJpbGxpb24gaW4gY2FzaCBhbmQgc2hvcnQtdGVybSBpbnZlc3RtZW50cy4gVGhvc2UgcmVzZXJ2ZXMgd2VyZSBib2xzdGVyZWQgYWZ0ZXIgdGhlIGNvbXBhbnkgcmVjZWl2ZWQgJDM4MSBtaWxsaW9uIGZvciB0aGUgc2FsZSBvZiB0YWtlb2ZmIGFuZCBsYW5kaW5nIHNsb3RzIGF0IFJvbmFsZCBSZWFnYW4gV2FzaGluZ3RvbiBOYXRpb25hbCBBaXJwb3J0IGFuZCBOZXcgWW9ya+KAmXMgTGFHdWFyZGlhIEFpcnBvcnQgcmVxdWlyZWQgYnkgdGhlIFUuUy4gSnVzdGljZSBEZXBhcnRtZW50IGFzIGEgY29uZGl0aW9uIG9mIGl0cyBhcHByb3ZhbCBvZiB0aGUgbWVyZ2VyLiBKZXRCbHVlIEFpcndheXMgQ29ycC4sIHdob3NlIG1haW4gaHViIGF0IE5ldyBZb3Jr4oCZcyBKb2huIEYuIEtlbm5lZHkgSW50ZXJuYXRpb25hbCBBaXJwb3J0IHdhcyBhbHNvIHBvdW5kZWQgYnkgdGhlIGFkdmVyc2Ugd2VhdGhlciwgcmVwb3J0ZWQgbmV0IGluY29tZSBvZiAkNCBtaWxsaW9uLCBvciAxIGNlbnQgYSBzaGFyZS4gSXQgZmVsbCBzaG9ydCBvZiB0aGUgYXZlcmFnZSA3IGNlbnRzLWEtc2hhcmUgZXN0aW1hdGUgdGhhdCB3YXMgdGhlIGF2ZXJhZ2Ugb2YgMTUgYW5hbHlzdHMgc3VydmV5ZWQgYnkgQmxvb21iZXJnLiBUaGUgTmV3IFlvcmstYmFzZWQgY2FycmllciBzYWlkIGl0IGNhbmNlbGVkIDQsMTAwIGZsaWdodHMgaW4gdGhlIG5vcnRoZWFzdGVybiBVLlMuLCB0cmltbWluZyByZXZlbnVlIGJ5ICQ1MCBtaWxsaW9uIGFuZCBvcGVyYXRpbmcgaW5jb21lIGJ5IGFib3V0ICQzNSBtaWxsaW9uLiAgICAgICAgICAgICAgICAgICAgICAgIFNvdXRod2VzdCBBaXJsaW5lcyBTb3V0aHdlc3QgcmVwb3J0ZWQgcHJvZml0IGV4Y2x1ZGluZyBzcGVjaWFsIGl0ZW1zIG9mICQxMjYgbWlsbGlvbiwgb3IgMTggY2VudHMgYSBzaGFyZS4gVGhlIHJlc3VsdHMgdG9wcGVkIHRoZSBhdmVyYWdlIGFuYWx5c3Rz4oCZIGVzdGltYXRlIGJ5IDEgY2VudCBhcyB0aGUgY2FycmllciByZWR1Y2VkIG9wZXJhdGluZyBleHBlbnNlcyBieSAxLjIgcGVyY2VudCBvbiB0aGUgc2FtZSBiYXNpcy4gVGhlIGFpcmxpbmUgY2FuY2VsZWQgbW9yZSB0aGFuIDcsNTAwIGZsaWdodHMgZHVyaW5nIHdpbnRlciBzdG9ybXMsIHJlZHVjaW5nIGluY29tZSBieSAkNTAgbWlsbGlvbi4gRXZlbiBzbywgcmV2ZW51ZSByb3NlIDIgcGVyY2VudCB0byAkNC4xNyBiaWxsaW9uLCBzaHkgb2YgYW5hbHlzdHPigJkgZXN0aW1hdGVzIG9mICQ0LjE4IGJpbGxpb24sIGFzIHBhc3NlbmdlcnMgZmxldyBtb3JlIG1pbGVzIGFuZCBwYWlkIGhpZ2hlciBmYXJlcywgdGhlIERhbGxhcy1iYXNlZCBjYXJyaWVyIHNhaWQuIFRyYXZlbCBkZW1hbmQgcmVtYWlucyBzdHJvbmcgYXQgbGVhc3QgdGhyb3VnaCB0aGUgbmV4dCB0aHJlZSBtb250aHMgYXMgY29uc3VtZXJzIHdobyBmZWVsIG1vcmUgY29uZmlkZW50IGluIHRoZSBVLlMuIGVjb25vbXkgb3B0IHRvIHRyYXZlbCBtb3JlLCBDRU8gR2FyeSBLZWxseSBzYWlkIGluIGFuIGludGVydmlldy4g4oCcVGhhdCBpcyBhbHdheXMgZnJhZ2lsZSBhbmQgdGVudW91cywgYnV0IHJpZ2h0IG5vdyB0aGVyZSBpcyBsZXNzIHVuY2VydGFpbnR5IHRoYW4gdGhlcmUgaGFzIGJlZW4gb3ZlciB0aGUgcGFzdCBmb3VyIHRvIGZpdmUgeWVhcnMs4oCdIGhlIHNhaWQuIOKAnFJlY292ZXJ5LCB3aGlsZSBzbHVnZ2lzaCwgaXMgcGx1Z2dpbmcgYWxvbmcu4oCdIERlbHRhIG9uIFdlZG5lc2RheSBmb3JlY2FzdCBzdHJvbmdlciBkZW1hbmQgYW5kIHJldmVudWUgdGhhbiBhbmFseXN0cyBoYWQgZXN0aW1hdGVkIGhlYWRlZCBpbnRvIHRoZSBidXN5IHN1bW1lciB0cmF2ZWwgc2Vhc29uLiBQcm9maXQgaW4gdGhlIGZpcnN0IHF1YXJ0ZXIsIGV4Y2x1ZGluZyBzb21lIGl0ZW1zLCBleGNlZWRlZCBhbmFseXN0c+KAmSBlc3RpbWF0ZXMuIFRoZSBjYXJyaWVyIG1lcmdlZCB3aXRoIE5vcnRod2VzdCBBaXJsaW5lcyBDb3JwLiBpbiAyMDA4Lg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUWSGsiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDkzN2MwOTYwNTc0YWEzYjI=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0xVVg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUWXQSSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4DMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4bhR64Ueu</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA32ZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA38zMzMzMz</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3x64UeuFI</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAExFZA==</field><field name="id" class="java.lang.String">rO0ABXQAEGE2OTEzMDA2ZDQ3ZjUzYzg=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGrlAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTI0ODU2</field><field name="title" class="java.lang.String">rO0ABXQAOk5pa2UgUmVwb3J0cyBTb2xpZCBSZXN1bHRzIGJ1dCBTaWduYWxzIFdlYWtlciBTYWxlcyBHcm93dGg=</field><field name="content" class="java.lang.String">rO0ABXQRaE5pa2UgSW5jLiwgYWZ0ZXIgcG9zdGluZyB0aGlyZC1xdWFydGVyIHByb2ZpdCBhbmQgc2FsZXMgdGhhdCB0b3BwZWQgYW5hbHlzdHPigJkgZXN0aW1hdGVzLCBzaWduYWxlZCB0aGF0IG1vbWVudHVtIG1heSBzbG93IGFzIHRoZSBzdHJvbmcgZG9sbGFyIGhhbXBlcnMgaXRzIHBlcmZvcm1hbmNlIGFicm9hZC4gU2FsZXMgaW4gdGhlIHF1YXJ0ZXIgdGhyb3VnaCBNYXkgd2lsbCBnYWluIGF0IGEgaGlnaCBzaW5nbGUtZGlnaXQgcGVyY2VudGFnZSByYXRlLCBDaGllZiBGaW5hbmNpYWwgT2ZmaWNlciBEb25hbGQgQmxhaXIgc2FpZCBUaHVyc2RheSBvbiBhIGNvbmZlcmVuY2UgY2FsbCB3aXRoIGFuYWx5c3RzLiBBbmFseXN0cyBlc3RpbWF0ZWQgYSAxMiBwZXJjZW50IGdhaW4sIG9uIGF2ZXJhZ2UuIE5pa2UsIHdoaWNoIGdvdCA0NSBwZXJjZW50IG9mIGl0cyBzYWxlcyBvdXRzaWRlIG9mIHRoZSBVLlMuIGxhc3QgcXVhcnRlciwgaXMgY29udGVuZGluZyB3aXRoIGEgc3Ryb25nZXIgZG9sbGFyIHRoYXQgcmVkdWNlcyB0aGUgdmFsdWUgb2YgaXRzIHJldmVudWUgYW5kIHByb2ZpdCBnZW5lcmF0ZWQgaW50ZXJuYXRpb25hbGx5LiBUaGF0IHBoZW5vbWVub24gd2lsbCBkcmFnIG9uIHJlc3VsdHMgZXZlbiBtb3JlIGluIHRoZSBjdXJyZW50IHBlcmlvZCwgQmxhaXIgc2FpZC4g4oCcSXTigJlzIGZvcmVpZ24gY3VycmVuY3ksIGFzIHdlbGwgYXMgdGhleeKAmXJlIGdvaW5nIHRvIGNvbnRpbnVlIHRvIGludmVzdCBiZWhpbmQgdGhlIGJyYW5kcyzigJ0gQnJpYW4gWWFyYnJvdWdoLCBhbiBhbmFseXN0IHdpdGggRWR3YXJkIEpvbmVzICYgQ28uIGluIFN0LiBMb3Vpcywgc2FpZCBpbiBhbiBpbnRlcnZpZXcuIFRoZSBkb2xsYXIgcm9zZSB0byB0aGUgc3Ryb25nZXN0IGxldmVsIGluIHR3byB3ZWVrcyBhZ2FpbnN0IHRoZSBldXJvIFRodXJzZGF5LCBhbmQgY2xpbWJlZCB2ZXJzdXMgMTQgb2YgMTYgbWFqb3IgcGVlcnMsIGFmdGVyIEZlZGVyYWwgUmVzZXJ2ZSBwb2xpY3kgbWFrZXJzIHNpZ25hbGVkIHRoZXnigJlsbCBwcm9iYWJseSByYWlzZSBpbnRlcmVzdCByYXRlcyBieSB0aGUgbWlkZGxlIG9mIG5leHQgeWVhci4gVGhlIFUuUy4gZG9sbGFyIGhhcyBnYWluZWQgMC44IHBlcmNlbnQgaW4gdGhlIHBhc3Qgc2l4IG1vbnRocyBhbW9uZyB0aGUgMTAgZGV2ZWxvcGVkLW5hdGlvbiBjdXJyZW5jaWVzIHRyYWNrZWQgYnkgQmxvb21iZXJnIENvcnJlbGF0aW9uLSBXZWlnaHRlZCBJbmRleGVzLiBGb3JlaWduLWV4Y2hhbmdlIOKAnGhlYWR3aW5kcyBoYXZlIGJlZW4gYSBzaWduaWZpY2FudCBkcmFnIG9uIEVQUyBncm93dGggc28gZmFyIHRoaXMgeWVhciwgYW5kIHdlIGV4cGVjdCB0byBmYWNlIG9uZ29pbmcgcHJlc3N1cmXigJ0gaW4gdGhlIGZvdXJ0aCBxdWFydGVyIGFuZCBpbnRvIG5leHQgeWVhciwgTmlrZeKAmXMgQmxhaXIgc2FpZCBvbiB0aGUgY2FsbC4gICAgICAgICAgICAgICAgICAgICAgICAgICAgU2hhcmVzIEZhbGwgTmlrZSBzaGFyZXMgZmVsbCAzLjcgcGVyY2VudCB0byAkNzYuMzUgYXQgNjoyNiBwLm0uIGluIE5ldyBZb3JrIGFmdGVyIHRoZSBjbG9zZSBvZiByZWd1bGFyIHRyYWRpbmcuIFRoZSBzdG9jayBoYWQgY2xpbWJlZCBhcyBtdWNoIGFzIDQuNyBwZXJjZW50IGVhcmxpZXIgaW4gcG9zdC1tYXJrZXQgdHJhZGluZy4gQmVhdmVydG9uLCBPcmVnb24tYmFzZWQgTmlrZSBnYWluZWQgNDUgcGVyY2VudCBpbiB0aGUgMTIgbW9udGhzIHRocm91Z2ggdGhlIGNsb3NlIFRodXJzZGF5LCBjb21wYXJlZCB3aXRoIGEgMjAgcGVyY2VudCBpbmNyZWFzZSBmb3IgdGhlIFN0YW5kYXJkICYgUG9vcuKAmXMgNTAwIEluZGV4LiBUaGUgZm9yZWNhc3QgY2FtZSBhZnRlciBOaWtlIHBvc3RlZCBlYXJuaW5ncyBvZiA3NiBjZW50cyBhIHNoYXJlIGluIHRoZSB0aHJlZSBtb250aHMgdGhyb3VnaCBGZWIuIDI4LiBUaGUgYXZlcmFnZSBvZiAyNiBhbmFseXN0c+KAmSBlc3RpbWF0ZXMgY29tcGlsZWQgYnkgQmxvb21iZXJnIHdhcyA3MiBjZW50cy4gVGhlIHdvcmxk4oCZcyBsYXJnZXN0IHNwb3J0aW5nLWdvb2RzIGNvbXBhbnkgaGFkIGJlZW4gYmVuZWZpdGluZyBmcm9tIGNvbnN1bWVycyBpbmNyZWFzaW5nbHkgYnV5aW5nIGF0aGxldGljIGdlYXIgdG8gd2VhciBldmVyeSBkYXksIG5vdCBqdXN0IHdoZW4gd29ya2luZyBvdXQgb3IgcGxheWluZyBzcG9ydHMuIEZvciBleGFtcGxlLCBtYW55IG9mIE5pa2XigJlzIHNob2UgbGluZXMgaGF2ZSBiZWNvbWUgZmFzaGlvbiBhY2Nlc3Nvcmllcy4gVGhhdOKAmXMgaGVscGVkIGl0IGNvbnRpbnVlIHRvIGdlbmVyYXRlIGdyb3d0aCBpbiBtYXR1cmUgbWFya2V0cyBzdWNoIGFzIE5vcnRoIEFtZXJpY2EsIHdoZXJlIHNhbGVzIGdhaW5lZCAxMiBwZXJjZW50LiDigJxJdOKAmXMgYSBncmVhdCBxdWFydGVyIHdpdGggc2FsZXMgdXAgYWNyb3NzIHRoZSBib2FyZCzigJ0gWWFyYnJvdWdoIHNhaWQuIOKAnE5pa2XigJlzIHByb2R1Y3QgaXMgZmlyaW5nIG9uIGFsbCBjeWxpbmRlcnMgcmlnaHQgbm93LOKAnSBlc3BlY2lhbGx5IGluIGJhc2tldGJhbGwgYW5kIHJ1bm5pbmcsIGhlIHNhaWQuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNhbGVzIFJpc2UgVG90YWwgcmV2ZW51ZSByb3NlIDEzIHBlcmNlbnQgdG8gJDYuOTcgYmlsbGlvbiwgdGhlIGNvbXBhbnkgc2FpZCBpbiBhIHN0YXRlbWVudC4gQW5hbHlzdHMgcHJvamVjdGVkICQ2LjgxIGJpbGxpb24sIG9uIGF2ZXJhZ2UuIFNhbGVzIGluY3JlYXNlZCBpbiBldmVyeSBnZW9ncmFwaGljIHJlZ2lvbiwgaW5jbHVkaW5nIENoaW5hLCB3aGljaCBwb3N0ZWQgYSBkZWNsaW5lIGxhc3QgZmlzY2FsIHllYXIuIE9yZGVycyBmb3IgdGhlIE5pa2UgYnJhbmQgZnJvbSB0aGlzIG1vbnRoIHRvIEp1bHkgcm9zZSAxNCBwZXJjZW50LCBleGNsdWRpbmcgdGhlIGVmZmVjdHMgb2YgZm9yZWlnbi1jdXJyZW5jeSBleGNoYW5nZS1yYXRlIGZsdWN0dWF0aW9ucy4gQW5hbHlzdHMgZXN0aW1hdGVkIGEgMTIuNyBwZXJjZW50IGdhaW4sIG9uIGF2ZXJhZ2UsIGFjY29yZGluZyB0byBkYXRhIGNvbGxlY3RlZCBieSBDb25zZW5zdXMgTWV0cml4LiBUaGUgbWVhc3VyZSwga25vd24gYXMgZnV0dXJlcyBvcmRlcnMsIGlzIGNsb3NlbHkgd2F0Y2hlZCBiZWNhdXNlIGludmVzdG9ycyB2aWV3IGl0IGFzIGEgcHJveHkgZm9yIGZ1dHVyZSBzYWxlcy4gVGhlcmUgd2VyZSBhIGNvdXBsZSBwb2ludHMgb2YgY29uY2VybiBpbiB0aGUgb3JkZXJzLCBZYXJicm91Z2ggc2FpZC4gTm9ydGggQW1lcmljYSBmdXR1cmUgb3JkZXJzIHJvc2UgOSBwZXJjZW50LCBtYXJraW5nIHRoZSBmaXJzdCB0aW1lIHRoZXkgaGFkbuKAmXQgcmVjb3JkZWQgYSBkb3VibGUtZGlnaXQgcGVyY2VudGFnZSBnYWluIHNpbmNlIDIwMTAsIGhlIHNhaWQuIE9yZGVycyBpbiBHcmVhdGVyIENoaW5hLCB3aGljaCB0aGUgY29tcGFueSBoYXMgYmVlbiB0cnlpbmcgdG8gdHVybiBhcm91bmQsIGRlY2xpbmVkIDMgcGVyY2VudC4gQW5hbHlzdHMgZXhwZWN0ZWQgYSBnYWluIG9mIDIuNyBwZXJjZW50IGluIENoaW5hIGFuZCAxMS4yIHBlcmNlbnQgaW4gTm9ydGggQW1lcmljYS4gICAgICAgICAgICAgICAgICAgICAgICAgIE1hcmdpbiBFeHBhbmRzIFRoZSBjb21wYW554oCZcyBncm9zcyBtYXJnaW4sIHRoZSBwZXJjZW50YWdlIG9mIHNhbGVzIGxlZnQgYWZ0ZXIgc3VidHJhY3RpbmcgdGhlIGNvc3Qgb2YgZ29vZHMgc29sZCwgZXhwYW5kZWQgMC4zIHBlcmNlbnRhZ2UgcG9pbnQgdG8gNDQuNSBwZXJjZW50LiBUaGF0IHRyYWlsZWQgYW5hbHlzdHPigJkgcHJvamVjdGlvbnMgb2YgNDQuNyBwZXJjZW50LiBUaGUgZXhwYW5zaW9uIHdhcyB0aGUgZmlmdGggc3RyYWlnaHQgYWZ0ZXIgdHdvIHllYXJzIG9mIGRlY2xpbmVzLiBUaGUgTm9ydGggQW1lcmljYW4gc3BvcnRzIGdlYXIgbWFya2V0IGhhcyBiZWVuIGJvb21pbmcuIEZvb3QgTG9ja2VyIEluYy4sIHRoZSBsYXJnZXN0IGF0aGxldGljLXNob2UgY2hhaW4gaW4gdGhlIFUuUy4sIHBvc3RlZCBhIDUuMyBwZXJjZW50IGdhaW4gaW4gc2FtZS1zdG9yZSBzYWxlcyBkdXJpbmcgYSBmb3VydGggcXVhcnRlciBpbiB3aGljaCBtYW55IHJldGFpbGVycyBzdHJ1Z2dsZWQuIFJldmVudWUgYXQgVW5kZXIgQXJtb3VyIEluYy4gc3VyZ2VkIDM1IHBlcmNlbnQgaW4gaXRzIG1vc3QgcmVjZW50IHF1YXJ0ZXIuIFRob3NlIGdhaW5zIGFyZSBlbnRpY2luZyBjb21wYW5pZXMgZnJvbSBHYXAgSW5jLiB0byBVcmJhbiBPdXRmaXR0ZXJzIEluYy4gdG8gZXhwYW5kIGludG8gdGhlIGNhdGVnb3J5LiBOaWtl4oCZcyB0aGlyZC1xdWFydGVyIG5ldCBpbmNvbWUgZmVsbCAyMSBwZXJjZW50IHRvICQ2ODUgbWlsbGlvbiBmcm9tICQ4NjYgbWlsbGlvbiBhIHllYXIgZWFybGllciwgd2hlbiBpdCBib29rZWQgYSBnYWluIGZyb20gdGhlIHNhbGUgb2YgaXRzIENvbGUgSGFhbiBhbmQgVW1icm8gYnVzaW5lc3Nlcy4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUTd3DSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGRiYjAwZjU0N2M2YzJmODI=</field><field name="symbol" class="java.lang.String">rO0ABXQABldPTy5CRQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUTjApCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBA1HrhR64U</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBA1HrhR64U</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBA1HrhR64U</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBA1HrhR64U</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBAYAAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDRiODhkMjAxOWI5N2RiZDg=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMMoAAAA==</field></document></documents><date>2015-05-07T12:29:01-0500</date></cacheEntry>
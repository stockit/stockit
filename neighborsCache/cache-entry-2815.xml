<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hUaGUgbW92ZSBtYWtlcyBCcml0YWluIHRoZSBiaWdnZXN0IGVjb25vbXkgdG8gZGF0ZSB0byBpbXBvc2UgbW9ydGdhZ2UgbGVuZGluZyBjdXJicyBhcyBpdCB0cmllcyB0byBzdG9wIGEgcmVwZWF0IG9mIHRoZSB0eXBlIG9mIGhvdXNpbmcgYnViYmxlIHNlZW4gaW4gdGhlIFVuaXRlZCBTdGF0ZXMgYW5kIG90aGVyIGNvdW50cmllcyBiZWZvcmUgYSAyMDA3IGJ1c3QgdGhhdCB0cmlnZ2VyZWQgdGhlIGdsb2JhbCBmaW5hbmNpYWwgY3Jpc2lzIEltbWVkaWF0ZSBxdWVzdGlvbnMgd2VyZSByYWlzZWQgYXMgdG8gd2hldGhlciB0aGUgbWVhc3VyZXMgd2VyZSB0b3VnaCBlbm91Z2ggaG93ZXZlciBhbmQgc2hhcmVzIGluIGhvdXNlYnVpbGRlcnMganVtcGVkIG1vcmUgdGhhbiA1IHBlcmNlbnQgb24gcmVsaWVmIHRoZSBtb3ZlcyB3ZXJlIG5vdCBtb3JlIHN0cmluZ2VudCBTb21lIGZvcm0gb2YgYWN0aW9uIHRvIGNvb2wgZG91YmxlZGlnaXQgcHJpY2UgZ3Jvd3RoIGluIHRoZSBob3VzaW5nIG1hcmtldCBoYWQgYmVlbiB3aWRlbHkgYW50aWNpcGF0ZWQgYW5kIHRoZSBCYW5rIHNhaWQgbW9yZSB3b3VsZCBiZSBkb25lIGlmIFRodXJzZGF5cyBtb3ZlcyBwcm92ZSBpbnN1ZmZpY2llbnQgU3Rlcmxpbmcgcm9zZSB0b3dhcmRzIGEgc2l4eWVhciBoaWdoIG9uIHRoZSBwcm9zcGVjdCB0aGF0IHRoZSBjZW50cmFsIGJhbmsgd2lsbCB1bHRpbWF0ZWx5IGhhdmUgdG8gcmFpc2UgaW50ZXJlc3QgcmF0ZXMgVGhlIEJvRXMgRmluYW5jaWFsIFBvbGljeSBDb21taXR0ZWUgc2FpZCB0aGF0IGZyb20gT2N0b2JlciBpdCB3b3VsZCBvbmx5IGFsbG93IDE1IHBlcmNlbnQgb2YgbmV3IG1vcnRnYWdlcyB0byBiZSBhdCBtdWx0aXBsZXMgaGlnaGVyIHRoYW4gNDUgdGltZXMgYSBib3Jyb3dlcnMgaW5jb21lIGFuZCB0aGF0IGFsbCBsZW5kaW5nIHdvdWxkIGJlIHN1YmplY3QgdG8gZXh0cmEgYWZmb3JkYWJpbGl0eSBjaGVja3MgVGhlc2Ugc3RlcHMgd2lsbCBwcmV2ZW50IGxlbmRpbmcgZ2V0dGluZyB0b28gZmFyIGFoZWFkIG9mIGluY29tZSBncm93dGggYW5kIHRoZXlsbCBwcmV2ZW50IGEgc2xpZGUgaW50byByaXNraWVyIGxlbmRpbmcgYW5kIGhpZ2hlciBpbmRlYnRlZG5lc3MgdGhhdCBjb3VsZCB1bmRlcm1pbmUgdGhlIGVjb25vbWljIGV4cGFuc2lvbiBCb0UgR292ZXJub3IgTWFyayBDYXJuZXkgdG9sZCBhIG5ld3MgY29uZmVyZW5jZSBwcmVzZW50aW5nIHRoZSBtZWFzdXJlcyBCcml0YWlucyBob3VzaW5nIG1hcmtldCBoYXMgcmVib3VuZGVkIHNoYXJwbHkgZm9sbG93aW5nIHRoZSBmaW5hbmNpYWwgY3Jpc2lzIHRoYW5rcyB0byByZWNvcmRsb3cgaW50ZXJlc3QgcmF0ZXMgZmFsbGluZyB1bmVtcGxveW1lbnQgYW5kIGdvdmVybm1lbnRzcG9uc29yZWQgY3JlZGl0IHNjaGVtZXMgQnV0IHBvbGljeW1ha2VycyBoYXZlIGJlY29tZSBpbmNyZWFzaW5nbHkgY29uY2VybmVkIGFib3V0IG1vbWVudHVtIGluIHRoZSBob3VzaW5nIG1hcmtldCB3aXRoIHByaWNlcyBncm93aW5nIGF0IGFyb3VuZCAxMCBwZXJjZW50IGFubnVhbGx5IGluIEJyaXRhaW4gYW5kIGF0IG5lYXJseSBkb3VibGUgdGhhdCByYXRlIGluIExvbmRvbiB3aGVyZSBjYXNoIGJ1eWVycyBmcm9tIGFicm9hZCBhcmUgYWxzbyBmdWVsaW5nIGRlbWFuZCBMYXRlIGxhc3QgeWVhciB0aGUgQm9FIG1hZGUgbW9ydGdhZ2UgbGVuZGluZyBpbmVsaWdpYmxlIGZvciBhIGxvYW4gc3Vic2lkeSBzY2hlbWUgUmV2YW1wZWQgYWZmb3JkYWJpbGl0eSB0ZXN0cyB3aGljaCBjYW1lIGludG8gZWZmZWN0IGluIEFwcmlsIGFyZSBhbHNvIHN0YXJ0aW5nIHRvIGRyYWcgb24gbGVuZGluZyBCdXQgdGhlIEJyaXRpc2ggQmFua2VycyBBc3NvY2lhdGlvbiBzYWlkIHRoZSBuZXcgbG9hbiBjYXAgd291bGQgbm90IGhhdmUgYSBiaWcgaW1wYWN0IG9uIGl0cyBtZW1iZXJzIGN1cnJlbnQgbGVuZGluZyB0aG91Z2ggaXQgY291bGQgbGltaXQgZnV0dXJlIGhvdXNlIHByaWNlIGdyb3d0aCBBcm91bmQgMTAgcGVyY2VudCBvZiBjdXJyZW50IGxlbmRpbmcgaXMgYXQgYSBsb2FudG9pbmNvbWUgcmF0aW8gYWJvdmUgNDUgVGhhdCByaXNlcyB0byBhcm91bmQgMjAgcGVyY2VudCBpbiBMb25kb24gYnV0IGZldyBsZW5kZXJzIGZvY3VzIGp1c3Qgb24gdGhlIGNhcGl0YWwgc28gbW9zdCBjYW4gb2Zmc2V0IGhpZ2hlcnJpc2sgbGVuZGluZyB0aGVyZSB3aXRoIGxlc3Mgcmlza3kgbGVuZGluZyBlbHNld2hlcmUgSSBkb250IHRoaW5rIGl0IHdpbGwgYml0ZSBvbiB0aGUgZWNvbm9teSBpbiB0aGUgc2hvcnQgdGVybSBidXQgaXRzIGEgYmFja3N0b3AgdGhhdHMgYmVlbiBwdXQgaW4gcGxhY2Ugc2FpZCBCQkEgY2hpZWYgZWNvbm9taXN0IFJpY2hhcmQgV29vbGhvdXNlIExJVFRMRSBJTU1FRElBVEUgRUZGRUNUIENhcm5leSBkZXNjcmliZWQgdGhlIG1lYXN1cmVzIGFzIGEgZmlyZWJyZWFrIHdoaWNoIGhlIGRpZCBub3QgZXhwZWN0IHRvIGhhdmUgYSBzaWduaWZpY2FudCBpbXBhY3QgdW50aWwgbmV4dCB5ZWFyIGFuZCB3aGljaCB3ZXJlIGRlc2lnbmVkIHRvIGFsbG93IHdlYWsgd2FnZSBncm93dGggdG8gY2F0Y2ggdXAgd2l0aCBwYXN0IGhvdXNlIHByaWNlIHJpc2VzIElmIHRoYXQgd2FnZSBncm93dGggZG9lc250IGNvbWUgdGhyb3VnaCAgdGhlIGNhcCB3b3VsZCBiaXRlIG1vcmUgcXVpY2tseSBhbmQgaXQgd291bGQgaGF2ZSBjb25zZXF1ZW5jZXMgZm9yIHByaWNlcyBIZSBzdHJlc3NlZCB0aGF0IGl0IHdhcyBkZWJ0IGxldmVscyBub3QgcHJpY2UgcmlzZXMgdGhhdCB3ZXJlIHRoZSBtYWluIHRhcmdldCBvZiB0aGUgbWVhc3VyZXMgaW1wb3NlZCBieSB0aGUgQm9FcyB3YXRjaGRvZyBvbiBmaW5hbmNpYWwgc3RhYmlsaXR5IFdlIGRvbnQgdGFyZ2V0IGhvdXNlIHByaWNlcyBUaGUgcXVlc3Rpb24gaXMgaW5kZWJ0ZWRuZXNzIEhlIHNhaWQgdGhlIG1lYXN1cmVzIHdvdWxkIG5vdCBhZmZlY3QgdGhlIGNlbnRyYWwgYmFua3MgZGVjaXNpb25zIG9uIGludGVyZXN0IHJhdGVzIHdoaWNoIG1hbnkgaW4gdGhlIG1hcmtldHMgdGhpbmsgd2lsbCBzdGFydCB0byByaXNlIGJ5IHRoZSBlbmQgb2YgdGhlIHllYXIgVGhleXJlIGxlc3MgbGlrZWx5IHRvIGhhdmUgaW1wbGljYXRpb25zIGZvciB0aGUgcGF0aCBvZiBtb25ldGFyeSBwb2xpY3kgd2hpY2ggY3VycmVudGx5IGFudGljaXBhdGVzIGxpbWl0ZWQgYW5kIGdyYWR1YWwgcmF0ZSByaXNlcyBvdmVyIHRoZSBmb3JlY2FzdCBob3Jpem9uIENhcm5leSBzYWlkIEJyaXRpc2ggZ292ZXJubWVudCBib25kIHByaWNlcyBmZWxsIGFmdGVyIHRoaXMgY29tbWVudCBhbmQgZXhwZWN0YXRpb25zIGZvciBhbiBlYXJseSByYXRlIHJpc2UgaW5jcmVhc2VkIHNsaWdodGx5IFRoZXJlIHdlcmUgc29tZSBwZW9wbGUgaW4gdGhlIG1hcmtldCBlaXRoZXIgZXhwZWN0aW5nIG1lYXN1cmVzIHRoYXQgd2VyZSBhIGxpdHRsZSB0b3VnaGVyIG9yIHdobyBoYWQgdGhvdWdodCB0aGF0IGJ5IGltcGxlbWVudGluZyB0aGUgRlBDIG1lYXN1cmVzIHRoZSBCb0UgY291bGQgYWZmb3JkIHRvIHRha2UgaXRzIHRpbWUgaW4gYXNzZXNzaW5nICByYXRlcyBzYWlkIE1hcmMgT3N0d2FsZCBzdHJhdGVnaXN0IGF0IE1vbnVtZW50IFNlY3VyaXRpZXMgT1NCT1JORSBBUFBST1ZFUyBUaGUgQmFua3MgbW92ZSBjb21lcyBsZXNzIHRoYW4gdHdvIHdlZWtzIGFmdGVyIGZpbmFuY2UgbWluaXN0ZXIgR2VvcmdlIE9zYm9ybmUgc2FpZCBoZSB3b3VsZCBnaXZlIHRoZSBCb0UgZnVsbCBsZWdhbCBwb3dlcnMgdG8gbGltaXQgbW9ydGdhZ2UgbGVuZGluZyBzb21ldGhpbmcgc2VlbiBhcyBnaXZpbmcgdGhlIGNlbnRyYWwgYmFuayBwb2xpdGljYWwgY292ZXIgdG8gaW1wb3NlIHRvdWdoZXIgbWVhc3VyZXMgVGhlIGxhdGVzdCBzdGVwcyBhcmUgdW5saWtlbHkgdG8gbGltaXQgbWFueSBwZW9wbGVzIGFiaWxpdHkgdG8gYnV5IGEgaG9tZSBpbiB0aGUgcnVudXAgdG8gYSBuYXRpb25hbCBlbGVjdGlvbiBpbiBNYXkgMjAxNSBPc2Jvcm5lIHdlbGNvbWVkIHRoZSBuZXcgcnVsZXMgYW5kIHNhaWQgbm8gbG9hbnMgdW5kZXIgdGhlIGdvdmVybm1lbnRzIEhlbHAgdG8gQnV5IHNjaGVtZSAgd2hpY2ggZ3VhcmFudGVlcyBoaWdoIGxvYW50b3ZhbHVlIG1vcnRnYWdlcyAgd291bGQgYmUgaXNzdWVkIGF0IGFuIExUSSByYXRpbyBhYm92ZSA0NSBGZXdlciB0aGFuIDUgcGVyY2VudCBvZiBIZWxwIHRvIEJ1eSBtb3J0Z2FnZXMgY3VycmVudGx5IGFyZSBpc3N1ZWQgZm9yIHJhdGlvcyBhYm92ZSA0NSBDYXJuZXkgaGFzIHN0cmVzc2VkIGluIHRoZSBwYXN0IHRoYXQgdGhlIG9ubHkgd2F5IHVsdGltYXRlbHkgdG8gaW1wcm92ZSBzdHJldGNoZWQgaG91c2luZyBhZmZvcmRhYmlsaXR5IGluIEJyaXRhaW4gaXMgdG8gYnVpbGQgbW9yZSBob21lcyAgc29tZXRoaW5nIHRoZSBvcHBvc2l0aW9uIExhYm9yIFBhcnR5IGhhcyBjcml0aWNpemVkIE9zYm9ybmVzIENvbnNlcnZhdGl2ZSBjb2FsaXRpb24gZm9yIGZhaWxpbmcgdG8gZG8gSGUgaGFzIGFsc28gc2FpZCB0aGUgQmFuayBoYXMgbm8gcG93ZXIgdG8gc3RvcCB0aGUgY2FzaCBidXllcnMgaGVscGluZyB0byBmdWVsIHNoYXJwIHByaWNlIHJpc2VzIGVzcGVjaWFsbHkgaW4gTG9uZG9uIFRoZSBGUEMgYWxzbyByZWNvbW1lbmRlZCB0aGF0IGFmZm9yZGFiaWxpdHkgdGVzdHMgaW50cm9kdWNlZCBpbiBBcHJpbCBzaG91bGQgYmUgdG91Z2hlbmVkIEJvcnJvd2VycyB3aWxsIGZyb20gVGh1cnNkYXkgaGF2ZSB0byBzaG93IHRoZXkgY2FuIHJlcGF5IHRoZSBob21lIGxvYW4gZXZlbiBpZiBpbnRlcmVzdCByYXRlcyByaXNlIDMgcGVyY2VudCBjb21wYXJlZCB3aXRoIGF0IGxlYXN0IDEgcGVyY2VudCBwcmV2aW91c2x5IENhcm5leSBzYWlkIHRoZSBGUEMgd2FzIHJlYWR5IHRvIHRha2UgZnVydGhlciBzdGVwcyBpZiBsZW5kZXJzIGFwcGVhcmVkIHRvIGJlIGJyZWFraW5nIHRoZSBzcGlyaXQgb2YgdGhlIHJ1bGVzIGFuZCBhbGxvd2luZyBjcmVkaXQgc3RhbmRhcmRzIHRvIGRldHQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AHVhcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLHNjb3JlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMC0wNi0xMVQwMDowMDowMFogVE8gMjAxMy0wNy0zMFQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDUxNjQ=</field><field name="title" class="java.lang.String">rO0ABXQAN0NoaW5hIEhlbHBzIEZpcnN0LUhvbWUgQnV5ZXJzIFdoaWxlIEN1cmJpbmcgU3BlY3VsYXRvcnM=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATbtBSiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGYxNTY4YzliNjM3ZmU4OWY=</field><field name="symbol" class="java.lang.String">rO0ABXQABExPQU4=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATbyK4SAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/xR64UeuFI</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/xcKPXCj1x</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/wKPXCj1wp</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/xR64UeuFI</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/vXCj1wo9c</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAALuA==</field><field name="id" class="java.lang.String">rO0ABXQAEDI2NzJlMzBjNmJjOWVjNzk=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGRRAAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPz0xvA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExNzgx</field><field name="title" class="java.lang.String">rO0ABXQAL0NoaW5hIENyZWRpdCBTcXVlZXplIFByb21wdHMgU3VpY2lkZXMsIFZpb2xlbmNl</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATN8nKMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGJhYzM0NzI1NmU0ZDE0ZTM=</field><field name="symbol" class="java.lang.String">rO0ABXQABExPQU4=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATOBwv8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/yj1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/yj1wo9cKP</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/wAAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/wKPXCj1wp</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/tcKPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAH0A==</field><field name="id" class="java.lang.String">rO0ABXQAEDhlMzNhZjQ5YjBjMTQ4OTc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mF7zAAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPycYZg==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM2MjI=</field><field name="title" class="java.lang.String">rO0ABXQAQkJyaXRhaW4ncyBHcm93dGggSGFsdmVkLCBPc2Jvcm5lIFR1cm5zIHRvIEJhbmsgb2YgRW5nbGFuZCBmb3IgSGVscA==</field><field name="content" class="java.lang.String">rO0ABXQTmkluIGhpcyBhbm51YWwgYnVkZ2V0IHNwZWVjaCB0byBwYXJsaWFtZW50LCBPc2Jvcm5lIHN0dWNrIHRvIGhpcyBhdXN0ZXJpdHkgZHJpdmUgaW4gdGhlIGZhY2Ugb2YgaW50ZW5zZSBjYWxscyBmb3IgYSBjaGFuZ2Ugb2YgY291cnNlLCBidXQgc2FpZCBtb25ldGFyeSBwb2xpY3kgY291bGQgZG8gbW9yZSB0byBoZWxwIEJyaXRhaW4gZ2V0IG91dCBvZiBpdHMgcnV0IG9mIG5lYXItemVybyBncm93dGguIFRoZSBjZW50cmFsIGJhbmsncyBpbmZsYXRpb24gdGFyZ2V0IHdvdWxkIHJlbWFpbiBhdCAyIHBlcmNlbnQgYSB5ZWFyLCBidXQgdGhhdCB3YXMgbm90IGVub3VnaCBvbiBpdHMgb3duLCBoZSBzYWlkLiAiQXMgd2UndmUgc2VlbiBvdmVyIHRoZSBsYXN0IGZpdmUgeWVhcnMsIGxvdyBhbmQgc3RhYmxlIGluZmxhdGlvbiBpcyBhIG5lY2Vzc2FyeSBidXQgbm90IHN1ZmZpY2llbnQgY29uZGl0aW9uIGZvciBwcm9zcGVyaXR5LCIgT3Nib3JuZSBzYWlkIHRvIGplZXJzIGZyb20gdGhlIExhYm91ciBvcHBvc2l0aW9uLCB3aGljaCB3YW50cyBtb3JlIHNwZW5kaW5nIHRvIGhlbHAgZ3Jvd3RoLiBPc2Jvcm5lIHNhaWQgdGhlIGNvdW50cnkncyBlY29ub215IHdhcyBub3cgZXhwZWN0ZWQgdG8gZ3JvdyAwLjYgcGVyY2VudCB0aGlzIHllYXIsIGhhbGYgdGhlIHJhdGUgcHJlZGljdGVkIGp1c3QgdGhyZWUgbW9udGhzIGFnbywgYnV0IGhlIHZvd2VkIHRvIHN0aWNrIHRvIHRoZSBjb3Vyc2Ugb24gYXVzdGVyaXR5LiAiSXQgaXMgdGFraW5nIGxvbmdlciB0aGFuIGFueW9uZSBob3BlZCwgYnV0IHdlIG11c3QgaG9sZCB0byB0aGUgcmlnaHQgdHJhY2siIGhlIHNhaWQuIEJyaXRhaW4ncyBtZWFnZXIgZ3Jvd3RoIHByb2plY3Rpb24gaXMgYmV0dGVyIHRoYW4gdGhhdCBmb3IgdGhlIG5laWdoYm91cmluZyBldXJvIHpvbmUsIHdoaWNoIGlzIGV4cGVjdGVkIGJ5IG1hbnkgdG8gY29udHJhY3Qgb3ZlciB0aGUgeWVhci4gQnV0IGl0IHBhbGVzIGFnYWluc3QgbW9zdCBvZiB0aGUgcmVzdCBvZiB0aGUgd29ybGQsIGluY2x1ZGluZyB0aGUgVW5pdGVkIFN0YXRlcywgd2hpY2ggaXMgc2VlbiBncm93aW5nIGNsb3NlciB0byAyIHBlcmNlbnQgb3ZlciB0aGUgeWVhci4gRGVzcGl0ZSBhIHNsdW1wIGluIG9waW5pb24gcG9sbHMsIE9zYm9ybmUgYW5kIENvbnNlcnZhdGl2ZSBQcmltZSBNaW5pc3RlciBEYXZpZCBDYW1lcm9uIGhhdmUgc3R1Y2sgdG8gdGhlaXIgcHVzaCB0byBmaXggQnJpdGFpbidzIGJ1ZGdldCBkZWZpY2l0IGFuZCByaXNpbmcgcHVibGljIGRlYnQsIGhvcGluZyBmb3IgYSByZWNvdmVyeSBiZWZvcmUgdGhleSBmaWdodCBmb3IgcmUtZWxlY3Rpb24gaW4gdHdvIHllYXJzLiBCdXQgQnJpdGFpbidzIGVjb25vbXkgbWF5IGFscmVhZHkgYmUgYmFjayBpbiBhIHJlY2Vzc2lvbiBhZ2FpbiBhZnRlciBhIGNvbnRyYWN0aW9uIGluIHRoZSBmb3VydGggcXVhcnRlciBvZiBsYXN0IHllYXIsIHdoaWxlIHJpc2luZyBpbmZsYXRpb24gaXMgaHVydGluZyBob3VzZWhvbGRzLiBUaGUgcG91bmQgaGFzIGFsc28gYmVlbiBmYWxsaW5nLiBJdCBpcyBkb3duIGFyb3VuZCA3IHBlcmNlbnQgYWdhaW5zdCB0aGUgZG9sbGFyIGFuZCA1LjUgcGVyY2VudCBhZ2FpbnN0IHRoZSBldXJvIHRoaXMgeWVhci4gQW1vbmcgdGhlIG1lYXN1cmVzIGFubm91bmNlZCBieSBPc2Jvcm5lIG9uIFdlZG5lc2RheSB3ZXJlIGN1dHMgdG8gYnVzaW5lc3MgdGF4ZXMgYW5kIGluY2VudGl2ZXMgZm9yIGhvbWUtYnV5ZXJzLiBDSEFOR0VTIEFUIEJBTksgT0YgRU5HTEFORCBPc2Jvcm5lIHBhdmVkIHRoZSB3YXkgZm9yIHBvdGVudGlhbGx5IGJpZyBjaGFuZ2VzIGF0IHRoZSBCYW5rIG9mIEVuZ2xhbmQsIGFza2luZyB0aGUgY2VudHJhbCBiYW5rJ3MgdG9wIHBvbGljeSBtYWtlcnMgdG8gcmVwb3J0IGJhY2sgdG8gaGltIGluIEF1Z3VzdCBhYm91dCB0aGUgbWVyaXRzIG9mIHNldHRpbmcgImludGVybWVkaWF0ZSB0aHJlc2hvbGRzIiBmb3IgbW9uZXRhcnkgcG9saWN5LiBTdWNoIGNoYW5nZXMgbWlnaHQgbWFrZSB0aGUgQmFuayBvZiBFbmdsYW5kIG9wZXJhdGUgaW4gYSB3YXkgc2ltaWxhciB0byB0aGUgVS5TLiBGZWRlcmFsIFJlc2VydmUgd2hpY2ggbGF0ZSBsYXN0IHllYXIgc2FpZCBpdCB3b3VsZCBrZWVwIGludGVyZXN0IHJhdGVzIG5lYXIgemVybyB1bmxlc3MgdW5lbXBsb3ltZW50IGFuZCBpbmZsYXRpb24gYnJlYWNoZWQgc3BlY2lmaWMgbGV2ZWxzLiBUaGUgcmVzcG9uc2UgaW4gQXVndXN0IGJ5IHRoZSBiYW5rIHdpbGwgYmUgb25lIG9mIHRoZSBmaXJzdCB0YXNrcyBhd2FpdGluZyBpdHMgbmV4dCBnb3Zlcm5vciwgTWFyayBDYXJuZXksIGN1cnJlbnRseSB0aGUgaGVhZCBvZiB0aGUgQmFuayBvZiBDYW5hZGEuIFVuZGVyIENhcm5leSwgdGhlIEJhbmsgb2YgQ2FuYWRhIHNwZWxsZWQgb3V0IGhvdyBsb25nIGl0IHdvdWxkIGtlZXAgaW50ZXJlc3QgcmF0ZXMgbG93LCBzb21ldGhpbmcgdGhlIEJhbmsgb2YgRW5nbGFuZCBkb2Vzbid0IGRvIG5vdyBidXQgbWF5IGRvIHVuZGVyIGl0cyBuZXcgcmVtaXQuIENhcm5leSBhbmQgdGhlIGN1cnJlbnQgZ292ZXJub3IsIE1lcnZ5biBLaW5nLCBib3RoIGFncmVlZCB0byB0aGUgbmV3IHJlbWl0LiBJdCBhbHNvIHJlY29nbml6ZWQgdGhlIHBvdGVudGlhbCBuZWVkIGZvciBmdXJ0aGVyICJ1bmNvbnZlbnRpb25hbCBtb25ldGFyeSBwb2xpY3kgaW5zdHJ1bWVudHMsIiBzdWNoIGFzIHRoZSBtYXNzaXZlIGJvbmQtYnV5aW5nIHByb2dyYW0gYWxyZWFkeSB1bmRlcnRha2VuLiBBbm90aGVyIHJldmlldyBvZiB0aGUgbWFuZGF0ZSB3aWxsIGJlIGNhcnJpZWQgb3V0IGJlZm9yZSB0aGUgZW5kIG9mIDIwMTkuIEFmdGVyIGFuIGluaXRpYWwgZmFsbCwgc3Rlcmxpbmcgcm9zZSBhZ2FpbnN0IHRoZSBkb2xsYXIgYnV0IHdhcyB3ZWFrZXIgYWdhaW5zdCB0aGUgZXVyby4gQnJpdGlzaCBnb3Zlcm5tZW50IGJvbmQgZnV0dXJlcyBwYXJlZCBsb3NzZXMuICJUaGUgY2hhbmdlIHRvIHRoZSByZW1pdCBkb2Vzbid0IGdvIHF1aXRlIGFzIGZhciBhcyBzb21lIC4uLiBoYWQgc3BlY3VsYXRlZCwgYW5kIHRoZXJlZm9yZSB0aGUgcmVhY3Rpb24gZnJvbSB0aGUgY3VycmVuY3kgYW5kIGdpbHRzIGhhcyByZWZsZWN0ZWQgdGhpcywiIHNhaWQgUGhpbGlwIFNoYXcsIGFuIGVjb25vbWlzdCB3aXRoIEludmVzdGVjLiAiSXQgZG9lcywgaG93ZXZlciwgcG90ZW50aWFsbHkgZ2l2ZSB0aGUgKEJhbmspIG1vcmUgZmxleGliaWxpdHkgdG8gZWFzZSBtb25ldGFyeSBwb2xpY3kgZnVydGhlci4iIENSQVdMSU5HIFNob3J0bHkgYmVmb3JlIE9zYm9ybmUgYmVnYW4gc3BlYWtpbmcgaW4gcGFybGlhbWVudCwgc29tZSBkZXRhaWxzIG9mIGhpcyBtYXJrZXQtc2Vuc2l0aXZlIHN0YXRlbWVudCB3ZXJlIGxlYWtlZCBvbiB0aGUgSW50ZXJuZXQsIHByb21wdGluZyBnb2FkaW5nIGJ5IHRoZSBvcHBvc2l0aW9uLiBGb3JlY2FzdHMgYnkgQnJpdGFpbidzIGJ1ZGdldCB3YXRjaGRvZyBzaG93ZWQgZ3Jvd3RoIHdhcyBleHBlY3RlZCB0byBwaWNrIHVwIHRvIDEuOCBwZXJjZW50IGluIDIwMTQsIE9zYm9ybmUgc2FpZC4gVGhhdCB3YXMgYWxzbyBsb3dlciB0aGFuIHRoZSB3YXRjaGRvZydzIERlY2VtYmVyIGZvcmVjYXN0LiBPc2Jvcm5lIHNhaWQgQnJpdGFpbiB3YXMgb24gdHJhY2sgdG8gZWxpbWluYXRlIGl0cyB1bmRlcmx5aW5nIGJ1ZGdldCBkZWZpY2l0IGJ5IHRoZSAyMDE2LTE3IGZpc2NhbCB5ZWFyLCBvbmUgeWVhciBiZWZvcmUgdGhlIGVuZCBvZiBhIHJvbGxpbmcgZml2ZS15ZWFyIGhvcml6b24gb3ZlciB3aGljaCB0aGUgZ292ZXJubWVudCBhaW1zIHRvIGJhbGFuY2UgdGhlIGJ1ZGdldC4gQnV0IGEgc2Vjb25kYXJ5IHRhcmdldCBvZiBnZXR0aW5nIGRlYnQgdG8gZmFsbCBhcyBhIHNoYXJlIG9mIEdEUCB3b3VsZCBub3QgaGFwcGVuIHVudGlsIDIwMTctMTguIFRoYXQgd2FzIGEgeWVhciBsYXRlciB0aGFuIGZvcmVjYXN0IGluIERlY2VtYmVyLCB3aGVuIGl0IHdhcyBhbHNvIHB1c2hlZCBiYWNrIGJ5IGEgeWVhci4gQnJpdGFpbidzIGZpc2NhbCB3YXRjaGRvZyBzYWlkIG9uZSBtZWFzdXJlIG9mIHRoZSBidWRnZXQgZGVmaWNpdCBpbiB0aGUgZmlzY2FsIHllYXIgZW5kaW5nIHRoaXMgbW9udGggcHV0IHRoZSBzaG9ydGZhbGwgYXQgNy40IHBlcmNlbnQgb2YgR0RQLCBhbW9uZyB0aGUgaGlnaGVzdCBpbiB0aGUgRXVyb3BlYW4gVW5pb24uIEZyYW5jZSdzIGdvdmVybm1lbnQgaGFzIGJlZW4gY3JpdGljaXplZCBmb3Igbm90IGJlaW5nIHRvdWdoIGVub3VnaCB3aXRoIGl0cyBidWRnZXQgd2hpY2ggaXMgZXhwZWN0ZWQgdG8gcG9zdCBhIGRlZmljaXQgb2YgMy43IHBlcmNlbnQgb2YgR0RQIHRoaXMgeWVhci4gV2l0aCBsaXR0bGUgc2lnbiBvZiBzdHJvbmcgZ3Jvd3RoIGFueSB0aW1lIHNvb24gdGhhdCB3b3VsZCBoZWxwIHJlc3RvcmUgaXRzIGZpc2NhbCBoZWFsdGgsIEJyaXRhaW4gY291bGQgc3VmZmVyIGZ1cnRoZXIgZG93bmdyYWRlcyBvZiBpdHMgY3JlZGl0IHJhdGluZy4gTW9vZHkncyBzdHJpcHBlZCBCcml0YWluIG9mIGl0cyBwcml6ZWQgdHJpcGxlLUEgcmF0aW5nIGxhc3QgbW9udGguIE9uIFdlZG5lc2RheSwgTW9vZHkncyBzYWlkIGl0IGV4cGVjdGVkIGl0cyBhc3Nlc3NtZW50IG9mIHRoZSBuZXcgYnVkZ2V0IHRvIHVuZGVycGluIGl0cyBzdGFibGUgb3V0bG9vayBvbiBpdHMgbG93ZXJlZCBBYTEgcmF0aW5nIGZvciBCcml0YWluLCBtZWFuaW5nIGxpdHRsZSBjaGFuY2Ugb2YgYSBmdXJ0aGVyIGN1dC4gT3Nib3JuZSBhbm5vdW5jZWQgc2V2ZXJhbCB0YXggY2hhbmdlcyBpbmNsdWRpbmcgY3V0cyBpbiBjb3Jwb3JhdGlvbiB0YXggdG8gMjAgcGVyY2VudCBpbiAyMDE1IGFuZCBvbiBlbXBsb3ltZW50IHRheGVzIGZvciBidXNpbmVzc2VzLiBJbmRpdmlkdWFscyB3aWxsIGFsc28gbm90IHBheSB0YXggb24gdGhlaXIgZmlyc3QgMTAsMDAwIHBvdW5kcyBvZiBpbmNvbWUgZnJvbSAyMDE0LCBhIHllYXIgZWFybGllciB0aGFuIHByZXZpb3VzbHkgZXhwZWN0ZWQu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT2GKwiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDIwYjYyYzM4MzkxMzVhMGQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAAlJF</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT2LUWSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBgHMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBgQFHrhR64</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBgFcKPXCj2</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBgJmZmZmZm</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBfH1wo9cKP</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAVQ8A==</field><field name="id" class="java.lang.String">rO0ABXQAEGViNjJmOGY4ZmFmNDQ1OTc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJiCAAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPyPz/Q==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDIyNjg=</field><field name="title" class="java.lang.String">rO0ABXQAPFdhbGwgU3RyZWV0J3MgSG9sZSBEZWVwZW5zOyBEb3cgUGx1bmdlcyBNb3JlIFRoYW4gMzUwIFBvaW50cw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT9f9BiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI0NTA4ZmI3M2U2MzQyYzA=</field><field name="symbol" class="java.lang.String">rO0ABXQAA1JBRA==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT9lGnSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAHmZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAH64UeuFHs</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAFmZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAG4UeuFHrh</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAG4UeuFHrh</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAxVjmA==</field><field name="id" class="java.lang.String">rO0ABXQAEGM0YWU0NDRhNjdmYWY5Y2U=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE7DAAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPxiH5g==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDIwNzg=</field><field name="title" class="java.lang.String">rO0ABXQAK0Jhbmsgb2YgSmFwYW4gQ29uc2lkZXJzIDIlIEluZmxhdGlvbiBUYXJnZXQ=</field><field name="content" class="java.lang.String">rO0ABXQVqVR1cm5pbmcgdXAgdGhlIGhlYXQsIEFiZSBtYWRlIGEgcmFyZSwgZGlyZWN0IHB1c2ggZm9yIGEgaGlnaGVyIGluZmxhdGlvbiB0YXJnZXQgd2hlbiBCT0ogR292ZXJub3IgTWFzYWFraSBTaGlyYWthd2EgdmlzaXRlZCB0aGUgaGVhZHF1YXJ0ZXJzIG9mIGhpcyBMaWJlcmFsIERlbW9jcmF0aWMgUGFydHkgKExEUCkgb24gVHVlc2RheS4gIkkgdG9sZCBoaW0gdGhhdCBkdXJpbmcgbXkgZWxlY3Rpb24gY2FtcGFpZ24sIEkgY2FsbGVkIGZvciBzZXR0aW5nIGEgcG9saWN5IGFjY29yZCB3aXRoIHRoZSBCT0ogYW5kIGEgMiBwZXJjZW50IGluZmxhdGlvbiB0YXJnZXQsIiBBYmUgdG9sZCByZXBvcnRlcnMuICJUaGUgZ292ZXJub3IganVzdCBsaXN0ZW5lZCwiIGhlIHNhaWQgd2hlbiBhc2tlZCBob3cgU2hpcmFrYXdhIHJlc3BvbmRlZC4gVGhlIExEUCBzd2VwdCB0byBwb3dlciBpbiBTdW5kYXkncyBsb3dlciBob3VzZSBlbGVjdGlvbiBhZnRlciBjYW1wYWlnbmluZyBmb3IgYmlnIGZpc2NhbCBzcGVuZGluZyB0byByZXZpdmUgdGhlIGVjb25vbXkgYW5kICJ1bmxpbWl0ZWQiIG1vbmV0YXJ5IGVhc2luZyB0byBhY2hpZXZlIGhpZ2hlciBpbmZsYXRpb24gaW4gYSBjb3VudHJ5IG1pcmVkIGluIGRlZmxhdGlvbiBmb3IgdGhlIHBhc3QgMTUgeWVhcnMuIEEgZGF5IGFmdGVyIHRoZSBlbGVjdGlvbiwgQWJlIGNhbGxlZCBvbiB0aGUgQk9KIHRvIGJvb3N0IGl0cyBtb25ldGFyeSBzdGltdWx1cyBhdCBhIHR3by1kYXkgbWVldGluZyB0aGF0IGVuZHMgb24gVGh1cnNkYXkgYW5kIHByZXNzZWQgaXQgdG8gYWRvcHQgYSAyIHBlcmNlbnQgaW5mbGF0aW9uIHRhcmdldCwgZG91YmxlIGl0cyBjdXJyZW50IHByaWNlIGdvYWwsIGFzIHNvb24gYXMgbmV4dCBtb250aC4gVW5kZXIgcHJlc3N1cmUsIHRoZSBjZW50cmFsIGJhbmsgd2lsbCBsaWtlbHkgZWFzZSBwb2xpY3kgdGhpcyB3ZWVrIGFtaWQgbG9vbWluZyByaXNrcyB0byBKYXBhbidzIGVjb25vbWljIG91dGxvb2ssIHNvdXJjZXMgZmFtaWxpYXIgd2l0aCBpdHMgdGhpbmtpbmcgaGF2ZSB0b2xkIFJldXRlcnMsIGFuZCBtYXkgYWxzbyBzdGFydCBkZWJhdGluZyBob3cgdG8gbWVldCBBYmUncyBjYWxscyB0byBzZXQgYSBoaWdoZXIgcHJpY2UgdGFyZ2V0LiBBYmUgd2lsbCBmb3JtIGEgbmV3IGNhYmluZXQgb24gRGVjLiAyNiBhbmQgaXMgc2VlbiBjaG9vc2luZyBUYXJvIEFzbyBhcyBmaW5hbmNlIG1pbmlzdGVyLCBKYXBhbmVzZSBtZWRpYSBzYWlkLCBhIGZvcm1lciBwcmltZSBtaW5pc3RlciBleHBlY3RlZCB0byB0b2UgdGhlIHBhcnR5J3MgbGluZSBjYWxsaW5nIGZvciBhZ2dyZXNzaXZlIGVhc2luZyBhbmQgcHVibGljIHdvcmtzIHNwbHVyZ2UuIFRoYXQgbWVhbnMgdGhlIGNlbnRyYWwgYmFuayB3aWxsIGJlIHVuZGVyIHByZXNzdXJlIHRvIHJlc3BvbmQgYWdhaW4gYXQgaXRzIHBvbGljeS1zZXR0aW5nIG1lZXRpbmcgb24gSmFuLiAyMS0yMiwgd2hlbiBpdCBpcyBzZXQgdG8gY3V0IGl0cyBlY29ub21pYyBmb3JlY2FzdCBmb3IgdGhlIHllYXIgZW5kaW5nIGluIE1hcmNoIDIwMTMgZHVlIHRvIHRoZSB3aWRlbmluZyBwYWluIGZyb20gc2xvd2luZyBnbG9iYWwgZ3Jvd3RoLiAiQWJlJ3MgY29tbWVudHMgaGF2ZSByZWFsbHkgcmFpc2VkIGV4cGVjdGF0aW9ucyBmb3IgZWFzaW5nIHRoaXMgd2VlaywiIHNhaWQgTm9yaW8gTWl5YWdhd2EsIHNlbmlvciBlY29ub21pc3QgYXQgTWl6dWhvIFNlY3VyaXRpZXMgUmVzZWFyY2ggJiBDb25zdWx0aW5nIGluIFRva3lvLiAiSSB0aGluayB0aGUgQk9KIHdpbGwgZGVsaXZlciB3aXRoIGluY3JlYXNlZCBwdXJjaGFzZXMgb2YgZ292ZXJubWVudCBkZWJ0LiBOZXh0IHllYXIgY291bGQgYWxzbyBiZSBhIGJpZyB5ZWFyIGZvciBtb25ldGFyeSBwb2xpY3kgZWFzaW5nLCBiZWNhdXNlIG9mIHRoZSBpbmZsYXRpb24gdGFyZ2V0IGRlYmF0ZSBhbmQgYSBjaGFuZ2UgaW4gbGVhZGVyc2hpcCBhdCB0aGUgQk9KLiIgRm91cnRlZW4gb2YgMTkgZWNvbm9taXN0cyBwb2xsZWQgYnkgUmV1dGVycyBsYXN0IHdlZWsgc2FpZCB0aGV5IGV4cGVjdGVkIHRoZSBCT0ogdG8gZWFzZSB0aGlzIHdlZWssIG1vc3QgbGlrZWx5IGJ5IGluY3JlYXNpbmcgaXRzIDkxIHRyaWxsaW9uIHllbiAoJDEgdHJpbGxpb24pIGFzc2V0IGJ1eWluZyBhbmQgbGVuZGluZyBwcm9ncmFtIGJ5IHVwIHRvIDEwIHRyaWxsaW9uIHllbi4gVGhlIEJPSiBjdXJyZW50bHkgaGFzIGEgMSBwZXJjZW50IGluZmxhdGlvbiB0YXJnZXQgYnV0IGhhcyBzYWlkIHRoaXMgaXMgYSBnb2FsIGZvciB0aGUgdGltZSBiZWluZywgYW5kIHRoYXQgaXQgY29uc2lkZXJzIGEgcmFuZ2Ugb2YgemVybyB0byAyIHBlcmNlbnQgYXMgbG9uZy10ZXJtIGRlc2lyYWJsZSBwcmljZSBncm93dGguIFRoZSBjZW50cmFsIGJhbmsgbWF5IHRodXMgb3B0IHRvIGNsYXJpZnkgdGhhdCBhZnRlciB0aGUgMSBwZXJjZW50IGluZmxhdGlvbiBpcyBtZXQsIGl0IHdpbGwgYWltIGZvciAyIHBlcmNlbnQgaW5mbGF0aW9uIGFzIGEgbG9uZy10ZXJtIHBvbGljeSBnb2FsLCB0byBtZWV0IGRlbWFuZHMgZnJvbSBBYmUgZm9yIG1vcmUgYWdncmVzc2l2ZSBtb25ldGFyeSBzdGltdWx1cy4gVGhlIEJPSiBhbmQgdGhlIGdvdmVybm1lbnQgbWF5IGlzc3VlIGEgam9pbnQgc3RhdGVtZW50LCBzaW1pbGFyIHRvIG9uZSBjcmFmdGVkIGluIE9jdG9iZXIgYmV0d2VlbiB0aGUgY2VudHJhbCBiYW5rIGFuZCB0aGUgb3V0Z29pbmcgZ292ZXJubWVudCBsZWQgYnkgdGhlIERlbW9jcmF0aWMgUGFydHksIHBsZWRnaW5nIHRvIHRha2UgbWVhc3VyZXMgdG8gYWltIGZvciAyIHBlcmNlbnQgaW5mbGF0aW9uIGluIHRoZSBsb25nIHJ1biwgdGhlIHNvdXJjZXMgc2FpZC4gU0VFSyBDTE9TRVIgVElFUyBXSVRIIFUuUy4gU2hpcmFrYXdhIHRvbGQgcmVwb3J0ZXJzIGhlIGRpZCBub3QgZGlzY3VzcyBtb25ldGFyeSBwb2xpY3kgd2l0aCBBYmUsIGFuZCB0aGF0IGhlIG9ubHkgdmlzaXRlZCB0byBwYXkgcmVzcGVjdC4gSXQgaXMgcmFyZSBmb3IgYSBwcmVtaWVyIG9yIGEgd291bGQtYmUgcHJpbWUgbWluaXN0ZXIgdG8gcmV2ZWFsIHdoYXQgd2FzIGRpc2N1c3NlZCBhdCBhIGNsb3NlZC1kb29yIG1lZXRpbmcgd2l0aCBhIGNlbnRyYWwgYmFuayBnb3Zlcm5vci4gVGhlIEJPSiBoYXMgZWFzZWQgbW9uZXRhcnkgcG9saWN5IGZvdXIgdGltZXMgc28gZmFyIHRoaXMgeWVhciB2aWEgYW4gaW5jcmVhc2UgaW4gaXRzIGFzc2V0LWJ1eWluZyBhbmQgbGVuZGluZyBwcm9ncmFtLiBCdXQgcG9saXRpY2lhbnMgbGlrZSBBYmUgaGF2ZSBjcml0aWNpemVkIHRoZSBjZW50cmFsIGJhbmsgZm9yIG5vdCBkb2luZyBlbm91Z2ggdG8gZW5kIDE1IHllYXJzIG9mIGdyaW5kaW5nIGRlZmxhdGlvbiBpbiBKYXBhbi4gU29tZSBjZW50cmFsIGJhbmtlcnMgYXJlIGtlZW4gdG8gYm9vc3Qgc3RpbXVsdXMgYWdhaW4sIHdpdGggdGhlIHdvcmxkJ3MgdGhpcmQtbGFyZ2VzdCBlY29ub215IGFscmVhZHkgaW4gbWlsZCByZWNlc3Npb24gYW5kIHVubGlrZWx5IHRvIHJlYm91bmQgc3Ryb25nbHkgZWFybHkgbmV4dCB5ZWFyIGR1ZSB0byB3ZWFrIGV4cG9ydHMgdG8gQ2hpbmEgYW5kIHRoZSBwb3RlbnRpYWwgaW1wYWN0IGZyb20gdGhlIFUuUy4gImZpc2NhbCBjbGlmZi4iIEFueSBCT0ogYWN0aW9uIG9uIFRodXJzZGF5IHdpbGwgbGlrZWx5IHRha2UgdGhlIGZvcm0gb2YgYSBmdXJ0aGVyIGluY3JlYXNlIGluIGl0cyBhc3NldC1idXlpbmcgcHJvZ3JhbS4gQnV0IGNlbnRyYWwgYmFua2VycywgZmVlbGluZyB0aGUgaGVhdCwgaGF2ZSBiZWVuIHByaXZhdGVseSBwb25kZXJpbmcgb3B0aW9ucyBmb3IgbmV4dCB5ZWFyIGluY2x1ZGluZyBzZXR0aW5nIGEgaGlnaGVyIGluZmxhdGlvbiB0YXJnZXQgYW5kIGJ1eWluZyBnb3Zlcm5tZW50IGJvbmRzIG1vcmUgYWdncmVzc2l2ZWx5LiBUaHJvdWdoIHN1Y2ggc3RlcHMsIHRoZXkgaG9wZSB0byBzdGF2ZSBvZmYgdGhyZWF0cyBieSBBYmUgb2YgcmV2aXNpbmcgdGhlIEJPSiBsYXcgZ3VhcmFudGVlaW5nIGl0cyBpbmRlcGVuZGVuY2UuIEJ1dCB0aGVyZSBpcyBzdHJvbmcgcmVzaXN0YW5jZSB3aXRoaW4gdGhlIEJPSiBvbiBzZXR0aW5nIGEgMiBwZXJjZW50IGluZmxhdGlvbiB0YXJnZXQgaW4gYSBjb3VudHJ5IHRoYXQgaGFzIGJhcmVseSBzZWVuIHByaWNlIGdyb3d0aCBleGNlZWQgMSBwZXJjZW50IGluIHRoZSBwYXN0IHR3byBkZWNhZGVzLiBKYXBhbidzIGNvcmUgY29uc3VtZXIgaW5mbGF0aW9uIHdhcyBmbGF0IGluIE9jdG9iZXIgZnJvbSBhIHllYXIgZWFybGllciBhZnRlciBmaXZlIHN0cmFpZ2h0IG1vbnRocyBvZiBkZWNsaW5lcy4gQk9KIG9mZmljaWFscyBjbG9zZSB0byB0aGUgY29uc2VydmF0aXZlIFNoaXJha2F3YSBhcmUgd2FyeSBvZiBzZXR0aW5nIGEgaGlnaGVyIHByaWNlIHRhcmdldCB3aXRob3V0IGhhdmluZyBlZmZlY3RpdmUgbWVhbnMgb2YgYWNoaWV2aW5nIGl0LiBUaGV5IGFsc28gZnJldCB0aGF0IHB1bXBpbmcgdG9vIG11Y2ggbW9uZXkgaW50byB0aGUgZWNvbm9teSBjb3VsZCBicmV3IHNlZWRzIG9mIGltYmFsYW5jZXMsIHN1Y2ggYXMgc2hhcnAgcmlzZXMgaW4gYXNzZXQgcHJpY2VzLCBpbiB0aGUgbG9uZy10ZXJtLiBCdXQgQWJlLCB3aG9zZSBMRFAgYW5kIGl0cyBzbWFsbCBhbGx5IE5ldyBLb21laXRvIGNhcHR1cmVkIGEgdHdvLXRoaXJkcyBtYWpvcml0eSBpbiBTdW5kYXkncyBsYW5kc2xpZGUgdmljdG9yeSwgaGFzIHN3aWZ0bHkgbW92ZWQgdG8gcHJlc3MgaGlzIGFnZW5kYS4gT24gVHVlc2RheSwgQWJlIHRvbGQgcmVwb3J0ZXJzIHRoYXQgaGUgaGFkIGFncmVlZCBpbiBhIHRlbGVwaG9uZSBjYWxsIHdpdGggVS5TLiBQcmVzaWRlbnQgQmFyYWNrIE9iYW1hIHRoYXQgdGhlIHR3byB3b3VsZCB0cnkgdG8gbWVldCBuZXh0IG1vbnRoLCBwYXJ0IG9mIGEgcHVzaCB0byBzdHJlbmd0aGVuIHRpZXMgd2l0aCBXYXNoaW5ndG9uIGFuZCBnaXZlIEphcGFuIGEgZ3JlYXRlciBnbG9iYWwgc2VjdXJpdHkgcm9sZS4gVGhlIGNob2ljZSBvZiBBc28sIDcyLCBhcyBmaW5hbmNlIG1pbmlzdGVyIHN1Z2dlc3RzIEFiZSBpcyBsb29raW5nIHRvIGV4cGVyaWVuY2VkIExEUCBsYXdtYWtlcnMgdG8gZmlsbCBrZXkgcG9zdHMgdG8gYXZvaWQgY3JpdGljaXNtIHRoYXQgaGlzIG1pbmlzdGVycyBsYWNrIGV4cGVyaWVuY2UuIFdoaWxlIEFzbydzIHZpZXdzIG9uIG1vbmV0YXJ5IHBvbGljeSBhcmUgbGl0dGxlIGtub3duLCBhcyBwcmltZSBtaW5pc3RlciBoZSBsYXVuY2hlZCBtYXNzaXZlIHN0aW11bHVzIHBhY2thZ2VzIHRvIGNvbWJhdCB0aGUgZ2xvYmFsIGZpbmFuY2lhbCBjcmlzaXMgaW4gMjAwOC4gVGhlIG5ldyBmaW5hbmNlIG1pbmlzdGVyLCBhbG9uZyB3aXRoIHRoZSBlY29ub21pY3MgbWluaXN0ZXIsIGNhbiBhdHRlbmQgb3Igc2VuZCBzdWJvcmRpbmF0ZXMgdG8gQk9KIHBvbGljeS1zZXR0aW5nIG1lZXRpbmdzLiBUaGV5IGNhbm5vdCB2b3RlIG9uIHBvbGljeSBkZWNpc2lvbnMgYnV0IGNhbiB2b2ljZSBvcGluaW9ucyBhbmQgcmVxdWVzdCBhIGRlbGF5IGluIGEgdm90ZS4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATusmOcAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDIyOGFkM2IzMzk4N2E2NDU=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0NOUw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATuxv0MAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA+sKPXCj1x</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA+1HrhR64U</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA+K4UeuFHs</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA+euFHrhR7</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7rhR64Ueu</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAGXCA==</field><field name="id" class="java.lang.String">rO0ABXQAEGI0NWJkMzcxMTdlYTlhMjM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mK/QAAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPxh7+A==</field></document></documents><date>2015-05-07T07:42:30-0500</date></cacheEntry>
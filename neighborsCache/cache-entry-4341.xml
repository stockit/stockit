<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hEZXJlayBGcmllc2VuIHRob3VnaHQgaGUgd291bGQgYmUgZm9sbG93aW5nIGluIGhpcyBmYXRoZXJzIGZvb3RzdGVwcyB3aGVuIGhlIGJlY2FtZSB0aGUgdGhpcmQgZ2VuZXJhdGlvbiBvZiBoaXMgZmFtaWx5IHRvIHdvcmsgYXQgSEogSGVpbnogQ29zIHRvbWF0byBwcm9jZXNzaW5nIHBsYW50IGluIGhpcyBob21ldG93biBvZiBMZWFtaW5ndG9uIE9udGFyaW8gVGhhdCBwbGFuIGVuZGVkIHNpeCBtb250aHMgaW50byBoaXMgam9iIHdoZW4gV2FycmVuIEJ1ZmZldHRzIEJlcmtzaGlyZSBIYXRoYXdheSBJbmMgYW5kIDNHIENhcGl0YWwgSW5jIHRoZSBrZXRjaHVwIG1ha2VycyBuZXcgb3duZXJzIGFubm91bmNlZCBpbiBOb3ZlbWJlciB0aGUgMTA1eWVhcm9sZCBwbGFudCB3b3VsZCBjbG9zZSBZb3UgY291bGQganVzdCBmZWVsIHlvdXJzZWxmIHNpbmtpbmcgRnJpZXNlbiBzYWlkIG9mIHRoZSBtb21lbnQgaGUgd2FzIHRvbGQgaGVkIGxvc2UgaGlzIGpvYiBJdHMgbGl0ZXJhbGx5IHRoZSBjZW50ZXIgb2YgdG93biBzYWlkIHRoZSAyNHllYXJvbGQgd2hvIGhlbHBlZCBwYWNrIDEwMDAgY2FucyBvZiB0b21hdG8ganVpY2UgYW4gaG91ciBFdmVyeW9uZSBlaXRoZXIgd29ya3MgdGhlcmUgb3Iga25vd3Mgc29tZWJvZHkgdGhhdCB3b3JrcyB0aGVyZSBMb2NhbCBpbnZlc3RvcnMgaGF2ZSBzdGVwcGVkIGluIHdpdGggYSBwbGFuIHRvIGtlZXAgcGFydCBvZiB0aGUgcGxhbnQgcnVubmluZyB3aGljaCBjb3VsZCBzYXZlIDI1MCBvZiA3MDAgam9icyBpbiB0aGUgY2l0eSBrbm93biBhcyBDYW5hZGFzIHRvbWF0byBjYXBpdGFsIEZyaWVzZW4gc2F5cyBoZSBkb2VzbnQgdGhpbmsgaGVsbCBiZSBhbW9uZyB0aGUgbHVja3kgb25lcyBJbnN0ZWFkIGhlbGwgam9pbiBtb3JlIHRoYW4gMzYwMDAgQ2FuYWRpYW5zIHdobyBsb3N0IG1hbnVmYWN0dXJpbmcgam9icyBzaW5jZSB0aGUgc3RhcnQgb2YgMjAxMyBhcyBjb21wYW5pZXMgZnJvbSBIZWlueiB0byBLZWxsb2dnIENvIHRvIE5vdmFydGlzIEFHIGFubm91bmNlIHBsYW5zIHRvIHNodXQgcGxhbnRzIFRoZSBqb2IgY3V0cyBoYXZlIGNvbWUgZGVzcGl0ZSBhIHBpY2t1cCBpbiBnbG9iYWwgZ3Jvd3RoIGFuZCBhIDEzIHBlcmNlbnQgZHJvcCBpbiB0aGUgQ2FuYWRpYW4gZG9sbGFyIHNpbmNlIFNlcHRlbWJlciAyMDEyIHJhaXNpbmcgY29uY2VybiB0aGF0IENhbmFkaWFuIGZhY3RvcmllcyB3aWxsIHN0cnVnZ2xlIHRvIGNvbXBldGUgd2l0aCBwbGFudHMgaW4gQ2hpbmEgTWV4aWNvIGFuZCBldmVuIHRoZSBVUyB3aGVyZSB0aGUgbXVjaHRvdXRlZCBtYW51ZmFjdHVyaW5nIHJlbmFpc3NhbmNlIGhhcyBiZWVuIGZ1ZWxlZCBieSBkZWNsaW5lcyBpbiByZWFsIHdhZ2VzIGFuZCB0d290aWVyIHBheSBzY2FsZXMgdGhhdCBtZWFuIGxlc3MgbW9uZXkgZm9yIG5ldyBlbXBsb3llZXMgVGhlIHRvbWF0b2VzIGFyZSBnb2luZyB0byBnbyB0byB0aGUgcGxhbnRzIHRoYXQgaGF2ZSB0aGUgbG93IHByb2R1Y3Rpb24gY29zdHMgQnVmZmV0dCBzYWlkIGluIE5vdmVtYmVyIGF0IGFuIGV2ZW50IGluIERldHJvaXQgSXRzIHJlYWxseSBhIHF1ZXN0aW9uIG9mIGhhdmluZyBhbiB1bnByb2ZpdGFibGUgcGxhbnQgYW5kIGNvbmNlbnRyYXRpbmcgcHJvZHVjdGlvbiBpbiBhIG1vcmUgcHJvZml0YWJsZSBwbGFudCBDb25zb2xpZGF0aW5nIE9wZXJhdGlvbnMgUGl0dHNidXJnaGJhc2VkIEhlaW56IGNsb3NlZCB0aGUgTGVhbWluZ3RvbiBwbGFudCBhbG9uZyB3aXRoIHR3byBvdGhlciBmYWNpbGl0aWVzIGluIHRoZSBVUyB0byBjb25zb2xpZGF0ZSBvcGVyYXRpb25zIGFuZCBnZXQgcmlkIG9mIGV4Y2VzcyBjYXBhY2l0eSBzcG9rZXNtYW4gTWljaGFlbCBNdWxsZW4gc2FpZCBpbiBhIEZlYiAxOCBlbWFpbCBUaGUgY2xvc3VyZXMgYXJlIG5lZWRlZCB0byBrZWVwIHRoZSBjb21wYW55IGVmZmljaWVudCBhbmQgY29tcGV0aXRpdmUgaGUgc2FpZCBTdWNoIG1vdmVzIGFyZW50IHF1aWNrbHkgcmV2ZXJzZWQgc2FpZCBBdmVyeSBTaGVuZmVsZCBjaGllZiBlY29ub21pc3Qgd2l0aCBDYW5hZGlhbiBJbXBlcmlhbCBCYW5rIG9mIENvbW1lcmNlIGluIFRvcm9udG8gYnkgcGhvbmUgV2Ugd29udCBicmluZyBiYWNrIHRoZSBkZWFkIHVudGlsIG5ldyBwbGFudCBkZWNpc2lvbnMgYXJlIG1hZGUgb3ZlciB0aGUgY29taW5nIGRlY2FkZSBBZnRlciByZWJvdW5kaW5nIGZyb20gMjAwOSB0aHJvdWdoIDIwMTEgQ2FuYWRpYW4gZmFjdG9yaWVzIGhhdmUgc2VlbiBzaGlwbWVudHMgc3RhbGwgZmFsbGluZyAxMyBwZXJjZW50IHNpbmNlIHRoZSBzdGFydCBvZiAyMDEyIGV2ZW4gYXMgdGhlIGdsb2JhbCBlY29ub215IGhhcyBnYXRoZXJlZCBtb21lbnR1bSBUaGUgRmVkZXJhbCBSZXNlcnZlcyBpbmRleCBvZiBVUyBtYW51ZmFjdHVyaW5nIHByb2R1Y3Rpb24gaXMgdXAgNDUgcGVyY2VudCBvdmVyIHRoYXQgcGVyaW9kIEZhY3RvcnkgRW1wbG95bWVudCBDYW5hZGlhbiBmYWN0b3J5IGVtcGxveW1lbnQgaGFzIGZhbGxlbiBieSBhYm91dCAyNCBwZXJjZW50IG92ZXIgdGhlIHBhc3QgMTAgeWVhcnMgYW5kIGlzIGxpdHRsZSBjaGFuZ2VkIGFmdGVyIGhpdHRpbmcgYSB0cm91Z2ggb2YgMTc0IG1pbGxpb24gaW4gQXVndXN0IDIwMDkgVGhlIHN1cmdlIGluIHRoZSBjb3VudHJ5cyBjdXJyZW5jeSB0byBhIHBlYWsgb2YgbW9yZSB0aGFuIDEwOCBpbiAyMDA3IGVyb2RlZCBjb21wZXRpdGl2ZW5lc3MgaGVscGluZyB0byBkcml2ZSB1cCB1bml0IGxhYm9yIGNvc3RzIGluIFVTZG9sbGFyIHRlcm1zIDk0IHBlcmNlbnQgc2luY2UgdGhlIGVuZCBxdWFydGVyIG9mIDIwMDIgY29tcGFyZWQgd2l0aCBhIDEyIHBlcmNlbnQgcmlzZSBpbiBVUyB1bml0IGxhYm9yIGNvc3RzIE1hbnVmYWN0dXJpbmcgaGFzIGJlZW4gYW1vbmcgdGhlIGJpZ2dlc3QgZHJhZ3Mgb24gQ2FuYWRhcyBncm93dGggc2luY2UgdGhlIG1pZGRsZSBvZiAyMDEyIGFuZCB3YXMgdGhlIG9ubHkgbWFqb3IgaW5kdXN0cnkgdG8gc2VlIG91dHB1dCBkZWNsaW5lIGxhc3QgeWVhciBIYWQgbWFudWZhY3R1cmluZyBub3QgY29udHJhY3RlZCBpbiAyMDEzIENhbmFkYXMgZWNvbm9teSB3b3VsZCBoYXZlIGdyb3duIGJ5IGFib3V0IDI0IHBlcmNlbnQgbGFzdCB5ZWFyIHJhdGhlciB0aGFuIHRoZSAyIHBlcmNlbnQgcmVwb3J0ZWQgYnkgU3RhdGlzdGljcyBDYW5hZGEgRmViIDI4IFRoZXJlIGFyZSBlY29ub21pYyBsaW5rcyB0aGF0IHN1Z2dlc3QgdGhlIHJlY2VudCBkcm9wIGluIHRoZSBDYW5hZGlhbiBkb2xsYXIgc2hvdWxkIHVsdGltYXRlbHkgaGVscCBtYW51ZmFjdHVyZXJzIE92ZXIgdGhlIHBhc3QgMzAgeWVhcnMgdGhlIGxldmVsIG9mIHRoZSBjdXJyZW5jeSBhbmQgZmFjdG9yeSBlbXBsb3ltZW50IHRocmVlIHllYXJzIGluIHRoZSBmdXR1cmUgaGF2ZSBiZWVuIGNsb3NlbHkgY29ycmVsYXRlZCBEYXRhIGNvbXBpbGVkIGJ5IEJsb29tYmVyZyBzaG93IGEgY29ycmVsYXRpb24gb2YgMDkxIHdoZXJlIDEgcmVmbGVjdHMgcGVyZmVjdCBwcmVkaWN0YWJpbGl0eSBhbmQgemVybyBtZWFucyBubyByZWxhdGlvbnNoaXAgTm8gR3VhcmFudGVlIFRoZXJlcyBubyBndWFyYW50ZWUgdGhhdCByZWxhdGlvbnNoaXAgd2lsbCBob2xkIGluIHRoZSBmdXR1cmUgVGhlIGdsb2JhbCBtYW51ZmFjdHVyaW5nIGluZHVzdHJ5IGlzIG1vcmUgY29tcGV0aXRpdmUgdGhhbiBpbiB0aGUgMTk5MHMgd2hlbiBDYW5hZGlhbiBmYWN0b3JpZXMgYmVuZWZpdGVkIGZyb20gYSB3ZWFrZW5pbmcgZG9sbGFyIGFuZCB0aGUgbmV3IE5vcnRoIEFtZXJpY2FuIEZyZWUgVHJhZGUgQWdyZWVtZW50IHdoaWNoIGhlbHBlZCBwdXNoIG1hbnVmYWN0dXJpbmdzIHNoYXJlIG9mIHRoZSBlY29ub215IHRvIG5lYXIgdGhlIGhpZ2hlc3QgbGV2ZWxzIHNpbmNlIHRoZSAxOTUwcyBJbiB0aGUgcGFzdCAxNSB5ZWFycyBDYW5hZGFzIHNoYXJlIG9mIHdvcmxkIGV4cG9ydHMgaGFzIGZhbGxlbiB0byBhYm91dCAyNSBwZXJjZW50IGZyb20gYWJvdXQgNDUgcGVyY2VudCBCYW5rIG9mIENhbmFkYSBTZW5pb3IgRGVwdXR5IEdvdmVybm9yIFRpZmYgTWFja2xlbSBzYWlkIGluIGFuIE9jdG9iZXIgc3BlZWNoIHRoZSBzZWNvbmRsYXJnZXN0IGRlY2xpbmUgYW1vbmcgR3JvdXAgb2YgMjAgY291bnRyaWVzIE9uZSBvZiB0aGUgbW9zdCB0ZWxsdGFsZSBzaWducyBvZiB3aGV0aGVyIGl0cyBhIGNvbXBldGl0aXZlIGp1cmlzZGljdGlvbiBpcyBsb29raW5nIGF0IHRoZSBzY29yZWJvYXJkIFJlaWQgQmlnbGFuZCBDaHJ5c2xlciBHcm91cCBMTENzIGhlYWQgb2YgVVMgc2FsZXMgc2FpZCBpbiBhIEZlYiAxMiBpbnRlcnZpZXcgQ2FuYWRhIHJlY2VpdmVkIGxlc3MgdGhhbiA1IHBlcmNlbnQgb2YgdGhlIDQyIGJpbGxpb24gaW52ZXN0ZWQgaW4gdGhlIE5vcnRoIEFtZXJpY2FuIGF1dG9tb3RpdmUgaW5kdXN0cnkgaW4gdGhlIGxhc3QgZml2ZSB5ZWFycyBCaWdsYW5kIHNhaWQgSUhTIEF1dG9tb3RpdmUgZXN0aW1hdGVzIHRoYXQgTWV4aWNvIHdpbGwgdG9wIHRoZSBjb3VudHJ5IGFzIHRoZSBiaWdnZXN0IGV4cG9ydGVyIG9mIGNhcnMgdG8gdGhlIFVTIGJ5IDIwMTUgTW9yZSBDb21wZXRpdGl2ZSBTb21lIG9mIHRoZXNlIG90aGVyIGp1cmlzZGljdGlvbnMgTWV4aWNvIGluIHBhcnRpY3VsYXIgYW5kIHRoZSBVUyBoYXZlIGJlY29tZSBzaWduaWZpY2FudGx5IG1vcmUgY29tcGV0aXRpdmUgaGUgc2FpZCBHb3Zlcm5tZW50cyBtZWFud2hpbGUgYXJlIHJhY2luZyB3aXRoIG5ldyBzdWJzaWRpZXMgdG8gaGVscCBtYW51ZmFjdHVyZXJzIENhbmFkYXMgZmVkZXJhbCBnb3Zlcm5tZW50IHNhaWQgbGFzdCBtb250aCBpdCB3b3VsZCBwcm92aWRlIGEgQzI1MCBtaWxsaW9uIGxvYW4gdG8gaGVscCBNb250cmVhbGJhc2VkIENBRSBJbmMgZGV2ZWxvcCBuZXcgZmxpZ2h0c2ltdWxhdG9yIHRlY2hub2xvZ3kgRmluYW5jZSBNaW5pc3RlciBKaW0gRmxhaGVydHkgc2V0IGFzaWRlIGFuIGFkZGl0aW9uYWwgQzUwMCBtaWxsaW9uIGluIHRoZSBmZXQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMC0wNi0xMVQwMDowMDowMFogVE8gMjAxMy0wNy0zMVQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTI2MjE3</field><field name="title" class="java.lang.String">rO0ABXQAN1N1cmdpbmcgQXV0byBTYWxlcyBIZWxwIFVuaW9uIFBhY2lmaWMsIE5vcmZvbGsgU291dGhlcm4=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATc1HjCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDM4ZWM2ZTE4N2NiM2Q4NTA=</field><field name="symbol" class="java.lang.String">rO0ABXQABUJBTVhG</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATc6RIyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBViuFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBViuFHrhR7</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBViuFHrhR7</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBViuFHrhR7</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBU6PXCj1wp</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAZA==</field><field name="id" class="java.lang.String">rO0ABXQAEDkxYjY0YzkwNjg0OWJmMDg=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE9AAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDEzNjc=</field><field name="title" class="java.lang.String">rO0ABXQAMEFwcGFsYWNoaWEgQmFua3Mgb24gTmF0dXJhbCBHYXMsIENoZW1pY2FsIFBsYW50cw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATYFRvyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDRmZTBjYWE3MGJiYWQ2ZTk=</field><field name="symbol" class="java.lang.String">rO0ABXQABlI2Qy5ERQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATYKbViAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7MzMzMzMz</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7gAAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7MKPXCj1x</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7eFHrhR64</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3GZmZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAACbeA==</field><field name="id" class="java.lang.String">rO0ABXQAEGY3YTdjZTIxMTUyMmUzZjU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGPgAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTI0MTE2</field><field name="title" class="java.lang.String">rO0ABXQAO0ltbWlncmFudHMgV2l0aCBSaWdodCBTa2lsbHMgUmlkZSBVLlMuIEhpcmluZyBXYXZlOiBFY29ub215</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATzxCYsAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDE1MmEyM2VhZDZhZWQ4OWM=</field><field name="symbol" class="java.lang.String">rO0ABXQABEJPUk4=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATz2L+cAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/7MzMzMzMz</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/9cKPXCj1x</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/7MzMzMzMz</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/8AAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/8AAAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAbvA==</field><field name="id" class="java.lang.String">rO0ABXQAEDViMWI4YzcxN2JkOGQ0Y2E=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFUnAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQ4MTQ=</field><field name="title" class="java.lang.String">rO0ABXQAK05ldy1DYXIgU2hvcnRhZ2VzIExvb20gQW1pZCBKYXBhbiBTaHV0ZG93bnM=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAS71rtiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGQ4ZTU0YWM0M2FmNzAyNTU=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0NBUg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAS761TSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyKPXCj1wp</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyXrhR64Uf</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAx49cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyQo9cKPXD</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyQo9cKPXD</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAABRktA==</field><field name="id" class="java.lang.String">rO0ABXQAEGY5YjhmYTU1NGVmYWJiM2I=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEK3AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIwNDA4</field><field name="title" class="java.lang.String">rO0ABXQAQEFwcGxlIENFT+KAmXMgUGxlZGdlIHRvIE1ha2UgTWFjcyBpbiB0aGUgVVMgU2VlbiBBZGRpbmcgMjAwIEpvYnM=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATuDZgcAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGRiZTU2ZWY3MGQzMzBlNjY=</field><field name="symbol" class="java.lang.String">rO0ABXQAA1BBTQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATuIjGMAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAJHrhR64Uf</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAJHrhR64Uf</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAIj1wo9cKP</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAI9cKPXCj2</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAI9cKPXCj2</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAZyA==</field><field name="id" class="java.lang.String">rO0ABXQAEDNlNDkwZmY5MTRjMGIxZmQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJ+4AAAA==</field></document></documents><date>2015-05-07T06:47:26-0500</date></cacheEntry>
<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0DhxIZSBzYXcgZmV3IG9wdGlvbnMgdG8gZGVlc2NhbGF0ZSB0ZW5zaW9ucyBiZXR3ZWVuIFVrcmFpbmUgaXRzIFdlc3Rlcm4gc3VwcG9ydGVycyBhbmQgUnVzc2lhIHdoaWNoIGhhcyBiZWVuIGFjY3VzZWQgb2YgYmFja2luZyBhbiBpbnN1cmdlbmN5IGxlZCBieSBldGhuaWMgUnVzc2lhbiBzZXBhcmF0aXN0cyBJbiBhbiBpbnRlcnZpZXcgYXQgUmV1dGVycyBOZXcgWW9yayBoZWFkcXVhcnRlcnMgaW4gd2hpY2ggaGUgYWxzbyBzcG9rZSBhYm91dCBoaXMgY29udHJvdmVyc2lhbCBkZXBhcnR1cmUgZnJvbSBQaW1jbyBlYXJsaWVyIHRoaXMgeWVhciBFbEVyaWFuIHNhaWQganVzdCBvbmUgb3IgYXQgbW9zdCB0d28gbW9yZSByb3VuZHMgb2Ygc2FuY3Rpb25zIGFuZCBjb3VudGVyIHNhbmN0aW9ucyBiZXR3ZWVuIFJ1c3NpYSBhbmQgdGhlIFdlc3Qgd291bGQgbGlrZWx5IHB1c2ggRXVyb3BlIGludG8gcmVjZXNzaW9uIFRoYXRzIGVzcGVjaWFsbHkgdHJ1ZSBpZiBSdXNzaWEgY3V0cyBlbmVyZ3kgc3VwcGxpZXMgZHVyaW5nIHRoZSBjb21pbmcgd2ludGVyIGhlYXRpbmcgc2Vhc29uCgpFZGl0b3JzIE5vdGUgU2VuaW9ycyBTY29vcCBVcCBVbmNsYWltZWQgMjA1MDAgQ2hlY2tzIFNlZSBpZiBZb3UgcXVhbGlmeSAgSSB0aGluayBtYXJrZXRzIGFyZSB1bmRlcmVzdGltYXRpbmcgVWtyYWluZSBFbEVyaWFuIHNhaWQgSXQgaXMgdmVyeSBoYXJkIHRvIGZpbmQgYSBzb2x1dGlvbiB0aGF0IHJlY29uY2lsZXMgdGhlIHRocmVlIHBhcnRpZXMgaW52b2x2ZWQgIFVrcmFpbmUgdGhlIFdlc3QgYW5kIFJ1c3NpYSBFbEVyaWFuIHNhaWQgbWFya2V0cyBhbHNvIHdlcmUgcGxhY2luZyBlbm9ybW91cyBmYWl0aCBpbiB0aGUgd29ybGRzIGNlbnRyYWwgYmFua3Mgc3VjaCBhcyB0aGUgVVMgRmVkZXJhbCBSZXNlcnZlIGFuZCB0aGUgRXVyb3BlYW4gQ2VudHJhbCBCYW5rIFRocm91Z2ggYSBzZXJpZXMgb2YgZXhwZXJpbWVudGFsIHBvbGljeSBhY3Rpb25zIHNpbmNlIHRoZSAyMDA4IGZpbmFuY2lhbCBjcmlzaXMgdGhlIHdvcmxkcyBsYXJnZXN0IGNlbnRyYWwgYmFua3MgaGF2ZSBnb3R0ZW4gZGVlcGx5IGludG8gdGhlIGJ1c2luZXNzIG9mIGRpdm9yY2luZyBhc3NldCB2YWx1YXRpb25zIGZyb20gZnVuZGFtZW50YWxzIFRoZSBzcGFjZSBiZXR3ZWVuIHdoYXQgRWxFcmlhbiBzZWVzIGFzIGxvZnR5IHZhbHVhdGlvbnMgYW5kIG1vcmUgZWFydGhseSBmdW5kYW1lbnRhbHMgaXMgYW4gYWlyIHBvY2tldCBhdCByaXNrIG9mIHJhcGlkIGNvbGxhcHNlIGlmIG1hcmtldHMgYXJlIGNvbmZyb250ZWQgd2l0aCBhIGphcnJpbmcgY2F0YWx5c3Qgc3VjaCBhcyBVa3JhaW5lIEkgd29ycnkgdGhhdCB0aGUgbWFya2V0cGxhY2UgaXMgcGF5aW5nIHZlcnkgbGl0dGxlIGF0dGVudGlvbiB0byBnZW9wb2xpdGljYWwgaXNzdWVzIGJ1dCB0aGV5dmUgZG9uZSBzbyBmb3IgZ29vZCByZWFzb25zIHNvIGZhciBoZSBzYWlkIFRvIGRhdGUgaW52ZXN0b3JzIGhhdmUgbGFyZ2VseSBzdWNjZWVkZWQgaW4gbmF2aWdhdGluZyBudW1lcm91cyBicmllZiBib3V0cyBvZiBtYXJrZXQgY2hvcHBpbmVzcyBpbiB0aGUgZmFjZSBvZiBnZW9wb2xpdGljYWwgc2hvY2sgQW4gZW5kZW1pYyBoYXphcmQgYXJpc2luZyBmcm9tIHRoYXQgaXMgdGhhdCBpbnZlc3RvcnMgd2FudCB1bmFtYmlndW91cyBldmlkZW5jZSB0aGF0IHRoZSB0dXJuIGhhcyBvY2N1cnJlZCBiZWZvcmUgdGhleSBvcHQgZm9yIGEgbW9yZSBkZWZlbnNpdmUgYWxsb2NhdGlvbiBFbEVyaWFuIHNhaWQgVGhlIHByb2JsZW0gd2l0aCB0aGF0IGlzIHRoYXQgb25jZSB5b3UgZ2V0IHRoYXQgZXZlcnlvbmUgd2FudHMgdG8gZ2V0IG91dCBBbmQgYXQgdGhhdCBwb2ludCB5b3UgZ2V0IHRoZSBhaXIgcG9ja2V0IEEgcmVzcGVjdGVkIGludmVzdG9yIHdobyBvbmNlIHJhbiBIYXJ2YXJkIFVuaXZlcnNpdHlzIGVuZG93bWVudCBFbEVyaWFuIG1hZGUgd2F2ZXMgaW4gSmFudWFyeSB3aGVuIGhlIHJlc2lnbmVkIGZyb20gUGltY28gYSB1bml0IG9mIEdlcm1hbiBpbnN1cmVyIEFsbGlhbnogYW5kIGFuIGludmVzdG1lbnQgcG93ZXJob3VzZSB3aXRoIG5lYXJseSAyIHRyaWxsaW9uIG9mIGFzc2V0cyBUaGVyZSBoZSBoYWQgYmVlbiBjaGllZiBleGVjdXRpdmUgYW5kIGhhZCBzaGFyZWQgdGhlIHJvbGUgb2YgY2hpZWYgaW52ZXN0bWVudCBvZmZpY2VyIHdpdGggYm9uZCBtYXJrZXQgZ3VydSBCaWxsIEdyb3NzIFRoZSBTdGFuZGFyZCAgUG9vcnMgNTAwIEluZGV4IGFuZCB0aGUgRG93IEpvbmVzIGluZHVzdHJpYWwgYXZlcmFnZSBoYXZlIGJvdGggaGl0IHJlY29yZHMgaW4gcmVjZW50IHdlZWtzIGdhaW5zIGhlIGNvbnRlbmRzIGFyZSBlbWJsZW1hdGljIG9mIHRoZSBkaXNjb25uZWN0IGJldHdlZW4gdmFsdWF0aW9uIGFuZCBmdW5kYW1lbnRhbHMgVGhlaXIgcGVyZm9ybWFuY2UgaXMgbGFyZ2VseSBmdWVsZWQgYnkgdGhlIEZlZHMgYWN0aW9ucyB3aGljaCBoYXZlIG1hZGUgb3RoZXIgYXNzZXRzIHN1Y2ggYXMgYm9uZHMgZXZlbiBwcmljaWVyIGJ5IGNvbXBhcmlzb24gYXMgd2VsbCBhcyBmaW5hbmNpYWwgbWFuZXV2ZXJpbmcgYnkgY29ycG9yYXRpb25zIHdoaWNoIGFyZSBzcGVuZGluZyBjYXNoIGJ1eWluZyB0aGVpciBvd24gc2hhcmVzIG9yIG9uIG1lcmdlcnMgYW5kIGFjcXVpc2l0aW9ucyBoZSBzYWlkIFN0b2NrcyBoZSBzYWlkIGFyZSBzaWduYWxpbmcgV2UgYXJlIGV4cGVuc2l2ZSBidXQgd2UgYXJlIGNoZWFwZXIgdGhhbiBvdGhlciB0aGluZ3MgdGhhdCBhcmUgYSBsb3QgbW9yZSBleHBlbnNpdmUgRWxFcmlhbiBzYWlkIEFsaWJhYmEgR3JvdXBzIHJlY29yZCAyOTcgYmlsbGlvbiBpbml0aWFsIHB1YmxpYyBvZmZlcmluZyBsYXN0IHdlZWsgaXMgb25lIHJlZmxlY3Rpb24gdGhhdCBtYXJrZXRzIGNvbnRpbnVlIHRvIGhhdmUgdHJlbWVuZG91cyByaXNrIGFwcGV0aXRlIGJlY2F1c2UgaW52ZXN0b3JzIGJlbGlldmUgdGhlIEZlZCBoYXMgdGhlaXIgYmFjayBUaGF0IHNhaWQgaGUgYmVsaWV2ZXMgdGhlIEZlZCBpcyBub3cgb3V0IG9mIHN5bmMgd2l0aCBpdHMgcGVlcnMgdGhlIEVDQiBpbiBwYXJ0aWN1bGFyIGFuZCB3aWxsIGJlZ2luIHRvIHJhaXNlIGludGVyZXN0IHJhdGVzIHRvd2FyZCB0aGUgZW5kIG9mIHRoZSBzZWNvbmQgcXVhcnRlciBvZiAyMDE1IG9yIHNvb25lciBwZXJoYXBzIFN0aWxsIHRoZSBGZWQgd2lsbCBub3QgYmUgaW5jbGluZWQgdG8gcmFpc2UgcmF0ZXMgcmFwaWRseSBhZnRlciB0aGF0IGluaXRpYWwgbW92ZSBJIHRoaW5rIHRoZSBGZWQgd2lsbCBtb3ZlIHNsb3dlciBhbmQgbm90IGFzIGhpZ2ggYXMgd2V2ZSBiZWVuIGhpc3RvcmljYWxseSB1c2VkIHRvIGhlIHNhaWQgQW5kIEVsRXJpYW4gc2FpZCBpZiBFdXJvcGUgZ29lcyBpbiB0byByZWNlc3Npb24gZXZlbiB0aGUgRmVkcyBwcm9qZWN0ZWQgbGlmdCBvZmYgZnJvbSBuZWFyIHplcm8gaW50ZXJlc3QgcmF0ZXMgd2hlcmUgaXQgaGFzIGhlbGQgaXRzIHBvbGljeSByYXRlIHNpbmNlIHRoZSBlbmQgb2YgMjAwOCB3b3VsZCBsaWtlbHkgYmUgb2ZmIHRoZSB0YWJsZQoKRWRpdG9ycyBOb3RlIFNlbmlvcnMgU2Nvb3AgVXAgVW5jbGFpbWVkIDIwNTAwIENoZWNrcyBTZWUgaWYgWW91IHF1YWxpZnl0AARyb3dzdXEAfgAKAAAAAXQAATV0AAVzdGFydHVxAH4ACgAAAAF0AAEwdAACZmx1cQB+AAoAAAABdABvYXJ0aWNsZUlkLHRpdGxlLGNvbnRlbnQsZGF0ZSxzdG9ja0hpc3RvcnlJZCxzeW1ib2wsaGlzdG9yeURhdGUsb3BlbixoaWdoLGxvdyxjbG9zZSxhZGpDbG9zZSx2b2x1bWUsaWQsX3ZlcnNpb25fdAACZnF1cQB+AAoAAAABdAA6aGlzdG9yeURhdGU6WzIwMTAtMDYtMTBUMDA6MDA6MDBaIFRPIDIwMTMtMDctMzBUNTk6NTk6NTlaXXgAcA==</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTExMDY3</field><field name="title" class="java.lang.String">rO0ABXQALEludmVzdG9ycyBGYWNlIERpbGVtbWE6IEJlIGEgQnVsbCBvciBhIEJlYXI/</field><field name="content" class="java.lang.String">rO0ABXQWQlRoZSBTJlAgNTAwIGlzIHVwIDEyIHBlcmNlbnQgc28gZm9yIHRoaXMgeWVhci4gVGhyb3VnaCBKdWx5LCBpdCBoYWQgaXRzIGJlc3QgZmlyc3Qgc2V2ZW4gbW9udGhzIHNpbmNlIDIwMDMgYW5kIGl0cyBzZWNvbmQtYmVzdCBzZXZlbi1tb250aCBydW4gc2luY2UgMTk5OC4gVGhhdCBzb3VuZHMgbGlrZSBhIGJ1bGwgbWFya2V0LiBCdXQgdGhlcmUgaXMgY2xlYXJseSBhIGRpc2Nvbm5lY3QgYmV0d2VlbiB0aGUgd2F5IG1hcmtldHMgaGF2ZSBwZXJmb3JtZWQgYW5kIHRoZSBoaWdoIGxldmVsIG9mIGNhdXRpb24gYW1vbmcgbWFueSBpbnZlc3RvcnMuIFRoYXQgaXMgbWFpbmx5IGR1ZSB0byB0aGUgcGVyY2VwdGlvbiB0aGF0IHRoaW5ncyBoYXZlIHRoZSBwb3RlbnRpYWwgdG8gZ28gaG9ycmlibHkgd3JvbmcgLSBpbmNyZWRpYmx5IGZhc3QuIFRoZSBkYW5nZXIgZm9yIGludmVzdG9ycyBpcyB0aGF0IHRoZXkgZm9jdXMgdG9vIG11Y2ggb24gdGhlIHBvdGVudGlhbCByaXNrcywgc3VjaCBhcyB0aGUgYnJlYWstdXAgb2YgdGhlIGV1cm96b25lLCBhbmQgZW5kIHVwIGdldHRpbmcgbGVmdCBvbiB0aGUgc2lkZWxpbmVzIHdoZW4gbWFya2V0cyBtb3ZlIGhpZ2hlciBhcyB0aGV5IGhhdmUgZG9uZSBzaW5jZSB0aGUgc3RhcnQgb2YgSnVuZSwgc2FpZCBEb3VnIENvdGUsIGNoaWVmIG1hcmtldCBzdHJhdGVnaXN0IGF0IElORyBJbnZlc3RtZW50IE1hbmFnZW1lbnQsIGluIE5ldyBZb3JrLiAiV2UgYXJlIGluIGEgYnVsbCBtYXJrZXQsIiBoZSBzYWlkLiAiVGhlIG1pc3Rha2UgaW52ZXN0b3JzIGhhdmUgbWFkZSBpcyB0b28gbXVjaCBhdHRlbnRpb24gb24gZ2xvYmFsIHJpc2ssIGFuZCBub3QgZW5vdWdoIGF0dGVudGlvbiBvbiBmdW5kYW1lbnRhbHMgdGhhdCBhcmUgdmVyeSByZXNpbGllbnQuIiBDb3RlIGJlbGlldmVzIHRoYXQgcmVjb3JkIGhpZ2ggYWdncmVnYXRlIGVhcm5pbmdzIGZvciBTJlAgNTAwIGNvbXBhbmllcyB0aGlzIHllYXIgYW5kIHNpZ25zIG9mIGltcHJvdmVtZW50IGluIHRoZSBsYWJvciBtYXJrZXQgbWVhbiBpbnZlc3RvcnMgc2hvdWxkIGJlIHRha2luZyBvbiBtb3JlIHJpc2sgcmF0aGVyIHRoYW4gZnJldHRpbmcgYWJvdXQgdGhlIGRhbmdlcnMgc3RlbW1pbmcgZnJvbSBFdXJvcGUncyBkZWJ0IGNyaXNpcy4gwqAgTk8gRUFTWSBDSE9JQ0VTIEJ1dCBmb3IgdGhlIG1vcmUgZXF1aXZvY2FsIHNvdWxzLCB0aGUgbWFya2V0IGlzIHByZXNlbnRpbmcgYSBkaWZmaWN1bHQgZGlsZW1tYSwgYW5kIHN0cm9uZyBjb252aWN0aW9ucyBlaXRoZXIgd2F5IGFyZSBlbHVzaXZlLiBEYXZpZCBKb3ksIGNoaWVmIG1hcmtldCBzdHJhdGVnaXN0IGF0IEFtZXJpcHJpc2UgRmluYW5jaWFsIGluIEJvc3Rvbiwgc2F5cyBpdCdzIGFuIHVuY29tZm9ydGFibGUgdGltZSBmb3IgbWFueSBpbnZlc3RvcnMsIHdobyBhcmUgY2F1Z2h0IGJldHdlZW4gbWlzc2luZyBhIHJhbGx5IGFuZCBnZXR0aW5nIGJsaW5kc2lkZWQgYnkgc29tZSBuYXN0eSBldmVudCB0aGF0IHNlbmRzIG1hcmtldHMgaW50byBhIHRhaWxzcGluLiAiSXQncyBhIGRpbGVtbWEgdGhhdCBpcyB1bmNvbWZvcnRhYmxlIHRvIHdhdGNoIGFuZCB0byBmdW5jdGlvbiBpbiwiIHNhaWQgSm95LCB3aG8gaGVscHMgb3ZlcnNlZSAkNTcxIGJpbGxpb24gaW4gYXNzZXRzLiAiSXQncyBvbmUgb2YgdGhvc2UgbWFya2V0cyB3aGVyZSB5b3UncmUgcnVubmluZyBhIGJpZyByaXNrIGJlaW5nIG91dC4iIEpveSBzYXlzIHRoZSByYWxseSBpcyBiZWluZyBkcml2ZW4gYnkgdGhlIGhvcGUgb2YgbW9yZSAiZWFzeSBtb25leSIgcG9saWNpZXMgZnJvbSBjZW50cmFsIGJhbmtzIGluIHRoZSBVbml0ZWQgU3RhdGVzLCBFdXJvcGUgYW5kIENoaW5hLiBIZSBoYXMgaGFkIGRvdWJ0cyBhYm91dCB0aGUgc3RyZW5ndGggb2YgdGhlIGVjb25vbXkgZm9yIG1hbnkgbW9udGhzLiBBdCB0aGUgc2FtZSB0aW1lLCBoZSBoYXMgYmVlbiB3b3JyaWVkIGJ5IHRoZSByZWNlbnQgc3BhdGUgb2YgY2F1dGlvdXMgb3V0bG9va3MgZnJvbSBjb3Jwb3JhdGUgbWFuYWdlcnMuIEJ1dCBoZSBhbHNvIGtub3dzIHdoYXQgaW52ZXN0b3JzIGlnbm9yZSBhdCB0aGVpciBwZXJpbDogIllvdSBjYW4ndCBmaWdodCB0aGUgRmVkLiIgIkkgZG9uJ3QgbGlrZSB0aGUgZnVuZGFtZW50YWxzLCBJIGRvbid0IGxpa2Ugd2hhdCBJJ20gc2VlaW5nIGVjb25vbWljYWxseSwgSSBkb24ndCBsaWtlIHdoYXQgSSdtIHNlZWluZyBpbiB0ZXJtcyBvZiBlYXJuaW5ncyBmb3JlY2FzdHMgZ29pbmcgZm9yd2FyZCwgYnV0IEkgcmVjb2duaXplIHRoYXQgY2VudHJhbCBiYW5rcyBjYW4gdHJ1bXAgYWxsIG9mIHRob3NlIHRoaW5ncywiIEpveSBzYWlkLiAiWW91IG1heSBiZSByaWdodCBvbiB0aGUgZnVuZGFtZW50YWxzLCBidXQgd3Jvbmcgb24gdGhlIHByaWNlIGFjdGlvbiBvZiB0aGUgbWFya2V0LiIgQm90aCB0aGUgRXVyb3BlYW4gQ2VudHJhbCBCYW5rIGFuZCB0aGUgRmVkZXJhbCBSZXNlcnZlIGFyZSBkdWUgdG8gbWVldCBkdXJpbmcgdGhlIGZpcnN0IGhhbGYgb2YgU2VwdGVtYmVyLiBJbnZlc3RvcnMgYXJlIGhvcGluZyB0aGUgRUNCIHdpbGwgYnV5IGJvbmRzIG9mIHRyb3VibGVkIEV1cm9wZWFuIG5hdGlvbnMgaW4gYSBiaWQgdG8gZWFzZSB0aGUgZGVidCBjcmlzaXMuIMKgIENBVVRJT04gQ1VUUyBCT1RIIFdBWVMgQnV0IEpveSBpcyBhbHNvIGNhdXRpb3VzIGFib3V0IHdoYXQgbWFueSBhcmUgZGVzY3JpYmluZyBhcyBlYXJseSBzaWducyBvZiBzdGFiaWxpemF0aW9uIGluIHRoZSBVLlMuIGVjb25vbXkgYWZ0ZXIgYSBzb2Z0IHBhdGNoIGVhcmxpZXIgaW4gdGhlIHNwcmluZyBhbmQgc3VtbWVyLiBUaGUgSnVseSBub25mYXJtIHBheXJvbGxzIHJlcG9ydCwgd2hpY2ggc2hvd2VkIFUuUy4gZW1wbG95ZXJzIGhhZCBkb25lIHRoZSBtb3N0IGhpcmluZyBpbiBmaXZlIG1vbnRocywgaXMgbm90IGVub3VnaCB0byBjb252aW5jZSBpbnZlc3RvcnMgbGlrZSBKb3kgd2hvIHdhbnQgdG8gc2VlIG1vcmUgY29uZmlybWF0aW9uIGJlZm9yZSB1bndpbmRpbmcgdGhlaXIgZGVmZW5zaXZlIHN0YW5jZSBhbmQgZ2V0dGluZyBtb3JlIGFnZ3Jlc3NpdmUuIFRoYXQgY2F1dGlvdXMgdmlldyB0aGF0IGxlZCBoaW0gdG8gY3V0IGhpcyBib25kLWVxdWl0eSBhbGxvY2F0aW9uIGFuZCBsZWFuIG1vcmUgdG93YXJkIGRlZmVuc2l2ZSBhcmVhcyBvZiB0aGUgc3RvY2sgbWFya2V0LCBzdWNoIGFzIGNvbnN1bWVyIHN0YXBsZXMsIGhlYWx0aGNhcmUgYW5kIHV0aWxpdGllcywgaGVscHMgZXhwbGFpbiBhbiBvZGRpdHkgb2YgdGhlIG1hcmtldCdzIHJhbGx5IHNpbmNlIEp1bmUuIE11Y2ggb2YgdGhlIG1vbmV5IGhlYWRpbmcgaW50byBVLlMuIGVxdWl0eSBtYXJrZXRzIG92ZXIgdGhlIGxhc3QgdHdvIG1vbnRocyBoYXMgYmVlbiBoZWFkaW5nIGludG8gZGVmZW5zaXZlIHNlY3RvcnMsIHNvbWUgb2YgaXQgaW4gYSBmbGlnaHQgdG8gc2FmZXR5IGZyb20gb3ZlcnNlYXMgbWFya2V0cywgZXNwZWNpYWxseSBFdXJvcGUuIE9mIHR3byBjbGFzc2ljYWxseSBkZWZlbnNpdmUgc2VjdG9ycyAtIHV0aWxpdGllcyBhbmQgdGVsZWNvbXMgLSB0aGUgdXRpbGl0aWVzIHNlY3RvciBpcyB0cmFkaW5nIGF0IGEgMjQgcGVyY2VudCBwcmVtaXVtIHRvIHRoZSBTJlAgNTAwLCBjb21wYXJlZCB3aXRoIGFuIGF2ZXJhZ2UgNSBwZXJjZW50IGRpc2NvdW50IG92ZXIgdGhlIGxhc3QgMTAgeWVhcnMsIHdoaWxlIHRoZSB0ZWxlY29tIHNlY3RvciBpcyB0cmFkaW5nIGF0IGEgNTAgcGVyY2VudCBwcmVtaXVtIGNvbXBhcmVkIHdpdGggdGhlIHVzdWFsIDUgcGVyY2VudCwgYWNjb3JkaW5nIHRvIGRhdGEgY2l0ZWQgYnkgVUJTIFdlYWx0aCBNYW5hZ2VtZW50LiBGb3IgSmVyZW15IFppcmluLCBVQlMgV2VhbHRoIE1hbmFnZW1lbnQncyBOZXcgWW9yay1iYXNlZCBoZWFkIG9mIFUuUy4gZXF1aXRpZXMgYW5kIGNoaWVmIFUuUy4gZXF1aXR5IHN0cmF0ZWdpc3QsIHRoYXQgaXMgYm90aCBhIHJlZCBmbGFnIGhpZ2hsaWdodGluZyB0aGUgbWFya2V0J3MgbWlzZ2l2aW5ncyBhbmQgYSBwb3RlbnRpYWwgb3Bwb3J0dW5pdHksIHNob3VsZCB0aGF0IGRpZmZlcmVudGlhbCBzdGFydCB0byBuYXJyb3cuICJXZSBoYXZlIGEgYml0IG9mIGEgcHJvLWN5Y2xpY2FsIHRpbHQgaW4gb3VyIHNlY3RvciBzdHJhdGVneSB3aXRoaW4gVS5TLiBlcXVpdHkgbWFya2V0cywgbGFyZ2VseSBiZWNhdXNlIHRoZSBtYXJrZXQgc2VlbXMgdG8gYmUgcG9zaXRpb25lZCBzbyBkZWZlbnNpdmVseSwiIFppcmluIHNhaWQuICJXZSBoYXZlIHNlZW4gdGhpcyBmbG9vZCBvZiBmbG93cyBnb2luZyBpbnRvIGRlZmVuc2l2ZSBzYWZlIGhhdmVucyB3aXRoIGhpZ2ggeWllbGQsIGFuZCB3ZSBqdXN0IHRoaW5rIHRoZXkgYXJlIHZlcnkgaGlnaGx5IHByaWNlZC4gIkN5Y2xpY2FsIHNlY3RvcnMgc2VlbSB0byBiZSBwcmljaW5nIGluIHNvbWV0aGluZyBvZiBhIG1vcmUgZGlyZSBlY29ub21pYyBzY2VuYXJpbyB0aGFuIHdlIGVudmlzaW9uLCIgaGUgc2FpZC4gIkN5Y2xpY2FsIHNlY3RvcnMgYXJlIHRyYWRpbmcgYXQgYSBuZWFybHkgdHdvLWRlY2FkZSB2YWx1YXRpb24gbG93IHJlbGF0aXZlIHRvIGRlZmVuc2l2ZSBzZWN0b3JzLiIgT2YgY291cnNlLCB0aGUgbWFya2V0IGNvdWxkIGFsc28gYmUgc2V0dGluZyBpdHNlbGYgdXAgZm9yIGEgZmFsbC4gQmV0dGluZyBvbiB3aGF0IGNlbnRyYWwgYmFua2VycyB3aWxsIGFuZCB3b24ndCBkbyBpcyBhIHJpc2t5IGdhbWUuICJJbnZlc3RvcnMgd2hvIGhhdmUgYmVlbiBob3BlZnVsIHRoYXQgcG9saWN5bWFrZXJzIHdpbGwgdGFrZSBzdHJvbmdlciBhY3Rpb24gdGhyb3VnaCB0aGlzIGVudGlyZSBzb3ZlcmVpZ24gZGVidCBjcmlzaXMgaGF2ZSBiZWVuIGNvbnNpc3RlbnRseSBkaXNhcHBvaW50ZWQsIiBaaXJpbiBzYWlkLiAiVGhlIG5vdGlvbiB0aGF0IHNvbWVvbmUgd2l0aCB2ZXJ5IGRlZXAgcG9ja2V0cyB3aWxsIGNvbWUgYWxvbmcgYW5kIHBheSB0aGUgYmlsbHMgd2l0aG91dCBjb25kaXRpb25hbGl0eSBpcyBsaWtlbHkgdG8gYmUgYSBmb29saXNoIG9uZS4iIFRoYXQgaXMgd2h5IG1hbnkgYXJlIHN0aWxsIGVycmluZyBvbiB0aGUgc2lkZSBvZiBjYXV0aW9uLiBIYXJyaXMgUHJpdmF0ZSBCYW5rIGluIENoaWNhZ28gaGFzIGJlZW4gdXNpbmcgdGhlIFUuUy4gc3RvY2sgbWFya2V0J3MgcmFsbHkgdG8gY3V0IGl0cyByZW1haW5pbmcgZXhwb3N1cmUgdG8gc3RvY2sgbWFya2V0cyBpbiBkZXZlbG9wZWQgRXVyb3BlYW4gZWNvbm9taWVzLiBUaGV5IGhhdmUgcmVwYXRyaWF0ZWQgdGhlIG1vbmV5IHRvIHRoZSBVbml0ZWQgU3RhdGVkIHdoZXJlIHRoZXkgaGF2ZSBpbnZlc3RlZCBpbiBVLlMuIGVxdWl0eSBwb3NpdGlvbnMsIGNhdXRpb3VzbHkgaGVkZ2VkIHdpdGggb3B0aW9ucy4gVGhleSBub3cgaGF2ZSBoaWdoZXItdGhhbi1ub3JtYWwgZXhwb3N1cmUgdG8gYm90aCBVLlMuIGFuZCBlbWVyZ2luZyBtYXJrZXQgZXF1aXRpZXMuICJXZSBhcmUgY2VydGFpbmx5IHdlbGwgb3ZlcmV4cG9zZWQgdG8gZG9sbGFyIGFzc2V0cywiIHNhaWQgSGFycmlzIFByaXZhdGUgQmFuaydzIGNoaWVmIGludmVzdG1lbnQgb2ZmaWNlciBKYWNrIEFibGluLiAiV2UgYXJlIHNhbmd1aW5lIG9uIGVxdWl0aWVzIGluIGdlbmVyYWwsIGJ1dCBzdGlsbCB2ZXJ5IGNvbmNlcm5lZCBhYm91dCB0aGUgb3V0Y29tZXMgaW4gRXVyb3BlLiI=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATkZM/iAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGJlY2JmZmY3OWYxM2U1YzM=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lTRg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATkeWlSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA264UeuFHs</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3D1wo9cKP</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA23rhR64Uf</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA25mZmZmZm</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzK4UeuFHs</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAKDwA==</field><field name="id" class="java.lang.String">rO0ABXQAEDVmZmFjYTc0NTk5YzEyZDA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGHDAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDkzMjM=</field><field name="title" class="java.lang.String">rO0ABXQANldhbGwgU3RyZWV0IExvb2tzIGZvciBNb3JlIFN0aW11bHVzOyBCZXJuYW5rZSB0byBTcGVhaw==</field><field name="content" class="java.lang.String">rO0ABXQUtkZlZGVyYWwgUmVzZXJ2ZSBDaGFpcm1hbiBCZW4gQmVybmFua2Ugd2lsbCBiZSBiYWNrIG9uIENhcGl0b2wgSGlsbCBvbiBUaHVyc2RheSB0byB0ZXN0aWZ5IGJlZm9yZSBhIGNvbmdyZXNzaW9uYWwgY29tbWl0dGVlIGFib3V0IHRoZSBzdGF0ZSBvZiB0aGUgVS5TLiBlY29ub215LiBIZSdzIG5vdCBnb2luZyB0byBnZXQgYW4gZWFzeSByaWRlLiBUaGUgYmx1ZS1jaGlwIERvdyBhdmVyYWdlIG9mIHN0b2NrcyBpcyBub3cgbmVnYXRpdmUgZm9yIHRoZSB5ZWFyLiBFbXBsb3ltZW50IGFwcGVhcnMgdG8gYmUgc2xvd2luZyB0byBhIHNuYWlsJ3MgcGFjZSBhbmQgRXVyb3BlIHJlbWFpbnMgbWlyZWQgaW4gY3Jpc2lzLiAiVGhpcyBwdXRzIHRoZSBGZWQgZmlybWx5IGluIHBsYXkgYW5kIHRoZXkgd2lsbCBsaWtlbHkgZmVlbCBjb21wZWxsZWQgdG8gcmVzcG9uZCwiIHNhaWQgVG9tIFBvcmNlbGxpLCBjaGllZiBVLlMuIGVjb25vbWlzdCBhdCBSQkMgQ2FwaXRhbCBNYXJrZXRzIGluIE5ldyBZb3JrLCBhZnRlciBkYXRhIG9uIEZyaWRheSBzaG93ZWQgVS5TLiBqb2IgZ3Jvd3RoIGluIE1heSB3YXMgdGhlIHdlYWtlc3QgaW4gYSB5ZWFyLiAiVGhlIG1pc3NpbmcgaW5ncmVkaWVudCBwcmV2ZW50aW5nIHRoZSBGZWQgZnJvbSBhY3Rpb24gaGFkIGJlZW4gdGhlIGVxdWl0eSBtYXJrZXQsIGJ1dCBub3cgd2UgYXJlIHNlZWluZyBpdCBzb2Z0ZW5pbmcsIiBoZSBzYWlkLiAiRXF1aXRpZXMgYXJlIGZhbGxpbmcgYW5kIHRoYXQgd2FzIHRoZSBsYXN0IGh1cmRsZSBmb3IgRmVkIHBvbGljeSBhY3Rpb24gYmVjYXVzZSBhbGwgdGhlIG90aGVyIGNyaXRlcmlhIGhhdmUgYmVlbiBtZXQuIiBGb3IgdGhlIHdlZWssIHRoZSBEb3cgSm9uZXMgaW5kdXN0cmlhbCBhdmVyYWdlIGZlbGwgMi43IHBlcmNlbnQsIHRoZSBTdGFuZGFyZCAmIFBvb3IncyA1MDAgaW5kZXggd2FzIGRvd24gMyBwZXJjZW50IGFuZCB0aGUgTmFzZGFxIGNvbXBvc2l0ZSBpbmRleCBmZWxsIDMuMiBwZXJjZW50LiBUaGUgRmVkJ3MgbmV4dCBwb2xpY3kgbWVldGluZyBvY2N1cnMgb24gSnVuZSAxOS0yMC4gQSBSZXV0ZXJzIHBvbGwgb2YgMTUgZGVhbGVycyBnaXZlcyBhIDM1IHBlcmNlbnQgY2hhbmNlIG9mIHRoZSBGZWQgZXh0ZW5kaW5nIGl0cyBzdGltdWxhdGl2ZSBvcGVyYXRpbmcgdHdpc3QgYXQgdGhhdCBtZWV0aW5nLiBUaGUgcG9sbCBzaG93ZWQgdGhhdCBkZWFsZXJzIGV4cGVjdGluZyBmdXJ0aGVyIHF1YW50aXRhdGl2ZSBlYXNpbmcsIG9yIFFFMywgcm9zZSB0byA1MCBwZXJjZW50IGZyb20gMzMgcGVyY2VudCBpbiBNYXkuIFN0b2NrIG1hcmtldCByYWxsaWVzIGluIGVhY2ggb2YgdGhlIHBhc3QgdGhyZWUgeWVhcnMgd2VyZSBmdWVsZWQgYnkgY29tYmluYXRpb25zIG9mIG1hc3NpdmUgY2VudHJhbCBiYW5rIGFuZCBnb3Zlcm5tZW50IHN0aW11bHVzIHNwZW5kaW5nLiBUaGF0IG1heWJlIHRoZSBvbmx5IGhvcGUgZm9yIGVxdWl0aWVzIHRoaXMgeWVhciwgdG9vLiBUaGUgd29ybGQncyBlY29ub21pYyBvdXRsb29rIGRhcmtlbmVkIG9uIEZyaWRheSBhcyByZXBvcnRzIHNob3dlZCBhcyB3ZWxsIGFzIHNsb3dpbmcgVS5TLiBlbXBsb3ltZW50IGdyb3d0aCwgQ2hpbmVzZSBmYWN0b3J5IG91dHB1dCBiYXJlbHkgZ3JldyBhbmQgRXVyb3BlYW4gbWFudWZhY3R1cmluZyBmZWxsIGRlZXBlciBpbnRvIG1hbGFpc2UuICJJdCBjZXJ0YWlubHkgc3VnZ2VzdHMgdGhhdCBwZXJoYXBzIHRoZSBzb2Z0bmVzcyBpbiBFdXJvcGUgaXMgZWl0aGVyIGluZmx1ZW5jaW5nIHRoZSBVLlMuIG9yIHRoYXQgdGhlIFUuUy4gcmVjb3ZlcnkgbWF5IG5vdCBiZSBzdHJvbmcgZW5vdWdoIHRvIG92ZXJjb21lIHRoZSBzb2Z0bmVzcyBpbiBFdXJvcGUsIiBzYWlkIEphY2sgQWJsaW4sIGNoaWVmIGludmVzdG1lbnQgb2ZmaWNlciBhdCBIYXJyaXMgUHJpdmF0ZSBCYW5rIGluIENoaWNhZ28uICJJIHVuZGVyZXN0aW1hdGVkIHRoZSByZWxhdGlvbnNoaXAgb3IgdGhlIGFsaWdubWVudCBvZiB0aGUgd29ybGQgbWFya2V0cyB0byB0aGUgRXVyb3BlYW4gbWFya2V0cywiIGhlIHNhaWQuICJJIGZlbHQgdGhhdCBFdXJvcGUgY291bGQgcG90ZW50aWFsbHkgcHJvY2VlZCBpbiB0aGVpciBvd24gbGl0dGxlIGNvcm5lciBvZiB0aGUgd29ybGQuIEZvciByaWdodCBub3cgYW55d2F5IGl0IGp1c3QgZG9lc24ndCBzZWVtIHRoYXQgd2F5LiIgTm90aGluZyB0ZWxscyB0aGUgc3Rvcnkgb2YgdGhlIGdsb2JhbCBlY29ub215IGF0IHRoZSBtb21lbnQgYmV0dGVyIHRoYW4gdGhlIHdvcmxkJ3MgZXF1aXR5IG1hcmtldHMuIEJlYXIgbWFya2V0cyBhcmUgcmFnaW5nIGluIFNwYWluLCBJdGFseSwgQnJhemlsIGFuZCBSdXNzaWEuIEFzaWFuIHN0b2NrcyBoYXZlIGJlZW4gd2Vhay4gTW9zdCBvZiBFdXJvcGUncyBvdGhlciBtYXJrZXRzIGFyZSBuZWdhdGl2ZSBmb3IgdGhlIHllYXIsIGFuZCB0aGF0IGlzIHdoZXJlIFUuUy4gc3RvY2tzIGFyZSBnb2luZyAtIGFuZCBmYXN0LiAiSSBkb24ndCBzZWUgYW55IGNvbXBlbGxpbmcgcmVhc29uIHRvIHRoaW5rIHRoYXQgd2UgYXJlIGdvaW5nIHRvIGhhdmUgYW55IHN1c3RhaW5lZCByZWNvdmVyeSBhYnNlbnQgbmV3IGZpc2NhbCwgbW9uZXRhcnkgc3RpbXVsdXMsIG5vdCBvbmx5IGhlcmUgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgYnV0IHBlcmhhcHMgZXZlbiBtb3JlIGltcG9ydGFudGx5IGVsc2V3aGVyZSBhcm91bmQgdGhlIHdvcmxkLCIgc2FpZCBDbGFyayBZaW5nc3QsIGNoaWVmIG1hcmtldCBhbmFseXN0IGF0IEpvc2VwaCBHdW5uYXIuIFlpbmdzdCBzYWlkIHRoYXQgc2lnbnMgb2YgbW9yZSBzdGltdWx1cyBtYXkgYmUgYSBjb21wZWxsaW5nIHJlYXNvbiB0byBnZXQgYnVsbGlzaC4gV2Ugd2lsbCBiZSAid2F0Y2hpbmcgdmVyeSBjbG9zZWx5IGZvciBuZXcgZmlzY2FsIGFuZCBtb25ldGFyeSBzdGltdWx1cyBmcm9tIGEgdmFyaWV0eSBvZiBjb3VudHJpZXMuIEkgdGhpbmsgdGhlIHNvdXJjZSB3aWxsIGJlIGltcG9ydGFudCwgSSB0aGluayB0aGUgbWFnbml0dWRlLCB0aGUgc2NvcGUgd2lsbCBiZSBpbXBvcnRhbnQsIiBoZSBzYWlkLiBPbiBGcmlkYXkgdGhlIFMmUCA1MDAgZmVsbCAyLjUgcGVyY2VudCwgZWRnaW5nIGJlbG93IGl0cyAyMDAtZGF5IG1vdmluZyBhdmVyYWdlIGZvciB0aGUgZmlyc3QgdGltZSBzaW5jZSBEZWNlbWJlci4gVGhlIGxldmVsIGlzIGNsb3NlbHkgd2F0Y2hlZCBieSBpbnZlc3RvcnMsIGFuZCBhIHNpZ25pZmljYW50IGJyZWFjaCB0aGVyZSBjb3VsZCBvcGVuIHRoZSB3YXkgZm9yIHN0ZWVwZXIgbG9zc2VzLiBUaGF0IGxvb2tzIGxpa2UgYSBkaXN0aW5jdCBwb3NzaWJpbGl0eSBhdCB0aGUgbW9tZW50LiBHcmVlY2Ugd2lsbCBmYWNlIG5ldyBlbGVjdGlvbnMgaW4gdHdvIHdlZWtzLiBBIHZpY3RvcnkgZm9yIHBhcnRpZXMgdGhhdCBvcHBvc2UgdGhlIGJhaWxvdXQgbGVkIGJ5IHRoZSBFdXJvcGVhbiBVbmlvbiBhbmQgSW50ZXJuYXRpb25hbCBNb25ldGFyeSBGdW5kIGNvdWxkIHN0YXJ0IHRoZSBiYWxsIHJvbGxpbmcgb24gdGhlIGNvdW50cnkncyB3aXRoZHJhd2FsIGZyb20gdGhlIGV1cm8gem9uZS4gU3VjaCBhbiBldmVudCB3b3VsZCBoYXZlIHVuZm9yZXNlZW4gY29uc2VxdWVuY2VzIGZvciB0aGUgZ2xvYmFsIGVjb25vbXkgYW5kIGZpbmFuY2lhbCBtYXJrZXRzLiBQYXJ0IG9mIHRoZSA2LjMgcGVyY2VudCBkcm9wIGluIHRoZSBTJlAgNTAwIGluIE1heSAtIGl0cyB3b3JzdCBtb250aCBzaW5jZSBTZXB0ZW1iZXIgLSB3YXMgYWJvdXQgcHJpY2luZyB0aGF0IGluLiBCdXQgaXQgaXMgYW55b25lJ3MgZ3Vlc3MgaG93IGZhciBzdG9ja3Mgd2lsbCBmYWxsIGlmIGEgR3JlZWsgZXhpdCBzcGFya3MgdGhlIExlaG1hbi10eXBlIGV2ZW50IHRoYXQgc29tZSBpbnZlc3RvcnMgZmVhci4gRmVhcnMgdGhlIGV1cm8tem9uZSBkZWJ0IGNyaXNpcyBpcyBzcGlsbGluZyBvdmVyIHRvIHRoZSBVbml0ZWQgU3RhdGVzIHNwYXJrZWQgZnJlc2ggYnV5aW5nIG9mIFUuUy4sIEdlcm1hbiwgSmFwYW5lc2UsIFN3aXNzIGFuZCBOb3JkaWMgZ292ZXJubWVudCBkZWJ0LCB3aGljaCBhcmUgcGVyY2VpdmVkIGFzIHNhZmUgaGF2ZW5zIGluIHRpbWVzIG9mIG1hcmtldCB0dXJidWxlbmNlLiBZaWVsZHMgb24gdGhlIGJlbmNobWFyayAxMC15ZWFyIFRyZWFzdXJ5IG5vdGUgaGl0IDEuNDQyIHBlcmNlbnQsIHRoZSBsb3dlc3QgbGV2ZWwgaW4gcmVjb3JkcyBnb2luZyBiYWNrIHRvIHRoZSBlYXJseSAxODAwcy4gQXQgdGhlIHNhbWUgdGltZSwgZnVuZGluZyBvcHRpb25zIGFyZSBuYXJyb3dpbmcgZm9yIGNvbXBhbmllcyBhY3Jvc3MgdGhlIGdsb2JlIGFzIGlzc3VlcnMgYXJlIHNodXQgb3V0IG9mIG1hcmtldHMgZHVlIHRvIHJpc2sgYXZlcnNpb24gZm9yIHdlYWtlciBjcmVkaXRzIGFuZCBkZW1hbmQgZm9yIHNwcmVhZCB0aGF0IGlzIHNlbmRpbmcgY29zdHMgc29hcmluZy4gVm9sdW1lIGluIHRoZSByb2J1c3QgVS5TLiBpbnZlc3RtZW50LWdyYWRlIG1hcmtldCBoYXMgZHdpbmRsZWQgZnJvbSAkMjg0LjggYmlsbGlvbiBpbiB0aGUgZmlyc3QgcXVhcnRlciB0byBqdXN0ICQxMTguNyBiaWxsaW9uIGluIHRoZSBmaXJzdCB0d28gbW9udGhzIG9mIHRoZSBzZWNvbmQgcXVhcnRlciwgYWNjb3JkaW5nIHRvIGRhdGEgZnJvbSBJRlIsIGEgdW5pdCBvZiBUaG9tc29uIFJldXRlcnMuIFRoYXQgbnVtYmVyIGlzIGV4cGVjdGVkIHRvIGZhbGwgZXZlbiBtb3JlIGluIHRoZSBzdW1tZXIuIEJ1dCBub3QgZXZlcnlvbmUgaXMgaGl0dGluZyB0aGUgc2VsbCBidXR0b24uIFphaGlkIFNpZGRpcXVlLCBhc3NvY2lhdGUgcG9ydGZvbGlvIG1hbmFnZXIgb2YgdGhlIEdhYmVsbGkgRXF1aXR5IFRydXN0LCBzYXlzIGhpcyB0d28gdG8gZm91ciB5ZWFyIHRpbWUgaG9yaXpvbiBhbmQgZm9jdXMgb24gdmFsdWUgaXMgYWxsb3dpbmcgaGltIHRvIGFkZCB0byBwb3NpdGlvbnMgaW4gc2VjdG9ycyB0aGF0IGFyZSBnZXR0aW5nIGhpdCB0aGUgaGFyZGVzdC4gIkNvbXBhbmllcyB0aGF0IHdlIGxpa2VkIGJlZm9yZSBhcmUgYmVjb21pbmcgbW9yZSBhdHRyYWN0aXZlIGZyb20gYSB2YWx1YXRpb24gcGVyc3BlY3RpdmUgYW5kIHdlIGhhdmUgYmVlbiBidXlpbmcgbW9yZSBvZiB0aG9zZSwiIGhlIHNhaWQuICJXZSBqdXN0IGJ1eSBvbiBhbnkgZGlwcyBhbmQgZXhpdCB3aGVuIHZhbHVhdGlvbnMgcmVhY2ggb3VyIGFzc2Vzc21lbnQgb2YgdmFsdWUuIiBTaWRkaXF1ZSBzYWlkIGhlJ2QgYmVlbiBhZGRpbmcgdG8gaG9sZGluZ3MgaW4gYXV0byBzdXBwbGllcnMsIGFlcm9zcGFjZSBhbmQgY29uc3VtZXIgc2VjdG9ycy4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATewttCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGRkYmNiZGExYThlMDM3NjA=</field><field name="symbol" class="java.lang.String">rO0ABXQABkpCWC5CRQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATe13SyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzvXCj1wo9</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzvXCj1wo9</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzvXCj1wo9</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzvXCj1wo9</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzczMzMzMz</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDcwODE2ZTZlMDU5ZWYwZDM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mExXAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExNTQ5</field><field name="title" class="java.lang.String">rO0ABXQAP1dhbGwgU3RyZWV0J3MgUmFsbHkgTWF0Y2hlcyAxOTkwcyDigJMgd2l0aCBWYWx1YXRpb25zIDI4JSBMb3dlcg==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6XHBSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGNlODRhMmIwNTMyMGI2MDQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAAk1O</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6cQnCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAysKPXCj1x</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzZmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAysKPXCj1x</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzT1wo9cKP</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxz1wo9cKP</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAGUTA==</field><field name="id" class="java.lang.String">rO0ABXQAEDJkZjgwZDJjYzNiZGY3MTA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFC9AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDcyODc=</field><field name="title" class="java.lang.String">rO0ABXQAV0luIEdvbGQgV2UgVHJ1c3Q6IFN0YXRlcyBQdXNoIEJ1bGxpb24gYXMgTGVnYWwgVGVuZGVyLCBTaG93IExpdHRsZSBGYWl0aCBpbiBGZWQgVGFjdGljcw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT3oA9yAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGJkN2MzOTIwMmZkN2Y0OTY=</field><field name="symbol" class="java.lang.String">rO0ABXQABEJLU0M=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT3tKjiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAo3Cj1wo9c</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAo5mZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAoKPXCj1wp</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAoPXCj1wo9</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAmqPXCj1wp</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAI/A==</field><field name="id" class="java.lang.String">rO0ABXQAEDI3MWQ2ZjM0MmQzMGMxMmI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mLNIAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDkzMjA=</field><field name="title" class="java.lang.String">rO0ABXQAQVMmUCA1MDAgVmFsdWF0aW9uIFNsaXBzIDE5JSBCZWxvdyAyMDExIGFzIFNoYW91bCBBZHZpc2VzIFBhdGllbmNl</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATe13SyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGQxODhlMWU2ZTBjYzhhNzc=</field><field name="symbol" class="java.lang.String">rO0ABXQAAk1O</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATe7A4iAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArFHrhR64U</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArQo9cKPXD</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAqij1wo9cK</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAq64UeuFHs</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAnszMzMzMz</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAsiA==</field><field name="id" class="java.lang.String">rO0ABXQAEDE2YTZmMTI1NTk1Y2M3MDc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJLtAAAA==</field></document></documents><date>2015-05-07T06:16:18-0500</date></cacheEntry>
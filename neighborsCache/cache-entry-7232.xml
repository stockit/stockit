<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0C7lBIHN1cmdlIGluIGludmVzdG1lbnQgZnJvbSBDaGluYSBpcyBvdmVyd2hlbG1pbmcgVVMgYW5kIHN0YXRlIGFnZW5jaWVzIGFuZCByYWlzaW5nIHRoZSByaXNrIG9mIG91dHJpZ2h0IGludmVzdG9yIGZyYXVkIGFjY29yZGluZyB0byBhIHJlcG9ydCBvdXQgVGh1cnNkYXkgZnJvbSBhIGZlZGVyYWwgd2F0Y2hkb2cgVGhlIFVTQ2hpbmEgRWNvbm9taWMgYW5kIFNlY3VyaXR5IFJldmlldyBDb21taXNzaW9uIHJlcG9ydCByYWlzZXMgcXVlc3Rpb25zIGFib3V0IEFtZXJpY2FzIEVCNSB2aXNhIHByb2dyYW0gd2hpY2ggZ3JhbnRzIGdyZWVuIGNhcmRzIHRvIGZvcmVpZ25lcnMgaW4gcmV0dXJuIGZvciBpbnZlc3RtZW50cyBvZiAxIG1pbGxpb24gIG9yIGp1c3QgNTAwMDAwIGluIGhpZ2h1bmVtcGxveW1lbnQgYXJlYXMgTG9jYWwgZ292ZXJubWVudCBvZmZpY2lhbHMgYXJlIHN1cHBvc2VkIHRvIHZldCB0aGUgaW52ZXN0b3JzIGFuZCB0aGVpciBwcm9qZWN0cyBUaGUgcHJvZ3JhbSBoYXMgYmVlbiBmbG9vZGVkIGJ5IENoaW5lc2UgYXBwbGljYW50cyB0aGUgcmVwb3J0IGZvdW5kIEluc3RhbmNlcyBvZiBmcmF1ZCBhbmQgbGF4IHJlZ3VsYXRpb24gaGF2ZSBjYXN0IGRvdWJ0IG9uIHRoZSBhYmlsaXR5IG9mIGxvY2FsIGF1dGhvcml0aWVzIHRvIHNjcmVlbiBDaGluZXNlIEVCNSBpbnZlc3RvcnMgcHJvcGVybHkgU3RhcnRlZCAyNCB5ZWFycyBhZ28gdGhlIEVCNSBoYXMgb25seSByZWNlbnRseSBiZWd1biB0byBhdHRyYWN0IGludGVuc2UgaW50ZXJlc3QgaW4gQ2hpbmEgd2hlcmUgaW52ZXN0b3JzIGFuZCBidXNpbmVzcyBvd25lcnMgYXJlIHdvcnJpZWQgYWJvdXQgYSBjb29saW5nIGVjb25vbXkgYW5kIGEgY3JhY2tkb3duIG9uIGNvcnJ1cHRpb24gTWFueSBhcmUgYWxzbyBlYWdlciB0byB0YWtlIGFkdmFudGFnZSBvZiBhIHN0cmVuZ3RoZW5pbmcgVVMgZWNvbm9taWMgcmVjb3ZlcnkgVGhlIFVuaXRlZCBTdGF0ZXMgaXNzdWVkIDY4OTUgRUI1IHZpc2FzIHRvIENoaW5lc2UgY2l0aXplbnMgaW4gMjAxMyB1cCBmcm9tIGxlc3MgdGhhbiAyNTAwIGluIDIwMTEgQ2hpbmVzZSBhY2NvdW50ZWQgZm9yIDg1IHBlcmNlbnQgb2YgRUI1IHZpc2FzIGlzc3VlZCBsYXN0IHllYXIgdGhyb3VnaCBBdWd1c3QgdXAgZnJvbSAxNCBwZXJjZW50IGluIDIwMDcgTWFueSBmb3JlaWduIGludmVzdG9ycyBzZWVrIGhlbHAgZnJvbSA2MTcgSW1taWdyYW50IEludmVzdG9yIFJlZ2lvbmFsIENlbnRlcnMgbmF0aW9ud2lkZSB0byBpZGVudGlmeSBwcm9qZWN0cyB0aGF0IHF1YWxpZnkgZm9yIHRoZSB2aXNhIHByb2dyYW0gVGhlIGludmVzdG9ycyBhcmUgb2Z0ZW4gdW5kZXIgdGhlIG1pc3Rha2VuIGltcHJlc3Npb24gdGhhdCB0aGUgY2VudGVycyBhcmUgc3BvbnNvcmVkIGJ5IHRoZSBnb3Zlcm5tZW50IEluIGZhY3QgYWx0aG91Z2ggdGhleSBuZWVkIGdvdmVybm1lbnQgYXBwcm92YWwgdG8gZ2V0IHRoZSByZWdpb25hbCBjZW50ZXIgZGVzaWduYXRpb24gdGhleSBhcmUgcHJpdmF0ZSBmb3Jwcm9maXQgb3BlcmF0aW9ucyBUaGUgU2VjdXJpdGllcyBhbmQgRXhjaGFuZ2UgQ29tbWlzc2lvbiBhbmQgdGhlIFVTIENpdGl6ZW5zaGlwIGFuZCBJbW1pZ3JhdGlvbiBTZXJ2aWNlcyBoYXZlIGpvaW50bHkgc2FpZCB0aGV5IGhhdmUgbm8gdmlldyBvbiB0aGUgcXVhbGl0eSBvZiB0aGUgaW52ZXN0bWVudHMgdGhlIGNlbnRlcnMgYXJlIHByb21vdGluZyBUaGUgbG9vc2VseSByZWd1bGF0ZWQgc3lzdGVtIGlzIHZ1bG5lcmFibGUgdG8gZnJhdWQgdGhlIFVTQ2hpbmEgQ29tbWlzc2lvbiByZXBvcnQgc2F5cyBJdHMgY2l0ZXMgdGhlIGNhc2Ugb2YgYSByZWFsIGVzdGF0ZSBkZXZlbG9wZXIgaW5kaWN0ZWQgbGFzdCB5ZWFyIG9uIGNoYXJnZXMgb2YgZHVwaW5nIDI5MCBDaGluZXNlIGludmVzdG9ycyBpbnRvIHNpbmtpbmcgbW9uZXkgaW50byBhIGZyYXVkdWxlbnQgOTEyIG1pbGxpb24gaG90ZWwgY29tcGxleCBvdXRzaWRlIENoaWNhZ28gSW4gU291dGggRGFrb3RhIGEgc3RhdGUgb2ZmaWNpYWwgY29tbWl0dGVkIHN1aWNpZGUgaW4gMjAxMyBhZnRlciBjb21pbmcgdW5kZXIgaW52ZXN0aWdhdGlvbiBmb3IgbWlzbWFuYWdpbmcgQ2hpbmVzZSBhbmQgU291dGggS29yZWFuIEVCNSBpbnZlc3RtZW50IGZ1bmRzIGNvbm5lY3RlZCB0byBhIGZhaWxlZCBiZWVmcGFja2luZyBwbGFudCBUaGUgY29tbWlzc2lvbiByZXBvcnQgbm90ZXMgdGhhdCBsb2NhbCBnb3Zlcm5tZW50cyBoYXZlIGFuIGluY2VudGl2ZSBub3QgdG8gc2NyZWVuIENoaW5lc2UgRUI1IGludmVzdG9ycyB0b28gcmlnb3JvdXNseSBUaGV5IGNhbiBmaWxsIGFuIGltcG9ydGFudCBnYXAgYnkgaW52ZXN0aW5nIGluIGltcG92ZXJpc2hlZCBhcmVhcyB0aGF0IGRvbWVzdGljIGludmVzdG9ycyBhdm9pZCBUaGUgcmVwb3J0IGNhbGxzIGZvciB0aGUgRUI1IHN5c3RlbSB0byBiZSBzY2FsZWQgYmFjayBvciBmb3IgdGhlIGFwcHJvdmFsIHByb2Nlc3MgdG8gYmUgaW1wcm92ZWQgVGhlIHJlcG9ydCB3YXMgd3JpdHRlbiBieSBjb21taXNzaW9uIHJlc2VhcmNoZXJzIElhY29iIEtvY2hXZXNlciBhbmQgR2FybGFuZCBEaXR6IFRoZSBjb21taXNzaW9uIGNyZWF0ZWQgYnkgQ29uZ3Jlc3MgaW4gMjAwMCB0byBtb25pdG9yIHRoZSBuYXRpb25hbCBzZWN1cml0eSBpbXBsaWNhdGlvbnMgb2YgdGhlIFVTQ2hpbmEgZWNvbm9taWMgcmVsYXRpb25zaGlwIGlzIHB1Ymxpc2hpbmcgdGhlIHJlcG9ydCB0byBwcm9tb3RlIGdyZWF0ZXIgcHVibGljIHVuZGVyc3RhbmRpbmcgYnV0IGRvZXMgbm90IG5lY2Vzc2FyaWx5IGVuZG9yc2UgaXRzIGZpbmRpbmdzIENoaW5lc2UgZGlyZWN0IGludmVzdG1lbnQgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgaGFzIHJpc2VuIGZyb20gdmlydHVhbGx5IG5vdGhpbmcgYmVmb3JlIDIwMTAgdG8gbW9yZSB0aGFuIDEwIGJpbGxpb24gaW4gZWFjaCBvZiB0aGUgbGFzdCB0d28geWVhcnMgYWNjb3JkaW5nIHRvIHRoZSBSaG9kaXVtIEdyb3VwIGNvbnN1bHRhbmN5dAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAb2FydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2UsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEzLTEyLTAzVDAwOjAwOjAwWiBUTyAyMDE0LTA3LTEwVDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDM5NzY=</field><field name="title" class="java.lang.String">rO0ABXQAPldhc2hpbmd0b24sIFJlZ3VsYXRvcnMgU2hydWcgYXQgQWxpYmFiYSdzIFBsYW4gZm9yIE1hc3NpdmUgSVBP</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcepHSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDA3MjRkOGEzODdhYzY5Y2Y=</field><field name="symbol" class="java.lang.String">rO0ABXQABFBFUlk=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcjytCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxKPXCj1wp</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxUeuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxD1wo9cKP</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxTMzMzMzN</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxTMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAF6hA==</field><field name="id" class="java.lang.String">rO0ABXQAEGVlMDVmOTQ5N2ViNWY4OWU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE6aAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDE2MjQ=</field><field name="title" class="java.lang.String">rO0ABXQAO0NoaW5hJ3MgRGVmbGF0aW5nIFByb3BlcnR5IE1hcmtldCBTZWVuIFJhaXNpbmcgRGVidCBEYW5nZXJz</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUXVDXSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDM4MDRhZmU3ZGYyZjE0YzM=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNIRU4=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUXaM9CAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7vXCj1wo9</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA8FHrhR64U</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5lHrhR64U</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA50euFHrhS</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5aPXCj1wp</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAFZtA==</field><field name="id" class="java.lang.String">rO0ABXQAEDE0ZGU5NGFiNTE0NWRhNTQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKdaAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQzMjM=</field><field name="title" class="java.lang.String">rO0ABXQAQEJ1cm5lZCBieSBCaXRjb2luIGFuZCBQcm9wZXJ0eSwgQ2hpbmVzZSBTcGVjdWxhdG9ycyBFbWJyYWNlIElQT3M=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbB8fyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDMwNDI1NGE0NTZjMzM3YjE=</field><field name="symbol" class="java.lang.String">rO0ABXQABE5JTkU=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbHGFiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/71wo9cKPX</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/71wo9cKPX</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/71wo9cKPX</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/71wo9cKPX</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/6uFHrhR64</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDI2YzVlMGMyODRiOTAyYTY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFCiAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDc1NTQ=</field><field name="title" class="java.lang.String">rO0ABXQAPlNFQyBKdWRnZSBCYXJzICdCaWcgRm91cicgQ2hpbmEgVW5pdHMgZm9yIDYgTW9udGhzIE92ZXIgQXVkaXRz</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUO9rwMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGQ4OGE3YWIzODgwMjIwOWQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABkpCWC5CRQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUPC1V8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCseuFHrhS</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCseuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCseuFHrhS</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCseuFHrhS</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCa4UeuFHs</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGY3ZjJjODQzMjgzYmIyNDM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFsSAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDE1NjU=</field><field name="title" class="java.lang.String">rO0ABXQANUFudGktQ2hpbmEgUmlvdHMgU3ByZWFkIGluIFZpZXRuYW0sIE1vcmUgVGhhbiAyMCBEZWFk</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUX+QFSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGRjNThhYjY4ZjU4YjZjYjU=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0NISQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUYDZrCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAq+uFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArAAAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAquFHrhR64</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAq9cKPXCj2</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEApI9cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAALFxA==</field><field name="id" class="java.lang.String">rO0ABXQAEDUwMTJmYWM4MDNjNDFkOTg=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mM4dAAAA==</field></document></documents><date>2015-05-07T12:17:49-0500</date></cacheEntry>
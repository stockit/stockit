<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0DABCcmF6aWxzIHNpbmtpbmcgcmVhbCBhbmQgcXVpY2tlbmluZyBpbmZsYXRpb24gYXJlIGhlbHBpbmcgdGhlIGNvdW50cnlzIGJpZ2dlc3QgYml0Y29pbiBicm9rZXJhZ2UgZHJ1bSB1cCBidXllcnMgZm9yIHRoZSB2aXJ0dWFsIGN1cnJlbmN5IFJvZHJpZ28gQmF0aXN0YSBwcmVzaWRlbnQgb2Ygb25saW5lIGJyb2tlcmFnZSBNZXJjYWRvIEJpdGNvaW4gc2FpZCB0cmFkaW5nIHZvbHVtZSBjbGltYmVkIHRvIDEwNSBtaWxsaW9uIHJlYWlzIDQ0IG1pbGxpb24gaW4gRGVjZW1iZXIgZnJvbSBhbG1vc3QgemVybyBhIHllYXIgYmVmb3JlIGdyb3d0aCBoZSBhdHRyaWJ1dGVkIGluIHBhcnQgdG8gdGhlIHJlYWxzIHNlbGxvZmYgQnJhemlscyByZWFsIGhhcyBwbHVuZ2VkIDg4IHBlcmNlbnQgaW4gdGhlIHBhc3QgdGhyZWUgbW9udGhzIGFnYWluc3QgdGhlIGRvbGxhciBtYWtpbmcgaXQgZGlmZmljdWx0IGZvciBwb2xpY3ltYWtlcnMgdG8gY3VyYiBpbmZsYXRpb24gZGVzcGl0ZSB0aGUgd29ybGRzIGJpZ2dlc3QgYm9ycm93aW5nY29zdCBpbmNyZWFzZXMgSW5mbGF0aW9uIHRoYXQgYWNjZWxlcmF0ZWQgdG8gNTkxIHBlcmNlbnQgaW4gMjAxMyBldmVuIGFmdGVyIGNlbnRyYWwgYmFuayBQcmVzaWRlbnQgQWxleGFuZHJlIFRvbWJpbmkgc2FpZCBpdCB3b3VsZCBzbG93IGlzIGFkZGluZyB0byBCcmF6aWxpYW5zIGludGVyZXN0IGluIGJpdGNvaW4gYSB2aXJ0dWFsIGN1cnJlbmN5IHRoYXQgc3VyZ2VkIHRvIDEwMDUgbGFzdCB3ZWVrIG9uIHRyYWRpbmcgcGxhdGZvcm0gTXQgR294IHVwIGZyb20gMTUgYWJvdXQgYSB5ZWFyIGFnbyBGZWFyIG9mIGluZmxhdGlvbiBpcyBhIGRldGVybWluaW5nIGZhY3RvciBmb3Igc29tZSBwZW9wbGUgdG8gdGFrZSByaXNrcyBvbiBCaXRjb2luIGhlcmUgQmF0aXN0YSBhIGZvcm1lciBwcm9ncmFtIGRldmVsb3BlciBmb3IgTW9yZ2FuIFN0YW5sZXkgaW4gQnJhemlsIHNhaWQgaW4gYSBKYW4gMjIgaW50ZXJ2aWV3IGluIFNhbyBQYXVsbyBUaGVyZSBhcmUgbm8gZ29vZCBpbnZlc3RtZW50cyBoZXJlIHdpdGggaW5mbGF0aW9uIGF0IDYgcGVyY2VudCBwbHVzIGhpZ2ggdGF4IHJhdGVzIElmIHRoZSByZWFsIGNvbnRpbnVlcyB0byB3ZWFrZW4gYSBsb3QgaXQgd2lsbCBhbHNvIGNvbnRpbnVlIHRvIGJlbmVmaXQgdGhlIG1hcmtldCBCYXRpc3RhIGFudGljaXBhdGVzIHRoYXQgdm9sdW1lIG9uIE1lcmNhZG8gQml0Y29pbiB3aWxsIHN1cmdlIHRvIGFib3V0IDE2MCBtaWxsaW9uIHJlYWlzIGEgbW9udGggaW4gMjAxNCB0byByaXZhbCB0cmFkaW5nIHZvbHVtZSBpbiBHZXJtYW55IEJhdGlzdGEgYW5kIHR3byBwYXJ0bmVycyBib3VnaHQgdGhlIGJyb2tlcmFnZSBmcm9tIGEgc29mdHdhcmUgZGV2ZWxvcGVyIGluIEFwcmlsIFRoZSBleGNoYW5nZSB3aGljaCBub3cgaGFzIHNpeCBlbXBsb3llZXMgbWFrZXMgYW4gYXZlcmFnZSBvZiBhYm91dCAyNSBwZXJjZW50IG9uIHRyYW5zYWN0aW9ucyBoZSBzYWlkIE1peGVkIFJlY2VwdGlvbiBCaXRjb2luIGhhcyBoYWQgYSBtaXhlZCByZWNlcHRpb24gaW4gZW1lcmdpbmcgbWFya2V0cyBhcyBhdXRob3JpdGllcyBzZWVrIHRvIHByb3RlY3QgY29uc3VtZXJzIGFuZCBidXNpbmVzc2VzIGZyb20gcG90ZW50aWFsIGxvc3NlcyBDaGluYXMgY2VudHJhbCBiYW5rIGhhcyBiYW5uZWQgbGVuZGVycyBmcm9tIGhhbmRsaW5nIEJpdGNvaW4gYW5kIHRoZSBSZXNlcnZlIEJhbmsgb2YgSW5kaWEgd2FybmVkIHZpcnR1YWwgY3VycmVuY3kgdHJhZGVycyBvZiBsZWdhbCByaXNrcyBCcmF6aWxzIGNlbnRyYWwgYmFuayBzYWlkIGl0IGlzbnQgcmVndWxhdGluZyBCaXRjb2luIGZvciBub3cgdW5kZXIgYSBsYXcgb24gcGF5bWVudCBtZXRob2RzIGJlY2F1c2UgdGhlIHZpcnR1YWwgY3VycmVuY3kgaXNudCBzaWduaWZpY2FudCBlbm91Z2ggdG8gYmUgb2Ygc3lzdGVtaWMgaW1wb3J0YW5jZSBhY2NvcmRpbmcgdG8gYW4gZW1haWxlZCByZXNwb25zZSB0byBxdWVzdGlvbnMgSmFuIDIyIFRoZSByZWFscyAyNiBwZXJjZW50IHBsdW5nZSBpbiB0aGUgcGFzdCB0d28geWVhcnMgaXMgdGhlIGJpZ2dlc3QgYW1vbmcgbWFqb3IgY3VycmVuY2llcyB0cmFja2VkIGJ5IEJsb29tYmVyZyBhZnRlciB0aGUgU291dGggQWZyaWNhbiByYW5kIEZpc2NhbCBkZXRlcmlvcmF0aW9uIHVuZGVyIFByZXNpZGVudCBEaWxtYSBSb3Vzc2VmZiBpcyBmdWVsaW5nIGJldHMgb24gYSBjcmVkaXRyYXRpbmcgY3V0IGFuZCBCcmF6aWwgYWxzbyBoYXMgdGhlIGhpZ2hlc3QgdGF4IHJhdGUgYW1vbmcgbWFqb3IgZW1lcmdpbmcgbWFya2V0cyBhY2NvcmRpbmcgdG8gdGhlIFdvcmxkIEJhbmsgTW9zdCBidXllcnMgaW4gQnJhemlsIGFyZSBpbnRlcmVzdGVkIGluIEJpdGNvaW4gYXMgYW4gaW52ZXN0bWVudCBCYXRpc3RhIHNhaWQgQnJhemlsaWFuIGJ1c2luZXNzZXMgZnJvbSBzZXggc2hvcHMgdG8gaG90ZWxzIGFjY2VwdGluZyB0aGUgY3VycmVuY3kgYXJlIHNpZ25zIHRoYXQgdGhlIGNlbnRyYWwgYmFua3MgbmV1dHJhbCBzdGFuY2UgaXMgYSBib29uIHRvIHRoZSBtYXJrZXQgaGUgc2FpZCBDbGllbnRzIGluY2x1ZGUgaW52ZXN0b3JzIGZyb20gbmVpZ2hib3JpbmcgQXJnZW50aW5hIHdpdGggQnJhemlsaWFuIHJvb3RzIHdobyBhcmUgZHJhd24gdG8gQml0Y29pbiB0byBhdm9pZCBjYXBpdGFsIGNvbnRyb2xzIGFuZCBhIGRlcHJlY2lhdGluZyBwZXNvIFZvbGF0aWxpdHkgaXMgYSBjb25jZXJuIGZvciBCaXRjb2luIGJ1eWVycyBCYXRpc3RhIHNhaWQgVGhlIGRpZ2l0YWwgY3VycmVuY3kgcmVhY2hlZCBhIHJlY29yZCAxMjQyIGluIE5vdmVtYmVyIGFuZCBmZWxsIHRvIGxlc3MgdGhhbiBoYWxmIHRoYXQgcHJpY2UgYSBmZXcgZGF5cyBsYXRlciBQZW9wbGUgYXJlIGxvb2tpbmcgYXQgdGhpcyBhcyBhIHJpc2t5IG5ldyBhc3NldCB3aXRoIHBvdGVudGlhbCBmb3IgYmlnIGdhaW5zIGxpa2UgYSBiaW5hcnkgYXNzZXRzIGluIHdoaWNoIHlvdSBlaXRoZXIgZ2V0IGEgYmlnIHBheW91dCBvciB6ZXJvIGhlIHNhaWQgVGhleSBwdXQgaW4gbW9uZXkgdGhhdCB0aGV5cmUgY29tZm9ydGFibGUgd2l0aCBsb3Npbmd0AARyb3dzdXEAfgAKAAAAAXQAATV0AAVzdGFydHVxAH4ACgAAAAF0AAEwdAACZmx1cQB+AAoAAAABdABvYXJ0aWNsZUlkLHRpdGxlLGNvbnRlbnQsZGF0ZSxzdG9ja0hpc3RvcnlJZCxzeW1ib2wsaGlzdG9yeURhdGUsb3BlbixoaWdoLGxvdyxjbG9zZSxhZGpDbG9zZSx2b2x1bWUsaWQsX3ZlcnNpb25fdAACZnF1cQB+AAoAAAABdAA6aGlzdG9yeURhdGU6WzIwMTAtMDYtMTBUMDA6MDA6MDBaIFRPIDIwMTMtMDctMzBUNTk6NTk6NTlaXXgAcA==</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQAAzE3OA==</field><field name="title" class="java.lang.String">rO0ABXQAPEN1cnJlbmN5IFJoZXRvcmljIEhlYXRzIFVwIFdpdGggTmV3IFplYWxhbmQgSm9pbmluZyBXYXJuaW5ncw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATz2L+cAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDhlY2I5ZmI2ZTZhYzMxNTI=</field><field name="symbol" class="java.lang.String">rO0ABXQABlJCQS5UTw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATz7VkMAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3DMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3D1wo9cKP</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA2q4UeuFHs</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3BR64UeuF</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA19cKPXCj2</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAEfgA==</field><field name="id" class="java.lang.String">rO0ABXQAEDFjNDc5MmJmZWNkYzYzZDk=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mF+lAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTEwNTE1</field><field name="title" class="java.lang.String">rO0ABXQANUJyYXppbCBUYWxrcyBUb3VnaCBvbiBJbmZsYXRpb24gYnV0IEVjb25vbXkgU3RpbGwgSG90</field><field name="content" class="java.lang.String">rO0ABXQRr0luIG1pbnV0ZXMgcmVsZWFzZWQgZnJvbSBpdHMgbW9uZXRhcnkgcG9saWN5IG1lZXRpbmcgbGFzdCB3ZWVrLCB0aGUgY2VudHJhbCBiYW5rIHNhaWQgYSB0aWdodCBsYWJvciBtYXJrZXQgYW5kIHJvYnVzdCBkb21lc3RpYyBkZW1hbmQgd291bGQga2VlcCBwcmVzc3VyZSBvbiBjb25zdW1lciBwcmljZXMsIHJlcXVpcmluZyBicm9hZCBnb3Zlcm5tZW50IGFjdGlvbiB0byBjb29sIGluZmxhdGlvbiB0aGF0IGlzIGF0IGEgc2l4LXllYXIgaGlnaC4gVGhlIGJhbmssIHdoaWNoIGEgd2VlayBhZ28gcmFpc2VkIGludGVyZXN0IHJhdGVzIGZvciB0aGUgZmlyc3QgdGltZSBpbiBzaXggbW9udGhzLCBzdHJlc3NlZCB0aGF0IG1vbmV0YXJ5IHBvbGljeSBhbG9uZSBpcyBub3QgZW5vdWdoIHRvIHJlaW4gaW4gaW5mbGF0aW9uLiBJdCBoaWdobGlnaHRlZCB0aGUgbmVlZCBmb3IgZmlzY2FsIHJlc3RyYWludCDigJQgYSByZWZlcmVuY2UgdG8gYSBwbGVkZ2UgYnkgUHJlc2lkZW50IERpbG1hIFJvdXNzZWZmIHRvIGN1dCBwdWJsaWMgc3BlbmRpbmcuIFJvdXNzZWZmLCBhdCBhIG5ld3MgY29uZmVyZW5jZSBpbiBSaW8gZGUgSmFuZWlybywgcmVpdGVyYXRlZCB0aGUgZ292ZXJubWVudCdzIGNvbW1pdG1lbnQgdG8gaG9sZCBiYWNrIHByaWNlIHByZXNzdXJlcy4gIldlJ3JlIGdvaW5nIHRvIGtlZXAgY29udHJvbCBvZiBpbmZsYXRpb24sIiBzaGUgc2FpZC4gIldlJ3JlIG5vdCBnb2luZyB0byBwbGF5IGFyb3VuZCB3aXRoIGluZmxhdGlvbiBhbmQgd2UnbGwga2VlcCB0aGUgZWNvbm9teSBncm93aW5nIHN5c3RlbWF0aWNhbGx5LiIgVGhlIGNlbnRyYWwgYmFuaywgaW4gdGhlIG1pbnV0ZXMsIHNhaWQgaXRzIGluZmxhdGlvbiBvdXRsb29rICJ0YWtlcyBpbnRvIGFjY291bnQgdGhlIHJlYWxpemF0aW9uIG9mIGZpc2NhbCB0YXJnZXRzIHRoYXQgdGhlIGJhbmsgaXMgd29ya2luZyB3aXRoLiIgUHVibGljIHNwZW5kaW5nIHNwaWtlZCBpbiBCcmF6aWwgbGFzdCB5ZWFyIGFoZWFkIG9mIE9jdG9iZXIgcHJlc2lkZW50aWFsIGVsZWN0aW9ucyBhcyB0aGUgZ292ZXJubWVudCBvcGVuZWQgdGhlIGNvZmZlcnMgdG8gYm9vc3QgdGhlIHJ1bGluZyBwYXJ0eSdzIGNhbmRpZGF0ZSwgUm91c3NlZmYuIFRoZSBuZXcgcHJlc2lkZW50IGlzIGV4cGVjdGVkIHRvIGFubm91bmNlIGEgZnJlZXplIGluIGdvdmVybm1lbnQgZXhwZW5zZXMgbmV4dCBtb250aCBhcyBzaGUgc2Vla3MgdG8gc2hvdyBpbnZlc3RvcnMgc2hlIGlzIHNlcmlvdXMgYWJvdXQgdHJpbW1pbmcgc3BlbmRpbmcuIFN0aWxsLCBpbmZsYXRpb24gaGFzIHNwZWQgdXAgZW5vdWdoIHRoYXQgdGhlIGNlbnRyYWwgYmFuayBpcyBsaWtlbHkgdG8gaGF2ZSB0byByYWlzZSByYXRlcyBmdXJ0aGVyIGRlc3BpdGUgYnVkZ2V0IGN1dHMg4oCUIGEgbW92ZSB0aGF0IHdvdWxkIGNhcnJ5IHRoZSByaXNrIG9mIHNwdXJyaW5nIGZ1cnRoZXIgZ2FpbnMgaW4gQnJhemlsJ3MgY3VycmVuY3kgYW5kIHN0b2tpbmcgaW5mbGF0aW9uIGV2ZW4gbW9yZS4gT3RoZXIgYmlnIGVtZXJnaW5nIGVjb25vbWllcyBmYWNlIHRoZSBzYW1lIGNoYWxsZW5nZSBhcyB0aGV5IHRpZ2h0ZW4gaW50ZXJlc3QgcmF0ZXMgdG8gY29udHJvbCBpbmZsYXRpb24uIFNvdmVyZWlnbiBkZWJ0IGhhcyBiZWVuIGEgZ2xvYmFsIGNvbmNlcm4gaW4gcmVjZW50IG1vbnRocy4gU3RhbmRhcmQgJiBQb29yJ3MgY3V0IEphcGFuJ3MgY3JlZGl0IHJhdGluZyBUaHVyc2RheSBmb3IgdGhlIGZpcnN0IHRpbWUgc2luY2UgMjAwMiwgYW5kIGEgZmlzY2FsIGNyaXNpcyBpbiBFdXJvcGUgcmVtYWlucyB1bnJlc29sdmVkLiBOb3IgYXJlIGRldmVsb3BlZCBuYXRpb25zIHRoZSBvbmx5IG9uZXMgYXQgcmlzaywgdGhlIEludGVybmF0aW9uYWwgTW9uZXRhcnkgRnVuZCB3YXJuZWQgVGh1cnNkYXkuIFRoZSBJTUYgc2FpZCB0aGF0IGZpc2NhbCBiYWxhbmNlcyBpbiBCcmF6aWwsIENoaW5hIGFuZCBJbmRpYSB3ZXJlIHdlYWtlciB0aGFuIGl0IHByb2plY3RlZCBpbiBOb3ZlbWJlciwgY2FsbGluZyB0aGUgZGV0ZXJpb3JhdGlvbiBpbiBCcmF6aWwncyBmaXNjYWwgYWNjb3VudHMgInBhcnRpY3VsYXJseSBwcm9ub3VuY2VkLiIgwqAgTmVpbCBTaGVhcmluZywgc2VuaW9yIGVtZXJnaW5nIG1hcmtldHMgZWNvbm9taXN0IGF0IENhcGl0YWwgRWNvbm9taWNzIEx0ZCBpbiBMb25kb24gc2FpZCB0aGUgY2VudHJhbCBiYW5rJ3MgbWludXRlcyAiYXJlIHVuZXF1aXZvY2FsbHkgaGF3a2lzaC4iICJJZiB0aGVyZSB3ZXJlIGFueSBsaW5nZXJpbmcgZG91YnRzIGFzIHRvIHdoZXRoZXIgb3Igbm90ICh0aGUgY2VudHJhbCBiYW5rKSB3b3VsZCBzaGlmdCBwcmlvcml0aWVzIHVuZGVyIHRoZSBuZXcgZ292ZXJub3IsIEFsZXhhbmRyZSBUb21iaW5pLCBJIHRoaW5rIHRoZXkndmUgYmVlbiB3ZWxsIGFuZCB0cnVseSBiYW5pc2hlZCBub3csIiBTaGVhcmluZyBzYWlkLiBUb21iaW5pLCB3aG8gdG9vayB0aGUgaGVsbSBvZiB0aGUgY2VudHJhbCBiYW5rIGF0IHRoZSBzdGFydCBvZiB0aGUgbW9udGgsIGhhcyBiZWVuIHVuZGVyIHByZXNzdXJlIHRvIHByb3ZlIGhpcyBpbmZsYXRpb24tZmlnaHRpbmcgY3JlZGVudGlhbHMgdG8gbWFya2V0cyBhcyBwcmljZXMgYWR2YW5jZS4gTGFzdCB3ZWVrLCB0aGUgY2VudHJhbCBiYW5rIHJhaXNlZCBpdHMgYmVuY2htYXJrIFNlbGljIHJhdGUgdG8gMTEuMjUgcGVyY2VudCBmcm9tIDEwLjc1IHBlcmNlbnQgYW5kIHNhaWQgdGhlIG1vdmUgc3RhcnRlZCAiYSBwcm9jZXNzIG9mIGFkanVzdG1lbnQgb2YgdGhlIGJlbmNobWFyayBpbnRlcmVzdCByYXRlLiIgQnJhemlsJ3MgZWNvbm9teSBsaWtlbHkgZ3JldyBpbiAyMDEwIGF0IGl0cyBmYXN0ZXN0IHBhY2UgaW4gbW9yZSB0aGFuIHR3byBkZWNhZGVzLCBmdWVsZWQgYnkgYSBjcmVkaXQgYm9vbSwgcmVjb3JkLWxvdyB1bmVtcGxveW1lbnQgYW5kIGhpZ2hlciB3YWdlcy4gVGhlIGpvYmxlc3MgcmF0ZSBjbG9zZWQgb3V0IHRoZSB5ZWFyIGF0IGFuIGFsbC10aW1lIGxvdywgZmFsbGluZyB0byA1LjMgcGVyY2VudCwgdGhlIGdvdmVybm1lbnQgcmVwb3J0ZWQgVGh1cnNkYXkuIFRoZSByYXRlIGlzIGFib3V0IG9uZS1xdWFydGVyIHRoZSBqb2JsZXNzIHJhdGUgaW4gU3BhaW4sIHdoaWNoIHN0b29kIGF0IDE5LjggcGVyY2VudCBpbiB0aGUgdGhpcmQgcXVhcnRlciwgYW5kIGZhciBsb3dlciB0aGFuIHRoZSA5LjQgcGVyY2VudCB1bmVtcGxveW1lbnQgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgaW4gRGVjZW1iZXIuIEJ1dCBCcmF6aWwncyBicmlzayBncm93dGggaGFzIGNvbWUgYXQgYSBjb3N0OiBzcGVlZGluZyBpbmZsYXRpb24gYW5kIGEgcmFwaWRseSBzdHJlbmd0aGVuaW5nIGN1cnJlbmN5LCB3aGljaCBpcyBodXJ0aW5nIGV4cG9ydGVycyBieSBtYWtpbmcgdGhlaXIgZ29vZHMgbW9yZSBleHBlbnNpdmUgYWJyb2FkLiBJbmZsYXRpb24gaW4gQnJhemlsIHN1cmdlZCBpbiAyMDEwIG9uIHRoZSBlY29ub21pYyBib29tLCBmaW5pc2hpbmcgdGhlIHllYXIgYXQgNS45MSBwZXJjZW50IOKAlCB0aGUgaGlnaGVzdCBsZXZlbCBzaW5jZSAyMDA0IGFuZCBhYm92ZSB0aGUgY2VudGVyIG9mIHRoZSBiYW5rJ3MgdGFyZ2V0IG9mIDQuNSBwZXJjZW50LCBwbHVzIG9yIG1pbnVzIDIgcGVyY2VudGFnZSBwb2ludHMuIFRoZSBjZW50cmFsIGJhbmsgc2FpZCB0aGUgb3V0bG9vayBmb3IgaW5mbGF0aW9uIGhhcyBvbmx5IHJpc2VuIHNpbmNlIGl0cyBsYXN0IHBvbGljeSBtZWV0aW5nIGluIGVhcmx5IERlY2VtYmVyLiBNYXJrZXQgcGFydGljaXBhbnRzIGhhdmUgcmFpc2VkIHRoZWlyIGluZmxhdGlvbiBmb3JlY2FzdHMgZm9yIHNldmVuIHN0cmFpZ2h0IHdlZWtzLCBhbmQgZGF0YSByZWxlYXNlZCBXZWRuZXNkYXkgc2hvd2VkIDEyLW1vbnRoIGluZmxhdGlvbiBzdXJwYXNzaW5nIDYgcGVyY2VudC4gV2hpbGUgaGlnaGVyIGludGVyZXN0IHJhdGVzIHdpbGwgaGVscCBjb250YWluIGluZmxhdGlvbiwgdGhleSBjb3VsZCBhbHNvIGZ1ZWwgZnVydGhlciBpbmNyZWFzZXMgb2YgdGhlIEJyYXppbGlhbiByZWFsICBhcyBmb3JlaWduIGludmVzdG9ycyBmbGVlIG5lYXItemVybyBpbnRlcmVzdCByYXRlcyBpbiBtb3JlIGRldmVsb3BlZCBlY29ub21pZXMuIFRob3NlIHdvcnJpZXMgaGF2ZSBwcm9tcHRlZCBjcmllcyBvZiBhICJnbG9iYWwgY3VycmVuY3kgd2FyIiBpbiBzZXZlcmFsIGRldmVsb3BpbmcgZWNvbm9taWVzLiBUaGUgY2VudHJhbCBiYW5rIGhhcyBhbHNvIHRha2VuIG90aGVyIHN0ZXBzIHRvIGN1cmIgdGhlIGN1cnJlbmN5LiBJdCByYWlzZWQgdGhlIHBlcmNlbnRhZ2UgaXQgbWFrZXMgYmFua3MgaG9sZCBmcm9tIGRlcG9zaXRzIGFuZCBhbm5vdW5jZWQgaXQgY291bGQgc3RhcnQgaG9sZGluZyBhdWN0aW9ucyB0byBidXkgY3VycmVuY3kgZm9yd2FyZHMuICJJdCdzIGEgdHJhZGUtb2ZmOiBZb3UgZWl0aGVyIGFjY2VwdCBhIGhpZ2hlci12YWx1ZSBjdXJyZW5jeSBvciBhY2NlcHQgaW1wbGljaXRseSBzb21lIGluZmxhdGlvbiwiIFNoZWFyaW5nIGFkZGVkLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAS3GDpMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDA1ZjhhMmIzM2I4NTIyZDc=</field><field name="symbol" class="java.lang.String">rO0ABXQABVJUTlRG</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAS3LNO8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBVOFHrhR64</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBVOFHrhR64</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBVOFHrhR64</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBVOFHrhR64</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUN64UeuFI</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGYwNTAyZDI4NzJiODA5ZDU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mM7/AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExOTcw</field><field name="title" class="java.lang.String">rO0ABXQAPU1leGljbyBQZXNvIFNsaWRlcyB0byBXb3JzdCBGcm9tIEZpcnN0IEFtaWQgVVMgR3Jvd3RoIENvbmNlcm4=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATrzM/cAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGExMTA1ZjgzMjFiNjUxMjI=</field><field name="symbol" class="java.lang.String">rO0ABXQACUJOUy1QTi5UTw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATr4WlMAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6bhR64Ueu</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6cKPXCj1x</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6QAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6QAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3bhR64Ueu</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAKjA==</field><field name="id" class="java.lang.String">rO0ABXQAEGRjZjE1NmRiYmY4NjQ1NmU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mH+VAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDcxNjE=</field><field name="title" class="java.lang.String">rO0ABXQAN0phcGFuJ3MgU2hvY2sgVGhlcmFweSBSaXNrcyBEaXN0dXJiaW5nIEVtZXJnaW5nIE1hcmtldHM=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4q9oiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGUxZWQ1YzI3ZTM5YjExNWQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lQQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4wHOSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7HCj1wo9c</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7HCj1wo9c</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7HCj1wo9c</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7HCj1wo9c</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4LhR64Ueu</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGJkNTRhZjE5ZTVhMWRmMmM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHUiAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExOTEy</field><field name="title" class="java.lang.String">rO0ABXQAMVNvcm9zIEJ1eXMgR29sZCBhcyBSZWNvcmQgUHJpY2VzIFNlZW4gb24gU3RpbXVsdXM=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATsXQHsAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDVmZGM3ZDgxM2YzN2ViNjE=</field><field name="symbol" class="java.lang.String">rO0ABXQABUFVTEdG</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATscZtcAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBAzMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBAzMzMzMzN</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBAzMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBAzMzMzMzN</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBAzMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGUwODJmNjExYTI2MzUwMGY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKrgAAAA==</field></document></documents><date>2015-05-07T06:12:34-0500</date></cacheEntry>
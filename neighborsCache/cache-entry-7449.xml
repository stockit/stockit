<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0DwVXZXJlIHB1Ymxpc2hpbmcgdGhpcyB3ZWJzaXRlIHRvIGV4cGxhaW4gaG93IHdlIGhhbmRsZSB5b3VyIHBlcnNvbmFsIGluZm9ybWF0aW9uIHdoYXQgd2UgZG8gYW5kIGRvbnQgY29sbGVjdCBhbmQgd2h5IFRpbSBDb29rIGNoaWVmIGV4ZWN1dGl2ZSBvZmZpY2VyIHNhaWQgaW4gYSBtZXNzYWdlIHBvc3RlZCBvbiB0aGUgY29tcGFueXMgd2Vic2l0ZSBXZWRuZXNkYXkgUHJpdmFjeSBpcyBhIGtleSBpc3N1ZSBmb3IgQXBwbGUgYXMgaXQgcHJlcGFyZXMgdG8gcm9sbCBvdXQgbmV3IHNlcnZpY2VzIHRoYXQgd2lsbCByZXF1aXJlIHBlb3BsZSB0byB0cnVzdCBpdCB3aXRoIHNlbnNpdGl2ZSBpbmZvcm1hdGlvbiBBcHBsZSBsYXN0IHdlZWsgaW50cm9kdWNlZCBhIG5ldyBzbWFydCB3YXRjaCB3aXRoIGZlYXR1cmVzIHN1Y2ggYXMgaGVhbHRoIHRyYWNraW5nIGFsb25nIHdpdGggYSBtb2JpbGVwYXltZW50IHN5c3RlbSBjYWxsZWQgQXBwbGUgUGF5IFRoZSBjb21wYW55IHdpbGwgc3RhcnQgc2VsbGluZyBpdHMgbGF0ZXN0IGlQaG9uZSBtb2RlbHMgaW4gc3RvcmVzIG9uIFNlcHQgMTkgYXMgdGhlIEN1cGVydGlubyBDYWxpZm9ybmlhYmFzZWQgY29tcGFueSByZWZyZXNoZXMgaXRzIHByb2R1Y3QgbGluZXVwIGFoZWFkIG9mIHRoZSBob2xpZGF5IHNob3BwaW5nIHNlYXNvbiBUaGV5cmUgaW4gc29tZSBzZW5zZSB0cnlpbmcgdG8gZGlzdGluZ3Vpc2ggdGhlbXNlbHZlcyBmcm9tIEdvb2dsZSBmcm9tIEZhY2Vib29rIGFuZCBvdGhlcnMgdGhhdCBiYXNpY2FsbHkgbW9uZXRpemUgeW91ciBwZXJzb25hbCBpbmZvcm1hdGlvbiBDbGlmZm9yZCBOZXVtYW4gZGlyZWN0b3Igb2YgdGhlIFVuaXZlcnNpdHkgb2YgU291dGhlcm4gQ2FsaWZvcm5pYXMgQ2VudGVyIGZvciBDb21wdXRlciBTeXN0ZW1zIFNlY3VyaXR5IHNhaWQgaW4gYSB0ZWxlcGhvbmUgaW50ZXJ2aWV3IE9mIGNvdXJzZSB0aGV5dmUgZ290IGEgbGl0dGxlIGJpdCBvZiBhIGx1eHVyeSB0byBkbyB0aGF0IGJlY2F1c2UgdGhleSBtYWtlIHNvIG11Y2ggbW9yZSBmcm9tIHRoZSBkZXZpY2VzICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNlY3VyZSBEYXRhIEFwcGxlIGRlc2NyaWJlZCBob3cgaXRzIG5ldyBvcGVyYXRpbmcgc3lzdGVtIGZvciBtb2JpbGUgZGV2aWNlcyBlbmNyeXB0cyBtZXNzYWdlcyBpbiBhIHdheSB0aGF0IGNhbnQgYmUgYWNjZXNzZWQgd2l0aG91dCB0aGUgdXNlcnMgcGFzc2NvZGUgUGVyc29uYWwgZGF0YSBvbiBkZXZpY2VzIHJ1bm5pbmcgQXBwbGVzIG5ldyBpT1MgYXJlIHBsYWNlZCB1bmRlciB0aGUgdXNlcnMgcGFzc2NvZGUgYW5kIGNhbnQgYmUgYnlwYXNzZWQgdGhlIGNvbXBhbnkgc2FpZCBVbmxpa2Ugb3RoZXIgY29tcGFuaWVzIG1lc3NhZ2luZyBzZXJ2aWNlcyBBcHBsZSBkb2VzbnQgc2NhbiB5b3VyIGNvbW11bmljYXRpb25zIGFuZCB3ZSB3b3VsZG50IGJlIGFibGUgdG8gY29tcGx5IHdpdGggYSB3aXJldGFwIG9yZGVyIGV2ZW4gaWYgd2Ugd2FudGVkIHRvIHRoZSBwb2xpY3kgc2FpZCBVbmxpa2Ugb3VyY29tcGV0aXRvcnMgQXBwbGUgY2Fubm90IGJ5cGFzcyB5b3VyIHBhc3Njb2RlIGFuZCB0aGVyZWZvcmUgY2Fubm90IGFjY2VzcyB0aGlzIGRhdGEgU28gaXRzIG5vdCB0ZWNobmljYWxseSBmZWFzaWJsZSBmb3IgdXMgdG8gcmVzcG9uZCB0byBnb3Zlcm5tZW50IHdhcnJhbnRzIGZvciB0aGUgZXh0cmFjdGlvbiBvZiB0aGlzIGRhdGEgZnJvbSBkZXZpY2VzIGluIHRoZWlyIHBvc3Nlc3Npb24gcnVubmluZyBpT1M4IFRoZSBpc3N1ZSBvdmVyIGdvdmVybm1lbnQgYWNjZXNzIHRvIG1vYmlsZXBob25lIGRhdGEgd2FzIHRha2VuIHVwIGJ5IHRoZSBVUyBTdXByZW1lIENvdXJ0IGVhcmxpZXIgdGhpcyB5ZWFyIFRoZSBjb3VydCBydWxlZCBpbiBKdW5lIHRoYXQgcG9saWNlIG11c3QgdXN1YWxseSBvYnRhaW4gYSB3YXJyYW50IGJlZm9yZSB0aGV5cmUgYWJsZSB0byBzZWFyY2ggdGhlIHBob25lIG9mIGEgcGVyc29uIGJlaW5nIGFycmVzdGVkICAgICAgICAgICAgICAgICAgICAgICAgIFByaXZhY3kgQ29uY2VybnMgVGhlIGFubm91bmNlbWVudHMgZm9sbG93IGNvbmNlcm5zIHJhaXNlZCBhYm91dCBwcml2YWN5IGFmdGVyIHBpY3R1cmVzIG9mIG5ha2VkIGNlbGVicml0aWVzIHN1Y2ggYXMgS2F0ZSBVcHRvbiBhbmQgSmVubmlmZXIgTGF3cmVuY2Ugd2VyZSBwb3N0ZWQgb24gdGhlIEludGVybmV0IFdoaWxlIEFwcGxlIGhhcyBzYWlkIGl0cyBzeXN0ZW1zIHdlcmVudCBicmVhY2hlZCBoYWNrZXJzIG1vc3QgbGlrZWx5IGJyb2tlIGludG8gQXBwbGUgaUNsb3VkIGFjY291bnRzIHdoaWNoIGJhY2sgdXAgZGF0YSBhbmQgaW1hZ2VzIGZyb20gZGV2aWNlcyBzdWNoIGFzIHRoZSBpUGhvbmUgYW5kIGlQYWQgV2hpbGUgZGF0YSBjYW4gYmUgYmFja2VkdXAgb250byBpQ2xvdWQgdGhlIGZlYXR1cmUgY2FuIGFsc28gYmUgdHVybmVkIG9mZiBUaGUgbmV3IEFwcGxlIHByaXZhY3kgcG9saWN5IHdlYnNpdGUgZW5jb3VyYWdlcyB1c2VycyB0byBtYW5hZ2UgdGhlaXIgcHJpdmFjeSB3aXRoIHZhcmlvdXMgc2V0dGluZ3MgYW5kIHByb3ZpZGVzIHRpcHMgdG8gYXZvaWQgcGhpc2hpbmcgc2NhbXMgVGhleSB3ZXJlIHBoaXNoZWQgQ29vayBzYWlkIGluIGFuIGludGVydmlldyB3aXRoIENoYXJsaWUgUm9zZSBhdCBCbG9vbWJlcmcgaGVhZHF1YXJ0ZXJzIGluIE5ldyBZb3JrIGxhc3Qgd2VlayBNeSB1bmRlcnN0YW5kaW5nIGlzIGl0IHdhc250IGEgYnJlYWNoIHRoZXJlIGVpdGhlciBvZiB0aGUgaW5mcmFzdHJ1Y3R1cmUgSXQgd2FzIGEgcGhpc2hpbmcgZXhwZWRpdGlvbiBUaGVyZSBhcmUgbG90cyBvZiBiYWQgcGVvcGxlIHRoYXQgZG8gdGhpcyAgICAgICAgICAgICAgICAgICAgICAgICAgIEN1c3RvbWVyIERhdGEgQXBwbGUgbGFpZCBvdXQgaXRzIHBvbGljaWVzIG9uIGhlYWx0aCBkYXRhIG5vdGluZyB0aGF0IHVzZXJzIGhhdmUgc3BlY2lmaWMgY29udHJvbCBvdmVyIHdoYXQgaXMgc2hhcmVkIHdpdGggYXBwbGljYXRpb25zIG9uIGRldmljZXMgYW5kIHRoYXQgYXBwIGRldmVsb3BlcnMgYXJlIHByb2hpYml0ZWQgZnJvbSBzZWxsaW5nIG9yIHNoYXJpbmcgdGhhdCBpbmZvcm1hdGlvbiB0byBhZHZlcnRpc2VycyBkYXRhIGJyb2tlcnMgb3IgaW5mb3JtYXRpb24gcmVzZWxsZXJzIEFwcGxlIGhhcyBiZWVuIGZhY2luZyBtb3JlIHF1ZXN0aW9ucyBhYm91dCB0aGUgcHJpdmFjeSBvZiB1c2VycyBkYXRhIENvbm5lY3RpY3V0IEF0dG9ybmV5IEdlbmVyYWwgR2VvcmdlIEplcHNlbiBoYXMgYXNrZWQgZm9yIG1lZXRpbmcgd2l0aCB0aGUgY29tcGFueSBvdmVyIHByaXZhY3kgcHJvdGVjdGlvbnMgZm9yIHVzZXJzIG9mIHRoZSBjb21wYW55cyB3YXRjaCBPdXIgYnVzaW5lc3MgaXMgbm90IGJhc2VkIG9uIGhhdmluZyBpbmZvcm1hdGlvbiBhYm91dCB5b3UgeW91cmUgbm90IG91ciBwcm9kdWN0IENvb2sgc2FpZCBpbiB0aGUgaW50ZXJ2aWV3IFdlIHJ1biBhIHZlcnkgZGlmZmVyZW50IGNvbXBhbnkgSSB0aGluayBldmVyeW9uZSBoYXMgdG8gYXNrIGhvdyBkbyBjb21wYW5pZXMgbWFrZSB0aGVpciBtb25leSBGb2xsb3cgdGhlIG1vbmV5QW5kIGlmIHRoZXlyZSBtYWtpbmcgbW9uZXkgbWFpbmx5IGJ5IGNvbGxlY3RpbmcgZ29icyBvZiBwZXJzb25hbCBkYXRhIEkgdGhpbmsgeW91IGhhdmUgYSByaWdodCB0byBiZSB3b3JyaWVkIFNlcGFyYXRlbHkgQXBwbGUgc2FpZCBXZWRuZXNkYXkgdGhhdCBpdHMgZGVsYXlpbmcgdGhlIHJlbGVhc2Ugb2YgbmV3IGhlYWx0aHRyYWNraW5nIHNvZnR3YXJlIGEga2V5IGZlYXR1cmUgb2YgdGhlIG5ldyBtb2JpbGVvcGVyYXRpbmcgc3lzdGVtIGR1ZSB0byBhIHNvZnR3YXJlIGJ1Z3QABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0xMi0wM1QwMDowMDowMFogVE8gMjAxNC0wNy0xMFQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDgxMDA=</field><field name="title" class="java.lang.String">rO0ABXQAQFRlbGVjb20gRmlybXMgTWluZSBmb3IgR29sZCBpbiBCaWcgRGF0YSBEZXNwaXRlIFByaXZhY3kgQ29uY2VybnM=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAURieoMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDhkMzJmODI2ODM0ZTk3ZmU=</field><field name="symbol" class="java.lang.String">rO0ABXQACUhPVC1VTi5UTw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAURnoN8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAnZmZmZmZm</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAnZmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAnMzMzMzMz</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAnTMzMzMzN</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlHrhR64Uf</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABwHA==</field><field name="id" class="java.lang.String">rO0ABXQAEDQ5MDZhMzRjODUxYjMwNzc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEXpAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIzMTEw</field><field name="title" class="java.lang.String">rO0ABXQAPkdvb2dsZSdzIE5lc3QgdG8gQnV5IFNlY3VyaXR5IFN0YXJ0dXAgRHJvcGNhbSBmb3IgJDU1NSBNaWxsaW9u</field><field name="content" class="java.lang.String">rO0ABXQOs0dvb2dsZSBJbmMu4oCZcyBOZXN0IExhYnMgaXMgYWNxdWlyaW5nIERyb3BjYW0gSW5jLiBmb3IgJDU1NSBtaWxsaW9uIHRvIGJvb3N0IGl0cyBvZmZlcmluZ3MgZm9yIHRoZSBjb25uZWN0ZWQgaG9tZS4gVGhlIGRlYWwgd2lsbCBiZSBpbiBjYXNoIGFuZCBzdWJqZWN0IHRvIGFkanVzdG1lbnRzLCBOZXN0IHNhaWQgaW4gYSBzdGF0ZW1lbnQgbGF0ZSBGcmlkYXkuIERyb3BjYW0gbWFrZXMgaW4taG9tZSBjYW1lcmFzIHRoYXQgY2FuIGJlIGNoZWNrZWQgZnJvbSBhIHNtYXJ0cGhvbmUgYW55d2hlcmUgaW4gdGhlIHdvcmxkLCBhbiBvZmZlcmluZyB0aGF0IHdvdWxkIGJyb2FkZW4gTmVzdOKAmXMgcHJvZHVjdCBsaW5lLXVwIGludG8gaG9tZSBzZWN1cml0eS4gTmVzdCBzZWxscyBkaWdpdGFsIHRoZXJtb3N0YXRzIGFuZCBzbW9rZSBhbGFybXMgdGhhdCBjYW4gYWxzbyBiZSBjaGVja2VkIGFuZCBhZGp1c3RlZCByZW1vdGVseSBmcm9tIG1vYmlsZSBnYWRnZXRzLiDigJxXZSBjYXJlIHZlcnkgZGVlcGx5IGFib3V0IGhlbHBpbmcgcGVvcGxlIHN0YXkgY29ubmVjdGVkIHRvIHRoZWlyIGhvbWUsIGVzcGVjaWFsbHkgd2hlbiB0aGV54oCZcmUgbm90IGluIHRoZWlyIGhvbWUs4oCdIHNhaWQgTWF0dCBSb2dlcnMsIGNvLWZvdW5kZXIgb2YgTmVzdCwgd2hpY2ggaXMgYmFzZWQgaW4gUGFsbyBBbHRvLCBDYWxpZm9ybmlhLCBpbiBhbiBpbnRlcnZpZXcuIOKAnFRoaXMgaXMgYW5vdGhlciBvZmZlcmluZyB0aGF0IGhlbHBzIHBlb3BsZSBnZXQgaW5zaWdodHMgaW50byB0aGVpciBob21lLuKAnSBUaGUgcHVyY2hhc2UgdW5kZXJsaW5lcyBob3cgTmVzdCwgd2hpY2ggR29vZ2xlIGJvdWdodCBmb3IgYWJvdXQgJDMuMiBiaWxsaW9uIGVhcmxpZXIgdGhpcyB5ZWFyLCBpcyB3b3JraW5nIHRvIGJlY29tZSBhIGJpZ2dlciBwbGF5ZXIgb2YgY29ubmVjdGVkIGRldmljZXMgZm9yIGNvbnN1bWVycy4gVGhlIHRyZW5kIGlzIHBhcnQgb2YgYSB0ZWNobm9sb2d5IG1vdmVtZW50IGR1YmJlZCB0aGUg4oCcSW50ZXJuZXQgb2YgdGhpbmdzLOKAnSB3aGVyZSBtb3JlIGdhZGdldHMgYW5kIGV2ZXJ5ZGF5IGl0ZW1zIGFyZSBjb25uZWN0ZWQgdG8gdGhlIFdlYiBhbmQgY2FuIGRlbGl2ZXIgZGF0YSBhbmQgYmUgY29udHJvbGxlZCBieSBtb2JpbGUgZGV2aWNlcy4gVGhlIHByb2R1Y3RzIGdhdGhlciBkYXRhIG9uIGNvbnN1bWVyIGhhYml0cyBhbmQgdXNhZ2UuIFByaXZhY3kgZXhwZXJ0cyBoYXZlIHF1ZXN0aW9uZWQgaG93IEdvb2dsZSwgdGhlIHdvcmxk4oCZcyBsYXJnZXN0IHNlYXJjaCBlbmdpbmUsIHdvdWxkIHVzZSBOZXN04oCZcyBkYXRhLiBOZXN0IGhhcyBzYWlkIGl0cyBpbmZvcm1hdGlvbiB3aWxsIHJlbWFpbiBzZXBhcmF0ZSBmcm9tIGl0cyBwYXJlbnQgY29tcGFueS4gRHJvcGNhbeKAmXMgZGF0YSB3aWxsIGFsc28gcmVtYWluIGRpc3RpbmN0IGZyb20gR29vZ2xlLCBSb2dlcnMgc2FpZC4gICAgICAgICAgICAgICAgICAgICAgICAgICBEZWFsIE1hY2hpbmUgVGhlIGFjcXVpc2l0aW9uIGFkZHMgdG8gYSBncm93aW5nIGxpc3Qgb2YgcHVyY2hhc2VzIGJ5IEdvb2dsZSB0aGlzIHllYXIgYXMgaXQgbG9va3MgYmV5b25kIGl0cyBvd24gZW5naW5lZXJzIGZvciBuZXcgY2FwYWJpbGl0aWVzLiBUaGUgTW91bnRhaW4gVmlldywgQ2FsaWZvcm5pYS1iYXNlZCBjb21wYW55IGRpc2Nsb3NlZCBhdCBsZWFzdCBmaXZlIHB1cmNoYXNlcyBpbiBNYXkgYW5kIGhhcyBhbm5vdW5jZWQgYXQgbGVhc3QgdGhyZWUgbW9yZSBpbiBKdW5lLiBPbmUgb2YgdGhvc2Ugd2FzIHdhcyBhICQ1MDAgbWlsbGlvbiBkZWFsIGZvciBTa3lib3ggSW1hZ2luZyBJbmMuLCB3aGljaCBkZXNpZ25zIHNhdGVsbGl0ZXMgdGhhdCBjYW4gaGVscCBHb29nbGXigJlzIGVmZm9ydHMgYXJvdW5kIG1hcHBpbmcgYW5kIEludGVybmV0IGFjY2Vzcy4gTmVzdCwgd2hpY2ggd2FzIGNvLWZvdW5kZWQgYnkgZm9ybWVyIEFwcGxlIEluYy4gZXhlY3V0aXZlIFRvbnkgRmFkZWxsLCBoYXMgcnVuIGludG8gcHJvZHVjdCBjaGFsbGVuZ2VzIHJlY2VudGx5LiBJbiBBcHJpbCwgTmVzdCBzYWlkIGl0IHdhcyBzdXNwZW5kaW5nIHNhbGVzIG9mIGl0cyBzbW9rZSBhbGFybXMgYWZ0ZXIgaXQgZGV0ZXJtaW5lZCB0aGUgdW5pdHMgY291bGQgYmUgc3dpdGNoZWQgb2ZmIHVuaW50ZW50aW9uYWxseS4gVGhlIHByb2R1Y3RzIGFyZSBub3cgYmFjayBvbiB0aGUgbWFya2V0LiAgICAgICAgICAgICAgICAgICAgICAgICDigJhLaW5kcmVkIFNwaXJpdHPigJkgRHJvcGNhbSwgd2hpY2ggd2FzIGZvdW5kZWQgaW4gMjAwOSwgbGV0cyB1c2VycyBwbGFjZSBjYW1lcmFzIHRocm91Z2hvdXQgYSBob21lIGZvciBsaXZlLXZpZXdpbmcgYW5kIHJlY29yZGluZy4gVGhlIGNhbWVyYXMgYWxzbyBpbmNsdWRlIG9wdGlvbnMgZm9yIG5pZ2h0IHZpc2lvbiBhbmQgdHdvLXdheSB0YWxraW5nIHdpdGggYnVpbHQtaW4gbWljcm9waG9uZXMuIFRoZSBTYW4gRnJhbmNpc2NvLWJhc2VkIGNvbXBhbnnigJlzIGJhY2tlcnMgaW5jbHVkZSBBY2NlbCBQYXJ0bmVycyBhbmQgTWVubG8gVmVudHVyZXMuIERlYWwgZGlzY3Vzc2lvbnMgYmVnYW4gYSBsaXR0bGUgbW9yZSB0aGFuIGEgbW9udGggYWdvIGFmdGVyIE5lc3QgYXBwcm9hY2hlZCBEcm9wY2FtLCB3aGljaCB3YXNu4oCZdCBsb29raW5nIHRvIHNlbGwsIHNhaWQgTWFyayBTaWVnZWwsIG1hbmFnaW5nIGRpcmVjdG9yIGF0IE1lbmxvIFZlbnR1cmVzLiBUaGUgdGFsa3Mgd2VyZSBsZWQgYnkgRmFkZWxsIGFuZCBSb2dlcnMsIGhlIHNhaWQuIE1lbmxvIFZlbnR1cmVzIGludmVzdGVkIGFib3V0ICQ4IG1pbGxpb24gaW4gRHJvcGNhbSBpbiAyMDEyIHdoZW4gdGhlIHN0YXJ0dXAgd2FzIHZhbHVlZCBhdCBhcm91bmQgJDUwIG1pbGxpb24uIOKAnFRoZXJl4oCZcyB2ZXJ5IG11Y2ggb2YgYSBzaGFyZWQgdmlzaW9uIHRoZXJlLOKAnSBTaWVnZWwgc2FpZCBpbiBhbiBpbnRlcnZpZXcuIOKAnEhhZCB0aGlzIG5vdCBiZWVuIE5lc3QsIEkgdGhpbmsgaXQgbWlnaHQgaGF2ZSBtYWRlIGl0IGEgaGFyZGVyIGRlY2lzaW9uIHRvIG1ha2Uu4oCdIEFzIHBhcnQgb2YgdGhlIGFjcXVpc2l0aW9uLCBEcm9wY2Ft4oCZcyBzdGFmZiB3aWxsIG1vdmUgdG8gTmVzdOKAmXMgUGFsbyBBbHRvIG9mZmljZXMuIERyb3BjYW3igJlzIGNvLWZvdW5kZXJzIGluY2x1ZGUgQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXIgR3JlZyBEdWZmeSBhbmQgQ2hpZWYgT3BlcmF0aW5nIE9mZmljZXIgQWFtaXIgVmlyYW5pLiDigJxOZXN0IGFuZCBEcm9wY2FtIGFyZSBraW5kcmVkIHNwaXJpdHMs4oCdIER1ZmZ5IHdyb3RlIGluIGEgYmxvZyBwb3N0IGFib3V0IHRoZSBkZWFsLiDigJxCb3RoIHdlcmUgYm9ybiBvdXQgb2YgZnJ1c3RyYXRpb24gd2l0aCBvdXRkYXRlZCwgY29tcGxpY2F0ZWQgcHJvZHVjdHMgdGhhdCBkbyB0aGUgb3Bwb3NpdGUgb2YgbWFraW5nIGxpZmUgYmV0dGVyLuKAnSBUaGVyZSBjb3VsZCBiZSBOZXN0IGFuZCBEcm9wY2FtIG9mZmVyaW5ncyB0aGF0IGFyZSB0aWVkIHRvZ2V0aGVyIGFmdGVyIHRoZSBhY3F1aXNpdGlvbiwgUm9nZXJzIHNhaWQuIOKAnEdpdmVuIGhvdyBjbG9zZWx5IGFsaWduZWQgdGhlIHRlYW1zIGFyZSwgaW4gdGVybXMgb2Ygb3VyIHByb2R1Y3QgcGhpbG9zb3BoeSDigJQgd2Ugc2VlIGxvdHMgb2YgcHJvZHVjdCBvZmZlcmluZ3MgYW5kIHRpZS1pbnMgd2UgY291bGQgZG8gaW4gdGhlIGZ1dHVyZSzigJ0gaGUgc2FpZC4g4oCcV2UgaGF2ZW7igJl0IGZpZ3VyZWQgaXQgb3V0IHlldC7igJ0=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbB8fyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDhhOTEyM2JjYzdhOWU2ZDA=</field><field name="symbol" class="java.lang.String">rO0ABXQABFBBTlc=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbHGFiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUAo9cKPXD</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUceuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBT6FHrhR64</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUCuFHrhR7</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUCuFHrhR7</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAABLO2A==</field><field name="id" class="java.lang.String">rO0ABXQAEGU1OWM2Y2VhMDk0ZDFmZGE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJeTAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTI0ODc5</field><field name="title" class="java.lang.String">rO0ABXQALkdvb2dsZSBSZWRlc2lnbnMgQW5kcm9pZCB0byBQb3dlciBTbWFydHdhdGNoZXM=</field><field name="content" class="java.lang.String">rO0ABXQSA1RoZSAgSW50ZXJuZXQncyBtb3N0IGluZmx1ZW50aWFsIGNvbXBhbnkgaXMgdHJ5aW5nIHRvIHVubGVhc2ggYSBuZXcgZXJhIGluICBtb2JpbGUgY29tcHV0aW5nIHdpdGggYSB2ZXJzaW9uIG9mIGl0cyBBbmRyb2lkIHNvZnR3YXJlIHRhaWxvcmVkIGZvciAgaGlnaC10ZWNoIHdhdGNoZXMgYW5kIG90aGVyIGRldmljZXMgdGhhdCBjYW4gYmUgd29ybiBpbnN0ZWFkIG9mIGhlbGQuIFRoZSAgIkFuZHJvaWQgV2VhciIgb3BlcmF0aW5nIHN5c3RlbSByZWxlYXNlZCBUdWVzZGF5IGlzIGFuIGFsdGVyZWQgdmVyc2lvbiAgb2YgR29vZ2xlJ3MgcG9wdWxhciBzb2Z0d2FyZSB0aGF0IHBvd2VycyBtb3JlIHRoYW4gMSBiaWxsaW9uIG9mIHRoZSAgd29ybGQncyBzbWFydHBob25lcyBhbmQgdGFibGV0cy4gVGhlIG5ldyBzb2Z0d2FyZSB3aWxsIHJ1biBvbiBhbiBhcnJheSAgb2Ygc28tY2FsbGVkIHNtYXJ0d2F0Y2hlcyBzY2hlZHVsZWQgdG8gYmUgcmVsZWFzZWQgbGF0ZXIgdGhpcyB5ZWFyLiBUaGUgIEFuZHJvaWQgd2F0Y2hlcyB3aWxsIGJlIGxlc3MgY29uc3BpY3VvdXMg4oCUIGFuZCBwZXJoYXBzIGxlc3Mgb2Jub3hpb3VzIOKAlCAgdGhhbiBHb29nbGUgR2xhc3MsIHRoZSBoaWdoLXRlY2ggaGVhZHdlYXIgdGhhdCBpbmNsdWRlcyBhIHNtYWxsIGNhbWVyYSAgYW5kIHRodW1ibmFpbC1zaXplZCBkaXNwbGF5IHNjcmVlbiBhdHRhY2ggdG8gZnJhbWVzIHRoYXQgbG9vayBsaWtlIGEgIHBhaXIgb2Ygc3BlY3RhY2xlcy4gR29vZ2xlIHNvICBmYXIgaGFzIG9ubHkgc29sZCB0aGUgJDEsNTAwIEdsYXNzIGRldmljZSB0byBhIGxpbWl0ZWQgbnVtYmVyIG9mIHBlb3BsZSAga25vd24gYXMgImV4cGxvcmVycy4iIFNvbWUgb2YgdGhvc2UgZWFybHkgR2xhc3MgYWRvcHRlcnMgaGF2ZSBiZWVuICBtb2NrZWQgYXMgZ29vZnktbG9va2luZyBnZWVrcyB3aGlsZSBvdGhlcnMgaGF2ZSBiZWVuIHJpZGljdWxlZCBhbmQgIHNjb3JuZWQgZm9yIGJlaW5nIGFibGUgdG8gdGFrZSB2aWRlbyBhbmQgcGhvdG9zIHN1cnJlcHRpdGlvdXNseSB3aXRob3V0ICB0aGUgY29uc2VudCBvZiB0aG9zZSBhcm91bmQgdGhlbS4gTGlrZSAgR2xhc3MgYW5kIHNtYXJ0cGhvbmVzIHJ1bm5pbmcgb24gb3RoZXIgdmVyc2lvbnMgb2YgdGhlIHNvZnR3YXJlLCB0aGUgIEFuZHJvaWQgd2F0Y2hlcyB3aWxsIHJlc3BvbmQgdG8gdm9pY2UgY29tbWFuZHMgc3VjaCBhcyAiT2sgR29vZ2xlIiB0byAgcGxheSBhIHNwZWNpZmljIHNvbmcsIHNlbmQgYSB0ZXh0IG9yIG1ha2UgYSByZXN0YXVyYW50IHJlc2VydmF0aW9uLiBJdCAgd2lsbCBhbHNvIGZlYXR1cmUgYSB2aXJ0dWFsIGFzc2lzdGFudCwgY2FsbGVkIEdvb2dsZSBOb3csIHRvIGxlYXJuIGEgIHVzZXIncyByb3V0aW5lcyBhbmQgcHJlZmVyZW5jZSBzbyBpdCBjYW4gYXV0b21hdGljYWxseSBzaG93IGltcG9ydGFudCAgaW5mb3JtYXRpb24gdGhhdCBjYW4gYmUgc2VlbiB3aXRoIGEgcXVpY2sgbG9vayBhdCB0aGUgd3Jpc3QuIEdvb2dsZSAgaXMgYWxyZWFkeSB0cnlpbmcgdG8gY3JlYXRlIG1vcmUgdXNlcyBmb3IgQW5kcm9pZCB3YXRjaGVzIGJ5IG1ha2luZyB0aGUgIHNvZnR3YXJlIGF2YWlsYWJsZSB0byBjb21wdXRlciBwcm9ncmFtbWVycyBpbnRlcmVzdGVkIGluIG1ha2luZyBhcHBzICBmb3IgdGhlIHNvZnR3YXJlLiBDdWx0aXZhdGluZyAgbW9yZSBhcHBsaWNhdGlvbnMgd2lsbCBiZSBjcnVjaWFsIGJlY2F1c2Ugc21hcnR3YXRjaGVzIHByb2JhYmx5IG1heSAgbmV2ZXIgYmVjb21lIHRoZSBtYWluIGRldmljZSB0aGF0IHBlb3BsZSB1c2UgdG8gaGVscCBtYW5hZ2UgdGhlaXIgbGl2ZXMsICBzYWlkIEdhcnRuZXIgYW5hbHlzdCBCcmlhbiBCbGF1LiBUaGF0IG1lYW5zIGNvbnN1bWVycyBhcmUgZ29pbmcgdG8gaGF2ZSAgdG8gc2VlIG1vcmUgY29tcGVsbGluZyBmZWF0dXJlcyB0byBiZSBwZXJzdWFkZWQgdG8gc3BlbmQgYW5vdGhlciAkMTAwICBvciAkMjAwIGZvciBhIGNvbXBsZW1lbnRhcnkgZGV2aWNlIHRvIGEgc21hcnRwaG9uZSBvciB0YWJsZXQuICJGYXNoaW9uICBpcyBhIGJpZyBpbmR1c3RyeSwgYnV0IHNlbGxpbmcgdGhlc2Ugd2F0Y2hlcyB3aWxsIGJlIG1vcmUgb2YgIGNoYWxsZW5nZSwiIEJsYXUgcHJlZGljdGVkLiAiV2Ugc3RpbGwgbmVlZCB0byBzZWUgd2hhdCBraW5kIG9mIGNvb2wgYXBwcyAgdGhlcmUgd2lsbCBiZSBhbmQgd2hhdCBraW5kIG9mIG5ldyBiZWhhdmlvcnMgdGhleSB3aWxsIGVuYWJsZS4iIFRoZSAgZmlyc3QgQW5kcm9pZCB3YXRjaCBtYXkgY29tZSBmcm9tIE1vdG9yb2xhIE1vYmlsaXR5LCBhIEdvb2dsZSAgc3Vic2lkaWFyeSB0aGF0IGlzIGluIHRoZSBwcm9jZXNzIG9mIGJlaW5nIHNvbGQgdG8gTGVub3ZvIEdyb3VwLiAgTW90b3JvbGEgYWxyZWFkeSBoYXMgYnVpbHQgYSBwcm90b3R5cGUgb2YgaXRzIEFuZHJvaWQgd2F0Y2gsIGNhbGxlZCAgIk1vdG8gMzYwLCIgdGhhdCB3aWxsIGdvIG9uIHNhbGUgdGhpcyBzdW1tZXIuIE5vIGRldGFpbHMgb24gcHJpY2luZyB3ZXJlICBhbm5vdW5jZWQuIExHIEVsZWN0cm9uaWNzLCBhIGZyZXF1ZW50IEdvb2dsZSBwYXJ0bmVyIGluIHRoZSAgc21hcnRwaG9uZSBhbmQgdGFibGV0IG1hcmtldHMsIGFuZCBmYXNoaW9uIGFjY2Vzc29yeSBtYWtlciBGb3NzaWwgR3JvdXAgIGFsc28gc2F5IHRoZXkgd2lsbCBzaGFyZSBtb3JlIGRldGFpbHMgYWJvdXQgdGhlaXIgQW5kcm9pZCB3YXRjaGVzIGluIHRoZSAgY29taW5nIG1vbnRocy4gT3RoZXIgZGV2aWNlIG1ha2VycyB3b3JraW5nIG9uIEFuZHJvaWQgd2F0Y2hlcyBpbmNsdWRlICBBc3VzLCBIVEMgYW5kIFNhbXN1bmcgRWxlY3Ryb25pY3MsIGFjY29yZGluZyB0byBHb29nbGUuIFRob3NlICBjb21wYW5pZXMgd2lsbCBsaWtlbHkgYmUgY29tcGV0aW5nIGFnYWluc3QgYSBoaWdobHkgYW50aWNpcGF0ZWQgIHNtYXJ0d2F0Y2ggZnJvbSBpUGhvbmUgbWFrZXIgQXBwbGUgSW5jLiB0aGF0IGlzIGV4cGVjdGVkIHRvIGJlIHVudmVpbGVkICBsYXRlciB0aGlzIHllYXIuIFRydWUgdG8gaXRzIHNlY3JldGl2ZSBuYXR1cmUsIEFwcGxlIGhhc24ndCBjb25maXJtZWQgIGFueSBwbGFucyB0byBhZGQgYSB3YXRjaCB0byBpdHMgcHJvZHVjdCBsaW5lLCBhbHRob3VnaCBDRU8gVGltIENvb2sgaGFzICBsZWZ0IGxpdHRsZSBkb3VidCBoZSBpcyBpbnRyaWd1ZWQgYnkgdGhlIGNvbmNlcHQuIFRoZXJlIGFyZSAgYWxyZWFkeSBzZXZlcmFsIG90aGVyIHNtYXJ0d2F0Y2hlcyBvbiB0aGUgbWFya2V0LCBpbmNsdWRpbmcgYSByZWNlbnRseSAgcmVsZWFzZWQgdGltZXBpZWNlIGZyb20gU2Ftc3VuZyB0aGF0IHJ1bnMgb24gdGhhdCBjb21wYW55J3Mgb3duICBvcGVyYXRpbmcgc3lzdGVtLiBTbyBmYXIsICB0aG9zZSB3YXRjaGVzIGhhdmUgcHJvdmVuIHRvIGJlIG5vdmVsdGllcyB0aGF0IHByaW1hcmlseSBhcHBlYWwgdG8gIGdhZGdldC1sb3ZpbmcgZ2Vla3MgYW5kIHBoeXNpY2FsIGZpdG5lc3MgZW50aHVzaWFzdHMgbG9va2luZyBmb3IgbW9yZSAgdG9vbHMgdG8gaGVscCB0cmFjayB0aGVpciB3b3Jrb3V0cyBhbmQgZ2VuZXJhbCBoZWFsdGguIEdvb2dsZSdzICBuZXcgdGFrZSBvbiBBbmRyb2lkIG1heSBoZWxwIGN1bHRpdmF0ZSBtb3JlIG1haW5zdHJlYW0gYXBwZWFsIGZvciAgc21hcnR3YXRjaGVzLiBUaGUgc29mdHdhcmUgYWxyZWFkeSBpcyB0aGUgbW9zdCBwb3B1bGFyIHNtYXJ0cGhvbmUgIG9wZXJhdGluZyBzeXN0ZW0gaW4gdGhlIHdvcmxkIHdpdGggYSA3OSBwZXJjZW50IHNoYXJlIG9mIHRoZSBtYXJrZXQsICBhY2NvcmRpbmcgdG8gdGhlIHJlc2VhcmNoIGZpcm0gSW50ZXJuYXRpb25hbCBEYXRhIENvcnAuIEFwcGxlJ3MgaU9TICBzb2Z0d2FyZSByYW5rcyBzZWNvbmQgd2l0aCBhIDE1IHBlcmNlbnQgbWFya2V0IHNoYXJlLCBzbyB0aGF0IGNvbXBhbnkncyAgZW50cmFuY2UgaW50byB0aGUgc21hcnR3YXRjaCBjYXRlZ29yeSB3b3VsZCBhbHNvIGhlbHAgc3B1ciBtb3JlICBpbm5vdmF0aW9uIGluIHRoZSBjYXRlZ29yeS4gU21hcnR3YXRjaGVzICBhbmQgR29vZ2xlIEdsYXNzIGFyZSBqdXN0IHR3byBvZiB0aGUgZmlyc3QgZXhhbXBsZXMgb2YgaG93IGNvbXB1dGluZyAgZGV2aWNlcyBpbmNyZWFzaW5nbHkgYXJlIGV4cGVjdGVkIHRvIGJlY29tZSBsaWtlIGFwcGVuZGFnZXMgdG8gdGhlIGh1bWFuICBib2R5IGFzIHRlY2hub2xvZ3kgYWR2YW5jZXMgYW5kIGNvbm5lY3RpbmcgdG8gdGhlIEludGVybmV0IGJlY29tZXMgYXMgIHJlZmxleGl2ZSBhcyBicmVhdGhpbmcuIEdvb2dsZSBleGVjdXRpdmVzIGhhdmUgZXZlbiBvcGVubHkgdGFsa2VkIGFib3V0ICBkYXkgd2hlbiBpdCBtaWdodCBiZSBwb3NzaWJsZSB0byBoZWxwIHBlb3BsZSBsaXZlIGxvbmdlciBhbmQgbW9yZSAgZW5qb3lhYmxlIGxpdmVzIGJ5IHBsYW50aW5nIGNoaXBzIGluIHRoZWlyIGhlYWRzIG9yIHVuZGVyIHRoZWlyIHNraW4uICJUaGUgIHBvc3NpYmlsaXRpZXMgd2l0aCBkZXZpY2VzIHRoYXQgeW91IHdlYXIgb24geW91ciBib2R5IGFyZSBlbmRsZXNzLCIgIERhdmlkIFNpbmdsZXRvbiwgYW4gQW5kcm9pZCBkaXJlY3RvciBvZiBlbmdpbmVlcmluZywgc2FpZCBpbiBhbiBvbmxpbmUgIHZpZGVvIHBvc3RlZCBUdWVzZGF5Lg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUTTj3yAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDgzNDIwYWZhYjk2YjZlN2I=</field><field name="symbol" class="java.lang.String">rO0ABXQABE1TQ0E=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUTYtdiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4go9cKPXD</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4pmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4gAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4keuFHrhS</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3dcKPXCj2</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAqlA==</field><field name="id" class="java.lang.String">rO0ABXQAEDk5ZTc5MGI5NzkzYjNmMjE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mG0OAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE5OTc5</field><field name="title" class="java.lang.String">rO0ABXQANUlCTSBXaXRoaG9sZHMgSm9iIEN1dHMgRGF0YSwgTWFraW5nIEFnZSBDbGFpbXMgSGFyZGVy</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUXuzUCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDA4NTNmMzJhOTQ1Yjg1OGE=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lCTQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUXz85yAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBoGUeuFHrh</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBoIPXCj1wp</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBn+FHrhR64</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBoBhR64Ueu</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBnjhR64Ueu</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAACH5qA==</field><field name="id" class="java.lang.String">rO0ABXQAEDM5MGI5ODg3ZDJlNGQ2N2U=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFhtAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQyOTU=</field><field name="title" class="java.lang.String">rO0ABXQARENydW1ibGluZyBVUyBFbmVyZ3kgR3JpZCBHZXRzIEpvbHQgQ3JlYXRpbmcgU21hcnRlciBQb3dlciBpbiBIb3VzdG9u</field><field name="content" class="java.lang.String">rO0ABXRBuk9uIGEgcmVjZW50IG11Z2d5IG1vcm5pbmcsIEplZmYgTXllcnNvbiwgYSBtYW5hZ2VyIGZvciBIb3VzdG9uLWJhc2VkIENlbnRlclBvaW50IEVuZXJneSBJbmMuLCBpcyBwb2ludGluZyB0byBtdW5kYW5lLWxvb2tpbmcgZ3JheSBtZXRhbCBib3hlcyB1cCBvbiBhIHdvb2RlbiB1dGlsaXR5IHBvbGUuIFRoZXkgbWFzayBoaWdoLXRlY2ggY2FwYWJpbGl0aWVzOiBTdGF0ZS1vZi10aGUtYXJ0IHdpcmVsZXNzIHJlbGF5cyB0aGF0IGNvbGxlY3QgaW5mb3JtYXRpb24gb24gY3VzdG9tZXJz4oCZIHBvd2VyIHVzZSBpbiAxNS1taW51dGUgaW50ZXJ2YWxzLiBIZeKAmXMgc2hvd2luZyBhIHZpc2l0b3IgYXJvdW5kIEJyYWVzd29vZCwgYSB0cmVlLWxpbmVkIG5laWdoYm9yaG9vZCBvZiBzZXZlcmFsIGh1bmRyZWQgMTk1MHMtZXJhIHJhbmNoIGhvbWVzIGFib3V0IHNldmVuIG1pbGVzICgxMSBraWxvbWV0ZXJzKSBzb3V0aHdlc3Qgb2YgZG93bnRvd24uIEl04oCZcyBiZWluZyByZWZpdHRlZCBmb3IgQ2VudGVyUG9pbnTigJlzIOKAnGludGVsbGlnZW50IGdyaWQu4oCdIFRoaXMgZmlyc3QgcGhhc2UgaXMgc2NoZWR1bGVkIHRvIGJlIGNvbXBsZXRlZCBieSB5ZWFyLWVuZCBhdCBhIGNvc3Qgb2YgJDEzOCBtaWxsaW9uLCB3aXRoIHRoZSBoZWxwIG9mIGEgJDUwIG1pbGxpb24gVS5TLiBncmFudC4gV2hlbiBmdWxseSBkZXBsb3llZCwgdGhlIGludGVsbGlnZW50IGdyaWQgd2lsbCBlbmNvbXBhc3MgYSBuZXR3b3JrIG9mIHNlbnNvcnMsIHN3aXRjaGVzLCBzbWFydCBtZXRlcnMgYW5kIGRhdGEtYW5hbHlzaXMgc29mdHdhcmUgdGhhdCB3aWxsIHVsdGltYXRlbHkgZ2l2ZSB0aGUgdXRpbGl0eSB1bnByZWNlZGVudGVkIGNvbnRyb2wgYW5kIGluc2lnaHQgaW50byBpdHMgYWxtb3N0IDUwLDAwMCBtaWxlcyBvZiBwb3dlciBsaW5lcyBhbmQgc3lzdGVtcy4gTW9uaXRvcmluZyBjZW50ZXJzIHdpbGwgY29sbGVjdCBhbmQgcGFyc2UgcmVhbC10aW1lIGRhdGEsIGluY2x1ZGluZyBsb2NhdGlvbiBvZiBzZXJ2aWNlIHRydWNrcyBhbmQgY3Jld3MuIEluIHRoZSBvbGQgZGF5cywgb3V0YWdlcyBjb3VsZCB0YWtlIGhvdXJzLCBldmVuIGRheXMgdG8gZmluZCwgcGFydGljdWxhcmx5IGluIHRoZSB3YWtlIG9mIGRhbWFnaW5nIHN0b3Jtcy4gQWxyZWFkeSwgQ2VudGVyUG9pbnQgY2FuIG1vcmUgcXVpY2tseSByZXNwb25kIHRvIG91dGFnZXMgYnkgcGlucG9pbnRpbmcgdGhlIGZhdWx0IGRvd24gdG8gYSBjaXR5IGJsb2NrLiBJbiB0aGUgZnV0dXJlLCBpdCB3aWxsIGRlcGxveSBhbGdvcml0aG1zIHRoYXQgY2FuIHByZWRpY3QgZmFpbHVyZXMgYmVmb3JlIHRoZXkgb2NjdXIuIFRoZSBzeXN0ZW0gYWxzbyBsZXRzIGN1c3RvbWVycyBpbiBlbmVyZ3ktY29uc2VydmF0aW9uIHByb2dyYW1zIGdldCBpbnRlcmFjdGl2ZSBwcmljZSBkYXRhIHNvIHRoYXQgdGhleSBjYW4gdGltZSBwb3dlciB1c2FnZSB0byBsb3ctY29zdCBwZXJpb2RzIHdoaWxlIHR1cm5pbmcgZG93biB0aGVybW9zdGF0cyBkdXJpbmcgcGVhayB0aW1lcyDigJQgYSBmZWF0dXJlIHRoYXQgaGVscHMgdGhlIHV0aWxpdHkgbWFuYWdlIGxvYWQuIE1lY2hhbmljYWwgU3lzdGVtIOKAnFdl4oCZcmUgYnJpbmdpbmcgYSBtZWNoYW5pY2FsIHN5c3RlbSBpbnRvIHRoZSBkaWdpdGFsIGFnZSzigJ0gc2FpZCBNeWVyc29uLCBDZW50ZXJwb2ludOKAmXMgdXRpbGl0eSBkaXJlY3RvciBvZiBidXNpbmVzcyB0cmFuc2Zvcm1hdGlvbi4gQW5kIG5vbmUgdG9vIHNvb24sIHRvby4gVGhlIFUuUy4gdXRpbGl0eSBzeXN0ZW0gc2l0cyBhc3RyaWRlIG9uZSBvZiB0aGUgd29ybGTigJlzIGdyZWF0IG1hcnZlbHMsIHRoZSBncmlkLiBBbmQgYXMgd2l0aCBzbyBtdWNoIG9mIFUuUy4gaW5mcmFzdHJ1Y3R1cmUsIGl04oCZcyBjcnVtYmxpbmcgYmVjYXVzZSBvZiB0b28gbGl0dGxlIGludmVzdG1lbnQgYW5kIGxhY2sgb2YgaW1hZ2luYXRpb24uIEEgJDg3NiBiaWxsaW9uIGFzc2V0LCB0aGUgZ3JpZCBpcyBhbiBhbWFsZ2FtIG9mIGFsbW9zdCA3LDAwMCBwb3dlciBwbGFudHMgdGhhdCBkaXNjaGFyZ2UgZWxlY3RyaWNpdHkgb3ZlciA0NTAsMDAwIG1pbGVzIG9mIGhpZ2gtdm9sdGFnZSB0cmFuc21pc3Npb24gbGluZXMgYW5kIG1vcmUgdGhhbiAyLjUgbWlsbGlvbiBtaWxlcyBvZiBmZWVkZXIgbGluZXMuIEFsbCB0aGlzIGlzIG1hbmFnZWQgYnkgMywzMDAgdXRpbGl0aWVzIHNlcnZpbmcgMTUwIG1pbGxpb24gY3VzdG9tZXJzLiBJdOKAmXMgYmVlbiBjYWxsZWQgdGhlIGJpZ2dlc3QgbWFjaGluZSBpbiB0aGUgd29ybGQuIOKAmEFnaW5nLCBVbnJlbGlhYmxl4oCZIEl04oCZcyBhbHNvIHNvbWV0aGluZyBvZiBhIHJlbGljLiBNdWNoIG9mIGl0IHdhcyBidWlsdCBhZnRlciBXb3JsZCBXYXIgSUkgYW5kIGxpdHRsZSB1cGRhdGVkIHNpbmNlIHRoZSAxOTcwcy4gQSBwb3NpdGlvbiBwYXBlciBieSB0aGUgQ2hpY2Fnby1iYXNlZCBHYWx2aW4gRWxlY3RyaWNpdHkgSW5pdGlhdGl2ZSBkZXNjcmliZXMgdGhlIGdyaWQgYXMg4oCcYWdpbmcsIHVucmVsaWFibGUsIGluZWZmaWNpZW50LCBpbnNlY3VyZSBhbmQgaW5jb21wYXRpYmxlIHdpdGggdGhlIG5lZWRzIG9mIGEgZGlnaXRhbCBlY29ub2154oCdIGFuZCDigJxpbiBkaXJlIG5lZWQgb2YgbW9kZXJuaXphdGlvbi7igJ0gSW4gaGVlZGluZyB0aGF0IGNhbGwsIENlbnRlclBvaW50IGZpbmRzIGl0c2VsZiBhdCB0aGUgZm9yZWZyb250IG9mIGh1Z2UgYW5kIGFtYml0aW91cyBpbmZyYXN0cnVjdHVyZSBtYWtlb3ZlciDigJQgYSBwcm9qZWN0IHRoYXQgY291bGQgY29zdCBjbG9zZSB0byBhIGhhbGYgYSB0cmlsbGlvbiBkb2xsYXJzIGJlZm9yZSBpdOKAmXMgY29tcGxldGVkLCBhY2NvcmRpbmcgdG8gdGhlIEVsZWN0cmljIFBvd2VyIFJlc2VhcmNoIEluc3RpdHV0ZS4gVGhlIGJhc2ljIGlkZWEgaXMgdG8gcmVmYXNoaW9uIHRoZSBncmlkIHRvIG1hbmFnZSBlbGVjdHJpY2l0eSBkaXN0cmlidXRpb24gaW4gdGhlIHNhbWUgd2F5IHRoYXQgdGhlIEludGVybmV0IG1hbmFnZXMgZGF0YS4gV2hpbGUgdGFsayBvZiBhIHNtYXJ0IGdyaWQgaGFzIGJlZW4gYXJvdW5kIGZvciBkZWNhZGVzLCB0aGUgY29uY2VwdCBpcyBnYWluaW5nIG1vbWVudHVtIOKAlCBldmVuIHVyZ2VuY3kg4oCUIGFzIGV2aWRlbmNlIHBpbGVzIHVwIHNob3dpbmcgdGhlIGFnaW5nIGdyaWTigJlzIHNob3J0Y29taW5ncy4gUG93ZXIgb3V0YWdlcyBhcmUgdXAgMjg1IHBlcmNlbnQgc2luY2UgMTk4NCBhbmQgdGhlIFUuUy4gcmFua3MgbGFzdCBhbW9uZyB0aGUgdG9wIG5pbmUgd2VzdGVybiBpbmR1c3RyaWFsaXplZCBuYXRpb25zIGluIHRoZSBhdmVyYWdlIHRpbWUgdGhhdCBpdCB0YWtlcyB0byBnZXQgdGhlIGxpZ2h0IGJhY2sgb24gYWZ0ZXIgcG93ZXIgZmFpbHVyZXMuIE91dGFnZXMgY29zdCBidXNpbmVzc2VzIGFzIG11Y2ggYXMgJDE1MCBiaWxsaW9uIGEgeWVhciBpbiBsb3N0IGNvbnRpbnVpdHksIGFjY29yZGluZyB0byB0aGUgVS5TLiBFbmVyZ3kgSW5mb3JtYXRpb24gQWRtaW5pc3RyYXRpb24uIFVubW9uaXRvcmVkIExpbmVzIE1hbnkgZ3JpZCBleHBlcnRzIGFsc28gZmluZCBpdCBpbmNvbmdydW91cywgaW4gdGhlIGRheXMgb2YgdGhlIEludGVybmV0LCB1YmlxdWl0b3VzIFdpLUZpIGFuZCB0aGUgYWJpbGl0eSBvZiBkaWdpdGFsIGdhZGdldHJ5IHRvIG1lYXN1cmUgYW5kIGNvbnRyb2wgYWxsIG1hbm5lciBvZiB0aGluZ3MsIHRoYXQgc28gbXVjaCBvZiB0aGUgZ3JpZCBpcyBzdGlsbCBzbyBkdW1iLiBIdW5kcmVkcyBvZiB0aG91c2FuZHMgb2YgbWlsZXMgb2YgcG93ZXIgbGluZXMgc3RhbmQgdW5tb25pdG9yZWQsIHdoaWNoIGV4cGxhaW5zIGluIHBhcnQgd2h5IHJlcGFpcmVycyBzcGVuZCA2MCBwZXJjZW50IG9mIHRoZWlyIHRpbWUganVzdCB0cnlpbmcgdG8gZmluZCB0aGUgZmF1bHQuIOKAnE1hbnkgdXRpbGl0aWVzIGFyZSBibGluZCBiZXlvbmQgdGhlIHN1YnN0YXRpb24s4oCdIHNhaWQgRWQgS2VubmVkeSwgY2hpZWYgZXhlY3V0aXZlIG9mZmljZXIgb2YgVG9sbGdyYWRlIENvbW11bmljYXRpb25zIEluYy4sIHdoaWNoIG1ha2VzIGdyaWQgc2Vuc29ycyBhbmQgY29uc3VsdHMgd2l0aCB1dGlsaXRpZXMgb24gc21hcnQtZ3JpZCBwcm9qZWN0cy4gQW5kIHdoaWxlIFRob21hcyBFZGlzb24gbWlnaHQgYmUgYmFmZmxlZCBieSB0aGUgc21hcnRwaG9uZSwgaGUgd291bGQgc3RpbGwgcmVjb2duaXplIHRoZSBncmlkLCBsaXR0bGUgY2hhbmdlZCBpbiBkZXNpZ24gZnJvbSB0aGUgc3lzdGVtIGhlIGhlbHBlZCB0byBpbnZlbnQgbW9yZSB0aGFuIDEzMCB5ZWFycyBhZ28uIEZvciBleGFtcGxlOiBIYWxmIG9mIFUuUy4gaG9tZXMgc3RpbGwgaGF2ZSBtZWNoYW5pY2FsIG1ldGVycyB0aGF0IHJlcXVpcmUgd29ya2VycyB0byBzaG93IHVwIGFuZCByZWFkIHRoZW0uIFV0aWxpdGllcyBkZXBsb3lpbmcgc3VjaCBtZXRlcnMgaGF2ZSBsaXR0bGUga25vd2xlZGdlIG9mIHRoZWlyIGN1c3RvbWVyc+KAmSBlbmVyZ3kgdXNlIG9yIGludGVyZXN0cyBiZXlvbmQgYSBtb250aGx5IGJpbGw7IHRoZXkgYXJlIHNpbXBseSBsb2FkLiBEaWdpdGFsIEFnZSBDZW50ZXJQb2ludCBpcyBsb29raW5nIHRvIG1vdmUgdGhlIGdyaWQgaW50byB0aGUgZGlnaXRhbCBhZ2UgYW5kIGhhcyBwbGVudHkgb2YgY29tcGFueS4gQW1lcmljYW4gRWxlY3RyaWMgUG93ZXIgQ28uLCBTZW1wcmEgRW5lcmd54oCZcyBTYW4gRGllZ28gR2FzIGFuZCBFbGVjdHJpYyBhbmQgTmV3IFlvcmsgSW5kZXBlbmRlbnQgU3lzdGVtIE9wZXJhdG9yIChOWUlTTyksIG9wZXJhdG9yIG9mIE5ldyBZb3JrIFN0YXRl4oCZcyBncmlkLCBhcmUgYWxsIHNtYXJ0ZW5pbmcgdGhlaXIgZ3JpZHMuIEdpYW50IFBHJkUgQ29ycC4gaGFzIGVzdGFibGlzaGVkIGEgc21hcnQtZ3JpZCBza3VuayB3b3Jrcy4gSW4gRGV0cm9pdCwgRFRFIEVuZXJneSBDby4gaXMgd29ya2luZyB3aXRoIENyYW5iZXJyeSBUb3duc2hpcCwgUGVubnN5bHZhbmlhLWJhc2VkIFRvbGxncmFkZSBvbiBpbnN0YWxsaW5nIHNlbnNvcnMgYW5kIHNvZnR3YXJlIHRoYXQgd2lsbCBsZXQgRFRFIHByZWRpY3QgcG93ZXIgZmFpbHVyZXMsIGVsaW1pbmF0aW5nIDUwMCwwMDAgb3V0YWdlIG1pbnV0ZXMgZm9yIHRoZSB1dGlsaXR54oCZcyAyLjEgbWlsbGlvbiBjdXN0b21lcnMgb3ZlciB0aGUgbmV4dCB0aHJlZSB5ZWFycy4gVGhlIHByb2plY3QgaXMgcGFydCBvZiBEVEXigJlzIGZpdmUtIHllYXIsICQyNTAgbWlsbGlvbiBncmlkIHVwZ3JhZGUuIEluIEF1c3RpbiwgVGV4YXMsIGEgcmVhbCB3b3JsZCBzbWFydC1ncmlkIGxhYm9yYXRvcnkgZW5jb21wYXNzaW5nIGFib3V0IDMwMCBob21lcyBjYWxsZWQgUGVjYW4gU3RyZWV0IEluYy4gaXMgc2hvd2luZyBob3cgYSBkaWdpdGFsbHkgaW50ZWdyYXRlZCB1dGlsaXR5IHN5c3RlbSBtZXRpY3Vsb3VzbHkgdHJhY2tpbmcgcG93ZXIgZmxvdyBvbiBib3RoIHNpZGVzIG9mIHRoZSBtZXRlciBjYW4gcHJvZm91bmRseSBjaGFuZ2UgaG93IGFuZCB3aGVuIHV0aWxpdGllcyBnZW5lcmF0ZSBlbGVjdHJpY2l0eSBhbmQgaG93IGFuZCB3aGVuIGNvbnN1bWVycyB1c2UgaXQuIFNtYXJ0IEdyaWQgQmV5b25kIGltcHJvdmluZyByZWxpYWJpbGl0eSwgdGhlIGJhc2ljIGlkZWEgaXMgdGhpczogV2hlbiBhbGwgZW5lcmd5LXVzZSBkYXRhIGlzIGRpZ2l0aXplZCBhbmQgZmxvd3MgZnJlZWx5IGJldHdlZW4gcG93ZXIgZ2VuZXJhdG9ycyBhbmQgY3VzdG9tZXJzLCB0aGUgc21hcnQgZ3JpZCB3aWxsIGtub3cgZXhhY3RseSBob3cgbXVjaCBwb3dlciBpcyBuZWVkZWQsIHdoZW4gYW5kIHdoZXJlLCBlbGltaW5hdGluZyBtdWNoIG9mIHRoZSB3YXN0ZSwgb3ZlcmJ1aWxkaW5nIGFuZCBndWVzc3dvcmsgaW5oZXJlbnQgaW4gdGhlIGN1cnJlbnQgYW5hbG9nIHN5c3RlbSBhbmQgZW5hYmxpbmcgZW5vcm1vdXMgc3RyaWRlcyBpbiBlbmVyZ3kgY29uc2VydmF0aW9uLiBNYW55IGFsc28gc2VlIHRoZSBzbWFydCBncmlkIGFzIGZ1bmRhbWVudGFsIHRvIHRoZSB1dGlsaXR5IHN5c3RlbSBiZWluZyBhYmxlIHRvIGFic29yYiBhbmQgbWFuYWdlIGRpc3J1cHRpdmUgY2hhbmdlcyB0aGF0IGFyZSByZW1ha2luZyB0aGUgVS5TLiBwb3dlciBwYXJhZGlnbS4gQSBzdXJnZSBpbiByb29mdG9wIHNvbGFyIGhhcyB0dXJuZWQgdGVucyBvZiB0aG91c2FuZHMgb2YgY29uc3VtZXJzIGludG8gZ2VuZXJhdG9ycy4gUG93ZXIgaXMgbm93IGZsb3dpbmcgdHdvIHdheXMgaW4gQW1lcmljYSBhbmQgcmVndWxhdG9ycyBhbmQgZ3JlZW4gZ3JvdXBzIGFyZSBwdXNoaW5nIHV0aWxpdGllcyB0byBpbnRlZ3JhdGUgbW9yZSBhbmQgbW9yZSBvZiB0aGlzIHBvd2VyIOKAlCB5ZXQga2VlcCB0aGUgZ3JpZCBzdGFibGUuIOKAnFRoZXJlIGlzIGEgbG90IG9mIHRlY2hub2xvZ3kgY29taW5nIGFuZCBpZiB5b3UgZG9u4oCZdCBpbnRlZ3JhdGUgaXQgc3VjY2Vzc2Z1bGx5IHlvdeKAmXJlIGdvaW5nIHRvIGhhdmUgb25lIGhlbGwgb2YgYSBtZXNzIG9uIHlvdXIgaGFuZHMs4oCdIHNhaWQgUm9nZXIgRHVuY2FuLCBjaGFpcm1hbiBhbmQgb25lIG9mIHRoZSBmb3VuZGVycyBvZiB0aGUgUGVjYW4gU3RyZWV0IHByb2plY3QuIOKAnFRoZSBjdXJyZW50IGdyaWQgaXMganVzdCBub3QgZGVzaWduZWQgdG8gaGFuZGxlIHRoaXMgbWFzc2l2ZSBkZXBsb3ltZW50LuKAnSBFbmVyZ3kgTWFuYWdlbWVudCBBIGdyb3dpbmcgbnVtYmVyIG9mIHRoZXNlIHZlcnkgY29uc3VtZXJzIGFsc28gd2FudCBib3RoIG1vcmUgY2hvaWNlIGFuZCBjb250cm9sIG92ZXIgdGhlaXIgZW5lcmd5IHVzZSDigJQgYXMgc2VlbiBub3QganVzdCBieSB0aGUgZXhwbG9zaXZlIGdyb3d0aCBvZiByb29mdG9wIHNvbGFyIGJ1dCBieSB0aGUgcmlzZSBvZiBzbWFydC1ob21lIGNvbXBhbmllcyBsaWtlIEdvb2dsZSBJbmMu4oCZcyBOZXN0IExhYnMsIHdoaWNoIGFscmVhZHkgaGFzIGh1bmRyZWRzIG9mIHRob3VzYW5kcyBvZiBjdXN0b21lcnMgZm9yIGl0cyBzbWFydCBpbi1ob21lIGVuZXJneSBtYW5hZ2VtZW50IHRoZXJtb3N0YXRzLiDigJxUaGUgZm9yY2VzIG9mIGNoYW5nZSBoYXZlIGFycml2ZWQg4oCUIGNvbXBldGl0aW9uIGZyb20gcm9vZnRvcCBzb2xhciwgY29uc3VtZXIgZGVtYW5kIGZvciBtb3JlIGtub3dsZWRnZSwgY29udHJvbCBhbmQgY2hvaWNlIGluIHRoZWlyIHBvd2VyIHVzYWdlLOKAnSBzYWlkIFZpcmdpbmlhIExhY3ksIGEgdXRpbGl0eSBzcGVjaWFsaXN0IHdpdGggdGhlIEJvdWxkZXIsIENvbG9yYWRvLWJhc2VkIFJvY2t5IE1vdW50YWluIEluc3RpdHV0ZSwgYW4gZW5lcmd5IGFuZCB0ZWNobm9sb2d5IHRoaW5rIHRhbmsuIOKAnFRoZSBtYXJrZXQgaXMgc3BlYWtpbmcgYW5kIHRoZSBzbWFydCB1dGlsaXRpZXMgYXJlIHN0YXJ0aW5nIHRvIGxpc3Rlbi7igJ0gRm9yIGEgcGVlayBpbnRvIHdoYXQgcmVpbnZlbnRpb24gbG9va3MgbGlrZSwgYW5kIHdoeSBpdCBtYXR0ZXJzLCB3YW5kZXIgaW50byBOWUlTT+KAmXMgY2F2ZXJub3VzIGNvbnRyb2wgY2VudGVyIGluIEVhc3QgR3JlZW5idXNoLCBOZXcgWW9yay4gVGhlcmUgeW91IGNhbiBzZWUgdGhlIGJlbmVmaXRzIOKAlCBvbiBhIDIsMzAwIHNxdWFyZSBmb290IGNvbXB1dGVyIGRpc3BsYXkg4oCUIG9mIGEgJDc0IG1pbGxpb24gc21hcnQgdXBncmFkZSBjb21wbGV0ZWQgbGFzdCB5ZWFyIHdob3NlIGdlbmVzaXMgd2FzIHRoZSAyMDAzIGJsYWNrb3V0IHRoYXQgbGVmdCA1MCBtaWxsaW9uIHBlb3BsZSB3aXRob3V0IHBvd2VyLCBpbmNsdWRpbmcgbW9zdCBvZiB0aG9zZSBpbiBOZXcgWW9yayBDaXR5LiBPdmVyZ3Jvd24gVHJlZSBUaGUgZmFpbHVyZSBiZWdhbiB3aGVuIGEgaGlnaC12b2x0YWdlIHBvd2VyIGxpbmUgYnJ1c2hlZCBpbnRvIGFuIG92ZXJncm93biB0cmVlIGluIE9oaW8uIEFuIGFnaW5nIGNvbXB1dGVyIHN5c3RlbSBibGluZGVkIG9wZXJhdG9ycyB0byB0aGUgZmF1bHQgZm9yIG1vcmUgdGhhbiBhbiBob3VyIGFzIG90aGVyIGxpbmVzIG92ZXJoZWF0ZWQgYW5kIGRyb29wZWQgaW50byBtb3JlIHRyZWVzLCBjYXVzaW5nIGEgc3RhZ2dlcmluZyBjYXNjYWRlIG9mIGZhaWx1cmVzIHRocm91Z2hvdXQgdGhlIG5vcnRoZWFzdGVybiBVLlMuIGFuZCBzb3V0aGVhc3Rlcm4gQ2FuYWRhLiBCYWNrIHRoZW4gTllJU08gaGFkIG5vIHdheSB0byBzZWUgdGhlIGZhdWx0IGFuZCB0aGUgY29taW5nIGNhbGFtaXR5LCBzYWlkIGNoaWVmIGluZm9ybWF0aW9uIG9mZmljZXIgUmljaGFyZCBEZXdleS4gTm93IGl0IGRvZXMuIEl0cyBnaWFudCBkaXNwbGF5LCBvdmVyc2VlbiBmcm9tIGFuIGVsZXZhdGVkIGNvbW1hbmQgcG9zdCBpbiB0aGUgZGltbWVkIGNvbnRyb2wgcm9vbSwgbGV0cyBvcGVyYXRvcnMgdmlldyBhbGwgbWFubmVyIG9mIHN0cmVhbWluZyBkYXRhIGNyaXRpY2FsIHRvIHJ1bm5pbmcgaXRzIHN5c3RlbSDigJQgd2VhdGhlciBzdGF0ZXdpZGUgYW5kIGJleW9uZCwgaW5kZXBlbmRlbnQgeWV0IGludGVyY29ubmVjdGVkIGdyaWRzIGluIHRoZSBVLlMuIGFuZCBDYW5hZGEgZnJvbSB3aGljaCBpdCBtYXkgbmVlZCB0byBidXkgcG93ZXIgYW5kIHJlYWwtdGltZSBkYXRhIG9uIGZ1ZWwgc3VwcGxpZXMgYXQgcG93ZXIgcGxhbnRzLiBCbGFja291dHMgQXZlcnRlZCBDb250cm9sbGVycyB1c2VkIHRoaXMgc3lzdGVtIHRvIGF2ZXJ0IGJsYWNrb3V0cyBkdXJpbmcgdGhpcyB3aW50ZXLigJlzIFBvbGFyIFZvcnRleCDigJQgYWN0dWFsbHkgZHVyaW5nIGZpdmUgbWFqb3IgY29sZCBzbmFwcyBzcGFubmluZyBEZWNlbWJlciBhbmQgSmFudWFyeSDigJQgZXZlbiBhcyBhIHBpcGVsaW5lIGJyZWFrZG93biBjdXJiZWQgbmF0dXJhbCBnYXMgc3VwcGx5IGFuZCBzb21lIHBsYW50cyBzaHV0IHdpdGggbGl0dGxlIHdhcm5pbmcuIFRoZXNlIHdlYXRoZXIgcGF0dGVybnMgY291bGQgZWFzaWx5IGhhdmUgbGVkIHRvIG91dGFnZXMuIEluc3RlYWQsIE5ZSVNPIHNhdyB0aGF0IGl0IGNvdWxkIG9yZGVyIG1vcmUgZWxlY3RyaWNpdHkgZnJvbSBwbGFudHMgc3RpbGwgYWJsZSB0byBydW4sIHRyYWNrIGZ1ZWwgc3VwcGxpZXMgZm9yIGVhY2ggb2YgdGhvc2UgcGxhbnRzIGFuZCBib2xzdGVyIHJlc2VydmVzIGJ5IGhhcm5lc3NpbmcgMSwwMDAgbWVnYXdhdHRzIG9mIHdpbmQgcG93ZXIgZHJpdmVuIGJ5IHdpbnRlcnkgZ2FsZXMgYWZ0ZXIgQ2FuYWRpYW4gaW1wb3J0cyB3ZXJlIGN1cnRhaWxlZC4gQXQgb25lIHBvaW50LCBpdCBhbHNvIG1hbmFnZWQgdG8gZGVsaXZlciBwb3dlciBzaGlwbWVudHMgZnJvbSBOZXcgRW5nbGFuZCB0byBQZW5uc3lsdmFuaWEuIEZhciBiZXlvbmQgdGhlIGhlYXZpbHkgZ3VhcmRlZCBjb250cm9sIGNlbnRlciwgbmV3bHkgaW5zdGFsbGVkIHNlbnNvcnMgY2FsbGVkIHBoYXNvci1tZWFzdXJlbWVudCB1bml0cyB0cmFuc21pdCBhbGFybXMgdG8gdGhlIGh1Z2Ugc2NyZWVuIHdoZW5ldmVyIHZvbHRhZ2Ugb3IgZnJlcXVlbmN5IHN3aW5ncyBleGNlZWQgdGhlaXIgZmluaWNreSBzZXR0aW5ncyDigJQgYSBwb3RlbnRpYWwgZWFybHkgd2FybmluZyBvZiBncmlkIGNvbGxhcHNlLiBDaGVja2luZyBmb3IgVHJvdWJsZSBTZW5zb3JzIG9uIHRoZSBvbGQsIGR1bWIgZ3JpZCBjaGVja2VkIGZvciB0cm91YmxlIGV2ZXJ5IHNpeCBzZWNvbmRzLiBUaGUgcGhhc29yIHVuaXRzIGxvb2sgNjAgdGltZXMgYSBzZWNvbmQuIFdpdGggZW5lcmd5IGZsb3dpbmcgYXQgYWxtb3N0IHRoZSBzcGVlZCBvZiBsaWdodCwgdGhpcyBpcyBhIHNpZ25pZmljYW50IGltcHJvdmVtZW50LiDigJxJbWFnaW5lIGRyaXZpbmcgYW5kIG9ubHkgb3BlbmluZyB5b3VyIGV5ZXMgZXZlcnkgc2l4IHNlY29uZHMs4oCdIERld2V5IHNhaWQuIOKAnFRoZW4gaW1hZ2luZSBkcml2aW5nIGFuZCBibGlua2luZyB5b3VyIGV5ZXMgc2l4dHkgdGltZXMgYSBzZWNvbmQuIFlvdSBzZWUgbW9yZS7igJ0gV2hpbGUgdGhlIG9sZCBzZW5zb3JzIHJlY29yZGVkIGluZm9ybWF0aW9uLCB0aGUgbmV3IG9uZXMgc2VuZCByZWFsLXRpbWUgc2lnbmFscyB0aGF0IGFwcGVhciBhbW9uZyB0aGUgMywwMDAgcG9pbnRzIG9mIGRhdGEgb24gdGhlIElTT+KAmXMgdmFzdCBkaXNwbGF5LiDigJxXaXRoIHRoaXMsIHdoZW4gdGhlIHBvd2VyIGxpbmUgaGl0IHRoZSB0cmVlIGluIDIwMDMsIHdl4oCZZCBoYXZlIHNlZW4gdGhlIGRpc3R1cmJhbmNlLOKAnSBzYWlkIERld2V5LiDigJxUaGF0IGNvdWxkIGhhdmUgZ2l2ZW4gdXMgYSBjaGFuY2UgdG8gcmFpc2UgZ2VuZXJhdGlvbiBoZXJlIHRvIGJ1ZmZlciBOZXcgWW9yay7igJ0gSVNPIHNheXMgaXRzIHN5c3RlbSBuZWVkcyB0byBnZXQgc21hcnRlci4gSXQgaGFzIGxpdHRsZSBwcmVzZW5jZSBiZWhpbmQgdGhlIG1ldGVyLCBtZWFuaW5nIGl0IGRvZXNu4oCZdCBoYXZlIGEgZ29vZCBoYW5kbGUgb24gaG93IG11Y2ggcm9vZnRvcCBzb2xhciBpcyBmbG93aW5nIGludG8gaXRzIHN5c3RlbSBvciBob3cgbWFueSBtaWNyb2dyaWRzIGFyZSBwb3BwaW5nIHVwIGluIGl0cyBzZXJ2aWNlIGFyZWEuIE5ldyBZb3JrIHN0YXRlIHJlZ3VsYXRvcnMgYXJlIHdvcmtpbmcgb24gYSBwbGFuIHRoYXQgd291bGQgZ2l2ZSB1dGlsaXRpZXMgaW5jZW50aXZlcyB0byBiZXR0ZXIgaW50ZWdyYXRlIHRoZXNlIG5ldyBmbG93cy4gUGVjYW4gU3RyZWV0IFNvbWUgY29uc3VtZXJzIGFyZSByYXZpbmcgYWJvdXQgdGhlIGJlbmVmaXRzIG9mIHRoZSBzbWFydCBncmlkLCB0b28uIEZvciBBdXN0aW4sIFRleGFzLCByZXNpZGVudCBMdWtlIERvd25zLCBhIHBhcnRpY2lwYW50IGluIHRoZSBQZWNhbiBTdHJlZXQgcHJvamVjdCwgYWNjZXNzIHRvIHRoZSBzbWFydCBncmlkIGhhcyBjaGFuZ2VkIGhpcyBlbmVyZ3kgbGlmZS4g4oCcU3VkZGVubHksIEkgY291bGQgc2VlIHdoYXQgSSB3YXMgZG9pbmcs4oCdIGhlIHNhaWQuIERvd25zLCA0NCwgbGl2ZXMgaW4gYSAzLWJlZHJvb20gcm93IGhvdXNlIGluIHdoYXTigJlzIGtub3duIGFzIHRoZSBNdWVsbGVyIG5laWdoYm9yaG9vZCwgYSBwbGFubmVkIHVyYmFuIHJlZGV2ZWxvcG1lbnQgb24gdGhlIGdyb3VuZHMgb2YgQXVzdGlu4oCZcyBmb3JtZXIgbXVuaWNpcGFsIGFpcnBvcnQuIEl0IHdhcyBkZXNpZ25lZCB1bmRlciB0aGUgcHJpbmNpcGxlcyBvZiDigJxuZXcgdXJiYW5pc23igJ0gd2hlcmUgaG9tZXMgYW5kIGJ1c2luZXNzZXMgYXJlIGNsdXN0ZXJlZCB0b2dldGhlciBsaWtlIGEgcHJlLXdhciBVLlMuIHNtYWxsIHRvd24uIEl0cyByZXNpZGVudHMgY2FuIHdhbGsgb3IgcmlkZSBhbG9uZyBiaWtlIHBhdGhzIHRvIHNob3BzLCBzY2hvb2xzIGFuZCBwYXJrcy4gQWxtb3N0IDMwMCBob21lcyBpbiB0aGUgTXVlbGxlciBjb21tdW5pdHkgcGFydGljaXBhdGUgaW4gdGhlIFBlY2FuIFN0cmVldCBwcm9qZWN0IGFuZCB0aGUgbmVpZ2hib3Job29kIGJvYXN0cyBtb3JlIGVsZWN0cmljIHZlaGljbGVzIHBlciBjYXBpdGEgdGhhbiBhbnkgb3RoZXIgcmVzaWRlbnRpYWwgbmVpZ2hib3Job29kIGluIHRoZSBVLlMuIFNvbGFyIHBhbmVscyBjb3ZlciBtYW55IG9mIHRoZSByb29mdG9wcy4gVGhlIHBsYWNlIGlzIGVzc2VudGlhbGx5IGEgdGVzdGluZyBncm91bmQgZm9yIHRoZSB1dGlsaXR5IG9mIHRoZSBmdXR1cmUuIFRoZSBpZGVhIGlzIHRvIGhlbHAgcGFydGljaXBhdGluZyB1dGlsaXRpZXMgbGlrZSBBdXN0aW4gRW5lcmd5LCBEb3duc+KAmXMgdXRpbGl0eSwgU2FuIERpZWdvIEdhcyAmIEVsZWN0cmljIGFuZCBhcHBsaWFuY2UgbWFrZXJzIGxpa2UgTEcgRWxlY3Ryb25pY3MgdW5kZXJzdGFuZCBob3cgY3VzdG9tZXJzIHdpbGwgdXNlIHRoZSBuZXh0IHdhdmUgb2YgcHJvZHVjdHMgZm9yIHRoZSBzbWFydCBncmlkLiBFbmVyZ3kgTWFuYWdlbWVudCBQYXJ0aWNpcGFudHMgbGlrZSBEb3ducyBzaWduIHVwIHRvIGhhdmUgdGhlaXIgaG9tZXMgd2lyZWQgZG93biB0byB0aGUgY2lyY3VpdCB0byB0cmFjayBwb3dlciB1c2UgYW5kIGluIHJldHVybiBnZXQgcmViYXRlcyBmb3IgYnV5aW5nIGFuZCB1c2luZyBob21lIGVuZXJneSBtYW5hZ2VtZW50IHN5c3RlbXMsIGVsZWN0cmljIHZlaGljbGVzIGFuZCBzb2xhciBwYW5lbHMuIERvd25zIHdhcyBhYmxlIHRvIGluc3RhbGwgYSAkMjEsNDYxIHJvb2Z0b3Agc29sYXIgc3lzdGVtIHdpdGggJDMsODU3IGluIHN1cHBvcnQgZnJvbSBhIG5vbi1wcm9maXQgcmVzZWFyY2ggZ3JvdXAgYXNzb2NpYXRlZCB3aXRoIHRoZSBVbml2ZXJzaXR5IG9mIFRleGFzLCBjb2xsZWN0aW5nIGEgJDE0LDc3NCByZWJhdGUgZnJvbSBBdXN0aW4gRW5lcmd5IGFuZCAkODU3IGluIGZlZGVyYWwgdGF4IGluY2VudGl2ZXMuIEhlIHRoZW4gYm91Z2h0IGEgcmVkIENoZXZ5IFZvbHQsIGZvciAkNDIsMDAwIOKAlCAkMjcsMDAwIGFmdGVyIGxvY2FsIGFuZCBmZWRlcmFsIHJlYmF0ZXMuIEVtcGxveWluZyBhbiBlbmVyZ3ktbWFuYWdlbWVudCBzeXN0ZW0gdGhhdCBjYW1lIHdpdGggaGlzIHNvbGFyIHBhY2thZ2UgYW5kIHRvb2xzIHN1cHBsaWVkIGJ5IFBlY2FuIFN0cmVldCwgaGUgZm91bmQgaGUgY291bGQgdHJhY2sgaGlzIGVsZWN0cmljaXR5IHVzZSBpbiByZWFsIHRpbWUgb24gaGlzIGxhcHRvcCBhbmQgc21hcnRwaG9uZS4gV2hhdCBoZSBzYXcgYm90aCBzdXJwcmlzZWQgYW5kIG1vcnRpZmllZCBoaW0uIERvd25zIGdvdCByaWQgb2YgaGlzIHBvd2VyLXN1Y2tpbmcgZGVza3RvcCBmb3IgYSBtb3JlIGVuZXJneS1lZmZpY2llbnQgb25lLiBIZSBzd2FwcGVkIG91dCBoaXMgaW5jYW5kZXNjZW50IGxpZ2h0cyBmb3IgcG93ZXItc2lwcGluZyBMRURzLiBIZSBwcm9ncmFtbWVkIGhpcyB0aGVybW9zdGF0IHRvIGNvb2wgaGlzIGhvdXNlLiBaZXJvIEJpbGxzIEEgbWVjaGFuaWNhbCBlbmdpbmVlciBieSB0cmFpbmluZywgRG93bnMsIHdobyBydW5zIGEgc21hbGwgYnVzaW5lc3MgdGhhdCBtYWtlcyBtb2JpbGUgYXBwcyBhbmQgZ2FtZXMsIHNhaWQgaGXigJlzIGN1dCBoaXMgbW9udGhseSBlbmVyZ3kgYmlsbHMgdG8gbmVhcmx5IHplcm8g4oCUIGFuZCB0aGUgc21hcnQgZ3JpZCBoYXMgbWFkZSBpdCBhbG1vc3QgYXV0b21hdGljIGFuZCBlZmZvcnRsZXNzLiDigJxJ4oCZbSBhY3R1YWxseSBub3QgdXNpbmcgYW55IHJlc291cmNlcyB0byBkcml2ZSBhcm91bmQgdG93biBvciBwb3dlciBteSBob3VzZSwgYW5kIHRoYXQgaXMgcmVhbGx5IGEgdGhyaWxsIGZvciBtZSzigJ0gRG93bnMgc2FpZCwgbGF1Z2hpbmcgaW4gbmVhciBkaXNiZWxpZWYuIEZvciBpdHMgcGFydCwgQXVzdGluIEVuZXJneSwgQW1lcmljYeKAmXMgZWlnaHRoLWxhcmdlc3QgbXVuaWNpcGFsLW93bmVkIHV0aWxpdHksIHNlZXMgRG93bnMgYXMgdGhlIHByb3RvdHlwaWNhbCBjdXN0b21lciBvZiB0aGUgZnV0dXJlIOKAlCBzYXZ2eSwgZW5lcmd5IGNvbnNjaW91cywgYW4gZW50aHVzaWFzdGljIGVtYnJhY2VyIG9mIGFsbCB0aGlzIG5ldywgc21hcnQgdGVjaG5vbG9neS4gSXQgbWFrZXMgc2Vuc2Ugb24gYm90aCBzaWRlcyBvZiB0aGUgbWV0ZXIsIHNhaWQgTGFycnkgV2VpcywgQXVzdGluIEVuZXJneeKAmXMgZ2VuZXJhbCBtYW5hZ2VyLiBMYXN0IHllYXIsIHRoZSB1dGlsaXR5IG9wZW5lZCBhIG5ldyAkODAgbWlsbGlvbiBjb21tYW5kLSBhbmQtY29udHJvbCBjZW50ZXIgZmVhdHVyaW5nIHdoYXQgd2FzIGF0IHRoZSB0aW1lIHRoZSBiaWdnZXN0IHZpZGVvIHNjcmVlbiBpbiBOb3J0aCBBbWVyaWNhLiBGcm9tIHRoZXJlIG9wZXJhdG9ycyB3aWxsIGhhdmUgbXVjaCBvZiBzYW1lIGtpbmRzIG9mIGNvbnRyb2xzIHRoYXQgYXJlIGJlaW5nIGRlcGxveWVkIGJ5IENlbnRlclBvaW50IOKAlCBmaW5kaW5nIGFuZCBmaXhpbmcgcG93ZXIgb3V0YWdlcyBtb3JlIHF1aWNrbHkgYW5kIGV2ZW4gcHJldmVudGluZyB0aGVtIGJlZm9yZSB0aGV5IGhhcHBlbi4gQXV0b21hdGVkIFN0cmVldGxpZ2h0cyBUaGV5IGFsc28gaGF2ZSBvdGhlciB0cmlja3MgdG8gcm9sbCBvdXQuIEZvciBleGFtcGxlLCBBdXN0aW4gRW5lcmd5IHByZWRpY3RzIGl0IHdpbGwgc2F2ZSBhcyBtdWNoIGFzICQzNDAsMDAwIGEgeWVhciBieSBhdXRvbWF0aW5nIHRoZSBvcGVyYXRpb25zIG9mIGl0cyA3MCwwMDAgc3RyZWV0bGlnaHRzLCB3aGljaCBjYW4gbm93IHNlbmQgYSB3aXJlbGVzcyBzaWduYWwgdG8gdGVsbCB0aGUgdXRpbGl0eSB3aGVuIHRoZXnigJlyZSBicm9rZW4uIFN1Y2ggc3VjY2Vzc2VzIGdpdmUgdGhlIHNtYXJ0IGdyaWQgbW9tZW50dW0sIHRob3VnaCBodXJkbGVzIHJlbWFpbi4gQSBzbWFydCBncmlkIGxpbmtlZCB0byBzbWFydCBob21lcyBhbmQgc21hcnQgYnVzaW5lc3NlcyByYWlzZXMgY3liZXJzZWN1cml0eSBhbmQgcHJpdmFjeSBpc3N1ZXMuIFRoZXJlIGFyZSByZW1haW5pbmcgdGVjaG5vbG9naWNhbCBjaGFsbGVuZ2VzLiBBbiBBbWVyaWNhbiBFbnRlcnByaXNlIEluc3RpdHV0ZSByZXBvcnQsIHdoaWxlIG5vZGRpbmcgdG8gdGhlIHZpcnR1ZXMgb2YgYW4gSW50ZXJuZXQtbGlrZSBncmlkLCBzYWlkIGNvbnRyb2xsaW5nIG1lZ2F3YXR0IGhvdXJzIGFjcm9zcyBhIHNtYXJ0IGdyaWQgaXMgZmFyIG1vcmUgY29tcGxleCB0aGFuIGNvbnRyb2xsaW5nIG1lZ2FieXRlcyBvbiB0aGUgSW50ZXJuZXQsIGFuYWxvZ291cyB0byDigJxnb2luZyBmcm9tIGNvbnRyb2xsaW5nIGEgdG95IGRyb25lIHRvIGEgQm9laW5nIDc3Ny7igJ0g4oCYV2VhcG9ucy1HcmFkZeKAmSBGbG93IE9uIHRoZSBoYXJkd2FyZSBlbmQsIG5ldyBjbGFzc2VzIG9mIHBvd2VyIHRyYW5zaXN0b3JzIGFuZCBzZW1pY29uZHVjdG9ycyBqdXN0IG5vdyBiZWluZyBkZXZlbG9wZWQgd2lsbCBoYXZlIHRvIGJlIHJvbGxlZCBvdXQgdG8gaGFuZGxlIHRoZSDigJx3ZWFwb25zLWdyYWRlIGZsb3dzIG9mIGVsZWN0cm9uc+KAnSBtb3ZpbmcgYWNyb3NzIGEgY29tcGxldGVseSBkaWdpdGFsbHktbWFuYWdlZCBncmlkLCBhY2NvcmRpbmcgdG8gdGhlIHJlcG9ydC4gVGhlcmUgaXMgYWxzbyB1dGlsaXR5IHJlc2lzdGFuY2UsIGluIHBhcnQgYmFzZWQgb24gcmVndWxhdG9yeSBpc3N1ZXMuIEluIG1hbnkgc3RhdGVzLCByZWd1bGF0b3JzIG1haW50YWluIHJ1bGVzIHRoYXQgbWFrZSBpdCBkaWZmaWN1bHQgZm9yIHBvd2VyIGNvbXBhbmllcyB0byBwYXkgZm9yIG11Y2ggb2YgYW55dGhpbmcgYmV5b25kIHBvd2VyIHBsYW50cywgdHJhbnNtaXNzaW9uIGxpbmVzIGFuZCBwb2xlcywgd2hpY2ggaGVscHMgdG8gZXhwbGFpbiBhIGxhY2sgb2YgaW5ub3ZhdGlvbiBpbiBncmlkIGluZnJhc3RydWN0dXJlIHVwZ3JhZGVzLiBUaGUgY2hhbGxlbmdlIGlzIHRvIGNvbnZpbmNlIGJvdGggY29uc3VtZXJzIGFuZCBwdWJsaWMgdXRpbGl0eSBjb21taXNzaW9ucyB0aGF0IHNwZW5kaW5nIG9uIHNtYXJ0IGdyaWQgdGVjaG5vbG9neSBkZWxpdmVycyBzZXJ2aWNlcyB0aGF0IG1ha2UgdGhlbSB3b3J0aCBhbnkgcmF0ZSBoaWtlcy4g4oCcV2Ugc3BlbmQgYSBsb3Qgb2YgdGltZSBtYWtpbmcgc3VyZSB0aGF0IGFueXRoaW5nIHdlIGRvIGlzIHByaWNlLSBqdXN0aWZpZWQgZm9yIG91ciBjdXN0b21lcnMs4oCdIHNhaWQgTGVvIERlbmF1bHQsIENFTyBvZiBOZXcgT3JsZWFucy1iYXNlZCBFbnRlcmd5IENvcnAuIOKAnFV0aWxpdGllcyBjYW4gb25seSBtb3ZlIHJhdGVzIHNvIG11Y2ggYW5kIHRoZW4gdGhlcmXigJlzIGdvaW5nIHRvIGJlIGJhY2tsYXNoLuKAnSBVdGlsaXR5IEJhY2tsYXNoIFRoZXJlIGlzIGFsc28gcmlzayBvZiBhIGJhY2tsYXNoIOKAlCBhZ2FpbnN0IHV0aWxpdGllcyDigJQgaWYgdGhleSBkb27igJl0IGVtYnJhY2UgdGhlIGRpZ2l0YWwgcmV2b2x1dGlvbi4gQ29ycG9yYXRpb25zIHN1Y2ggYXMgR29vZ2xlLCBBcHBsZSBJbmMuIGFuZCBXYWwtTWFydCBTdG9yZXMgSW5jLiBhcmUgdHVybmluZyBtb3JlIGFuZCBtb3JlIHRvIHNvbGFyIHRvIHBvd2VyIGRhdGEgY2VudGVycyBvciBzdXBwbHkgZWxlY3RyaWNpdHkgZm9yIHN0b3Jlcy4gTWljcm9ncmlkcyDigJQgZGlnaXRhbGx5IGVuYWJsZWQgc21hbGwgY2xvbmVzIG9mIHRoZSBiaWcgZ3JpZCDigJQgYXJlIHNwcmluZ2luZyB1cCBhbmQgc3RlYWxpbmcgdXRpbGl0eSByZXZlbnVlcyBieSBzaG93aW5nIGhvdyBzbWFydCBncmlkcyBjYW4gaW50ZWdyYXRlIHNvbGFyIGFuZCBvdGhlciBmb3JtcyBvZiByZW5ld2FibGVzIHdoaWxlIGluY3JlYXNpbmcgcmVzaWxpZW5jZSBhbmQgcmVsaWFiaWxpdHkuIENvbnN1bWVycyBhcmUgZW1icmFjaW5nIGludGVyYWN0aXZlIGhvbWUtZW5lcmd5IG1hbmFnZW1lbnQgc3lzdGVtcyB0aGF0IHNob3cgYSB0aGlyc3QgZm9yIGNvbnRyb2wgYW5kIGtub3dsZWRnZSBvZiB0aGVpciBwb3dlciB1c2UgdGhhdCBtb3N0IHV0aWxpdGllcyBzaW1wbHkgY2Fu4oCZdCBvciB3b27igJl0IHByb3ZpZGUuIEZvciBKZWZmIFJheSwgQ0VPIG9mIEFCQiBHcm91cOKAmXMgVmVudHl4IHVuaXQsIHdoaWNoIGlzIHdvcmtpbmcgd2l0aCBDZW50ZXJQb2ludCBvbiBpdHMgc21hcnQgZ3JpZCB1cGdyYWRlLCB1dGlsaXRpZXMgd2lsbCBlaXRoZXIgZW1icmFjZSB0aGVzZSBuZXcgdGVjaG5vbG9naWVzIG9yIHN1ZmZlciB0aGUgY29uc2VxdWVuY2VzLiDigJxJIGRvbuKAmXQgdGhpbmsgdGhleSBoYXZlIGEgY2hvaWNlIGlmIHRoZXkgd2FudCB0byBrZWVwIHRoZWlyIGN1c3RvbWVycyzigJ0gaGUgc2FpZC4gU3VuaWwgQ2hlcmlhbiwgQ0VPIG9mIFNwaXJhZSwgYSBGb3J0IENvbGxpbnMsIENvbG9yYWRvLCBwcm92aWRlciBvZiBzbWFydC1ncmlkIHNlcnZpY2VzLCBhZ3JlZWQuIFV0aWxpdGllcyB0aGF0IGRvbuKAmXQgYWRhcHQgYW5kIHNtYXJ0ZW4gdGhlaXIgZ3JpZHMg4oCcd29u4oCZdCBiZSBhcm91bmQgaW4gMTAgdG8gMTUgeWVhcnMu4oCd</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbRZRCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDkxNTAxOGJiODRkMDliMjE=</field><field name="symbol" class="java.lang.String">rO0ABXQABEdSSUQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbWi2yAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCqj1wo9cK</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCqj1wo9cK</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCqj1wo9cK</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCqj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCnXCj1wo9</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDI3NjFiMjdmYjU4MDhmZDE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mLWHAAAA==</field></document></documents><date>2015-05-07T12:19:00-0500</date></cacheEntry>
<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0CudNaXRjaGVsbCBaZWxsZXIgZGlyZWN0b3Igb2YgdGhlIEZEQXMgQ2VudGVyIGZvciBUb2JhY2NvIFByb2R1Y3RzIHNhaWQgdGhlIGFnZW5jeSBpcyBleHBsb3JpbmcgcG90ZW50aWFsIHByb2R1Y3Qgc3RhbmRhcmRzIGluIHRoZSBhcmVhcyBvZiBhZGRpY3Rpb24gdG94aWNpdHkgYW5kIHByb2R1Y3QgYXBwZWFsIGFzIGl0IHByZXBhcmVzIHRvIGdhaW4gcmVndWxhdG9yeSBhdXRob3JpdHkgb3ZlciBlbGVjdHJvbmljIGNpZ2FyZXR0ZXMgYW5kIG90aGVyIG5pY290aW5lZGVsaXZlcnkgZGV2aWNlcyBUaGUgZXN0YWJsaXNobWVudCBvZiBwcm9kdWN0IHN0YW5kYXJkcyBpcyBvbmUgb2YgZml2ZSBwcmlvcml0aWVzIGZvciB0aGUgZGl2aXNpb24gb3ZlciB0aGUgbmV4dCBmZXcgeWVhcnMgWmVsbGVyIHNhaWQgb3V0bGluaW5nIHRoZW0gcHVibGljbHkgaW4gdGhlIG1vc3QgY29tcHJlaGVuc2l2ZSBtYW5uZXIgdG8gZGF0ZSBUaGV5IGluY2x1ZGUgcHV0dGluZyBpbiBwbGFjZSByZWd1bGF0aW9ucyBmb3IgYXBwcm92aW5nIG5ldyBwcm9kdWN0cyBhbmQgbW9uaXRvcmluZyB0aGVtIGFmdGVyIHRoZXkgcmVhY2ggdGhlIG1hcmtldCBlbnN1cmluZyB0aGF0IHRoZSBhZ2VuY3kgaGFzIGluIHBsYWNlIGEgc3Ryb25nIGNvbXBsaWFuY2UgYW5kIGxhdyBlbmZvcmNlbWVudCBwcmVzZW5jZSBpbiBldmVyeSBzdGF0ZSBwdWJsaWMgZWR1Y2F0aW9uIGFuZCB0aGUgZm9ybXVsYXRpb24gb2YgYW4gRkRBd2lkZSBuaWNvdGluZSBwb2xpY3kgdGhhdCByZWNvZ25pemVzIHNvbWUgcHJvZHVjdHMgYXJlIGxlc3Mgcmlza3kgdGhhbiBvdGhlcnMgVGhlIGFnZW5jeSBpcyBmb3JtdWxhdGluZyBwcm9kdWN0IHN0YW5kYXJkcyBhdCBhIHRpbWUgd2hlbiB0aGUgYmVuZWZpdHMgYW5kIHJpc2tzIG9mIGVjaWdhcmV0dGVzIHJlbWFpbiB0aGUgc3ViamVjdCBvZiBpbnRlbnNlIGRlYmF0ZSBJdHMgbm90IHRoZSBuaWNvdGluZSB0aGF0IGtpbGxzIGhhbGYgb2YgYWxsIGxvbmd0ZXJtIHNtb2tlcnMgaXRzIHRoZSBkZWxpdmVyeSBtZWNoYW5pc20gaGUgc2FpZCBhdCBhIGx1bmNoIGluIFdhc2hpbmd0b24gREMgb3JnYW5pemVkIGJ5IHRoZSBBbWVyaWNhbiBMZWdhY3kgRm91bmRhdGlvbiBhbiBhbnRpdG9iYWNjbyBncm91cCAgIFdlIGhhdmUgdG8gcmVjb2duaXplIHNvbWUgb2YgdGhlc2UgcmVhbGl0aWVzIGFuZCBmaWd1cmUgb3V0IGhvdyB0aGV5IGNhbiBpbXBhY3QgcmVndWxhdG9yeSBwb2xpY3kgVGhlIDIwMDkgVG9iYWNjbyBDb250cm9sIEFjdCBnaXZlcyB0aGUgRkRBIGF1dGhvcml0eSBhcyBsb25nIGFzIGl0IGhhcyBzY2llbnRpZmljIGV2aWRlbmNlIHRvIHN1cHBvcnQgdGhlIHBvbGljeSB0byBiYW4gb3IgcmVzdHJpY3QgaW5ncmVkaWVudHMgYW5kIGNvbXBvdW5kcyBpbiBhIHBhcnRpY3VsYXIgcHJvZHVjdCB0aG91Z2ggdGhlIGFnZW5jeSB3aWxsIG5lZWQgdG8gaXNzdWUgYSBuZXcgcnVsZSB0byBhY3Qgb24gaXRzIGF1dGhvcml0eSBJbiBBcHJpbCB0aGUgRkRBIHByb3Bvc2VkIHJ1bGVzIHRoYXQgd291bGQgYmFuIHRoZSBzYWxlIG9mIGVjaWdhcmV0dGVzIHRvIHBlb3BsZSB1bmRlciB0aGUgYWdlIG9mIDE4IGFuZCBzdWJqZWN0IHRoZSAyIGJpbGxpb24gaW5kdXN0cnkgdG8gZmVkZXJhbCByZWd1bGF0aW9uIGZvciB0aGUgZmlyc3QgdGltZSBUaGUgcHJvcG9zYWwgd291bGQgbm90IHJlc3RyaWN0IGZsYXZvcmVkIHByb2R1Y3RzIG9ubGluZSBzYWxlcyBvciBhZHZlcnRpc2luZyBkaXNhcHBvaW50aW5nIHB1YmxpYyBoZWFsdGggYWR2b2NhdGVzIHdobyBhcmd1ZSB0aGV5IGF0dHJhY3QgY2hpbGRyZW4gWmVsbGVyIHNhaWQgdGhhdCB3aGlsZSBpdCBpcyBuZXZlciBhIGdvb2QgdGhpbmcgZm9yIGEgeW91bmcgcGVyc29uIHRvIGluaGFsZSBuaWNvdGluZSBmdXJ0aGVyIHJlc2VhcmNoIGlzIG5lZWRlZCB0byBhc3Nlc3MgdGhlIG5ldCBpbXBhY3Qgb2YgZWNpZ2FyZXR0ZXMgb24gdGhlIG92ZXJhbGwgaGVhbHRoIG9mIHRoZSBwb3B1bGF0aW9uIGFuZCB0aGF0IGl0IGlzIGltcG9ydGFudCB0byBoYXZlIGFuIG9wZW4gbWluZCBhYm91dCB0aGUgcG90ZW50aWFsIGJlbmVmaXRzIG9mIGVtZXJnaW5nIHRlY2hub2xvZ2llcyBXZSBzaGFyZSB0aGUgY29uY2VybnMgYWJvdXQgdGhlIG1hcmtldGluZyBvZiBlY2lnYXJldHRlcyB0byBraWRzIGhlIHNhaWQgV2Ugc2hhcmUgdGhlIGNvbmNlcm5zIHRoYXQgZmxhdm9ycyBjZXJ0YWlubHkgbG9vayBsaWtlIHRoZXkgd291bGQgYmUgYXBwZWFsaW5nIHRvIGtpZHMgYnV0IGxldHMgbm90IGxvc2Ugc2lnaHQgb2YgdGhlIGJpZ2dlciBwaWN0dXJlIGhlcmV0b2JhY2NvIHVzZSByZW1haW5zIHRoZSBsZWFkaW5nIGNhdXNlIG9mIHByZXZlbnRhYmxlIGRlYXRoIGFuZCBkaXNlYXNlIHByaW5jaXBhbGx5IGJlY2F1c2Ugb2YgdGhlIG9uZ29pbmcgdXNlIG9mIHByb2R1Y3RzIHRoYXQgYnVybiB0b2JhY2NvIFRoZSBGREEgaXMgYWxzbyBjb25zaWRlcmluZyByZWd1bGF0aW5nIG1lbnRob2wgYnV0IFplbGxlciBzYWlkIGhlIGNvdWxkIG5vdCBlc3RpbWF0ZSBob3cgbG9uZyBpdCB3aWxsIHRha2UgdG8gZm9ybXVsYXRlIGEgcHJvcG9zYWwgVGhlIGFnZW5jeSByZWNlaXZlZCAxNzYwMDAgY29tbWVudHMgZnJvbSB0aGUgcHVibGljIG9uIHRoZSBtYXR0ZXIgV2UgYXJlIHNlcmlvdXNseSBjb25zaWRlcmluZyBhbGwgdGhlIGNvbW1lbnRzIGFzIHdlIGNvbnNpZGVyIG91ciByZWd1bGF0b3J5IG9wdGlvbnMgaGUgc2FpZCBXZSBjYW4gb25seSBnbyBhcyBmYXIgYXMgdGhlIHNjaWVuY2Ugd2lsbCB0YWtlIHVzdAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAb2FydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2UsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEzLTAzLTI3VDAwOjAwOjAwWiBUTyAyMDEzLTEyLTAzVDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDMyMjQ=</field><field name="title" class="java.lang.String">rO0ABXQANlRheCBMYXcgRnVlbHMsIFRoZW4gS2lsbHMsIGEgRGlzY291bnQtVG9iYWNjbyBJbmR1c3RyeQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEBFzSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGUzOTY1NDdiNTJkZmZkYWE=</field><field name="symbol" class="java.lang.String">rO0ABXQABFJPTEw=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEGPZCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOOZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOtwo9cKPX</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOOZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOp64UeuFI</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBNrMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAC6VA==</field><field name="id" class="java.lang.String">rO0ABXQAEDdkMmZmMzdiYmUxMThlMzc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKMBAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIxMjI1</field><field name="title" class="java.lang.String">rO0ABXQAL01hcmxib3JvIE1ha2VyIEFsdHJpYSBKdW1waW5nIEludG8gRS1jaWdhcmV0dGVz</field><field name="content" class="java.lang.String">rO0ABXQTalRvYmFjY28gY29tcGFueSBBbHRyaWEgR3JvdXAgSW5jLiBpcyBsYXVuY2hpbmcgaXRzIGZpcnN0IGVsZWN0cm9uaWMgY2lnYXJldHRlIHVuZGVyIHRoZSBNYXJrVGVuIGJyYW5kIGluIEluZGlhbmEgc3RhcnRpbmcgaW4gQXVndXN0IGFuZCBleHBhbmRpbmcgaXRzIHNtb2tlbGVzcyBwcm9kdWN0IG9mZmVyaW5ncy4gVGhlIG93bmVyIG9mIHRoZSBuYXRpb24ncyBiaWdnZXN0IGNpZ2FyZXR0ZSBtYWtlciwgUGhpbGlwIE1vcnJpcyBVU0EsIGFubm91bmNlZCB0aGUgZGV0YWlscyBvZiBpdHMgTnVNYXJrIHN1YnNpZGlhcnkncyBmb3JheSBpbnRvIHRoZSBmYXN0LWdyb3dpbmcgYnVzaW5lc3MgVHVlc2RheS4gSXQncyB0aGUgbGFzdCBvZiB0aGUgbmF0aW9uJ3MgbWFqb3IgdG9iYWNjbyBjb21wYW5pZXMgdG8gbWFya2V0IGFuIGVsZWN0cm9uaWMgY2lnYXJldHRlIGluIGFuIGluZHVzdHJ5d2lkZSBwdXNoIHRvIGRpdmVyc2lmeSBiZXlvbmQgdGhlIHRyYWRpdGlvbmFsIGNpZ2FyZXR0ZSBidXNpbmVzcywgd2hpY2ggaGFzIGJlY29tZSB0b3VnaGVyIGluIHRoZSBmYWNlIG9mIHRheCBoaWtlcywgc21va2luZyBiYW5zLCBoZWFsdGggY29uY2VybnMgYW5kIHNvY2lhbCBzdGlnbWEuIFRoZSBSaWNobW9uZCwgVmEuLWJhc2VkIGNvbXBhbnkgZGVjbGluZWQgdG8gc2F5IHdoZXRoZXIgaXQgcGxhbnMgdG8gZXhwYW5kIGJleW9uZCB0aGUgaW5pdGlhbCBzdGF0ZXdpZGUgdGVzdCBtYXJrZXQgb3Igd2hldGhlciBpdCBwbGFucyB0byBhZHZlcnRpc2Ugb24gVFYg4oCUIGEgcGxhY2UgdG9iYWNjbyBjb21wYW5pZXMgaGF2ZSBsb25nIGJlZW4gcHJvaGliaXRlZCBmcm9tIG1hcmtldGluZyB0cmFkaXRpb25hbCBjaWdhcmV0dGVzLiBEdXJpbmcgYW4gaW52ZXN0b3IgcHJlc2VudGF0aW9uIG9uIFR1ZXNkYXksIENFTyBNYXJ0eSBCYXJyaW5ndG9uIHNhaWQgdGhlIGNvbXBhbnkgaGFzICJzcGVudCBhIGdvb2QgZGVhbCBvZiB0aW1lIHN0dWR5aW5nIHRoZSBjYXRlZ29yeSBhbmQgdGhlIGJ1c2luZXNzIG9wcG9ydHVuaXR5LiIgIlRoZSBjYXRlZ29yeSBpcyBpbiBpdHMgZWFybHkgc3RhZ2VzIGFuZCB0aW1lIHdpbGwgdGVsbCBob3cgaXQgd2lsbCBldm9sdmUsIiBCYXJyaW5ndG9uIHNhaWQuIEVsZWN0cm9uaWMgY2lnYXJldHRlcyBhcmUgYmF0dGVyeS1wb3dlcmVkIGRldmljZXMgdGhhdCBoZWF0IGEgbGlxdWlkIG5pY290aW5lIHNvbHV0aW9uLCBjcmVhdGluZyB2YXBvciB0aGF0IHVzZXJzIGluaGFsZS4gRGV2b3RlZXMgc2F5IGUtY2lnYXJldHRlcyBhZGRyZXNzIGJvdGggdGhlIGFkZGljdGl2ZSBhbmQgYmVoYXZpb3JhbCBhc3BlY3RzIG9mIHNtb2tpbmcuIFNtb2tlcnMgZ2V0IHRoZWlyIG5pY290aW5lIHdpdGhvdXQgdGhlIG1vcmUgdGhhbiA0LDAwMCBjaGVtaWNhbHMgZm91bmQgaW4gcmVndWxhciBjaWdhcmV0dGVzLiBBbmQgdGhleSBnZXQgdG8gaG9sZCBzb21ldGhpbmcgc2hhcGVkIGxpa2UgYSBjaWdhcmV0dGUsIHdoaWxlIHB1ZmZpbmcgYW5kIGV4aGFsaW5nIHNvbWV0aGluZyB0aGF0IGxvb2tzIGxpa2Ugc21va2UuIE1vcmUgdGhhbiA0NSBtaWxsaW9uIEFtZXJpY2FucyBzbW9rZSBjaWdhcmV0dGVzLCBhbmQgYWJvdXQgaGFsZiBvZiBzbW9rZXJzIHRyeSB0byBxdWl0IGVhY2ggeWVhciwgYWNjb3JkaW5nIHRvIHRoZSBDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24uIE1hcmtUZW4gaXMgYSBkaXNwb3NhYmxlIGUtY2lnYXJldHRlIGJ1dCBjYW4gYmUgcmV1c2VkIGJ5IGJ1eWluZyBhIHNlcGFyYXRlIGJhdHRlcnkgcmVjaGFyZ2luZyBraXQgYW5kIGFkZGl0aW9uYWwgY2FydHJpZGdlcyBpbiBib3RoIHRvYmFjY28gYW5kIG1lbnRob2wgZmxhdm9ycy4gVGhlIGNvbXBhbnkgc2FpZCB0aGUgZS1jaWdhcmV0dGUncyAiRm91ciBEcmF3IiB0ZWNobm9sb2d5IGlzIGRlc2lnbmVkIHRvIGdpdmUgdXNlcnMgYSAibW9yZSBjb25zaXN0ZW50IGV4cGVyaWVuY2UiIHRoYXQgY2xvc2VseSByZXNlbWJsZXMgdGhlIGRyYXcgb2YgYSB0cmFkaXRpb25hbCBjaWdhcmV0dGUuIFRoZSBlLWNpZ2FyZXR0ZSwgbWFkZSBpbiBDaGluYSBieSBhIGNvbnRyYWN0IG1hbnVmYWN0dXJlciwgaXMgZXhwZWN0ZWQgdG8gc2VsbCBmb3IgYWJvdXQgJDkuNTAuIFByaWNlcyBmb3IgYWRkaXRpb25hbCBjYXJ0cmlkZ2VzIGFuZCByZWNoYXJnaW5nIGtpdCB3ZXJlIG5vdCBhdmFpbGFibGUuIFRoZSBsaXF1aWQgZm9yIHRoZSBjYXJ0cmlkZ2VzIGlzIGJlaW5nIHByb2R1Y2VkIGluIHRoZSBVLlMuIExhc3Qgd2VlaywgUmV5bm9sZHMgQW1lcmljYW4gSW5jLiwgb3duZXIgb2YgdGhlIG5hdGlvbidzIHNlY29uZC1iaWdnZXN0IHRvYmFjY28gY29tcGFueSwgYW5ub3VuY2VkIHRoYXQgaXQgaXMgbGF1bmNoaW5nIGEgcmV2YW1wZWQgdmVyc2lvbiBvZiBpdHMgVnVzZSBicmFuZCBlbGVjdHJvbmljIGNpZ2FyZXR0ZSBpbiBDb2xvcmFkbyBpbiBKdWx5LCB3aXRoIGl0cyBzaWdodHMgc2V0IG9uIGV4cGFuZGluZyBuYXRpb25hbGx5LiBMb3JpbGxhcmQgSW5jLiwgdGhlIG5hdGlvbidzIHRoaXJkLWJpZ2dlc3QgdG9iYWNjbyBjb21wYW55LCBhY3F1aXJlZCBlLWNpZ2FyZXR0ZSBtYWtlciBCbHUgRWNpZ3MgaW4gQXByaWwgMjAxMiBhbmQgaGFzIGV4cGFuZGVkIHRvIG1vcmUgdGhhbiA4MCwwMDAgcmV0YWlsIG91dGxldHMuIFRoZSBtYXJrZXQgZm9yIGUtY2lnYXJldHRlcywgd2hpY2ggaW5jbHVkZXMgbW9yZSB0aGFuIDI1MCBicmFuZHMsIGhhcyBncm93biBmcm9tIHRoZSB0aG91c2FuZHMgb2YgdXNlcnMgaW4gMjAwNiB0byBzZXZlcmFsIG1pbGxpb24gd29ybGR3aWRlLiBBbmFseXN0cyBlc3RpbWF0ZSBzYWxlcyBjb3VsZCBkb3VibGUgdGhpcyB5ZWFyIHRvICQxIGJpbGxpb24uIFNvbWUgZ28gYXMgZmFyIGFzIHNheWluZyBjb25zdW1wdGlvbiBvZiBlLWNpZ3MgY291bGQgc3VycGFzcyBjb25zdW1wdGlvbiBvZiB0cmFkaXRpb25hbCBjaWdhcmV0dGVzIGluIHRoZSBuZXh0IGRlY2FkZS4gVG9iYWNjbyBjb21wYW55IGV4ZWN1dGl2ZXMgZXZlbiBub3RlZCB0aGF0IGUtY2lnYXJldHRlcyBkcm92ZSB0b3RhbCBpbmR1c3RyeSBjaWdhcmV0dGUgdm9sdW1lcyBkb3duIGFib3V0IDYwMCBtaWxsaW9uIGNpZ2FyZXR0ZXMsIG9yIGFib3V0IDEgcGVyY2VudCwgZHVyaW5nIHRoZSBmaXJzdCBxdWFydGVyLCBleGNsdWRpbmcgSW50ZXJuZXQgc2FsZXMg4oCUIGEgbWFqb3IgYXZlbnVlIGZvciBlLWNpZyBwdXJjaGFzZXMuIFRoZSBGb29kIGFuZCBEcnVnIEFkbWluaXN0cmF0aW9uIHBsYW5zIHRvIGFzc2VydCByZWd1bGF0b3J5IGF1dGhvcml0eSBvdmVyIGUtY2lnYXJldHRlcyBpbiB0aGUgbmVhciBmdXR1cmUuIFB1YmxpYyBoZWFsdGggb2ZmaWNpYWxzIHNheSB0aGUgc2FmZXR5IG9mIGUtY2lnYXJldHRlcyBhbmQgdGhlaXIgZWZmZWN0aXZlbmVzcyBpbiBoZWxwaW5nIHBlb3BsZSBxdWl0IHJlZ3VsYXIgc21va2VzIGhhdmVuJ3QgYmVlbiBmdWxseSBzdHVkaWVkLiBEZXNwaXRlIHRoZSByZWd1bGF0b3J5IHVuY2VydGFpbnRpZXMsIGVsZWN0cm9uaWMgY2lnYXJldHRlcyBoYXZlIGF0dHJhY3RlZCB0aGUgYXR0ZW50aW9uIG9mIGludmVzdG9ycy4gRWxlY3Ryb25pYyBjaWdhcmV0dGUgbWFrZXIgTmpveSBJbmMuIHNhaWQgTW9uZGF5IGl0IGhhcyByYWlzZWQgJDc1IG1pbGxpb24gaW4gZmluYW5jaW5nIGZyb20gaW52ZXN0b3JzIGluY2x1ZGluZyBOYXBzdGVyIGZvdW5kZXIgYW5kIGVudHJlcHJlbmV1ciBTZWFuIFBhcmtlciBhbmQgSG9tZXdvb2QgQ2FwaXRhbCBwcmluY2lwYWwgRG91Z2xhcyBUZWl0ZWxiYXVtIHRvIGJlIHVzZWQgZm9yIG1hcmtldGluZywgY2xpbmljYWwgdHJpYWxzLCByZXNlYXJjaCBhbmQgZGV2ZWxvcG1lbnQsIGFuZCBpbnRlcm5hdGlvbmFsIGV4cGFuc2lvbi4gTXVzaWNpYW4gQnJ1bm8gTWFycyBhbHNvIGhhcyBpbnZlc3RlZCB0aGUgY29tcGFueSB3aG9zZSBOam95IEtpbmcgZGlzcG9zYWJsZSBlLWNpZ2FyZXR0ZXMgYXJlIGF2YWlsYWJsZSBpbiBtb3JlIHRoYW4gNjAsMDAwIHJldGFpbCBzdG9yZXMuIExpa2Ugb3RoZXIgdG9iYWNjbyBjb21wYW5pZXMsIEFsdHJpYSBhbHNvIGlzIGZvY3VzaW5nIG9uIGNpZ2FyZXR0ZSBhbHRlcm5hdGl2ZXMgZm9yIGZ1dHVyZSBzYWxlcyBncm93dGggYmVjYXVzZSB0aGUgZGVjbGluZSBpbiBjaWdhcmV0dGUgc21va2luZyBpcyBleHBlY3RlZCB0byBjb250aW51ZS4gVGhlIGNvbXBhbnkgc2FpZCBUdWVzZGF5IGl0IGlzIGV4cGFuZGluZyBpdHMgVmVydmUgY2hld2FibGUsIGRpc3Bvc2FibGUgbmljb3RpbmUgZGlzY3MgZnJvbSA2MCBzdG9yZXMgdG8gYWJvdXQgMSwyMDAgdGhyb3VnaG91dCBWaXJnaW5pYSBpbiB0aGUgc2Vjb25kIGhhbGYgb2YgdGhlIHllYXIuIEl0IGFsc28gcGxhbnMgdG8gZGVidXQgYSBndW0gY29udGFpbmluZyB0b2JhY2NvIGluIERlbm1hcmsgdGhpcyBzdW1tZXIgdW5kZXIgdGhlIFRqdSAocHJvbm91bmNlZCBsaWtlICJjaGV3IikgdGhyb3VnaCBhIHByZXZpb3VzbHkgYW5ub3VuY2VkIGpvaW50IHZlbnR1cmUgd2l0aCBhbiBhZmZpbGlhdGUgb2YgRmVydGluIFBoYXJtYSBBL1MgdG8gZGV2ZWxvcCBub24tY29tYnVzdGlibGUgbmljb3RpbmUtY29udGFpbmluZyBwcm9kdWN0cy4gQWx0cmlhLCB3aG9zZSBicmFuZHMgaW5jbHVkZSB0b3Atc2VsbGluZyBNYXJsYm9ybyBjaWdhcmV0dGVzLCBTa29hbCBzbW9rZWxlc3MgdG9iYWNjbyBhbmQgQmxhY2sgJiBNaWxkIGNpZ2FycywgYWxzbyBvbiBUdWVzZGF5IHJlYWZmaXJtZWQgaXRzIDIwMTMgZnVsbC15ZWFyIGFkanVzdGVkIGVhcm5pbmdzIGZvcmVjYXN0IG9mIGJldHdlZW4gJDIuMzUgYW5kICQyLjQxIHBlciBzaGFyZS4gIFRoZSBjb21wYW55IGFsc28gb3ducyBhIHdpbmUgYnVzaW5lc3MsIGhvbGRzIGEgdm90aW5nIHN0YWtlIGluIGJyZXdlciBTQUJNaWxsZXIsIGFuZCBoYXMgYSBmaW5hbmNpYWwgc2VydmljZXMgZGl2aXNpb24u</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8xmtyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDJmZWFiOTFhMTFiYzJmMGU=</field><field name="symbol" class="java.lang.String">rO0ABXQABEVDSUc=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT82wTiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/iPXCj1wo9</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/iPXCj1wo9</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/iPXCj1wo9</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/iPXCj1wo9</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/iPXCj1wo9</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDJmODVkMDFiZGZlODZiYTY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGsNAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE1NTU3</field><field name="title" class="java.lang.String">rO0ABXQALFdyaWdsZXkgUHVsbHMgTmV3IENhZmZlaW5hdGVkIEd1bSBvZmYgTWFya2V0</field><field name="content" class="java.lang.String">rO0ABXQL4lRoZSBjb21wYW55IHNhaWQgV2VkbmVzZGF5IHRoYXQgaXQgaGFzIHN0b3BwZWQgbmV3IHNhbGVzIGFuZCAgbWFya2V0aW5nIG9mIEFsZXJ0IEVuZXJneSBDYWZmZWluZSBHdW0gIm91dCBvZiByZXNwZWN0IiBmb3IgdGhlIGFnZW5jeSwgIHdoaWNoIHNhaWQgaXQgd291bGQgaW52ZXN0aWdhdGUgdGhlIGhlYWx0aCBlZmZlY3RzIG9mIGFkZGVkIGNhZmZlaW5lIGluICBmb29kcyBqdXN0IGFzIFdyaWdsZXkgcm9sbGVkIG91dCBBbGVydCBsYXRlIGxhc3QgbW9udGguIEEgc3RpY2sgb2YgdGhlICBndW0gaXMgZXF1aXZhbGVudCB0byBoYWxmIGEgY3VwIG9mIGNvZmZlZS4gIkFmdGVyIGRpc2N1c3Npb25zIHdpdGggdGhlIEZEQSwgd2UgaGF2ZSBhIGdyZWF0ZXIgYXBwcmVjaWF0aW9uIGZvciAgaXRzIGNvbmNlcm4gYWJvdXQgdGhlIHByb2xpZmVyYXRpb24gb2YgY2FmZmVpbmUgaW4gdGhlIG5hdGlvbidzIGZvb2QgIHN1cHBseSwiIHNhaWQgV3JpZ2xleSBOb3J0aCBBbWVyaWNhIFByZXNpZGVudCBDYXNleSBLZWxsZXIgaW4gYSAgc3RhdGVtZW50IHRvIFRoZSBBc3NvY2lhdGVkIFByZXNzLiAiVGhlcmUgaXMgYSBuZWVkIGZvciBjaGFuZ2VzIGluIHRoZSAgcmVndWxhdG9yeSBmcmFtZXdvcmsgdG8gYmV0dGVyIGd1aWRlIHRoZSBjb25zdW1lcnMgYW5kIHRoZSBpbmR1c3RyeSAgYWJvdXQgdGhlIGFwcHJvcHJpYXRlIGxldmVsIGFuZCB1c2Ugb2YgY2FmZmVpbmF0ZWQgcHJvZHVjdHMuIiBLZWxsZXIgc2FpZCB0aGUgY29tcGFueSBoYXMgcGF1c2VkIHByb2R1Y3Rpb24gYW5kIHNhbGVzIG9mIHRoZSBndW0gdG8gZ2l2ZSB0aGUgYWdlbmN5IHRpbWUgdG8gcmVndWxhdGUgY2FmZmVpbmUtYWRkZWQgcHJvZHVjdHMuIE1pY2hhZWwgVGF5bG9yLCBGREEncyBkZXB1dHkgY29tbWlzc2lvbmVyIG9mIGZvb2RzLCBzYWlkIFdyaWdsZXkncyAgZGVjaXNpb24gdG8gc3RvcCBwcm9kdWN0aW9uIGZvciBub3cgImRlbW9uc3RyYXRlcyByZWFsIGxlYWRlcnNoaXAgYW5kICBjb21taXRtZW50IHRvIHRoZSBwdWJsaWMgaGVhbHRoLiIgSGUgc2FpZCB0aGUgY29tcGFueSBtYWRlIHRoZSBtb3ZlICBhZnRlciBhIHNlcmllcyBvZiBkaXNjdXNzaW9ucyB3aXRoIHRoZSBhZ2VuY3kuICJXZSBob3BlIG90aGVycyBpbiB0aGUgZm9vZCBpbmR1c3RyeSB3aWxsIGV4ZXJjaXNlIHNpbWlsYXIgcmVzdHJhaW50LCIgVGF5bG9yIHNhaWQuIEZvb2QgbWFudWZhY3R1cmVycyBoYXZlIGFkZGVkIGNhZmZlaW5lIHRvIGNhbmR5LCBudXRzIGFuZCBvdGhlciBzbmFjayAgZm9vZHMgaW4gcmVjZW50IHllYXJzLiBKZWxseSBCZWxseSAiRXh0cmVtZSBTcG9ydCBCZWFucywiIGZvciBleGFtcGxlLCAgaGF2ZSA1MCBtZyBvZiBjYWZmZWluZSBpbiBlYWNoIDEwMC1jYWxvcmllIHBhY2ssIHdoaWxlIEFybWEgRW5lcmd5IFNueCAgbWFya2V0cyB0cmFpbCBtaXgsIGNoaXBzIGFuZCBvdGhlciBwcm9kdWN0cyB0aGF0IGhhdmUgY2FmZmVpbmUuIFRoZSBjb21wYW5pZXMgc2F5IHRoZXkgYXJlIG1hcmtldGluZyB0aGUgcHJvZHVjdHMgdG8gYWR1bHRzLCBidXQgIGNyaXRpY3Mgc2F5IHRoYXQncyBub3QgZW5vdWdoIHdoZW4gdGhlIGNhZmZlaW5lIGlzIGFkZGVkIHRvIGl0ZW1zIGxpa2UgIGNhbmR5IHRoYXQgYXJlIGF0dHJhY3RpdmUgdG8gY2hpbGRyZW4uIE1hbnkgb2YgdGhlIGVuZXJneSBmb29kcyBhcmUgIHByb21vdGVkIHdpdGggc29jaWFsIG1lZGlhIGNhbXBhaWducywgYW5vdGhlciB3YXkgdGhleSBjb3VsZCBiZSB0YXJnZXRlZCAgdG8geW91bmcgcGVvcGxlLiBNYWpvciBtZWRpY2FsIGFzc29jaWF0aW9ucyBoYXZlIHdhcm5lZCB0aGF0IHRvbyBtdWNoIGNhZmZlaW5lIGNhbiBiZSAgZGFuZ2Vyb3VzIGZvciBjaGlsZHJlbiwgd2hvIGhhdmUgbGVzcyBhYmlsaXR5IHRvIHByb2Nlc3MgdGhlIHN0aW11bGFudCAgdGhhbiBhZHVsdHMuIFRoZSBBbWVyaWNhbiBBY2FkZW15IG9mIFBlZGlhdHJpY3Mgc2F5cyBpdCBoYXMgYmVlbiBsaW5rZWQgIHRvIGhhcm1mdWwgZWZmZWN0cyBvbiB5b3VuZyBwZW9wbGUncyBkZXZlbG9waW5nIG5ldXJvbG9naWMgYW5kICBjYXJkaW92YXNjdWxhciBzeXN0ZW1zLiBUYXlsb3Igc2FpZCBsYXN0IHdlZWsgdGhhdCB0aGUgcHJvbGlmZXJhdGlvbiBvZiBuZXcgZm9vZHMgd2l0aCAgY2FmZmVpbmUgYWRkZWQg4oCUIGVzcGVjaWFsbHkgdGhlIGd1bSwgd2hpY2ggaGUgZXF1YXRlZCB0byAiZm91ciBjdXBzIG9mICBjb2ZmZWUgaW4geW91ciBwb2NrZXQiIOKAlCBtYXkgZXZlbiBwcm9tcHQgdGhlIEZEQSB0byBsb29rIGNsb3NlciBhdCB0aGUgIHdheSBhbGwgZm9vZCBpbmdyZWRpZW50cyBhcmUgcmVndWxhdGVkLiAgVGhlIGFnZW5jeSBpcyBhbHJlYWR5ICBpbnZlc3RpZ2F0aW5nIHRoZSBzYWZldHkgb2YgZW5lcmd5IGRyaW5rcyBhbmQgZW5lcmd5IHNob3RzLCBwcm9tcHRlZCBieSAgY29uc3VtZXIgcmVwb3J0cyBvZiBpbGxuZXNzIGFuZCBkZWF0aC4gVGhlIG9ubHkgdGltZSBGREEgaGFzIGV4cGxpY2l0bHkgYXBwcm92ZWQgdGhlIGFkZGVkIHVzZSBvZiBjYWZmZWluZSAgaW4gYSBmb29kIG9yIGRyaW5rIHdhcyBpbiB0aGUgMTk1MHMgZm9yIGNvbGFzLiBUYXlsb3Igc2FpZCB0aGUgY3VycmVudCAgcHJvbGlmZXJhdGlvbiBvZiBjYWZmZWluZSBhZGRlZCB0byBmb29kcyBpcyAiYmV5b25kIGFueXRoaW5nIEZEQSAgZW52aXNpb25lZC4iIFRoZSBGREEgc2FpZCBpdCB3b3VsZCBsb29rIGF0IHRoZSBwb3RlbnRpYWwgaW1wYWN0IHRoZXNlIG5ldyBhbmQgZWFzeSAgc291cmNlcyBvZiBjYWZmZWluZSB3aWxsIGhhdmUgb24gY2hpbGRyZW4ncyBoZWFsdGggYW5kIHRha2UgYWN0aW9uIGlmICBuZWNlc3NhcnkuIFRheWxvciBzYWlkIHRoYXQgaGUgYW5kIG90aGVyIEZEQSBvZmZpY2lhbHMgaGF2ZSBoZWxkICBtZWV0aW5ncyB3aXRoIHNvbWUgb2YgdGhlIGxhcmdlIGZvb2QgY29tcGFuaWVzIHRoYXQgaGF2ZSB2ZW50dXJlZCBpbnRvICBjYWZmZWluYXRlZCBwcm9kdWN0cywgaW5jbHVkaW5nIE1hcnMgSW5jLiwgb2Ygd2hpY2ggV3JpZ2xleSBpcyBhICBzdWJzaWRpYXJ5Lg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6CgqSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDAxNjYwNjYxZTdkODRjZWQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAA1NOWA==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6HqQCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCDMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCL1wo9cKP</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBB+FHrhR64</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCFHrhR64U</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCA9cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAFiTA==</field><field name="id" class="java.lang.String">rO0ABXQAEDVmZGUzMzE2ZDk4ZTNlNWM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGIDAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM0OTA=</field><field name="title" class="java.lang.String">rO0ABXQALkVVIFBhcmxpYW1lbnQgQXBwcm92ZXMgVG91Z2ggTmV3IFRvYmFjY28gUnVsZXM=</field><field name="content" class="java.lang.String">rO0ABXQLskV1cm9wZWFuIGxhd21ha2VycyBhcHByb3ZlZCBzd2VlcGluZyBuZXcgcmVndWxhdGlvbnMgZ292ZXJuaW5nIHRoZSBtdWx0aS1iaWxsaW9uIGRvbGxhciB0b2JhY2NvIG1hcmtldCBvbiBUdWVzZGF5LCBpbmNsdWRpbmcgbGltaXRzIG9uIGVsZWN0cm9uaWMgY2lnYXJldHRlcywgYmlnZ2VyIHdhcm5pbmdzIG9uIGNpZ2FyZXR0ZSBwYWNrcyBhbmQgYSBiYW4gb24gbWVudGhvbCBhbmQgb3RoZXIgZmxhdm9yaW5ncyBpbiBhIGJpZCB0byBmdXJ0aGVyIGN1cmIgc21va2luZy4gVGhlIEV1cm9wZWFuIFBhcmxpYW1lbnQgdm90ZSBpbiBTdHJhc2JvdXJnIGNhbWUgYWZ0ZXIgbW9udGhzIG9mIGJpdHRlciBkZWJhdGUgYW5kIGFuIHVudXN1YWxseSBzdHJvbmcgbG9iYnlpbmcgY2FtcGFpZ24gYnkgdGhlIHRvYmFjY28gaW5kdXN0cnksIHdoaWNoIGRlY3JpZXMgdGhlIHJlZ3VsYXRpb25zIGFzIGRpc3Byb3BvcnRpb25hdGUgYW5kIGxpbWl0aW5nIGNvbnN1bWVyIGZyZWVkb20uICBUaGUgUGFybGlhbWVudCBkaXNtaXNzZWQgbWFueSBvZiB0aGUgaW5kdXN0cnkncyBhcmd1bWVudHMsIGJ1dCBhZ3JlZWQgb24gd2F0ZXJlZC1kb3duIHZlcnNpb25zIG9mIHNvbWUgb2YgdGhlIG1vc3Qgc2Vuc2l0aXZlIGxlZ2lzbGF0aW9uLiBUaGUgbGVnaXNsYXR1cmUgc3RpbGwgbXVzdCByZWFjaCBhIGNvbXByb21pc2Ugd2l0aCB0aGUgMjggRVUgZ292ZXJubWVudHMgb24gY2VydGFpbiBwb2ludHMgYmVmb3JlIHRoZSBydWxlcyBjYW4gZW50ZXIgaW50byBmb3JjZS4gRGlwbG9tYXRzIHNheSBhIGRlYWwgY291bGQgYmUgc3RydWNrIGJ5IHRoZSBlbmQgb2YgdGhlIHllYXIuIFRoZSBsYXdtYWtlcnMgdm90ZWQgdG8gaW1wb3NlIHdhcm5pbmcgbGFiZWxzIOKAlCB3aXRoIHRoZSBpbmNsdXNpb24gb2YgZ3J1ZXNvbWUgcGljdG9yaWFscywgZm9yIGV4YW1wbGUgc2hvd2luZyBjYW5jZXItaW5mZXN0ZWQgbHVuZ3Mg4oCUIGNvdmVyaW5nIDY1IHBlcmNlbnQgb2YgY2lnYXJldHRlIHBhY2tzLCByZWplY3RpbmcgYSBtZWFzdXJlIGZvciBibGFuayBwYWNrYWdpbmcgaW5zdGVhZC4gTGVnaXNsYXRvcnMgYWxzbyB2b3RlZCBmb3IgbmV3IGxpbWl0cyBvbiBhZHZlcnRpc2luZyBmb3IgZWxlY3Ryb25pYyBjaWdhcmV0dGVzLCBidXQgcmVqZWN0ZWQgYSBtZWFzdXJlIHRoYXQgd291bGQgaGF2ZSByZXN0cmljdGVkIHRoZW0gdG8gbWVkaWNhbCB1c2Ugb25seS4gVGhlIGJhdHRlcnktb3BlcmF0ZWQgcHJvZHVjdHMgdHVybiBuaWNvdGluZSBpbnRvIGEgdmFwb3IgaW5oYWxlZCBieSB0aGUgdXNlciBhbmQgYXJlIG9mdGVuIG1hcmtldGVkIGFzIGEgbGVzcyBoYXJtZnVsIGFsdGVybmF0aXZlIHRvIHRvYmFjY28uIE1hbnkgaGVhbHRoIGV4cGVydHMgc2F5IGUtY2lnYXJldHRlcyBhcmUgdXNlZnVsIGZvciBwZW9wbGUgdHJ5aW5nIHRvIHF1aXQgb3IgY3V0IGRvd24gb24gbmljb3RpbmUuIFRoZSBQYXJsaWFtZW50IGFsc28gdm90ZWQgdG8gYmFuIG1lbnRob2wg4oCUIHRob3VnaCBub3QgdW50aWwgMjAyMiDigJQgYW5kIHNvbWUgb3RoZXIgZmxhdm9yaW5ncy4gVGhleSByZWplY3RlZCBhIGJhbiBvbiBzbGltIGNpZ2FyZXR0ZXMuIEVVIG9mZmljaWFscyBwbGVhZGVkIHBhc3Npb25hdGVseSBmb3IgdG91Z2ggYW50aS10b2JhY2NvIG1lYXN1cmVzLCBhcmd1aW5nIGl0J3MgYSBjcnVjaWFsIHF1ZXN0aW9uIG9mIHB1YmxpYyBoZWFsdGguIFRoZXkgYWxzbyB3YW50IHRvIHN0b3AgeW91bmdzdGVycyBmcm9tIGJlaW5nIHN3YXllZCBpbnRvIHNtb2tpbmcgYnkgbmV3LCBmYW5jeSBwYWNrYWdpbmcsIGUtY2lnYXJldHRlcywgb3IgY2lnYXJldHRlcyBmZWF0dXJpbmcgZmxhdm9ycyBzdWNoIGFzIGZydWl0IGFyb21hcy4gU21va2luZyBiYW5zIGluIHB1YmxpYywgbGltaXRzIG9uIHRvYmFjY28gZmlybXMnIGFkdmVydGlzaW5nLCBhbmQgb3RoZXIgbWVhc3VyZXMgb3ZlciB0aGUgcGFzdCBkZWNhZGUgaGF2ZSBzZWVuIHRoZSBudW1iZXIgb2Ygc21va2VycyBmYWxsIGZyb20gYW4gZXN0aW1hdGVkIDQwIHBlcmNlbnQgb2YgdGhlIEVVJ3MgNTAwIG1pbGxpb24gY2l0aXplbnMgdG8gMjggcGVyY2VudCBub3cuIFN0aWxsLCB0cmVhdG1lbnQgb2Ygc21va2UtcmVsYXRlZCBkaXNlYXNlcyBjb3N0cyBhYm91dCAyNSBiaWxsaW9uIGV1cm9zICgkMzQgYmlsbGlvbikgYSB5ZWFyLCBhbmQgdGhlIGJsb2MgZXN0aW1hdGVzIHRoZXJlIGFyZSBhcm91bmQgNzAwLDAwMCBzbW9raW5nLXJlbGF0ZWQgZGVhdGhzIHBlciBhbm51bSBhY3Jvc3MgdGhlIDI4LW5hdGlvbiBibG9jLiBQcmltZSBNaW5pc3RlciBFbmRhIEtlbm55IG9mIElyZWxhbmQgb24gTW9uZGF5IHdyb3RlIGEgZmVydmVudCBhcHBlYWwgdG8gbGF3bWFrZXJzLCBzYXlpbmc6ICJFdmVyeSB5ZWFyLCBtb3JlIEV1cm9wZWFucyBkaWUgZnJvbSBzbW9raW5nIHRoYW4gZnJvbSB0aGUgY29tYmluZWQgdG90YWwgb2YgY2FyIGFjY2lkZW50cywgZmlyZXMsIGhlcm9pbiwgY29jYWluZSwgbXVyZGVyIGFuZCBzdWljaWRlLiIgTG9iYnlpbmcgYWdhaW5zdCB0aGUgbWVhc3VyZSB3YXMgbGVkIGJ5IFBoaWxpcCBNb3JyaXMgSW50ZXJuYXRpb25hbCBJbmMuLCB3aGljaCBvd25zIHNldmVyYWwgYnJhbmRzIHN1Y2ggYXMgTWFybGJvcm8gYW5kIGNhbGxlZCB0aGUgbmV3IGxlZ2lzbGF0aW9uICJkZWVwbHkgZmxhd2VkLiIgVGhlIGNvbXBhbnkgbWFpbnRhaW5zIHRoYXQsIGFtb25nIG90aGVyIHRoaW5ncywgYmFubmluZyBtZW50aG9sLCBzbGltIGNpZ2FyZXR0ZXMgb3Igc21hbGwgcGFja2FnZXMgd291bGQgdmlvbGF0ZSBFVSBydWxlcy4gUGhpbGlwIE1vcnJpcywgd2l0aCAkOC41IGJpbGxpb24gb2Ygc2FsZXMgYW5kIDEyLDUwMCBlbXBsb3llZXMgaW4gRXVyb3BlLCBhbHNvIGNsYWltZWQgdGhlIHJlZ3VsYXRpb24gY291bGQgcmVzdWx0IGluIHVwIHRvIDE3NSwwMDAgam9iIGxvc3NlcyBhbmQgbG9zdCB0YXggcmV2ZW51ZXMgb2YgNSBiaWxsaW9uIGV1cm9zIHBlciB5ZWFyLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGWb6CAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDViMzRkZTUxNGExMDllMzE=</field><field name="symbol" class="java.lang.String">rO0ABXQABEVDSUc=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGblfyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA0AAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA0AAAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA0AAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA0AAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA0AAAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAZA==</field><field name="id" class="java.lang.String">rO0ABXQAEGE4NjExYjMxZDg3MTMwMjI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKWEAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwNTI=</field><field name="title" class="java.lang.String">rO0ABXQAMlRoZSBTZWNyZXQsIERpcnR5IENvc3Qgb2YgT2JhbWEncyBHcmVlbiBQb3dlciBQdXNo</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJK5SMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI3MTcyMzgzMzAxZTY3Yjg=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZBUk0=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJQC38AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyI9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABp3A==</field><field name="id" class="java.lang.String">rO0ABXQAEGIxNzhiNTk3MDYyZjcwYTE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGoqAAAA==</field></document></documents><date>2015-05-07T12:07:25-0500</date></cacheEntry>
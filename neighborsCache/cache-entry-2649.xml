<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0EyRNZXhpY29zIGVjb25vbXkgd2lsbCBleHBhbmQgMTggcGVyY2VudCB0aGlzIHllYXIgZG93biBmcm9tIGEgcHJldmlvdXMgZm9yZWNhc3Qgb2YgMzEgcGVyY2VudCBkZXB1dHkgRmluYW5jZSBNaW5pc3RlciBGZXJuYW5kbyBBcG9ydGVsYSB0b2xkIHJlcG9ydGVycyBpbiBNZXhpY28gQ2l0eSBUaGUgcmV2aXNpb24gY2FtZSBob3VycyBhZnRlciB0aGUgTmF0aW9uYWwgU3RhdGlzdGljcyBJbnN0aXR1dGUgc2FpZCB0aGUgZWNvbm9teSBncmV3IGxlc3MgdGhhbiBhbmFseXN0cyBmb3JlY2FzdCBpbiB0aGUgc2Vjb25kIHF1YXJ0ZXIgV2l0aCBpbmR1c3RyaWFsIGFjdGl2aXR5IHNsdW1waW5nIDA2IHBlcmNlbnQgaW4gdGhlIHNlY29uZCBxdWFydGVyIGZyb20gYSB5ZWFyIGVhcmxpZXIgZ3Jvc3MgZG9tZXN0aWMgcHJvZHVjdCBleHBhbmRlZCAxNSBwZXJjZW50IGxlc3MgdGhhbiBmb3JlY2FzdCBieSBhbnkgb2YgdGhlIDE3IGVjb25vbWlzdHMgc3VydmV5ZWQgYnkgQmxvb21iZXJnIHdobyBoYWQgYSBtZWRpYW4gZXN0aW1hdGUgb2YgMjMgcGVyY2VudCBUaGUgZWNvbm9teSBjb250cmFjdGVkIDA3IHBlcmNlbnQgaW4gdGhlIHNlY29uZCBxdWFydGVyIGZyb20gdGhlIHByZXZpb3VzIHRocmVlIG1vbnRocyBtYWtpbmcgdGhlIGZpcnN0IGhhbGYgdGhlIHNsb3dlc3QgcGVyaW9kIG9mIGV4cGFuc2lvbiBzaW5jZSB0aGUgZW5kIG9mIHRoZSAyMDA5IHJlY2Vzc2lvbiBUaGUgcmlzayBvZiBlY29ub21pYyBzdGFnbmF0aW9uIGlzIGhpZ2ggT2NpZWwgSGVybmFuZGV6IHRoZSBoZWFkIG9mIGZpeGVkIGluY29tZSBhdCBHcnVwbyBGaW5hbmNpZXJvIEJCVkEgQmFuY29tZXIgU0Egc2FpZCBpbiBhbiBlbWFpbGVkIHJlc3BvbnNlIHRvIHF1ZXN0aW9ucyBBIHNjZW5hcmlvIHRoYXQganVzdGlmaWVzIGEgNTBiYXNpc3BvaW50IGN1dCBpbiB0aGUgb3Zlcm5pZ2h0IHJhdGUgaXMgb24gdGhlIHRhYmxlIFRoZSByZXBvcnQgc3RyZW5ndGhlbnMgQmFuY29tZXJzIGZvcmVjYXN0IHRoYXQgdGhlIGNlbnRyYWwgYmFuayB3aWxsIGN1dCBpdHMgNCBwZXJjZW50IHJlZmVyZW5jZSByYXRlIGluIFNlcHRlbWJlciBvbmx5IHRoZSBzZWNvbmQgY3V0IHNpbmNlIDIwMDkgSGVybmFuZGV6IHNhaWQgVHJhZGVycyBhcmUgYXNzaWduaW5nIGEgMjAgcGVyY2VudCBjaGFuY2Ugb2YgYSByZWR1Y3Rpb24gdGhpcyB5ZWFyIGJhc2VkIG9uIHN3YXByYXRlIGNvbnRyYWN0cyB1c2VkIHRvIHNwZWN1bGF0ZSBvbiBib3Jyb3dpbmcgY29zdHMgdXAgZnJvbSA4IHBlcmNlbnQgeWVzdGVyZGF5ICAgICAgICAgICAgICAgICAgICAgICBDZW50cmFsIEJhbmsgT3V0bG9vayBUaGUgcGVzbyBnYWluZWQgMDggcGVyY2VudCBUdWVzZGF5IHRvIDEyOTc0NSBwZXIgZG9sbGFyIENvbnN0cnVjdGlvbiBhY3Rpdml0eSBjb250cmFjdGVkIDQgcGVyY2VudCBpbiB0aGUgcXVhcnRlciBmcm9tIGEgeWVhciBiZWZvcmUgYW1pZCBhIGRyb3AgaW4gZ292ZXJubWVudCBzcGVuZGluZyBBY3Rpdml0eSBpbiBhZ3JpY3VsdHVyZSBsaXZlc3RvY2sgYW5kIGZpc2hpbmcgaW5kdXN0cmllcyBpbmNyZWFzZWQgMTMgcGVyY2VudCBhbmQgc2VydmljZSBzZWN0b3JzIHN1Y2ggYXMgdHJhbnNwb3J0YXRpb24gZmluYW5jZSBhbmQgbWVkaWEgZ3JldyAyNiBwZXJjZW50IFN0YWduYW50IGV4cG9ydHMgdG8gdGhlIFVTIE1leGljb3MgYmlnZ2VzdCB0cmFkZSBwYXJ0bmVyIGFuZCBtdXRlZCBwdWJsaWMgc3BlbmRpbmcgbGVkIHRoZSBjZW50cmFsIGJhbmsgdG8gY3V0IGl0cyBncm93dGggZm9yZWNhc3QgZm9yIHRoaXMgeWVhciB0byBiZXR3ZWVuIDIgcGVyY2VudCBhbmQgMyBwZXJjZW50IGZyb20gMyBwZXJjZW50IHRvIDQgcGVyY2VudCBUaGVyZSBpcyB0aGF0IGZlYXIgdGhhdCB0aGUgdGhpcmQgcXVhcnRlciB3aWxsIGJlIGFub3RoZXIgd2VhayBxdWFydGVyIFJhZmFlbCBkZSBsYSBGdWVudGUgYW4gZWNvbm9taXN0IGF0IFVCUyBBRyBzYWlkIGluIGEgdGVsZXBob25lIGludGVydmlldyBmcm9tIFN0YW1mb3JkIENvbm5lY3RpY3V0IENyZWRpdCBTdWlzc2UgR3JvdXAgQUcgbG93ZXJlZCBpdHMgMjAxMyBncm93dGggZm9yZWNhc3QgdG8gMTMgcGVyY2VudCBmcm9tIDI4IHBlcmNlbnQgdG9kYXkgd2hpbGUgQmFyY2xheXMgUGxjIGxvd2VyZWQgaXRzIGZvcmVjYXN0IHRvIDE0IHBlcmNlbnQgZnJvbSAyNSBwZXJjZW50IFRoZSBzdGF0aXN0aWNzIGFnZW5jeSB1cGRhdGVkIGl0cyBiYXNlIHllYXIgaW4gVHVlc2RheXMgcmVwb3J0IHRvIDIwMDggZnJvbSAyMDAzIGFuZCByZXZpc2VkIHBhc3QgR0RQIGZpZ3VyZXMgICAgICAgICAgICAgICAgICAgICAgICAgICBNdXRlZCBFeHBvcnRzIE1leGljYW4gZXhwb3J0cyBpbmNyZWFzZWQganVzdCAwNiBwZXJjZW50IGluIHRoZSBmaXJzdCBzaXggbW9udGhzIG9mIHRoZSB5ZWFyIHRoZSBzbG93ZXN0IHN0YXJ0IHRvIGEgeWVhciBzaW5jZSB0aGUgMjAwOSByZWNlc3Npb24gYW5kIGNvbXBhcmVkIHdpdGggNyBwZXJjZW50IGdyb3d0aCBpbiB0aGUgZmlyc3QgaGFsZiBvZiAyMDEyIFdhbE1hcnQgZGUgTWV4aWNvIFNBQiB0aGUgbGFyZ2VzdCByZXRhaWxlciBpbiBMYXRpbiBBbWVyaWNhIHNhdyBzYWxlcyBhdCBNZXhpY2FuIHN0b3JlcyBvcGVuIGF0IGxlYXN0IGEgeWVhciBkcm9wIDMxIHBlcmNlbnQgaW4gSnVseSBmcm9tIGEgeWVhciBlYXJsaWVyIG1vcmUgdGhhbiB0aGUgMiBwZXJjZW50IGRlY2xpbmUgcHJvamVjdGVkIGJ5IENyZWRpdCBTdWlzc2UgR3JvdXAgQUcgVGhhdCBmb2xsb3dlZCBhIGRyb3Agb2YgMTggcGVyY2VudCBpbiBzYW1lc3RvcmUgc2FsZXMgaW4gTWV4aWNvIGluIHRoZSBzZWNvbmQgcXVhcnRlciBUaGUgZWNvbm9teSByZW1haW5zIGNoYWxsZW5naW5nIGluIE1leGljbyBSYWZhZWwgTWF0dXRlIFdhbG1leHMgY2hpZWYgZmluYW5jaWFsIG9mZmljZXIgc2FpZCBvbiBhbiBlYXJuaW5ncyBjYWxsIG9uIEp1bHkgMjUgY2l0aW5nIGxvd2VyIHJlbWl0dGFuY2VzIGZyb20gdGhlIFVTICAgICAgICAgICAgICAgICAgICAgICAgICAgTmV3IFByZXNpZGVudCBJbnZlc3RvcnMgaGFkIGJlY29tZSBtb3JlIG9wdGltaXN0aWMgb24gdGhlIE1leGljYW4gZWNvbm9teSBhcyBQcmVzaWRlbnQgRW5yaXF1ZSBQZW5hIE5pZXRvIHdobyB0b29rIG9mZmljZSBpbiBEZWNlbWJlciBwdXNoZXMgdG8gY2hhbmdlIHRoZSBjb25zdGl0dXRpb24gYW5kIG9wZW4gdGhlIGVuZXJneSBpbmR1c3RyeSB0byBtb3JlIHByaXZhdGUgaW52ZXN0bWVudCBUaGUgYWRtaW5pc3RyYXRpb24gbGFzdCB3ZWVrIHByZXNlbnRlZCBhbiBlbmVyZ3kgYmlsbCBpdCBzYXlzIHdpbGwgYm9vc3QgYW5udWFsIGVjb25vbWljIGdyb3d0aCBieSAyIHBlcmNlbnRhZ2UgcG9pbnRzIGJ5IDIwMjUgTWV4aWNhbiBhbm51YWwgaW5mbGF0aW9uIHNsb3dlZCB0byAzNDcgcGVyY2VudCBpbiBKdWx5IHdpdGhpbiB0aGUgY2VudHJhbCBiYW5rcyAyIHBlcmNlbnQgdG8gNCBwZXJjZW50IHRhcmdldCByYW5nZSBmb3IgdGhlIGZpcnN0IG1vbnRoIHNpbmNlIEZlYnJ1YXJ5IGFzIGZhcm0gcHJpY2VzIGZlbGwgR292ZXJubWVudCBzcGVuZGluZyBmZWxsIDUxIHBlcmNlbnQgaW4gcmVhbCB0ZXJtcyB0byAxNDUgdHJpbGxpb24gcGVzb3MgaW4gdGhlIGZpcnN0IGZpdmUgbW9udGhzIG9mIDIwMTMgY29tcGFyZWQgd2l0aCB0aGUgeWVhcmVhcmxpZXIgcGVyaW9kIGFjY29yZGluZyB0byBkYXRhIGZyb20gdGhlIEZpbmFuY2UgTWluaXN0cnkgTWV4aWNvIHdpbGwgYmVuZWZpdCBpZiBVUyBncm93dGggYWNjZWxlcmF0ZXMgVVMgY29uc3VtZXJzIGFyZSB0aGUgbGVhc3QgcGVzc2ltaXN0aWMgaW4gbW9yZSB0aGFuIGZpdmUgeWVhcnMgaG9tZWJ1aWxkZXJzIGFyZSB0aGUgbW9zdCB1cGJlYXQgc2luY2UgMjAwNSBhbmQgcHVyY2hhc2luZyBtYW5hZ2VycyBzYXkgdGhlaXIgZmFjdG9yaWVzIGFyZSBjaHVybmluZyBvdXQgZ29vZHMgYXQgdGhlIGZhc3Rlc3QgcGFjZSBpbiBhbG1vc3QgYSBkZWNhZGUgVGhlIEJsb29tYmVyZyBDb25zdW1lciBDb21mb3J0IEluZGV4IHRoaXMgbW9udGggcmVhY2hlZCBpdHMgaGlnaGVzdCBzaW5jZSBKYW51YXJ5IDIwMDggYW5kIHRoZSBTdGFuZGFyZCAgUG9vcnMgNTAwIEluZGV4IGhhcyBnYWluZWQgYWJvdXQgMTYgcGVyY2VudCB0aGlzIHllYXIgcmVhY2hpbmcgYSByZWNvcmQgb24gQXVnIDIgICAgICAgICAgICAgICAgICAgICBDb25zdHJ1Y3Rpb24gVHVybmFyb3VuZCBDZW50cmFsIGJhbmsgR292ZXJub3IgQWd1c3RpbiBDYXJzdGVucyBzYWlkIEF1ZyA3IHRoYXQgdGhlIHNsb3dkb3duIGluIE1leGljYW4gY29uc3RydWN0aW9uIHNob3VsZCByZXZlcnNlIGluIHRoZSBzZWNvbmQgaGFsZiBvZiB0aGUgeWVhciBhcyBwdWJsaWMgc3BlbmRpbmcgcGlja3MgdXAgSUNBIFNBQiBNZXhpY29zIGxhcmdlc3QgY29uc3RydWN0aW9uIGNvbXBhbnkgc3RhbmRzIHRvIGJlbmVmaXQgZnJvbSBhIHJlYm91bmQgaW4gZ292ZXJubWVudCBzcGVuZGluZyBhbmQgdGhlIGFkbWluaXN0cmF0aW9ucyA0IHRyaWxsaW9uIHBlc28gMzA2IGJpbGxpb24gcHJvZ3JhbSBvZiBwdWJsaWMgYW5kIHByaXZhdGUgaW52ZXN0bWVudHMgaW4gaGlnaHdheXMgcmFpbHJvYWRzIHBvcnRzIGFuZCBvdGhlciBpbmZyYXN0cnVjdHVyZSBhY2NvcmRpbmcgdG8gQ2FybG9zIExlZ2FzcHkgd2hvIG92ZXJzZWVzIGFib3V0IDM1MCBtaWxsaW9uIGluIGVtZXJnaW5nbWFya2V0IGRlYnQgaW5jbHVkaW5nIElDQSBib25kcyBhdCBJbnNpZ2h0IFNlY3VyaXRpZXMgSW5jIFdlIGV4cGVjdCB0aGF0IHB1YmxpYyBjb25zdHJ1Y3Rpb24gd29udCByZW1haW4gYW4gaW1wZWRpbWVudCB0byBlY29ub21pYyBncm93dGggYnV0IG9uIHRoZSBjb250cmFyeSBzdGFydCBib29zdGluZyB0aGUgZWNvbm9teSBDYXJzdGVucyBzYWlkdAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAb2FydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2UsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEwLTA2LTExVDAwOjAwOjAwWiBUTyAyMDEzLTA3LTMwVDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTExOTcw</field><field name="title" class="java.lang.String">rO0ABXQAPU1leGljbyBQZXNvIFNsaWRlcyB0byBXb3JzdCBGcm9tIEZpcnN0IEFtaWQgVVMgR3Jvd3RoIENvbmNlcm4=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATrzM/cAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGExMTA1ZjgzMjFiNjUxMjI=</field><field name="symbol" class="java.lang.String">rO0ABXQACUJOUy1QTi5UTw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATr4WlMAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6bhR64Ueu</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6cKPXCj1x</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6QAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6QAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3bhR64Ueu</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAKjA==</field><field name="id" class="java.lang.String">rO0ABXQAEGRjZjE1NmRiYmY4NjQ1NmU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mH+VAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDI0MTQ=</field><field name="title" class="java.lang.String">rO0ABXQAP1NwYWluIFJlYm91bmRpbmcgRnJvbSBXb3JzdCBFY29ub215IGFzIEV4cG9ydHMgVHJhbnNmb3JtIE5hdGlvbg==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8NjliAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGYzNzVlMzJjNmU5YjA3OTM=</field><field name="symbol" class="java.lang.String">rO0ABXQABU02Ty5G</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8StLSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAz2ZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAz2ZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAz2ZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAz2ZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyI9cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDVkNzE3MGVhMzY2YTQ1MWI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mL0/AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDkzMjA=</field><field name="title" class="java.lang.String">rO0ABXQAQVMmUCA1MDAgVmFsdWF0aW9uIFNsaXBzIDE5JSBCZWxvdyAyMDExIGFzIFNoYW91bCBBZHZpc2VzIFBhdGllbmNl</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATe13SyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGQxODhlMWU2ZTBjYzhhNzc=</field><field name="symbol" class="java.lang.String">rO0ABXQAAk1O</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATe7A4iAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArFHrhR64U</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArQo9cKPXD</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAqij1wo9cK</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAq64UeuFHs</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAnszMzMzMz</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAsiA==</field><field name="id" class="java.lang.String">rO0ABXQAEDE2YTZmMTI1NTk1Y2M3MDc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJLtAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQ4OTY=</field><field name="title" class="java.lang.String">rO0ABXQANkJyYXppbCBHcm93cyBhdCBTbG93ZXN0IFBhY2UgaW4gWWVhciBpbiBGb3VydGggUXVhcnRlcg==</field><field name="content" class="java.lang.String">rO0ABXQNMEdyb3NzIGRvbWVzdGljIHByb2R1Y3QgZ3Jvd3RoIGV4cGFuZGVkIDUgcGVyY2VudCBpbiB0aGUgZm91cnRoIHF1YXJ0ZXIgZnJvbSBhIHllYXIgZWFybGllciwgZG93biBmcm9tIDYuNyBwZXJjZW50IGluIHRoZSBwcmV2aW91cyBxdWFydGVyLiBFY29ub21pc3RzIGV4cGVjdGVkIGEgNS4yIHBlcmNlbnQgZXhwYW5zaW9uLCBhY2NvcmRpbmcgdG8gdGhlIG1lZGlhbiBmb3JlY2FzdCBpbiBhIEJsb29tYmVyZyBzdXJ2ZXkgb2YgMzMgYW5hbHlzdHMuIFRoZSBmaWd1cmUgc2hvd3MgdGhlIGVjb25vbXkgaXMgY29vbGluZyBhcyBkb21lc3RpYyBjb25zdW1wdGlvbiBzbG93cyBhbmQgaW5kdXN0cmlhbCBvdXRwdXQgc3VmZmVycyBmcm9tIHdlYWsgaW50ZXJuYXRpb25hbCBkZW1hbmQgYW5kIGEgc3Ryb25nIHJlYWwsIHNhaWQgTmV3dG9uIFJvc2EsIGNoaWVmIGVjb25vbWlzdCBhdCBTdWwgQW1lcmljYSBJbnZlc3RpbWVudG9zLiBQb2xpY3kgbWFrZXJzLCBhZnRlciByYWlzaW5nIHllc3RlcmRheSB0aGUgYmVuY2htYXJrIGludGVyZXN0IHJhdGUgdG8gYSB0d28teWVhciBoaWdoLCBzaWduYWxlZCB0aGV5IHdpbGwgbGlmdCBib3Jyb3dpbmcgY29zdHMgZm9yIGEgdGhpcmQgY29uc2VjdXRpdmUgbWVldGluZyBpbiBBcHJpbCB0byBjb250YWluIHRoZSBmYXN0ZXN0IGluZmxhdGlvbiBpbiBtb3JlIHRoYW4gdHdvIHllYXJzLiDigJxJdOKAmXMgbW9yZSBjb21mb3J0YWJsZSBmb3IgdGhlIGNlbnRyYWwgYmFuayB0byBzZWUgdGhhdCB0aGUgZWNvbm9teSBpcyBkZWNlbGVyYXRpbmcsIGFuZCB0aGlzIHNob3VsZCBoZWxwIGJyaW5nIGluZmxhdGlvbiBjbG9zZXIgdG8gdGhlIGNlbnRlciBvZiB0aGUgdGFyZ2V0IHJhbmdlLOKAnSBSb3NhIHNhaWQsIHNwZWFraW5nIGJ5IHRlbGVwaG9uZSBmcm9tIFNhbyBQYXVsby4gVGhlIHJlYWwsIHdoaWNoIGdhaW5lZCA0OCBwZXJjZW50IGluIHRoZSBwYXN0IHR3byB5ZWFycywgcm9zZSAwLjEgcGVyY2VudCB0byAxLjY1NjMgcGVyIFUuUy4gZG9sbGFyIGF0IDg6MzggYS5tLiBOZXcgWW9yayB0aW1lLiBZaWVsZHMgb24gaW50ZXJlc3QtcmF0ZSBmdXR1cmVzIGNvbnRyYWN0cyBtYXR1cmluZyBKYW51YXJ5IDIwMTIgZmVsbCB0d28gYmFzaXMgcG9pbnRzLCBvciAwLjAyIHBlcmNlbnRhZ2UgcG9pbnQsIHRvIDEyLjUxIHBlcmNlbnQuIFJvc2Egc2FpZCBoZSBtYXkgcmV2aXNlIGhpcyAyMDExIEdEUCBmb3JlY2FzdCB0byBhcm91bmQgNCBwZXJjZW50IGZyb20gNC41IHBlcmNlbnQuIEZhc3RlciBJbmZsYXRpb24gSW5mbGF0aW9uIGFjY2VsZXJhdGVkIHRvIDYuMDggcGVyY2VudCBpbiB0aGUgeWVhciB0aHJvdWdoIG1pZC1GZWJydWFyeSwgdGhlIGZhc3Rlc3QgcGFjZSBzaW5jZSBEZWNlbWJlciAyMDA4LiBUaGUgY2VudHJhbCBiYW5rIHRhcmdldHMgaW5mbGF0aW9uIG9mIDQuNSBwZXJjZW50LCBwbHVzIG9yIG1pbnVzIHR3byBwZXJjZW50YWdlIHBvaW50cy4gR0RQIGdyZXcgMC43IHBlcmNlbnQgZnJvbSB0aGUgcHJldmlvdXMgcXVhcnRlciwgY29tcGFyZWQgd2l0aCBhIHJldmlzZWQgMC40IHBlcmNlbnQgaW4gdGhlIHRoaXJkIHF1YXJ0ZXIsIHRoZSBuYXRpb25hbCBzdGF0aXN0aWNzIGFnZW5jeSBzYWlkIHRvZGF5IGluIFJpbyBkZSBKYW5laXJvLiBBbmFseXN0cyBleHBlY3RlZCAwLjggcGVyY2VudCBncm93dGgsIGFjY29yZGluZyB0byB0aGUgbWVkaWFuIGZvcmVjYXN0IGZyb20gMzIgYW5hbHlzdHMgc3VydmV5ZWQgYnkgQmxvb21iZXJnLiBJbmR1c3RyaWFsIGFjdGl2aXR5IGZlbGwgMC4zIHBlcmNlbnQgaW4gdGhlIGZvdXJ0aCBxdWFydGVyIGZyb20gdGhlIHByZXZpb3VzIG9uZSwgdGhlIG5hdGlvbmFsIHN0YXRpc3RpY3MgYWdlbmN5IHNhaWQuIFRoZSBHRFAgZ2FpbiB3YXMgZnVlbGVkIGJ5IGEgMSBwZXJjZW50IGV4cGFuc2lvbiBpbiBzZXJ2aWNlcy4g4oCcVGhlIGVjb25vbXkgaXNu4oCZdCBncm93aW5nIGFzIGZhc3QgYXMgZXZlcnlvbmUgdGhvdWdodCzigJ0gc2FpZCBKYW5raWVsIFNhbnRvcywgY2hpZWYgZWNvbm9taXN0IGF0IEVzcGlyaXRvIFNhbnRvIEludmVzdG1lbnQgQmFuaywgc3BlYWtpbmcgYnkgdGVsZXBob25lIGZyb20gU2FvIFBhdWxvLiDigJxUaGUgbnVtYmVyIHJlaW5mb3JjZXMgdGhlIGNlbnRyYWwgYmFua+KAmXMgdmlldyB0aGF0IGdyb3d0aCBpcyBhY2NvbW1vZGF0aW5nIGF0IGEgbGV2ZWwgbW9yZSBjb25zaXN0ZW50IHdpdGggdGhlIGVjb25vbXnigJlzIHBvdGVudGlhbC7igJ0gQmVuY2htYXJrIFJhdGUgVGhlIGNlbnRyYWwgYmFuayByYWlzZWQgaXRzIGJlbmNobWFyayBpbnRlcmVzdCByYXRlIGhhbGYgYSBwZXJjZW50YWdlIHBvaW50IHRvIDExLjc1IHBlcmNlbnQgbGFzdCBuaWdodC4gVGhlIGdvdmVybm1lbnQgaXMgdXNpbmcgYSBtaXggb2YgdG9vbHMsIGluY2x1ZGluZyBzcGVuZGluZyBjdXRzLCBtZWFzdXJlcyB0byBjdXJiIGNyZWRpdCBhbmQgaGlnaGVyIGJvcnJvd2luZyBjb3N0cywgdG8gc2xvdyBlY29ub21pYyBncm93dGguIExhdGluIEFtZXJpY2HigJlzIGxhcmdlc3QgZWNvbm9teSBleHBhbmRlZCA3LjUgcGVyY2VudCBpbiAyMDEwLCBpdHMgZmFzdGVzdCBwYWNlIHNpbmNlIDE5ODUsIGFmdGVyIHJlZ2lzdGVyaW5nIHllYXItb24tIHllYXIgZ3Jvd3RoIG9mIG1vcmUgdGhhbiA5IHBlcmNlbnQgaW4gdGhlIGZpcnN0IGFuZCBzZWNvbmQgcXVhcnRlcnMuIEVjb25vbWlzdHMgY292ZXJpbmcgdGhlIEJyYXppbGlhbiBlY29ub215IGV4cGVjdCBncm93dGggdG8gc2xvdyB0byA0LjMgcGVyY2VudCB0aGlzIHllYXIsIGFjY29yZGluZyB0byBhIGNlbnRyYWwgYmFuayBzdXJ2ZXkgb2YgYWJvdXQgMTAwIGVjb25vbWlzdHMgcHVibGlzaGVkIEZlYi4gMjguIEJyYXppbOKAmXMgZWNvbm9teSBlbnRlcmVkIGEg4oCcbmV3IGdyb3d0aCBjeWNsZeKAnSBhZnRlciB0aGUgZmluYW5jaWFsIGNyaXNpcyBvZiAyMDA4IGFuZCAyMDA5IHRoYXTigJlzIGJlaW5nIGZ1ZWxlZCBieSBkb21lc3RpYyBkZW1hbmQsIGNlbnRyYWwgYmFuayBQcmVzaWRlbnQgQWxleGFuZHJlIFRvbWJpbmkgc2FpZCBpbiBhbiBlLW1haWxlZCBzdGF0ZW1lbnQgdGhpcyBtb3JuaW5nLiBCcmF6aWzigJlzIHJldGFpbCBzYWxlcyBzdGFsbGVkIGluIERlY2VtYmVyIGZvciB0aGUgZmlyc3QgdGltZSBzaW5jZSBBcHJpbCwgYXMgbGVuZGluZyBzbG93ZWQgb24gaGlnaGVyIGJvcnJvd2luZyBjb3N0cy4gQ3JlZGl0IGluIHRoZSBCcmF6aWxpYW4gZWNvbm9teSBleHBhbmRlZCBpbiBKYW51YXJ5IGF0IGl0cyBzbG93ZXN0IHBhY2UgaW4gYWxtb3N0IHR3byB5ZWFycyBhZnRlciB0aGUgY2VudHJhbCBiYW5rIHJhaXNlZCByZXNlcnZlIGFuZCBjYXBpdGFsIHJlcXVpcmVtZW50cyBpbiBEZWNlbWJlci4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAS56TScAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDRiZTg5Y2E0NWY3ZmQ1ZGM=</field><field name="symbol" class="java.lang.String">rO0ABXQABVJUTlRG</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAS5/c4MAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBVlmZmZmZm</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBVlmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBVlmZmZmZm</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBVlmZmZmZm</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUkUeuFHrh</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDA0YTBiNTI0YzE0ZTA3YmU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEo4AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM2MjY=</field><field name="title" class="java.lang.String">rO0ABXQANUNhbWVyb27igJlzIFdlYWtlbmluZyBQb3VuZCBTaG93cyBVSyBBdXN0ZXJpdHkgRG91YnRz</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT2GKwiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGRmN2I5NTAzYTFjOGVmMjI=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lDQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT2LUWSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyFHrhR64U</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyGZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAx6PXCj1wp</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAx7hR64Ueu</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwhR64UeuF</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABg4A==</field><field name="id" class="java.lang.String">rO0ABXQAEGYxODdjNjlkMjM3ZmQ1NjU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGjvAAAA==</field></document></documents><date>2015-05-07T06:32:13-0500</date></cacheEntry>
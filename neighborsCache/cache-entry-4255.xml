<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0EQFQcm9kZW1vY3JhY3kgcHJvdGVzdGVycyBhcmUgaW4gYSB0ZW5zZSBzdGFuZG9mZiB3aXRoIHBvbGljZSBpbiBIb25nIEtvbmdzIGZpbmFuY2lhbCBkaXN0cmljdCBpbiB0aGUgd29yc3QgdW5yZXN0IHNpbmNlIHRoZSB0ZXJyaXRvcnlzIDE5OTcgaGFuZG92ZXIgZnJvbSBCcml0YWluIFdpdGggbWFpbmxhbmQgQ2hpbmVzZSB0cmF2ZWxlcnMgbGlrZWx5IHRvIGF2b2lkIEhvbmcgS29uZyBvdmVyIHRoZSBsb25nIE5hdGlvbmFsIERheSBob2xpZGF5cyB0aGlzIHdlZWsgZHVlIHRvIHRoZSBwcm90ZXN0cyBkb3dud2FyZCBwcmVzc3VyZSBvbiByZXRhaWwgc3BlbmRpbmcgY291bGQgcGVyc2lzdCBpbiB0aGUgZm9ybWVyIEJyaXRpc2ggY29sb255IGRlc3BpdGUgc2lnbnMgb2YgYSBtb2Rlc3QgcmVib3VuZCBSZXRhaWwgc2FsZXMgaW4gQXVndXN0IHJvc2UgMzQgcGVyY2VudCBmcm9tIGEgeWVhciBlYXJsaWVyIGluIHZhbHVlIHRlcm1zIHJldmVyc2luZyBzaXggbW9udGhzIG9mIGRlY2xpbmUgaGVscGVkIGJ5IGltcHJvdmVkIHNwZW5kaW5nIG9uIGpld2Vscnkgd2F0Y2hlcyBnaWZ0cyBhbmQgYW4gZWFybGllciBzdGFydCB0byB0aGUgTWlkQXV0dW1uIEZlc3RpdmFsIHRoaXMgeWVhciB0aGUgZ292ZXJubWVudCBzYWlkIG9uIE1vbmRheSBBdCBsZWFzdCB0aHJlZSBlY29ub21pc3RzIGhhZCBleHBlY3RlZCBhIHNsaWdodCBmYWxsIEFscmVhZHkgaHVydCBieSBCZWlqaW5ncyBhbnRpY29ycnVwdGlvbiBjYW1wYWlnbiB3aGljaCBoYXMgbGVkIENoaW5lc2UgdmlzaXRvcnMgdG8gdGlnaHRlbiBsYXZpc2ggc3BlbmRpbmcgaW4gdGhlIGNpdHkgcmVub3duZWQgYXMgYSBzaG9wcGVycyBwYXJhZGlzZSBIb25nIEtvbmcgYnVzaW5lc3NlcyBhcmUgYWxzbyBmYWNpbmcgYSBzbGlkZSBpbiB0aGUgbnVtYmVyIG9mIHRvdXIgZ3JvdXBzIEFkZGVkIHRvIHdoaWNoIHRob3NlIHdobyB0cmFpcHNlIGFjcm9zcyB0aGUgYm9yZGVyIGVhY2ggZGF5IGFyZSBub3cgbW9yZSBpbnRlcmVzdGVkIGluIGJhc2ljIGhvdXNlaG9sZCBwcm9kdWN0cyBhbmQgaW5mYW50IG1pbGsgZm9ybXVsYSB0aGFuIGx1eHVyeSBoYW5kYmFncyBhbmQgaGlnaGVuZCBmYXNoaW9uIGRhdGEgc2hvd3MgVHJhdmVsIGFnZW50cyBzYWlkIHRoZSBudW1iZXIgb2YgQ2hpbmVzZSB0b3VycyBoYXMgZHJvcHBlZCBieSB1cCB0byAzMCBwZXJjZW50IGJvZGluZyBpbGwgZm9yIHRoZSBidXN5IEdvbGRlbiBXZWVrIGhvbGlkYXkgdGhhdCBzdGFydHMgb24gT2N0IDEgdXN1YWxseSBhIGJ1c3kgcGVyaW9kIHRoYXQgcmV0YWlsZXJzIHJlbHkgb24gZm9yIGEgYm9vc3QgdG8gdGhlaXIgc2FsZXMgQ2VudHJhbCBIb25nIEtvbmcgZGVzY2VuZGVkIGludG8gY2hhb3Mgb24gU3VuZGF5IGFzIGFjdGl2aXN0cyBkZWZpZWQgdm9sbGV5cyBvZiB0ZWFyIGdhcyBhbmQgcG9saWNlIGJhdG9uIGNoYXJnZXMgdG8gc3RhbmQgZmlybSBpbiB0aGUgY2VudGVyIG9mIHRoZSBjaXR5IFRoZSBjaXZpbCBkaXNvYmVkaWVuY2UgaXMgcGFydCBvZiBhIHNlcmllcyBvZiBwcm90ZXN0cyB0aGF0IHdpbGwgY3VsbWluYXRlIGluIGFuIE9jY3VweSBDZW50cmFsIGJsb2NrYWRlIG9uIE9jdCAxIEF0IHRoZSBoZWFydCBvZiB0aGVpciBkZW1hbmRzIGlzIHRoZSByaWdodCBmb3IgSG9uZyBLb25nIHBlb3BsZSB0byBjaG9vc2UgdGhlIGNpdHlzIG5leHQgbGVhZGVyIHJhdGhlciB0aGFuIGEgbGVhZGVyIHByZXNlbGVjdGVkIGJ5IEJlaWppbmcgRm9yIG92ZXJzZWFzIHRvdXJpc3RzIHRoZXkgZG9udCB1bmRlcnN0YW5kIG11Y2ggYWJvdXQgT2NjdXB5IENlbnRyYWwgYnV0IHRoZXkgYXJlIGNvbmNlcm5lZCBpZiB0aGVyZSB3aWxsIGJlIGFueSByaW90cyBvciBsYXJnZXNjYWxlIHJhbGx5IGFuZCB0aGV5IHdvcnJ5IGFib3V0IHRoZSByZWZ1bmQgcG9saWN5IGlmIHRoZXJlIGlzIHVucmVzdCBzYWlkIFBhdWwgTGV1bmcgY2hhaXJtYW4gb2YgVGhlIEhvbmcgS29uZyBJbmJvdW5kIFRyYXZlbCBBc3NvY2lhdGlvbiByZWZlcnJpbmcgdG8gcmVmdW5kcyBvbiB0b3VycyBJdCB3YXMgbm90IHN1cnByaXNpbmcgdG8gc2VlIGEgMjAzMCBwZXJjZW50IGRyb3AgaW4gdGhlIG51bWJlciBvZiBDaGluZXNlIHRvdXJzIGhlIHNhaWQgYWRkaW5nIHRoYXQgdGhlIHNpemUgb2YgdGhlIGdyb3VwcyBoYWQgYWxzbyBmYWxsZW4gdG8gMjAgdG8gMzAgcGVvcGxlIGZyb20gYWJvdXQgNDAgaW4gdGhlIHBhc3QgQ2hpbmFzIHNsb3dpbmcgZWNvbm9taWMgZ3Jvd3RoIGhhcyBiZWVuIGEgbmVnYXRpdmUgZmFjdG9yIGZvciBsdXh1cnkgZ29vZHMgbWFrZXJzIGFuZCBIb25nIEtvbmcgcmV0YWlscmVsYXRlZCBzdG9ja3MgaGF2ZSBiZWVuIHNvbGQgb2ZmIGxhdGVseSBvbiB3ZWFrIGNvbnN1bWVyIHNlbnRpbWVudCBhbmQgIHVuY2VydGFpbnRpZXMgZHVlIHRvIHRoZSBjaXZpbCB1bnJlc3QgUHJhZGEgU3BBcyBIb25nIEtvbmdsaXN0ZWQgc2hhcmVzIGhhdmUgZmFsbGVuIHRvIHRoZWlyIGxvd2VzdCBsZXZlbCBpbiAyNiBtb250aHMgV2UgYXJlIGNvbmNlcm5lZCBhYm91dCB0aGUgZGV2ZWxvcG1lbnQgc2FpZCBhIHNwb2tlc3dvbWFuIGZyb20gY29zbWV0aWNzIGNoYWluIFNhIFNhIEludGVybmF0aW9uYWwgU2EgU2EgaXMgY2xvc2VseSBtb25pdG9yaW5nIHRoZSBldmVudCBhbmQgd2lsbCBhZG9wdCBjb250aW5nZW5jeSBtZWFzdXJlcyB3aGVuIGFwcHJvcHJpYXRlIE1PUkUgV0VMQ09NSU5HIFBMQUNFUyBUTyBHTyBTb2NpYWwgcG9saXRpY2FsIHRlbnNpb24gaXMgY2xlYXJseSBkcml2aW5nIGEgZmV3IHBlb3BsZSBhd2F5IGJlY2F1c2Ugb2J2aW91c2x5IHlvdSBoYXZlIGEgbG90IG9mIGRpZmZlcmVudCBvcHRpb25zIElmIHlvdXJlIGEgd2VhbHRoeSBDaGluZXNlIGluZGl2aWR1YWwgdGhlIGxpa2VsaWhvb2QgaXMgdGhhdCB5b3V2ZSBiZWVuIHRvIEhvbmcgS29uZyB0d28gb3IgdGhyZWUgdGltZXMgYWxyZWFkeSBhbmQgeW91bGwgaGF2ZSBtb3JlIHdlbGNvbWluZyBwbGFjZXMgdG8gZ28gdG8gc2FpZCBFcndhbiBSYW1ib3VyZyB3aG8gcmVzZWFyY2hlcyBsdXh1cnkgYW5kIHNwb3J0aW5nIGdvb2RzIHJlc2VhcmNoIGF0IEhTQkMgU291dGggS29yZWEgYW5kIEphcGFuIHdlcmUgYW1vbmcgdGhlIHRvcCBvcHRpb25zIGhlIHNhaWQgSG9uZyBLb25ncyByZXRhaWwgc2VjdG9yIHJlbGllcyBoZWF2aWx5IG9uIG1haW5sYW5kIENoaW5lc2UgdmlzaXRvcnMgd2hvIGNvbnRyaWJ1dGVkIGFyb3VuZCBvbmV0aGlyZCBvZiB0aGUgY2l0eXMgcmV0YWlsIHNhbGVzIGluIDIwMTMgYWNjb3JkaW5nIHRvIENyZWRpdCBTdWlzc2UgUHJvc3BlY3RzIGFyZSBub3QgbG9va2luZyB1cCB5ZXQgYXMgZGVtYW5kIGZvciBsdXh1cnkgZ29vZHMgY29udGludWVzIHRvIHNsaWRlIHdoaWxlIHNwZW5kaW5nIGJ5IGxvY2FscyByZW1haW5zIHNsdWdnaXNoIFRoZSBSZXRhaWwgTWFuYWdlbWVudCBBc3NvY2lhdGlvbiBoYXMgcmV2aXNlZCB0aGUgY2l0eXMgMjAxNCByZXRhaWwgc2FsZXMgZ3Jvd3RoIHRvIDUgcGVyY2VudCBmcm9tIDEyIHBlcmNlbnQgd2hpbGUgSGFuZyBTZW5nIEJhbmsgdHJpbW1lZCBpdHMgZm9yZWNhc3QgdG8gNSBwZXJjZW50IGZyb20gMTMgcGVyY2VudCBSZXRhaWwgc2FsZSBpbiB0ZXJtcyBvZiB2YWx1ZSByb3NlIDExIHBlcmNlbnQgaW4gMjAxMyBCdXQgc29tZSByZXRhaWxlcnMgaW4gdGhlIENlbnRyYWwgYnVzaW5lc3MgZGlzdHJpY3QgYW5kIHNob3BwZXJzIGFyZSBub3QgdG9vIHdvcnJpZWQgYWJvdXQgdGhlIGltcGFjdCBvZiBwcm90ZXN0cyBJZiBvdXIgc2hvcHMgaW4gQ2VudHJhbCBhcmUgYWZmZWN0ZWQgd2Ugd2lsbCBjb25zaWRlciBzaG9ydGVuaW5nIG9wZXJhdGlvbiBob3VycyBhcyBhIG1lYXN1cmUgdG8gZW5zdXJlIHRoZSBzYWZldHkgb2Ygb3VyIHN0YWZmIGFuZCBjdXN0b21lcnMgYW5kIHRvIGF2b2lkIGxvc3NlcyB0byB0aGUgc2hvcHMgYSBjb21wYW55IHNwb2tlc3dvbWFuIGZyb20gQ2hvdyBUYWkgRm9vayBKZXdlbHJ5IHNhaWQgV2UgaG93ZXZlciBiZWxpZXZlIHRoZXJlIHdpbGwgbm90IGJlIG11Y2ggbmVnYXRpdmUgaW1wYWN0IG9uIG91ciBidXNpbmVzcyBhcyBjdXN0b21lcnMgY2FuIGdvIHRvIG91ciBzaG9wcyBpbiBvdGhlciBsb2NhdGlvbnMgQSBDaGluZXNlIHZpc2l0b3IgaW4gaGVyIGxhdGUgMjBzIHN1cm5hbWVkIFpoYW5nIHdobyB3YXMgc2hvcHBpbmcgZG93bnRvd24gd2hlcmUgc3R1ZGVudHMgaGFkIGJveWNvdHRlZCBjbGFzc2VzIHRvIHByb3Rlc3Qgc2FpZCBzaGUgd291bGQgYmUgc2hvcHBpbmcgYXMgdXN1YWwgVGhlcmUgYXJlIGEgbG90IG9mIHNob3BwaW5nIG1hbGxzIGluIEhvbmcgS29uZyB3ZSBjYW4ganVzdCBnbyBlbHNld2hlcmV0AARyb3dzdXEAfgAKAAAAAXQAATV0AAVzdGFydHVxAH4ACgAAAAF0AAEwdAACZmx1cQB+AAoAAAABdABvYXJ0aWNsZUlkLHRpdGxlLGNvbnRlbnQsZGF0ZSxzdG9ja0hpc3RvcnlJZCxzeW1ib2wsaGlzdG9yeURhdGUsb3BlbixoaWdoLGxvdyxjbG9zZSxhZGpDbG9zZSx2b2x1bWUsaWQsX3ZlcnNpb25fdAACZnF1cQB+AAoAAAABdAA6aGlzdG9yeURhdGU6WzIwMTAtMDYtMTFUMDA6MDA6MDBaIFRPIDIwMTMtMDctMzFUNTk6NTk6NTlaXXgAcA==</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTEyMTk4</field><field name="title" class="java.lang.String">rO0ABXQAOENoaW5lc2UgQ29uc3VtZXJzIEN1dCBCYWNrLCBCb2RpbmcgSWxsIGZvciBMdXh1cnkgQnJhbmRz</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATVMGPsAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGViMjZhZWQ5NmYxMDcwMzU=</field><field name="symbol" class="java.lang.String">rO0ABXQABldZUi5ITQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATVRP1cAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBV1wo9cKPX</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBV1wo9cKPX</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBV1wo9cKPX</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBV1wo9cKPX</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBT89cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGJhYjUwNDI1OTQxYmYwNzI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEKhAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDI0MDk=</field><field name="title" class="java.lang.String">rO0ABXQAPENoaW5hIEdvbGQgSW1wb3J0cyB0byBLZWVwIEdyb3dpbmcgQWZ0ZXIgSGl0dGluZyBSZWNvcmQgSGlnaA==</field><field name="content" class="java.lang.String">rO0ABXQOdkNoaW5lc2UgZ29sZCBpbXBvcnRzIGFyZSBsaWtlbHkgdG8gc3dlbGwgZnVydGhlciBhZnRlciBtb3JlIHRoYW4gZG91YmxpbmcgdG8gYW4gYWxsIHRpbWUgaGlnaCBpbiBNYXJjaCBhcyByZXRhaWwgY29uc3VtZXJzIHBvdW5jZWQgd2hlbiBwcmljZXMgcGx1bmdlZCB0byBhIHR3by15ZWFyIGxvdyBsYXN0IG1vbnRoLiBDaGluYSBpcyB0aGUgd29ybGQncyBzZWNvbmQgbGFyZ2VzdCBidXllciBhZnRlciBJbmRpYSwgYW5kIGluIGJvdGggY291bnRyaWVzIHRoZSBzdGVlcCBmYWxsIGluIGludGVybmF0aW9uYWwgZ29sZCBwcmljZXMgaW4gQXByaWwgdW5sZWFzaGVkIHllYXJzIG9mIHBlbnQgdXAgZGVtYW5kIGZvciBjb2lucywgYmFycyBhbmQgamV3ZWxyeS4gVGhhdCB3aWxsIGhlbHAgYm9sc3RlciBwcmljZXMgZm9yIHRoZSBtZXRhbCwgd2hpY2ggaGFzIGJlZW4gYWJhbmRvbmVkIGJ5IGZ1bmRzIGluIG90aGVyIHBhcnRzIG9mIHRoZSB3b3JsZCBpbiB0aGUgd2FrZSBvZiBpdHMgaGlzdG9yaWMgZmFsbC4gIlBoeXNpY2FsIGRlbWFuZCBwaWNrZWQgdXAgc2lnbmlmaWNhbnRseSBvdmVyIHRoZSBsYXN0IGNvdXBsZSBvZiB3ZWVrcy4gQ29uc3VtZXJzIGFuZCBpbmR1c3RyaWFsIHVzZXJzIHRlbmQgdG8gc2VlIHByaWNlIGRyb3BzIGFzIGJ1eWluZyBvcHBvcnR1bml0aWVzLCIgWmhhbmcgQmluZ25hbiwgc2VjcmV0YXJ5LWdlbmVyYWwgb2YgdGhlIENoaW5hIEdvbGQgQXNzb2NpYXRpb24sIHRvbGQgUmV1dGVycy4gIkludmVzdG1lbnQgZGVtYW5kIHNob3VsZCBjb250aW51ZSB0byBzdGF5IHN0cm9uZyB0aHJvdWdoIHRoZSByZXN0IG9mIHRoZSB5ZWFyIGJlY2F1c2Ugb2YgbGltaXRlZCBpbnZlc3RtZW50IGFsdGVybmF0aXZlcywiIHNhaWQgWmhhbmcsIGFkZGluZyB0aGF0IGdvbGQgc2FsZXMgYW5kIHByb2Nlc3Npbmcgdm9sdW1lcyBib3RoIHNwaWtlZCBpbiBBcHJpbC4gTmV0IGdvbGQgZmxvd3MgZnJvbSBIb25nIEtvbmcgdG8gQ2hpbmEganVtcGVkIHRvIDEzNi4xODUgdG9ucyBpbiBNYXJjaCBmcm9tIDYwLjk1OCB0b25zIGluIEZlYnJ1YXJ5LCBzbWFzaGluZyBhIHByZXZpb3VzIHJlY29yZCBvZiAxMTQuMzcyIHRvbnMgaW4gRGVjZW1iZXIsIGRhdGEgZnJvbSB0aGUgSG9uZyBLb25nIENlbnN1cyBhbmQgU3RhdGlzdGljcyBEZXBhcnRtZW50IHNob3dlZC4gVGhhdCBtYWtlcyB1cCBtb3JlIHRoYW4gaGFsZiBvZiByZWNvcmQgZ29sZCBleHBvcnRzIHRvIENoaW5hIGZyb20gSG9uZyBLb25nIGluIDIwMTIsIHdoaWNoIHN0b29kIGF0IDU1Ny40NzggdG9ucy4gSW4gTWFyY2gsIFNoYW5naGFpIGdvbGQgZnV0dXJlcyBmZXRjaGVkIHByZW1pdW1zIG9mIG1vcmUgdGhhbiAkMzAgdG8gZ2xvYmFsIHByaWNlcywgbWFraW5nIGl0IGNoZWFwZXIgdG8gYnV5IHRoZSBtZXRhbCBvdmVyc2Vhcy4gQXByaWwgY291bGQgc2VlIGltcG9ydHMgc3dlbGwgZnVydGhlciBhZnRlciB0aGUgZHJvcCBpbiBpbnRlcm5hdGlvbmFsIHByaWNlcyBzcHVycmVkIGZyZW56aWVkIGJ1eWluZyBpbiBBc2lhLCBsZWFkaW5nIHRvIGEgc2hvcnRhZ2Ugb2YgZ29sZCBiYXJzIGFuZCBjb2lucyBpbiBTaW5nYXBvcmUgYXMgd2VsbCBhcyBIb25nIEtvbmcsIHdoaWNoIGlzIENoaW5hJ3MgbWFpbiBzb3VyY2UgZm9yIGdvbGQgaW1wb3J0cy4gQXBwZXRpdGUgZm9yIGdvbGQgZnJvbSBJbmRpYSBhbmQgQ2hpbmEgaXMgYSBtYWpvciBmYWN0b3IgaW4gaW50ZXJuYXRpb25hbCBnb2xkIHByaWNlcy4gVGhlIHR3byBjb3VudHJpZXMgYWNjb3VudCBmb3IgbW9yZSB0aGFuIGEgdGhpcmQgb2YgZ2xvYmFsIGRlbWFuZCwgYWNjb3JkaW5nIHRvIHRoZSBXb3JsZCBHb2xkIENvdW5jaWwuIENoaW5hIHByb2R1Y2VkIDQwMyB0b25zIG9mIGdvbGQgaW4gMjAxMiwgYnV0IGNvbnN1bXB0aW9uIHdhcyBtb3JlIHRoYW4gZG91YmxlIGF0IDgzMi4yIHRvbnMuIEdvbGQgdHVtYmxlZCB0byBhcm91bmQgJDEsMzIxIGFuIG91bmNlIG9uIEFwcmlsIDE2LCBpdHMgbG93ZXN0IGluIG1vcmUgdGhhbiB0d28geWVhcnMsIGFmdGVyIGEgZmFsbCBiZWxvdyAkMSw1MDAgYW5kIGZlYXJzIG9mIGNlbnRyYWwgYmFuayBzYWxlcyBsZWQgdG8gYSBzZWxsLW9mZiB0aGF0IHN0dW5uZWQgaW52ZXN0b3JzIGFuZCBwcm9tcHRlZCB0aGVtIHRvIHNsYXNoIGhvbGRpbmdzIG9mIGV4Y2hhbmdlLXRyYWRlZCBmdW5kcy4gSXQgc3Rvb2QgYXQgYXJvdW5kICQxLDQ2MCBvbiBUdWVzZGF5LiAiQXByaWwgaW1wb3J0cyB3aWxsIGJlIHN0cm9uZ2VyIHRoYW4gTWFyY2gsIiBzYWlkIFJvbmFsZCBMZXVuZywgY2hpZWYgZGVhbGVyIGF0IExlZSBDaGVvbmcgR29sZCBEZWFsZXJzIGluIEhvbmcgS29uZy4gIlRoZSB3b3JsZCB3YXMgYnV5aW5nIGdvbGQgYW5kIENoaW5hIHdhcyBubyBkaWZmZXJlbnQgYXQgYWxsLiIgSEVBVlkgVFJBRkZJQyBUaGUgZHJvcCBpbiBwcmljZXMgaGFzIHByb21wdGVkIGEgZ29sZCBydXNoIGluIENoaW5hLCB3aXRoIENoaW5lc2Ugc2hvcHBlcnMgZmxvY2tpbmcgdG8gcmV0YWlsZXJzIHRvIGJ1eSBqZXdlbHJ5IGFuZCBiYXJzLiBBIHNwb2tlc21hbiBmb3IgSG9uZyBLb25nIGpld2VscnkgY2hhaW4gQ2hvdyBUYWkgRm9vaywgdGhlIHdvcmxkJ3MgbGFyZ2VzdCBqZXdlbHJ5IHJldGFpbGVyIGJ5IG1hcmtldCB2YWx1ZSwgdG9sZCBSZXV0ZXJzIHRoYXQgdHJhZmZpYyBhdCBpdHMgQ2hpbmEgc3RvcmVzIGp1bXBlZCBieSA1MCBwZXJjZW50IGR1cmluZyB0aGUgTWF5IERheSBob2xpZGF5cy4gVGhlIHN1cmdlIGluIENoaW5lc2UgdHJhdmVsZXJzIGR1cmluZyB0aGUgdGhyZWUtZGF5IE1heSBEYXkgaG9saWRheSBhbHNvIGRyb3ZlIGdvbGQgc2FsZXMgaW4gSG9uZyBLb25nIHRvIHJpc2UgYnkgYW4gZXN0aW1hdGVkIDUwIHBlcmNlbnQsIHdpdGggdG90YWwgZ29sZCBzYWxlcyBmcm9tIEFwcmlsIDI5LU1heSAyIHJlYWNoaW5nIHNvbWUgNDAgdG9ucywgbG9jYWwgbWVkaWEgcXVvdGVkIEhheXdvb2QgQ2hldW5nLCBwcmVzaWRlbnQgb2YgdGhlIEhvbmcgS29uZyBHb2xkIGFuZCBTaWx2ZXIgRXhjaGFuZ2UsIGFzIHNheWluZy4gVGhlIGp1bXAgaW4gQ2hpbmVzZSBwaHlzaWNhbCBkZW1hbmQgYWxzbyBwcm9tcHRlZCBzb21lIGJhbmtzIHRvIHNoaXAgaW4gbW9yZSBzdXBwbGllcyBmcm9tIExvbmRvbiBhbmQgU3dpc3MgdmF1bHRzLCB0cmFkZXJzIHNhaWQuIFdpdGggQ2hpbmEncyBlY29ub215IHN0aWxsIG9uIHNoYWt5IGdyb3VuZCwgaW52ZXN0b3JzIHRoZXJlIHdpdGggbGltaXRlZCBvcHRpb25zIGZvciB0aGVpciBjYXNoIGNvdWxkIHN0aWxsIHNlZSBnb2xkIGFzIGF0dHJhY3RpdmUuIFRoZSBmYWxsIGhhcyBodXJ0IGJpZyBmdW5kcyBlbHNld2hlcmUgdGhhdCBiZXQgb24gZ29sZCBjb250aW51aW5nIGEgMTIgeWVhciBidWxsIHJ1biwgZXJvZGluZyBpbnZlc3RvciBjb25maWRlbmNlIGluIHRoZSB5ZWxsb3cgbWV0YWwuIENoaW5hJ3MgYW5udWFsIGV4cG9ydCBncm93dGggbWF5IGhhdmUgcGlja2VkIHVwIHNsaWdodGx5IGluIEFwcmlsIGR1ZSB0byBhIGxvdyBjb21wYXJpc29uIGZyb20gYSB5ZWFyIGFnbywgd2hpbGUgaW1wb3J0IGdyb3d0aCBwcm9iYWJseSBlYXNlZCwgYSBSZXV0ZXJzIHBvbGwgc2hvd2VkLCBzdWdnZXN0aW5nIHRoZSB1bmRlcmx5aW5nIG1vbWVudHVtIGZvciBib3RoIHRoZSBkb21lc3RpYyBhbmQgZ2xvYmFsIGVjb25vbWllcyByZW1haW5zIHRlcGlkLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8NjliAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGYxYWE1MjNkYzQ4ZDI0M2Y=</field><field name="symbol" class="java.lang.String">rO0ABXQAA1RBSQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8StLSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1I9cKPXCk</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1Vwo9cKPX</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1I9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1Vwo9cKPX</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzdcKPXCj2</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABydA==</field><field name="id" class="java.lang.String">rO0ABXQAEGI2ODhiOTkwMjYxNWZjYWY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEtiAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExMDY2</field><field name="title" class="java.lang.String">rO0ABXQANkNoaW5hIENvbnN1bWVycyBDb3VudGVyIEVjb25vbXkgR2xvb20gd2l0aCBUcmF2ZWwgQm9vbQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATkZM/iAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDlmMTZmMDcwYmUzOWEyNWQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABUdPT0RQ</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATkeWlSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5szMzMzMz</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5szMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5szMzMzMz</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5szMzMzMz</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1Ao9cKPXD</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDJmYTRlMDE4NGIwYmRhZWY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEO1AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExNzgx</field><field name="title" class="java.lang.String">rO0ABXQAL0NoaW5hIENyZWRpdCBTcXVlZXplIFByb21wdHMgU3VpY2lkZXMsIFZpb2xlbmNl</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATN8nKMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGJhYzM0NzI1NmU0ZDE0ZTM=</field><field name="symbol" class="java.lang.String">rO0ABXQABExPQU4=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATOBwv8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/yj1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/yj1wo9cKP</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/wAAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/wKPXCj1wp</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/tcKPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAH0A==</field><field name="id" class="java.lang.String">rO0ABXQAEDhlMzNhZjQ5YjBjMTQ4OTc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mF7zAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDc4OTM=</field><field name="title" class="java.lang.String">rO0ABXQAK1NsZXcgb2YgQ2hpbmVzZSBJUE9zIEV4cGVjdGVkIGJ5IFllYXIncyBFbmQ=</field><field name="content" class="java.lang.String">rO0ABXQVsEFzIG1hbnkgYXMgMjAgQ2hpbmVzZSBjb21wYW5pZXMgcGxhbiBpbml0aWFsIHB1YmxpYyBvZmZlcmluZ3MgaW4gSG9uZyBLb25nIGJ5IHllYXItZW5kIGFuZCBtb3JlIG5vbi1zdGF0ZSBidXNpbmVzc2VzIGFyZSBwcmVwYXJpbmcgdG8gZm9sbG93IGdvdmVybm1lbnQtb3duZWQgcGVlcnMgdG8gc2VlayBsaXN0aW5ncywgYW4gZXhlY3V0aXZlIG9mIHRoZSBjaXR54oCZcyBleGNoYW5nZSBzYWlkLiBXaGlsZSBhYm91dCAxMTAgY29tcGFuaWVzIGFyZSBzZWVraW5nIGFwcHJvdmFsIHRvIGxpc3QgdGhlaXIgc2hhcmVzIGFuZCBhYm91dCA0MCBoYXZlIHBlcm1pc3Npb24gdG8gZ28gYWhlYWQsIGJldHdlZW4gMTAgYW5kIDIwIGZpcm1zLCBtb3N0bHkgZnJvbSB0aGUgbWFpbmxhbmQsIGFyZSBsaWtlbHkgdG8gY29tcGxldGUgSVBPcyBieSBEZWMuIDMxLCBzYWlkIExhd3JlbmNlIEZvaywgY2hpZWYgbWFya2V0aW5nIG9mZmljZXIgZm9yIHRoZSBIb25nIEtvbmcgRXhjaGFuZ2UgYW5kIENsZWFyaW5nIEx0ZC4gSG9uZyBLb25n4oCZcyBiZW5jaG1hcmsgbWVhc3VyZSBmb3IgbWFpbmxhbmQgY29tcGFuaWVzIGNsaW1iZWQgbW9yZSB0aGFuIDEwIHBlcmNlbnQgbGFzdCB3ZWVrIHdoaWxlIHRoZSBCbG9vbWJlcmcgQ2hpbmEtVVMgNTUgSW5kZXggb2YgQ2hpbmVzZSBzdG9ja3MgaW4gdGhlIFUuUy4gcm9zZSA2LjUgcGVyY2VudC4gTGlzdGluZ3MgYnkgbWFpbmxhbmQgY29tcGFuaWVzIGluIEhvbmcgS29uZyBmZWxsIHRoaXMgeWVhciBmcm9tIHRoZSBzYW1lIHBlcmlvZCBpbiAyMDEwIGFzIENoaW5hLCB0aGUgd29ybGTigJlzIHNlY29uZC0gbGFyZ2VzdCBlY29ub215LCBncmV3IGF0IHRoZSBzbG93ZXN0IHBhY2Ugc2luY2UgMjAwOS4gUHJpdmF0ZWx5LW93bmVkIGNvbnN1bWVyIGNvbXBhbmllcyBhcmUgcmFpc2luZyBmdW5kcyBvbiB0aGUgY2l0eeKAmXMgbWFya2V0IGFzIENoaW5hIGVuY291cmFnZXMgZG9tZXN0aWMgY29uc3VtcHRpb24sIEZvayBzYWlkLiDigJxFdmVuIGlmIG1vcmUgYW5kIG1vcmUgc3RhdGUtb3duZWQgZW50ZXJwcmlzZXMgYXJlIGxpc3Rpbmcgb24gb3VyIGV4Y2hhbmdlLCB0aGUgbmV4dCBiaWcgd2F2ZSB3aWxsIGJlIHRoZSBwcml2YXRlIGVudGVycHJpc2VzLOKAnSBGb2sgc2FpZCBpbiBhbiBpbnRlcnZpZXcgRnJpZGF5ICBpbiBOZXcgWW9yay4g4oCcU29tZSB2ZXJ5IHN1Y2Nlc3NmdWwgcHJpdmF0ZSBlbnRlcnByaXNlcywgZXNwZWNpYWxseSBpbiB0aGUgY29uc3VtZXIgYnVzaW5lc3MsIGFyZSBsb29raW5nIHRvIHRhcCB0aGUgY2FwaXRhbCBtYXJrZXQu4oCdIEFsdG9nZXRoZXIsIDYxIG1haW5sYW5kIGNvbXBhbmllcyByYWlzZWQgJDE0LjMgYmlsbGlvbiB0aHJvdWdoIGluaXRpYWwgcHVibGljIG9mZmVyaW5ncyBvbiB0aGUgSG9uZyBLb25nIFN0b2NrIEV4Y2hhbmdlIHRocm91Z2ggTm92ZW1iZXIgdGhpcyB5ZWFyLCBjb21wYXJlZCB3aXRoICQ0OS4xIGJpbGxpb24gYnkgNzUgZmlybXMgaW4gdGhlIHNhbWUgcGVyaW9kIGEgeWVhciBhZ28sIGFjY29yZGluZyB0byBkYXRhIGNvbXBpbGVkIGJ5IEJsb29tYmVyZy4gQSB0b3RhbCBvZiA4NiBjb21wYW5pZXMgYnJvdWdodCBpbiAkNTMuNCBiaWxsaW9uIG9uIHRoZSBleGNoYW5nZSBmb3IgdGhlIGZ1bGwgeWVhciBvZiAyMDEwLiDigJhMYXN0IFRyYWlu4oCZIENoaW5h4oCZcyBlY29ub215IGV4cGFuZGVkIDkuMSBwZXJjZW50IGluIHRoZSB0aGlyZCBxdWFydGVyIGZyb20gYSB5ZWFyIGVhcmxpZXIsIGRvd24gZnJvbSA5LjUgaW4gdGhlIHNlY29uZC4gR3Jvd3RoIHdpbGwgc2xvdyB0byA4LjUgcGVyY2VudCBuZXh0IHllYXIsIHRoZSBPcmdhbml6YXRpb24gZm9yIEVjb25vbWljIENvb3BlcmF0aW9uIGFuZCBEZXZlbG9wbWVudCBzYWlkIE5vdi4gMjksIGRvd24gZnJvbSBpdHMgTWF5IGZvcmVjYXN0IG9mIDkuMiBwZXJjZW50LiBTb21lIGNvbXBhbmllcyBhcmUgaW4gYSBydXNoIHRvIGNhdGNoIOKAnHRoZSBsYXN0IHRyYWlu4oCdIGluIDIwMTEgZm9yIElQT3MgZXZlbiBhbWlkIOKAnHBvb3LigJ0gbWFya2V0IGNvbmRpdGlvbnMgb24gY29uY2VybiB0aGF0IDIwMTIgbWlnaHQgYmUgd29yc2UsIEZyYW5jaXMgTHVuLCBtYW5hZ2luZyBkaXJlY3RvciBhdCBMeW5jZWFuIEhvbGRpbmdzIEx0ZC4gaW4gSG9uZyBLb25nIHNhaWQgaW4gYW4gaW50ZXJ2aWV3IHdpdGggQmxvb21iZXJnIFRlbGV2aXNpb24gTm92LiAyOS4g4oCcSWYgeW91IGdldCB0aGUgbW9uZXkgbm93LCB5b3UgY2FuIGRvIGEgbG90IG9mIHRoaW5ncy4gWW91IGNhbiBidXkgZGlzdHJlc3NlZCBhc3NldHMsIGZvciBleGFtcGxlLuKAnSBJbiB0aGUgVS5TLiwgMTAgY29tcGFuaWVzIGZyb20gdGhlIGdyZWF0ZXIgQ2hpbmEgYXJlYSBhcmUgd2FpdGluZyB0byBvZmZlciBzaGFyZXMgb24gdGhlIE5hc2RhcSBTdG9jayBFeGNoYW5nZSwgdGhlIGJvdXJzZSBzYWlkIGluIGFuIGUtbWFpbCBGcmlkYXkuIEVpZ2h0IENoaW5lc2UgY29tcGFuaWVzIGhhdmUgY29tcGxldGVkIHRoZWlyIElQT3Mgb24gdGhlIE5hc2RhcSB0aGlzIHllYXIsIHRoZSBib3Vyc2Ugc2FpZC4gQXNpYW4gTGlzdGluZyDigJxJbiB0aGUgbG9uZyBydW4sIGl0IHByb2JhYmx5IG1ha2VzIG1vcmUgc2Vuc2UgZm9yIGNvbXBhbmllcyBkb21pY2lsZWQgaW4gQXNpYSB0byBnZXQgbGlzdGVkIGluIEFzaWEs4oCdIGFzIGl0IHdpbGwgaGVscCBpbnZlc3RvcnMgdG8gZ2V0IHBlZXIgY29tcGFyaXNvbnMsIGdyZWF0ZXIgbGlxdWlkaXR5IGFuZCBhbiBpbi1kZXB0aCBpbnZlc3RvciBiYXNlLCBzYWlkIEpvaG4gV29uZywgYSBIb25nIEtvbmctYmFzZWQgcG9ydGZvbGlvIG1hbmFnZXIgYXQgT2JlcndlaXMgQXNzZXQgTWFuYWdlbWVudCBJbmMuIE5vdi4gMzAgaW4gTmV3IFlvcmsuIFRoZSBCbG9vbWJlcmcgQ2hpbmEtVVMgNTUgSW5kZXggb2YgdGhlIG1vc3QtdHJhZGVkIENoaW5lc2Ugc3RvY2tzIGluIHRoZSBVLlMuIHBhcmVkIGl0cyB3ZWVrbHkgYWR2YW5jZSBvbiBEZWMuIDIgd2l0aCBhIGRlY2xpbmUgb2YgMC44IHBlcmNlbnQsIGxlZCBieSBhIGRyb3AgaW4gQWx1bWludW0gQ29ycC4gb2YgQ2hpbmEgTHRkLiwgYWxzbyBrbm93biBhcyBDaGFsY28sIGFuZCBDaGFuZ3lvdS5jb20gTHRkLiBUaGUgZ2F1Z2UgaXMgZG93biA0IHBlcmNlbnQgdGhpcyB5ZWFyLCBjb21wYXJlZCB3aXRoIGFuIDE4IHBlcmNlbnQgZGVjbGluZSBmb3IgdGhlIEhhbmcgU2VuZyBDaGluYSBFbnRlcnByaXNlIEluZGV4IGFuZCBhIDE2IHBlcmNlbnQgZHJvcCBmb3IgdGhlIFNoYW5naGFpIENvbXBvc2l0ZSBJbmRleC4gVGhlIEJsb29tYmVyZyBtZWFzdXJlIGZvciBVLlMuLXRyYWRlZCBDaGluZXNlIHN0b2NrcyBwb3N0ZWQgdGhlIGJpZ2dlc3Qgd2Vla2x5IGdhaW4gaW4gc2V2ZW4gYWZ0ZXIgQ2hpbmEgcmVkdWNlZCBpdHMgcmVzZXJ2ZSByZXF1aXJlbWVudHMgZm9yIGJhbmtzIGZvciB0aGUgZmlyc3QgdGltZSBzaW5jZSAyMDA4LiBQb2xpY3kgbWFrZXJzIG9uIE5vdi4gMzAgYWN0ZWQgdG8gcHJvdmlkZSBtb3JlIGxpcXVpZGl0eSB0byB0aGUgc3lzdGVtIHRvIHNob3JlIHVwIGVjb25vbWljIGdyb3d0aCBhcyB0aGUgcHJvcGVydHkgbWFya2V0IGNvb2xlZCBhbmQgdGhlIEV1cm9wZWFuIGNyaXNpcyBlcm9kZWQgZXhwb3J0cy4gQSBEZWMuIDEgcmVwb3J0IHNob3dlZCBtYW51ZmFjdHVyaW5nIGNvbnRyYWN0ZWQgbGFzdCBtb250aCBmb3IgdGhlIGZpcnN0IHRpbWUgc2luY2UgRmVicnVhcnkgMjAwOS4gVS5TLiBFbXBsb3ltZW50IEFsc28gb24gTm92LiAzMCwgdGhlIEZlZGVyYWwgUmVzZXJ2ZSBhbmQgZml2ZSBvdGhlciBjZW50cmFsIGJhbmtzIHdobyBjdXQgdGhlIGNvc3RzIG9mIGVtZXJnZW5jeSBkb2xsYXIgZnVuZGluZyB0byBFdXJvcGVhbiBsZW5kZXJzIHRvIGFsbGV2aWF0ZSBhIGNyZWRpdCBjcnVuY2guIFRoZSBVLlMuIExhYm9yIERlcGFydG1lbnQgc2FpZCBEZWMuIDIgdGhlIGpvYmxlc3MgcmF0ZSB1bmV4cGVjdGVkbHkgZmVsbCBsYXN0IG1vbnRoIHRvIHRoZSBsb3dlc3QgbGV2ZWwgc2luY2UgTWFyY2ggMjAwOS4gWW91a3UgSW5jLiwgQ2hpbmHigJlzIGJpZ2dlc3Qgb25saW5lLXZpZGVvIHdlYnNpdGUsIHN1cmdlZCAyNyBwZXJjZW50IGxhc3Qgd2VlayB0byAkMTkuOTEsIGxlYWRpbmcgZ2FpbmVycyBpbiB0aGUgd2VlayBhbW9uZyBjb21wYW5pZXMgdGhlIEJsb29tYmVyZyBiZW5jaG1hcmsuIFNpbmEgQ29ycC4sIHRoZSBvd25lciBvZiBDaGluYeKAmXMgVHdpdHRlci1saWtlIFdlaWJvIHNlcnZpY2UsIGNsaW1iZWQgOC41IHBlcmNlbnQgaW4gdGhlIHBhc3QgZml2ZSB0cmFkaW5nIGRheXMgdG8gYSB0d28td2VlayBoaWdoIG9mICQ2OC41Mi4gRGV1dHNjaGUgQmFuayBBRyByYWlzZWQgaXRzIHJhdGluZyBmb3IgU2luYSBvbiBEZWMuIDEgdG8g4oCcYnV54oCdIGZyb20g4oCcaG9sZOKAnSB3aXRoIGEgMTItbW9udGggdGFyZ2V0IG9mICQ5NC44MC4gQ25vb2MgTHRkLiwgdGhlIG5hdGlvbuKAmXMgbGFyZ2VzdCBvZmZzaG9yZSBvaWwgcHJvZHVjZXIsIGp1bXBlZCAxMiBwZXJjZW50IGxhc3Qgd2VlaywgdGhlIG1vc3QgaW4gZml2ZSwgdG8gJDE5Mi43MS4gVGhlIGNvbXBhbnkgY29tcGxldGVkIGl0cyBhY3F1aXNpdGlvbiBvZiBPUFRJIENhbmFkYSBJbmMuLCBhbiBvaWwgc2FuZCBwcm9qZWN0IGRldmVsb3BlciwgaXQgc2FpZCBOb3YuIDI4LiBDeWNsaWNhbCBSZWJvdW5kIENoaW5lc2UgZmluYW5jaWFsIGNvbXBhbmllcyBhbmQgY29tbW9kaXR5IHByb2R1Y2VycyB3aWxsIGJlbmVmaXQgbW9zdCBmcm9tIGEgcG90ZW50aWFsIGN5Y2xpY2FsIHJlYm91bmQgaW4gdGhlIGVjb25vbXksIEhhbyBIb25nLCBCZWlqaW5nLWJhc2VkIGdsb2JhbCBlcXVpdHkgc3RyYXRlZ2lzdCBhdCBDaGluYSBJbnRlcm5hdGlvbmFsIENhcGl0YWwgQ29ycC4sIHNhaWQgb24gQmxvb21iZXJnIFRlbGV2aXNpb24gRGVjLiAyLiBUaGUgaXNoYXJlcyBGVFNFIENoaW5hIDI1IEluZGV4IEZ1bmQsIHRoZSBiaWdnZXN0IENoaW5lc2UgZXhjaGFuZ2UtdHJhZGVkIGZ1bmQgaW4gdGhlIFUuUy4sIGdhaW5lZCA5LjIgcGVyY2VudCBsYXN0IHdlZWsgdG8gJDM2LjQwLiBUaGUgQ2hpbmVzZSB5dWFuIHN0cmVuZ3RoZW5lZCAwLjIgcGVyY2VudCBkdXJpbmcgdGhlIHBlcmlvZCB0byA2LjM1OTcgcGVyIGRvbGxhciwgYWNjb3JkaW5nIHRvIHRoZSBDaGluYSBGb3JlaWduIEV4Y2hhbmdlIFRyYWRlIFN5c3RlbS4gVGhlIGdvdmVybm1lbnQgaXMgc2NoZWR1bGVkIHRvIHJlcG9ydCBOb3ZlbWJlciBpbmZsYXRpb24gcmF0ZSBhbmQgcHJvZHVjdGlvbiBmaWd1cmVzIHRoaXMgd2Vlay4gVGhlIGluY3JlYXNlIGluIGNvbnN1bWVyIHByaWNlcyBtYXkgc2xvdyB0byA0LjUgcGVyY2VudCBsYXN0IG1vbnRoIGZyb20gYSB5ZWFyIGFnbywgdGhlIG1lZGlhbiBlc3RpbWF0ZSBvZiAyNiBlY29ub21pc3RzIHN1cnZleWVkIGJ5IEJsb29tYmVyZyBzaG93ZWQuIFRoYXQgd291bGQgY29tcGFyZSB3aXRoIDUuNSBwZXJjZW50IGluIE9jdG9iZXIgYW5kIGEgdGhyZWUteWVhciBoaWdoIG9mIDYuNSBwZXJjZW50IGluIEp1bHku</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATQHqFcAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGJlOWViNjViODM1NzhkNWQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAA05PVg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATQMzrMAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSOZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSWFHrhR64</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSDrhR64Uf</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSSPXCj1wp</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBPYUeuFHrh</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAEvEfA==</field><field name="id" class="java.lang.String">rO0ABXQAEDQ1NWE1MzU5NDMxZGUyY2Y=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mG51AAAA==</field></document></documents><date>2015-05-07T06:46:36-0500</date></cacheEntry>
<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0B1hBIG1lZGlhIGNvbXBhbnkgb3duZWQgYnkgS3JlbWxpbmZyaWVuZGx5IG9saWdhcmNoIEFsaXNoZXIgVXNtYW5vdiBoYXMgc3BsYXNoZWQgb3V0IDE1IGJpbGxpb24gdG8gZ2FpbiBmdWxsIGNvbnRyb2wgb2YgUnVzc2lhcyBtb3N0IHBvcHVsYXIgc29jaWFsIG5ldHdvcmsgVktvbnRha3RlIGJyaW5naW5nIGFuIGVuZCB0byBhIG1vbnRoc2xvbmcgZGlzcHV0ZSB0aGF0IHNhdyB0aGUgb3JpZ2luYWwgaW52ZXN0b3JzIHN1ZSBlYWNoIG90aGVyIGluIGNvdXJ0IExvbmRvbmxpc3RlZCBNYWlsUnUgR3JvdXAgc2FpZCBpbiBhIHN0YXRlbWVudCBUdWVzZGF5IHRoYXQgaXQgbm93IG93bnMgdGhlIHdob2xlIG9mIFZLb250YWt0ZSBmb2xsb3dpbmcgaXRzIHB1cmNoYXNlIG9mIGEgNDggcGVyY2VudCBzdGFrZSBmcm9tIGludmVzdG1lbnQgZnVuZCBVbml0ZWQgQ2FwaXRhbCBQYXJ0bmVycyBNYWlsUnUgZmlyc3QgaW52ZXN0ZWQgaW4gVktvbnRha3RlIGluIDIwMDcgYW5kIHNpbmNlIHRoZW4gaGFzIHNwZW50IG92ZXIgMjEgYmlsbGlvbiBhY2N1bXVsYXRpbmcgc3RvY2sgVktvbnRha3RlIGlzIFJ1c3NpYXMgbW9zdCBwb3B1bGFyIHNvY2lhbCBuZXR3b3JrIGFuZCBoYXMgb3ZlciAyNzAgbWlsbGlvbiBhY2NvdW50cyBVc21hbm92IHdobyBpcyByZXB1dGVkIHRvIGJlIHdvcnRoIDE4NiBiaWxsaW9uIHdhcyBuYW1lZCBSdXNzaWFzIHJpY2hlc3QgbWFuIGJ5IHRoZSBSdXNzaWFuIEZvcmJlcyBtYWdhemluZSBlYXJsaWVyIHRoaXMgeWVhciBNYWlsUnVzIGNoaWVmIGV4ZWN1dGl2ZSBEbWl0cnkgR3Jpc2hpbiBsYXVkZWQgdGhlIGRlYWwgc2F5aW5nIHRoZSB0ZXJtaW5hdGlvbiBvZiBhbGwgb3V0c3RhbmRpbmcgc2hhcmVob2xkZXIgZGlzcHV0ZXMgd2lsbCBhbGxvdyBmb2N1cyBvbiB0aGUgcHJvZHVjdCBhbmQgaXRzIGZ1cnRoZXIgZGV2ZWxvcG1lbnQgVktvbnRha3RlcyBvcmlnaW5hbCBpbnZlc3RvcnMgcGFydGVkIHdheXMgaW4gMjAxMyB3aGVuIHR3byBvZiB0aGVtIHNvbGQgdGhlaXIgY29tYmluZWQgNDggcGVyY2VudCB0byBVbml0ZWQgQ2FwaXRhbCBQYXJ0bmVycyBWS29udGFrdGVzIGZvdW5kZXIgUGF2ZWwgRHVyb3YgYWNjdXNlZCBoaXMgZm9ybWVyIHBhcnRuZXJzIG9mIHZpb2xhdGluZyB0aGVpciBwcmV2aW91cyBhZ3JlZW1lbnQgc2luY2UgdGhleSBkaWQgbm90IG9mZmVyIGhpbSBvciBNYWlsUnUgYW4gb3B0aW9uIHRvIGJ1eSB0aGVpciBzaGFyZXMgRHVyb3Ygc29sZCBoaXMgMTIgcGVyY2VudCBzdGFrZSBpbiBKYW51YXJ5IHdoaWNoIGxhdGVyIGVuZGVkIHVwIGluIE1haWxSdXMgaGFuZHMgSGUgZmxlZCBSdXNzaWEgc2hvcnRseSBhZnRlciB0aGF0IGFuZCBjbGFpbWVkIHRoYXQgaGUgc29sZCBoaXMgc2hhcmVzIHVuZGVyIHByZXNzdXJlIGFzIHRoZSBSdXNzaWFuIGludGVsbGlnZW5jZSBhZ2VuY3kgRlNCIHdhcyB0cnlpbmcgdG8gZ2V0IFZLb250YWt0ZSB0byBkaXNjbG9zZSBwZXJzb25hbCBkYXRhIG9mIHRoZSB1c2VycyBvZiBhIGdyb3VwIGxpbmtlZCB0byB0aGUgcHJvdGVzdCBtb3ZlbWVudCBpbiBVa3JhaW5lIEFzIHBhcnQgb2YgdGhlIGRlYWwgYWxsIHBlbmRpbmcgbGF3c3VpdHMgaGF2ZSBiZWVuIGRyb3BwZWQgSW4gYSBqb2ludCBzdGF0ZW1lbnQgd2l0aCBNYWlsUnUgRHVyb3Ygd2VsY29tZWQgdGhlIGRlY2lzaW9uIG9mIGhpcyBmb3JtZXIgcGFydG5lcnMgdG8gZHJvcCB0aGVpciBjbGFpbXMgYWdhaW5zdCBoaXMgbmV3IHByb2plY3Qgd2hpbGUgaGUgd2FzIGRpc21pc3NpbmcgaGlzIGNsYWltcyBhZ2FpbnN0IHRoZW0gTWFpbFJ1IHNvYXJlZCAzIHBlcmNlbnQgYXQgdGhlIExvbmRvbiBTdG9jayBFeGNoYW5nZSBvbiB0aGUgbmV3cyBvZiB0aGUgYWNxdWlzaXRpb24gb24gVHVlc2RheXQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0xMi0wM1QwMDowMDowMFogVE8gMjAxNC0wNy0xMFQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDE2NDQ=</field><field name="title" class="java.lang.String">rO0ABXQAOVJ1c3NpYSBLbm93cyBFdXJvcGUgU2FuY3Rpb25zIEluZWZmZWN0aXZlIFdpdGggVGF4IEhhdmVucw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUXKwLyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDdjMzlhZWFiMGNhZWM5Yjc=</field><field name="symbol" class="java.lang.String">rO0ABXQABE5PUkQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUXP5xiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzczMzMzMz</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAznCj1wo9c</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAy7hR64Ueu</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzQAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzQAAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAADbiA==</field><field name="id" class="java.lang.String">rO0ABXQAEGI2ZTU1NzIwNDU4YzFhNjA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJGwAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDgwOTE=</field><field name="title" class="java.lang.String">rO0ABXQAO1VrcmFpbmUgT3VzdHMgQ2VudHJhbCBCYW5rIEhlYWQgYXMgUnVzc2lhIFNjb3JucyBMZWFkZXJzaGlw</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAURieoMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGM2MmQwNTBkMTI2OWE3NWI=</field><field name="symbol" class="java.lang.String">rO0ABXQABFBBVEg=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAURnoN8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEARAAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEARAAAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEARAAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEARAAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEARAAAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDBhMjYxMGQyODQ2Nzc2YTU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mM4LAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDU3NjA=</field><field name="title" class="java.lang.String">rO0ABXQAMlJ1c3NpYW4gRWNvbm9teSwgVHljb29ucyBUYWtlIEhpdCBpbiBDcmltZWEgQ3Jpc2lz</field><field name="content" class="java.lang.String">rO0ABXQWgVJ1c3NpYSdzIG1vc3QgcG93ZXJmdWwgYnVzaW5lc3NtZW4gd2FpdGVkIGZvciBvdmVyIGFuIGhvdXIgb24gVGh1cnNkYXkgdG8gc3BlYWsgd2l0aCBQcmVzaWRlbnQgVmxhZGltaXIgUHV0aW4sIHdob3NlIGRlY2lzaW9uIHRvIGFubmV4IHRoZSBDcmltZWFuIFBlbmluc3VsYSBoYWQgY29zdCB0aGVpciBjb21wYW5pZXMgaHVuZHJlZHMgb2YgbWlsbGlvbnMgb2YgZG9sbGFycyBpbiBtYXJrZXQgdmFsdWUuIFdoZW4gUHV0aW4gZmluYWxseSBzaG93ZWQgdXAg4oCUIGZvciBmaXZlIG1pbnV0ZXMg4oCUIGhlIGdhdmUgbm8gcmVhc3N1cmFuY2VzIHRoYXQgdGhleSBvciB0aGVpciBjb21wYW5pZXMgbWlnaHQgZ2V0IGFueSByZXNwaXRlIGZyb20gdGhlIHVuY2VydGFpbnR5IGNyZWF0ZWQgYnkgdGhlIHRha2VvdmVyIG9mIGEgcGllY2Ugb2YgbGFuZCBvZiBsaXR0bGUgdmFsdWUgdG8gdGhlbSBiZXlvbmQgbmF0aW9uYWwgcHJpZGUuIFJ1c3NpYSdzIGVjb25vbXkgaXMgZ2V0dGluZyBwaW5jaGVkIGJ5IHRoZSBjcmlzaXMgb3ZlciBDcmltZWEg4oCUIGV2ZW4gYmVmb3JlIHRoZSBuZXcgc2FuY3Rpb25zIHRoZSBVLlMuIGFuZCBFdXJvcGUgYW5ub3VuY2VkIFRodXJzZGF5LiBUaGUgc3RvY2sgbWFya2V0IGhhcyB0YW5rZWQgMTAgcGVyY2VudCB0aGlzIG1vbnRoLCB3aXBpbmcgb3V0IGJpbGxpb25zIGluIG1hcmtldCBjYXBpdGFsaXphdGlvbi4gRWNvbm9taXN0cyBoYXZlIHNsYXNoZWQgZ3Jvd3RoIGZvcmVjYXN0cyB0byB6ZXJvIHRoaXMgeWVhciBhbmQgZm9yZWlnbiBpbnZlc3RvcnMgYXJlIHB1bGxpbmcgbW9uZXkgb3V0IG9mIFJ1c3NpYW4gYmFua3MuIFJhdGluZ3MgYWdlbmN5IFN0YW5kYXJkICYgUG9vcidzIG9uIFRodXJzZGF5IGNpdGVkIGFsbCB0aGVzZSBpc3N1ZXMgd2hlbiBpdCBjdXQgaXRzIG91dGxvb2sgZm9yIHRoZSBjb3VudHJ5LiBCZWNhdXNlIFUuUy4gYW5kIEV1cm9wZWFuIGxlYWRlcnMgaGF2ZSBzYWlkIHRoZXkgYXJlIHdpbGxpbmcgdG8gaW1wb3NlIGV2ZXIgc3RpZmZlciBzYW5jdGlvbnMsIHJhdGNoZXRpbmcgdXAgdGhlIHByZXNzdXJlIG9uIFJ1c3NpYSBzdGVwIGJ5IHN0ZXAsIHRoZSBjb25jZXJuIGlzIGhvdyBzZXZlcmUgdGhlIHBlbmFsdGllcyBtaWdodCBnZXQuICJUaGUgbWFpbiByaXNrIGlzIGluIHRoZSBzYW5jdGlvbnMgdGhhdCBoYXZlIG5vdCBiZWVuIGFubm91bmNlZCwiIHNheXMgTmF0YWxpeWEgT3Jsb3ZhLCBjaGllZiBlY29ub21pc3QgYXQgQWxmYSBCYW5rIGluIE1vc2Nvdy4gIkl0J3MgaGFyZCB0byBlc3RpbWF0ZSB0aGUgZWZmZWN0IHJpZ2h0IG5vdyBiZWNhdXNlIHdlIGRvbid0IGtub3cgd2hhdCB0aGV5IHdpbGwgYmUuIiBPbiBUaHVyc2RheSwgdGhlIFUuUy4gc2xhcHBlZCBhc3NldCBmcmVlemVzIG9uIGZvdXIgYnVzaW5lc3NtZW4gbGlua2VkIGNsb3NlbHkgdG8gUHV0aW4gYXMgd2VsbCBhcyBhIFJ1c3NpYW4gYmFuayB0aGF0IHByb3ZpZGVzIHRoZW0gc3VwcG9ydC4gSWYgUHV0aW4gZG9lcyBub3QgYmFjayBkb3duIG92ZXIgQ3JpbWVhLCBhcyBtb3N0IGV4cGVjdCwgdGhvc2Ugc2FuY3Rpb25zIGNvdWxkIGJyb2FkZW4gZnVydGhlciBpbiBjb21pbmcgd2Vla3MuIFJ1c3NpYSdzIGVjb25vbXkgd2FzIGFscmVhZHkgd2VhayBnb2luZyBpbnRvIHRoZSBjcmlzaXMsIGV4cGFuZGluZyBvbmx5IDEuMyBwZXJjZW50IGxhc3QgeWVhci4gRm9yIHRoaXMgeWVhciwgZm9yZWNhc3RzIGZvciBncm93dGggb2YgYWJvdXQgMiBwZXJjZW50IGhhdmUgYmVlbiB3cml0dGVuIG9mZiBhbHRvZ2V0aGVyLCB3aXRoIFB1dGluJ3MgYWR2aXNlciwgQWxleGVpIEt1ZHJpbiwgZXhwZWN0aW5nIG5vIGdyb3d0aCBhdCBhbGwuIFRoZSBydWJsZSBoYXMgbG9zdCA5IHBlcmNlbnQgYWdhaW5zdCB0aGUgZG9sbGFyIGluIGxlc3MgdGhhbiB0aHJlZSBtb250aHMuIFRoYXQgd2lsbCBtYWtlIGltcG9ydHMgbW9yZSBleHBlbnNpdmUgZm9yIGF2ZXJhZ2UgUnVzc2lhbnMuIEluIGEgYmlkIHRvIHN1cHBvcnQgdGhlIGN1cnJlbmN5LCB0aGUgY2VudHJhbCBiYW5rIHJhaXNlZCBpdHMgbWFpbiBpbnRlcmVzdCByYXRlIHNoYXJwbHkgbGFzdCB3ZWVrIGZyb20gNS41IHRvIDcgcGVyY2VudCwgYnV0IHRoYXQgd2lsbCBodXJ0IHRoZSBlY29ub215LCB0b28sIGJ5IG1ha2luZyBsb2FucyBtb3JlIGV4cGVuc2l2ZS4gSW52ZXN0b3JzIHRvb2sgJDM1IGJpbGxpb24gb3V0IG9mIFJ1c3NpYSBpbiBKYW51YXJ5IGFuZCBGZWJydWFyeSDigJQgYWJvdXQgaGFsZiBhcyBtdWNoIGFzIGluIHRoZSBlbnRpcmUgcHJlY2VkaW5nIHllYXIuIFRoZSBvdXRmbG93cyBjb3VsZCBzb2FyIHRvICQ1MCBiaWxsaW9uIHBlciBxdWFydGVyIGlmIHNhbmN0aW9ucyBnZXQgdG91Z2hlciwgS3VkcmluIGhhcyB3YXJuZWQuIFRoZSBiaWcgcmlzayBmb3IgUnVzc2lhIGlzIGlmIHRoZSBVLlMuIGFuZCBFdXJvcGUgZXhwYW5kIHRoZWlyIHNhbmN0aW9ucyB0byBtb3JlIGFnZ3Jlc3NpdmVseSB0YXJnZXQgdHJhZGUgcmVsYXRpb25zLiBUaGF0IHdvdWxkIGJlIGEgbGFzdCByZXNvcnQsIGF0IGxlYXN0IGZvciBFdXJvcGUsIHdoaWNoIGhhcyBhIGxvdCB0byBsb3NlIGl0c2VsZiDigJQgaXQgaW1wb3J0cyBhIHRoaXJkIG9mIGl0cyBnYXMgZnJvbSBSdXNzaWFuIGFuZCBoYXMgc3Ryb25nIHRyYWRlcyB0aWVzLiBCdXQgZXZlbiBpZiBvdXRyaWdodCB0cmFkZSBlbWJhcmdvZXMgYXJlIGF2b2lkZWQsIHRoZSByaXNrIG9mIHBvc3NpYmxlIHNhbmN0aW9ucyBpcyBpdHNlbGYgZGFtYWdpbmcuIEludmVzdGluZyBvciBsZW5kaW5nIGluIFJ1c3NpYSB3aWxsIGNhcnJ5IGhpZ2hlciByaXNrcywgaW52ZXN0bWVudCBkZWNpc2lvbnMgd2lsbCBiZSBkZWxheWVkIGFuZCBpbnZlc3RvcnMgd2lsbCBmZWVsIGluY2xpbmVkIHRvIGtlZXAgb24gc2VsbGluZyBzdG9ja3MsIHNheXMgQ2hhcmxpZSBSb2JlcnRzb24sIGFuIGFuYWx5c3QgYXQgUmVuYWlzc2FuY2UgQ2FwaXRhbCBpbiBMb25kb24uIEF0IGxlYXN0IHB1YmxpY2x5LCBSdXNzaWFuIHR5Y29vbnMgYXJlIGtlZXBpbmcgYSBsb3cgcHJvZmlsZS4gQXQgdGhlIGJ1c2luZXNzIGdyb3VwIG1lZXRpbmcgY2hhaXJlZCBieSBQdXRpbiBvbiBUaHVyc2RheSwgQWxleGVpIE1vcmRhc2hvdiwgd29ydGggYXJvdW5kICQxMyBiaWxsaW9uLCBhbmQgRG1pdHJ5IFB1bXB5YW5za3ksIHdvcnRoICQyIGJpbGxpb24sIGRpZCBub3QgdXR0ZXIgYSB3b3JkIG9mIGNvbmNlcm4gb3IgY29tcGxhaW50IOKAlCBldmVuIHRob3VnaCB0aGVpciBjb21wYW5pZXMgaGF2ZSBiZWVuIGdldHRpbmcgc2xhbW1lZCBpbiBzdG9jayBtYXJrZXRzLiBTaGFyZXMgaW4gTW9yZGFzaG92J3MgU2V2ZXJzdGFsLCBSdXNzaWEncyBsYXJnZXN0IHN0ZWVsIGNvbXBhbnksIGRyb3BwZWQgMTMgcGVyY2VudCB0aGlzIG1vbnRoLCBjdXR0aW5nIHRoZSBjb21wYW55J3MgY2FwaXRhbGl6YXRpb24gYnkgYWJvdXQgJDkwMCBtaWxsaW9uLiBTdG9ja3MgaW4gUHVtcHlhbnNreSdzIHBpcGUgcHJvZHVjZXIgVE1LIGxvc3QgMTkgcGVyY2VudCB0aGlzIG1vbnRoLCB3aXRoIHRoZSBjb21wYW55IGxvc2luZyBtb3JlIHRoYW4gJDUwMCBtaWxsaW9uIG9mIGl0cyBtYXJrZXQgdmFsdWUuIFRoZSB0eWNvb25zJyBzaWxlbmNlIHN0ZW1zIGZyb20gYSBkZWFsIHRoZXkgc3RydWNrIHdpdGggUHV0aW4gbW9yZSB0aGFuIGEgZGVjYWRlIGFnbyB0byBnaXZlIHVwIGFueSBwb2xpdGljYWwgYW1iaXRpb25zIGluIGV4Y2hhbmdlIGZvciBhIGZyZWUgaGFuZCBpbiB0aGVpciBidXNpbmVzcyBhZmZhaXJzLiBTaW5jZSB0aGUgYXJyZXN0IGFuZCBpbXByaXNvbm1lbnQgb2YgTWlraGFpbCBLaG9kb3Jrb3Zza3kgaW4gMjAwMywgbm8gYmlsbGlvbmFpcmUgaGFzIHZlbnR1cmVkIHRvIHF1ZXN0aW9uIFB1dGluJ3MgZnVuZGFtZW50YWwgcG9saWNpZXMuIE1ldGFscyB0eWNvb24gVmxhZGltaXIgUG90YW5pbiwgd2hvIGlzIGJlbGlldmVkIHRvIGJlIHdvcnRoICQxNCBiaWxsaW9uLCBzYXlzIGhlJ2QgInRob3VnaHQgYSBsb25nIHRpbWUgYWdvIGFib3V0IHdoYXQgd2UncmUgZ29pbmcgdG8gZG8gaW4gY2FzZSBzb21lIHNvcnQgb2Ygc2FuY3Rpb25zIGFyZSBpbnRyb2R1Y2VkLiIgSGUgc2F5cyBoaXMgY29tcGFuaWVzLCB3aGljaCBpbmNsdWRlIE5vcmlsc2sgTmlja2VsLCBhcmUgdXNpbmcgIm11bHRpcGxlIGN1cnJlbmNpZXMiIHRvIGRpdmVyc2lmeSByaXNrLiBQb3RhbmluLCBob3dldmVyLCBpbnNpc3RzIHRoYXQgbmVpdGhlciBoZSBub3IgaGlzIHBhcnRuZXJzIGV4cGVjdCBzYW5jdGlvbnMgdG8gZ2V0IHNvIHRvdWdoIHRoYXQgdGhleSB3b3VsZCBodXJ0IHRyYWRlLiBOaWtvbGFpIE5pa29sYXlldiwgd2hvIG93bnMgYSBjb25zdWx0aW5nIGJ1c2luZXNzIGFzIHdlbGwgYXMgaG90ZWxzIG9uIFJ1c3NpYSdzIEJsYWNrIFNlYSBjb2FzdCwgZGlzbWlzc2VkIHRoZSBmZWFycyBvZiB3aWRlLXJhbmdpbmcgdHJhZGUgZW1iYXJnb2VzLiBFdXJvcGVhbiBjb21wYW5pZXMgZXhwb3J0IDEyMyBiaWxsaW9uICgkMTcwIGJpbGxpb24pIHRvIFJ1c3NpYSBpbiAyMDEyLiBTbyBpZiB0aGV5IHdlcmUgdG9sZCB0byBjdXJiIG9yIHN0b3AgdGhlaXIgZXhwb3J0cyB0byBSdXNzaWEsIHRoZXkgd291bGQgc3VmZmVyIGh1Z2VseSwgTmlrb2xheWV2IHNhaWQuICJUaGVzZSBjb21wYW5pZXMgd2lsbCBnZXQgZ2FwaW5nIGhvbGVzIGluIHRoZWlyIHNhbGVzLCIgc2FpZCBOaWtvbGF5ZXYuICJXaG8gaXMgZ29pbmcgdG8gc3VmZmVyIG1vcmUgaGVyZT8iIEluZGVwZW5kZW50IGVjb25vbWlzdHMgc2F5IFJ1c3NpYSBpbiBmYWN0IGhhcyBtb3JlIHRvIGxvc2UgZWNvbm9taWNhbGx5IGZyb20gYSB0aXQtZm9yLXRhdCBjYW1wYWlnbiBvZiBzYW5jdGlvbnMsIG1haW5seSBiZWNhdXNlIEV1cm9wZWFuIGFuZCBVLlMuIGNvbXBhbmllcyBoYXZlIHN0cm9uZyB0cmFkZSB0aWVzIHdpdGggb3RoZXIgcmVnaW9ucyBhcyB3ZWxsLCBzdWNoIGFzIEFzaWEgYW5kIExhdGluIEFtZXJpY2EuIEJ1dCB0aGV5IHNheSBpdCBpcyBoYXJkIHRvIGltYWdpbmUgdGhhdCBSdXNzaWEgY291bGQgZ2V0IGhpdCB3aXRoIGNyaXBwbGluZyBlY29ub21pYyBzYW5jdGlvbnMgbGlrZSBOb3J0aCBLb3JlYSBvciBJcmFuIGp1c3QgYmVjYXVzZSBpdHMgZWNvbm9teSBpcyBzbyBtdWNoIG1vcmUgaW50ZXJ0d2luZWQgd2l0aCB0aGF0IG9mIHRoZSBXZXN0LiBSdXNzaWEgaXMgdGhlIHdvcmxkJ3MgbGFyZ2VzdCBlbmVyZ3kgZXhwb3J0ZXIsIGFjY291bnRpbmcgZm9yIGEgdGhpcmQgb2YgRXVyb3BlJ3MgY29uc3VtcHRpb24sIGFjY29yZGluZyB0byBvaWwgY29tcGFueSBCUC4gSXQgaXMgYWxzbyB0aGUgd29ybGQncyBsYXJnZXN0IGV4cG9ydGVyIG9mIGluZHVzdHJpYWwgbWV0YWxzLCBtYWtpbmcgZXhwb3J0cyBmcm9tIGNvbXBhbmllcyBsaWtlIFNldmVyc3RhbCBjcnVjaWFsIGZvciBnbG9iYWwgcHJvZHVjZXJzIHdoZXRoZXIgdGhleSBhcmUgbWFraW5nIGNhcnMgb3IgYWlycGxhbmVzLiAiVGhlIHdvcmxkIGNvdWxkIGFmZm9yZCB0byBsb3NlIGEgbWlsbGlvbiBiYXJyZWxzIG9mIElyYW5pYW4gb2lsLCIgUm9iZXJ0c29uIHNhaWQsIHJlZmVycmluZyB0byBzYW5jdGlvbnMgYWdhaW5zdCBJcmFuIGluIDE5NzkuICJXaXRoIEV1cm9wZSBhbHJlYWR5IHVwc2V0IHRoYXQgdGhlaXIgZW5lcmd5IGNvc3RzIGFyZSBoaWdoZXIgdGhhbiB0aGUgVS5TLiwgKGl0J3MpIGhhcmQgdG8gc2VlIEV1cm9wZSBnZXR0aW5nIG1vcmUgc2VyaW91cyBoZXJlLiI=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUTd3DSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDBmOTAyY2UxYzgzZTgyOTY=</field><field name="symbol" class="java.lang.String">rO0ABXQABE1TQ0E=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUTjApCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4mZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4mZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4YUeuFHrh</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4ZmZmZmZm</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3TMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAT7A==</field><field name="id" class="java.lang.String">rO0ABXQAEDM1MTc5Nzc3ZmQ2Y2Q1ZjY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mM0SAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIzMTAz</field><field name="title" class="java.lang.String">rO0ABXQAOUFtZXJpY2FuIEFwcGFyZWwgSW52ZXN0b3IgTm90IFBsYW5uaW5nIHRvIFN1cHBvcnQgQ2hhcm5leQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbHGFiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDAyMzgzNTUzNzYyNTRjZGQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABFJPVEg=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbMPrSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAHUwA==</field><field name="id" class="java.lang.String">rO0ABXQAEGNhN2ZiMmEzNjdjMjVhMDU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKv9AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIzMTA0</field><field name="title" class="java.lang.String">rO0ABXQAK0Fsc3RvbSBMb3NzIElzIFBSIFdpbiBmb3IgTmV3IFNpZW1lbnMgQ2hpZWY=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbHGFiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGU0MDY2MmNjY2M0NTk3NmY=</field><field name="symbol" class="java.lang.String">rO0ABXQABlI2Qy5ERQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbMPrSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA+gAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA+oUeuFHrh</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA+Fwo9cKPX</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA+aPXCj1wp</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA88zMzMzMz</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAC0FA==</field><field name="id" class="java.lang.String">rO0ABXQAEGM4ODU1ZmFhMDQwNDBmMmQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFGoAAAA==</field></document></documents><date>2015-05-07T12:20:15-0500</date></cacheEntry>
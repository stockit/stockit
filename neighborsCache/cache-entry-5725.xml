<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hFY29ub21pc3RzIGF0IGdvdmVybm1lbnQgdGhpbmt0YW5rcyBhbmQgQ2hpbmEgd2F0Y2hlcnMgc2F5IEJlaWppbmcgd2lsbCBhY3QgaWYgdGhlIGVjb25vbXkgbG9zZXMgdHJhY3Rpb24gdG9vIHF1aWNrbHkgdGhyZWF0ZW5pbmcgZmluYW5jaWFsIGFuZCBzb2NpYWwgc3RhYmlsaXR5IGFzIGl0IHB1c2hlcyB0b3dhcmRzIG1vcmUgYmFsYW5jZWQgYW5kIHN1c3RhaW5lZCBlY29ub21pYyBncm93dGggVGhhdCBjb21mb3J0aW5nIG1lc3NhZ2UgY29tZXMgd2l0aCBhIGNhdmVhdCB3aGlsZSBCZWlqaW5nIG1heSB5ZXQgYWdhaW4gaGl0IGl0cyBncm93dGggdGFyZ2V0cyBpdCBkb2VzIG5vdCBoYXZlIG11Y2ggbWFyZ2luIGZvciBlcnJvciBJdCBtdXN0IGtlZXAgdGhlIGVjb25vbXkgb24gYW4gZXZlbiBrZWVsIHdoaWxlIGF0IHRoZSBzYW1lIHRpbWUgcHVzaGluZyByZWZvcm1zIFRoZSBlY29ub215IGlzIGZyYWdpbGUgcmlnaHQgbm93IGFuZCB0aGUgZG93bnNpZGUgcmlzayBjb3VsZCBiZSB2ZXJ5IGJpZyBpZiB0aGVyZSBhcmUgYW55IGV4dGVybmFsIHNob2NrcyBzYWlkIExpIEhlbmcgYW4gZWNvbm9taXN0IGF0IE1pbnNoZW5nIFNlY3VyaXRpZXMgaW4gQmVpamluZyBDaGluYXMgaW50ZW5kZWQgc2hpZnQgZnJvbSB0aHJlZSBkZWNhZGVzIG9mIGRvdWJsZWRpZ2l0IGludmVzdG1lbnQgYW5kIGV4cG9ydGZ1ZWxlZCBncm93dGggdG93YXJkcyBhIHNsb3dlciBidXQgbW9yZSBiYWxhbmNlZCBhbmQgc3VzdGFpbmVkIGV4cGFuc2lvbiBtb3JlIGdlYXJlZCB0byBjb25zdW1wdGlvbiBhbmQgc2VydmljZXMgaGFzIGJlZW4gd2VsbCB0ZWxlZ3JhcGhlZCBZZXQgZXZlcnkgc2V0IG9mIHdlYWsgZGF0YSBqb2x0cyBnbG9iYWwgZmluYW5jaWFsIG1hcmtldHMgZnJvbSBCcmF6aWwgdG8gQXVzdHJhbGlhIGJ5IHJhaXNpbmcgcXVlc3Rpb25zIGFib3V0IHRoZSByaXNrIG9mIGFuIHVuY29udHJvbGxlZCBzbHVtcCBhbmQgdGhlIHRvbGwgaXQgY291bGQgdGFrZSBvbiBlY29ub21pZXMgcmVseWluZyBvbiBDaGluZXNlIGRlbWFuZCBUaGUgbGFzdCBib3V0IG9mIGFuZ3N0IG92ZXIgQ2hpbmFzIG91dGxvb2sgd2FzIHRyaWdnZXJlZCBsYXN0IHdlZWsgYnkgYW4gSFNCQ01hcmtpdCBidXNpbmVzcyBzdXJ2ZXkgdGhhdCBzdWdnZXN0ZWQgbWFudWZhY3R1cmluZyBhY3Rpdml0eSBkaXBwZWQgaW4gSmFudWFyeSBmb3IgdGhlIGZpcnN0IHRpbWUgaW4gc2l4IG1vbnRocyBUaGUgZGF0YSBjb2luY2lkZWQgd2l0aCByZW5ld2VkIHNpZ25zIG9mIHRpZ2h0ZW5pbmcgaW4gQ2hpbmFzIGZpbmFuY2lhbCBtYXJrZXRzIGFuZCB3b3JyaWVzIGEgdHJvdWJsZWQgaW52ZXN0bWVudCBwcm9kdWN0IGNvdWxkIHNldCBvZmYgYSBkZWJ0IHNjYXJlIGZhY3RvcnMgdGhhdCBhZGRlZCB0byB3aWRlciBjb25jZXJucyBhYm91dCBlbWVyZ2luZyBtYXJrZXRzIGFuZCBwcm9tcHRlZCB0aGUgZ2xvYmFsIHNlbGxvZmYgTUFJTlRBSU5JTkcgR1JPV1RIIFRoZSBtYWpvcml0eSB2aWV3IG9mIENoaW5hIGVjb25vbWlzdHMgcG9sbGVkIGJ5IFJldXRlcnMgcmVtYWlucyB0aGF0IEJlaWppbmcgd2lsbCBtYW5hZ2UgdG8gc3VzdGFpbiBlY29ub21pYyBncm93dGggYnJvYWRseSBpbiBsaW5lIHdpdGggYm90aCBsYXN0IHllYXJzIDc1IHBlcmNlbnQgZ3Jvd3RoIHRhcmdldCBhbmQgdGhlIEludGVybmF0aW9uYWwgTW9uZXRhcnkgRnVuZHMgcHJlZGljdGlvbnMgQmVpamluZyBoYXMgeWV0IHRvIG9mZmljaWFsbHkgYW5ub3VuY2UgaXRzIDIwMTQgZ3Jvd3RoIGdvYWwgYW5kIHRoZXJlIGhhcyBiZWVuIHNwZWN1bGF0aW9uIGl0IG1pZ2h0IGRyb3AgdGhlIHByYWN0aWNlIGFsdG9nZXRoZXIgdG8gdW5kZXJzY29yZSB0aGUgaW1wb3J0YW5jZSBvZiBlY29ub21pYyByZWZvcm1zIE1vc3QgcHVuZGl0cyBob3dldmVyIGV4cGVjdCB0aGUgYXV0aG9yaXRpZXMgdG8gcmVhZmZpcm0gdGhlIHRhcmdldCB0byByZWFzc3VyZSBtYXJrZXRzIFRoZXkgZXhwZWN0IENoaW5hIHRvIGFjaGlldmUgdGhhdCBncm93dGggd2hpbGUgdGlja2luZyB0aGUgYm94ZXMgb2YgaXRzIGFtYml0aW91cyByZWZvcm0gYWdlbmRhIHVudmVpbGVkIGxhc3QgTm92ZW1iZXIgd2l0aCB0aGUgY2VudHJhbCBiYW5rIHB1c2hpbmcgdG8gcmVsYXggcmVndWxhdG9yeSBjdXJicyBvbiBpbnRlcmVzdCByYXRlcyBhbmQgdGhlIGN1cnJlbmN5IGFsb25nc2lkZSB0aGUgZ292ZXJubWVudHMgZHJpdmUgdG8gY3V0IHJlZCB0YXBlIGFuZCBvcGVuIHVwIHNlY3RvcnMgZG9taW5hdGVkIGJ5IHN0YXRlIGdpYW50cyB0byBwcml2YXRlIGZpcm1zIFRoZSBjZW50cmFsIGJhbmtzIGNhbXBhaWduIHRvIGN1cmIgcmlza3kgbGVuZGluZyB1bmRlcnNjb3JlcyBCZWlqaW5ncyBncmVhdGVyIHRvbGVyYW5jZSBmb3IgYSBzbG93ZXIgcGFjZSBvZiBncm93dGggYnV0IHBvbGljeW1ha2VycyBhcmUgYXdhcmUgdGhhdCBhbiBhYnJ1cHQgc2xvd2Rvd24gaXRzIHJlc3VsdGluZyBqb2IgbG9zc2VzIGFuZCBiYW5rcnVwdGNpZXMgY291bGQgZGVyYWlsIHJlZm9ybXMgU28gYW5hbHlzdHMgZXhwZWN0IGF1dGhvcml0aWVzIHRvIHByb3ZpZGUgbWVhc3VyZWQgZWNvbm9taWMgc3VwcG9ydCBpZiB0aGV5IHNlZSBzaWducyBvZiBleGNlc3NpdmUgd2Vha25lc3Mgd2hpY2ggbWFueSBhc3N1bWUgd291bGQgYmUgaWYgYW5udWFsIGdyb3d0aCBzbGlwcyBiZWxvdyA3NSBwZXJjZW50IGFuZCB0b3dhcmRzIDcgcGVyY2VudCBJbiB0aGF0IGNhc2UgdGhlIGNlbnRyYWwgYmFuayBjb3VsZCBwdW1wIG1vcmUgbGlxdWlkaXR5IHZpYSBtb25leSBtYXJrZXQgb3BlcmF0aW9ucyBpbnRvIHRoZSBmaW5hbmNpYWwgc3lzdGVtIGFuZCB0aGUgZ292ZXJubWVudCBjb3VsZCBjcmFuayB1cCBidWRnZXQgc3BlbmRpbmcgdGhlIHNvcnQgb2YgbWVhc3VyZXMgdGhhdCB3ZXJlIGVtcGxveWVkIGluIDIwMTMgdG8gc3VwcG9ydCBncm93dGggUmVkdWNpbmcgYmFuayByZXNlcnZlIHJlcXVpcmVtZW50cyBvciBpbnRlcmVzdCByYXRlcyB3b3VsZCBiZSBhIGxhc3QgcmVzb3J0IGFuYWx5c3RzIHNhaWQgVGhlIGF1dGhvcml0aWVzIHdpbGwgdHJlYWQgY2F1dGlvdXNseSBxdWlja2VuaW5nIHJlZm9ybXMgd2hlbiB0aGUgZWNvbm9teSBpcyBvbiBhIHNvdW5kIGZvb3RpbmcgYW5kIHNsb3cgZG93biBhIGJpdCB3aGVuIGRvd253YXJkIHByZXNzdXJlcyBpbmNyZWFzZSBzYWlkIEhlIFlpZmVuZyBzZW5pb3IgZWNvbm9taXN0IGF0IEhvbmd5dWFuIFNlY3VyaXRpZXMgaW4gQmVpamluZyBXaXRoIGRlYnQgcGlsaW5nIHVwICBGaXRjaCBlc3RpbWF0ZXMgZGVidCBmcm9tIGFsbCBzZWN0b3JzIHJlYWNoZWQgMjE4IHBlcmNlbnQgb2YgR0RQIGluIDIwMTMgIHNwZW5kaW5nIGh1bmRyZWRzIG9mIGJpbGxpb25zIG9mIGRvbGxhcnMgdGhlIHdheSBDaGluYSBkaWQgYXQgdGhlIG9uc2V0IG9mIHRoZSBnbG9iYWwgZmluYW5jaWFsIGNyaXNpcyBpcyBubyBsb25nZXIgdmlhYmxlIEJ1dCBsYXN0IHllYXIgQmVpamluZyBzdGlsbCBtYW5hZ2VkIHRvIGVuZ2luZWVyIGEgbWluaXVwdHVybiB3aGVuIGdyb3d0aCBkaXBwZWQgbWlkeWVhciB3aXRoIHN0ZWFsdGh5IHN0aW11bHVzIHNwZW5kaW5nIG9uIHNlbGVjdGVkIGFyZWFzIHN1Y2ggYXMgcmFpbCBuZXR3b3JrcyBvciB1cmJhbiBzZXJ2aWNlcyBaaGFuZyBIYW55YSBhIHJlc2VhcmNoZXIgd2l0aCB0aGUgTmF0aW9uYWwgRGV2ZWxvcG1lbnQgYW5kIFJlZm9ybSBDb21taXNzaW9uIHRoZSB0b3AgZWNvbm9taWMgcGxhbm5lciBzYWlkIENoaW5hIGNvdWxkIGRvIHRoZSBzYW1lIGFnYWluIGlmIG5lY2Vzc2FyeSBhY3RpdmF0aW5nIHByb2plY3RzIHB1dCBvbiBob2xkIHNpbmNlIDIwMTAgV2UgY2Fubm90IHNlZSBzaWducyBvZiBhIHN1ZGRlbiBlY29ub21pYyBzbG93ZG93biBUaGVyZSBhcmUgbWFueSBhcmVhcyB0aGF0IG5lZWQgaW52ZXN0bWVudCBhbmQgZWNvbm9taWMgZ3Jvd3RoIHdpbGwgcmVib3VuZCBpbW1lZGlhdGVseSBpZiB0aGV5IGxvb3NlbiBtb25ldGFyeSBwb2xpY3kgUEVSSU9ESUMgU0NBUkVTIFRoZSBjZW50cmFsIGJhbmsgd2hvc2UgY2FtcGFpZ24gdG8gcmVpbiBpbiBncm93dGggb2Ygcmlza3kgaW52ZXN0bWVudCBwcm9kdWN0cyBsZWQgdG8gc2V2ZXJhbCBjYXNoIGNydW5jaGVzIGluIDIwMTMgaGFzIGFsc28gZGVtb25zdHJhdGVkIHdpbGxpbmduZXNzIHRvIHN0ZXAgaW4gYW5kIHB1bXAgbGlxdWlkaXR5IHRvIHByZXZlbnQgbWFya2V0cyBmcm9tIHNlaXppbmcgdXAgWWV0IGRlc3BpdGUgdGhlIGNvbnNlbnN1cyB0aGF0IHRoZSBhdXRob3JpdGllcyB3aWxsIG5vdCBzdGFuZCBpZGxlIGlmIHRoZSBlY29ub215IHdvYmJsZXMgY29uc2Vuc3VzIGZvcmVjYXN0cyBtYXNrIGRpdmVyZ2VuY2UgaW4gdmlld3MgYWJvdXQgdGhlIG5lYXJ0ZXJtIGltcGFjdCBvZiByZWZvcm1zIFBlc3NpbWlzdHMgZXhwZWN0IGdyb3d0aCB0byBzbG93IHRvIGFyb3VuZCA3IHBlcmNlbnQgb3IgbGVzcyB0aGlzIHllYXIgZnJvbSA3NyBwZXJjZW50IGluIDIwMTMgYmVjYXVzZSBvZiBzaG9ydHRlcm0gcmVmb3JtIHBhaW4gZWZmb3J0cyB0byB0aWdodGVuIGNyZWRpdCBtYXJrZXRzIHRvIGNvdW50ZXIgcmlza3kgbGVuZGluZyBhbmQgYSBwdXNoIHRvIHJlZHVjZSBvdmVyY2FwYWNpdHkgaW4gc2VjdG9ycyBzdWNoIGFzIHN0ZWVsIG9yIG1pbmluZyBPcHRpbWlzdHMgYmV0IGdsb2JhbCByZWNvdmVyeSB0aGUgZWFybHkgYmVuZWZpdHMgb2YgY3V0cyBpbiByZWQgdGFwZSBhbmQgdGhlIG9wZW5pbmcgdXAgb2YgcHJvdGVjdGVkIHNlY3RvcnMgd2lsbCBkcml2ZSBncm93dGggdG8gYXJvdW5kIDggcGVyY2VudCB0aGlzIHllYXIgU3VjaCBhIGRpdmVyZ2VuY2Ugb2Ygdmlld3MgcmFyZSBpbiBwYXN0IHllYXJzIHdoZW4gQmVpamluZ3Mgc2luZ3VsYXIgZm9jdXMgd2FzIG9uIHJhcGlkIGdyb3d0aCB1bmRlcnNjb3JlcyBoZWlnaHRlbmVkIHVuY2VydGFpbnR5IGFuZCByaXNrcyBhcyBCZWlqaW5nIGJsYXplcyBhIHRyYWlsIG9uIHNldmVyYXQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0wMy0yN1QwMDowMDowMFogVE8gMjAxMy0xMi0wM1Q1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTExNTQ3</field><field name="title" class="java.lang.String">rO0ABXQAOlJpc2tzIHRvIENoaW5hIFJlY292ZXJ5IFNlZW4gYXMgRmFjdG9yeSBPdXRwdXQgVW5kZXJ3aGVsbXM=</field><field name="content" class="java.lang.String">rO0ABXQVX0hvd2V2ZXIsIENoaW5hJ3MgYWxyZWFkeS1lYXN5IG1vbmV0YXJ5IHBvbGljeSBhbmQgcmlzaW5nIGhvbWUgcHJpY2VzIGNvbXBsaWNhdGUgdGhlIG9wdGlvbnMgYXZhaWxhYmxlIHRvIEJlaWppbmcncyBuZXcgbGVhZGVyc2hpcCwgbGVhZGluZyBzb21lIGFuYWx5c3RzIHRvIHNheSB0aGF0IGFueSByZXNwb25zZSBjb3VsZCBiZSBsaW1pdGVkIHRvIGZpc2NhbCBtZWFzdXJlcy4gQW5udWFsIGluZHVzdHJpYWwgb3V0cHV0IGdyZXcgOS4zIHBlcmNlbnQgbGFzdCBtb250aCwgYWNjb3JkaW5nIHRvIGRhdGEgcmVsZWFzZWQgYnkgdGhlIE5hdGlvbmFsIEJ1cmVhdSBvZiBTdGF0aXN0aWNzIG9uIE1vbmRheSwgdXAgZnJvbSBhIHNldmVuLW1vbnRoIGxvdyBoaXQgaW4gTWFyY2ggYnV0IHN0aWxsIG1pc3NpbmcgbWFya2V0IGV4cGVjdGF0aW9ucyBmb3IgYSA5LjUgcGVyY2VudCBleHBhbnNpb24uICJFY29ub21pYyBhY3Rpdml0eSByZW1haW5zIHdlYWssIiBzYWlkIExpYW5nIFlvdWNhaSwgYSBzZW5pb3IgZWNvbm9taXN0IGF0IHRoZSBTdGF0ZSBJbmZvcm1hdGlvbiBDZW50cmUsIGEgZ292ZXJubWVudCB0aGluay10YW5rLiAiV2Ugbm93IGV4cGVjdCBzZWNvbmQtcXVhcnRlciBncm9zcyBkb21lc3RpYyBwcm9kdWN0IGdyb3d0aCBvZiBhcm91bmQgNy44LTcuOSBwZXJjZW50IGlmIHRoZXJlIGFyZSBubyBzdGltdWx1cyBtZWFzdXJlcy4iIE1vbmRheSdzIGRhdGEgZGVhbHQgYSBmdXJ0aGVyIGJsb3cgdG8gaW52ZXN0b3JzJyBob3BlcyBmb3IgYSBkZWNpc2l2ZSByZXZpdmFsIG9mIHRoZSB3b3JsZCdzIHNlY29uZC1sYXJnZXN0IGVjb25vbXksIGZvbGxvd2luZyBsYXN0IG1vbnRoJ3MgYW5ub3VuY2VtZW50IHRoYXQgZ3Jvd3RoIHVuZXhwZWN0ZWRseSBjb29sZWQgaW4gdGhlIGZpcnN0IHF1YXJ0ZXIgb2YgdGhlIHllYXIgdG8gNy43IHBlcmNlbnQuIEdyb3d0aCBpbiBmaXhlZC1hc3NldCBpbnZlc3RtZW50LCBhbiBpbXBvcnRhbnQgZHJpdmVyIG9mIENoaW5hJ3MgZWNvbm9teSwgYWxzbyBkaXNhcHBvaW50ZWQgaW4gQXByaWwuIEludmVzdG1lbnQgcm9zZSAyMC42IHBlcmNlbnQgaW4gdGhlIGZpcnN0IGZvdXIgbW9udGhzIGZyb20gdGhlIHNhbWUgcGVyaW9kIGEgeWVhciBhZ28sIGNvbXBhcmVkIHdpdGggZXhwZWN0YXRpb25zIGZvciBhIDIxIHBlcmNlbnQgcmlzZS4gT25seSByZXRhaWwgc2FsZXMgbWV0IG1hcmtldCBleHBlY3RhdGlvbnMsIGdyb3dpbmcgMTIuOCBwZXJjZW50IGluIEFwcmlsIGZyb20gYSB5ZWFyIGFnby4gUE9MSUNZIERJTEVNTUEgRm9yIGludmVzdG9ycywgdGhlIGJpZyBxdWVzdGlvbiBub3cgaXMgd2hldGhlciBDaGluYSdzIGVjb25vbWljIHJlYm91bmQgcmVtYWlucyBpbnRhY3QuIFRoaXMgbW9udGgncyBldmlkZW5jZSB1bmRlcmxpbmVzIEJlaWppbmcncyBncm93aW5nIHBvbGljeSBkaWxlbW1hLCB3aXRoIGVjb25vbWlzdHMgc2F5aW5nIHRoYXQgYSByZWNvdmVyeSDigJQgaWYgYXQgYWxsIOKAlCBpcyBzdGlsbCBmcmFnaWxlLiBEYXRhIGxhc3Qgd2VlayBzaG93ZWQgQ2hpbmEncyBjb25zdW1lciBpbmZsYXRpb24sIGFsdGhvdWdoIG11dGVkLCBxdWlja2VuZWQgbW9yZSB0aGFuIGV4cGVjdGVkIGluIEFwcmlsLCBuYXJyb3dpbmcgdGhlIHNjb3BlIGZvciBCZWlqaW5nIHRvIGZ1cnRoZXIgZWFzZSBtb25ldGFyeSBwb2xpY3kgaWYgZ3Jvd3RoIHN3b29ucy4gV29yc2UsIHN1cnByaXNpbmdseSBzdHJvbmcgdHJhZGUgZmlndXJlcyBsYXN0IHdlZWsgdGhhdCB3ZXJlIGluY29uZ3J1b3VzIHdpdGggc3ViZHVlZCBmb3JlaWduIGRlbWFuZCBzdWdnZXN0ZWQgYSBzdWJzdGFudGlhbCBmbG93IG9mIGhvdCBtb25leSBiZXR0aW5nIG9uIGEgcmlzaW5nIHl1YW4gaXMgc25lYWtpbmcgcGFzdCBDaGluYSdzIGNhcGl0YWwgY29udHJvbHMuIEEgZmxvdyBvZiBzcGVjdWxhdGl2ZSBjYXNoIGludG8gQ2hpbmEgaXMgYSBoZWFkYWNoZSBmb3IgQmVpamluZyBhcyBpdCBtYXkgZnVlbCBhIHJhbGx5IGluIHRoZSBjb3VudHJ5J3MgZnJvdGh5IHByb3BlcnR5IG1hcmtldCwgd2hlcmUgcHJpY2VzIGFyZSBhbHJlYWR5IGF0IGFsbC10aW1lIGhpZ2hzLiAiTW9uZXRhcnkgcG9saWN5IGlzIG5vdyBmYWNpbmcgYSBkaWxlbW1hLCIgc2FpZCBKaWFuZyBDaGFvLCBhbiBhbmFseXN0IGF0IEhhaXRvbmcgU2VjdXJpdGllcyBpbiBTaGFuZ2hhaS4gIk9uIHRoZSBvbmUgaGFuZCwgdGhlIGNlbnRyYWwgYmFuayBjYW5ub3QgY3V0IGludGVyZXN0IHJhdGVzIGZvciBmZWFycyBvZiByZWlnbml0aW5nIHByb3BlcnR5IGluZmxhdGlvbi4gQnV0IG9uIHRoZSBvdGhlciBoYW5kLCBDaGluYSBpcyBzZWVpbmcgbW91bnRpbmcgaG90IG1vbmV5IGluZmxvdyBwcmVzc3VyZXMuIiBTVElNVUxVUz8gQXByaWwncyBmYWN0b3J5IG91dHB1dCBkYXRhIHNob3dlZCBtYWtlcnMgb2YgdHJhbnNwb3J0IGVxdWlwbWVudCBleHBlcmllbmNlZCBvbmUgb2YgdGhlIHNoYXJwZXN0IHNsb3dkb3ducyBsYXN0IG1vbnRoIGNvbXBhcmVkIHdpdGggTWFyY2guIENydWRlIG9pbCBvdXRwdXQgd2FzIGFub3RoZXIgbWFqb3IgZGVjbGluZS4gQ2hpbmEncyBzdGF0ZS1sZWQgaW5mcmFzdHJ1Y3R1cmUgY29uc3RydWN0aW9uIGJvb20gaGFzIGJlZW4gYSBtYWpvciBjb250cmlidXRvciBvZiBncm93dGggc2luY2UgdGhlIDIwMDgvMDkgZmluYW5jaWFsIGNyaXNpcyBhcyBsb2NhbCBnb3Zlcm5tZW50cyBwdW1wLXByaW1lZCB0aGVpciBlY29ub21pZXMuIFlldCB0aGUgc2VjdG9yIGhhcyBzbG93ZWQgaW4gdGhlIHBhc3QgdHdvIHllYXJzIGFmdGVyIHByb2ZsaWdhdGUgc3RhdGUgc3BlbmRpbmcgYWNjdW11bGF0ZWQgYSBwaWxlIG9mIGdvdmVybm1lbnQgZGVidCB3b3J0aCBhcyBtdWNoIGFzIDIwIHRyaWxsaW9uIHl1YW4gKCQzLjI1IHRyaWxsaW9uKSwgbGVhZGluZyBCZWlqaW5nIHRvIG9yZGVyIGJhbmtzIHRvIHJlZHVjZSBmdW5kaW5nIGZvciB0aGUgaW5kdXN0cnkuIEhvd2V2ZXIsIHNvbWUgYW5hbHlzdHMgc2F5IEJlaWppbmcgY291bGQgcmVsYXggY29udHJvbHMgb3ZlciBmaW5hbmNpbmcgb2Ygc3RhdGUgaW5mcmFzdHJ1Y3R1cmUgcHJvamVjdHMgc2hvdWxkIGVjb25vbWljIGdyb3d0aCBzbGFja2VuIGZ1cnRoZXIuIEEgcmVzZWFyY2hlciBhdCBhIHN0YXRlIHRoaW5rLXRhbmsgdG9sZCBSZXV0ZXJzIGxhc3Qgd2VlayB0aGF0IHNvbWUgbG9jYWwgZ292ZXJubWVudHMgYXJlIGFscmVhZHkgbGluaW5nIHVwIGZpbmFuY2luZyBvcHRpb25zIGZvciB0aGVpciBwbGFubmVkIGluZnJhc3RydWN0dXJlIHByb2plY3RzIGluIGNhc2UgdGhleSBnZXQgYSBncmVlbi1saWdodCBmcm9tIEJlaWppbmcuIEhlIGRlY2xpbmVkIHRvIGJlIG5hbWVkIGR1ZSB0byB0aGUgc2Vuc2l0aXZpdHkgb2YgdGhlIG1hdHRlci4gQmVpamluZyBoYXMgc28gZmFyIG9mZmVyZWQgZmV3IGNsdWVzIGFib3V0IGl0cyBwb2xpY3kgcGxhbnMsIHNheWluZyBsaXR0bGUgYmV5b25kIGl0cyBzdG9jayBwaHJhc2Ugb2Yga2VlcGluZyBlY29ub21pYyBncm93dGggInN0YWJsZSIuIFdpdGhpbiB0aGUgZ292ZXJubWVudCwgc3RhdGUgcmVzZWFyY2hlcnMgc2F5IHBvbGljeW1ha2VycyBhcmUgZGViYXRpbmcgb3ZlciB3aGV0aGVyIHRvIGZvY3VzIG9uIHNob3J0LXRlcm0gZGVtYW5kcyBvciBsb25nLXRlcm0gYmVuZWZpdHMuIFRoZXJlIGFyZSBhcmd1bWVudHMgZm9yIEJlaWppbmcgdG8gdGFrZSBhY3Rpb24gYW5kIHN0aW11bGF0ZSBncm93dGggbm93LCBvciBob2xkIG9mZiBhbmQgZm9jdXMgaW5zdGVhZCBvbiByZXN0cnVjdHVyaW5nIHRoZSBlY29ub215IGZvciB0aGUgbG9uZyBoYXVsLiBDaGluYSB3YW50cyB0byBwcm9tb3RlIGNvbnN1bXB0aW9uIGFuZCBjdXQgaXRzIHJlbGlhbmNlIG9uIGludmVzdG1lbnQgYW5kIGV4cG9ydHMsIGEgdHJhbnNpdGlvbiB0aGF0IGNvdWxkIGJlIHBhaW5mdWwgaW4gdGhlIHNob3J0LXRlcm0gYXMgaXQgY29uc3RyYWlucyB0aGUgZ292ZXJubWVudCdzIGFiaWxpdHkgdG8gdW52ZWlsIGFueSBuZXcgbGFyZ2Utc2NhbGUgZmlzY2FsIHN0aW11bHVzLiBUaW5nIEx1LCBhbiBlY29ub21pc3QgYXQgQmFuayBvZiBBbWVyaWNhLU1lcnJpbGwgTHluY2gsIHNhaWQgaGUgZGlkIG5vdCBiZWxpZXZlIEJlaWppbmcgd291bGQgc3VjY3VtYiB0byB0aGUgdGVtcHRhdGlvbiB0byB0cnkgdG8gbGlmdCBlY29ub21pYyBncm93dGggaW4gdGhlIG5lYXIgdGVybS4gIlBvbGljeW1ha2VycyB3aWxsIHJlc2lzdCBpbnRyb2R1Y2luZyBzdGltdWx1cyBtZWFzdXJlcyB1bmxlc3MgZ3Jvd3RoIHNsaWRlcyBtdWNoIGZ1cnRoZXIsIiBMdSBzYWlkLiAiSG93ZXZlciwgd2UgYmVsaWV2ZSB0aGF0IHRoZXNlIG5ldyBwb2xpY3ltYWtlcnMgd2lsbCB0cnkgdG8gYXZvaWQgZGlzcnVwdGluZyBjcmVkaXQgc3VwcGx5LiIgQ3JlZGl0IHN1cHBseSBpbiBDaGluYSBoYXMgcmlzZW4gcmFwaWRseSBpbiByZWNlbnQgbW9udGhzIGFzIGdvdmVybm1lbnRzIGFuZCBjb21wYW5pZXMgc291Z2h0IGZpbmFuY2luZyBvdXRzaWRlIHRoZSB0cmFkaXRpb25hbCBiYW5raW5nIHNlY3RvciBhbWlkIEJlaWppbmcncyBjbGFtcGRvd24gb24gcHJvcGVydHkgYW5kIGluZnJhc3RydWN0dXJlIGludmVzdG1lbnQuIFRoZSB0cmVuZCBleHRlbmRlZCBpbnRvIEFwcmlsLCB3aGVuIE0yIG1vbmV5IHN1cHBseSBncmV3IDE2LjEgcGVyY2VudCwgYWJvdmUgZm9yZWNhc3RzIGZvciBhIDE1LjUgcGVyY2VudCBnYWluLiBDaGluYSdzIGVhc3kgY3JlZGl0IGNvbmRpdGlvbnMsIGNvbWJpbmVkIHdpdGggaXRzIGxhY2tsdXN0ZXIgcmVhbCBlY29ub215LCBoYXMgbGVkIHNvbWUgYW5hbHlzdHMgdG8gd29ycnkgdGhhdCBtb25leSBpcyBiZWluZyB1c2VkIGZvciBmaW5hbmNpYWwgc3BlY3VsYXRpb24gcmF0aGVyIHRoYW4gYWN0dWFsIGludmVzdG1lbnQuIEEgUmV1dGVycyBwb2xsIGxhc3QgbW9udGggc2hvd2VkIGFuYWx5c3RzIGV4cGVjdCBDaGluYSdzIGVjb25vbXkgdG8gZ3JvdyA4IHBlcmNlbnQgdGhpcyB5ZWFyLCB1cCBmcm9tIDcuOCBwZXJjZW50IGluIDIwMTIsIGFsdGhvdWdoIG1hbnkgZWNvbm9taXN0cyBzYXkgdGhlIHJpc2tzIGFyZSBmb3IgZ3Jvd3RoIHRvIGRpc2FwcG9pbnQuIEFuYWx5c3RzIGhhdmUgc3RydWdnbGVkIHRvIHRyYWNrIHRoZSB0dXJucyBpbiBDaGluYSdzIGVjb25vbXkgaW4gdGhlIHBhc3QgeWVhciwgb2Z0ZW4gcHJvdmluZyB0byBiZSB0b28gdXBiZWF0LiBQcmVkaWN0aW9ucyB0aGF0IGEgbWlsZCBlY29ub21pYyByZWNvdmVyeSB3YXMgdW5kZXIgd2F5IHRoaXMgeWVhciBwcm92ZWQgb3Zlcmx5IG9wdGltaXN0aWMgYWZ0ZXIgZ3Jvd3RoIHNwdXR0ZXJlZCBiZXR3ZWVuIEphbnVhcnkgYW5kIE1hcmNoLiBDYWxscyBpbiAyMDEyIGZvciBhIGdyb3d0aCByZWJvdW5kIHdlcmUgYWxzbyBuaW5lIG1vbnRocyB0b28gZWFybHksIG1hdGVyaWFsaXppbmcgb25seSBpbiB0aGUgZm91cnRoIHF1YXJ0ZXIu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6cQnCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGRjYWE3MzgwNTZkZDMzZmU=</field><field name="symbol" class="java.lang.String">rO0ABXQACUhPVC1VTi5UTw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6haMyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAnGZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAnZmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAnGZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAnYUeuFHrh</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAj5mZmZmZm</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAACWAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDg5NjhmZGFiM2QzODE5ZjM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJHLAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDMzODI=</field><field name="title" class="java.lang.String">rO0ABXQAQUNoaW5hIE1heSBUaWdodGVuIENhc2ggU3VwcGx5IGFzIEhvbWUgUHJpY2VzIEZ1ZWwgSW5mbGF0aW9uIEZlYXJz</field><field name="content" class="java.lang.String">rO0ABXQVB0EgcG9saWN5IGFkdmlzZXIgdG8gdGhlIFBlb3BsZSdzIEJhbmsgb2YgQ2hpbmEgdG9sZCBSZXV0ZXJzIHRoZSBhdXRob3JpdHkgbWF5IHRpZ2h0ZW4gY2FzaCBjb25kaXRpb25zIGluIHRoZSBmaW5hbmNpYWwgc3lzdGVtIHRvIGFkZHJlc3MgdGhlIGluZmxhdGlvbiByaXNrcywgd2hpbGUgdGhlIGNlbnRyYWwgYmFuayByZWZyYWluZWQgZnJvbSBzdXBwbHlpbmcgY2FzaCB0byBtb25leSBtYXJrZXRzIGZvciB0aGUgc2Vjb25kIGRheSBydW5uaW5nLiBJZiBpdCBhbHNvIGF2b2lkcyBpbmplY3RpbmcgY2FzaCBhdCBpdHMgbmV4dCBtb25leSBtYXJrZXQgb3BlcmF0aW9uIG9uIFRodXJzZGF5LCB0aGUgZWZmZWN0IHdpbGwgYmUgYSBuZXQgd2Vla2x5IGRyYWluIG9mIDU4IGJpbGxpb24geXVhbiDigJQgdGhlIHNlY29uZCBiaWdnZXN0IHNpbmNlIEZlYnJ1YXJ5LiAiKFBvbGljeSkgd2lsbCBvbmx5IGJlIHRpZ2h0ZW5lZCBzbGlnaHRseSBhcyBpbmZsYXRpb24gaXMgcmlzaW5nLiBUaGVyZSBhcmUgc29tZSBjb25jZXJucyBvbiBiYW5rIGxlbmRpbmcsIiBzYWlkIFNvbmcgR3VvcWluZywgYW4gYWNhZGVtaWMgbWVtYmVyIG9mIHRoZSBjZW50cmFsIGJhbmsncyBtb25ldGFyeSBwb2xpY3kgY29tbWl0dGVlLiAiUG9saWN5IGZpbmUtdHVuaW5nIHdpbGwgcmVseSBtYWlubHkgb24gb3BlbiBtYXJrZXQgb3BlcmF0aW9ucyBhbmQgSSBjYW5ub3Qgc2VlIGFueSBwb3NzaWJpbGl0eSBvZiBjaGFuZ2luZyBpbnRlcmVzdCByYXRlcyBvciBiYW5rIHJlc2VydmUgcmF0aW9zLiIgU29uZydzIGNvbW1lbnRzIGFuZCB0aGUgc2hhcnAgcmlzZSBpbiBob3VzZSBwcmljZXMgaGlnaGxpZ2h0IEJlaWppbmcncyBwb2xpY3kgcXVhbmRhcnkuIE9uIHRoZSBvbmUgaGFuZCwgcG9saWN5bWFrZXJzIHdhbnQgdG8gYXZvaWQgYSBidWlsZHVwIG9mIG1hcmtldCBhbmQgZWNvbm9taWMgaW1iYWxhbmNlcywgc3VjaCBhcyBhIGRlYnQtZnVlbGVkIHByb3BlcnR5IGJ1YmJsZS4gT24gdGhlIG90aGVyIGhhbmQsIHRoZXkgYXJlIHJlbHVjdGFudCB0byB1c2UgbW9yZSBwb3RlbnQgaW5zdHJ1bWVudHMgdG8gY29udHJvbCB0aGUgaW1iYWxhbmNlcyBpbiBjYXNlIHRoZXkgYWxzbyBibHVudCBhIG1vZGVzdCBlY29ub21pYyByZWNvdmVyeSBhaGVhZCBvZiBhIGNydWNpYWwgcG9saWN5IG1lZXRpbmcgbmV4dCBtb250aC4gQ2hpbmEncyBob3VzZSBwcmljZXMgaW4gU2VwdGVtYmVyIHJvc2UgOS4xIHBlcmNlbnQgZnJvbSBhIHllYXIgZWFybGllciwgdGhlIHNoYXJwZXN0IHJpc2Ugc2luY2UgSmFudWFyeSAyMDExLCBjYWxjdWxhdGlvbnMgb2Ygb2ZmaWNpYWwgZGF0YSBieSBSZXV0ZXJzIHNob3dzLiBUaGUgQ1NJMzAwIG9mIGxlYWRpbmcgU2hhbmdoYWkgYW5kIFNoZW56aGVuIEEtc2hhcmUgbGlzdGluZ3MgZmVsbCAxIHBlcmNlbnQgYXMgaW52ZXN0b3JzIGJyYWNlZCBmb3IgcG9zc2libGUgbWVhc3VyZXMgdG8gY2FsbSB0aGUgcHJvcGVydHkgbWFya2V0LiBTb25nIHNhaWQgY29uc3VtZXIgaW5mbGF0aW9uIHJhdGhlciB0aGFuIHByb3BlcnR5IHByaWNlcyBzZXJ2ZWQgYXMgdGhlIGNlbnRyYWwgYmFuaydzIGtleSBwb2xpY3kgc2lnbnBvc3QuIE1vbmV5IG1hcmtldCB0cmFkZXJzIHNhaWQgdGhleSB3b3VsZCB3YWl0IHVudGlsIFRodXJzZGF5J3MgbW9uZXkgbWFya2V0IG9wZXJhdGlvbiB0byBjb25jbHVkZSB3aGV0aGVyIHRoZSBjZW50cmFsIGJhbmsgd2FzIHRyeWluZyB0byBzZW5kIGEgcG9saWN5IHNpZ25hbCBnaXZlbiB0aGF0IHNob3J0LXRlcm0gcmF0ZXMgaGF2ZSBmYWxsZW4gc2hhcnBseSBzaW5jZSB0aGUgZW5kIG9mIHRoZSB0aGlyZCBxdWFydGVyLiBUaGUgd2VpZ2h0ZWQtYXZlcmFnZSBiZW5jaG1hcmsgc2V2ZW4tZGF5IHJlcG8gcmF0ZSAgaGFzIGRyb3BwZWQgbmVhcmx5IGEgZnVsbCBwZXJjZW50YWdlIHBvaW50IG92ZXIgdGhlIGxhc3QgZWlnaHQgdHJhZGluZyBzZXNzaW9ucy4gVHJhZGVycyBhbmQgZWNvbm9taXN0cyBiZWxpZXZlIGN1cnJlbnQgYW1wbGUgZnVuZGluZyBjb25kaXRpb25zIGluIHRoZSBmaW5hbmNpYWwgc3lzdGVtIHJlZmxlY3QgaW4gcGFydCBvZmZpY2lhbCBlZmZvcnRzIHRvIHByb3AgdXAgZWNvbm9taWMgZ3Jvd3RoIGFuZCBhbiBlZmZvcnQgYnkgdGhlIGNlbnRyYWwgYmFuayB0byBtYWtlIGFtZW5kcyBhZnRlciBpdCBlbmdpbmVlcmVkIGEgY3JlZGl0IGNydW5jaCBpbiB0aGUgaW50ZXJiYW5rIG1hcmtldCBpbiBsYXRlIEp1bmUuIFRoYXQgbW92ZSB3YXMgd2lkZWx5IHNlZW4gYXMgYSB3YXJuaW5nIHRvIGJhbmtzIHRvIHJlaW4gaW4gcmlza2llciBsZW5kaW5nLCBidXQgdGhlIGNlbnRyYWwgYmFuayBhcHBlYXJlZCB0byBoYXZlIGJlZW4gYWRtb25pc2hlZCBieSB0aGUgY2VudHJhbCBnb3Zlcm5tZW50IGZvciB0aGUgb3BhcXVlIHdheSBpbiB3aGljaCB0aGUgY2FzaCBzcXVlZXplIHdhcyBtYW5hZ2VkLiBOb3csIGhvd2V2ZXIsIGVjb25vbWlzdHMgYmVsaWV2ZSB0aGUgUEJPQyBtYXkgaGF2ZSBnb25lIHRvbyBmYXIgaW4gdGhlIG90aGVyIGRpcmVjdGlvbi4gU09MVVRJT05TIENoaW5hJ3MgZWNvbm9teSBncmV3IGF0IGl0cyBmYXN0ZXN0IGNsaXAgdGhpcyB5ZWFyIGluIHRoZSB0aGlyZCBxdWFydGVyIGZ1ZWxlZCBsYXJnZWx5IGJ5IGludmVzdG1lbnQsIGJ1dCBzaWducyBhcmUgZW1lcmdpbmcgdGhhdCByZXN1cmdlbnQgY3JlZGl0IGdyb3d0aCBtaWdodCBkcml2ZSB1cCBpbmZsYXRpb24gZXZlbiBhcyB0aGUgcmVjb3ZlcnkgcnVucyBpbnRvIGZyZXNoIGhlYWR3aW5kcy4gQ29uc3VtZXIgcHJpY2UgaW5mbGF0aW9uIHJvc2UgdG8gYSBzZXZlbi1tb250aCBoaWdoIG9mIDMuMSBwZXJjZW50IGluIFNlcHRlbWJlciBmcm9tIDIuNiBwZXJjZW50IGluIEF1Z3VzdCwgZGF0YSBzaG93ZWQgbGFzdCB3ZWVrLiBUdWVzZGF5J3MgaG91c2UgcHJpY2UgZGF0YSBmcm9tIDcwIG1ham9yIENoaW5lc2UgY2l0aWVzIG9mZmVyZWQgbW9yZSBldmlkZW5jZSBvZiBwcmljZSBwcmVzc3VyZXMuIFNvbmcsIGhvd2V2ZXIsIHNhdyBsaXR0bGUgcmlzayBvZiBpbmZsYXRpb24gZ2V0dGluZyBvdXQgb2YgaGFuZCBnaXZlbiBzdGVhZHkgZGVtYW5kIGFuZCBsaW1pdGVkIHBvdGVudGlhbCBmb3IgYSBwaWNrIHVwIGluIGVjb25vbWljIGV4cGFuc2lvbiBhcyBCZWlqaW5nIHRyaWVzIHRvIGdlYXIgdGhlIGNvdW50cnkgbW9yZSB0byBjb25zdW1lci1sZWQgZ3Jvd3RoLiBUaGUgYWR2aXNlciBwcmVkaWN0ZWQgcG9saWN5IGZpbmUtdHVuaW5nIHdvdWxkIGJlIHN1ZmZpY2llbnQgdG8gc3RhYmlsaXplIGluZmxhdGlvbiBhdCB0aGUgY3VycmVudCBsZXZlbCBpbiB0aGUgZm91cnRoIHF1YXJ0ZXIgYW5kIHNvIGtlZXAgdGhlIGZ1bGwteWVhciByYXRlIGNvbWZvcnRhYmx5IGJlbG93IHRoZSBnb3Zlcm5tZW50IHRhcmdldCBvZiAzLjUgcGVyY2VudC4gRWNvbm9taWMgZ3Jvd3RoIGNvdWxkIGVhc2UgdG8gNy41IHBlcmNlbnQgaW4gdGhlIGZvdXJ0aCBxdWFydGVyIGZyb20gNy44IHBlcmNlbnQgaW4gdGhlIHRoaXJkIHF1YXJ0ZXIsIGhlIHNhaWQuIEJ1dCBmdWxsLXllYXIgZ3Jvd3RoIGNvdWxkIHN0aWxsIGNvbWUgaW4gYXQgNy42IHBlcmNlbnQsIGp1c3QgYWJvdmUgQmVpamluZydzIDcuNSBwZXJjZW50IHRhcmdldCwgaGUgYWRkZWQuICJBIHNsb3dkb3duIGluIGdyb3d0aCBpbiB0aGUgZm91cnRoIHF1YXJ0ZXIgd291bGQgcHJvYmFibHkgcmVhd2FrZW4gZmVhcnMgb2YgYSBoYXJkIGxhbmRpbmcgYnV0IHdlIHdvdWxkIHdlbGNvbWUgaXQsIiB3cm90ZSBNYXJrIFdpbGxpYW1zIGFuZCBKdWxpYW4gRXZhbnMtUHJpdGNoYXJkIG9mIENhcGl0YWwgRWNvbm9taWNzIGluIGEgcmVzZWFyY2ggbm90ZS4gIkEgcHJvbG9uZ2VkIHN1cmdlIGluIGNyZWRpdC1mdWVsZWQgaW52ZXN0bWVudCBpcyB0aGUgbGFzdCB0aGluZyBDaGluYSBub3cgbmVlZHMuIiBDaGluZXNlIGJhbmtzIG1hZGUgNzg3IGJpbGxpb24geXVhbiAoJDEyOSBiaWxsaW9uKSBvZiBuZXcgeXVhbiBsb2FucyBpbiBTZXB0ZW1iZXIsIGhpZ2hlciB0aGFuIGEgZm9yZWNhc3Qgb2YgNjUwIGJpbGxpb24geXVhbiBhbmQgbW9yZSB0aGFuIEF1Z3VzdCdzIDcxMS4zIGJpbGxpb24geXVhbiwgY2VudHJhbCBiYW5rIGRhdGEgc2hvd2VkLiBBdCB0aGUgc2FtZSB0aW1lLCB5dWFuIGhhcyBwb3VyZWQgaW50byB0aGUgZWNvbm9teSBhcyBhIHNpZGUgZWZmZWN0IG9mIG1hc3NpdmUgaW50ZXJ2ZW50aW9uIGJ5IHRoZSBjZW50cmFsIGJhbmsgaW50ZW5kZWQgdG8gY3VyYiB0aGUgc3RyZW5ndGggb2YgYSBsb25nLXJ1bm5pbmcgcmFsbHkgaW4gdGhlIGxvY2FsIGN1cnJlbmN5LiBXaXRoIHRoZSBjZW50cmFsIGJhbmsgc2VlbiBhcyByZWx1Y3RhbnQgdG8gdXNlIGludGVyZXN0IHJhdGVzIHRvIHJlaW4gaW4gcHJvcGVydHkgcHJpY2VzLCBtYXJrZXRzIHdpbGwgc2hpZnQgdGhlaXIgZm9jdXMgdG8gdGhlIHJ1bGluZyBDb21tdW5pc3QgUGFydHkncyBrZXkgcG9saWN5IG1lZXRpbmcgaW4gTm92ZW1iZXIsIHdoZW4gdGhlIGxlYWRlcnMgYXJlIGV4cGVjdGVkIHRvIG1hcCBvdXQgaG93IHRvIHNoYXBlIHRoZSBlY29ub215IGluIHRoZSBjb21pbmcgZGVjYWRlLiAiV2l0aCB0aGUgaXNzdWUgaW4gdGhlIHByb3BlcnR5IG1hcmtldCBiZWNvbWluZyBtb3JlIGFuZCBtb3JlIHNldmVyZSwgdGhlIHRoaXJkIHBsZW51bSBuZXh0IG1vbnRoIHNob3VsZCB0b3VjaCB1cG9uIHRoZSBwcm9ibGVtLCIgc2FpZCBXYW5nIEp1biwgYSByZXNlYXJjaGVyIGF0IHRoZSBDaGluYSBDZW50ZXIgZm9yIEludGVybmF0aW9uYWwgRWNvbm9taWMgRXhjaGFuZ2VzIChDQ0lFRSksIGEgZ292ZXJubWVudCB0aGluay10YW5rLiBTZWN1cmluZyBtb3JlIGxhbmQgZm9yIGRldmVsb3BtZW50IHRvIGNvb2wgdGhlIHJlZC1ob3QgbWFya2V0IGlzIG9uZSBvcHRpb24gdW5kZXIgZGViYXRlLiBBbm90aGVyIGlzIHRvIHVzZSBwcm9wZXJ0eSB0YXhlcyB0byByZWluIGluIGRlbWFuZC4gV2hhdCBjb21wbGljYXRlcyB0aGUgcG9saWN5IHJlc3BvbnNlIGlzIGEgZGl2ZXJnZW5jZSBpbiBob3VzZSBwcmljZSBpbmZsYXRpb24gYmV0d2VlbiBiaWcgYW5kIHNtYWxsIGNlbnRlcnMuIFRoZSBmaWd1cmVzIGZyb20gdGhlIE5hdGlvbmFsIEJ1cmVhdSBvZiBTdGF0aXN0aWNzIHNob3dlZCBob3VzZSBwcmljZXMgaW4gdGhlIGNvdW50cnkncyBsYXJnZXN0IGNpdGllcyBjb250aW51ZWQgdG8gcmlzZSBtdWNoIGZhc3RlciB0aGFuIHRoZSBuYXRpb25hbCBhdmVyYWdlLiBUaGV5IHdlcmUgdXAgMTYgcGVyY2VudCBpbiBCZWlqaW5nLCAxNyBwZXJjZW50IGluIFNoYW5naGFpIGFuZCBhYm91dCAyMCBwZXJjZW50IGluIHRoZSBzb3V0aGVybiBjaXRpZXMgb2YgR3Vhbmd6aG91IGFuZCBTaGVuemhlbi4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUHeiKiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGFhZTg1NTlkMjVkMDIzMGQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABUZVTExM</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUHjrwSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5ZmZmZmZm</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5ZmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5Qo9cKPXD</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5XrhR64Uf</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA2+FHrhR64</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAFFA==</field><field name="id" class="java.lang.String">rO0ABXQAEDA3Y2U5YjEzNjg1MTI2ZTg=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mF7IAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDYyOTQ=</field><field name="title" class="java.lang.String">rO0ABXQAQEFzaWEncyAnTWlyYWNsZScgU2hvd3MgU2lnbnMgb2YgV2VhciBhcyBJbnZlc3RvcnMgTXVsbCBFbmQgb2YgUUU=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUCaGASAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGRmNWViNWU0MWYxZDk1YWE=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0NQSU4uSks=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUCfPmCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECsIAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECtfgAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECrJgAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECstgAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECsXFHrhR64</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAKrC2A==</field><field name="id" class="java.lang.String">rO0ABXQAEGM4MzUzOTM1OGIwMjVlNzQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFB6AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQ5ODE=</field><field name="title" class="java.lang.String">rO0ABXQAPENyZWRpdC1Ecml2ZW4gQ2hpbmEgR2x1dCBUaHJlYXRlbnMgdG8gU3BhcmsgQmFuayBEZWJ0IENyaXNpcw==</field><field name="content" class="java.lang.String">rO0ABXREeFJvd3Mgb2YgZGlsYXBpZGF0ZWQgZml2ZS1zdG9yeSBkb3JtaXRvcmllcyBpbiB0aGUgY2l0eSBvZiBOYW50b25nLCBwcmV2aW91c2x5IGhvdXNpbmcgQ2hpbmEgUm9uZ3NoZW5nIEhlYXZ5IEluZHVzdHJpZXMgR3JvdXAgSG9sZGluZ3MgTHRkLuKAmXMgMzgsMDAwIGVtcGxveWVlcywgd2VyZSBhYmFuZG9uZWQgYWZ0ZXIgdGhlIHNoaXBidWlsZGVyIHRlZXRlcmluZyBvbiBjb2xsYXBzZSBjdXQgYWxtb3N0IDgwIHBlcmNlbnQgb2YgaXRzIHdvcmtlcnMgb3ZlciB0aGUgcGFzdCB0d28geWVhcnMuIE1vc3QgdmlkZW8gYXJjYWRlcywgcmVzdGF1cmFudHMgYW5kIHNob3BzIHNlcnZpbmcgdGhlbSBoYXZlIGNsb3NlZC4gQSAkNi42IHRyaWxsaW9uIGNyZWRpdCBiaW5nZSBkdXJpbmcgdGhlIHBhc3QgZml2ZSB5ZWFycywgZW5jb3VyYWdlZCBieSBCZWlqaW5nIHBvbGljeSBtYWtlcnMgYXMgc3RpbXVsdXMgdG8gY29tYmF0IGEgZ2xvYmFsIGVjb25vbWljIHNsb3dkb3duLCBub3cgdGhyZWF0ZW5zIHRvIHN0b2tlIGEgZGVidCBjcmlzaXMuIEF0IHN0YWtlIGFyZSB0cmlsbGlvbnMgb2YgeXVhbiBpbiBiYW5rIGxvYW5zIHRoYXQgY29tcGFuaWVzIHByb2R1Y2luZyBldmVyeXRoaW5nIGZyb20gc2hpcHMgdG8gc3RlZWwgdG8gc29sYXIgcG93ZXIgYXJlIHN0cnVnZ2xpbmcgdG8gcmVwYXkgYXMgdGhlIHdvcmxk4oCZcyBzZWNvbmQtbGFyZ2VzdCBlY29ub215IGhlYWRzIGZvciB0aGUgd2Vha2VzdCBhbm51YWwgZXhwYW5zaW9uIHNpbmNlIDE5OTkuIFJvbmdzaGVuZywgd2hpY2ggaXMgc2Vla2luZyBhIGdvdmVybm1lbnQgYmFpbG91dCBhZnRlciBhY2N1bXVsYXRpbmcgMjUgYmlsbGlvbiB5dWFuICgkNC4xIGJpbGxpb24pIGluIHVucGFpZCBsb2FucyBhcyBvZiBKdW5lLCBpbmNsdWRpbmcgdG8gQmFuayBvZiBDaGluYSBMdGQuLCBpcyBhIGNhc3VhbHR5IG9mIG92ZXItIGludmVzdG1lbnQgZ29uZSBidXN0LiBJbiBOYW50b25nLCB0aGUgb25seSByZW1haW5pbmcgbWFya2V0IGlzIHNlbGxpbmcgcGFzdC1pdHMtc2hlbGYtbGlmZSBicmVhZCwgd29vbGx5IHNob2UgcGFkcyBhbmQgb3RoZXIgZHVzdHkgaXRlbXMgYXQgYSBkaXNjb3VudCBhcyBzaG9wa2VlcGVyIFFpdSBBaWJpbmcgcHJlcGFyZXMgdG8gd2luZCBkb3duIGJlZm9yZSB3aW50ZXIuIFRoZXJl4oCZcyBubyBzaWduIG9mIGEgc2luZ2xlIGN1c3RvbWVyLiDigJxBZnRlciBJ4oCZbSBkb25lIHNlbGxpbmcgYWxsIHRoaXMgc3R1ZmYsIEnigJlsbCBiZSBnb25lLOKAnSBzYWlkIFFpdSwgYnJpZWZseSBsaWZ0aW5nIGhpcyBleWVzIGZyb20gYSBUViBhbmQgY2FzdGluZyBhIGNhcmVsZXNzIGxvb2sgYXQgdGhlIGhhbGYtZW1wdHkgc2hlbHZlcy4g4oCcVGhlIHdvcmtlcnMgZGlkbuKAmXQgaGF2ZSBtb25leSB0byBzcGVuZCBhbnl3YXkgYmVjYXVzZSB0aGVyZeKAmXMgbm8gd29yayB0byBiZSBkb25lLCBhbmQgbWFueSBvZiB0aGVtIGhhdmVu4oCZdCBiZWVuIHBhaWQgZm9yIG1vbnRocy7igJ0gQmFkIExvYW5zIENoaW5h4oCZcyBiaWdnZXN0IGJhbmtzIGFyZSBhbHJlYWR5IGFmZmVjdGVkLCB0cmlwbGluZyB0aGUgYW1vdW50IG9mIGJhZCBsb2FucyB0aGV5IHdyb3RlIG9mZiBpbiB0aGUgZmlyc3QgaGFsZiBvZiB0aGlzIHllYXIgYW5kIGNsZWFuaW5nIHVwIHRoZWlyIGJvb2tzIGFoZWFkIG9mIHdoYXQgbWF5IGJlIGEgZnJlc2ggd2F2ZSBvZiBkZWZhdWx0cy4gSW5kdXN0cmlhbCAmIENvbW1lcmNpYWwgQmFuayBvZiBDaGluYSBMdGQuIGFuZCBpdHMgZm91ciBsYXJnZXN0IGNvbXBldGl0b3JzIGV4cHVuZ2VkIDIyLjEgYmlsbGlvbiB5dWFuIG9mIGRlYnQgdGhhdCBjb3VsZG7igJl0IGJlIGNvbGxlY3RlZCB0aHJvdWdoIEp1bmUsIHVwIGZyb20gNy42NSBiaWxsaW9uIHl1YW4gYSB5ZWFyIGVhcmxpZXIsIHJlZ3VsYXRvcnkgZmlsaW5ncyBzaG93LiDigJxJbiB0aGUgbmV4dCB0aHJlZSB0byBmb3VyIHllYXJzLCBpbmR1c3RyaWVzIHdpdGggZXhjZXNzIGNhcGFjaXR5IHdpbGwgYmUgdGhlIG1haW4gc291cmNlIG9mIGNyZWRpdCBsb3NzIGZvciBiYW5rcyBhbmQgdGhlaXIgbm9ucGVyZm9ybWluZyBsb2FucyBhcyBDaGluYSBjbGVhbnMgdXAgdGhlIGxlZ2FjeSzigJ0gc2FpZCBMaWFvIFFpYW5nLCBhIEJlaWppbmctYmFzZWQgZGlyZWN0b3IgYXQgU3RhbmRhcmQgJiBQb29y4oCZcy4g4oCcVGhlIHNwZWVkIG9mIHRoZSBwcm9jZXNzIHdpbGwgZGVwZW5kIG9uIHRoZSBnb3Zlcm5tZW504oCZcyBkZXRlcm1pbmF0aW9uIGFuZCB3aGV0aGVyIHRoZXkgYXJlIHdpbGxpbmcgdG8gaW5jdXIgc2hvcnQtdGVybSBwYWluIGZvciBsb25nLXRlcm0gZ2Fpbi7igJ0g4oCYVmVyeSBQYWluZnVs4oCZIFByZW1pZXIgTGkgS2VxaWFuZywgd2hvIHRvb2sgb2ZmaWNlIGluIE1hcmNoLCBwbGVkZ2VkIHRvIG9wZW4gdGhlIGVjb25vbXkgdG8gbWFya2V0IGZvcmNlcyBhbmQgc3RyaXAgcG93ZXIgZnJvbSB0aGUgZ292ZXJubWVudCBpbiBhIHByb2Nlc3MgaGUgZGVzY3JpYmVkIGFzIOKAnHZlcnkgcGFpbmZ1bCBhbmQgZXZlbiBmZWVscyBsaWtlIGN1dHRpbmcgb25l4oCZcyB3cmlzdC7igJ0gSW4gSnVseSwgaGUgdm93ZWQgdG8gY3VyYiBvdmVyY2FwYWNpdHksIHdoaWNoIHRoZSBnb3Zlcm5tZW50IGJsYW1lcyBmb3IgZHJpdmluZyBkb3duIHByaWNlcywgZXJvZGluZyBwcm9maXRzIGFuZCBnZW5lcmF0aW5nIHBvbGx1dGlvbi4gUG9saWN5IG1ha2VycyBtZWV0aW5nIGluIEJlaWppbmcgbGFzdCB3ZWVrIHNhaWQgdGhleSB3b3VsZCBlbGV2YXRlIHRoZSByb2xlIG9mIG1hcmtldHMgaW4gdGhlIG5hdGlvbuKAmXMgZWNvbm9teS4gQ2hpbmHigJlzIGVjb25vbXkgcHJvYmFibHkgd2lsbCBleHBhbmQgNy42IHBlcmNlbnQgaW4gMjAxMywgdGhlIHdlYWtlc3QgcGFjZSBzaW5jZSAxOTk5LCBldmVuIGFzIGdyb3d0aCByZWJvdW5kZWQgaW4gdGhlIHRoaXJkIHF1YXJ0ZXIsIGFjY29yZGluZyB0byB0aGUgbWVkaWFuIGVzdGltYXRlIG9mIGVjb25vbWlzdHMgc3VydmV5ZWQgYnkgQmxvb21iZXJnIE5ld3MuIFNoYW5nIEZ1bGluLCBDaGluYeKAmXMgdG9wIGJhbmtpbmcgcmVndWxhdG9yLCB0aGlzIG1vbnRoIHVyZ2VkIGxlbmRlcnMgdG8g4oCcc2VlayBjaGFubmVscyB0byBjbGVhbiB1cCBiYWQgbG9hbnMgYnkgaW5kdXN0cmllcyB3aXRoIG92ZXJjYXBhY2l0eSB0byBwcmV2ZW50IG5ldyByaXNrcyBmcm9tIGJyZXdpbmfigJ0gYW5kIHJlZnJhaW4gZnJvbSBkcmFnZ2luZyB0aGVpciBmZWV0IGluIGRlYWxpbmcgd2l0aCB0aGUgaXNzdWUuIENyZWRpdCBEZXRlcmlvcmF0aW9uIENoaW5h4oCZcyBjcmVkaXQgcXVhbGl0eSBzdGFydGVkIHRvIGRldGVyaW9yYXRlIGluIGxhdGUgMjAxMSBhcyBib3Jyb3dlcnMgdG9vayBvbiBtb3JlIGRlYnQgdG8gc2VydmUgdGhlaXIgb2JsaWdhdGlvbnMgYW1pZCBhIHNsb3dpbmcgZWNvbm9teSBhbmQgd2Vha2VyIGluY29tZS4gSW50ZXJlc3Qgb3dlZCBieSBib3Jyb3dlcnMgcm9zZSB0byBhbiBlc3RpbWF0ZWQgMTIuNSBwZXJjZW50IG9mIENoaW5h4oCZcyBlY29ub215IGZyb20gNyBwZXJjZW50IGluIDIwMDgsIEZpdGNoIFJhdGluZ3MgZXN0aW1hdGVkIGluIFNlcHRlbWJlci4gQnkgdGhlIGVuZCBvZiAyMDE3LCBpdCBtYXkgY2xpbWIgdG8gYXMgbXVjaCBhcyAyMiBwZXJjZW50IGFuZCDigJx1bHRpbWF0ZWx5IG92ZXJ3aGVsbSBib3Jyb3dlcnMu4oCdIE1lYW53aGlsZSwgQ2hpbmHigJlzIHRvdGFsIGNyZWRpdCB3aWxsIGJlIHB1c2hlZCB0byBhbG1vc3QgMjUwIHBlcmNlbnQgb2YgZ3Jvc3MgZG9tZXN0aWMgcHJvZHVjdCBieSB0aGVuLCBhbG1vc3QgZG91YmxlIHRoZSAxMzAgcGVyY2VudCBvZiAyMDA4LCBhY2NvcmRpbmcgdG8gRml0Y2guIFRoZSBuYXRpb24gbWlnaHQgZmFjZSBjcmVkaXQgbG9zc2VzIG9mIGFzIG11Y2ggYXMgJDMgdHJpbGxpb24gYXMgZGVmYXVsdHMgZW5zdWUgZnJvbSB0aGUgZXhwYW5zaW9uIG9mIHRoZSBwYXN0IGZvdXIgeWVhcnMsIHBhcnRpY3VsYXJseSBieSBub24tYmFuayBsZW5kZXJzIHN1Y2ggYXMgdHJ1c3RzLCBleGNlZWRpbmcgdGhhdCBzZWVuIHByaW9yIHRvIG90aGVyIGNyZWRpdCBjcmlzZXMsIEdvbGRtYW4gU2FjaHMgR3JvdXAgSW5jLiBlc3RpbWF0ZWQgaW4gQXVndXN0LiBSb25nc2hlbmcsIHdob3NlIGFzc2V0cyBqdW1wZWQgc2V2ZW5mb2xkIGJldHdlZW4gMjAwNyBhbmQgMjAxMiB3aGVuIGdvdmVybm1lbnQtZGlyZWN0ZWQgbGVuZGluZyBsZWQgdG8gYSBzaGlwYnVpbGRpbmcgYm9vbSwgYWxzbyBoYXMgbG9hbnMgb3V0c3RhbmRpbmcgdG8gRXhwb3J0LUltcG9ydCBCYW5rIG9mIENoaW5hIGFuZCBDaGluYSBEZXZlbG9wbWVudCBCYW5rIENvcnAuLCBzdGF0ZS1vd25lZCBwb2xpY3kgYmFua3Mgc2V0IHVwIHRvIHByb3ZpZGUgZmluYW5jaWFsIHN1cHBvcnQgYXQgYSBjaGVhcGVyIGNvc3QgdG8gY29tcGFuaWVzIGFuZCBpbmR1c3RyaWVzIGVuZG9yc2VkIGJ5IHRoZSBnb3Zlcm5tZW50LiBSb25nc2hlbmcgbWF5IHBvc3QgYSBzZWNvbmQgY29uc2VjdXRpdmUgbG9zcyBvZiAyIGJpbGxpb24geXVhbiB0aGlzIHllYXIgYW5kIGEgMS4xIGJpbGxpb24geXVhbiBsb3NzIGluIDIwMTQsIGFjY29yZGluZyB0byBhIG1lZGlhbiBlc3RpbWF0ZSBvZiBhbmFseXN0cyBpbiBhIEJsb29tYmVyZyBzdXJ2ZXkuIERlbGF5ZWQgU2FsYXJpZXMgUm9uZ3NoZW5nIG5vdyByZWxpZXMgb24gaXRzIHJlbWFpbmluZyA4LDAwMCB3b3JrZXJzIHRvIGJ1aWxkIHRoZSB3b3JsZOKAmXMgYmlnZ2VzdCBjYXJnbyBzaGlwcyBmb3IgQnJhemls4oCZcyBpcm9uLW9yZSBwcm9kdWNlciBWYWxlIFNBIGFuZCBPbWFuIFNoaXBwaW5nIENvLiwgYXMgd2VsbCBhcyBzbWFsbGVyIHZlc3NlbHMgYW5kIG9pbCB0YW5rZXJzLiBXb3JrZXJzIGluIGl0cyBzaGlweWFyZHMsIG1vc3RseSBmcm9tIG90aGVyIHBhcnRzIG9mIENoaW5hLCBhbmQgbG9jYWwgc3RhZmYgaW4gaXRzIFNoYW5naGFpIG9mZmljZSBoYXZlIGhhZCB0aGVpciBzYWxhcmllcyBkZWxheWVkLCBzb21ldGltZXMgYnkgdHdvIG1vbnRocywgYSBwZXJzb24gd2l0aCBrbm93bGVkZ2Ugb2YgdGhlIG1hdHRlciBzYWlkLiDigJxJIGNhbiBzdGlsbCBtYW5hZ2UgdG8gc3Vydml2ZSBieSBjdXR0aW5nIGV4cGVuc2VzIGhlcmUgYW5kIHRoZXJlLCBidXQgbWFueSBtaWdyYW50IHdvcmtlcnMgY2Fu4oCZdCDigJQgbm90IHdpdGggb25seSAyMCB5dWFuIGluIHRoZWlyIHBvY2tldHMgYW5kIG5vdCBrbm93aW5nIHRoZWlyIG5leHQgcGF5ZGF5LOKAnSBzYWlkIExpdSBHdW9qdW4sIGEgYmx1ZS11bmlmb3JtZWQgZG9ybWl0b3J5IG1haW50ZW5hbmNlIGFuZCBzZWN1cml0eSB3b3JrZXIgd2hvIGVhcm5zIDIsMDAwIHl1YW4gYSBtb250aC4g4oCcVGhlcmXigJlzIGEgc3VyZ2UgaW4gdGhlZnQgYW5kIG90aGVyIHBldHR5IGNyaW1lcyBhcm91bmQgaGVyZSBhcyBhIHJlc3VsdC7igJ0gUm9uZ3NoZW5nIGRlY2xpbmVkIGluIGFuIGUtbWFpbCB0byBhbnN3ZXIgcXVlc3Rpb25zIGFib3V0IGl0cyBvcGVyYXRpb25zLiBTcG9rZXNtZW4gZm9yIElDQkMgYW5kIENoaW5hIENvbnN0cnVjdGlvbiBCYW5rIENvcnAuIGRlY2xpbmVkIHRvIGNvbW1lbnQgb24gdGhlIHByb3NwZWN0IG9mIHJpc2luZyBiYWQgbG9hbnMsIHdoaWxlIHRob3NlIGF0IEJhbmsgb2YgQ2hpbmEsIEFncmljdWx0dXJhbCBCYW5rIG9mIENoaW5hIEx0ZC4gYW5kIENoaW5hIERldmVsb3BtZW50IEJhbmsgZGlkbuKAmXQgcmVzcG9uZCB0byByZXF1ZXN0cy4gU2hpcHlhcmQgU2h1dGRvd25zIFRoZSBwYWluIGlzIGJlaW5nIGV4cGVyaWVuY2VkIGJ5IFJvbmdzaGVuZ+KAmXMgcGVlcnMgbmF0aW9ud2lkZS4gQSB0aGlyZCBvZiB0aGUgY291bnRyeeKAmXMgMSw2MDAgc2hpcHlhcmRzIG1heSBzaHV0IGRvd24gd2l0aGluIGZpdmUgeWVhcnMgYW1pZCBhIGdsb2JhbCB2ZXNzZWwgZ2x1dCwgV2FuZyBKaW5saWFuLCBzZWNyZXRhcnkgZ2VuZXJhbCBvZiB0aGUgQ2hpbmEgQXNzb2NpYXRpb24gb2YgdGhlIE5hdGlvbmFsIFNoaXBidWlsZGluZyBJbmR1c3RyeSwgc2FpZCBpbiBKdWx5LiBUbyBKaSBGZW5naHVhLCBjaGFpcm1hbiBvZiBOYW50b25nIE1pbmdkZSBIZWF2eSBJbmR1c3RyeSBHcm91cCBDby4sIGFub3RoZXIgc3RydWdnbGluZyDigJxTaGlwcGluZyBWYWxsZXnigJ0gYnVpbGRlciBzcGVjaWFsaXppbmcgaW4gaGlnaC1lbmQgdmVzc2VscywgdGhhdOKAmXMgYW4gdW5kZXJzdGF0ZW1lbnQuIOKAnEkgd29u4oCZdCBiZSBzdXJwcmlzZWQgaWYgaGFsZiBvZiB0aGUgc2hpcGJ1aWxkZXJzIGZhaWwsIGdpdmVuIHRoZSBleGNlc3MgY2FwYWNpdHks4oCdIHNhaWQgSmksIHJlY291bnRpbmcgdGhlIGRheSBpbiBKdWx5IDIwMTIgdGhhdCBodW5kcmVkcyBvZiBoaXMgd29ya2VycyB3aG8gaGFkbuKAmXQgYmVlbiBwYWlkIGluIHRocmVlIG1vbnRocyBiZXNpZWdlZCBoaXMgb2ZmaWNlIGJ1aWxkaW5nLiBSZXBheWluZyBCYW5rcyBUaGUgY29tcGFueSB3YXMgc3RyYXBwZWQgZm9yIGNhc2ggYXMgc3RhdGUtYmFja2VkIGJhbmtzIHJlY2FsbGVkIHRoZWlyIGxvYW5zIGFmdGVyIHRoZSBiYW5raW5nIHJlZ3VsYXRvciBvcmRlcmVkIHRoYXQgbmV3IGZpbmFuY2luZyBiZSBzdG9wcGVkIGZvciBzaGlwYnVpbGRlcnMgYW5kIHNvbWUgb3RoZXIgYnVzaW5lc3Nlcy4gRGVwcml2ZWQgb2YgbmV3IGNyZWRpdCB0byBwYXkgb2ZmIG9sZCBkZWJ0cywgSmkgYW5kIGhpcyBmZWxsb3cgZm91bmRlcnMgZW1wdGllZCB0aGVpciBvd24gYmFuayBhY2NvdW50cywgY29sbGF0ZXJhbGl6ZWQgdGhlaXIgaG9tZXMgdG8gYmFua3MgYW5kIGhpdCB1cCByZWxhdGl2ZXMgYW5kIGFjcXVhaW50YW5jZXMgZm9yIGNhc2guIOKAnEV2ZXJ5IGNlbnQgb2YgdGhlIG1vbmV5IHdlIGVhcm5lZCBhbmQgYm9ycm93ZWQgd2FzIHVzZWQgdG8gcmVwYXkgYmFua3MsIGxlYXZpbmcgdXMgbm90aGluZyB0byBwYXkgd29ya2VycyBvciB0aGUgc3VwcGxpZXJzLOKAnSBMaSBzYWlkLiDigJxXZSBoYXZlIGJhbmtzIHRvIHRoYW5rIGZvciBvdXIgYm9vbSwgYW5kIHdlIGhhdmUgdGhlbSB0byBibGFtZSBmb3Igb3VyIGRvb20u4oCdIE1pbmdkZSBIZWF2eSBldmVudHVhbGx5IHN1cnZpdmVkIHRoZSBjcmlzaXMgd2l0aCBnb3Zlcm5tZW50IGhlbHAuIEl0cyBjYXNoIHNob3J0YWdlIGNvbnRpbnVlcyBldmVuIGFzIHRoZSBjb21wYW55IGNvbnRpbnVlcyB0byB0YWtlIG9yZGVycyBmb3Igc3RhaW5sZXNzLXN0ZWVsIGNoZW1pY2FsIHRhbmtlcnMuIFRoZSBjZW50cmFsIGdvdmVybm1lbnQgcGxlZGdlZCA0IHRyaWxsaW9uIHl1YW4gaW4gZWNvbm9taWMgc3RpbXVsdXMgZHVyaW5nIHRoZSBnbG9iYWwgZmluYW5jaWFsIGNyaXNpcyBzdGFydGluZyBpbiAyMDA4LiBJbiAyMDA5LCBFeHBvcnQtSW1wb3J0IEJhbmsgb2YgQ2hpbmEgY29tbWl0dGVkIHRvIDE2MCBiaWxsaW9uIHl1YW4gb2YgY3JlZGl0IHRvIHRoZSBuYXRpb27igJlzIHR3byBsYXJnZXN0IHN0YXRlLXJ1biBzaGlwYnVpbGRlcnMsIHdoaWxlIEJhbmsgb2YgQ2hpbmEgYWdyZWVkIHRvIGhlbHAgc21hbGxlciBhbmQgcHJpdmF0ZSBjb21wYW5pZXMsIGFjY29yZGluZyB0byBzdGF0ZW1lbnRzIGZyb20gYmFua3MuIEVhc3kgYWNjZXNzIHRvIGNyZWRpdCBoZWxwZWQgQ2hpbmVzZSBiYW5rcyBjaHVybiBvdXQgcmVjb3JkIHByb2ZpdHMgYW5kIHJlZHVjZSBiYWQtbG9hbiByYXRpb3MgdG8gbGVzcyB0aGFuIDEgcGVyY2VudCBhcyBvZiBKdW5lIDMwIGZyb20gMi44IHBlcmNlbnQgYXQgdGhlIGVuZCBvZiAyMDA4LiDigJhJbmR1c3RyaWFsIEdsdXTigJkg4oCcVGhlIDIwMDggc3RpbXVsdXMgZXhhY2VyYmF0ZWQgYW4gaW5kdXN0cmlhbCBnbHV0IHRoYXQgaGFzIGJlZW4gaW4gZXhpc3RlbmNlIHNpbmNlIDIwMDMs4oCdIFMmUOKAmXMgTGlhbyBzYWlkLiDigJxXZSBleHBlY3QgdGhlIGdvdmVybm1lbnQgdG8gdGFrZSBtZWFzdXJlZCBzdGVwcyBpbiBhIGNyYWNrZG93biBvbiBvdmVyY2FwYWNpdHkgYmVjYXVzZSB0aGV5IG5lZWQgdG8gd2VpZ2ggdGhlIGltcGFjdCBvbiBmaW5hbmNpYWwgc3RhYmlsaXR5LuKAnSBOb25wZXJmb3JtaW5nIGxvYW5zIGF0IENoaW5lc2UgYmFua3MgaW5jcmVhc2VkIGZvciBhbiBlaWdodGggY29uc2VjdXRpdmUgcXVhcnRlciBpbiB0aGUgdGhyZWUgbW9udGhzIGVuZGVkIFNlcHQuIDMwIHRvIDU2My42IGJpbGxpb24geXVhbiwgZXh0ZW5kaW5nIHRoZSBsb25nZXN0IHN0cmVhayBpbiBhdCBsZWFzdCBuaW5lIHllYXJzLiBTdGlsbCwgdGhleSBhY2NvdW50IGZvciBqdXN0IDAuOTcgcGVyY2VudCBvZiB0aGUgbmF0aW9u4oCZcyBvdXRzdGFuZGluZyBsb2FucywgYWNjb3JkaW5nIHRvIHRoZSBDaGluYSBCYW5raW5nIFJlZ3VsYXRvcnkgQ29tbWlzc2lvbi4gVGhlIGJhZC1sb2FuIHJhdGlvIGNvdWxkIGNsaW1iIHRvIGFzIGhpZ2ggYXMgMS41IHBlcmNlbnQgaW4gdGhlIG5leHQgZmV3IHF1YXJ0ZXJzLCBhY2NvcmRpbmcgdG8gTGlhbiBQaW5nLCBjaGllZiBlY29ub21pc3QgYXQgU2hhbmdoYWktYmFzZWQgQmFuayBvZiBDb21tdW5pY2F0aW9ucyBDby4gTW9zdCBvZiB0aGUgaW5jcmVhc2UsIGhlIHNhaWQsIHdpbGwgY29tZSBmcm9tIHRoZSBwcm92aW5jZXMgb2YgSmlhbmdzdSwgd2hlcmUgTmFudG9uZyBpcyBsb2NhdGVkLCBhbmQgWmhlamlhbmcsIHNvdXRoIG9mIFNoYW5naGFpLCB3aGVyZSBzbWFsbCBidXNpbmVzc2VzIGhhdmUgYmVlbiBoaXQgaGFyZCBieSB0aGUgc2xvd2Rvd24uIFR1cm5pbmcgVGlkZSBJbiB0aGUgZmlyc3Qgc2l4IG1vbnRocyBvZiB0aGlzIHllYXIsIHNvdXJlZCBsb2FucyBpbmNyZWFzZWQgYnkgMTggYmlsbGlvbiB5dWFuIGluIEppYW5nc3UsIG1vcmUgdGhhbiBhbnkgb3RoZXIgQ2hpbmVzZSBwcm92aW5jZSwgZm9sbG93ZWQgYnkgWmhlamlhbmcgYW5kIFNoYW5naGFpLCB0aGUgb2ZmaWNpYWwgWGluaHVhIE5ld3MgQWdlbmN5IHJlcG9ydGVkLiDigJxUaGVyZSBhcmUgbWFueSBjYXBpdGFsLWFuZC1sYWJvci1pbnRlbnNpdmUgaW5kdXN0cmllcyB0aGF0IGhhdmUgcmVsaWVkIG9uIGJhbmsgbG9hbnMgYW5kIHBvbGljeSBzdXBwb3J0IGZvciB0aGVpciBwYXN0IHN1Y2Nlc3Ms4oCdIExpYW4gb2YgdGhlIEJhbmsgb2YgQ29tbXVuaWNhdGlvbnMgc2FpZC4g4oCcQnV0IG5vdyB0aGUgdGlkZSBpcyB0dXJuaW5nIGFnYWluc3QgdGhlbS7igJ0gU2hpcGJ1aWxkaW5nIGlzbuKAmXQgdGhlIG9ubHkgaW5kdXN0cnkgYWZmZWN0ZWQgYnkgb3ZlcmNhcGFjaXR5LiBBbHNvIGluIEppYW5nc3UsIGFib3V0IDEzMCBraWxvbWV0ZXJzICg4MCBtaWxlcykgc291dGh3ZXN0IG9mIE5hbnRvbmcsIFd1eGkgU3VudGVjaCBQb3dlciBDby4sIHRoZSBtYWluIHVuaXQgb2YgdGhlIGluZHVzdHJ54oCZcyBvbmNlLWJpZ2dlc3Qgc3VwcGxpZXIsIHdlbnQgYmFua3J1cHQgd2l0aCA5IGJpbGxpb24geXVhbiBvZiBkZWJ0IHRvIENoaW5h4oCZcyBsYXJnZXN0IGJhbmtzLCBhY2NvcmRpbmcgdG8gYSBOb3YuIDEyIHJlcG9ydCBieSBDb21tdW5pc3QgUGFydHktb3duZWQgTGVnYWwgRGFpbHkuIFN1bnRlY2ggUG93ZXIgSG9sZGluZ3MgQ28uLCB0aGUgcGFyZW50IGZpcm0sIGRlZmF1bHRlZCBvbiAkNTQxIG1pbGxpb24gb2Ygb2Zmc2hvcmUgYm9uZHMgdG8gV2FsbCBTdHJlZXQgaW52ZXN0b3JzLiBTb2xhciBQYW5lbHMgQWJvdXQgMSBnaWdhd2F0dCBvZiBzb2xhci1wYW5lbCBwcm9kdWN0aW9uLCBtb3JlIHRoYW4gNDAgcGVyY2VudCBvZiB0aGUgY29tcGFueeKAmXMgMjAxMSBtb2R1bGUgbWFudWZhY3R1cmluZyBjYXBhY2l0eSwgd2FzIGlkbGVkIGF0IG9uZSBvZiB0d28gZmFjdG9yaWVzLCBhY2NvcmRpbmcgdG8gYSBzdGF0ZW1lbnQgaXNzdWVkIGJ5IFNodW5mZW5nIFBob3Rvdm9sdGFpYyBJbnRlcm5hdGlvbmFsIEx0ZC4sIHdoaWNoIGFncmVlZCB0byBidXkgV3V4aSBTdW50ZWNoIG9uIE5vdi4gMSBmb3IgMyBiaWxsaW9uIHl1YW4uIEEgZ2lnYXdhdHQgaXMgYWJvdXQgYXMgbXVjaCBhcyB3aGF0IGEgbmV3IG51Y2xlYXIgcmVhY3RvciBjYW4gc3VwcGx5LiBHb3Zlcm5tZW50IGFuZCBiYW5rc+KAmSBzdXBwb3J0IGZvciB0aGUgc29sYXIgaW5kdXN0cnkgc2luY2UgbGF0ZSAyMDA4IGhhcyByZXN1bHRlZCBpbiBhdCBsZWFzdCBvbmUgZmFjdG9yeSBwcm9kdWNpbmcgc3VuLSBwb3dlcmVkIHByb2R1Y3RzIGluIGhhbGYgb2YgQ2hpbmHigJlzIDYwMCBjaXRpZXMsIGFjY29yZGluZyB0byB0aGUgQ2hpbmEgUmVuZXdhYmxlIEVuZXJneSBTb2NpZXR5IGluIEJlaWppbmcuIENoaW5hIERldmVsb3BtZW50IEJhbmssIHRoZSB3b3JsZOKAmXMgbGFyZ2VzdCBwb2xpY3kgbGVuZGVyLCBhbG9uZSBsZW50IG1vcmUgdGhhbiA1MCBiaWxsaW9uIHl1YW4gdG8gc29sYXItcGFuZWwgbWFrZXJzIGFzIG9mIEF1Z3VzdCAyMDEyLCBkYXRhIGZyb20gdGhlIENoaW5hIEJhbmtpbmcgQXNzb2NpYXRpb24gc2hvd2VkLiBDaGluYSBhY2NvdW50cyBmb3Igc2V2ZW4gb2YgZXZlcnkgMTAgc29sYXIgcGFuZWxzIHByb2R1Y2VkIHdvcmxkd2lkZS4gSWYgdGhleSByYW4gYXQgZnVsbCBzcGVlZCwgdGhlIGZhY3RvcmllcyBjb3VsZCBwcm9kdWNlIDQ5IGdpZ2F3YXR0cyBvZiBzb2xhciBwYW5lbHMgYSB5ZWFyLCAxMCB0aW1lcyBtb3JlIHRoYW4gaW4gMjAwOCwgYWNjb3JkaW5nIHRvIGRhdGEgY29tcGlsZWQgYnkgQmxvb21iZXJnLiBPdmVyY2FwYWNpdHkgaGFzIGRyaXZlbiBkb3duIHByaWNlcyB0byBhYm91dCA4NCBjZW50cyBhIHdhdHQsIGNvbXBhcmVkIHdpdGggJDIgYXQgdGhlIGVuZCBvZiAyMDEwLiBUaGUgc2x1bXAgZm9yY2VkIGRvemVucyBvZiBwcm9kdWNlcnMgbGlrZSBXdXhpIFN1bnRlY2ggaW50byBiYW5rcnVwdGN5LiDigJhNdWNoIFdvcnNl4oCZIEFuIHVuaWRlbnRpZmllZCBsb2NhbCBiYW5rIHJlcG9ydGVkIGEgMzMgcGVyY2VudCBub25wZXJmb3JtaW5nLWxvYW4gcmF0aW8gZm9yIHRoZSBzb2xhci1wYW5lbCBpbmR1c3RyeSwgY29tcGFyZWQgd2l0aCAyIHBlcmNlbnQgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgeWVhciwgd2l0aCB0aGUgaW5jcmVhc2UgZHVlIHRvIFd1eGkgU3VudGVjaCwgQ2hpbmEgQnVzaW5lc3MgTmV3cyByZXBvcnRlZCBpbiBTZXB0ZW1iZXIuIOKAnFRoZSByZWFsIHNpdHVhdGlvbiBpcyBtdWNoIHdvcnNlIHRoYW4gdGhlIGRhdGEgc2hvd2Vk4oCdIGFmdGVyIHRhbGtpbmcgdG8gY2hpZWYgZmluYW5jaWFsIG9mZmljZXJzIGF0IGluZHVzdHJpYWwgbWFudWZhY3R1cmVycywgc2FpZCBXZW5keSBUYW5nLCBhIFNoYW5naGFpLWJhc2VkIGFuYWx5c3QgYXQgTm9ydGhlYXN0IFNlY3VyaXRpZXMgQ28uLCB3aG8gZXN0aW1hdGVzIHRoZSBhY3R1YWwgbm9ucGVyZm9ybWluZy1sb2FuIHJhdGlvIHRvIGJlIGFzIGhpZ2ggYXMgMyBwZXJjZW50LiDigJxJdCB3aWxsIHRha2UgYXQgbGVhc3Qgb25lIHllYXIgb3IgbG9uZ2VyIGZvciB0aGVzZSBOUExzIHRvIGFwcGVhciBvbiBiYW5rc+KAmSBib29rcywgYW5kIEkgaGF2ZW7igJl0IHNlZW4gdGhlIGJvdHRvbSBvZiBkZXRlcmlvcmF0aW9uIGluIEppYW5nc3UgYW5kIFpoZWppYW5nIHlldC7igJ0gVGhlIFd1eGkgZ292ZXJubWVudCBpbiAyMDA3IHBsYW5uZWQgdG8gYnVpbGQgYSAyLjItc3F1YXJlLSBraWxvbWV0ZXIgc29sYXItcGFuZWwgcGFyayB3aXRoIHByb2plY3RlZCBzYWxlcyBvZiAxMDAgYmlsbGlvbiB5dWFuIGJ5IDIwMTIuIFRoZSBhcmVhIGlzIG5vdyBjb3ZlcmVkIHdpdGggd2VlZHMgYW5kIGNvbnN0cnVjdGlvbiB3YXN0ZSwgbGVmdCB1bmRldmVsb3BlZCBiZWNhdXNlIG9mIG92ZXJjYXBhY2l0eS4gU3RlZWwsIENlbWVudCBUaGUgc2FtZSBpcyB0cnVlIGluIGluZHVzdHJpZXMgc3VjaCBhcyBzdGVlbCBhbmQgY2VtZW50LCB3aGljaCB3ZXJlIG5hbWVkIGJ5IHRoZSBTdGF0ZSBDb3VuY2lsIGFzIGZhY2luZyBhIOKAnHNlcmlvdXPigJ0gZ2x1dC4gQ2hpbmHigJlzIGVjb25vbWljIHBsYW5uZXJzIGhhdmUgc291Z2h0IHRvIHJlaW4gaW4gdGhlIHN0ZWVsIGluZHVzdHJ5IHNpbmNlIGF0IGxlYXN0IDIwMDQsIHdoZW4gd29yayBvbiBhIDEwLjYgYmlsbGlvbiB5dWFuIHByb2plY3QgaW4gSmlhbmdzdSB3YXMgaGFsdGVkLiBFdmVuIHNvLCBhbm51YWwgY2FwYWNpdHkgaGFzIHJpc2VuIHRvIDk3MCBtaWxsaW9uIG1ldHJpYyB0b25zLCBhY2NvcmRpbmcgdG8gdGhlIHN0ZWVsIGFzc29jaWF0aW9uLCBleGNlZWRpbmcgdGhlIGluZHVzdHJ54oCZcyBvdXRwdXQgYnkgMzUgcGVyY2VudCBpbiAyMDEyLiBDaGluYSBwcm9kdWNlcyBzZXZlbiB0aW1lcyBtb3JlIHRoYW4gTm8uIDIgSmFwYW4uIEFib3V0IDEwIG1pbGxpb24gdG9ucyBvZiBhbHVtaW51bSBwcm9kdWN0aW9uIGNhcGFjaXR5IGlzIGJlaW5nIGJ1aWx0IGF0IGEgdGltZSB3aGVuIHRoZSBpbmR1c3RyeSBpbmN1cnJlZCBjb21iaW5lZCBsb3NzZXMgb2YgNjcwIG1pbGxpb24geXVhbiBpbiB0aGUgZmlyc3QgaGFsZiwgd2l0aCBzb21lIHByb2R1Y2VycyBpbiBjZW50cmFsIGFuZCBlYXN0ZXJuIENoaW5hIGZhY2luZyBzZXZlcmUgbG9zc2VzLCB0aGUgTWluaXN0cnkgb2YgSW5kdXN0cnkgb2YgSW5mb3JtYXRpb24gVGVjaG5vbG9neSBzYWlkIGluIEp1bHkuIFRoYXQgbW9udGggdGhlIG1pbmlzdHJ5IG9yZGVyZWQgbW9yZSB0aGFuIDEsNDAwIGNvbXBhbmllcyBpbiAxOSBpbmR1c3RyaWVzIGluY2x1ZGluZyBzdGVlbCwgZmVycm8gYWxsb3lzIGFuZCBjZW1lbnQgdG8gY3V0IGV4Y2VzcyBwcm9kdWN0aW9uIGNhcGFjaXR5IHRoaXMgeWVhciwgYW4gaW5kaWNhdGlvbiB0aGF0IHRoZSBnb3Zlcm5tZW50IGlzIHB1cnN1aW5nIHBsZWRnZXMgdG8gZml4IGZ1bmRhbWVudGFsIGlzc3VlcyBpbiB0aGUgZWNvbm9teSBldmVuIGFzIGdyb3d0aCBzbG93cy4gRXhjZXNzIGNhcGFjaXR5IHdhcyBzdXBwb3NlZCB0byBiZSBpZGxlZCBieSBTZXB0ZW1iZXIgYW5kIGVsaW1pbmF0ZWQgYnkgeWVhci1lbmQuIENoaW5h4oCZcyBsYW5kIG1pbmlzdHJ5IHllc3RlcmRheSB0b2xkIGxvY2FsIGF1dGhvcml0aWVzIHRvIGJhbiBhbGxvY2F0aW9ucyBmb3IgYW55IG5ldyBwcm9kdWN0aW9uIHByb2plY3RzIGJ5IG92ZXJjYXBhY2l0eSBpbmR1c3RyaWVzIGluY2x1ZGluZyBzdGVlbCBhbmQgc2hpcGJ1aWxkaW5nLCB0aGUgb2ZmaWNpYWwgWGluaHVhIE5ld3MgQWdlbmN5IHJlcG9ydGVkLiBIYXdraXNoIFRvbmUg4oCcVGhlIGNlbnRyYWwgZ292ZXJubWVudCBpcyBoYXdraXNoIGluIGl0cyB0b25lLCBidXQgd2hlbiBpdCBjb21lcyB0byBleGVjdXRpb24gYnkgbG9jYWwgZ292ZXJubWVudHMsIHRoZSBlbmZvcmNlbWVudCB3aWxsIGJlIG11Y2ggc29mdGVyLOKAnSBCYW5rIG9mIENvbW11bmljYXRpb25z4oCZIExpYW4gc2FpZC4g4oCcTWFueSBvZiB0aGVzZSBmaXJtcyBhcmUgbWFqb3Igam9iIHByb3ZpZGVycyBhbmQgdGF4cGF5ZXJzLCBzbyB0aGUgbG9jYWwgZ292ZXJubWVudCB3aWxsIHRyeSBhbGwgbWVhbnMgdG8gc2F2ZSB0aGVtIGFuZCBoZWxwIHRoZW0gcmVwYXkgYmFuayBsb2Fucy7igJ0gV2hlbiBodW5kcmVkcyBvZiB1bnBhaWQgTWluZ2RlIEhlYXZ5IHdvcmtlcnMgdG9vayB0byB0aGUgc3RyZWV0cyBmb3IgYSBzZWNvbmQgdGltZSBsYXN0IE5vdmVtYmVyLCB0aGUgbG9jYWwgZ292ZXJubWVudCBzdGVwcGVkIGluIGJ5IGxpbmluZyB1cCBvdGhlciBmaXJtcyB0byB2b3VjaCBmb3IgTWluZ2RlIHNvIGJhbmtzIHdvdWxkIHJlbmV3IGl0cyBsb2Fucy4gTWluZ2RlIEhlYXZ5IGF2b2lkZWQgZmFpbHVyZSBieSBlbnRlcmluZyBpbnRvIGFuIGFsbGlhbmNlIHdpdGggYSBzaGlwcGluZyB1bml0IG9mIGdvdmVybm1lbnQtY29udHJvbGxlZCBKaWFuZ3N1IFNhaW50eSBDb3JwLiwgd2hpY2ggYWxzbyBpbXBvcnRzIGFuZCBleHBvcnRzIGFwcGFyZWwuIE1vdGhlci1pbi1MYXcg4oCcSSBoYXZlIGV2ZXJ5dGhpbmcgSSBuZWVkIHRvIGJlY29tZSBhIHRvcC10aWVyIHNoaXBidWlsZGVyIGJ1dCB0aGUgbW9uZXks4oCdIHNhaWQgSmksIE1pbmdkZeKAmXMgY2hhaXJtYW4uIOKAnEkgdXNlZCB0byBiZSBwcm91ZCB0aGF0IHdlIGFyZSBhbiBpbmRlcGVuZGVudCwgcHJpdmF0ZSBjb21wYW55IHdpdGhvdXQgZ292ZXJubWVudCBpbnRlcmZlcmVuY2UuIE5vdCBhbnltb3JlLiBUaGUgcHJlc3N1cmUgaXMgbXVjaCBsZXNzIHdoZW4geW91IGhhdmUgYSByaWNoIG1vdGhlci1pbi1sYXcu4oCdIFVuZGVyIFByZXNpZGVudCBYaSBKaW5waW5n4oCZcyByZWZvcm1zIGxhaWQgb3V0IGxhc3Qgd2VlaywgdGhlIHByaXZhdGUgc2VjdG9yIHdpbGwgYmUgYm9vc3RlZCBieSBsb29zZXIgc3RhdGUgY29udHJvbHMsIHdoaWxlIGxvY2FsIGdvdmVybm1lbnQgb2ZmaWNpYWxzIHdpbGwgYmUgZXZhbHVhdGVkIG5vdCBvbmx5IG9uIGluY3JlYXNlcyBpbiBHRFAgYnV0IGFsc28gb24gaW5kaWNhdG9ycyBzdWNoIGFzIGVuZXJneSBjb25zdW1wdGlvbiwgb3ZlcmNhcGFjaXR5IGFuZCBuZXcgZGVidC4gQ2hpbmHigJlzIGxlbmRpbmcgc3ByZWUgaGFzIGNyZWF0ZWQgYSBkZWJ0IGJ1cmRlbiBzaW1pbGFyIGluIG1hZ25pdHVkZSB0byB0aGUgb25lIHRoYXQgcHVzaGVkIEFzaWFuIG5hdGlvbnMgaW50byBjcmlzaXMgaW4gdGhlIGxhdGUgMTk5MHMsIGFjY29yZGluZyB0byBGaXRjaCBSYXRpbmdzLiBBcyBjb21wYW5pZXMgdGFrZSBvbiBtb3JlIGRlYnQsIHRoZSBlZmZpY2llbmN5IG9mIGNyZWRpdCB1c2UgaGFzIGRldGVyaW9yYXRlZC4gU2luY2UgMjAwOSwgZm9yIGV2ZXJ5IHl1YW4gb2YgY3JlZGl0IGlzc3VlZCwgQ2hpbmHigJlzIEdEUCBncmV3IGJ5IGFuIGF2ZXJhZ2UgMC40IHl1YW4sIHdoaWxlIHRoZSBwcmUtMjAwOSBhdmVyYWdlIHdhcyAwLjggeXVhbiwgYWNjb3JkaW5nIHRvIE1pa2UgV2VybmVyLCBhIEhvbmcgS29uZy1iYXNlZCBhbmFseXN0IGF0IFNhbmZvcmQgQy4gQmVybnN0ZWluICYgQ28uIENyZWRpdCBDeWNsZSDigJxJZiBjcmVkaXQgYWxsb2NhdGlvbiBpbiBDaGluYSBpbXByb3ZlcywgdGhlIHVsdGltYXRlIGNyZWRpdCBjeWNsZSBhbmQgZWNvbm9teSBkb3dudHVybiB3aWxsIGJlIG1pdGlnYXRlZCzigJ0gV2VybmVyIHdyb3RlIGluIGFuIE9jdC4gMjEgbm90ZSB0byBpbnZlc3RvcnMuIOKAnEhvd2V2ZXIsIGlmIENoaW5hIGNvbnRpbnVlcyB0byByZWx5IG9uIGRlYnQgdG8gZnVuZCBpdHMgZWNvbm9taWMgZ3Jvd3RoLCB0aGUgY291bnRyeeKAmXMgdWx0aW1hdGUgY3JlZGl0IGN5Y2xlIHdpbGwgYmUgbW9yZSBzZXZlcmUu4oCdIEJhc2VkIG9uIGN1cnJlbnQgdmFsdWF0aW9ucywgaW52ZXN0b3JzIGFyZSBwcmljaW5nIGluIGEgc2NlbmFyaW8gd2hlcmUgbm9ucGVyZm9ybWluZyBsb2FucyBhdCB0aGUgbGFyZ2VzdCBDaGluZXNlIGJhbmtzIHdpbGwgbWFrZSB1cCBtb3JlIHRoYW4gMTUgcGVyY2VudCBvZiB0aGVpciBsb2FuIGJvb2tzLCBhY2NvcmRpbmcgdG8gV2VybmVyLCB3aG8gZm9yZWNhc3RzIGEgMi41IHBlcmNlbnQgdG8gMy41IHBlcmNlbnQgYmFkLWxvYW4gcmF0aW8gYnkgdGhlIGVuZCBvZiAyMDE1LiBBIGZ1cnRoZXIgZGVjbGluZSBpbiBHRFAgZ3Jvd3RoIHdvdWxkIGxlYWQgdG8gbW9yZSBzb3VyZWQgbG9hbnMgYW5kIHdlYWtlciBlYXJuaW5ncywgaGUgc2FpZC4gTGVuZGVycyBzbyBmYXIgaGF2ZW7igJl0IHJlcG9ydGVkIHNpZ25pZmljYW50IGRldGVyaW9yYXRpb24gaW4gbG9hbiBxdWFsaXR5LiBCYW5rIG9mIENoaW5hIHNhaWQgaXQgaGFkIDI1MS4zIGJpbGxpb24geXVhbiBvZiBsb2FucyB0byBpbmR1c3RyaWVzIHN1ZmZlcmluZyBmcm9tIG92ZXJjYXBhY2l0eSBhcyBvZiB0aGUgZW5kIG9mIEp1bmUsIGFjY291bnRpbmcgZm9yIDMgcGVyY2VudCBvZiB0aGUgdG90YWwuIEl0cyBub25wZXJmb3JtaW5nLSBsb2FuIHJhdGlvIGZvciB0aG9zZSBidXNpbmVzc2VzIHN0b29kIGF0IDAuOTMgcGVyY2VudCwgdGhlIHNhbWUgbGV2ZWwgcmVwb3J0ZWQgZm9yIHRoZSBlbnRpcmUgYmFuay4gQXQgQ2hpbmEgQ29uc3RydWN0aW9uIEJhbmssIGxvYW5zIHRvIGluZHVzdHJpZXMgd2l0aCBvdmVyY2FwYWNpdHkgZmVsbCBhYm91dCA4IGJpbGxpb24geXVhbiBpbiB0aGUgZmlyc3QgaGFsZiBvZiB0aGUgeWVhciB0byAxODAuOCBiaWxsaW9uIHl1YW4sIHdoaWxlIGF0IEJhbmsgb2YgQ29tbXVuaWNhdGlvbnMsIHRoZSBhbW91bnQgd2FzIDcyIGJpbGxpb24geXVhbiBvciAyLjMgcGVyY2VudCBvZiB0aGUgdG90YWwsIHRoZSBiYW5rcyByZXBvcnRlZC4gRGl2aWRlbmRzIEN1cmJlZCBDcmVkaXQgZ3Jvd3RoIG1heSBzbG93IG92ZXIgdGhlIG5leHQgeWVhciBhbmQgYSBoYWxmIGZyb20gdGhlIDIwIHBlcmNlbnQgdG8gMjUgcGVyY2VudCBnYWlucyBpbiByZWNlbnQgeWVhcnMgdG8gYWJvdXQgMTUgcGVyY2VudCwgSm9zaCBLbGFjemVrLCBoZWFkIG9mIEFzaWEgZmluYW5jaWFsIHNlcnZpY2VzIGZvciBKUE1vcmdhbiBDaGFzZSAmIENvLiwgc2FpZCBpbiBKdWx5LiBUaGUgZXhwYW5zaW9uIG9mIG5vbnBlcmZvcm1pbmcgbG9hbnMgd2lsbCBkZXByZXNzIHByb2ZpdHMgYW5kIGN1cmIgdGhlIGFiaWxpdHkgb2YgYmFua3MgdG8gaW5jcmVhc2UgZGl2aWRlbmRzLCBhbmQgaWYgbW9yZSBsb2FucyBzb3VyLCBsZW5kZXJzIG1heSBuZWVkIHRvIHJhaXNlIGNhcGl0YWwsIGhlIHNhaWQuIOKAnEJhbmtzIGN1cnJlbnRseSBoYXZlIHRoZSBhYmlsaXR5IHRvIGFic29yYiBhIGRlY2VudCBhbW91bnQgb2YgYmFkIGxvYW5zLCBhbmQgbG9jYWwgZ292ZXJubWVudCBpbnZvbHZlbWVudCB3aWxsIHNsb3cgdGhlIHNwZWVkIG9mIE5QTCBpbmNyZWFzZXMs4oCdIFMmUOKAmXMgTGlhbyBzYWlkLiBXaGlsZSBDaGluYeKAmXMgY2FiaW5ldCBpbiBKdWx5IHVyZ2VkIG1lcmdlcnMgYW5kIGN1cmJzIGluIHRoZSBzaGlwYnVpbGRpbmcgaW5kdXN0cnksIGl0IGNhbGxlZCBmb3IgY29udGludWVkIGZpbmFuY2lhbCBzdXBwb3J0IHRvIGhlbHAg4oCccXVhbGl0eSBjb21wYW5pZXPigJ0gbWFpbnRhaW4gdGhlaXIgb3BlcmF0aW9ucy4gSW4gTmFudG9uZywgaGFuZG1hZGUtbm9vZGxlLXNob3Agb3duZXIgTWEgU2h1bnRpYW4gc2FpZCBoZeKAmXMgc3RpbGwgYSBiZWxpZXZlciwgZXZlbiBhZnRlciBsb3NpbmcgNTAsMDAwIHl1YW4gdGhpcyB5ZWFyLiBNYSBhbmQgaGlzIHdpZmUgcHVtcGVkIGFsbW9zdCAxIG1pbGxpb24geXVhbiBpbnRvIHRoZSByZXN0YXVyYW50IGZpdmUgeWVhcnMgYWdvIGFmdGVyIHNlbGxpbmcgZXZlcnl0aGluZyB0aGV5IGhhZCBpbiBRaW5naGFpIHByb3ZpbmNlIGFuZCBtb3ZpbmcgdG8gdGhlIGFyZWEgd2hlcmUgUm9uZ3NoZW5n4oCZcyB3b3JrZXJzIHJlc2lkZS4gSW4gYSBnb29kIHllYXIsIHNlbGxpbmcgbm9vZGxlcyBicm91Z2h0IGluIG1vcmUgdGhhbiAxMDAsMDAwIHl1YW4gaW4gcHJvZml0LiDigJxJIGhvcGUgUm9uZ3NoZW5nIGNhbiBjb21lIHRocm91Z2ggdGhpcyBjcmlzaXMgYW5kIHRoZSB0b3duIGNvbWVzIGJhY2sgdG8gbGlmZSzigJ0gc2FpZCBNYSwgYSBmYXRoZXIgb2YgdGhyZWUuIOKAnElmIHRoZXkgZWFybiBiaWcgbW9uZXksIEkgY2FuIGVhcm4gc21hbGwu4oCd</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJu8acAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDRmMmY0MjA3YzNmYTg2NWI=</field><field name="symbol" class="java.lang.String">rO0ABXQABExPQU4=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJ0GAMAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/+ZmZmZmZm</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/+ZmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/8zMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/9cKPXCj1x</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/7MzMzMzMz</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAOEA==</field><field name="id" class="java.lang.String">rO0ABXQAEGYwMTkxZDcwMTZmMDQyM2M=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEsMAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwNjU=</field><field name="title" class="java.lang.String">rO0ABXQAIUNoaW5hIEluZmxhdGlvbiBIaXRzIDgtbW9udGggSGlnaA==</field><field name="content" class="java.lang.String">rO0ABXQMtEluZmxhdGlvbiwgd2hpY2ggcXVpY2tlbmVkIHNsaWdodGx5IGZyb20gMy4xIHBlcmNlbnQgaW4gU2VwdGVtYmVyLCB3YXMgc3RpbGwgbG93ZXIgdGhhbiBhIG1lZGlhbiBmb3JlY2FzdCBvZiAzLjMgcGVyY2VudCBpbiBhIFJldXRlcnMgcG9sbCBhbmQgd2FzIGJlbG93IHRoZSBvZmZpY2lhbCB0YXJnZXQgb2YgMy41IHBlcmNlbnQgZm9yIDIwMTMuICJBbHRob3VnaCB0aGUgQ1BJIGluZmxhdGlvbiB3YXMgbWFpbmx5IHB1c2hlZCB1cCBieSBzZWFzb25hbCBmb29kIGRlbWFuZCwgaXQgbWF5IGZ1ZWwgbWFya2V0IGNvbmNlcm5zIHRoYXQgdGhlIGNlbnRyYWwgYmFuayBtYXkgdGlnaHRlbiBtb25ldGFyeSBjb25kaXRpb25zLCIgc2FpZCBMaSBIdWl5b25nLCBhbiBlY29ub21pc3QgYXQgU2hlbnlpbiAmIFdhbmd1byBTZWN1cml0aWVzIGluIFNoYW5naGFpLiBUaGUgUGVvcGxlJ3MgQmFuayBvZiBDaGluYSByZWZ1c2VkIHRvIGluamVjdCBsaXF1aWRpdHkgaW50byB0aGUgbW9uZXkgbWFya2V0cyBkdXJpbmcgcmVndWxhciBvcGVuIG1hcmtldCBvcGVyYXRpb25zIG9uIFRodXJzZGF5LCB0cmlnZ2VyaW5nIHdvcnJpZXMgaXQgd291bGQgc3RhcnQgYSBuZXcgcm91bmQgb2YgdGlnaHRlbmluZyBpbiB0aGUgbmV4dCBmZXcgbW9udGhzLCB0cmFkZXJzIHNhaWQuIERhdGEgb24gRnJpZGF5IHNob3dlZCBleHBvcnRzIHJlYm91bmRlZCBieSBtb3JlIHRoYW4gZXhwZWN0ZWQgaW4gT2N0b2JlciwgYWRkaW5nIHRvIHNpZ25zIHRoZSBlY29ub215IGhhcyBmb3VuZCBpdHMgZm9vdGluZyBhcyBCZWlqaW5nIHByZXBhcmVzIGl0cyByZWZvcm0gYWdlbmRhIGZvciB0aGUgbmV4dCBkZWNhZGUuIEJ1dCBmZXcgYW5hbHlzdHMgYmVsaWV2ZSB0aGUgY2VudHJhbCBiYW5rIHdpbGwgcnVzaCB0byB0aWdodGVuIHBvbGljeSBhbWlkIHRoZSBsaW5nZXJpbmcgZ2xvYmFsIHVuY2VydGFpbnRpZXMuIFRoZSBQQk9DIGhhcyBzYWlkIGl0IHdpbGwgbWFpbnRhaW4gaXRzIHBydWRlbnQgcG9saWN5LXNldHRpbmcgd2l0aCB0aW1lbHkgZmluZS10dW5pbmcgdG8ga2VlcCB0aGUgZWNvbm9teSBvbiBhbiBldmVuIGtlZWwgd2hpbGUgd2FyZGluZyBvZmYgaW5mbGF0aW9uYXJ5IHJpc2tzLiBUaGUgTmF0aW9uYWwgQnVyZWF1IG9mIFN0YXRpc3RpY3Mgc2FpZCBmb29kIHByaWNlcyByb3NlIDYuNSBwZXJjZW50IGluIE9jdG9iZXIgZnJvbSBhIHllYXIgZWFybGllciwgcXVpY2tlbmluZyBmcm9tIDYuMSBwZXJjZW50IGluIFNlcHRlbWJlci4gQ2hpbmEncyBwcm9kdWNlciBwcmljZXMgZmVsbCAxLjUgcGVyY2VudCBsYXN0IG1vbnRoIGZyb20gYSB5ZWFyIGVhcmxpZXIg4oCUIHRoZSAyMHRoIGNvbnNlY3V0aXZlIG1vbnRoIG9mIGRlY2xpbmUg4oCUIHZlcnN1cyBhIGZhbGwgb2YgMS4zIHBlcmNlbnQgdGhlIHByZXZpb3VzIG1vbnRoLCB0aGUgYnVyZWF1IHNhaWQuIEVjb25vbWlzdHMgcG9sbGVkIGJ5IFJldXRlcnMgaGFkIGV4cGVjdGVkIGNvbnN1bWVyIGluZmxhdGlvbiBvZiAzLjMgcGVyY2VudCBhbmQgZmFjdG9yeS1nYXRlIHByaWNlcyB0byBkZWNsaW5lIDEuNCBwZXJjZW50LiBNb250aC1vbi1tb250aCwgY29uc3VtZXIgcHJpY2VzIHdlcmUgdXAgMC4xIHBlcmNlbnQgdmVyc3VzIGEgcmlzZSBvZiAwLjIgcGVyY2VudCBleHBlY3RlZCBieSBlY29ub21pc3RzLiBQcm9kdWNlciBwcmljZXMgaW4gT2N0b2JlciB3ZXJlIHVuY2hhbmdlZCBmcm9tIHRoZSBwcmV2aW91cyBtb250aC4gTk8gVElHSFRFTklORyBTRUVOIERhdGEgZnJvbSB0aGUgTmF0aW9uYWwgQnVyZWF1IG9mIFN0YXRpc3RpY3MgYWxzbyBzaG93ZWQgQ2hpbmEncyBmYWN0b3J5IG91dHB1dCByb3NlIDEwLjMgcGVyY2VudCBpbiBPY3RvYmVyIGZyb20gYSB5ZWFyIGVhcmxpZXIsIGJlYXRpbmcgbWFya2V0IGV4cGVjdGF0aW9ucyBvZiAxMCBwZXJjZW50LiBGaXhlZC1hc3NldCBpbnZlc3RtZW50LCBhIGtleSBkcml2ZXIgb2YgZWNvbm9taWMgZ3Jvd3RoLCBjbGltYmVkIDIwLjEgcGVyY2VudCBpbiB0aGUgZmlyc3QgMTAgbW9udGhzIGZyb20gYSB5ZWFyIGVhcmxpZXIg4oCUIGluIGxpbmUgd2l0aCBmb3JlY2FzdHMuIFJlYWwgZXN0YXRlIGludmVzdG1lbnQgZ3Jvd3RoIHJvc2UgMTkuMiBwZXJjZW50LCB3aGlsZSByZXZlbnVlIGZyb20gcHJvcGVydHkgc2FsZXMgcm9zZSAzMi4zIHBlcmNlbnQuIFJldGFpbCBzYWxlcywgYSBrZXkgZ2F1Z2Ugb2YgY29uc3VtcHRpb24sIHdlcmUgdXAgMTMuMyBwZXJjZW50IGluIE9jdG9iZXIgZnJvbSBhIHllYXIgZWFybGllciwgdmVyc3VzIDEzLjQgcGVyY2VudCBleHBlY3RlZCBieSB0aGUgbWFya2V0LiAiT3ZlcmFsbCwgdGhlIGRhdGEgc2hvd2VkIHRoYXQgZWNvbm9teSBpcyBzdGFiaWxpc2luZyBidXQgdGhlcmUgYXJlIHN0aWxsIG1hbnkgZXh0ZXJuYWwgdW5jZXJ0YWludGllcywiIHNhaWQgQ2hlbiBMZXRpYW4sIGFuIGVjb25vbWlzdCBhdCBSaXNpbmcgU2VjdXJpdGllcyBpbiBCZWlqaW5nLiAiV2UgZG9uJ3QgZXhwZWN0IHRoZSBjZW50cmFsIGJhbmsgdG8gdGlnaHRlbiBwb2xpY3kgc2hhcnBseSwgYWx0aG91Z2ggaXQgbWF5IGZpbmUtdHVuZSBwb2xpY3kgYnkgdGFyZ2V0aW5nIG1hcmtldCBsaXF1aWRpdHkuIiBBIFJldXRlcnMgcG9sbCBzaG93ZWQgYW5udWFsIGdyb3d0aCBjb3VsZCBzbG93IHRvIDcuNSBwZXJjZW50IGluIHRoZSBmb3VydGgtcXVhcnRlciBvZiAyMDEzIGZyb20gNy44IHBlcmNlbnQgaW4gdGhlIHByZXZpb3VzIHRocmVlIG1vbnRocy4gVGhlIGZ1bGwteWVhciBncm93dGggY291bGQgYmUgNy42IHBlcmNlbnQg4oCUIHRoZSB3ZWFrZXN0IGluIDE0IHllYXJzIOKAlCBidXQgYWhlYWQgb2YgdGhlIGdvdmVybm1lbnQncyB0YXJnZXQgb2YgNy41IHBlcmNlbnQuIENoaW5lc2UgbGVhZGVycyBiZWdhbiBhIGZvdXItZGF5IHNlY3JldCBtZWV0aW5nIG9uIFNhdHVyZGF5IHRvIHNldCBhIHJlZm9ybSBhZ2VuZGEgZm9yIHRoZSBuZXh0IGRlY2FkZSBhcyB0aGV5IHRyeSB0byBwdXNoIG1vcmUgc3VzdGFpbmFibGUgZ3Jvd3RoIGFmdGVyIHRocmVlIGRlY2FkZXMgb2YgYnJlYWtuZWNrIGV4cGFuc2lvbi4gVGhleSBoYXZlIHBsZWRnZWQgdG8gc3RlZXIgdGhlIGVjb25vbXkgYXdheSBmcm9tIGl0cyBkZXBlbmRlbmNlIG9uIGludmVzdG1lbnQgYW5kIGV4cG9ydHMgdG8gb25lIGRyaXZlbiBtb3JlIGJ5IGNvbnN1bXB0aW9uLCBzZXJ2aWNlcyBhbmQgaW5ub3ZhdGlvbiwgd2hpY2ggdGhleSBjb25zaWRlciBtb3JlIHN1c3RhaW5hYmxlLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJAmGsAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDg0YzJjNGJkNmY4YTYxY2E=</field><field name="symbol" class="java.lang.String">rO0ABXQABFBVU0g=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJFvscAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAvAAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAvAAAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAvAAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAvAAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAtdcKPXCj2</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGQwNDY2MzdkNzEzNTZlM2Q=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGn4AAAA==</field></document></documents><date>2015-05-07T12:09:32-0500</date></cacheEntry>
<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0ExtPbiBNYXJjaCA5IDIwMDkgdGhlIFNQIDUwMCBoaXQgaXRzIG5hZGlyIGNsb3NpbmcgYXQgNjc2NTMgVGhhdCBsb3cgbWFya2VkIGEgY2xpbWF4IG9mIGEgMTZtb250aCBzZWxsb2ZmIHRoYXQgdG9vayBtb3JlIHRoYW4gaGFsZiB0aGUgU1AgNTAwcyB2YWx1ZSBTaW5jZSB0aGF0IGRheSB0aGUgU3RhbmRhcmQgIFBvb3JzIDUwMCBpbmRleCBoYXMgZ2FpbmVkIG1vcmUgdGhhbiAxNzcgcGVyY2VudCB0aGUgYmVzdCByb2xsaW5nIGZpdmV5ZWFyIHBlcmZvcm1hbmNlIHNpbmNlIHRoZSBKdW5lIDE5OTYgdG8gSnVuZSAyMDAwIHBlcmlvZCB0aGF0IGNvdmVycyB0aGUgZG90Y29tIGJ1YmJsZSBOYXR1cmFsbHkgc29tZSBpbnZlc3RvcnMgYXJlIHF1ZXN0aW9uaW5nIHdoZXRoZXIgdGhlIGJ1bGwgcnVuIGlzIG5lYXJpbmcgYW4gZW5kIEludmVzdG9ycyBjaXRlZCBhIG51bWJlciBvZiByZWFzb25zIHRvIGJlIG5lcnZvdXMgVGhvdWdoIGEgbnVtYmVyIG9mIHRoZXNlIGZhY3RvcnMgaGF2ZSBiZWVuIHByZXNlbnQgZm9yIHNvbWUgdGltZSB0aGUgZm9sbG93aW5nIHN0YW5kIG91dCBhcyBjb25jZXJucyAgCgpWYWx1YXRpb25zCgpQcm9maXQgZ3Jvd3RoIGFuZCBlc3BlY2lhbGx5IHJldmVudWUgZ3Jvd3RoIG1heSBub3QgYmUgc3Ryb25nIGVub3VnaCB0byBzdXBwb3J0IGN1cnJlbnQgcHJpY2UgbGV2ZWxzIFByb2ZpdCBncm93dGggaGFzIHNsb3dlZCBjb25zaWRlcmFibHkgZnJvbSB0aGUgcGVha3Mgb2YgdGhpcyBlYXJuaW5ncyBjeWNsZSBUaGVyZSBhcmUgY29uY2VybnMgdGhhdCByZXZlbnVlIGdyb3d0aCB3aWxsIGJlIGxhY2tsdXN0ZXIgd2hpbGUgZWNvbm9taWMgZ3Jvd3RoIHJlbWFpbnMgbWVkaW9jcmUgVGhlIFNQIDUwMHMgZm9yd2FyZCBwcmljZXRvZWFybmluZ3MgcmF0aW8gYXQgMTU4IGlzIGl0cyBoaWdoZXN0IHNpbmNlIHRoZSBmb3VydGggcXVhcnRlciBvZiAyMDA4IFRob21zb24gUmV1dGVycyBkYXRhIHNob3dlZCBJdCBjb21lcyBhcyByZXZlbnVlIGdyb3d0aCBoYXMgc2xvd2VkIGVhdGluZyBpbnRvIHByb2ZpdHMgYW5kIHByb2R1Y3Rpdml0eSBncm93dGggZGVjbGluZWQgaW4gdGhlIGZpcnN0IHF1YXJ0ZXIgc3VnZ2VzdGluZyBzbGltbWVyIG1hcmdpbnMgaW4gdGhlIG5leHQgZWFybmluZ3MgcGVyaW9kIGFzIHdlbGwgU1AgNTAwIHJldmVudWUgZ3Jvd3RoIGhhcyBhdmVyYWdlZCBqdXN0IDMyIHBlcmNlbnQgc2luY2UgTWFyY2ggMjAwOSB3aGlsZSBlYXJuaW5ncyBncm93dGggaGFzIGF2ZXJhZ2VkIDE2MiBwZXJjZW50IFRob21zb24gUmV1dGVycyBkYXRhIHNob3dlZCBGb3IgdGhlIG1vc3QgcmVjZW50IHJlcG9ydGluZyBwZXJpb2QgcmV2ZW51ZSBncm93dGggaXMgZXN0aW1hdGVkIGF0IDEgcGVyY2VudCB3aGlsZSBwcm9maXQgZ3Jvd3RoIGlzIGZvcmVjYXN0IGF0IDk4IHBlcmNlbnQgVGhlIHN0b2NrIG1hcmtldCBoYXMgc2VlbiBoaWdoZXIgcHJpY2V0b2Vhcm5pbmdzIHJhdGlvcyAgbm90YWJseSBkdXJpbmcgdGhlIHRlY2hub2xvZ3kgYnViYmxlIGFuZCB0aGUgZW5kIG9mIHRoZSAyMDA3MjAwOCBydW4gYnV0IHRvIHNvbWUgdGhhdHMgbm90IGNvbWZvcnRpbmcgQSBsb3Qgb2YgcGVvcGxlIHNheSB0aGUgbXVsdGlwbGUgaXMgbm90IHRoYXQgaGlnaCBjb21wYXJlZCB0byBoaXN0b3J5IGJ1dCBpbiBubyB0aW1lIGluIGhpc3RvcnkgZGlkIHlvdSBoYXZlIHRoZXNlIHR5cGVzIG9mIHRhaWx3aW5kcyBwdXNoaW5nIGFzc2V0IHByaWNlcyBmb3IgZml2ZSB5ZWFycyBzYWlkIE1pY2hhZWwgT1JvdXJrZSBjaGllZiBtYXJrZXQgc3RyYXRlZ2lzdCBhdCBKb25lc1RyYWRpbmcgaW4gR3JlZW53aWNoIENvbm5lY3RpY3V0IFNwZWFraW5nIG9mIHdoaWNoICBUaGUgUHVuY2ggQm93bCAKClRoZSBGZWRlcmFsIFJlc2VydmUgaXMgc3RlYWRpbHkgcmVtb3ZpbmcgaXRzIGJvbmRidXlpbmcgYWNjb21tb2RhdGlvbiB0aGF0IHRvb2sgaXRzIGJhbGFuY2Ugc2hlZXQgZnJvbSBhYm91dCA5MDAgYmlsbGlvbiB0byBtb3JlIHRoYW4gNCB0cmlsbGlvbiBpbiB0aGUgbGFzdCBzZXZlcmFsIHllYXJzIFRoZSBjZW50cmFsIGJhbmsgaGFkIGJlZW4gYnV5aW5nIDg1IGJpbGxpb24gbW9udGhseSBpbiBVUyBUcmVhc3VyaWVzIGFuZCBtb3J0Z2FnZWJhY2tlZCBzZWN1cml0aWVzIEJ1dCB0aGUgRmVkIGFubm91bmNlZCBpbiBEZWNlbWJlciB0aGF0IGl0IHdvdWxkIGJlZ2luIHJlZHVjaW5nIHRoYXQgYW1vdW50IEF0IGl0cyBjdXJyZW50IHBhY2UgcHVyY2hhc2VzIHdpbGwgZW5kIGJ5IHllYXJlbmQgcmVtb3Zpbmcgc3VwcG9ydCBmb3IgbG93ZXIgcmF0ZXMgdGhhdCBtYW55IHNheSBoYXZlIHB1c2hlZCBpbnZlc3RvcnMgaW50byByaXNraWVyIGFzc2V0cyBsaWtlIHN0b2NrcyBTbG93IGpvYiBhbmQgZWNvbm9taWMgZ3Jvd3RoIHNpbmNlIHRoZSAyMDA3MjAwOSByZWNlc3Npb24gIGhhcyBsZWZ0IGludmVzdG9ycyB3b3JyaWVkIGFib3V0IHdoZXRoZXIgdGhlIGVjb25vbXkgYW5kIG1hcmtldCBjYW4gc3RhbmQgb24gdGhlaXIgb3duIHdpdGhvdXQgdGhlIHN0aW11bHVzIEFuZCByaXNpbmcgcmF0ZXMgd291bGQgaGF2ZSBhIGRldHJpbWVudGFsIGVmZmVjdCBvbiBib3Jyb3dpbmcgY29zdHMgd2hpY2ggaGF2ZSBiZWVuIGF0IHJlY29yZCBsb3dzIGZvciBjb21wYW5pZXMKCk1hcmdpbiBkZWJ0CgpUaGUgdmFsdWUgb2YgVVMgZXF1aXRpZXMgaW52ZXN0b3JzIGJvdWdodCB3aXRoIGJvcnJvd2VkIG1vbmV5IGhhcyBiZWVuIHJpc2luZyBzaW5jZSBKdW5lIE1hcmdpbiBkZWJ0IGFjY291bnRzIHRvdGFsZWQgYSByZWNvcmQgNDg3NiBiaWxsaW9uIGluIEphbnVhcnkgZGF0YSBmcm9tIHRoZSBGaW5hbmNpYWwgSW5kdXN0cnkgUmVndWxhdG9yeSBBdXRob3JpdHkgc2hvd2VkIEl0IHNob3dzIGhlZGdlIGZ1bmRzIGFuZCBvdGhlciBpbnZlc3RvcnMgYXJlIHRha2luZyBvbiBtb3JlIHJpc2sgYW5kIHVzaW5nIGJvcnJvd2VkIG1vbmV5IHRvIGVuaGFuY2UgdGhlaXIgcmV0dXJucyBCb3Jyb3dpbmcgb24gbWFyZ2luIGF0IHRoaXMgbGV2ZWwgaXMgc2VlbiBhcyBhIHNpZ24gb2Ygb3Zlcmx5IGJ1bGxpc2ggc2VudGltZW50IFRvIG1lIHRoaXMgaXMgYSB2ZXJ5IG92ZXJjaGFyZ2VkIGVudmlyb25tZW50IHNhaWQgQnJhZCBMYW1lbnNkb3JmIGNvbWFuYWdlciBvZiB0aGUgYWN0aXZlbHkgbWFuYWdlZCBzaG9ydCBvbmx5IFJhbmdlciBFcXVpdHkgQmVhciBFVEYgSXQgYWRkcyB1cCB0byBhIHZlcnkgcG9vciByaXNrcmV3YXJkIHJhdGlvIGZvciB0aGUgbWFya2V0cGxhY2UKCkluc2lkZXIgc2VsbGluZwoKTGFtZW5zZG9yZiBzYWlkIGhpZ2ggbGV2ZWxzIG9mIGluc2lkZXIgc2VsbGluZyBzdXBwb3J0IHRoZSBpZGVhIHRoYXQgdGhlIG1hcmtldCBpcyBvdmVydmFsdWVkIGFzIHRob3NlIHdpdGggbW9yZSBrbm93bGVkZ2UgYmVsaWV2ZSBpdCBpcyB0aW1lIHRvIHB1bGwgYmFjayBvbiB0aGVpciBvd24gc3RvY2tzIEhlIHNhaWQgdGhlcmUgYXJlIDEwIGluc2lkZXJzIHNlbGxpbmcgdGhlIGNvbXBhbnlzIHN0b2NrIHRvIG9uZSBpbnNpZGVyIGJ1eWluZyBUaGF0IG1heSBiZSBzb21ld2hhdCBpbmNvbmNsdXNpdmUgdGhvdWdoIEN1cnJlbnQgZGF0YSBzaG93cyB0aGUgc2VsbGluZyBiaWFzIGFtb25nIGluc2lkZXJzIGlzIHN0cm9uZyB0aG91Z2ggbm90IGF0IGhpc3RvcmljIGxldmVscyBpbiB0ZXJtcyBvZiB2b2x1bWUgc2FpZCBCZW4gU2lsdmVybWFuIGRpcmVjdG9yIG9mIHJlc2VhcmNoIGF0IEluc2lkZXJTY29yZWNvbSB3aGljaCBkb2VzIG5vdCByZWxlYXNlIGRhdGEgZm9yIHByb3ByaWV0YXJ5IHJlYXNvbnMgSGUgZGlkIHNheSB0aGUgZmlyc3QgcXVhcnRlciBpcyB3aGVuIG1hbnkgY29tcGFuaWVzIGF3YXJkIHRoZWlyIHJlc3RyaWN0ZWQgc3RvY2sgYXMgcGFydCBvZiBjb21wZW5zYXRpb24gd2hpY2ggdGVuZHMgdG8gbGVhZCB0byBhIGxvdCBvZiBzZWxsaW5nIFdoZXJlcyB0aGUgY29ycmVjdGlvbgoKVGhlIFNQIDUwMCBoYXNudCBzZWVuIGEgMTAgcGVyY2VudCBkZWNsaW5lIGZvciBuZWFybHkgdHdvYW5kYWhhbGYgeWVhcnMgd2l0aCB0aGUgbGFzdCBvbmUgY29taW5nIGJldHdlZW4gSnVuZSBhbmQgT2N0b2JlciBvZiAyMDExIGEgcGVyaW9kIHRoYXQgaW5jbHVkZWQgYSBidWRnZXQgZmFjZW9mZiB0aGF0IHJlc3VsdGVkIGluIHRoZSBmaXJzdGV2ZXIgZG93bmdyYWRlIG9mIHRoZSBjcmVkaXQgcmF0aW5nIG9mIHRoZSBVbml0ZWQgU3RhdGVzIFN0b2NrcyBmZWxsIG1vcmUgdGhhbiAyMCBwZXJjZW50IGluIHRoYXQgdGltZSBwZXJpb2QgYnV0IHNpbmNlIHRoZW4gdGhlcmUgaGFzbnQgYmVlbiBhIDEwIHBlcmNlbnQgZHJvcCBvbiBhIGNsb3NpbmdsZXZlbCBiYXNpcyBUaGVyZSB3YXMgYSBuYXJyb3cgbWlzcyBpbiBNYXkgMjAxMiBDb3JyZWN0aW9ucyBhcmUgZ2VuZXJhbGx5IGNvbnNpZGVyZWQgcG9zaXRpdmUgYmVjYXVzZSB0aGV5IGZvcmNlIGludmVzdG9ycyB0byBkZWZlbmQgdGhlaXIgYnVsbGlzaCBwb3NpdGlvbnMgYW5kIHdpdGhvdXQgdGhlbSBjb25jZXJuIGFib3V0IGNvbXBsYWNlbmN5IHJpc2VzIFNlbnRpbWVudAoKQmlhbmNvIFJlc2VhcmNoIG5vdGVzIHRoYXQgdGhlIHdlZWtseSBJbnZlc3RvciBJbnRlbGxpZ2VuY2Ugc3VydmV5cyBzaG93IGp1c3QgMTUgcGVyY2VudCBvZiBuZXdzbGV0dGVyIHdyaXRlcnMgYXJlIGJlYXJpc2ggYmVsb3cgdGhlIGxldmVscyBzZWVuIGF0IHRoZSBoZWlnaHQgb2YgdGhlIG1hcmtldCBpbiAyMDA3IFRoZSBwZXJjZW50YWdlIG9mIHRob3NlIHdobyBhcmUgYnVsbGlzaCB3YXMgNjEgcGVyY2VudCBhdCB0aGUgZW5kIG9mIHRoZSB5ZWFyIGEgbGV2ZWwgbm90IHNlZW4gc2luY2UgMjAwNyBUaGF0IGZpZ3VyZSB0aG91Z2ggaGFzIGRpcHBlZCBhIGJpdCBzaW5jZSAyMDE0IGJlZ2FudAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAb2FydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2UsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEwLTA2LTExVDAwOjAwOjAwWiBUTyAyMDEzLTA3LTMxVDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDkzMjA=</field><field name="title" class="java.lang.String">rO0ABXQAQVMmUCA1MDAgVmFsdWF0aW9uIFNsaXBzIDE5JSBCZWxvdyAyMDExIGFzIFNoYW91bCBBZHZpc2VzIFBhdGllbmNl</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATe13SyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGQxODhlMWU2ZTBjYzhhNzc=</field><field name="symbol" class="java.lang.String">rO0ABXQAAk1O</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATe7A4iAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArFHrhR64U</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArQo9cKPXD</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAqij1wo9cK</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAq64UeuFHs</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAnszMzMzMz</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAsiA==</field><field name="id" class="java.lang.String">rO0ABXQAEDE2YTZmMTI1NTk1Y2M3MDc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJLtAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExNTQ5</field><field name="title" class="java.lang.String">rO0ABXQAP1dhbGwgU3RyZWV0J3MgUmFsbHkgTWF0Y2hlcyAxOTkwcyDigJMgd2l0aCBWYWx1YXRpb25zIDI4JSBMb3dlcg==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6XHBSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGNlODRhMmIwNTMyMGI2MDQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAAk1O</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6cQnCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAysKPXCj1x</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzZmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAysKPXCj1x</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzT1wo9cKP</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxz1wo9cKP</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAGUTA==</field><field name="id" class="java.lang.String">rO0ABXQAEDJkZjgwZDJjYzNiZGY3MTA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFC9AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQAAzI4Nw==</field><field name="title" class="java.lang.String">rO0ABXQAMVNrZXB0aWNzIFBva2UgSG9sZXMgaW4gJ0dyZWF0IFJvdGF0aW9uJyBOYXJyYXRpdmU=</field><field name="content" class="java.lang.String">rO0ABXQVhFRoYXQgc291bmRzIGdvb2QsIGJ1dCB0aGVyZSBpcyBhIHNuYWc6IFRoZSBldmlkZW5jZSBmb3IgdGhpcyBpcyBhIGZldyB3ZWVrcyBvZiBidWxsaXNoIGZ1bmQgZmxvd3MgdGhhdCBhcmUgaGFyZGx5IHVudXN1YWwgZm9yIEphbnVhcnkuIExhdGUtc3RhZ2UgYnVsbCBtYXJrZXRzIGFyZSB0eXBpY2FsbHkgbWFya2VkIGJ5IGFuIGluZmx1eCBvZiBzbWFsbCBpbnZlc3RvcnMgY29taW5nIGxhdGUgdG8gdGhlIHBhcnR5IC0gc3VjaCBhcyB3aGVuIHlvdXIgd2FpdGVyIHN0YXJ0cyBnaXZpbmcgeW91IHN0b2NrIHRpcHMuIEZvciB0aGF0IHRvIGhhcHBlbiB5b3UgbmVlZCBhIGdvb2Qgc3RvcnkuIFRoZSAiZ3JlYXQgcm90YXRpb24sIiB3aXRoIGl0cyBtb251bWVudGFsIHRvbmUsIGlzIHRoZSBwZXJmZWN0IG5hcnJhdGl2ZSB0byBtYWtlIHlvdSBmZWVsIGxpa2UgeW91J3JlIG1pc3Npbmcgb3V0LiBFdmVuIGlmIHNvbWV0aGluZyBhcHByb2FjaGluZyBhICJncmVhdCByb3RhdGlvbiIgaGFzIGJlZ3VuLCBpdCBpcyBub3QgbmVjZXNzYXJpbHkgYnVsbGlzaCBmb3IgbWFya2V0cy4gVGhvc2Ugd2hvIHRoaW5rIHRoZXkgYXJlIGVhcmx5IHRvIHRoZSBwYXJ0eSBtYXkgYWN0dWFsbHkgYmUgYXJyaXZpbmcgbGF0ZS4gSW52ZXN0b3JzIHB1bXBlZCAkMjAuNyBiaWxsaW9uIGludG8gc3RvY2tzIGluIHRoZSBmaXJzdCBmb3VyIHdlZWtzIG9mIHRoZSB5ZWFyLCB0aGUgc3Ryb25nZXN0IGZvdXItd2VlayBydW4gc2luY2UgQXByaWwgMjAwMCwgYWNjb3JkaW5nIHRvIExpcHBlci4gQnV0IHRoYXQgcGFsZXMgaW4gY29tcGFyaXNvbiB3aXRoIHRoZSAkNDEwIGJpbGxpb24geWFua2VkIGZyb20gdGhvc2UgZnVuZHMgc2luY2UgdGhlIHN0YXJ0IG9mIDIwMDguICJJJ20gbm90IHN1cmUgeW91IHdhbnQgdG8gdGFrZSBhIGNvdXBsZSBvZiB3ZWVrcyBhbmQgZXh0cmFwb2xhdGUgaXQgaW50byB3aGF0ZXZlciB0cmVuZCB5b3Ugd2FudCwiIHNhaWQgVG9iaWFzIExldmtvdmljaCwgY2hpZWYgVS5TLiBlcXVpdHkgc3RyYXRlZ2lzdCBhdCBDaXRpZ3JvdXAuICJXZSBoYXZlIGhhZCBpbnN0YW5jZXMgd2hlcmUgZXF1aXR5IGZsb3dzIGhhdmUgcGlja2VkIHVwIGluIHRoZSBsYXN0IHR3bywgdGhyZWUsIGZvdXIgeWVhcnMgd2hlbiBtYXJrZXRzIGhhdmUgcGlja2VkIHVwLiBUaGV5J3ZlIGdlbmVyYWxseSBub3QgYmVlbiBzaWduYWxzIG9mIGEgY29udGludWF0aW9uIG9mIHRoYXQgdHJlbmQuIiBUaGUgUyZQIDUwMCByb3NlIDUgcGVyY2VudCBpbiBKYW51YXJ5LCBpdHMgYmVzdCBtb250aCBzaW5jZSBPY3RvYmVyIDIwMTEgYW5kIGl0cyBiZXN0IEphbnVhcnkgc2luY2UgMTk5NywgZHJpdmluZyBzcGVjdWxhdGlvbiB0aGF0IHJldGFpbCBpbnZlc3RvcnMgd2VyZSBmbG9vZGluZyBiYWNrIGludG8gdGhlIHN0b2NrIG1hcmtldC4gSGVhZGluZyBpbnRvIGFub3RoZXIgYnVzeSB3ZWVrIG9mIGVhcm5pbmdzLCB0aGUgZXF1aXR5IG1hcmtldCBpcyBrbm9ja2luZyBvbiB0aGUgZG9vciBvZiBhbGwtdGltZSBoaWdocyBkdWUgdG8gcG9zaXRpdmUgc2VudGltZW50IGluIHN0b2NrcywgYW5kIHRoYXQgY2Fubm90IGJlIGlnbm9yZWQgZW50aXJlbHkuIFRoZSBTdGFuZGFyZCAmIFBvb3IncyA1MDAgSW5kZXggZW5kZWQgdGhlIHdlZWsgYWJvdXQgNCBwZXJjZW50IGZyb20gYW4gYWxsLXRpbWUgaGlnaCB0b3VjaGVkIGluIE9jdG9iZXIgMjAwNy4gVGhpcyB3ZWVrIHdpbGwgYnJpbmcgcmVzdWx0cyBmcm9tIGluc3VyZXJzIEFsbHN0YXRlICBhbmQgVGhlIEhhcnRmb3JkLCBhcyB3ZWxsIGFzIGZyb20gV2FsdCBEaXNuZXksIENvY2EtQ29sYSBFbnRlcnByaXNlcyBhbmQgVmlzYS4gQnV0IGEgY29tcGFyaXNvbiBvZiBmbG93cyBpbiBKYW51YXJ5LCBhIHNlYXNvbmFsIHN0cm9uZyBtb250aCBmb3IgdGhlIHN0b2NrIG1hcmtldCwgc2hvd3MgdGhhdCB0aGlzIEphbnVhcnksIHdoaWxlIHN0cm9uZywgaXMgbm90IHRoYXQgdW51c3VhbC4gSW4gSmFudWFyeSAyMDExLCBpbnZlc3RvcnMgbW92ZWQgJDIzLjkgYmlsbGlvbiBpbnRvIHN0b2NrIGZ1bmRzIGFuZCAkMjguNiBiaWxsaW9uIGluIDIwMDYsIGJ1dCBuZWl0aGVyIGZvcmVzaGFkb3dlZCBtYXNzaXZlIGluZmxvd3MgdGhlIHJlc3Qgb2YgdGhhdCB5ZWFyLiBGdXJ0aGVybW9yZSwgaW4gMjAwNiB0aGUgbWFya2V0IGdhaW5lZCBtb3JlIHRoYW4gMTMgcGVyY2VudCB3aGlsZSBpbiAyMDExIGl0IHdhcyBmbGF0LiBTdHJvbmcgaW5mbG93cyBpbiBKYW51YXJ5IGNhbiBvY2N1ciBmb3IgYSBudW1iZXIgb2YgcmVhc29ucy4gVGhlcmUgd2VyZSBhIGxvdCBvZiBzcGVjaWFsIGRpdmlkZW5kcyBpc3N1ZWQgaW4gRGVjZW1iZXIgdGhhdCBuZWVkIHJlaW52ZXN0aW5nLCBhbmQgc29tZSBvZiB0aGUgZnVuZHMgcmFpc2VkIGluIERlY2VtYmVyIHRheC1zZWxsaW5nIGFsc28gZmluZCB0aGVpciB3YXkgYmFjayBpbnRvIHRoZSBtYXJrZXQuIER1cmluZyB0aGUgaGVpZ2h0IG9mIHRoZSB0ZWNoIGJ1YmJsZSBpbiAyMDAwLCB3aGVuIHJldGFpbCBpbnZlc3RvcnMgd2VyZSByZWFsbHkgZW1icmFjaW5nIHN0b2NrcywgYSBzdGFnZ2VyaW5nICQ0Mi43IGJpbGxpb24gZmxvd2VkIGludG8gZXF1aXRpZXMgaW4gSmFudWFyeSBvZiB0aGF0IHllYXIsIGRvdWJsZSB0aGUgYW1vdW50IHRoYXQgZmxvd2VkIGluIHRoaXMgSmFudWFyeS4gVGhhdCBkaWRuJ3QgZW5kIHdlbGwsIGFzIHN0b2NrcyBwZWFrZWQgaW4gTWFyY2ggb2YgdGhhdCB5ZWFyIGJlZm9yZSBkcm9wcGluZyBvdmVyIHRoZSBuZXh0IHR3by1wbHVzIHllYXJzLiBNT00gQU5EIFBPUCBTVElMTCBXQVJZIEFyZ3VpbmcgYWdhaW5zdCBhICJncmVhdCByb3RhdGlvbiIgaXMgbm90IG5lY2Vzc2FyaWx5IGEgYmVhcmlzaCBhcmd1bWVudCBhZ2FpbnN0IHN0b2Nrcy4gVGhlIHN0b2NrIG1hcmtldCBoYXMgZG9uZSB3ZWxsIHNpbmNlIHRoZSBjcmlzaXMuIERlc3BpdGUgdGhlIGh1Z2Ugb3V0Zmxvd3MsIHRoZSBTJlAgNTAwIGhhcyByaXNlbiBtb3JlIHRoYW4gMTIwIHBlcmNlbnQgc2luY2UgTWFyY2ggMjAwOSBvbiBhIHNsb3dseSBpbXByb3ZpbmcgZWNvbm9teSBhbmQgY29ycG9yYXRlIGVhcm5pbmdzLiBUaGlzIGVhcm5pbmdzIHNlYXNvbiwgYSBtYWpvcml0eSBvZiBTJlAgNTAwIGNvbXBhbmllcyBhcmUgYmVhdGluZyBlYXJuaW5ncyBmb3JlY2FzdC4gVGhhdCdzIGFsc28gdGhlIGNhc2UgZm9yIHJldmVudWUsIHdoaWNoIGlzIGEgZGVwYXJ0dXJlIGZyb20gdGhlIHByZXZpb3VzIHR3byByZXBvcnRpbmcgcGVyaW9kcyB3aGVyZSBsZXNzIHRoYW4gNTAgcGVyY2VudCBvZiBjb21wYW5pZXMgYmVhdCByZXZlbnVlIGV4cGVjdGF0aW9ucywgYWNjb3JkaW5nIHRvIFRob21zb24gUmV1dGVycyBkYXRhLiBNZWFud2hpbGUsIHRob3NlIG9uIHRoZSBmcm9udCBsaW5lcyBzYXkgbW9tIGFuZCBwb3AgaW52ZXN0b3JzIGFyZSBzdGlsbCB3YXJ5IG9mIGVxdWl0aWVzIGFmdGVyIHRoZSBmaW5hbmNpYWwgY3Jpc2lzLiAiQSBsb3Qgb2YgcGVvcGxlIEkgdGFsayB0byBhcmUgdmVyeSByZWx1Y3RhbnQgdG8gbWFrZSBhbiBlbW90aW9uYWwgY29tbWl0bWVudCB0byB0aGUgc3RvY2sgbWFya2V0IGFuZCByZWdhcmRsZXNzIG9mIGluY29tZSBhY3Rpdml0eSBpbiBKYW51YXJ5LCBJIHRoaW5rIHRoYXQncyBzdGlsbCB0aGUgY2FzZSwiIHNhaWQgRGF2aWQgSm95LCBjaGllZiBtYXJrZXQgc3RyYXRlZ2lzdCBhdCBDb2x1bWJpYSBNYW5hZ2VtZW50IEFkdmlzb3JzIGluIEJvc3Rvbiwgd2hlcmUgaGUgaGVscHMgb3ZlcnNlZSAkNTcxIGJpbGxpb24uIEpveSwgc3BlYWtpbmcgZnJvbSBhIGNvbmZlcmVuY2UgaW4gUGhvZW5peCwgc2F5cyBtb3N0IG9mIHRoZSBwZW9wbGUgYXNraW5nIGhpbSBhYm91dCB0aGUgImdyZWF0IHJvdGF0aW9uIiBhcmUgZnVuZCBtYW5hZ2VtZW50IGluZHVzdHJ5IGluc2lkZXJzIHdobyBhcmUgaW50ZXJlc3RlZCBpbiB0aGUgZXh0cmEgYnVzaW5lc3MgYSBmbG9vZCBvZiBzdG9jayBpbnZlc3RvcnMgd291bGQgYnJpbmcuIEhlIGFsc28gcG9pbnRlZCBvdXQgdGhhdCBmbG93cyBpbnRvIGJvbmQgZnVuZHMgd2VyZSBwb3NpdGl2ZSBpbiB0aGUgbW9udGggb2YgSmFudWFyeSwgaGFyZGx5IGFuIGluZGljYXRpb24gb2YgYSByb3RhdGlvbi4gQ2l0aSdzIExldmtvdmljaCBhbHNvIGFyZ3VlcyB0aGF0IGJvbmQgaW52ZXN0b3JzIGFyZSB1bmxpa2VseSB0byBnaXZlIHVwIGEgMzAteWVhciByYWxseSBpbiBib25kcyBzbyBxdWlja2x5LiBIZSBzYWlkIHN0b2NrcyBvbmx5IGJlZ2FuIHRvIHNlZSBjb25zaXN0ZW50IG91dGZsb3dzIDI2IG1vbnRocyBhZnRlciB0aGUgdGVjaCBidWJibGUgYnVyc3QgaW4gTWFyY2ggMjAwMC4gQnkgdGhhdCByZWFkaW5nIGl0IGNvdWxkIGJlIGFub3RoZXIgeWVhciBiZWZvcmUgYSBzZXJpb3VzIHJvdGF0aW9uIGJlZ2lucy4gT24gdG9wIG9mIHRoYXQsIHN1YnN0YW50aWFsIGZsb3dzIGNvbnRpbnVlIHRvIG1ha2UgdGhlaXIgd2F5IGludG8gYm9uZHMsIGV2ZW4gaWYgaXQgaXNuJ3QgbG93LXlpZWxkaW5nIGdvdmVybm1lbnQgZGVidC4gSmFudWFyeSAyMDEzIHdhcyB0aGUgc2Vjb25kIGJlc3QgSmFudWFyeSBvbiByZWNvcmQgZm9yIHRoZSBpc3N1YW5jZSBvZiBVLlMgaGlnaC1ncmFkZSBkZWJ0LCB3aXRoICQxMTEuNzI1IGJpbGxpb24gaXNzdWVkIGR1cmluZyB0aGUgbW9udGgsIGFjY29yZGluZyB0byBJbnRlcm5hdGlvbmFsIEZpbmFuY2UgUmV2aWV3LiBCaWxsIEdyb3NzLCB3aG8gcnVucyB0aGUgJDI4NSBiaWxsaW9uIFBpbWNvIFRvdGFsIFJldHVybiBGdW5kLCB0aGUgd29ybGQncyBsYXJnZXN0IGJvbmQgZnVuZCwgY29tbWVudGVkIG9uIFR3aXR0ZXIgb24gVGh1cnNkYXkgdGhhdCAiSmFudWFyeSBmbG93cyBhdCBQaW1jbyBzaG93IGZldyBzaWducyBvZiBib25kL3N0b2NrIHJvdGF0aW9uLCIgYWRkaW5nIHRoYXQgY2FzaCBhbmQgbW9uZXkgbWFya2V0cyBtYXkgYmUgdGhlIHNvdXJjZSBvZiBpbmZsb3dzIGludG8gc3RvY2tzLiBJbmRlZWQsIHRoZSBldmlkZW5jZSBzdWdnZXN0cyBzb21lIG9mIHRoZSBtb25leSB0aGF0IHdlbnQgaW50byBzdG9jayBmdW5kcyBpbiBKYW51YXJ5IGNhbWUgZnJvbSBtb25leSBtYXJrZXRzIGFmdGVyIGEgcGVyaW9kIGluIERlY2VtYmVyIHdoZW4gaW52ZXN0b3JzLCB3b3JyaWVkIGFib3V0IHRoZSBidWRnZXQgdW5jZXJ0YWludHkgaW4gV2FzaGluZ3Rvbiwgc3RhcnRlZCBwYXJraW5nIG1vbmV5IGluIGxhdGUgMjAxMi4gRGF0YSBmcm9tIGlNb25leU5ldCBzaG93cyBpbnZlc3RvcnMgcGxhY2VkICQxMjMgYmlsbGlvbiBpbiBtb25leSBtYXJrZXQgZnVuZHMgaW4gdGhlIGxhc3QgdHdvIG1vbnRocyBvZiB0aGUgeWVhci4gSW4gdHdvIHdlZWtzIGluIEphbnVhcnksIGludmVzdG9ycyB3aXRoZHJldyAkMzEuNDUgYmlsbGlvbiBvZiB0aGF0LCB0aGUgbW9zdCBzaW5jZSBNYXJjaCAyMDEyLiBCdXQgbGF0ZXIgaW4gdGhlIG1vbnRoIG1vbmV5IGFjdHVhbGx5IHN0YXJ0ZWQgZmxvd2luZyBiYWNrLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATyeo8sAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDkzY2ZkNGVmNzQ1Y2JlNDA=</field><field name="symbol" class="java.lang.String">rO0ABXQABkRJUy5NWA==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATyjyicAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECFd9cKPXCk</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECFd9cKPXCk</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECFd9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECFd9cKPXCk</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECFbgAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGY1YTI2ZTFiMjMwZTVkNjc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMtbAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM2NDk=</field><field name="title" class="java.lang.String">rO0ABXQAK01hbnkgUHJvcyBVbmRhdW50ZWQgYnkgU3RvY2tzJyBMb2Z0eSBMZXZlbHM=</field><field name="content" class="java.lang.String">rO0ABXQUAlN0b2NrcyBoYXZlIHNvYXJlZCBpbiAyMDEzLCB3aXRoIHRoZSBEb3cgY2xpbWJpbmcgYWxtb3N0IDExIHBlcmNlbnQgdG8gaGl0IGEgc2VyaWVzIG9mIG5ldyBhbGwtdGltZSBoaWdocyB3aGlsZSB0aGUgUyZQIDUwMCBoYXMganVtcGVkIDkuNCBwZXJjZW50LCBmYWxsaW5nIGp1c3Qgc2hvcnQgb2YgaXRzIGFsbC10aW1lIGNsb3NpbmcgaGlnaCBhZnRlciByaXNpbmcgZm9yIDEwIG9mIHRoZSBwYXN0IDExIHdlZWtzLiBBbmQgeWV0LCBhbmFseXN0cyBmb3IgdGhlIG1vc3QgcGFydCBzZWUgZXF1aXRpZXMgYXMgZmFpcmx5IGNoZWFwLiBUaGUgcmFsbHkgaGFzIHNsb3dlZCwgaG93ZXZlci4gSW4gdGhlIGxhc3QgZWlnaHQgdHJhZGluZyBzZXNzaW9ucywgdGhlIFMmUCA1MDAgaGFzIG1hbmFnZWQgYSBkYWlseSBnYWluIG9mIG1vcmUgdGhhbiAwLjUgcGVyY2VudCBqdXN0IG9uY2UuIFF1ZXN0aW9ucyByZW1haW4gYWJvdXQgdGhlIHBvdGVudGlhbCBpbXBhY3Qgb2YgVS5TLiBidWRnZXQgbmVnb3RpYXRpb25zIG9yIHRoZSBGZWRlcmFsIFJlc2VydmUncyBwbGFucyBpbiBjb250aW51aW5nIGl0cyBtYXNzaXZlIG1vbmV0YXJ5IHN0aW11bHVzLiBUaGUgRmVkIG1lZXRzIHRoaXMgd2Vlay4gVGFrZW4gb24gaXRzIG93biwgYW5hbHlzdHMgc2VlIHBvdGVudGlhbCBmb3IgbW9yZSBnYWlucyBpbiB0aGUgVS5TLiBzdG9jayBtYXJrZXQsIGJhc2VkIG9uIG1ldHJpY3MgbGlrZSBlYXJuaW5ncyBwcm9zcGVjdHMgYW5kIHZhbHVhdGlvbi4gVGhlIGZvcndhcmQgMTItbW9udGggcHJpY2UtdG8tZWFybmluZ3MgcmF0aW8gZm9yIHRoZSBTJlAgNTAwIGlzIGN1cnJlbnRseSAxMy41LCB3aGljaCBpcyBhYm91dCA5IHBlcmNlbnQgbGVzcyB0aGFuIHRoZSBPY3RvYmVyIDIwMDcgcmF0aW8gb2YgMTQuOCB3aGVuIHRoZSBTJlAgbGFzdCBoaXQgYSByZWNvcmQuICJUaGlzIHNob3dzIHRoYXQgc3RvY2tzIGFyZSBjaGVhcGVyIHRoYW4gdGhleSB3ZXJlIGF0IHRoZSB0aW1lIG9mIHRoZSBsYXN0IGhpZ2gsIGFuZCBhdCB0aGUgc2FtZSB0aW1lLCBhbHRlcm5hdGl2ZSBhc3NldHMgbGlrZSBib25kcyBhcmUgbXVjaCBtb3JlIGV4cGVuc2l2ZSwiIHNhaWQgUGF1bCBaZW1za3ksIGhlYWQgb2YgYXNzZXQgYWxsb2NhdGlvbiBhdCBJTkcgSW52ZXN0bWVudCBNYW5hZ2VtZW50IGluIE5ldyBZb3JrLCB3aG8gaGVscHMgb3ZlcnNlZSAkMTcwIGJpbGxpb24uICJXZSBhcmUgYXQgcmVjb3JkIGxldmVscywgYnV0IHlvdSBuZWVkIHRvIGxvb2sgYXQgc3RvY2tzIGluIHRoZSByaWdodCBjb250ZXh0LCBhbmQgaW4gdGhhdCBjb250ZXh0LCB0aGV5J3JlIG5vdCBleHBlbnNpdmUgYXQgYWxsLiIgVGhlIFMmUCA1MDAncyBlYXJuaW5ncyB5aWVsZCDigJMgYSByZXZlcnNlIG9mIHRoZSBQL0UgcmF0aW8g4oCTIGN1cnJlbnRseSBzdGFuZHMgYXQgNy4xIHBlcmNlbnQsIGNvbXBhcmVkIHdpdGggNi40MSBwZXJjZW50IGZvciB0aGUgQm9mQSBNZXJyaWxsIEx5bmNoIFVTIEhpZ2ggWWllbGQgSW5kZXguIFRoYXQncyBhbiBhbm9tYWx5IGluIHRoZSBtYXJrZXRzOyB0aGUgZWFybmluZ3MgeWllbGQgaGFzIGdlbmVyYWxseSBiZWVuIGxvd2VyIHRoYW4gYSBiZW5jaG1hcmsganVuay1ib25kIHlpZWxkIGJlY2F1c2UgaXQgbWVhc3VyZXMgdGhlIHJpc2sgb2Ygb3duaW5nIHRoZSBoaWdoZXN0LXF1YWxpdHkgc3RvY2tzIHZlcnN1cyB0aGUgZXhwZWN0ZWQgcmV0dXJuIG9uIHRoZSBsb3dlc3QtcXVhbGl0eSBib25kcy4gVGhlIGN1cnJlbnQgUC9FIHJhdGlvIGlzIGFsc28gYmVsb3cgdGhlIGhpc3RvcmljIGF2ZXJhZ2Ugb2YgMTQuOCwgYWNjb3JkaW5nIHRvIFRob21zb24gUmV1dGVycyBkYXRhIGRhdGluZyBiYWNrIHRvIDE5NjguIFRoZSBTJlAgNTAwIHdvdWxkIG5lZWQgdG8gcmlzZSB0byBhYm91dCAxLDY0NyB0byBiZWNvbWUgaW4gbGluZSB3aXRoIHRoZSBoaXN0b3JpYyBhdmVyYWdlIC0gYWJvdXQgNS42IHBlcmNlbnQgYWJvdmUgY3VycmVudCBsZXZlbHMsIGFjY29yZGluZyB0byBTdGFuZGFyZCAmIFBvb3Incy4gSW50ZXJlc3QgcmF0ZXMgcmVtYWluIG5lYXIgcmVjb3JkIGxvd3Mgd2hpbGUgZGl2aWRlbmRzIGFyZSBncm93aW5nLCBhbm90aGVyIHdheSB0aGF0IHN0b2NrcyBhcmUgb3V0c2hpbmluZyBib25kcy4gSW4gdGhlIG1vc3QgcmVjZW50IHF1YXJ0ZXIsIHRoZSBhdmVyYWdlIGRpdmlkZW5kIHlpZWxkIGZvciBTJlAgNTAwIGNvbXBhbmllcyB3YXMgMi4xOSBwZXJjZW50LCBtb3JlIHRoYW4gdGhlIDEuODkgcGVyY2VudCB5aWVsZCBpbiB0aGUgZm91cnRoIHF1YXJ0ZXIgb2YgMjAwNywgdGhlIHBlcmlvZCBvZiB0aGUgbGFzdCBtYXJrZXQgcGVhaywgYWNjb3JkaW5nIHRvIFN0YW5kYXJkICYgUG9vcidzLiBJbiAyMDEyLCA0MDMgUyZQIDUwMCBjb21wb25lbnRzIHBhaWQgYSBkaXZpZGVuZCwgdGhlIGhpZ2hlc3QgbnVtYmVyIHNpbmNlIDE5OTguIEluIGNvbnRyYXN0LCB0aGUgMTAteWVhciBVLlMuIFRyZWFzdXJ5IG5vdGUgY3VycmVudGx5IHlpZWxkcyAyIHBlcmNlbnQsIHNvIHRoZSBkaXZpZGVuZCB5aWVsZCBvbiB0aGUgUyZQIDUwMCB3b3VsZCBwYXkgbW9yZSB0aGFuIHRoZSBib25kLCB3aXRob3V0IGV2ZW4gZmFjdG9yaW5nIGluIHBvdGVudGlhbCBwcmljZSBncm93dGguIMKgICBXSEVSRSBTSE9VTEQgU1RPQ0tTIEJFPyBUaGUgUyZQIDUwMCBpcyBhbHNvIHRyYWRpbmcgd2VsbCBiZWxvdyBpdHMgaW50cmluc2ljIHZhbHVlLCBhbm90aGVyIG1ldHJpYyBvZiBlYXJuaW5ncy1iYXNlZCB2YWx1YXRpb24gdGhhdCBlc3RpbWF0ZXMgd2hlcmUgYSBzZWN1cml0eSBzaG91bGQgdHJhZGUsIGJhc2VkIG9uIGl0cyBleHBlY3RlZCBncm93dGggdHJhamVjdG9yeSBvdmVyIHRoZSBuZXh0IGRlY2FkZSBvciBtb3JlLiBUaGUgaW5kZXggaXMgc2VlbiBhcyBoYXZpbmcgYSBwcmljZSB0byBpbnRyaW5zaWMgdmFsdWUgcmF0aW8gb2YgMC44NSwgYWNjb3JkaW5nIHRvIFRob21zb24gUmV1dGVycyBTdGFyTWluZSwgd2hpY2ggbWVhbnMgaXQgd291bGQgaGF2ZSB0byByaXNlIDE1IHBlcmNlbnQgdG8gYmUgaW4gbGluZSB3aXRoIGl0cyBlYXJuaW5ncyBncm93dGggdHJhamVjdG9yeS4gTW9yZSB0aGFuIHR3by10aGlyZHMgb2YgY29tcGFuaWVzIGFyZSBiZWxvdyB0aGVpciBpbnRyaW5zaWMgdmFsdWUsIGluY2x1ZGluZyBzb21lIG9mIHRoZSBiaWdnZXN0LiBBcHBsZSBJbmMuLCB3aGljaCBoYXMgdHVtYmxlZCAxNi42IHBlcmNlbnQgdGhpcyB5ZWFyLCBpcyAyOC4yIHBlcmNlbnQgdW5kZXIgaXRzIGludHJpbnNpYyB2YWx1ZSwgYmFzZWQgb24gaXRzIEZyaWRheSBjbG9zaW5nIHByaWNlLCB3aGlsZSBFeHhvbiBNb2JpbCBDb3JwLiBpcyAyMy4zIHBlcmNlbnQgdW5kZXIgYW5kIEJhbmsgb2YgQW1lcmljYSBDb3JwLiBpcyA1My4zIHBlcmNlbnQgdW5kZXIgaXRzIGludHJpbnNpYyB2YWx1ZS4gT3RoZXIgY29tcGFuaWVzIHNob3cgc2lnbnMgb2YgYmVpbmcgb3ZlcmJvdWdodC4gR29vZ2xlIEluYy4sIHdoaWNoIGhhcyBqdW1wZWQgYWJvdXQgMTUgcGVyY2VudCBzbyBmYXIgdGhpcyB5ZWFyLCBpcyBhYm91dCAxNiBwZXJjZW50IGhpZ2hlciB0aGFuIGludHJpbnNpYyB2YWx1YXRpb24uIEFtYXpvbi5jb20gSW5jLiAgaXMgODUgcGVyY2VudCBhYm92ZSBpdHMgaW50cmluc2ljIHZhbHVhdGlvbiBvZiAkMzkuMTcuICJZb3UgbmVlZCB0byBiZSBzZWxlY3RpdmUuIFdoaWxlIG9uIHRoZSB3aG9sZSwgd2UncmUgaW4gYSBjb25zdHJ1Y3RpdmUgbWFya2V0IHN1cHBvcnRlZCBieSBkaXZpZGVuZHMgYW5kIGVhcm5pbmdzLCBzb21lIGNvbXBhbmllcyBoYXZlIHByb2JhYmx5IHNlZW4gcGVhayBsZXZlbHMgYWxyZWFkeSwiIHNhaWQgSm9obiBDYXJleSwgcG9ydGZvbGlvIG1hbmFnZXIgYXQgUGlvbmVlciBJbnZlc3RtZW50IE1hbmFnZW1lbnQgaW4gQm9zdG9uLCB3aGljaCBoYXMgYWJvdXQgJDIwMCBiaWxsaW9uIGluIGFzc2V0cy4gVGhlIG1hcmtldCdzIGdhaW5zIHRoaXMgeWVhciBoYXZlIGNvbWUgb24gYWNjb21tb2RhdGl2ZSBtb25ldGFyeSBwb2xpY3kgZnJvbSB0aGUgRmVkZXJhbCBSZXNlcnZlIGFuZCBzdHJvbmcgY29ycG9yYXRlIHJlc3VsdHMsIHR3byBmYWN0b3JzIHRoYXQgaW52ZXN0b3JzIGRvbid0IHNlZSBnb2luZyBhd2F5IGFueSB0aW1lIHNvb24uIFRoZSBGZWRlcmFsIFJlc2VydmUncyBpbnRlcmVzdC1yYXRlLXNldHRpbmcgY29tbWl0dGVlIGlzIHNjaGVkdWxlZCB0byByZWxlYXNlIGEgZm9ybWFsIHBvbGljeSBzdGF0ZW1lbnQgV2VkbmVzZGF5IGF0IDIgcC5tLi4gRGVzcGl0ZSBjYWxscyBmcm9tIHNvbWUgb2YgdGhlIGJvYXJkJ3MgbW9yZSBoYXdraXNoIG1lbWJlcnMgdG8gcmVkdWNlIGFzc2V0IHB1cmNoYXNlcywgdGhlIEZlZCBpcyBleHBlY3RlZCB0byBjb250aW51ZSBvbiBpdHMgY3VycmVudCBwYXRoLiBSZWNlbnQgZGF0YSAtIHJhbmdpbmcgZnJvbSByZXRhaWwgc2FsZXMgYW5kIG1hbnVmYWN0dXJpbmcgdG8gZW1wbG95bWVudCAtIGhhcyBzaG93biB0aGUgZWNvbm9teSBpcyBwaWNraW5nIHVwIHNvbWUgbW9tZW50dW0uIEJ1dCB0aGUgaGlnaCBVLlMuIHVuZW1wbG95bWVudCByYXRlIG9mIDcuNyBwZXJjZW50IGdpdmVzIHRoZSBwb2xpY3kgY29tbWl0dGVlIHJvb20gdG8ga2VlcCBidXlpbmcgJDg1IGJpbGxpb24gYSBtb250aCBpbiBib25kcyB0byBrZWVwIGludGVyZXN0IHJhdGVzIGxvdy4gQW5kIHdoaWxlIHRoZSBzdG9jayBtYXJrZXQncyB0d28gcHJldmlvdXMgcGVha3Mgd2VyZSBmb2xsb3dlZCBieSByZWNlc3Npb25zIHN0ZW1taW5nIGZyb20gdGhlIGJ1cnN0aW5nIG9mIHRoZSBkb3QtY29tIGJ1YmJsZSBpbiAyMDAwIGFuZCB0aGUgMjAwOCBjcmVkaXQgY3Jpc2lzLCB0aGVyZSBpcyBubyBhcHBhcmVudCBlcXVpdmFsZW50IHRvZGF5LiAiSSBkb24ndCBzZWUgYW55dGhpbmcgdGhhdCBsb29rcyBsaWtlIGEgc3BlY3VsYXRpdmUgYnViYmxlLCBhbmQgdGhlcmUncyBubyBzaWduIG9mIHRoZSBldXBob3JpYSB0aGF0IG1hcmtzIHRoZSBlbmQgb2YgYSBidWxsIG1hcmtldCwiIHNhaWQgS2VuIEZpc2hlciwgd2hvIG92ZXJzZWVzICQ0NiBiaWxsaW9uIGF0IEZpc2hlciBJbnZlc3RtZW50cyBpbiBXb29kc2lkZSwgQ2FsaWZvcm5pYS4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT12t/SAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGNkNjI4MzAzYWI2MmM2MDk=</field><field name="symbol" class="java.lang.String">rO0ABXQACVRSSS1QQi5UTw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT173lCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4NcKPXCj2</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4XrhR64Uf</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4NcKPXCj2</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4XrhR64Uf</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3D1wo9cKP</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAADhA==</field><field name="id" class="java.lang.String">rO0ABXQAEDYwOGJkNWFmYzY1NTJiMmM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKtqAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExOTI0</field><field name="title" class="java.lang.String">rO0ABXQAQFMmUCA1MDAgaW4gQ2hlYXBlc3QgQnVsbCBNYXJrZXQgU2luY2UgUmVhZ2FuIFRyYWRlIDI2JSBGcm9tIFBlYWs=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATsXQHsAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGRlYzg3ZWRjMDk2NzRhNTI=</field><field name="symbol" class="java.lang.String">rO0ABXQAA05PVg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATscZtcAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSNwo9cKPX</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSOPXCj1wp</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBRy4UeuFHs</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBR6FHrhR64</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBO4AAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAD2dDA==</field><field name="id" class="java.lang.String">rO0ABXQAEDgwNmIwZTNjNTBiMWExYjY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mIgxAAAA==</field></document></documents><date>2015-05-07T06:49:14-0500</date></cacheEntry>
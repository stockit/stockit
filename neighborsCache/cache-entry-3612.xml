<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0Em5TcHVycmVkIGludG8gYWN0aW9uIGJ5IGZhbGxpbmcgcmV2ZW51ZSBtb3VudGluZyBsb3NzZXMgYW5kIHRoZSBuZWVkIHRvIGNvbnZpbmNlIHJlZ3VsYXRvcnMgdGhleSBhcmUgbm8gbG9uZ2VyIHRvbyBiaWcgdG8gZmFpbCBiYW5rcyBhY3Jvc3MgdGhlIGdsb2JlIGhhdmUgc2hydW5rIHJhZGljYWxseSBzaW5jZSB0aGUgMjAwOCBjb2xsYXBzZSBvZiBVUyBiYW5rIExlaG1hbiBCcm90aGVycyBzcGFya2VkIHRoZSBmaW5hbmNpYWwgY3Jpc2lzIExhc3QgeWVhciB0aGUgdGlkZSBvZiBiYWQgbmV3cyBiZWdhbiB0byB0dXJuIGZvciBFdXJvcGVhbiBiYW5rcyB3aGljaCBhcmUgYW1vbmcgdGhlIHJlZ2lvbnMgbGFyZ2VzdCBlbXBsb3llcnMgSGVscGVkIGJ5IHJlY292ZXJpbmcgZWNvbm9taWVzIGFuZCByZWNlZGluZyBmZWFycyBmb3IgdGhlIGV1cm8gem9uZXMgZnV0dXJlIHRoZSBiZW5jaG1hcmsgU3RveHggRXVyb3BlIDYwMCBCYW5rcyBpbmRleCAgcm9zZSAxOSBwZXJjZW50IG91dHBhY2luZyB0aGUgMTc0IHBlcmNlbnQgaW5jcmVhc2UgaW4gbXVsdGlzZWN0b3Igc3RvY2tzIEJ1dCBkZXNwaXRlIHRoZSBpbXByb3ZlZCBvdXRsb29rIEV1cm9wZXMgMzAgbGFyZ2VzdCBiYW5rcyBieSBtYXJrZXQgdmFsdWUgY3V0IHN0YWZmIGJ5IDgwMDAwIGluIDIwMTMgY2FsY3VsYXRpb25zIGJ5IFJldXRlcnMgYmFzZWQgb24gdGhlaXIgeWVhcmVuZCBzdGF0ZW1lbnRzIHNob3dlZCBSZWNydWl0bWVudCBjb25zdWx0YW50cyB3YXJuIHdvcmtlcnMgaG9wZXMgZm9yIGEgdHVybmFyb3VuZCB0aGlzIHllYXIgY291bGQgYmUgbWlzcGxhY2VkIGJhZCBuZXdzIGZvciBjb3VudHJpZXMgbGlrZSBTcGFpbiB3aGVyZSB0ZW5zIG9mIHRob3VzYW5kcyBvZiBiYW5rIGxheW9mZnMgaGF2ZSBoZWxwZWQgZHJpdmUgdW5lbXBsb3ltZW50IHRvIDI2IHBlcmNlbnQgSG93ZXZlciB3aGlsZSBwYWluZnVsIGZvciB0aGUgcGVvcGxlIHdobyBoYXZlIGxvc3QgdGhlaXIgam9icyB0aGUgcmVkdWN0aW9uIG9mIGxhcmdlIGJhbmtzIHdvcmtmb3JjZXMgdGhyb3VnaCBhIGNvbWJpbmF0aW9uIG9mIGFzc2V0IHNhbGVzIGFuZCByZWR1bmRhbmNpZXMgbWVhbnMgYmFua3Mgd29udCBoYXZlIGFzIGJpZyBhbiBpbXBhY3Qgb24gb3ZlcmFsbCBlbXBsb3ltZW50IGluIGZ1dHVyZSBjcmlzZXMgQW50b2luZSBNb3JnYXV0IGNoaWVmIGV4ZWN1dGl2ZSBmb3IgRXVyb3BlIGFuZCBTb3V0aCBBbWVyaWNhIGF0IHJlY3J1aXRlciBSb2JlcnQgV2FsdGVycyBkb2VzIG5vdCBleHBlY3QgdGhlIGluZHVzdHJ5cyBlbXBsb3ltZW50IHRvIGV2ZXIgcmV0dXJuIHRvIHdoYXQgaXQgd2FzIGluIGl0cyBoZXlkYXkgb2YgMjAwOCBUaGVuIHRoZSAyNSBvZiB0aGUgdG9wIDMwIGJhbmtzIHdpdGggY29tcGFyYWJsZSBmaWd1cmVzIGVtcGxveWVkIGFib3V0IDI1MjAwMCBtb3JlIHRoYW4gdGhlIDE3IG1pbGxpb24gdGhleSBkbyB0b2RheSBJdHMgYmVlbiBhIGJ1YmJsZSBmb3IgMjAgeWVhcnMgc2FpZCBNb3JnYXV0IEluIHNwZWNpYWxpdHkgYXJlYXMgd2UgYXJlIHNlZWluZyBhIGJpdCBvZiBhbiB1cHNpZGUgYnV0IGl0IGlzIHF1aXRlIG1hcmdpbmFsIGFuZCBpdCB3aWxsIHN0YXkgbGlrZSB0aGF0IGZvciB0aGUgbmV4dCBzaXggdG8gbmluZSBtb250aHMgaGUgYWRkZWQgQklHVElDS0VUIFJFU1RSVUNUVVJJTkcgVGhlIG1vc3QgZHJhbWF0aWMgb2YgbGFzdCB5ZWFycyBqb2IgY3V0cyBjYW1lIGZyb20gbWFqb3IgcmVzdHJ1Y3R1cmluZ3Mgc3VjaCBhcyBTcGFpbnMgQmFua2lhIHdoaWNoIHNoZWQgMjMgcGVyY2VudCBvZiBpdHMgd29ya2ZvcmNlIHRvIGhlbHAgbWVldCB0aGUgY29uZGl0aW9ucyBvZiBpdHMgNDEgYmlsbGlvbiBldXJvIDU2OSBiaWxsaW9uIEV1cm9wZWFuIHJlc2N1ZSBJdGFseXMgVW5pY3JlZGl0IHdoaWNoIHJlZHVjZWQgdGhlIGhpZ2hlc3QgbnVtYmVyIG9mIHN0YWZmIDg0OTAgc2FpZCBpbiBpdHMgYW5udWFsIHJlcG9ydCB0aGF0IHNvbWUgb2YgdGhlICByZWR1Y3Rpb25zIHdlcmUgdGhlIHJlc3VsdCBvZiBhIHByb2plY3QgdG8gb3V0c291cmNlIElUIGZ1bmN0aW9ucyB0byBqb2ludCB2ZW50dXJlcyBCZWxnaXVtcyBLQkMgY2l0ZWQgYXNzZXQgc2FsZXMgYXMgYSBtYWpvciByZWFzb24gZm9yIGl0cyA3OTM4IHJlZHVjdGlvbiBpbiBoZWFkY291bnQgMjIgcGVyY2VudCBvZiBpdHMgd29ya2ZvcmNlIFRoZSBiYWlsZWRvdXQgYmFuayBzb2xkIFJ1c3NpYW4gb2Zmc2hvb3QgQWJzb2x1dCBCYW5rIGFuZCBTZXJiaWFuIGJ1c2luZXNzIEtCQyBCYW5rYSBTdGFmZiBmaWd1cmVzIGZvciBBYnNvbHV0IEJhbmsgd2VyZSBub3QgYXZhaWxhYmxlIHdoaWxlIEtCQyBCYW5rYXMgbW9zdCByZWNlbnQgZmlndXJlcyBzaG93IDUwMSBzdGFmZiBhdCB0aGUgZW5kIG9mIDIwMTIgU3BhaW5zIEJCVkEgYWxzbyBjaXRlZCBhc3NldCBzYWxlcyBhcyB0aGUgZHJpdmVyIG9mIGl0cyA2NTQ3IHJlZHVjdGlvbiBpbiBzdGFmZiBvciAyMyBwZXJjZW50IG9mIGhlYWRjb3VudCB3aGljaCBjYW1lIGluIGEgeWVhciB3aGVuIHRoZSBiYW5rIHNvbGQgb3BlcmF0aW9ucyBpbiBMYXRpbiBBbWVyaWNhIEF0IEJhbmsgb2YgSXJlbGFuZCB3aGVyZSBhIDYzIHBlcmNlbnQgZmFsbCBpbiBoZWFkY291bnQgd2FzIHRoZSBmaWZ0aGxhcmdlc3QgaW4gdGhlIHJlZ2lvbiBhIHJlZHVuZGFuY3kgcHJvZ3JhbW1lIHdhcyB0aGUgbWFpbiByZWFzb24gVGhlIHBhY2Ugb2Ygc3RhZmYgcmVkdWN0aW9ucyBhcHByb3hpbWF0ZWx5IGhhbHZlZCBsYXN0IHllYXIgYW5kIG1vc3QgYmFua3MgYXJlIG5vdyBjb21pbmcgdG8gdGhlIGVuZCBvZiBkaXNwb3NhbHMgYW5kIGN1dGJhY2tzIGFncmVlZCBkdXJpbmcgdGhlIGNyaXNpcyBIb3dldmVyIHVwY29taW5nIEV1cm9wZWFuIFVuaW9ud2lkZSB0ZXN0cyBvbiB3aGV0aGVyIGJhbmtzIG5lZWQgdG8gaG9sZCBiaWdnZXIgY2FwaXRhbCBjdXNoaW9ucyBjb3VsZCB0cmlnZ2VyIGFub3RoZXIgd2F2ZSBvZiBhc3NldCBzYWxlcyBhbmQgY3V0cyBSb3V0aW5lIHN0cmVhbWxpbmluZyBjb250aW51ZWQgbGFzdCB5ZWFyIEhTQkMgdGhlIGJpZ2dlc3QgZW1wbG95ZXIgaW4gdGhlIHBhY2sgY3V0IGhlYWRjb3VudCBieSA2NTI1IG9yIDI1IHBlcmNlbnQgb2YgaXRzIGdsb2JhbCB0b3RhbCBUaGUgYmFuayBjYW1lIHRocm91Z2ggdGhlIGNyaXNpcyB3aXRob3V0IGEgYmFpbG91dCBidXQgaGFzIHNsaW1tZWQgZG93biBvdmVyIHRoZSBsYXN0IHRocmVlIHllYXJzIGJ5IGNsb3Npbmcgb3Igc2VsbGluZyBkb3plbnMgb2YgYnVzaW5lc3NlcyBPbmx5IHRocmVlIG9mIHRoZSBiYW5rcyAgQmFyY2xheXMgSGFuZGVsc2JhbmtlbiAgYW5kIERldXRzY2hlIEJhbmsgIGFkZGVkIGpvYnMgbGFzdCB5ZWFyIGFuZCB0aG9zZSB0b3RhbGxlZCBsZXNzIHRoYW4gNzcwIFBPQ0tFVFMgT0YgR1JPV1RIIEJhbmtzIGFyZSBoaXJpbmcgaW4gYSBmZXcgYXJlYXMgaG93ZXZlciB3aXRoIHNvbWUgcmVjcnVpdGVycyBjaXRpbmcgcmlzZXMgaW4gc3BlY2lhbGlzdCBjb21wbGlhbmNlIHJvbGVzIHN1Y2ggYXMgYW50aW1vbmV5IGxhdW5kZXJpbmcgY3liZXIgc2VjdXJpdHkgYW5kIGludGVybmFsIGF1ZGl0IGFzIGxlbmRlcnMgaGF2ZSB0byBkZWFsIHdpdGggaW5jcmVhc2luZyBkZW1hbmRzIGZyb20gcmVndWxhdG9ycyBkZXRlcm1pbmVkIHRvIGF2b2lkIGEgcmVwZWF0IG9mIHRoZSBjcmlzaXMgVGhlIHJlZ3VsYXRvcnkgcHJlc3N1cmUgaXMgYSBjb3N0IGRyYWcgb24gdGhlIGJhbmtzIGJ1dCBpZiBhIHJvbGUgaXMgcmVxdWlyZWQgYnkgdGhlIHJlZ3VsYXRvcnMgdGhlbiBhbGwgc2VuaW9yIG1hbmFnZW1lbnQgY2FuIGdldCBvdXQgb2YgdGhlIHdheSBhbmQgeW91IGNhbiBwdWxsIHRoZSB0cmlnZ2VyIGFuZCBoaXJlIHRoYXQgcGVyc29uIHNhaWQgSHVnbyBHb3Jkb24gTGVubm94IGEgbWFuYWdpbmcgZGlyZWN0b3IgYXQgV2ViYmVyIEZveCBhIFVLIHF1YW50aXRhdGl2ZSBhbmQgcmlzayBtYW5hZ2VtZW50IHJlY3J1aXRtZW50IHNwZWNpYWxpc3QgT3RoZXJzIHNhaWQgYmFua3Mgd2VyZSBiZWdpbm5pbmcgdG8gYWRkcmVzcyBwcm9ibGVtcyBjcmVhdGVkIGJ5IHByZXZpb3VzIGN1dGJhY2tzIHBhcnRpY3VsYXJseSBhbW9uZ3N0IHRoZSBzcGFyc2UgcmFua3Mgb2YgbW9yZSBqdW5pb3IgZW1wbG95ZWVzIEFzIGJ1c2luZXNzIHBpY2tzIHVwIGZpcm1zIG9mdGVuIGZpbmQgdGhlbXNlbHZlcyB3aXRoIHF1aXRlIHNwZWNpZmljIGFuZCBkZWZpbmFibGUgc2tpbGxzIGdhcHMgaW4gY2VydGFpbiBhcmVhcyBhbmQgYmFua3MgaGF2ZSBkZWZpbml0ZWx5IHN0YXJ0ZWQgdG8gdHJ5IHRvIGFkZHJlc3MgdGhhdCBzYWlkIERhdmlkIExlaXRoZWFkIG1hbmFnaW5nIGRpcmVjdG9yIGZvciBiYW5raW5nIGFuZCBmaW5hbmNpYWwgc2VydmljZXMgYXQgcmVjcnVpdG1lbnQgZmlybSBNaWNoYWVsIFBhZ2UgRXZlbiBzbyBiaWcganVtcHMgaW4gdGhlIG51bWJlcnMgZW1wbG95ZWQgYnkgYmFua3MgY291bGQgdGFrZSBhIHdoaWxlIHRvIGNvbWUgSXRzIHRoZSB3aG9sZSBvaWwgdGFua2VyIGFuYWxvZ3kgIGl0cyBzbG93IHRvIHN0b3AgYW5kIHNsb3dlciB0byBzcGVlZCB1cCBzYWlkIE1pbGVzIFN0cmliYmxpbmcgZGlyZWN0b3Igb2Ygc3RyYXRlZ2ljIHBhcnRuZXJzaGlwcyBhbmQgaGVhZCBvZiBQaGFpZG9uIENvbnN1bHRpbmcgU2VydmljZXMgVUsgYXQgcmVjcnVpdGVyIFBoYWlkb24gSW50ZXJuYXRpb25hbHQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AHVhcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLHNjb3JlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMC0wNi0xMVQwMDowMDowMFogVE8gMjAxMy0wNy0zMVQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTEyMzYx</field><field name="title" class="java.lang.String">rO0ABXQAMUJhbmtzIEZpZ2h0IEZlZCdzIFB1c2ggdG8gTWFrZSBUaGVtIExlc3MgRW50d2luZWQ=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATgiAriAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDVjM2YwNmQ5MGYxYTU2Yjc=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lDQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATgnKRSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyEeuFHrhS</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyEeuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAx/XCj1wo9</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyCj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwI9cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABsmA==</field><field name="id" class="java.lang.String">rO0ABXQAEDg1MjdhZjNlNWQxZGY5NGI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKU4AAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPwL49g==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDI0MTQ=</field><field name="title" class="java.lang.String">rO0ABXQAP1NwYWluIFJlYm91bmRpbmcgRnJvbSBXb3JzdCBFY29ub215IGFzIEV4cG9ydHMgVHJhbnNmb3JtIE5hdGlvbg==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8NjliAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGYzNzVlMzJjNmU5YjA3OTM=</field><field name="symbol" class="java.lang.String">rO0ABXQABU02Ty5G</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8StLSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAz2ZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAz2ZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAz2ZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAz2ZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyI9cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDVkNzE3MGVhMzY2YTQ1MWI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mL0/AAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPwIGIA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIyNDY5</field><field name="title" class="java.lang.String">rO0ABXQAPEV1cm9wZSBCYW5rcyBIb2FyZGluZyBDYXNoIFJlc2lzdCBEcmFnaGkgQmlkIHRvIEF2b2lkIENydW5jaA==</field><field name="content" class="java.lang.String">rO0ABXQh/kFsbW9zdCBhbGwgb2YgdGhlIG1vbmV5IGxvYW5lZCB0byA1MjMgZXVyby1hcmVhIGxlbmRlcnMgbGFzdCBtb250aCB3b3VuZCB1cCBiYWNrIG9uIGRlcG9zaXQgYXQgdGhlIEZyYW5rZnVydC1iYXNlZCBjZW50cmFsIGJhbmsgaW5zdGVhZCBvZiBwb3VyaW5nIGludG8gdGhlIGZpbmFuY2lhbCBzeXN0ZW0sIGFjY29yZGluZyB0byBlc3RpbWF0ZXMgYnkgQmFyY2xheXMgQ2FwaXRhbCBiYXNlZCBvbiBFQ0IgZGF0YS4gQmFua3Mgd2lsbCB1c2UgbW9zdCBvZiB0aGUgbW9uZXkgZnJvbSB0aGUgdGhyZWUteWVhciBsb2FucyB0byBtZWV0IHRoZWlyIHJlZmluYW5jaW5nIG5lZWRzIGZvciB0aGlzIHllYXIgYW5kIG5leHQsIGFuYWx5c3RzIGF0IE1vcmdhbiBTdGFubGV5IGFuZCBSb3lhbCBCYW5rIG9mIFNjb3RsYW5kIEdyb3VwIFBsYyBlc3RpbWF0ZS4g4oCcSXTigJlzIGlsbHVzb3J5IHRvIHRoaW5rIHRoYXQgdGhlIG1lYXN1cmUgd2lsbCB0cmFuc2xhdGUgaW50byBjcmVkaXQgZ2VuZXJhdGlvbizigJ0gUGhpbGlwcGUgV2FlY2h0ZXIsIGNoaWVmIGVjb25vbWlzdCBhdCBOYXRpeGlzIEFzc2V0IE1hbmFnZW1lbnQgaW4gUGFyaXMsIHNhaWQgaW4gYW4gaW50ZXJ2aWV3LiDigJxJdCB3aWxsIGFzc3VhZ2Ugc29tZSBvZiB0aGUgYW54aWV0eSBiYW5rcyBoYXZlIHJlZ2FyZGluZyB0aGVpciBsaXF1aWRpdHkgbmVlZHMuIEJ1dCB0aGV54oCZdmUgZW5nYWdlZCBpbnRvIGEgbWFzc2l2ZSBvdmVyaGF1bCBvZiB0aGVpciBzdHJhdGVneSBhbmQgc2hyaW5rYWdlIG9mIHRoZWlyIGJhbGFuY2Ugc2hlZXRzLCB3aGljaCBpcywgY291cGxlZCB3aXRoIHRoZSBkZXRlcmlvcmF0aW5nIGVjb25vbXksIG5vdCBjb21wYXRpYmxlIHdpdGggaW5jcmVhc2luZyBjcmVkaXQu4oCdIEdvdmVybm1lbnRzIGFyZSB1cmdpbmcgRXVyb3BlYW4gYmFua3MgdG8ga2VlcCBsZW5kaW5nIHRvIGNvbXBhbmllcyBhbmQgaW5kaXZpZHVhbHMgd2hpbGUgcmVxdWlyaW5nIHRoZW0gdG8gcmFpc2UgYW4gYWRkaXRpb25hbCAxMTQuNyBiaWxsaW9uIGV1cm9zIG9mIGNvcmUgY2FwaXRhbCBieSBKdW5lIHRvIHdlYXRoZXIgYSBkZWVwZW5pbmcgc292ZXJlaWduLWRlYnQgY3Jpc2lzLiBJbnN0ZWFkIG9mIHJhaXNpbmcgZXF1aXR5LCBtb3N0IGxlbmRlcnMgYWNyb3NzIEV1cm9wZSBoYXZlIHZvd2VkIHRvIG1lZXQgY2FwaXRhbCBydWxlcyBieSB0cmltbWluZyBhdCBsZWFzdCA5NTAgYmlsbGlvbiBldXJvcyBmcm9tIHRoZWlyIGJhbGFuY2Ugc2hlZXRzIG92ZXIgdGhlIG5leHQgdHdvIHllYXJzLCBlaXRoZXIgYnkgc2VsbGluZyBhc3NldHMgb3Igbm90IHJlbmV3aW5nIGNyZWRpdCBsaW5lcywgYWNjb3JkaW5nIHRvIGRhdGEgY29tcGlsZWQgYnkgQmxvb21iZXJnLiBFQ0IgRGVwb3NpdHMgVGhhdCBoYXMgc3RpcnJlZCBjb25jZXJuIGFtb25nIHBvbGljeSBtYWtlcnMgdGhhdCBiYW5rcyB3aWxsIGN1dCBsZW5kaW5nIGFuZCB0aHJvdHRsZSBncm93dGggaW4gdGhlIGV1cm8gcmVnaW9uLiBCYW5rcyBoYXZlIGJlZW4gcGFya2luZyBhbG1vc3QgYWxsIGV4dHJhIGxpcXVpZGl0eSBmcm9tIHRoZSBFQ0IgbG9hbnMgYmFjayBhdCB0aGUgY2VudHJhbCBiYW5rLiBCYXJjbGF5cyBDYXBpdGFsIGVzdGltYXRlcyBmaXJtcyB1c2VkIDI5NiBiaWxsaW9uIGV1cm9zIG9mIHRoZSBEZWMuIDIxIHRocmVlLXllYXIgbG9hbnMgdG8gcmVwbGFjZSBtYXR1cmluZyBzaG9ydGVyLXRlcm0gRUNCIGJvcnJvd2luZ3MuIFRoYXQgbGVmdCBvbmx5IDE5MyBiaWxsaW9uIGV1cm9zIG9mIGFkZGl0aW9uYWwgbW9uZXkgZm9yIHRoZSBmaW5hbmNpYWwgc3lzdGVtLiBPdmVybmlnaHQgZGVwb3NpdHMgd2l0aCB0aGUgRUNCIGhhdmUgY2xpbWJlZCBieSAyMTkgYmlsbGlvbiBldXJvcyBzaW5jZSB0aGUgbG9hbnMgdG8gYSByZWNvcmQgNDgyIGJpbGxpb24gZXVyb3MsIHN1Z2dlc3RpbmcgdGhlIGNlbnRyYWwgYmFuayBmdW5kcyBoYXZlbuKAmXQgc28gZmFyIHJlYWNoZWQgY3VzdG9tZXJzLiBCYW5rcyBhY2NvdW50IGZvciBhYm91dCA4MCBwZXJjZW50IG9mIGxlbmRpbmcgdG8gdGhlIGV1cm8gYXJlYSwgbWFraW5nIHRoZW0g4oCcY3J1Y2lhbCB0byB0aGUgc3VwcGx5IG9mIGNyZWRpdCzigJ0gYWNjb3JkaW5nIHRvIHJlY2VudGx5IGluc3RhbGxlZCBFQ0IgUHJlc2lkZW50IE1hcmlvIERyYWdoaS4gQnkgY29udHJhc3QsIFUuUy4gY29tcGFuaWVzIHJlbHkgbW9yZSBvbiBjYXBpdGFsIG1hcmtldHMgZm9yIGZpbmFuY2luZywgc2VsbGluZyBib25kcyB0byBpbnZlc3RvcnMuIFJlZmluYW5jaW5nIE5lZWRzIFRoZSBFQ0IgbGVuZGluZywgYW5kIGEgZm9sbG93LXVwIGxvYW4gb2ZmZXJpbmcgb24gRmViLiAyOCwgd29u4oCZdCBlYXNlIHRoZSBwcmVzc3VyZSBvbiBiYW5rcyB0byBzaHJpbmssIHNheSBhbmFseXN0cyBpbmNsdWRpbmcgSHV3IHZhbiBTdGVlbmlzIGF0IE1vcmdhbiBTdGFubGV5IGluIExvbmRvbi4g4oCcVGhlIEVDQiBsb2FucyB3aWxsIGxhcmdlbHkgYmUgdXNlZCB0byBwcmUtZnVuZCAyMDEyIGFuZCBzb21lIG9mIDIwMTPigJlzIGJhbmsgcmVmaW5hbmNpbmcgbmVlZHMsIGJ1dCBpdCB3aWxsIG5vdCBzdGltdWxhdGUgbGVuZGluZyzigJ0gVmFuIFN0ZWVuaXMgc2FpZC4gVGhleSB3aWxsIOKAnGp1c3Qgc3RvcCBpdCBmYWxsaW5nIG9mZiBwcmVjaXBpdG91c2x5LuKAnSBFdXJvLWFyZWEgYmFua3MgaGF2ZSBtb3JlIHRoYW4gNjAwIGJpbGxpb24gZXVyb3Mgb2YgZGVidCBtYXR1cmluZyB0aGlzIHllYXIsIHRoZSBCYW5rIG9mIEVuZ2xhbmQgc2FpZCBpbiBpdHMgZmluYW5jaWFsIHN0YWJpbGl0eSByZXBvcnQgbGFzdCBtb250aC4gVGhlIGZpcnN0IEVDQiBsb2FuIG9mZmVyaW5nIHNob3VsZCBoZWxwIGNvdmVyIGFib3V0IHR3by10aGlyZHMgb2YgdGhhdCBhbW91bnQsIEdvbGRtYW4gU2FjaHMgR3JvdXAgSW5jLiBhbmFseXN0cyBzYXkuIE1vcmdhbiBTdGFubGV54oCZcyBWYW4gU3RlZW5pcyBlc3RpbWF0ZXMgYmFua3MgbWF5IHJlZHVjZSBhc3NldHMgYnkgYXMgbXVjaCBhcyAyLjUgdHJpbGxpb24gZXVyb3MgaW4gdHdvIHllYXJzLCBhIHByb2Nlc3Mga25vd24gYXMgZGVsZXZlcmFnaW5nLiBUaGUgdm9sdW1lIG9mIGxvYW5zIHRvIGhvdXNlaG9sZHMgYW5kIGNvbXBhbmllcyBpbiB0aGUgMTctIG5hdGlvbiBldXJvIGFyZWEgc2hyYW5rIGluIE5vdmVtYmVyIGZvciB0aGUgc2Vjb25kIGNvbnNlY3V0aXZlIG1vbnRoLCB0aGUgRUNCIHNhaWQgb24gRGVjLiAyOS4gTG9hbnMgd2VyZSBzdGlsbCB1cCAxLjcgcGVyY2VudCBvdmVyIHRoZSB5ZWFyLWVhcmxpZXIgcGVyaW9kLCBzbG93aW5nIGZyb20gYSAyLjcgcGVyY2VudCBpbmNyZWFzZSBpbiB0aGUgMTIgbW9udGhzIHRocm91Z2ggT2N0b2Jlci4gTWVya2VsLCBTYXJrb3p5IFdoZW4gZ3JhbnRlZCwgbG9hbnMgYXJlIGdldHRpbmcgY29zdGxpZXIgZm9yIGJvcnJvd2Vycy4gU2luY2UgSnVseSwgaW50ZXJlc3QgbWFyZ2lucyBoYXZlIGluY3JlYXNlZCwgd2l0aCBpbnZlc3RtZW50LSBncmFkZSBib3Jyb3dlcnMgaW4gRXVyb3BlIHBheWluZyBhbiBhdmVyYWdlIG9mIDkxLjYgYmFzaXMgcG9pbnRzIG1vcmUgdGhhbiBiZW5jaG1hcmsgcmF0ZXMsIHVwIGZyb20gODQuNCBiYXNpcyBwb2ludHMgZHVyaW5nIHRoZSBmaXJzdCBoYWxmIG9mIDIwMTEsIGFjY29yZGluZyB0byBkYXRhIGNvbXBpbGVkIGJ5IEJsb29tYmVyZy4gQSBiYXNpcyBwb2ludCBpcyBvbmUtaHVuZHJlZHRoIG9mIGEgcGVyY2VudGFnZSBwb2ludC4g4oCcV2UgbXVzdCBhdm9pZCBhIGNyZWRpdCBjcnVuY2ggZm9yIG91ciBlY29ub21pZXMs4oCdIEV1cm9wZWFuIFVuaW9uIFByZXNpZGVudCBIZXJtYW4gVmFuIFJvbXB1eSBzYWlkIG9uIEphbi4gOS4g4oCcVGhlIHJlY2VudCBtZWFzdXJlcyBieSB0aGUgRXVyb3BlYW4gQ2VudHJhbCBCYW5rIG9uIGEgbG9uZy10ZXJtIGxlbmRpbmcgZmFjaWxpdHkgZm9yIHRoZSBiYW5rcyBhcmUgd2VsY29tZSBpbiB0aGlzIGNvbnRleHQu4oCdIFRoZSBFdXJvcGVhbiBCYW5raW5nIEF1dGhvcml0eSwgd2hpY2ggb3ZlcnNlZXMgdGhlIHJlZ2lvbuKAmXMgcmVndWxhdG9ycywgYXNrZWQgYmFua3Mgb24gRGVjLiA4IHRvIHJldGFpbiBlYXJuaW5ncywgY3VyYiBib251c2VzIGFuZCByYWlzZSBlcXVpdHkgdG8gYm9vc3QgY29yZSBjYXBpdGFsIGJlZm9yZSByZXNvcnRpbmcgdG8gY3V0cyBpbiBsZW5kaW5nLiBUaGUgRUJBIGZvbGxvd2VkIGJvdGggRnJlbmNoIFByZXNpZGVudCBOaWNvbGFzIFNhcmtvenkgYW5kIEdlcm1hbiBDaGFuY2VsbG9yIEFuZ2VsYSBNZXJrZWwgaW4gdXJnaW5nIGJhbmtzIHRvIGtlZXAgbGVuZGluZy4gU2Fya296eSBzYWlkIG9uIE9jdC4gMjcgdGhhdCBoZSBoYWQgYXNrZWQgZmlybXMgdG8gc2hpZnQg4oCcYWxtb3N0IGFsbOKAnSBvZiB0aGVpciBkaXZpZGVuZHMgaW50byBzdHJlbmd0aGVuaW5nIGJhbGFuY2Ugc2hlZXRzIGFuZCB0byBtYWtlIGJvbnVzIHByYWN0aWNlcyDigJxub3JtYWwu4oCdIE1lcmtlbCBzYWlkIG9uIE9jdC4gOSBzaGUgd2FzIOKAnGRldGVybWluZWQgdG8gZG8gd2hhdGV2ZXIgbmVjZXNzYXJ5IHRvIHJlY2FwaXRhbGl6ZSB0aGUgYmFua3MgdG8gZW5zdXJlIGNyZWRpdCB0byB0aGUgZWNvbm9teS7igJ0g4oCYTm8gQ3JlZGl0IENydW5jaOKAmSBCYW5rZXJzIGhhdmUgc2FpZCB0aGV5IGhhdmVu4oCZdCByZXN0cmljdGVkIGxlbmRpbmcgYW5kIHRoYXQgZGVtYW5kIGZvciBjcmVkaXQgaXMgc2xvd2luZyBhcyBncm93dGggc2xvd3MuIOKAnEFsbCBiYW5rcyBJIHRhbGsgdG8ga2VlcCBsZW5kaW5nIHRvIHNtYWxsLSBhbmQgbWVkaXVtLSBzaXplIGVudGVycHJpc2VzIGFuZCBob3VzZWhvbGRzLOKAnSBDaHJpc3RpYW4gQ2xhdXNlbiwgcHJlc2lkZW50IG9mIHRoZSBFdXJvcGVhbiBCYW5raW5nIEZlZGVyYXRpb24sIGFuIGluZHVzdHJ5IGFzc29jaWF0aW9uLCBzYWlkIG9uIERlYy4gOS4g4oCcVGhhdCBwYXJ0IG9mIHRoZSBiYW5rIHdpbGwga2VlcCByb2xsaW5nLuKAnSBUaGVyZSBpcyDigJxubyBjcmVkaXQgY3J1bmNoLOKAnSBGcmVkZXJpYyBPdWRlYSwgY2hpZWYgZXhlY3V0aXZlIG9mZmljZXIgb2YgU29jaWV0ZSBHZW5lcmFsZSBTQSwgRnJhbmNl4oCZcyBzZWNvbmQtIGJpZ2dlc3QgbGVuZGVyLCBhbmQgY2hhaXJtYW4gb2YgdGhlIEZyZW5jaCBCYW5raW5nIEZlZGVyYXRpb24sIHNhaWQgbGFzdCBtb250aC4g4oCcVGhlIHJlYWxpdHkgaXMgdGhhdCBjcmVkaXQgaXMgYXZhaWxhYmxlLOKAnSBoZSBzYWlkIGluIGFuIGludGVydmlldyBvbiBCRk0gcmFkaW8gb24gRGVjLiAxNi4gRXZlbiBzbywgY29tcGFuaWVzIGFjcm9zcyBFdXJvcGUgc2F5IGNyZWRpdCBpcyB0aWdodGVuaW5nLiDigJhEb3VibGUgUHVuY2jigJkgSW4gRnJhbmNlLCB3aGVyZSBjcmVkaXQgdG8gdGhlIHByaXZhdGUgc2VjdG9yIGluY3JlYXNlZCBieSAzLjcgcGVyY2VudCBpbiBOb3ZlbWJlciBjb21wYXJlZCB3aXRoIGEgeWVhciBlYXJsaWVyLCB0aGUgbWFqb3JpdHkgb2YgdGhlIGNvdW50cnnigJlzIGNvbXBhbnkgdHJlYXN1cmVycyBzYWlkIHRoZXkgZW5jb3VudGVyZWQg4oCcdmVyeSBzdHJvbmcgdGVuc2lvbnPigJ0gaW4gbmVnb3RpYXRpbmcgYmFuayBsb2Fucywgd2l0aCBtb3JlIHRoYW4gNTAgcGVyY2VudCBvZiByZXNwb25kZW50cyBzYXlpbmcgdGhlIHByb2Nlc3MgbGVkIHRvIG1vcmUgZXhwZW5zaXZlIHRlcm1zLCBhY2NvcmRpbmcgdG8gYSBEZWNlbWJlciBzdXJ2ZXkgYnkgdGhlIEZyZW5jaCBBc3NvY2lhdGlvbiBvZiBDb3Jwb3JhdGUgVHJlYXN1cmVycy4gVGhlIG1ham9yaXR5IG9mIHRob3NlIHBvbGxlZCBzYWlkIG9idGFpbmluZyBiYW5rIGZpbmFuY2luZyB3YXMg4oCcYXMgZGlmZmljdWx0IGFzIGF0IHRoZSBlbmQgb2YgMjAwOCzigJ0gYWZ0ZXIgTGVobWFuIEJyb3RoZXJzIEhvbGRpbmdzIEluYy4gY29sbGFwc2VkLiBVLksuIGJhbmtzIGV4cGVjdCB0byB0b3VnaGVuIHRoZWlyIGNyaXRlcmlhIG9uIGxvYW5zIHRvIGNvbXBhbmllcyBhbmQgaG91c2Vob2xkcyBpbiB0aGUgZmlyc3QgcXVhcnRlciBiZWNhdXNlIG9mIHN0cmFpbnMgaW4gdGhlIHdob2xlc2FsZSBmdW5kaW5nIG1hcmtldCwgdGhlIEJhbmsgb2YgRW5nbGFuZCBzYWlkIEphbi4gNWluIGl0cyBmb3VydGgtcXVhcnRlciBDcmVkaXQgQ29uZGl0aW9ucyBTdXJ2ZXkuIEJlbGdpYW4gY3JlZGl0IGdyb3d0aCBzbG93ZWQgdG8gMy4xIHBlcmNlbnQgaW4gdGhlIDEyIG1vbnRocyB0byB0aGUgZW5kIG9mIE9jdG9iZXIsIGZyb20gMy42IHBlcmNlbnQgYXQgdGhlIGVuZCBvZiBTZXB0ZW1iZXIsIHRoZSBjb3VudHJ54oCZcyBjZW50cmFsIGJhbmsgc2FpZCBvbiBEZWMuIDEyLiBJbiBJdGFseSwgc29tZSBjb21wYW5pZXMgd2l0aCBhbm51YWwgc2FsZXMgb2YgMzAgbWlsbGlvbiBldXJvcyB0byA0MCBtaWxsaW9uIGV1cm9zIGFyZSBjaGFyZ2VkIGFzIG11Y2ggYXMgMTAgcGVyY2VudCBpbnRlcmVzdCBvbiBsb2FucywgRW1tYSBNYXJjZWdhZ2xpYSwgY2hpZWYgb2YgdGhlIGNvdW50cnnigJlzIENvbmZpbmR1c3RyaWEgbG9iYnkgZ3JvdXAsIHNhaWQgaW4gYW4gaW50ZXJ2aWV3IG9uIERlYy4gMjAuIERyYWdoaeKAmXMgUHJpb3JpdHkgV2l0aCB0aGUgRUNC4oCZcyBpbmplY3Rpb24sIOKAnGRlbGV2ZXJhZ2luZyBtYXkgaGFwcGVuIGluIGEgbW9yZSBvcmRlcmx5IHdheSwgYnV0IGl0IGRvZXNu4oCZdCBtZWFuIGl0IHdpbGwgYmUgcGFpbmxlc3Ms4oCdIHNhaWQgQWxiZXJ0byBHYWxsbywgaGVhZCBvZiBFdXJvcGVhbiBjcmVkaXQgc3RyYXRlZ3kgYXQgUkJTLiBCYW5rcyBhcmUgZmFjZWQgd2l0aCBoaWdoIGxvbmctdGVybSBmaW5hbmNpbmcgY29zdHMsIGEgZGV0ZXJpb3JhdGluZyBlY29ub215IGFuZCBkaWZmaWN1bHRpZXMgcmFpc2luZyBjYXBpdGFsLCBoZSBzYWlkLiDigJxJdOKAmXMgd2hhdCBJIGNhbGwgdGhlIGRvdWJsZSBwdW5jaDogQSBjb21iaW5hdGlvbiBvZiBuZWdhdGl2ZSBncm93dGggYW5kIGJhbmtz4oCZIGRlbGV2ZXJhZ2luZyB3aWxsIGFmZmVjdCBsZW5kaW5nIGFjdGl2aXR5LuKAnSBFdmVuIHRoZSBFQ0LigJlzIERyYWdoaSwgd2hvIGhhcyBtYWRlIGl0IG9uZSBvZiBoaXMgcHJpb3JpdGllcyBpcyB0byBrZWVwIGNyZWRpdCBmbG93aW5nIGludG8gdGhlIGVjb25vbXksIHNhaWQgdGhlIGNlbnRyYWwgYmFua+KAmXMgbG9hbiBvZmZlcmluZ3MgbWF5IGZhaWwgdG8gYWNoaWV2ZSB0aGF0IGdvYWwuIOKAnE1vbmV0YXJ5IHBvbGljeSBjYW5ub3QgZG8gZXZlcnl0aGluZywgYnV0IHdl4oCZcmUgdHJ5aW5nIHRvIGRvIG91ciBiZXN0IHRvIGF2b2lkIGEgY3JlZGl0IGNydW5jaCB0aGF0IG1pZ2h0IGNvbWUgZnJvbSBhIGxhY2sgb2YgZnVuZGluZyzigJ0gRHJhZ2hpIHNhaWQgRGVjLiAxOSBhdCB0aGUgRXVyb3BlYW4gUGFybGlhbWVudCBpbiBCcnVzc2Vscy4g4oCcV2UgaGF2ZSB0byBiZSBleHRyZW1lbHkgY2FyZWZ1bCBoZXJlLCBiZWNhdXNlIHRoZXJlIG1heSBiZSBvdGhlciByZWFzb25zIHRoYXQgY3JlYXRlIGEgY3JlZGl0IGNydW5jaC7igJ0gRHJhZ2hpIG1heSBiZSB3YXJ5IG9mIHRoZSBVLlMuIGV4cGVyaWVuY2Ugd2l0aCBtdWx0aXBsZSByb3VuZHMgb2YgYm9uZCBwdXJjaGFzZXMuIFRoYXQgc28tY2FsbGVkIHF1YW50aXRhdGl2ZSBlYXNpbmcgaGFzbuKAmXQgc3RpbXVsYXRlZCBsZW5kaW5nLCBOYXRpeGlz4oCZcyBXYWVjaHRlciBzYWlkLiDigJhLaWNrIHRoZSBDYW7igJkg4oCcTGVuZGluZyByZWFsbHkgcGlja2VkIHVwIHdoZW4gdGhlIGVjb25vbXkgZ290IGJldHRlcizigJ0gaGUgc2FpZC4gVGhlIEVDQiBjdXQgaXRzIGZvcmVjYXN0IGZvciBldXJvLWFyZWEgZWNvbm9taWMgZ3Jvd3RoIGluIDIwMTIgdG8gMC4zIHBlcmNlbnQgb24gRGVjLiA4IGZyb20gYSBTZXB0ZW1iZXIgcHJlZGljdGlvbiBvZiAxLjMgcGVyY2VudC4gVGhlIGNlbnRyYWwgYmFuayBleHBlY3RzIHRoZSBlY29ub215IHRvIGV4cGFuZCAxLjMgcGVyY2VudCBuZXh0IHllYXIuIEluIHRoZSBVLlMuLCBhbG1vc3QgYWxsIGNhdGVnb3JpZXMgb2YgYmFuayBsZW5kaW5nIGZlbGwgaW4gMjAwOSBhbmQgMjAxMCBhbmQgZGlkbuKAmXQgc3RhcnQgaW1wcm92aW5nIHVudGlsIGxhc3QgeWVhciwgd2hlbiB0aGUgRmVkZXJhbCBSZXNlcnZlIHN0b3BwZWQgaXRzIHNlY29uZCB3YXZlIG9mIHF1YW50aXRhdGl2ZSBlYXNpbmcsIGFjY29yZGluZyB0byBkYXRhIGJ5IHRoZSBVLlMuIGluc3RpdHV0aW9uLiBCYW5rcyBpbmNyZWFzZWQgdGhlaXIgaG9sZGluZ3Mgb2YgVHJlYXN1cnkgYW5kIGFnZW5jeSBzZWN1cml0aWVzIGluIDIwMDkgYW5kIDIwMTAsIHNob3dpbmcgdGhleSB3ZXJlIHVzaW5nIHRoZSBGZWTigJlzIGNoZWFwIG1vbmV5IHRvIG93biBzYWZlIGdvdmVybm1lbnQgcGFwZXIuIEJlY2F1c2UgcXVhbnRpdGF0aXZlIGVhc2luZyB0ZW5kcyB0byBpbXByb3ZlIGNhcGl0YWwgbWFya2V0cyBmaXJzdCwgdGhlIGhlYWxpbmcgd2lsbCBiZSBldmVuIHNsb3dlciBpbiBFdXJvcGUgZ2l2ZW4gaXRzIHJlbGlhbmNlIG9uIGJhbmtzIGZvciBib3Jyb3dpbmcsIGFjY29yZGluZyB0byBHYWxsby4g4oCcVGhlIEVDQiBsb2FucyBhcmUgYSBraWNrLXRoZS1jYW4gbWVhc3VyZSB0aGF0IGRvZXNu4oCZdCBmaXggdGhlIGJhbmtz4oCZIHN0cnVjdHVyYWwgcHJvYmxlbXMs4oCdIEdhbGxvIHNhaWQuIOKAnERlbGV2ZXJhZ2luZyBuZWVkcyB0byBoYXBwZW4u4oCd</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATTLWf8AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDU3MjA5MjNiYjJkMjI3NWI=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lDQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATTQgFsAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxZmZmZmZm</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxgo9cKPXD</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxXrhR64Uf</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxeFHrhR64</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAuhR64UeuF</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAq+A==</field><field name="id" class="java.lang.String">rO0ABXQAEDI5ODk5N2I4Y2NlMjc1MmU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMaaAAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPvCmVA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTEyMjUx</field><field name="title" class="java.lang.String">rO0ABXQAN0V1cm8gQ3Jpc2lzIFNlZW4gVGFraW5nIFNvY2lhbCBUb2xsIFdpdGggUmVjb3JkIEpvYmxlc3M=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATx/vaMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI1MTJhMmI5ZTVlYWU4M2Q=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lTRg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATyE4/8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA449cKPXCk</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4+uFHrhR7</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA44UeuFHrh</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA47hR64Ueu</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1lHrhR64U</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAJUfA==</field><field name="id" class="java.lang.String">rO0ABXQAEDg2OGU0ZDZmMzlhOTNmYzI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKF1AAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPupXfg==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTEyMDc5</field><field name="title" class="java.lang.String">rO0ABXQAK0hTQkMgQ291bnRzIENvc3Qgb2YgRW1lcmdpbmcgTWFya2V0IFN1Y2Nlc3M=</field><field name="content" class="java.lang.String">rO0ABXQTXVBvc3RpbmcgYSBwcmV0YXggcHJvZml0IGp1c3Qgc2h5IG9mICQyMiBiaWxsaW9uLCB0aGUgbGFyZ2VzdCBpbiAyMDExIGJ5IGEgd2VzdGVybiBiYW5rLCBIU0JDIHNhaWQgb24gTW9uZGF5IGl0IHdhcyBjb25maWRlbnQgZ3Jvd3RoIGluIEFzaWEsIExhdGluIEFtZXJpY2EgYW5kIHRoZSBNaWRkbGUgRWFzdCB3b3VsZCBjb250aW51ZSB0byBvZmZzZXQgc2x1Z2dpc2ggY29uZGl0aW9ucyBpbiBFdXJvcGUuIEhvd2V2ZXIsIHdpdGggY29zdHMgcmlzaW5nIDEwIHBlcmNlbnQgaW4gMjAxMSwgZHVlIHBhcnRseSB0byBzdXJnaW5nIHdhZ2VzIGluIGVtZXJnaW5nIG1hcmtldHMsIENoaWVmIEV4ZWN1dGl2ZSBTdHVhcnQgR3VsbGl2ZXIgdG9sZCByZXBvcnRlcnMgaXQgd291bGQgYmUgYSBjaGFsbGVuZ2UgdG8gbWVldCB0aGUgYmFuaydzIDIwMTMgdGFyZ2V0IGZvciByZWR1Y2luZyBjb3N0cyBhcyBhIHByb3BvcnRpb24gb2YgaW5jb21lLiBCYW5rcyBhY3Jvc3MgRXVyb3BlIGhhdmUgYmVlbiBwb3N0aW5nIGhlZnR5IGxvc3NlcyBhcyB0aGUgZXVybyB6b25lIHNvdmVyZWlnbiBkZWJ0IGNyaXNpcyBoYXMgaGl0IHRoZWlyIHRyYWRpbmcgcHJvZml0cywgYW5kIGFzIHRoZXkgc3RyaXZlIHRvIG1lZXQgdG91Z2ggbmV3IHJ1bGVzIGFpbWVkIGF0IHByZXZlbnRpbmcgYSByZXBlYXQgb2YgdGhlIDIwMDctMDkgYmFua2luZyBjcmlzaXMuIEhTQkMsIEV1cm9wZSdzIGJpZ2dlc3QgYmFuayBhbmQgd2hpY2ggbWFrZXMgb3ZlciB0aHJlZSBxdWFydGVycyBvZiBpdHMgcHJvZml0cyBvdXRzaWRlIEV1cm9wZSBhbmQgbm9ydGggQW1lcmljYSwgaGFzIGJlZW4gcmVsYXRpdmVseSB1bnNjYXRoZWQgdGhhbmtzIHRvIGl0cyBzdHJlbmd0aCBpbiBmYXN0ZXItZ3Jvd2luZyBlbWVyZ2luZyBtYXJrZXRzLiBJdCBzYWlkIGl0IGV4cGVjdGVkIHRoYXQgdHJlbmQgdG8gY29udGludWUsIGRlc3BpdGUgZmVhcnMgc29tZSBvZiB0aGVzZSBlY29ub21pZXMgd2VyZSBvdmVyaGVhdGluZyBhbmQgY291bGQgc2VlIGFuIGFicnVwdCBzbG93ZG93bi4gIldlIHJlbWFpbiBjb21mb3J0YWJsZSB3aXRoIHRoZSAob3V0bG9vayBpbikgZW1lcmdpbmcgbWFya2V0cyBhbmQgYXJlIGNvbmZpZGVudCB0aGF0IEdEUCBncm93dGggaW4gZW1lcmdpbmcgbWFya2V0cyB3aWxsIGJlIHBvc2l0aXZlIGFuZCBDaGluYSB3aWxsIGhhdmUgYSBzb2Z0IGxhbmRpbmcsIiBHdWxsaXZlciBzYWlkLiBJbiBjb250cmFzdCwgdGhlIGV1cm8gem9uZSBlY29ub215IHdvdWxkIGZsYXRsaW5lIHRoaXMgeWVhciwgd2l0aCAibWFya2VkIHJlY2Vzc2lvbnMiIGluIHNvbWUgc291dGhlcm4gY291bnRyaWVzLCBoZSBhZGRlZC4gSFNCQywgd2l0aCA4OSBtaWxsaW9uIGN1c3RvbWVycyBpbiA4NSBjb3VudHJpZXMsIHNhaWQgcHJldGF4IHByb2ZpdCByb3NlIDE1IHBlcmNlbnQgdG8gJDIxLjkgYmlsbGlvbiBpbiAyMDExIGNvbXBhcmVkIHdpdGggYSBmb3JlY2FzdCBmb3IgJDIyLjIgYmlsbGlvbiBpbiBhIFJldXRlcnMgcG9sbC4gVGhlIGZpZ3VyZSBmZWxsIHNob3J0IG9mIHRoZSBncm91cCdzIHJlY29yZCBwcm9maXQgb2YgJDI0LjIgYmlsbGlvbiBpbiAyMDA3LCBidXQgYmVhdCBhbGwgb3RoZXIgd2VzdGVybiBiYW5rcyB0aGF0IGhhdmUgcmVwb3J0ZWQgc28gZmFyIGZvciBsYXN0IHllYXIsIGluY2x1ZGluZyBVLlMuIHJpdmFsIEouUC4gTW9yZ2FuICwgd2hpY2ggbWFkZSAkMTkgYmlsbGlvbi4gVGhlIHdvcmxkJ3MgbW9zdCBwcm9maXRhYmxlIGJhbmtzIGluIHJlY2VudCB5ZWFycyBoYXZlIGJlZW4gQ2hpbmVzZSBncm91cHMgSUNCQywgd2hpY2ggbWFkZSBhIDIxNSBiaWxsaW9uIHl1YW4gKCQzNC4yIGJpbGxpb24pIHByZXRheCBwcm9maXQgaW4gMjAxMCwgYW5kIENoaW5hIENvbnN0cnVjdGlvbiBCYW5rLCB3aGljaCBtYWRlIDE3NSBiaWxsaW9uIHl1YW4gKCQyNy44IGJpbGxpb24pLiBIU0JDJ3MgcHJvZml0IHdhcyBib29zdGVkIGJ5IGEgJDMuOSBiaWxsaW9uIGFjY291bnRpbmcgZ2FpbiBvbiB0aGUgdmFsdWUgb2YgaXRzIGRlYnQuIFN0cmlwcGluZyB0aGF0IG91dCwgdW5kZXJseWluZyBwcmV0YXggcHJvZml0IGZlbGwgNiBwZXJjZW50IHRvICQxNy43IGJpbGxpb24uIEF0IDE0MTUgR01ULCBIU0JDIHNoYXJlcyBpbiBMb25kb24gd2VyZSBkb3duIDQgcGVyY2VudCBhdCA1NTEuOSBwZW5jZSwgbGFnZ2luZyBhIDEgcGVyY2VudCBkZWNsaW5lIGluIHRoZSBVSydzIGJlbmNobWFyayBGVFNFIDEwMCBpbmRleC4gVGhlIHNoYXJlcyBoYXZlIGJlYXRlbiB0aGUgU1RPWFggRXVyb3BlIDYwMCBiYW5raW5nIGluZGV4IGJ5IDE1IHBlcmNlbnQgb3ZlciB0aGUgcGFzdCB5ZWFyLiAiVGhlcmUncyBhIHNsaWdodCBtaXNzIChvbiBwcm9maXRzKSBhbmQgdGhlIG1hcmtldCBpc24ndCB0aGF0IGltcHJlc3NlZCB3aXRoIHRoZSBtZXNzYWdlIG9uIGNvc3RzLCIgc2FpZCBBbGV4IFBvdHRlciwgYW5hbHlzdCBhdCBCZXJlbmJlcmcgQmFuay4gV0FHRVMgQU5EIEJPTlVTRVMgSFNCQyBzYWlkIGl0IHBhaWQgb3V0ICQ0LjIgYmlsbGlvbiBpbiBib251c2VzLCBkb3duIDIgcGVyY2VudCBvbiAyMDEwLiBCYW5rcyBhcmUgY29taW5nIHVuZGVyIGludGVuc2UgcHJlc3N1cmUgZnJvbSBwb2xpdGljaWFucyBhbmQgdGhlIHB1YmxpYyB0byByZWluIGluIHBheSBhd2FyZHMgYmVjYXVzZSBvZiB0aGUgcm9sZSBvZiB0aGUgc2VjdG9yIGluIHRoZSB3b3JsZCdzIGVjb25vbWljIHByb2JsZW1zLiBHdWxsaXZlciB3YXMgcGFpZCA4IG1pbGxpb24gcG91bmRzICgkMTIuNyBtaWxsaW9uKSBsYXN0IHllYXIgLSBpbmNsdWRpbmcgYSAyLjIgbWlsbGlvbiBib251cyAtIGRvd24gZnJvbSA4LjQgbWlsbGlvbiBpbiAyMDEwLCB3aGVuIGhlIHJhbiBIU0JDJ3MgaW52ZXN0bWVudCBiYW5rLiBBbm90aGVyIGJhbmtlciwgd2hvbSBIU0JDIGRlY2xpbmVkIHRvIG5hbWUsIG5ldHRlZCA3IG1pbGxpb24gcG91bmRzLCB3aGlsZSAxOTIgZW1wbG95ZWVzIHdlcmUgcGFpZCBvdmVyIDEgbWlsbGlvbiBwb3VuZHMgZWFjaCwgaW5jbHVkaW5nIDY0IGluIEJyaXRhaW4uIEd1bGxpdmVyIHNhaWQgSFNCQyB3b3VsZCBjb250aW51ZSB0byBwYXkgY29tcGV0aXRpdmVseSwgcGFydGljdWxhcmx5IGluIGVtZXJnaW5nIG1hcmtldHMsIGFzIHRoZSBncm93dGggYmVpbmcgZGVsaXZlcmVkIG1hZGUgdGhlIGludmVzdG1lbnQgd29ydGh3aGlsZS4gIldhZ2UgcHJpY2UgaW5mbGF0aW9uIGFuZCBjb21wZXRpdGlvbiBmb3Igc3RhZmYgaXMgdmVyeSBoaWdoLiBXZSBhcmUgbm90IHRoZSBvbmx5IHBlb3BsZSB0byB3b3JrIG91dCB0aGF0IHRoZSBlbWVyZ2luZyBtYXJrZXRzIGhhdmUgaGlnaCBHRFAgZ3Jvd3RoIGFuZCB0aGVyZSdzIGEgbGltaXRlZCBwb29sIG9mIHRhbGVudCwiIGhlIHNhaWQgb24gYSBjb25mZXJlbmNlIGNhbGwuIFdoaWxlIEhTQkMgcmVtYWluZWQgb24gdHJhY2sgdG8gaGl0IGl0cyByZXR1cm4gb24gZXF1aXR5IHRhcmdldCBvZiAxMiB0byAxNSBwZXJjZW50IGJ5IHRoZSBlbmQgb2YgMjAxMywgaXQgd291bGQgYmUgYSAiY2hhbGxlbmdlIiB0byBhY2hpZXZlIGl0cyBjb3N0LXRvLWluY29tZSBnb2FsIG9mIDQ4IHRvIDUyIHBlcmNlbnQgYnkgdGhlbiwgR3VsbGl2ZXIgc2FpZCwgYWRkaW5nIHRoaXMgd2FzIG1haW5seSBkdWUgdG8gYSBkaWZmaWN1bHQgbWFjcm8tZWNvbm9taWMgYmFja2Ryb3AuIFRoZSBjb3N0LXRvLWluY29tZSByYXRpbyBkZXRlcmlvcmF0ZWQgdG8gNjEgcGVyY2VudCBpbiAyMDExIGZyb20gNTUuNiBwZXJjZW50IHRoZSB5ZWFyIGJlZm9yZSBmb3IgaXRzIHVuZGVybHlpbmcgYnVzaW5lc3MuIEd1bGxpdmVyIHNhaWQgSFNCQyB3b3VsZCBvZmZzZXQgc29tZSBvZiB0aGUgcHJlc3N1cmUgYnkgcmVkb3VibGluZyBpdHMgY29zdC1jdXR0aW5nIGVmZm9ydHMgZWxzZXdoZXJlIGluIHRoZSBidXNpbmVzcyBhbmQgc2FpZCBpdCB3YXMgY29uZmlkZW50IG9mIGhpdHRpbmcgdGhlIHVwcGVyIGVuZCBvZiBpdHMgJDIuNS0kMy41IGJpbGxpb24gYW5udWFsIGNvc3Qtc2F2aW5ncyByYW5nZS4gSW4gdGhlIGxhc3QgeWVhciBIU0JDIGhhcyBjdXQgMTEsMDAwIGpvYnMgYW5kIHNvbGQgMTkgYnVzaW5lc3NlcyBhcyBwYXJ0IG9mIEd1bGxpdmVyJ3MgYnVzaW5lc3MgcGxhbi4gRGVhbHMgYWxyZWFkeSBzdHJ1Y2sgd2lsbCBjdXQgJDUwIGJpbGxpb24gaW4gcmlzay13ZWlnaHRlZCBhc3NldHMgZnJvbSBpdHMgYmFsYW5jZSBzaGVldC4gIlRoaXMgaXMgYSByZWRlc2lnbmluZyBvZiB0aGUgZ3JvdXAsIG5vdCBhIHNocmlua2FnZS4gSXQncyB0byBnZXQgb3Vyc2VsdmVzIG9uIHRoZSBmcm9udCBmb290LCIgR3VsbGl2ZXIgc2FpZC4gSFNCQywgd2hpY2ggbGlmdGVkIGl0cyAyMDExIGRpdmlkZW5kIGJ5IDE0IHBlcmNlbnQgdG8gNDEgY2VudHMgYSBzaGFyZSwgc2FpZCBwcm9maXQgYXQgaXRzIGludmVzdG1lbnQgYmFuayBmZWxsIDI0IHBlcmNlbnQgdG8gJDcgYmlsbGlvbiBhcyB0aGUgZXVybyB6b25lIGRlYnQgY3Jpc2lzIHNsb3dlZCBjYXBpdGFsIG1hcmtldHMgYWN0aXZpdHkgaW4gdGhlIHNlY29uZCBoYWxmIG9mIHRoZSB5ZWFyLiBMb2FuIGltcGFpcm1lbnQgY2hhcmdlcyBhbmQgb3RoZXIgY3JlZGl0IHJpc2stcmVsYXRlZCBwcm92aXNpb25zLCBob3dldmVyLCBmZWxsICQxLjkgYmlsbGlvbiB0byAkMTIuMSBiaWxsaW9uLiBIU0JDJ3Mgc3RhciBkaXZpc2lvbiB3YXMgY29tbWVyY2lhbCBiYW5raW5nLCB3aGVyZSBwcm9maXRzIGp1bXBlZCAzMSBwZXJjZW50IHRvICQ3LjkgYmlsbGlvbi4gSW4gYSB0aHJvd2JhY2sgdG8gaXRzIHJvb3RzIGFzIGEgYmFuayBzcGVjaWFsaXppbmcgaW4gdHJhZGUgZmluYW5jZSwgbGFzdCB5ZWFyJ3MgZ3Jvd3RoIHdhcyBsZWQgYnkgaW5jcmVhc2VkIGJ1c2luZXNzIGluIEJyYXppbCwgSG9uZyBLb25nLCBDaGluYSwgTWV4aWNvLCBBcmdlbnRpbmEgYW5kIFNpbmdhcG9yZS4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATW9ZOMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDY4M2EwMjJlZTVkZGJhNWI=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0NPU1QuTVg=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATXCiz8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECDuVwo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECDuVwo9cKP</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECDuVwo9cKP</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECDuVwo9cKP</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECDrGZmZmZm</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDM2M2I0NWY5NDcyOWQ5Yzg=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKAuAAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPub8jw==</field></document></documents><date>2015-05-07T07:50:48-0500</date></cacheEntry>
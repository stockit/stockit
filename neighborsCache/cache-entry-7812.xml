<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0Eg9FbWVyZ2luZ21hcmtldCBkaXN0cmVzc2VkIGRlYnQgbG9zc2VzIGFyZSB0aGUgd29yc3QgdGhpcyBtb250aCBzaW5jZSB0aGUgZ2xvYmFsIGZpbmFuY2lhbCBjcmlzaXMgQmFuayBvZiBBbWVyaWNhIE1lcnJpbGwgTHluY2hzIERpc3RyZXNzZWQgRW1lcmdpbmcgTWFya2V0cyBDb3Jwb3JhdGUgUGx1cyBJbmRleCBmZWxsIDEzNCBwZXJjZW50IHRocm91Z2ggRGVjIDI2IHNldCBmb3IgaXRzIHdvcnN0IHBlcmZvcm1hbmNlIHNpbmNlIE9jdG9iZXIgMjAwOCBhcyBhIHR1bWJsZSBpbiB0aGUgcHJpY2Ugb2Ygb2lsIHNwYXJrZWQgYSBjdXJyZW5jeSBjcmlzaXMgaW4gUnVzc2lhIFRoYXQgYnJvdWdodCB0aGlzIHllYXJzIGRlY2xpbmUgdG8gMTk3IHBlcmNlbnQgdGhlIG1vc3QgaW4gc2l4IHllYXJzIEVtZXJnaW5nIG1hcmtldHMgYWNjb3VudGVkIGZvciAxNCBvZiB0aGUgNTYgZ2xvYmFsIGRlZmF1bHRzIHRoaXMgeWVhciBpbiBTdGFuZGFyZCAgUG9vcnMgY292ZXJhZ2UgQ3J1ZGUgcmVhY2hlZCB0aGUgbG93ZXN0IGluIGZpdmUgeWVhcnMgZWFybGllciB0aGlzIG1vbnRoIGFuZCBpcyBoZWFkaW5nIGZvciBpdHMgbGFyZ2VzdCBhbm51YWwgZGVjbGluZSBzaW5jZSAyMDA4IGFzIG1lbWJlcnMgb2YgdGhlIE9yZ2FuaXphdGlvbiBvZiBQZXRyb2xldW0gRXhwb3J0aW5nIENvdW50cmllcyByZXNpc3QgcHJvZHVjdGlvbiBjdXRzIHRvIGRlZmVuZCBtYXJrZXQgc2hhcmUgQSBzdXBwbHkgZ2x1dCBoYXMgYWxzbyBwdXNoZWQgbWV0YWwgYW5kIGNvYWwgcHJpY2VzIGRlZXBlciBpbnRvIGEgYmVhciBtYXJrZXQgV2l0aCBtYW55IG1vdmluZyBwYXJ0cyB0byB0aGUgZXF1YXRpb24gY291bGQgdGhlcmUgYmUgYSBwb2ludCB3aGVyZSBpbnZlc3RvcnMgYmVnaW4gdG8gaW50ZXJwcmV0IHRoZSBjaXJjdW1zdGFuY2VzIGFzIGNvbnRhZ2lvbiBzYWlkIERhdmlkIFRhd2lsIGNvZm91bmRlciBvZiBOZXcgWW9ya2Jhc2VkIE1hZ2xhbiBDYXBpdGFsIExQIFdoYXQgaGFwcGVucyBpZiB3ZSBuZWVkIHRvIGFkZCBWZW5lenVlbGEgYW5kIFJ1c3NpYSB0byB0aGUgbWl4IENvbnRhZ2lvbiBpcyBnb29kIGZvciBubyBvbmUgT2lsIGFjY291bnRzIGZvciA5NSBwZXJjZW50IG9mIFZlbmV6dWVsYXMgZXhwb3J0cyBhbmQgaXRzIGdvdmVybm1lbnQgYm9uZHMgaGF2ZSBzdWZmZXJlZCBhcyBQcmVzaWRlbnQgTmljb2xhcyBNYWR1cm8gc2FpZCBoZSBoYXMgbm8gcGxhbnMgdG8gY3VyYiBmdWVsIHN1YnNpZGllcyBFY29ub21pYyBzYW5jdGlvbnMgYXJlIGFsc28gaHVydGluZyBSdXNzaWEgcHVzaGluZyB0aGUgY291bnRyeSB0b3dhcmQgYSByZWNlc3Npb24gd2hpbGUgY29ycnVwdGlvbiBwcm9iZXMgaW5kdWNlZCBib25kIGxvc3NlcyBpbiBCcmF6aWwgYW5kIENoaW5hIEluIEluZG9uZXNpYSB0aGUgQmFrcmllIGZhbWlseSBncm91cCBvZiBjb21wYW5pZXMgcHV0IGl0cyBjb2FsIHVuaXQgUFQgQnVtaSBSZXNvdXJjZXMgdW5kZXIgY291cnQgcHJvdGVjdGlvbiBDYXBpdGFsIEluamVjdGlvbnMgVGhlIHJ1YmxlIGhhcyB3ZWFrZW5lZCAzNyBwZXJjZW50IHRoaXMgaGFsZiB0aGUgd29yc3QgYW1vbmcgMjQgZW1lcmdpbmcgbWFya2V0IGN1cnJlbmNpZXMgdHJhY2tlZCBieSBCbG9vbWJlcmcgUnVzc2lhIGhhcyBwbGVkZ2VkIGZ1bmRzIGZvciBsZW5kZXJzIGluY2x1ZGluZyBPQU8gR2F6cHJvbWJhbmsgYW5kIFZUQiBHcm91cCB0byBzaG9yZSB1cCBjYXBpdGFsIGFzIHRoZSBjZW50cmFsIGJhbmsgc2FpZCBEZWMgMTYgdGhlIGVjb25vbXkgbWF5IHNocmluayBhcyBtdWNoIGFzIDQ3IHBlcmNlbnQgaWYgb2lsIGF2ZXJhZ2VzIDYwIGEgYmFycmVsIG92ZXIgdGhlIGNvbWluZyAxMiBtb250aHMgWkFPIFJ1c3NpYW4gU3RhbmRhcmQgQmFua3MgMTA3NSBwZXJjZW50IDIwMTggbm90ZXMgYXJlIGRvd24gNTE2IHBlcmNlbnQgdGhpcyBtb250aCB3aGlsZSBPQU8gUHJvbXp2eWF6YmFua3MgMTAyIHBlcmNlbnQgMjAxOSBib25kcyBoYXZlIGxvc3QgMTg5IHBlcmNlbnQgR2F6cHJvbWJhbmtzIGRvbGxhciBkZW5vbWluYXRlZCBub3RlcyB3aGlsZSBub3QgcGFydCBvZiB0aGUgQmFuayBvZiBBbWVyaWNhIE1lcnJpbGwgTHluY2ggaW5kZXggYXJlIHRyYWRpbmcgbmVhciBkaXN0cmVzc2VkIGxldmVscyBJdHMgNzg3NSBwZXJjZW50IHBlcnBldHVhbCBkZWJlbnR1cmVzIHNvbGQgdG8gaW52ZXN0b3JzIGF0IHBhciBpbiBPY3RvYmVyIDIwMTIgdG91Y2hlZCA0OTUgY2VudHMgb24gdGhlIGRvbGxhciBvbiBEZWMgMTYgU3VjaCBsZXZlbHMgZG9udCBuZWNlc3NhcmlseSBtZWFuIHRoZSBkZWJ0cyB3b3J0aCBidXlpbmcgYWNjb3JkaW5nIHRvIFBldGVyIFNjaG90dG11ZWxsZXIgd2hvIGhlbHBzIG1hbmFnZXMgMTcgYmlsbGlvbiBhcyBoZWFkIG9mIGVtZXJnaW5nIG1hcmtldCBkZWJ0IGluIEZyYW5rZnVydCBhdCBEZWthIEludmVzdG1lbnQgR21iSCBGYWxsZW4gQW5nZWxzIEl0cyBub3Qgd29ydGggcGlja2luZyB1cCBmYWxsZW4gYW5nZWxzIGp1c3QgYmVjYXVzZSB0aGVpciBib25kcyBoYXZlIGJlY29tZSBjaGVhcCBTY2hvdHRtdWVsbGVyIHNhaWQgSSB3b3VsZG50IHRvdWNoIGNvbW1vZGl0eXJlbGF0ZWQgc3R1ZmYgYW5kIEkgZG9udCBleHBlY3QgYW55IHNpZ25pZmljYW50IHR1cm5hcm91bmQgZm9yIFJ1c3NpYSBhbmQgVWtyYWluZSBBbW9uZyBEZWNlbWJlcnMgd29yc3QgcGVyZm9ybWVycyB0aGUgODI1IHBlcmNlbnQgMjAxOSBib25kcyBvZiBPQVMgU0EgZGVjbGluZWQgMTIzOCBjZW50cyB0byAzNDI1IGNlbnRzIERlYyAyNiBUaGUgU2FvIFBhdWxvYmFzZWQgb2lsIGNvbnRyYWN0b3IgaXMgdGhlIHN1YmplY3Qgb2YgYW4gaW52ZXN0aWdhdGlvbiBpbnRvIGFsbGVnZWQgY29ycnVwdGlvbiBpbnZvbHZpbmcgY29udHJhY3RzIHdpdGggc3RhdGVydW4gb2lsIHByb2R1Y2VyIFBldHJvbGVvIEJyYXNpbGVpcm8gU0EgdGhhdHMgZW5ndWxmZWQgQnJhemlscyBiaWdnZXN0IGNvbnN0cnVjdGlvbiBjb21wYW5pZXMgSW4gQXNpYSBIb25naHVhIEdyb3VwIEx0ZHMgNzQ1IHBlcmNlbnQgMjAxOSBkZWJ0IGhhcyBwbHVuZ2VkIDE5NyBwZXJjZW50IHNpbmNlIE5vdiAzMCBhbHNvIHB1dHRpbmcgaXQgYW1vbmcgdGhlIGluZGV4cyBiaWdnZXN0IGxvc2VycyBpbiBEZWNlbWJlciBUaGUgQ2hlbmdkdSBTaWNodWFuYmFzZWQgbWFrZXIgb2YgcmlncyBmb3IgdGhlIG9pbCBhbmQgZ2FzIGluZHVzdHJ5IHdhcm5lZCBsYXN0IG1vbnRoIGl0cyAyMDE0IHByb2ZpdCB3aWxsIGRlY3JlYXNlIHNpZ25pZmljYW50bHkgZHVlIHRvIGV4Y2hhbmdlcmF0ZSBmbHVjdHVhdGlvbnMgYW5kIG1hcmtldCB2b2xhdGlsaXR5IEhhaXRvbmcgSW50ZXJuYXRpb25hbCBTZWN1cml0aWVzIENvIGN1dCBpdHMgMjAxNCBlYXJuaW5ncyBmb3JlY2FzdCBmb3IgSG9uZ2h1YSBHcm91cCBieSBhbG1vc3QgaGFsZiBlYXJsaWVyIHRoaXMgbW9udGggY2l0aW5nIHJ1YmxlcmVsYXRlZCBsb3NzZXMgdGllZCB0byBSdXNzaWFuIG9yZGVycyBXb3JzdCBQZXJmb3JtZXIgQnVtaSBSZXNvdXJjZXMgMTA3NSBwZXJjZW50IDIwMTcgZGViZW50dXJlcyBhbHJlYWR5IGluIGRlZmF1bHQgaGF2ZSBkcm9wcGVkIDE5MSBwZXJjZW50IGluIERlY2VtYmVyIGJyaW5naW5nIGxvc3NlcyBmb3IgdGhlIHllYXIgdG8gNjI4IHBlcmNlbnQgVGhlIEpha2FydGFiYXNlZCBtaW5lciBtaXNzZWQgYSBjb3Vwb24gcGF5bWVudCBvbiB0aGUgNzAwIG1pbGxpb24gb2YgZGVidCBpbiBOb3ZlbWJlciBhbmQgdGhlbiBEZWMgMSBmaWxlZCBmb3IgQ2hhcHRlciAxNSBVUyBiYW5rcnVwdGN5IHByb3RlY3Rpb24gTm90ZXMgb2YgQnJhemlsaWFuIHN1Z2FyIHByb2R1Y2VyIEdydXBvIFZpcmdvbGlubyBkZSBPbGl2ZWlyYSBTQSBoYXZlIGxvc3QgdGhlIG1vc3QgdGhpcyBtb250aCBpbiB0aGUgQmFuayBvZiBBbWVyaWNhIE1lcnJpbGwgTHluY2ggaW5kZXggd2hpY2ggdHJhY2tzIDEwOCBib25kcyBJdHMgMTE3NSBwZXJjZW50IDIwMjIgc2VjdXJpdGllcyBoYXZlIHBsdW5nZWQgNDk4IHBlcmNlbnQgYnJpbmdpbmcgZGVjbGluZXMgZm9yIHRoZSB5ZWFyIHRvIDg1NCBwZXJjZW50IFRoZSBjb21wYW55IGlzIGNvbnNpZGVyaW5nIGEgZGVidGZvciBlcXVpdHkgc3dhcCB0aGF0IGNvdWxkIHNlZSBjcmVkaXRvcnMgZW5kIHVwIHdpdGggYSBtYWpvcml0eSBzaGFyZSBwZW9wbGUgZmFtaWxpYXIgd2l0aCB0aGUgbWF0dGVyIHNhaWQgRGVjIDEyIFRoZSBjb21pbmcgMTIgbW9udGhzIG1heSBzcGVsbCBtb3JlIGJhZCB0aW1lcyBmb3IgZW1lcmdpbmcgbWFya2V0IGRlYnQgY29uc2lkZXJpbmcgdGhlIFVTIEZlZGVyYWwgUmVzZXJ2ZSBpcyBleHBlY3RlZCB0byBzdGFydCBpbmNyZWFzaW5nIGludGVyZXN0IHJhdGVzIGZyb20gbmVhciB6ZXJvIGluIHRoZSB0aGlyZCBxdWFydGVyIFRoYXQgd291bGQgaW5jcmVhc2UgdGhlIGNvc3Qgb2YgcmFpc2luZyBuZXcgZnVuZHMgTWFya2V0cyBhcmUgY2hhbGxlbmdlZCBlbm91Z2ggTWFnbGFuIENhcGl0YWxzIFRhd2lsIHNhaWQgTm93IHRoZXlyZSBvbiBlZGdlIGJlY2F1c2Ugb2YgY29uY2VybnMgcmVsYXRpbmcgdG8gdGhlIEZlZCByYWlzaW5nIHJhdGVzIGluIDIwMTUgYW5kIHRoZSBkcm9wIGluIHRoZSBwcmljZSBvZiBvaWx0AARyb3dzdXEAfgAKAAAAAXQAATV0AAVzdGFydHVxAH4ACgAAAAF0AAEwdAACZmx1cQB+AAoAAAABdABvYXJ0aWNsZUlkLHRpdGxlLGNvbnRlbnQsZGF0ZSxzdG9ja0hpc3RvcnlJZCxzeW1ib2wsaGlzdG9yeURhdGUsb3BlbixoaWdoLGxvdyxjbG9zZSxhZGpDbG9zZSx2b2x1bWUsaWQsX3ZlcnNpb25fdAACZnF1cQB+AAoAAAABdAA6aGlzdG9yeURhdGU6WzIwMTMtMTItMDNUMDA6MDA6MDBaIFRPIDIwMTQtMDctMTBUNTk6NTk6NTlaXXgAcA==</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDU3NzM=</field><field name="title" class="java.lang.String">rO0ABXQAOUJvbmRzIFR1bWJsZSBXaXRoIFN0b2NrcyBhcyBZZWxsZW4gT3V0bGluZXMgU3RpbXVsdXMgRXhpdA==</field><field name="content" class="java.lang.String">rO0ABXQfsVlpZWxkcyBvbiB0d28teWVhciBUcmVhc3VyeSBub3RlcyBqdW1wZWQgdGhlIG1vc3Qgc2luY2UgMjAxMSB3aGlsZSBzdG9ja3Mgc2xpZCBhbmQgdGhlIGRvbGxhciBjbGltYmVkIFdlZG5lc2RheSBhcyBGZWRlcmFsIFJlc2VydmUgQ2hhaXIgSmFuZXQgWWVsbGVuIHNhaWQgdGhlIGNlbnRyYWwgYmFua+KAmXMgc3RpbXVsdXMgcHJvZ3JhbSBjb3VsZCBlbmQgdGhpcyBmYWxsIGFuZCBiZW5jaG1hcmsgaW50ZXJlc3QgcmF0ZXMgY291bGQgcmlzZSBzaXggbW9udGhzIGxhdGVyLiBUd28teWVhciB5aWVsZHMgYWR2YW5jZWQgc2V2ZW4gYmFzaXMgcG9pbnRzIHRvIDAuNDIgcGVyY2VudCBhdCA0OjE1IHAubS4gaW4gTmV3IFlvcmsuIFRoZSByYXRlIGVhcmxpZXIgY2xpbWJlZCBuaW5lIHBvaW50cywgdGhlIG1vc3Qgc2luY2UgSnVuZSAyMDExLiBUaGUgU3RhbmRhcmQgJiBQb29y4oCZcyA1MDAgSW5kZXggZmVsbCAwLjYgcGVyY2VudCwgYWZ0ZXIgdGhlIGdhdWdlIGNsb3NlZCB3aXRoaW4gc2l4IHBvaW50cyBvZiBhIHJlY29yZCBUdWVzZGF5LiBUaGUgZG9sbGFyIHN0cmVuZ3RoZW5lZCBhZ2FpbnN0IGFsbCBvZiBpdHMgMTYgbWFqb3IgcGVlcnMsIHJpc2luZyAwLjkgcGVyY2VudCBhZ2FpbnN0IHRoZSB5ZW4uIEdvbGQgZHJvcHBlZCB0aGUgbW9zdCBpbiB0aHJlZSBtb250aHMuIOKAnEkgdGhpbmsgdGhlIG1hcmtldCBiZWluZyByZW1pbmRlZCB0aGF0IHRoZSBGZWQgd2lsbCBldmVudHVhbGx5IHJhaXNlIHJhdGVzIGlzIGdldHRpbmcgdHJhZGVyc+KAmSBhdHRlbnRpb24s4oCdIEpvaG4gQ2FuYWxseSwgYW4gZWNvbm9taWMgc3RyYXRlZ2lzdCBhdCBMUEwgRmluYW5jaWFsIENvcnAuIHNhaWQgaW4gYSBwaG9uZSBpbnRlcnZpZXcgZnJvbSBCb3N0b24uIEhpcyBmaXJtIG92ZXJzZWVzIGFib3V0ICQ0MzguNCBiaWxsaW9uLiDigJxXZeKAmWxsIHByb2JhYmx5IGdldCBhIGNvdXBsZSBkYXlzIG9mIGJhY2sgYW5kIGZvcnRoIGluIHRoZSBtYXJrZXRzLCBidXQgdGhpcyBpcyBhbGwgZ29vZCBjaGFuZ2Uu4oCdIEJvbmRzIGFuZCBVLlMuIGVxdWl0aWVzIHJldHJlYXRlZCBhcyB0aGUgRmVkIHNhaWQgb2ZmaWNpYWxzIHByZWRpY3RlZCB0aGVpciB0YXJnZXQgaW50ZXJlc3QgcmF0ZSB3b3VsZCBiZSAxIHBlcmNlbnQgYXQgdGhlIGVuZCBvZiAyMDE1IGFuZCAyLjI1IHBlcmNlbnQgYSB5ZWFyIGxhdGVyLCBoaWdoZXIgdGhhbiBwcmV2aW91c2x5IGZvcmVjYXN0LCBhcyB0aGV5IHVwZ3JhZGVkIHByb2plY3Rpb25zIGZvciBnYWlucyBpbiB0aGUgbGFib3IgbWFya2V0LiBUaGUgY2VudHJhbCBiYW5rIGFsc28gcmVkdWNlZCB0aGUgbW9udGhseSBwYWNlIG9mIGJvbmQgcHVyY2hhc2VzIGJ5ICQxMCBiaWxsaW9uLCB0byAkNTUgYmlsbGlvbi4gQmVuY2htYXJrIGluZGV4ZXMgZXh0ZW5kZWQgbG9zc2VzIGFzIFllbGxlbiBzYWlkIHRoZSBxdWFudGl0YXRpdmUgZWFzaW5nIHByb2dyYW0gd291bGQgZW5kIHRoaXMgZmFsbCBpZiB0aGUgRmVkIGNvbnRpbnVlcyB0byB0YXBlciBwdXJjaGFzZXMgaW4gbWVhc3VyZWQgc3RlcHMuIFNoZSBzYWlkIHNoZSBzZWVzIGEg4oCcY29uc2lkZXJhYmxlIHRpbWXigJ0gYmV0d2VlbiB0aGUgZW5kIG9mIHRoZSBzdGltdWx1cyBhbmQgdGhlIGZpcnN0IHJhdGUgaW5jcmVhc2UsIG1lYW5pbmcg4oCcc2l4IG1vbnRocyBvciB0aGF0IHR5cGUgb2YgdGhpbmcu4oCdICAgICAgICAgICAgICAgICAgICAgICAgICBJbnRlcmVzdCBSYXRlcyBNb3N0IEZlZGVyYWwgT3BlbiBNYXJrZXQgQ29tbWl0dGVlIHBhcnRpY2lwYW50cyByZWl0ZXJhdGVkIHRoZWlyIHZpZXcgdGhhdCB0aGUgRmVkIHdpbGwgcmVmcmFpbiBmcm9tIHJhaXNpbmcgdGhlIGJlbmNobWFyayBpbnRlcmVzdCByYXRlIHVudGlsIDIwMTUuIFRoZSBtZWRpYW4gcmF0ZSBhbW9uZyAxNiBGZWQgb2ZmaWNpYWxzIHJvc2UgZnJvbSBEZWNlbWJlciwgd2hlbiB0aGV5IGVzdGltYXRlZCB0aGUgcmF0ZSBhdCB0aGUgZW5kIG9mIG5leHQgeWVhciBhdCAwLjc1IHBlcmNlbnQsIGFuZCAxLjc1IHBlcmNlbnQgZm9yIHRoZSBlbmQgb2YgMjAxNi4gVGhlIGNlbnRyYWwgYmFuayBzYWlkIGl0IHdpbGwgbG9vayBhdCBhIHdpZGUgcmFuZ2Ugb2YgZGF0YSBpbiBkZXRlcm1pbmluZyB3aGVuIHRvIHJhaXNlIGl0cyByYXRlIGZyb20gemVybywgZHJvcHBpbmcgYSBwbGVkZ2UgdHlpbmcgYm9ycm93aW5nIGNvc3RzIHRvIGEgNi41IHBlcmNlbnQgdW5lbXBsb3ltZW50IHJhdGUuIOKAnFRoZSBGT01DIHdhcyBtb3JlIGhhd2tpc2gs4oCdIHNhaWQgQW50aG9ueSBWYWxlcmksIGEgbWFya2V0IHN0cmF0ZWdpc3Qgd2l0aCBMUEwgRmluYW5jaWFsIENvcnAuIGluIFNhbiBEaWVnbywgd2hpY2ggb3ZlcnNlZXMgJDM1MCBiaWxsaW9uLiDigJxUaGUgZXhwZWN0YXRpb24gZm9yIGhpZ2hlciByYXRlcyBnb3QgcHVzaGVkIGZvcndhcmQgYW5kIHRoZSBib25kIG1hcmtldCB3YXMgbm90IHByaWNlZCBmb3IgdGhhdC7igJ0gICAgICAgICAgICAgICAgICAgICAgICAgICAgQnVsbCBNYXJrZXQgWWVsbGVuIHNhaWQgbGFzdCBtb250aCB0aGUgVS5TLiBlY29ub215IHdhcyBzdHJvbmcgZW5vdWdoIHRvIHdpdGhzdGFuZCBtZWFzdXJlZCByZWR1Y3Rpb25zIHRvIHRoZSBjZW50cmFsIGJhbmvigJlzIG1vbnRobHkgYm9uZCBwdXJjaGFzZXMuIEJ5IGtlZXBpbmcgaXRzIGJlbmNobWFyayBpbnRlcmVzdC1yYXRlIHRhcmdldCBuZWFyIHplcm8gYW5kIGNvbmR1Y3RpbmcgdGhyZWUgcm91bmRzIG9mIGFzc2V0IHB1cmNoYXNlcywgdGhlIEZlZCBoYXMgaGVscGVkIHB1c2ggdGhlIFMmUCA1MDAgdXAgYXMgbXVjaCBhcyAxNzggcGVyY2VudCBmcm9tIGEgMTIteWVhciBsb3cgYXMgVS5TLiBlcXVpdGllcyBlbnRlciB0aGUgc2l4dGggeWVhciBvZiBhIGJ1bGwgbWFya2V0IHRoYXQgc3RhcnRlZCBpbiBNYXJjaCAyMDA5LiBXYWx0IERpc25leSBDby4sIEdlbmVyYWwgRWxlY3RyaWMgQ28uIGFuZCBCb2VpbmcgQ28uIGxvc3QgYXQgbGVhc3QgMS40IHBlcmNlbnQgdG8gbGVhZCB0aGUgRG93IEpvbmVzIEluZHVzdHJpYWwgQXZlcmFnZSBsb3dlci4gQ29uc29saWRhdGVkIEVkaXNvbiBJbmMuIGxlZCB1dGlsaXRpZXMgdG8gdGhlIGJpZ2dlc3QgZGVjbGluZXMgYW1vbmcgMTAgZ3JvdXBzIGluIHRoZSBTJlAgNTAwLiBUaGUgZG9sbGFyIHJvc2UgMC45IHBlcmNlbnQgdG8gMTAyLjM3IHllbiBhZnRlciBmYWxsaW5nIDAuMyBwZXJjZW50IFR1ZXNkYXkuIFRoZSBVLlMuIGN1cnJlbmN5IGdhaW5lZCAwLjcgcGVyY2VudCB0byAkMS4zODMxIHBlciBldXJvLiBUaGUgZXVybyByb3NlIDAuMiBwZXJjZW50IHRvIDE0MS41OSB5ZW4uIEdvbGQgZm9yIGltbWVkaWF0ZSBkZWxpdmVyeSBzbHVtcGVkIDEuOSBwZXJjZW50IHRvICQxLDMyOS44MCBhbiBvdW5jZSBvbiBzcGVjdWxhdGlvbiB0aGF0IGEgY3V0IGluIGNlbnRyYWwgYmFuayBzdGltdWx1cyB3aWxsIGN1cmIgZGVtYW5kIGZvciB0aGUgcHJlY2lvdXMgbWV0YWwgYXMgYSBoYXZlbi4gVGhlIGJlbmNobWFyayAxMC15ZWFyIFRyZWFzdXJ5IG5vdGUgcm9zZSAxMCBiYXNpcyBwb2ludHMgdG8gMi43NyBwZXJjZW50LiBZaWVsZHMgb24gdGhlIG5vdGVzIGRlY2xpbmVkIDEzIGJhc2lzIHBvaW50cyBsYXN0IHdlZWssIHRoZSBtb3N0IHNpbmNlIHRoZSBwZXJpb2QgZW5kZWQgSmFuLiAxMCwgYW1pZCB0dXJtb2lsIGJldHdlZW4gUnVzc2lhIGFuZCBVa3JhaW5lIG92ZXIgY29udHJvbCBvZiBDcmltZWEuICAgICAgICAgICAgICAgICAgICAgICAgICBVa3JhaW5lIENyaXNpcyBUcmVhc3VyeXMgZmVsbCBlYXJsaWVyIGluIHRoZSBkYXkgd2hpbGUgc3RvY2tzIGZsdWN0dWF0ZWQgYXMgaW52ZXN0b3JzIGNvbnRpbnVlZCB0byB3YXRjaCBkZXZlbG9wbWVudHMgb24gQ3JpbWVhLiBUaGUgVS5TLiBhbmQgRXVyb3BlIGFyZSBtb3ZpbmcgdG8gaW5jcmVhc2Ugc2FuY3Rpb25zIG9uIFJ1c3NpYSBhZnRlciBQcmVzaWRlbnQgVmxhZGltaXIgUHV0aW4gc2lnbmVkIGFuIGFjY29yZCBzZXR0aW5nIGluIG1vdGlvbiBDcmltZWHigJlzIGFjY2Vzc2lvbiB0byBSdXNzaWEuIFdpdGggdmlzYSBiYW5zIGFuZCBhc3NldCBmcmVlemVzIG9uIFJ1c3NpYW4gb2ZmaWNpYWxzIGZhaWxpbmcgdG8gc3dheSBQdXRpbiwgRXVyb3BlYW4gVW5pb24gbGVhZGVycyB3aWxsIG1lZXQgdG9tb3Jyb3cgdG8gY29uc2lkZXIg4oCcYWRkaXRpb25hbCBhbmQgZmFyLSByZWFjaGluZyBjb25zZXF1ZW5jZXMu4oCdIFVrcmFpbmUgb3JkZXJlZCB0aGUgcmVtb3ZhbCBvZiBpdHMgbWlsaXRhcnkgZnJvbSBDcmltZWEgYW5kIHNhaWQgaXQgd2lsbCBzdHJlbmd0aGVuIGl0cyBkZXBsb3ltZW50cyBvbiB0aGUgY291bnRyeeKAmXMgYm9yZGVyIHdpdGggUnVzc2lhLiBHbG9iYWwgc3RvY2tzIGNsaW1iZWQgZHVyaW5nIHRoZSBwcmV2aW91cyB0d28gZGF5cywgd2l0aCB0aGUgUyZQIDUwMCBhZHZhbmNpbmcgMS43IHBlcmNlbnQsIGFzIFJ1c3NpYSBwbGVkZ2VkIG5vdCB0byBzZWVrIHRlcnJpdG9yeSBiZXlvbmQgQ3JpbWVhLiBNb3Njb3figJlzIE1pY2V4IGluZGV4IGRyb3BwZWQgMS4zIHBlcmNlbnQgV2VkbmVzZGF5LCBhZnRlciByYWxseWluZyA4IHBlcmNlbnQgaW4gdGhlIHBhc3QgdHdvIHNlc3Npb25zLiBUaGUgcnVibGUgY2xpbWJlZCAwLjUgcGVyY2VudCB0byAzNi4wNiBhZ2FpbnN0IHRoZSBkb2xsYXIuIFUuSy4gbmF0dXJhbCBnYXMsIHRoZSBFdXJvcGVhbiBVbmlvbuKAmXMgYmVuY2htYXJrIGNvbnRyYWN0LCBkcm9wcGVkIGZvciBhIHRoaXJkIGRheSwgZmFsbGluZyAyLjQgcGVyY2VudCB0byA1Ni41NyBwZW5jZSBhIHRoZXJtLiBFdXJvcGUgZ2V0cyBhYm91dCBhIHRoaXJkIG9mIGl0cyBuYXR1cmFsIGdhcyBmcm9tIFJ1c3NpYSwgaGFsZiBvZiBpdCB0aHJvdWdoIFVrcmFpbmUuICAgICAgICAgICAgICAgICAgICAgICAgICAgRXVyb3BlIFN0b2NrcyBUaGUgU3RveHggRXVyb3BlIDYwMCBmZWxsIDAuMSBwZXJjZW50IGFmdGVyIGp1bXBpbmcgMS44IHBlcmNlbnQgaW4gdGhlIHBhc3QgdHdvIGRheXMsIHJlYm91bmRpbmcgZnJvbSBpdHMgYmlnZ2VzdCB3ZWVrbHkgbG9zcyBzaW5jZSBKYW51YXJ5LiBUaGUgbnVtYmVyIG9mIHNoYXJlcyBjaGFuZ2luZyBoYW5kcyBXZWRuZXNkYXkgaW4gU3RveHggNjAwLWxpc3RlZCBjb21wYW5pZXMgd2FzIDI1IHBlcmNlbnQgYWJvdmUgdGhlIDMwLWRheSBhdmVyYWdlLCBhY2NvcmRpbmcgdG8gZGF0YSBjb21waWxlZCBieSBCbG9vbWJlcmcuIEJheWVyaXNjaGUgTW90b3JlbiBXZXJrZSBBRyBhZHZhbmNlZCA3LjMgcGVyY2VudCBhZnRlciB0aGUgd29ybGTigJlzIGJpZ2dlc3QgbWFrZXIgb2YgbHV4dXJ5IGF1dG9zIGZvcmVjYXN0IOKAnHNpZ25pZmljYW504oCdIGdhaW5zIGluIDIwMTQgcHJvZml0LiBJbmRpdGV4IFNBIGdhaW5lZCA0LjkgcGVyY2VudCBhZnRlciB0aGUgU3BhbmlzaCBvd25lciBvZiB0aGUgWmFyYSBjbG90aGluZyBjaGFpbiByZXBvcnRlZCByaXNpbmcgcmV2ZW51ZSBpbiB0aGUgZmlyc3Qgc2l4IHdlZWtzIG9mIHRoZSBmaXNjYWwgeWVhciBhbmQgc2FpZCBpdCB3aWxsIHN0YXJ0IG9ubGluZSBzYWxlcyBpbiBtb3JlIG1hcmtldHMuIEEgZ2F1Z2Ugb2YgaW5zdXJlcnMgcG9zdGVkIHRoZSBzZWNvbmQtYmlnZ2VzdCBkZWNsaW5lIG9mIHRoZSAxOSBpbmR1c3RyeSBncm91cHMgaW4gdGhlIFN0b3h4IDYwMC4gVS5LLiBDaGFuY2VsbG9yIG9mIHRoZSBFeGNoZXF1ZXIgR2VvcmdlIE9zYm9ybmUgc2NyYXBwZWQgYSByZXF1aXJlbWVudCBmb3IgQnJpdGlzaCByZXRpcmVlcyB0byBidXkgcGVuc2lvbiBhbm51aXRpZXMuIExlZ2FsICYgR2VuZXJhbCBHcm91cCBQbGMgdHVtYmxlZCA4LjQgcGVyY2VudCBhbmQgQXZpdmEgUGxjIGRyb3BwZWQgNS4yIHBlcmNlbnQuICAgICAgICAgICAgICAgICAgICAgICAgICAgVS5LLiBFY29ub215IFRoZSBwb3VuZCBzdHJlbmd0aGVuZWQgYWdhaW5zdCAxMyBvZiBpdHMgbWFqb3IgcGVlcnMuIFRoZSBjdXJyZW5jeSBhZHZhbmNlZCBhZnRlciB0aGUgQmFuayBvZiBFbmdsYW5kIHNhaWQgdGhlcmXigJlzIHJpc2tzIG9mIGZ1cnRoZXIgZ2FpbnMgaW4gdGhlIHBvdW5kIGFuZCBhIGdvdmVybm1lbnQgcmVwb3J0IHNob3dlZCB0aGUgam9ibGVzcyByYXRlIHdhcyBuZWFyIGEgZml2ZS15ZWFyIGxvdy4gVGhlIFUuSy4gZWNvbm9teSB3aWxsIGdyb3cgMi43IHBlcmNlbnQgdGhpcyB5ZWFyLCBtb3JlIHRoYW4gcHJldmlvdXNseSBmb3JlY2FzdCwgQ2hhbmNlbGxvciBvZiB0aGUgRXhjaGVxdWVyIE9zYm9ybmUgc2FpZCBhcyBoZSBzZXQgb3V0IGhpcyBwZW51bHRpbWF0ZSBidWRnZXQgYmVmb3JlIHRoZSAyMDE1IGVsZWN0aW9uLiBUaGUgcG91bmQgYWRkZWQgMC40IHBlcmNlbnQgdG8gODMuNjMgcGVuY2UgcGVyIGV1cm8uIFdlc3QgVGV4YXMgSW50ZXJtZWRpYXRlIHJvc2UgMC43IHBlcmNlbnQgdG8gJDEwMC4zNywgdGhlIGhpZ2hlc3QgaW4gYSB3ZWVrLCBhZnRlciBhIGdvdmVybm1lbnQgcmVwb3J0IHNob3dlZCB0aGF0IGludmVudG9yaWVzIGF0IEN1c2hpbmcsIE9rbGFob21hLCB0aGUgZGVsaXZlcnkgcG9pbnQgZm9yIHRoZSBjb250cmFjdCwgZHJvcHBlZCBhIHNldmVudGggd2Vlay4gICAgICAgICAgICAgICAgICAgICAgICAgICBDb3BwZXIsIENoaW5hIFRoZSBTaGFuZ2hhaSBDb21wb3NpdGUgSW5kZXggZmVsbCAwLjIgcGVyY2VudCBhcyBDaGluZXNlIGRldmVsb3BlcnMgZXh0ZW5kZWQgZGVjbGluZXMgYWZ0ZXIgdGhlIGNvbGxhcHNlIG9mIGEgcHJpdmF0ZSBkZXZlbG9wZXIgc3B1cnJlZCBjb25jZXJuIHRoZSBpbmR1c3RyeSBtYXkgZmFjZSBkZWZhdWx0cy4gQ2hpbmHigJlzIGNlbnRyYWwgYmFuayBzYWlkIGl0IGRpZG7igJl0IHBhcnRpY2lwYXRlIGluIGFuIOKAnGVtZXJnZW5jeSBtZWV0aW5n4oCdIG9uIHRoZSBjb2xsYXBzZSBvZiBaaGVqaWFuZyBYaW5ncnVuIFJlYWwgRXN0YXRlIENvLiwgYSBkZXZlbG9wZXIgd2l0aCAzLjUgYmlsbGlvbiB5dWFuICgkNTY1IG1pbGxpb24pIG9mIGRlYnQuIFRoZSBmYWlsdXJlIHRvIHBheSBiYWNrIGRlYnRzIGNvbWVzIHR3byB3ZWVrcyBhZnRlciB0aGUgY291bnRyeSBzYXcgaXRzIGZpcnN0IG9uc2hvcmUgYm9uZCBkZWZhdWx0IGFuZCBjb2luY2lkZXMgd2l0aCBlZmZvcnRzIGJ5IHRoZSBnb3Zlcm5tZW50IHRvIHJlZHVjZSByaXNrcyBpbiB0aGUgZmluYW5jaWFsIHN5c3RlbS4g4oCcVGhlIG1hbm5lciBpbiB3aGljaCB0aGUgQ2hpbmVzZSBhdXRob3JpdGllcyByZXNvbHZlIHRoZXNlIGRlZmF1bHRzIHdpbGwgaGF2ZSBpbXBvcnRhbnQgaW1wbGljYXRpb25zIG9uIHRoZSBpbmR1c3RyeSzigJ0gRml0Y2ggUmF0aW5ncyBMdGQuIGFuYWx5c3RzIEFuZHkgQ2hhbmcgYW5kIEthbGFpIFBpbGxheSBzYWlkIGluIGEgbm90ZSBXZWRuZXNkYXkuIOKAnFdlIGJlbGlldmUgdGhlIGF1dGhvcml0aWVzIHdpbGwgZm9yY2Ugc2hhcmVob2xkZXJzIGFuZCBzb21lIG9mIHRoZSBsZW5kZXJzLCBlc3BlY2lhbGx5IGZyb20gdGhlIG5vbi0gdHJhZGl0aW9uYWwgc2VjdG9ycywgdG8gcmVhbGl6ZSB0aGVpciBsb3NzZXMu4oCdIENvcHBlciByb3NlIDEuMiBwZXJjZW50LCBlcmFzaW5nIGFuIGVhcmxpZXIgZGVjbGluZSBvZiBhcyBtdWNoIGFzIDIuNSBwZXJjZW50IHRoYXQgd2FzIGZ1ZWxlZCBieSBjb25jZXJuIHRoYXQgZGVmYXVsdHMgYnkgaW5kZWJ0ZWQgQ2hpbmVzZSBjb21wYW5pZXMgd2lsbCBlcm9kZSBkZW1hbmQgaW4gdGhlIGJpZ2dlc3QgY29uc3VtZXIgb2YgdGhlIG1ldGFsLiBGdXR1cmVzIHRvdWNoZWQgdGhlIGxvd2VzdCBsZXZlbCBzaW5jZSAyMDEwIGJlZm9yZSByZWJvdW5kaW5nLiBDaGluYeKAmXMgeXVhbiBzbGlkIGJlbG93IDYuMjAgcGVyIGRvbGxhciBmb3IgdGhlIGZpcnN0IHRpbWUgc2luY2UgQXByaWwgYXMgdGhlIGNlbnRyYWwgYmFuayBjdXQgdGhlIGN1cnJlbmN54oCZcyBmaXhpbmcuIFRoZSB5dWFuIGZlbGwgMC4wNyBwZXJjZW50IHRvIGNsb3NlIGF0IDYuMTk2NSBwZXIgZG9sbGFyIGluIFNoYW5naGFpLCBDaGluYSBGb3JlaWduIEV4Y2hhbmdlIFRyYWRlIFN5c3RlbSBwcmljZXMgc2hvdy4gVGhlIGN1cnJlbmN5IHRvdWNoZWQgNi4yMDQwIGVhcmxpZXIsIHRoZSBsb3dlc3Qgc2luY2UgQXByaWwgOC4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUTYtdiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDhhNzlkZWYyMDVmNTAxZjA=</field><field name="symbol" class="java.lang.String">rO0ABXQABUJBTVhG</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUTd3DSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBeHrhR64Uf</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBeKZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBeDhR64Ueu</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBeDhR64Ueu</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBdLCj1wo9c</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAADhA==</field><field name="id" class="java.lang.String">rO0ABXQAEDYwYTM1Nzg0ZGViY2E3ZmQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHgDAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDg3MDI=</field><field name="title" class="java.lang.String">rO0ABXQAM0dvbGQgQnVsbHMgUmV0cmVhdCBhcyBQcmljZXMgRHJvcCB0byBGb3VyLU1vbnRoIExvdw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUK3Cq8AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGRmNDQ1MGM3N2Y1NGE2NTc=</field><field name="symbol" class="java.lang.String">rO0ABXQAA05PVg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUK8MQsAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUiuFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUqZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUQzMzMzMz</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUdmZmZmZm</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBR49cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAACEpdA==</field><field name="id" class="java.lang.String">rO0ABXQAEGZmNzhiYTVlYjFiYmM4MGM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mG5hAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE0NDgy</field><field name="title" class="java.lang.String">rO0ABXQALVRveXMgJ1InIFVzIExldmVyYWdlZCBMaWtlICcwNSBhcyBMb3NzIE1vdW50cw==</field><field name="content" class="java.lang.String">rO0ABXQW4FRveXMg4oCcUuKAnSBVc+KAmXMgZGVidCByYXRpb3MgcmV0dXJuZWQgdG8gbGV2ZWxzIGxhc3Qgc2VlbiBmb2xsb3dpbmcgaXRzICQ2LjYgYmlsbGlvbiBsZXZlcmFnZWQgYnV5b3V0IGluIDIwMDUsIHVuZGVyc2NvcmluZyBoZWlnaHRlbmVkIGNvbmNlcm4gYW1vbmcgaW52ZXN0b3JzIHRoYXQgdGhlIHJldGFpbGVyIG1heSBub3QgYmUgYWJsZSB0byByZWNvdmVyIGZyb20gaXRzIGJpZ2dlc3QgbG9zcyBpbiBuZWFybHkgdGhyZWUgZGVjYWRlcy4g4oCcSXTigJlzIGFsd2F5cyB0aGVyZSwgeW91IG5ldmVyIGdldCBhd2F5IGZyb20gaXQs4oCdIFNlYW4gTWNHb3dhbiwgYW4gZXF1aXR5IGFuYWx5c3Qgd2hvIGZvY3VzZXMgb24gdGhlIHRveSBpbmR1c3RyeSBhdCBOZWVkaGFtICYgQ28uIGluIE5ldyBZb3JrLCBzYWlkIGFib3V0IHRoZSBjb21wYW554oCZcyBkZWJ0IGxvYWQuIOKAnFNvbWV0aGluZ+KAmXMgZ290IHRvIGNoYW5nZSwgdGhhdOKAmXMgZm9yIHN1cmUu4oCdIERlYnQgYXQgdGhlIFdheW5lLCBOZXcgSmVyc2V5LWJhc2VkIGNvbXBhbnkgaGFzIGNsaW1iZWQgdG8gbW9yZSB0aGFuIDggdGltZXMgaXRzIGNhc2ggZmxvdywgdGhlIHNhbWUgYXMgd2hlbiBpdCB3YXMgYm91Z2h0IG5pbmUgeWVhcnMgYWdvIGJ5IEtLUiAmIENvLiwgQmFpbiBDYXBpdGFsIExMQyBhbmQgVm9ybmFkbyBSZWFsdHkgVHJ1c3QsIGFjY29yZGluZyB0byBNb29keeKAmXMgSW52ZXN0b3JzIFNlcnZpY2UuIFRoZSByYXRpbyBpcyB1cCBmcm9tIDUuNSB0aW1lcyBhIHllYXIgYWdvIGFuZCBjb21wYXJlcyB3aXRoIGFuIGluZHVzdHJ5IGF2ZXJhZ2Ugb2YgYWJvdXQgMywgYWNjb3JkaW5nIHRvIGRhdGEgY29tcGlsZWQgYnkgQmxvb21iZXJnLiBBIGNhbmRpZGF0ZSBmb3IgYW4gaW5pdGlhbCBwdWJsaWMgb2ZmZXJpbmcgYXMgcmVjZW50bHkgYXMgMjAxMCwgdGhlIHRveSBzZWxsZXIgaXMgbm93IHN0cnVnZ2xpbmcgdG8gcmV2ZXJzZSBhIGJpbGxpb24tZG9sbGFyIGxvc3MgbGFzdCB5ZWFyIGluIGFuIGVudmlyb25tZW50IHdoZXJlIHRocmVlIHNwZWNpYWx0eSByZXRhaWxlcnMgaGF2ZSBzb3VnaHQgYmFua3J1cHRjeSBwcm90ZWN0aW9uIHNpbmNlIERlY2VtYmVyIGFtaWQgc2x1Z2dpc2ggY29uc3VtZXIgc3BlbmRpbmcuIE1vcmUgdGhhbiAkODUwIG1pbGxpb24gb2YgaXRzIGJvbmRzIHRyYWRlIGF0IGRpc3RyZXNzZWQgbGV2ZWxzLCBhbmQgTW9vZHnigJlzIGN1dCB0aGUgY29tcGFueeKAmXMgY3JlZGl0IHJhdGluZyB0aGlzIG1vbnRoIHRvIHNpeCBsZXZlbHMgYmVsb3cgaW52ZXN0bWVudCBncmFkZS4gS2F0aGxlZW4gV2F1Z2gsIGEgc3Bva2VzbWFuIGZvciBUb3lzIOKAnFLigJ0gVXMsIHdhc27igJl0IGF2YWlsYWJsZSB0byBjb21tZW50IG9uIHRoZSBjb21wYW554oCZcyBsZXZlcmFnZSBvciByZWNlbnQgZWFybmluZ3MuIEJvbmRzIFBsdW5nZSBUaGUgcmV0YWlsZXLigJlzICQ0NTAgbWlsbGlvbiBvZiAxMC4zNzUgcGVyY2VudCBib25kcyBkdWUgaW4gQXVndXN0IDIwMTcsIHRyYWRlZCBhdCA4MSBjZW50cyBvbiB0aGUgZG9sbGFyIEFwcmlsIDExLCBkb3duIGZyb20gMTEwLjUgY2VudHMgaW4gTWF5LCBhY2NvcmRpbmcgdG8gVHJhY2UsIHRoZSBib25kLXByaWNlIHJlcG9ydGluZyBzZXJ2aWNlIG9mIHRoZSBGaW5hbmNpYWwgSW5kdXN0cnkgUmVndWxhdG9yeSBBdXRob3JpdHkuIFRoZXkgeWllbGRlZCAxNy41IHBlcmNlbnRhZ2UgcG9pbnRzIG1vcmUgdGhhbiBzaW1pbGFyLW1hdHVyaXR5IFRyZWFzdXJ5cy4gVGhvc2UgZGViZW50dXJlcyBhbG9uZyB3aXRoICQ0MDAgbWlsbGlvbiBvZiA3LjM3NSBwZXJjZW50IG5vdGVzIGR1ZSBPY3RvYmVyIDIwMTggYXJlIGFtb25nIHRoZSAxNDggc2VjdXJpdGllcyBjb25zaWRlcmVkIGRpc3RyZXNzZWQsIEJsb29tYmVyZyBkYXRhIHNob3cuIFRoZSBtZWFzdXJlIHRyYWNrcyBib25kcyB0aGF0IHlpZWxkIGF0IGxlYXN0IDEwIHBlcmNlbnRhZ2UgcG9pbnRzIG1vcmUgdGhhbiBjb21wYXJhYmxlIGdvdmVybm1lbnQgZGVidC4gTGFzdCBtb250aCwgVG95cyDigJxS4oCdIFVzIGFubm91bmNlZCBhICQxIGJpbGxpb24gbG9zcyBmb3IgZmlzY2FsIDIwMTMsIGl0cyB3b3JzdCBwZXJmb3JtYW5jZSBzaW5jZSBhdCBsZWFzdCAxOTg3LCBCbG9vbWJlcmcgZGF0YSBzaG93LiBTYWxlcyBhdCBzdG9yZXMgb3BlbiBhdCBsZWFzdCBhIHllYXIgZmVsbCA1IHBlcmNlbnQgYXQgVS5TLiBsb2NhdGlvbnMgYW5kIGRyb3BwZWQgMy4zIHBlcmNlbnQgaW50ZXJuYXRpb25hbGx5LiDigJxUaGV5IHdlcmUgb3V0IG9mIHN0b2NrLCBhbmQgdGhhdCBtYXkgYmUgcmVsYXRlZCB0byBtYW5hZ2luZyBjYXNoIHRvbyB0aWdodGx5LCBidXQgaXTigJlzIGluZXhjdXNhYmxlIGZvciBUb3lzIOKAmOKAmFLigJnigJkgVXMgdG8gYmUgb3V0IG9mIHN0b2NrLOKAnSBNY0dvd2FuIHNhaWQuIFJldGFpbCBDb21wZXRpdGlvbiBUaGUgcmV0YWlsZXIgY29tcGV0ZXMgd2l0aCBnaWFudHMgc3VjaCBhcyBXYWwtTWFydCBTdG9yZXMgSW5jLiBhbmQgVGFyZ2V0IENvcnAuIHRoYXQgYXR0cmFjdCBhIHN0ZWFkeSBzdHJlYW0gb2YgY3VzdG9tZXJzIHdpdGggZ3JvY2VyaWVzIGFuZCBvdGhlciBiYXNpY3MuIEFuZCB0aGUgb25lIGFyZWEgd2hlcmUgVG95cyDigJxS4oCdIFVzIGhhZCBkaXN0aW5ndWlzaGVkIGl0c2VsZiBpbiB0aGUgcGFzdCwgdGhlIGJyZWFkdGggb2Ygc2VsZWN0aW9uLCBpcyBub3cgY2hhbGxlbmdlZCBieSBBbWF6b24uY29tIEluYy4sIE1jR293YW4gc2FpZC4g4oCcV2hhdCBXYWwtTWFydCwgVGFyZ2V0IGFuZCBBbWF6b24gY2FuIGRvIGlzIHRoZXkgY2FuIHVzZSB0b3lzIHRvIGRyaXZlIHRyYWZmaWMgdG8gc3RvcmVzIG9yIG9ubGluZSwgYW5kIGlmIG5vdCB0b3lzIHRoZW4gdGhleSBjYW4gc2VsbCBvdGhlciBzdHVmZizigJ0gQ2hhcmxlcyBP4oCZU2hlYSwgYW4gYW5hbHlzdCBhdCBNb29keeKAmXMsIHNhaWQgaW4gYSB0ZWxlcGhvbmUgaW50ZXJ2aWV3LiBPbiBBcHJpbCA0LCBNb29keeKAmXMgY3V0IHRoZSBjb21wYW554oCZcyBjb3Jwb3JhdGUgZmFtaWx5IHJhdGluZyBvbmUgbGV2ZWwgdG8gQjMsIHNpeCBsZXZlbHMgYmVsb3cgaW52ZXN0bWVudCBncmFkZS4gU3RhbmRhcmQgJiBQb29y4oCZcyBoYXMgYW4gZXF1aXZhbGVudCBCLSByYXRpbmcgb24gdGhlIGRlYnQuIE1vb2R54oCZcyBhbmFseXN0cyBjaXRlZCB0aGUgdG95IHNlbGxlcuKAmXMgaW5hYmlsaXR5IHRvIGNhcGl0YWxpemUgb24gaXRzIHZpZGVvIGJ1c2luZXNzLCBhbiBhcmVhIHRoYXQgaGFzIGJlZW4gYmVuZWZpY2lhbCB0byBjb21wZXRpdG9ycy4gTGV2ZXJhZ2UgU3VyZ2VzIFRveXMg4oCcUuKAnSBVcyBsZXZlcmFnZSwgYWZ0ZXIgaGF2aW5nIGltcHJvdmVkIGluIHRoZSBsYXN0IGZldyB5ZWFycywgaXMgYmFjayB0byBwb3N0LWJ1eW91dCBjb25kaXRpb25zIGFmdGVyIOKAnG9uZSBiYWQgeWVhcizigJ0gaGUgc2FpZC4g4oCcSXQganVzdCBzaG93cyBob3cgZnJhZ2lsZSB0aGUgY29tcGFueeKAmXMgY3JlZGl0IG1ldHJpY3MgdHVybmVkIG91dCB0byBiZSBnaXZlbiB0aGUgaGlnaGx5IGxldmVyYWdlZCBjYXBpdGFsIHN0cnVjdHVyZS7igJ0gVG95cyDigJxS4oCdIFVz4oCZcyB0b3RhbCBkZWJ0IG9mICQ1IGJpbGxpb24gY29tcGFyZXMgd2l0aCBhZGp1c3RlZCBlYXJuaW5ncyBiZWZvcmUgaW50ZXJlc3QsIHRheGVzLCBkZXByZWNpYXRpb24gYW5kIGFtb3J0aXphdGlvbiBvZiAkNTg4IG1pbGxpb24gZm9yIHRoZSB5ZWFyIGVuZGVkIEZlYi4gMSwgYWNjb3JkaW5nIHRvIGEgTWFyY2ggMzEgcmVndWxhdG9yeSBmaWxpbmcuIFRoZSBhdmVyYWdlIGxldmVyYWdlLCBvciB0aGUgcmF0aW8gb2YgZGVidCB0byBFYml0ZGEgZm9yIHB1YmxpY2x5IHRyYWRlZCBVLlMuIGNvbnN1bWVyIGRpc2NyZXRpb25hcnkgY29tcGFuaWVzIHdpdGggYXQgbGVhc3QgJDUwMCBtaWxsaW9uIGluIG9ibGlnYXRpb25zIGlzIDMgdGltZXMsIEJsb29tYmVyZyBkYXRhIHNob3cuIFRoZSBjb21wYW554oCZcyBvd25lcnMgaGFkIGxvb2tlZCB0byB0aGUgZXF1aXR5IG1hcmtldHMgdG8gaGVscCBpdCBjdXQgZGVidCwgZmlsaW5nIGZvciBhbiAkODAwIG1pbGxpb24gaW5pdGlhbCBwdWJsaWMgb2ZmZXJpbmcgaW4gTWF5IDIwMTAuIEl0IHNoZWx2ZWQgdGhlIHBsYW4gYWxtb3N0IHRocmVlIHllYXJzIGxhdGVyLCBjaXRpbmcgcG9vciBtYXJrZXQgY29uZGl0aW9ucyBhbmQgYSBwZW5kaW5nIGxlYWRlcnNoaXAgY2hhbmdlLiBUb3lzIOKAnFLigJ0gVXMgbmFtZWQgQW50b25pbyBVcmNlbGF5LCB3aG8gc2VydmVkIGFzIGludGVyaW0gY2hpZWYgZXhlY3V0aXZlIG9mZmljZXIgYWZ0ZXIgbGVhZGluZyB0aGUgRXVyb3BlYW4gZGl2aXNpb24sIGFzIHBlcm1hbmVudCBoZWFkIGluIE9jdG9iZXIuIEF0IHRoZSBzYW1lIHRpbWUsIGl0IGFubm91bmNlZCBIYW5rIE11bGxhbnksIGEgZm9ybWVyIGV4ZWN1dGl2ZSBhdCBXYWwtTWFydCwgYXMgcHJlc2lkZW50IG9mIGl0cyBVLlMuIGJ1c2luZXNzLiBNYXR1cml0eSBXYWxsIFRoZSBjb21wYW55IGNvbXBldGVzIGZvciBhIHNoYXJlIG9mIHRoZSBnbG9iYWwgdG95IG1hcmtldCwgd2hpY2ggaGFzIGJlZW4gZmxhdCBhdCBhYm91dCAkODQgYmlsbGlvbiBvdmVyIHRoZSBwYXN0IGZvdXIgeWVhcnMsIGFjY29yZGluZyB0byBhIEphbi4gMjggRml0Y2ggUmF0aW5ncyByZXBvcnQuIFRyYWRpdGlvbmFsIHByb2R1Y3QgY2F0ZWdvcmllcyBoYXZlIGZhY2VkIGluY3JlYXNpbmcgaGVhZHdpbmRzIHdpdGggY2hpbGRyZW4gZXhwcmVzc2luZyBhIHByZWZlcmVuY2UgZm9yIGRpZ2l0YWwgZ2FtZXMsIHRoZSByZXBvcnQgc2FpZC4gSXQgZmFjZXMgbW9yZSB0aGFuICQxIGJpbGxpb24gb2YgZGVidCBjb21pbmcgZHVlIGluIDIwMTYgZXZlbiBhcyBjYXBpdGFsIGV4cGVuZGl0dXJlcyB3aWxsIGV4Y2VlZCBjYXNoIGZyb20gb3BlcmF0aW5nIGFjdGl2aXRpZXMgYnkgYXMgbXVjaCBhcyAkMjUwIG1pbGxpb24gb3ZlciB0aGUgbmV4dCB0d28geWVhcnMsIEZpdGNoIGFuYWx5c3QgSXNhYmVsIEh1IHNhaWQuIENvbGR3YXRlciBDcmVlayBJbmMuLCBhIHdvbWVu4oCZcyBjbG90aGluZyByZXRhaWxlciwgZmlsZWQgZm9yIGJhbmtydXB0Y3kgcHJvdGVjdGlvbiBsYXN0IHdlZWssIGZvbGxvd2luZyBEb3RzIExMQyBhbmQgTG9laG1hbm7igJlzIEluYy4sIGFzIGNvbnN1bWVyIHNwZW5kaW5nIHJlbWFpbnMgc2hha3kuIOKAnFRoZXJlIGlzIGluY3JlYXNpbmcgYnVzaW5lc3MgcmlzayBhcyB3ZWxsIGFzIGxpcXVpZGl0eSBwcmVzc3VyZSzigJ0gSHUgc2FpZCBpbiBhIHRlbGVwaG9uZSBpbnRlcnZpZXcuIFdoaWxlIHJldml2aW5nIGFuIElQTyBtaWdodCBiZSBhIGJlc3QtY2FzZSBvcHRpb24gaW4gdHdvIG9yIHRocmVlIHllYXJzLCB0aGUga2V5IGZvciB0aGUgbW9tZW50IGlzIHRvIHN0YWJpbGl6ZSBvcGVyYXRpb25zIGFuZCB0aGVuIHRyeSB0byBwdXNoIG91dCBkZWJ0IG1hdHVyaXRpZXMsIFN0ZXZlbiBBemFyYmFkLCBjby1mb3VuZGVyIG9mIE1hZ2xhbiBDYXBpdGFsIExQLCBhIE5ldyBZb3JrLWJhc2VkIGhlZGdlIGZ1bmQgc3BlY2lhbGl6aW5nIGluIGRpc3RyZXNzZWQgc2VjdXJpdGllcywgc2FpZCBpbiBhIHRlbGVwaG9uZSBpbnRlcnZpZXcuIOKAnEkgdGhpbmsgZXZlcnlvbmUgaXMganVzdCByZWFsbHkgbG9va2luZyBhdCB0aGlzIHJpZ2h0IG5vdyBhcyBhIHNob3ctbWUgc3Rvcnks4oCdIEF6YXJiYWQgc2FpZC4gVGhlIG93bmVycyDigJxkZWZpbml0ZWx5IHdhbnQgdG8gYnV5IHRoZW1zZWx2ZXMgbW9yZSB0aW1lLiBDbGVhcmx5IGEgbmVhci10ZXJtIGV4aXQgb24gdGhpcyBpbnZlc3RtZW50IGlzIG5vdCBpbiB0aGUgb2ZmaW5nLuKAnQ==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUVemzCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDg1MmMyZTdlN2Y1MGU5NDU=</field><field name="symbol" class="java.lang.String">rO0ABXQAAVI=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUVjwYyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBT1cKPXCj2</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBT/Cj1wo9c</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBTkAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBTw9cKPXCk</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBTceuFHrhS</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAunNA==</field><field name="id" class="java.lang.String">rO0ABXQAEGY1MmUyZjg5MTA1NmU3MTM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFdgAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDI2MTU=</field><field name="title" class="java.lang.String">rO0ABXQAOFRyZWFzdXJ5cyBEcmF3IEJ1eWVycyBhcyBSYXRlIENvbmNlcm5zIEVhc2UsIFN0b2NrcyBGYWxs</field><field name="content" class="java.lang.String">rO0ABXQWvFByaWNlcyBvZiBVLlMuIFRyZWFzdXJ5IHNlY3VyaXRpZXMgcm9zZSBzdHJvbmdseSBUaHVyc2RheSBhcyB0aGUgZ292ZXJubWVudCdzIHNhbGUgb2YgJDEzIGJpbGxpb24gaW4gMzAteWVhciBib25kcyBkcmV3IGhpZ2hlci10aGFuLWF2ZXJhZ2UgZGVtYW5kIGEgZGF5IGFmdGVyIEZlZGVyYWwgUmVzZXJ2ZSBtaW51dGVzIGRhbXBlZCBiZXRzIHBvbGljeSBtYWtlcnMgd291bGQgYWNjZWxlcmF0ZSBpbnRlcmVzdC1yYXRlIGluY3JlYXNlcy4gQmVuY2htYXJrIDEwLXllYXIgeWllbGRzIHJlYWNoZWQgYW4gYWxtb3N0IGZvdXItd2VlayBsb3cgYW5kIHN0b2NrcyBkcm9wcGVkIHRoZSBtb3N0IGluIHR3byBtb250aHMgYXMgY2VudHJhbCBiYW5rIG1lZXRpbmcgbWludXRlcyBpbmRpY2F0ZWQgYSByaXNlIGluIHBvbGljeSBtYWtlcnPigJkgbWVkaWFuIHByb2plY3Rpb24gZm9yIHRoZSBtYWluIGludGVyZXN0IHJhdGUgb3ZlcnN0YXRlZCB0aGUgbGlrZWx5IHNwZWVkIG9mIHBvbGljeSB0aWdodGVuaW5nLiBUaGUgYm9uZCBzYWxlIGRyZXcgdGhlIGxvd2VzdCB5aWVsZCBhdCBhbiBhdWN0aW9uIG9mIHRoZSBzZWN1cml0eSBzaW5jZSBKdW5lIGFuZCB0aGUgYmlkLXRvLWNvdmVyIHJhdGlvLCB3aGljaCBnYXVnZXMgZGVtYW5kIGJ5IGNvbXBhcmluZyB0b3RhbCBiaWRzIHdpdGggdGhlIGFtb3VudCBvZiBzZWN1cml0aWVzIG9mZmVyZWQsIHdhcyAyLjUyLCBjb21wYXJlZCB3aXRoIGFuIGF2ZXJhZ2Ugb2YgMi4zNiBmb3IgdGhlIHByZXZpb3VzIDEwIHNhbGVzLiBUaGUgbWludXRlcyDigJxjb25maXJtZWQgYSBsb3dlci1mb3ItbG9uZ2VyIHRpbWUgZnJhbWUgYW5kIHNwdXJyZWQgYSBiaXQgb2YgYW4gdXAtdHJhZGUgaW4gVHJlYXN1cnlzLOKAnSBzYWlkIElhbiBMeW5nZW4sIGEgZ292ZXJubWVudC1ib25kIHN0cmF0ZWdpc3QgYXQgQ1JUIENhcGl0YWwgR3JvdXAgTExDIGluIFN0YW1mb3JkLCBDb25uZWN0aWN1dC4g4oCcV2XigJl2ZSBzZWVuIGEgc2lnbmlmaWNhbnQgcmV0cmFjZW1lbnQgaW4gZXF1aXR5IHByaWNlcywgd2hpY2ggc3B1cnJlZCBhIGZsaWdodC10by1xdWFsaXR5IGJpZCBpbiB0aGUgVHJlYXN1cnlzIG1hcmtldHMu4oCdIFRoZSB5aWVsZCBvbiB0aGUgY3VycmVudCAzMC15ZWFyIG5vdGUgZmVsbCBzaXggYmFzaXMgcG9pbnRzLCBvciAwLjA2IHBlcmNlbnRhZ2UgcG9pbnQsIHRvIDMuNTIgcGVyY2VudCBhdCA0OjQ0IHAubS4gaW4gTmV3IFlvcmssIGFjY29yZGluZyB0byBCbG9vbWJlcmcgQm9uZCBUcmFkZXIgcHJpY2VzLiAgICAgICAgICAgICAgICAgICAgICAgICAgQmVuY2htYXJrIFlpZWxkcyBCZW5jaG1hcmsgMTAteWVhciB5aWVsZHMgZGVjbGluZWQgZml2ZSBiYXNpcyBwb2ludHMgdG8gMi42NSBwZXJjZW50LiBUaGUgMi43NSBwZXJjZW50IG5vdGUgZHVlIGluIEZlYnJ1YXJ5IDIwMjQgcm9zZSAzLzgsIG9yICQzLjc1IHBlciAkMSwwMDAgZmFjZSBhbW91bnQsIHRvIDEwMCAyOC8zMi4gVGhlIHlpZWxkIHJlYWNoZWQgMi42MSBwZXJjZW50IHRoZSBsb3dlc3QgbGV2ZWwgc2luY2UgTWFyY2ggMTQuIOKAnEJvbmRzIGFyZSBhdHRyYWN0aXZlIGF0IHRoZXNlIGxldmVscyzigJ0gc2FpZCBCaWxsIEdyb3NzLCB3aG8gcnVucyB0aGUgd29ybGTigJlzIGJpZ2dlc3QgYm9uZCBmdW5kIGF0IFBhY2lmaWMgSW52ZXN0bWVudCBNYW5hZ2VtZW50IENvLiwgaW4gYW4gaW50ZXJ2aWV3IHdpdGggVHJpc2ggUmVnYW4gb24gQmxvb21iZXJnIFRlbGV2aXNpb24uIEVjb25vbWlzdHMgaGF2ZSByZWR1Y2VkIHRoZWlyIHByb2plY3Rpb25zIG9uIDEwLXllYXIgbm90ZSB5aWVsZHMgZm9yIHRoZSBzZWNvbmQgcXVhcnRlciB0byB0aGUgbG93ZXN0IGxldmVsIHNpbmNlIEF1Z3VzdC4gVGhlIGJlbmNobWFyayB5aWVsZCB3aWxsIGVuZCBKdW5lIGF0IDIuOTUgcGVyY2VudCwgYWNjb3JkaW5nIHRvIGVjb25vbWlzdHPigJkgZm9yZWNhc3RzIGluIGEgQmxvb21iZXJnIE5ld3Mgc3VydmV5IGNvbmR1Y3RlZCBBcHJpbCA0IHRvIDksIGRvd24gZnJvbSB0aGUgcHJlZGljdGlvbiBmb3IgMyBwZXJjZW50IGluIGEgc3VydmV5IGhlbGQgTWFyY2ggNyB0byAxMi4gVGh1cnNkYXnigJlzIDMwLXllYXIgYXVjdGlvbiB5aWVsZCB3YXMgMy41MjUgcGVyY2VudCwgY29tcGFyZWQgd2l0aCBhIGZvcmVjYXN0IG9mIDMuNTIyIHBlcmNlbnQgaW4gYSBCbG9vbWJlcmcgTmV3cyBzdXJ2ZXkgb2YgZWlnaHQgb2YgdGhlIEZlZOKAmXMgMjIgcHJpbWFyeSBkZWFsZXJzLiBJbmRpcmVjdCBiaWRkZXJzLCBhbiBpbnZlc3RvciBjbGFzcyB0aGF0IGluY2x1ZGVzIGZvcmVpZ24gY2VudHJhbCBiYW5rcywgcHVyY2hhc2VkIDQzLjMgcGVyY2VudCBvZiB0aGUgbm90ZXMsIGNvbXBhcmVkIHdpdGggYW4gYXZlcmFnZSBvZiA0MSBwZXJjZW50IGZvciB0aGUgcGFzdCAxMCBzYWxlcy4gICAgICAgICAgICAgICAgICAgICAgICAgIEF1Y3Rpb24gVXBkYXRlIERpcmVjdCBiaWRkZXJzLCBub24tcHJpbWFyeS1kZWFsZXIgaW52ZXN0b3JzIHRoYXQgcGxhY2UgdGhlaXIgYmlkcyBkaXJlY3RseSB3aXRoIHRoZSBUcmVhc3VyeSwgcHVyY2hhc2VkIDE3LjkgcGVyY2VudCBvZiB0aGUgbm90ZXMsIGNvbXBhcmVkIHdpdGggYW4gYXZlcmFnZSBvZiAxNiBwZXJjZW50IGF0IHRoZSBwYXN0IDEwIGF1Y3Rpb25zLiBUaGlydHkteWVhciBib25kcyBoYXZlIHJldHVybmVkIDguMSBwZXJjZW50IHRoaXMgeWVhciwgY29tcGFyZWQgd2l0aCBhIDEuOSBwZXJjZW50IGdhaW4gaW4gdGhlIGJyb2FkZXIgVS5TLiBUcmVhc3VyeXMgbWFya2V0LCBhY2NvcmRpbmcgdG8gQmFuayBvZiBBbWVyaWNhIE1lcnJpbGwgTHluY2ggaW5kZXhlcy4gTG9uZyBib25kcyBsb3N0IDE1LjEgcGVyY2VudCBpbiAyMDEzLCB2ZXJzdXMgYSAzLjQgcGVyY2VudCBkZWNsaW5lIGJ5IFRyZWFzdXJ5cyBvdmVyYWxsLiBUaHVyc2RheeKAmXMgYXVjdGlvbiBpcyB0aGUgZmluYWwgb2YgdGhyZWUgbm90ZSBhbmQgYm9uZCBvZmZlcmluZ3MgdGhpcyB3ZWVrLiBUaGUgVS5TLiBzb2xkICQzMCBiaWxsaW9uIG9mIHRocmVlLXllYXIgZGVidCBUdWVzZGF5IGF0IGEgeWllbGQgb2YgMC44OTUgcGVyY2VudCBhbmQgJDIxIGJpbGxpb24gb2YgMTAteWVhciBzZWN1cml0aWVzIFdlZG5lc2RheSBhdCBhIHlpZWxkIG9mIDIuNzIgcGVyY2VudC4gQmlkcyBmb3IgdGhlICQ2NCBiaWxsaW9uIG9mIG5vdGVzIGFuZCBib25kcyBzb2xkIHRoaXMgd2VlayBieSB0aGUgZ292ZXJubWVudCBlcXVhbGVkIDIuOTkgdGltZXMgdGhlIGRlYnQgc29sZCwgdGhlIG1vc3QgZGVtYW5kIGZvciB0aGlzIHNlcmllcyBvZiBhdWN0aW9ucyBzaW5jZSBEZWNlbWJlci4gVGhlIFUuUy4gYW5ub3VuY2VkIGl0IHdpbGwgc2VsbCAkMTggYmlsbGlvbiBpbiBmaXZlLXllYXIgaW5mbGF0aW9uLWluZGV4ZWQgZGVidCBvbiBBcHJpbCAxNy4gICAgICAgICAgICAgICAgICAgICAgICAgIE1hcmtldCBPdXRsb29rIFRoZSBjZW50cmFsIGJhbmsgaGFzIGtlcHQgaXRzIHRhcmdldCBmb3Igb3Zlcm5pZ2h0IGJhbmsgbGVuZGluZyBpbiBhIHJhbmdlIG9mIHplcm8gdG8gMC4yNSBwZXJjZW50IHNpbmNlIERlY2VtYmVyIDIwMDguIFBvbGljeSBtYWtlcnMgYXJlIGluIHRoZSBwcm9jZXNzIG9mIHVud2luZGluZyB0aGUgYm9uZC1wdXJjaGFzZSBwcm9ncmFtIHRoZXkgaGF2ZSB1c2VkIHRvIGhlbHAgc3VwcG9ydCB0aGUgZWNvbm9teS4gRmVkIENoYWlyIEphbmV0IFllbGxlbiBzdWdnZXN0ZWQgbGFzdCBtb250aCB0aGUgY2VudHJhbCBiYW5rIG1heSByYWlzZSBpdHMgYmVuY2htYXJrIHJhdGUgaW4gdGhlIG1pZGRsZSBvZiAyMDE1LiBJbiBmb3JlY2FzdHMgcmVsZWFzZWQgd2l0aCB0aGUgcG9saWN5IHN0YXRlbWVudCBpbiBNYXJjaCwgb2ZmaWNpYWxzIHVwZ3JhZGVkIHByb2plY3Rpb25zIGZvciBnYWlucyBpbiB0aGUgbGFib3IgbWFya2V0IGFuZCBwcmVkaWN0ZWQgdGhlIG1haW4gaW50ZXJlc3QgcmF0ZSB3aWxsIHJpc2UgdG8gMSBwZXJjZW50IGJ5IHRoZSBlbmQgb2YgMjAxNSwgaGlnaGVyIHRoYW4gcHJldmlvdXNseSBmb3JlY2FzdC4gRnV0dXJlcyBwcmljZXMgcHV0IHRoZSBsaWtlbGlob29kIHRoZSBGZWQgd2lsbCBzdGFydCByYWlzaW5nIHJhdGVzIGluIEp1bHkgMjAxNSBhdCA2MiBwZXJjZW50LCBiYXNlZCBvbiB0cmFkaW5nIG9uIHRoZSBDTUUgR3JvdXAgSW5jLuKAmXMgZXhjaGFuZ2UuIFRoZSBjaGFuY2VzIGZvciBhIHJhaXNlIGluY3JlYXNlIGluIEp1bmUgMjAxNSBmZWxsIHRvIDQxIHBlcmNlbnQsIGNvbXBhcmVkIHdpdGggNTQgcGVyY2VudCBvbiBBcHJpbCA0LiDigJxUaGUgbWFya2V0IGlzIHVuZGVyZ29pbmcgYSByZS1wcmljaW5nIG9mIHRoZSBjdXJ2ZSwgZ2l2ZW4gdGhlIGZhY3QgdGhhdCBpdOKAmXMgcHVzaGluZyBvdXQgdGhlIGxvd2VyIGZvciBsb25nZXIgdGhlbWUs4oCdIHNhaWQgU2VhbiBNdXJwaHksIGEgdHJhZGVyIGluIE5ldyBZb3JrIGF0IHByaW1hcnkgZGVhbGVyIFNvY2lldGUgR2VuZXJhbGUgU0EuIOKAnFdl4oCZcmUgc2VlaW5nIGEgY29ycmVjdGlvbiBvY2N1cnJpbmcgaW4gdGhlIGN1cnZlLuKAnSBUaGUgY2VudHJhbCBiYW5rIHB1cmNoYXNlZCAkMy4yIGJpbGxpb24gb2YgVHJlYXN1cnlzIG1hdHVyaW5nIGZyb20gSnVuZSAyMDE4IHRvIERlY2VtYmVyIDIwMTggVGh1cnNkYXkuICAgICAgICAgICAgICAgICAgICAgICAgICBFY29ub21pYyBVcGRhdGUgVHJlYXN1cnlzIHJlbWFpbmVkIGhpZ2hlciBUaHVyc2RheSBldmVuIGFzIGEgcmVwb3J0IHNob3dlZCBqb2JsZXNzIGNsYWltcyBkZWNyZWFzZWQgYnkgMzIsMDAwIHRvIDMwMCwwMDAgaW4gdGhlIHdlZWsgZW5kZWQgQXByaWwgNSwgdGhlIGxvd2VzdCBzaW5jZSBNYXkgMjAwNywgdGhlIExhYm9yIERlcGFydG1lbnQgc2FpZCBpbiBXYXNoaW5ndG9uLiBUaGUgeWllbGQgb24gdGhlIGZpdmUteWVhciBub3RlIGRyb3BwZWQgdG8gYXMgbG93IGFzIDEuNTUgcGVyY2VudCwgdGhlIGxlYXN0IHNpbmNlIE1hcmNoIDE5LiBJdCB0b3VjaGVkIDEuODEgcGVyY2VudCBvbiBBcHJpbCA0LCB0aGUgaGlnaGVzdCBzaW5jZSBTZXB0ZW1iZXIuIFRoZSBkaWZmZXJlbmNlIGJldHdlZW4gZml2ZS0gYW5kIDMwLXllYXIgeWllbGRzLCB0aGUgeWllbGQgY3VydmUsIHJlYWNoZWQgMTk3IGJhc2lzIHBvaW50cyBhZnRlciBkcm9wcGluZyB0byAxNzggYmFzaXMgcG9pbnRzIG9uIE1hcmNoIDMxLCB0aGUgbGVhc3Qgc2luY2UgT2N0b2JlciAyMDA5LiBBIHlpZWxkIGN1cnZlIHBsb3RzIHRoZSByYXRlcyBvZiBib25kcyBvZiB0aGUgc2FtZSBxdWFsaXR5LCBidXQgZGlmZmVyZW50IG1hdHVyaXRpZXMuIEl0IHN0ZWVwZW5zIHdoZW4geWllbGRzIG9uIHNob3J0ZXItIG1hdHVyaXR5IG5vdGVzIGZhbGwsIHRob3NlIG9uIGxvbmdlci1kYXRlZCBib25kcyByaXNlLCBvciBib3RoIGhhcHBlbiBzaW11bHRhbmVvdXNseS4gTG9uZ2VyLXRlcm0gYm9uZHMgdGVuZCB0byByaXNlIG9yIGZhbGwgYmFzZWQgb24gdGhlIG91dGxvb2sgZm9yIGluZmxhdGlvbiwgd2hpbGUgc2hvcnRlciBtYXR1cml0aWVzIGFyZSBhbmNob3JlZCBieSB0aGUgRmVk4oCZcyBwb2xpY3kgcmF0ZS4g4oCcVGhlIG1hcmtldCByZWFjdGVkIGJpZyB0byB0aGUgRmVkZXJhbCBPcGVuIE1hcmtldCBDb21taXR0ZWUgbWludXRlcyzigJ0gc2FpZCBKdXN0aW4gTGVkZXJlciwgYW4gaW50ZXJlc3QtcmF0ZSBzdHJhdGVnaXN0IGF0IHByaW1hcnkgZGVhbGVyIENhbnRvciBGaXR6Z2VyYWxkIExQIGluIE5ldyBZb3JrLiDigJxJIGRvbuKAmXQgdGhpbmsgeW914oCZbGwgc2VlIGEgMiBwZXJjZW50IGZpdmUteWVhciBub3RlIGp1c3QgeWV0LuKAnQ==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUVKAcCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGI1ZWYxZjQ2ZmZmZDYzNjg=</field><field name="symbol" class="java.lang.String">rO0ABXQACUNSVC1VTi5UTw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUVPKByAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAmKPXCj1wp</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAmXCj1wo9c</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAmGZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAmR64UeuFI</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlFHrhR64U</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABl9A==</field><field name="id" class="java.lang.String">rO0ABXQAEGY1ZjJkMmViZGUxOThiNzc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFUVAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDU3NDA=</field><field name="title" class="java.lang.String">rO0ABXQAO1J1c3NpYSBTdGFyaW5nIGF0IFJlY2Vzc2lvbiBhcyBJbnRlbnNpdHkgb2YgU2FuY3Rpb25zIEdyb3dz</field><field name="content" class="java.lang.String">rO0ABXQWjFNhbmN0aW9ucyBpbXBvc2VkIGJ5IHRoZSBVLlMuIGFuZCB0aGUgRXVyb3BlYW4gVW5pb24gYXJlIHB1c2hpbmcgUnVzc2lhIHRvd2FyZCBhIHJlY2Vzc2lvbiBhcyB0aGUgaW50ZW5zaXR5IG9mIHRoZWlyIGVjb25vbWljIHBlbmFsdGllcyBpbmNyZWFzZXMgYWZ0ZXIgdGhlIGFubmV4YXRpb24gb2YgQ3JpbWVhIGVhcmxpZXIgdGhpcyBtb250aC4gQmFua3MgaW5jbHVkaW5nIHN0YXRlLXJ1biBWVEIgQ2FwaXRhbCBzYXkgdGhlIHdvcmxk4oCZcyBuaW50aC1iaWdnZXN0IGVjb25vbXkgd2lsbCBzaHJpbmsgZm9yIGF0IGxlYXN0IHR3byBxdWFydGVycyBhcyBwZW5hbHRpZXMgZm9yIGFubmV4aW5nIENyaW1lYSByYXR0bGUgbWFya2V0cywgY3VyYiBpbnZlc3RtZW50IGFuZCByYWlzZSB0aGUgY29zdCBvZiBib3Jyb3dpbmcuIFNhbmN0aW9ucyB0aGF0IGhhdmUgc28gZmFyIGZvY3VzZWQgb24gaW5kaXZpZHVhbHMgdmlhIHZpc2EgYmFucyBhbmQgYXNzZXQgZnJlZXplcyBtYXkgYmUgZXhwYW5kZWQgdG8gdGFyZ2V0IHNwZWNpZmljIGFyZWFzIG9mIHRoZSBlY29ub215LiBQcmVzaWRlbnQgVmxhZGltaXIgUHV0aW4gc2VudCBoaXMgcG9wdWxhcml0eSBzdXJnaW5nIHRvIGEgZml2ZS15ZWFyIGhpZ2ggYnkgbWFraW5nIENyaW1lYSBhIHBhcnQgb2YgUnVzc2lhIGFnYWluIGFmdGVyIDYwIHllYXJzIGFuZCBzYXlzIGhlIHdvbuKAmXQgYmUgc3dheWVkIGJ5IGZvcmVpZ24gcmV0YWxpYXRpb24uIEV2ZW4gc28sIHRoZSBjb3N0cyBvZiB0aGUgZGVjaXNpb24gYXJlIHN0YXJ0aW5nIHRvIHVuZm9sZCwgd2l0aCBSdXNzaWFuIHN0b2NrcyB0aGlzIHllYXLigJlzIHdvcnN0IHBlcmZvcm1lcnMgYW5kIHRoZSBlY29ub215IHNldCB0byBzdWZmZXIgbW9yZSB0aGFuIHRoZSBXZXN0LCBzYWlkIE1pcmNlYSBHZW9hbmEsIFJvbWFuaWHigJlzIGdvdmVybm1lbnQgcmVwcmVzZW50YXRpdmUgZm9yIGRpcGxvbWFjeSBhbmQgZWNvbm9taWMgcHJvamVjdHMuIOKAnFdl4oCZcmUgd2l0bmVzc2luZyB0aGUgc3RhcnQgb2YgYSBuZXcgZ2VvcG9saXRpY2FsIGFuZCBlY29ub21pYyBDb2xkIFdhciBhbmQgSSB0aGluayBpdCB3aWxsIHRha2UgYXQgbGVhc3QgdHdvIHRvIHRocmVlIHllYXJzIHRvIGVzdGFibGlzaCBzb21lIHNvcnQgb2YgZXF1aWxpYnJpdW0s4oCdIGhlIHNhaWQuIOKAnFRoZSBvbmVzIHdob+KAmWxsIHBheSB0aGUgYmlsbCBmb3IgdGhpcyBhZ2dyZXNzaW9uLCBubyBtYXR0ZXIgaG93IHBvcHVsYXIgYW5kIHBhdHJpb3RpYyBpdCBsb29rcywgd2lsbCBiZSB0aGUgUnVzc2lhbiBwZW9wbGUgYmVjYXVzZSB0aGVyZeKAmXMgYSBodWdlIGRpZmZlcmVuY2UgYmV0d2VlbiB0aGUgZWNvbm9taWMgZm9yY2Ugb2YgdGhlIEVVIGFuZCB0aGUgVS5TLiBhbmQgdGhhdCBvZiBSdXNzaWEu4oCdIFN0b2NrcywgUnVibGUgUnVzc2lh4oCZcyBNaWNleCBzdG9jayBpbmRleCBoYXMgcGx1bmdlZCAxMy4xIHBlcmNlbnQgdGhpcyB5ZWFyIGNvbXBhcmVkIHdpdGggYSA0LjkgcGVyY2VudCBkZWNsaW5lIGZvciB0aGUgTVNDSSBFbWVyZ2luZyBNYXJrZXRzIEluZGV4LiBJdCB3YXMgbGl0dGxlIGNoYW5nZWQgYXQgMzo0OCBwLm0uIGluIE1vc2Nvdy4gVGhlIHJ1YmxlIGlzIHRoZSBzZWNvbmQtd29yc3QgcGVyZm9ybWVyIGFnYWluc3QgdGhlIGRvbGxhciBiZWhpbmQgQXJnZW50aW5hIGFtb25nIDI0IGRldmVsb3BpbmctbWFya2V0IGN1cnJlbmNpZXMgdHJhY2tlZCBieSBCbG9vbWJlcmcsIHdlYWtlbmluZyA4LjkgcGVyY2VudC4gSXQgcm9zZSAwLjUgcGVyY2VudCB0b2RheS4gQWZ0ZXIgdGhlIFUuUy4gZXhwYW5kZWQgc2FuY3Rpb25zIE1hcmNoIDIwIHRvIGluY2x1ZGUgYnVzaW5lc3NtZW4gbGlua2VkIHRvIFB1dGluLCBzdWNoIGFzIGJpbGxpb25haXJlcyBHZW5uYWR5IFRpbWNoZW5rbyBhbmQgQXJrYWR5IFJvdGVuYmVyZywgU3RhbmRhcmQgJiBQb29y4oCZcyBhbmQgRml0Y2ggUmF0aW5ncyBjdXQgdGhlaXIgb3V0bG9vayBvbiBSdXNzaWHigJlzIGNyZWRpdCBncmFkZSB0byBuZWdhdGl2ZSBmcm9tIHN0YWJsZSwgc3VnZ2VzdGluZyBhIGRvd25ncmFkZSBpcyBtb3N0IGxpa2VseSBuZXh0LiBUaGUgdHdvIGNvbXBhbmllcywgd2hpY2ggc2FpZCBXZXN0ZXJuIGJhbmtzIGFyZSBiZWNvbWluZyByZWx1Y3RhbnQgdG8gbGVuZCB0byBSdXNzaWEsIHJhdGUgdGhlIHdvcmxk4oCZcyBiaWdnZXN0IGVuZXJneSBleHBvcnRlciBhdCBCQkIsIHRoZSBzZWNvbmQtbG93ZXN0IGludmVzdG1lbnQgZ3JhZGUgYW5kIG9uIHBhciB3aXRoIEJyYXppbCBhbmQgU291dGggQWZyaWNhLiBDcmlzaXMgU2lnbnMgRXZlbiBiZWZvcmUgdGhlIHN0YW5kb2ZmIHdpdGggdGhlIFdlc3QsIHRoZSB3b3JzdCBzaW5jZSB0aGUgQ29sZCBXYXIsIFJ1c3NpYeKAmXMgZWNvbm9teSB3YXMgZmFjaW5nIHRoZSB3ZWFrZXN0IGdyb3d0aCBzaW5jZSBhIDIwMDkgcmVjZXNzaW9uIGFzIGNvbnN1bWVyIGRlbWFuZCBmYWlsZWQgdG8gbWFrZSB1cCBmb3Igc2FnZ2luZyBpbnZlc3RtZW50LiBUaGUgY3VycmVudCBzaXR1YXRpb24gaW4gdGhlIGVjb25vbXkg4oCcYmVhcnMgY2xlYXIgc2lnbnMgb2YgYSBjcmlzaXMs4oCdIERlcHV0eSBFY29ub215IE1pbmlzdGVyIFNlcmdlaSBCZWx5YWtvdiBzYWlkIE1hcmNoIDE3IGFmdGVyIHRoZSBmaXJzdCBFdXJvcGVhbiBVbmlvbiBhbmQgVS5TLiBzYW5jdGlvbnMuIFJ1c3NpYSB3aWxsIHByb2JhYmx5IGRpcCBpbnRvIGEgcmVjZXNzaW9uIGluIHRoZSBzZWNvbmQgYW5kIHRoaXJkIHF1YXJ0ZXJzIG9mIHRoaXMgeWVhciBhcyDigJxkb21lc3RpYyBkZW1hbmQgaXMgc2V0IHRvIGhhbHQgb24gdGhlIHVuY2VydGFpbnR5IHNob2NrIGFuZCB0aWdodGVyIGZpbmFuY2lhbCBjb25kaXRpb25zLOKAnSBhY2NvcmRpbmcgdG8gTW9zY293LWJhc2VkIFZUQi4gUnVzc2lh4oCZcyBjZW50cmFsIGJhbmsgdW5leHBlY3RlZGx5IHJhaXNlZCBpdHMgYmVuY2htYXJrIGludGVyZXN0IHJhdGUgYnkgMTUwIGJhc2lzIHBvaW50cyBhZnRlciB0aGUgYXJtZWQgdGFrZW92ZXIgb2YgQ3JpbWVhIHRyaWdnZXJlZCBhIHJvdXQgaW4gdGhlIHJ1YmxlLiBQdXRpbiBjb21wbGV0ZWQgaGlzIGFubmV4YXRpb24gb2YgdGhlIEJsYWNrIFNlYSBwZW5pbnN1bGEgTWFyY2ggMjEuIFJ1c3NpYSBtYXkgc2h1biBmb3JlaWduIGRlYnQgbWFya2V0cyBpbiAyMDE0IGJlY2F1c2Ugb2YgaGlnaGVyIGJvcnJvd2luZyBjb3N0cywgYWNjb3JkaW5nIHRvIEZpbmFuY2UgTWluaXN0ZXIgQW50b24gU2lsdWFub3YuIEhlIGV4cHJlc3NlZCBmcnVzdHJhdGlvbiBhdCBkaXNydXB0aW9ucyB0byBNYXN0ZXJDYXJkIEluYy4gYW5kIFZpc2Egc2VydmljZXMgZm9yIGNhcmRzIGlzc3VlZCBieSBiYW5rcyBvbiBvciBsaW5rZWQgdG8gcGVyc29ucyBvbiB0aGUgVS5TLiBzYW5jdGlvbnMgbGlzdC4g4oCcU29tZSBwZW9wbGUgc2F5IHRoZXNlIHNhbmN0aW9ucyB3b27igJl0IGFmZmVjdCBSdXNzaWHigJlzIGZpbmFuY2lhbCBzeXN0ZW0gYnV0IHRoZXkgYWxyZWFkeSBhcmUs4oCdIGhlIHNhaWQgTWFyY2ggMjEuIOKAmE1vc3F1aXRvIEJpdGXigJkgRXZlbiBzbywgdGhlIG1lYXN1cmVzIG1heSBub3QgaGF2ZSBtdWNoIGVmZmVjdCBvbiB0aGUgaW5kaXZpZHVhbHMgdGFyZ2V0ZWQgb3Igb24gUHV0aW7igJlzIHRoaW5raW5nIG9uIFVrcmFpbmUsIHdob3NlIGdvdmVybm1lbnQgYWNjdXNlcyB0aGUgUnVzc2lhbiBsZWFkZXIgb2Ygc3RpcnJpbmcgdXAgdW5yZXN0IGVsc2V3aGVyZSBhbmQgcGxhbm5pbmcgYW4gaW52YXNpb24gb2YgdGhlIGNvdW50cnnigJlzIGVhc3QuIFRoZSBzYW5jdGlvbnMgcmVwcmVzZW50IOKAnGEgbW9zcXVpdG8gYml0ZeKAnSBiZWNhdXNlIG1vc3Qgb2ZmaWNpYWxzIG9uIHRoZSBsaXN0IGFyZW7igJl0IHBlcm1pdHRlZCB0byB0cmF2ZWwgYWJyb2FkIHByaXZhdGVseSBhbmQgaGF2ZSBtb3N0IG9mIHRoZWlyIGJ1c2luZXNzIGluIFJ1c3NpYSwgc2FpZCBLb25zdGFudGluIEtvc3RpbiwgYSBLcmVtbGluIGFkdmlzZXIgd2hvIGhlYWRzIHRoZSBDaXZpbCBTb2NpZXR5IERldmVsb3BtZW50IEZ1bmQuIEdvdmVybm1lbnQgbWVtYmVycyBmZWF0dXJlZCBpbiBhIG5ldyBFVSBsaXN0IE1hcmNoIDIxIGluY2x1ZGUgUHV0aW4gYWlkZXMgU2VyZ2VpIEdsYXp5ZXYgYW5kIFZsYWRpc2xhdiBTdXJrb3YuIFB1dGluLCBtZWFud2hpbGUsIHdvdWxkIHJlcXVpcmUgc3RpZmZlciBwZW5hbHRpZXMgdG8gYnVkZ2UsIGFjY29yZGluZyB0byBBcmllbCBDb2hlbiwgc2VuaW9yIGZlbGxvdyBhdCB0aGUgUmVwdWJsaWNhbi1sZWFuaW5nIEhlcml0YWdlIEZvdW5kYXRpb24gaW4gV2FzaGluZ3Rvbi4g4oCcWW914oCZcmUgZGVhbGluZyB3aXRoIGFuIGluZGl2aWR1YWwgd2hvIHdvbuKAmXQgYmUgZWFzaWx5IGludGltaWRhdGVkLOKAnSBoZSBzYWlkIE1hcmNoIDIxIGJ5IHBob25lIGZyb20gV2FzaGluZ3Rvbi4g4oCcVGhlIFdlc3QgaXMgZXNjYWxhdGluZyBzYW5jdGlvbnMgYnV0IFJ1c3NpYSBpc27igJl0IGdvaW5nIHRvIGJhY2sgb2ZmIG9uIENyaW1lYSBhbmQgVWtyYWluZSB0aGF0IGVhc2lseS4gSXQgd2lsbCB0YWtlIG1vcmUgdGhhbiBwaW5wb2ludGVkIGluZGl2aWR1YWwgc2FuY3Rpb25zIHRvIHN0YXJ0IHJvbGxpbmcgdGhpcyBiYWNrLuKAnSBUcmFkZSBUaWVzIFRoZSBFVSwgd2hpY2ggcmVsaWVzIG9uIFJ1c3NpYSBmb3IgYSB0aGlyZCBvZiBpdHMgZW5lcmd5IGltcG9ydHMsIGhhcyBzdHJ1Z2dsZWQgdG8gZmluZCB3YXlzIG9mIHB1bmlzaGluZyBQdXRpbiBiZWNhdXNlIHRyYWRlIHN0ZXBzIHJpc2sgZGFtYWdpbmcgRXVyb3Bl4oCZcyBlY29ub215LiBCYW5raW5nIGN1cmJzIHdvdWxkIGh1cnQgQnJpdGFpbiwgYW4gYXJtcyBlbWJhcmdvIHdvdWxkIGJhciBGcmFuY2UgZnJvbSBzZWxsaW5nIE1pc3RyYWwtY2xhc3MgaGVsaWNvcHRlciBjYXJyaWVycyB0byB0aGUgS3JlbWxpbiBhbmQgY3V0YmFja3MgaW4gZ2FzIHB1cmNoYXNlcyB3b3VsZCBoYXJtIGEgc3dhdGhlIG9mIEVVIG5hdGlvbnMuIFRoZSBkZWNsaW5lcyBpbiBSdXNzaWFuIHN0b2Nrcywgd2Vha25lc3MgaW4gdGhlIHJ1YmxlIGFuZCB0aGUgcmlzayBvZiBkb3duZ3JhZGVzIHRvIHRoZSBjb3VudHJ54oCZcyBjcmVkaXQgcmF0aW5nIHNob3cgdGhyZWF0cyBvZiBmdXR1cmUgc2FuY3Rpb25zIGNhbiBlcm9kZSBidXNpbmVzcyBjb25maWRlbmNlIGFuZCBodXJ0IHRoZSBlY29ub215LCBhY2NvcmRpbmcgdG8gRnJlZHJpayBFcml4b24sIGRpcmVjdG9yIG9mIHRoZSBFdXJvcGVhbiBDZW50cmUgZm9yIEludGVybmF0aW9uYWwgUG9saXRpY2FsIEVjb25vbXkuIENhcGl0YWwgb3V0Zmxvd3MgZnJvbSBSdXNzaWEgbWF5IHJlYWNoICQ3MCBiaWxsaW9uIGluIHRoZSBmaXJzdCBxdWFydGVyLCBtb3JlIHRoYW4gJDYzIGJpbGxpb24gcmVjb3JkZWQgZm9yIHRoZSB3aG9sZSBvZiAyMDEzLCBDYXBpdGFsIEVjb25vbWljcyBMdGQuIHNhaWQgbGFzdCB3ZWVrIGluIGEgcmVwb3J0LiBUaGVyZeKAmXMgYSDigJxyZWFsIHJpc2vigJ0gdGhhdCB0aGlzIGNvdWxkIHB1c2ggUnVzc2lhIGludG8gcmVjZXNzaW9uLCB0aGUgTG9uZG9uLWJhc2VkIHJlc2VhcmNoIGNvbXBhbnkgc2FpZC4g4oCcSW52ZXN0b3JzIGFuZCByYXRpbmdzIGFnZW5jaWVzIGFyZSBiYXNpbmcgdGhlaXIgdmlld3Mgbm90IG9uIHdoYXTigJlzIGhhcHBlbmVkIHdpdGggc2FuY3Rpb25zIHNvIGZhciBidXQgb24gd2hhdCBtYXkgaGFwcGVuLOKAnSBFcml4b24gc2FpZCBNYXJjaCAyMSBieSBwaG9uZSBmcm9tIEJydXNzZWxzLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUTydaSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDU5MWNiMDZmYjhmMTM1ZGQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABEhVR0U=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUT3nACAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/h64UeuFHs</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/h64UeuFHs</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/hmZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/hmZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/hmZmZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAA6mA==</field><field name="id" class="java.lang.String">rO0ABXQAEDUyODcyMmIwNzQzZjAyMDg=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mNBzAAAA==</field></document></documents><date>2015-05-07T12:21:15-0500</date></cacheEntry>
<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0EDBIYXJsZXlEYXZpZHNvbiB3aWxsIHVudmVpbCBpdHMgZmlyc3QgZWxlY3RyaWMgbW90b3JjeWNsZSBuZXh0IHdlZWsgYW5kIFByZXNpZGVudCBNYXR0IExldmF0aWNoIHNhaWQgaGUgZXhwZWN0cyB0aGUgY29tcGFueSBrbm93biBmb3IgaXRzIGJpZyB0b3VyaW5nIGJpa2VzIGFuZCBpY29uaWMgYnJhbmQgdG8gYmVjb21lIGEgbGVhZGVyIGluIGRldmVsb3BpbmcgdGVjaG5vbG9neSBhbmQgc3RhbmRhcmRzIGZvciBlbGVjdHJpYyB2ZWhpY2xlcyBIYXJsZXkgd2lsbCBzaG93IGhhbmRtYWRlIGRlbW9uc3RyYXRpb24gbW9kZWxzIE1vbmRheSBhdCBhbiBpbnZpdGF0aW9ub25seSBldmVudCBpbiBOZXcgWW9yayBUaGUgY29tcGFueSB3aWxsIHRoZW4gdGFrZSBzZXZlcmFsIGRvemVuIHJpZGVycyBvbiBhIDMwY2l0eSB0b3VyIHRvIHRlc3QgZHJpdmUgdGhlIGJpa2VzIGFuZCBwcm92aWRlIGZlZWRiYWNrIEhhcmxleSB3aWxsIHVzZSB0aGUgaW5mb3JtYXRpb24gaXQgZ2F0aGVycyB0byBjb250aW51ZSByZWZpbmluZyB0aGUgYmlrZSB3aGljaCBtaWdodCBub3QgaGl0IHRoZSBtYXJrZXQgZm9yIHNldmVyYWwgbW9yZSB5ZWFycyBUaGUgdmVudHVyZSBpcyBhIHJpc2sgZm9yIEhhcmxleSBiZWNhdXNlIHRoZXJlcyBjdXJyZW50bHkgYWxtb3N0IG5vIG1hcmtldCBmb3IgZnVsbHNpemUgZWxlY3RyaWMgbW90b3JjeWNsZXMgVGhlIG1pbGxpb25zIG9mIHR3b3doZWVsZWQgZWxlY3RyaWMgdmVoaWNsZXMgc29sZCBlYWNoIHllYXIgYXJlIGFsbW9zdCBleGNsdXNpdmVseSBzY29vdGVycyBhbmQgbG93cG93ZXJlZCBiaWtlcyB0aGF0IGFwcGVhbCB0byBDaGluZXNlIGNvbW11dGVycyBCdXQgb25lIGFuYWx5c3Qgc2FpZCBpbnZlc3RtZW50IGJ5IGEgbWFqb3IgbWFudWZhY3R1cmVyIGNvdWxkIGhlbHAgY3JlYXRlIGRlbWFuZCBhbmQgTGV2YXRpY2ggZW1waGFzaXplZCBpbiBhbiBpbnRlcnZpZXcgd2l0aCBUaGUgQXNzb2NpYXRlZCBQcmVzcyB0aGF0IEhhcmxleSBpcyBpbnRlcmVzdGVkIGluIHRoZSBsb25ndGVybSBwb3RlbnRpYWwgcmVnYXJkbGVzcyBvZiBpbW1lZGlhdGUgZGVtYW5kIFdlIHRoaW5rIHRoYXQgdGhlIHRyZW5kcyBpbiBib3RoIEVWIHRlY2hub2xvZ3kgYW5kIGN1c3RvbWVyIG9wZW5uZXNzIHRvIEVWIHByb2R1Y3RzIGJvdGggYXV0b21vdGl2ZSBhbmQgbW90b3JjeWNsZXMgaXMgb25seSBnb2luZyB0byBpbmNyZWFzZSBhbmQgd2hlbiB5b3UgdGhpbmsgYWJvdXQgc3VzdGFpbmFiaWxpdHkgYW5kIGVudmlyb25tZW50YWwgdHJlbmRzIHdlIGp1c3Qgc2VlIHRoYXQgYmVpbmcgYW4gaW5jcmVhc2luZyBwYXJ0IG9mIHRoZSBsaWZlc3R5bGUgYW5kIHRoZSByZXF1aXJlbWVudHMgb2YgcmlkZXJzIExldmF0aWNoIHNhaWQgU28gbm9ib2R5IGNhbiBwcmVkaWN0IHJpZ2h0IG5vdyBob3cgYmlnIHRoYXQgaW5kdXN0cnkgd2lsbCBiZSBvciBob3cgc2lnbmlmaWNhbnQgaXQgd2lsbCBiZSBBdCB0aGUgc2FtZSB0aW1lIExldmF0aWNoIGFuZCBvdGhlcnMgaW52b2x2ZWQgaW4gY3JlYXRpbmcgdGhlIHNsZWVrIGZ1dHVyaXN0aWMgTGl2ZVdpcmUgcHJlZGljdGVkIGl0IHdvdWxkIHNlbGwgYmFzZWQgb24gcGVyZm9ybWFuY2Ugbm90IGVudmlyb25tZW50YWwgYXdhcmVuZXNzIFdpdGggbm8gbmVlZCB0byBzaGlmdCBnZWFycyB0aGUgc2xpbSBzcG9ydHkgYmlrZSBjYW4gZ28gZnJvbSAwIHRvIDYwIG1waCBpbiBhYm91dCA0IHNlY29uZHMgVGhlIGVuZ2luZSBpcyBzaWxlbnQgYnV0IHRoZSBtZXNoaW5nIG9mIGdlYXJzIGVtaXRzIGEgaHVtIGxpa2UgYSBqZXQgYWlycGxhbmUgdGFraW5nIG9mZiBTb21lIHBlb3BsZSBtYXkgZ2V0IG9uIGl0IHRoaW5raW5nIGdvbGYgY2FydCBsZWFkIGVuZ2luZWVyIEplZmYgUmljaGxlbiBzYWlkIEFuZCB0aGV5IGdldCBvZmYgdGhpbmtpbmcgcm9ja2V0IHNoaXAgT25lIGh1cmRsZSB0aGUgY29tcGFueSBoYXMgeWV0IHRvIGFkZHJlc3MgaXMgdGhlIGxpbWl0ZWQgcmFuZ2Ugb2ZmZXJlZCBieSBlbGVjdHJpYyBtb3RvcmN5Y2xlcyBUaGUgYmF0dGVyaWVzIG11c3QgYmUgcmVjaGFyZ2VkIGFmdGVyIGFib3V0IDEzMCBtaWxlcyBhbmQgdGhhdCBjYW4gdGFrZSAzMCBtaW51dGVzIHRvIGFuIGhvdXIgU2FuIEpvc2UgU3RhdGUgVW5pdmVyc2l0eSBwb2xpY2UgQ2FwdCBBbGFuIENhdmFsbG8gaGVscGVkIGhpcyBkZXBhcnRtZW50IGJ1eSB0d28gYmlrZXMgZnJvbSBaZXJvIE1vdG9yY3ljbGVzIHRoZSBjdXJyZW50IHRvcHNlbGxpbmcgYnJhbmQgYW5kIHNhaWQgb2ZmaWNlcnMgaGF2ZSBiZWVuIHN1cGVyIGhhcHB5IHdpdGggdGhlIHF1aWV0IGVudmlyb25tZW50YWxseSBmcmllbmRseSBiaWtlcyBtYWRlIG5lYXJieSBpbiBTY290dHMgVmFsbGV5IENhbGlmb3JuaWEgQnV0IGhlIHNhaWQgQW1lcmljYW4gcmlkZXJzIHdobyBsaWtlIHRvIGhpdCB0aGUgaGlnaHdheSB3b3VsZCBsaWtlbHkgbG9zZSBwYXRpZW5jZSB3aXRoIHRoZSB0ZWNobm9sb2d5IFRoYXRzIHRoZSBkZWFsIHdpdGggdGhlIGNhcnMgeW91IGNhbnQganVtcCBpbiBhIFRlc2xhIGFuZCBkcml2ZSB0byBMQSBpdCB3b250IG1ha2UgaXQgQ2F2YWxsbyBzYWlkIGFkZGluZyBsYXRlciBQZW9wbGUgd2FudCB0aGUgY29udmVuaWVuY2Ugb2YgSSBwdWxsIGludG8gYSBnYXMgc3RhdGlvbiBJIHBvdXIgc29tZSBnYXMgaW4gbXkgdGFuayBhbmQgSSBnbyBaZXJvIE1vdG9yY3ljbGVzIGludHJvZHVjZWQgaXRzIGZpcnN0IGZ1bGxzaXplIG1vdG9yY3ljbGUgaW4gMjAxMCBhbmQgZXhwZWN0cyB0byBzZWxsIGFib3V0IDI0MDAgYmlrZXMgdGhpcyB5ZWFyIHNhaWQgU2NvdHQgSGFyZGVuIHRoZSBjb21wYW55cyB2aWNlIHByZXNpZGVudCBvZiBnbG9iYWwgbWFya2V0aW5nIFRoYXQgd291bGQgZ2l2ZSBpdCBhYm91dCBoYWxmIG9mIHRoZSBnbG9iYWwgbWFya2V0IGZvciBmdWxsc2l6ZSBoaWdocG93ZXJlZCBlbGVjdHJpYyBtb3RvcmN5Y2xlcyBJbiBjb21wYXJpc29uIEhhcmxleURhdmlkc29uIGFsb25lIHNvbGQgbW9yZSB0aGFuIDI2MDAwMCBjb252ZW50aW9uYWwgbW90b3JjeWNsZXMgbGFzdCB5ZWFyIEJ1dCBKb2huIEdhcnRuZXIgYSByZXNlYXJjaCBkaXJlY3RvciBmb3IgdGhlIGNvbnN1bHRpbmcgZmlybSBOYXZpZ2FudCBzYWlkIGhhdmluZyBsYXJnZSB3ZWxsZnVuZGVkIGNvbXBhbmllcyBnZXQgaW50byB0aGUgZWxlY3RyaWMgbW90b3JjeWNsZSBtYXJrZXQgY291bGQgZ2l2ZSBpdCBhIHNpZ25pZmljYW50IGJvb3N0IFRoZSBtYWpvciBhdXRvbWFrZXJzIGhlbHBlZCBkcml2ZSBzYWxlcyBmb3IgaHlicmlkIGFuZCBlbGVjdHJpYyBjYXJzIGhlIG5vdGVkIFRoZWlyIG1hcmtldGluZyBidWRnZXRzIGFyZSBtdWNoIGxhcmdlciBhbmQgdGhleSBoYXZlIGRlYWxlcnNoaXBzIHNldCB1cCBldmVyeXdoZXJlIGFuZCBzbyBpdHMgbXVjaCBlYXNpZXIgZm9yIGNvbXBhbmllcyBsaWtlIEZvcmQgQk1XIGFuZCBIb25kYSB0byBhZHZlcnRpc2UgYWJvdXQgdGhlaXIgZWxlY3RyaWMgdmVoaWNsZXMgaGUgc2FpZCBMZXZhdGljaCBzYWlkIHRydWUgZ3Jvd3RoIHdpbGwgcmVxdWlyZSBjb21tb24gc3RhbmRhcmRzIGZvciByYXBpZCBjaGFyZ2luZyBhbmQgb3RoZXIgZmVhdHVyZXMgYXMgd2VsbCBhcyBwbGFjZXMgZm9yIHBlb3BsZSB0byBwbHVnIGluIEhhcmxleSBleHBlY3RzIHRvIHBsYXkgYSBrZXkgcm9sZSBpbiBkZXZlbG9waW5nIGVsZWN0cmljIHZlaGljbGUgc3RhbmRhcmRzIGFuZCBpdHMgZGVhbGVyc2hpcCBuZXR3b3JrIGNvdWxkIHByb3ZpZGUgY2hhcmdpbmcgc3RhdGlvbnMgdG8gc2VydmUgYWxsIGRyaXZlcnMgaGUgc2FpZCBXZXZlIGJlZW4gdmVyeSBzaWxlbnQgdXAgdG8gdGhpcyBwb2ludCBhYm91dCBvdXIgaW52ZXN0bWVudCBpbiBFViB0ZWNobm9sb2d5IExldmF0aWNoIHNhaWQgIGJ1dCBub3cgdGhhdCB3ZXJlIHB1YmxpYyBhbmQgd2VyZSBpbiB0aGlzIHNwYWNlIHdlIGV4cGVjdCB0byBiZSBpbnZvbHZlZCBhbmQgYSBwYXJ0IG9mIGxlYWRpbmcgdGhlIGRldmVsb3BtZW50IG9mIHRoZSBzdGFuZGFyZHMgYW5kIHRoZSB0ZWNobm9sb2d5IGFuZCB0aGUgaW5mcmFzdHJ1Y3R1cmUgbmVjZXNzYXJ5IHRvIGZ1cnRoZXIgdGhlIGFjY2VwdGFuY2UgYW5kIHRoZSB1dGlsaXR5IG9mIGVsZWN0cmljIHZlaGljbGVzdAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAb2FydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2UsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEzLTAzLTI3VDAwOjAwOjAwWiBUTyAyMDEzLTEyLTAzVDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTE1NTE2</field><field name="title" class="java.lang.String">rO0ABXQAOVRlc2xhJ3MgU3RyYXViZWwgS2VlcHMgTW90b3JzIFJvbGxpbmcgYXMgU3RvY2sgU3VyZ2VzIDU3JQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6haMyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDVhOGFjMTZkMmE3ZGMxYjU=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0NPU1QuTVg=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6mjyiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECVQAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECVjTMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECVQAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECVfI9cKPXD</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECVdFwo9cKP</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAHbA==</field><field name="id" class="java.lang.String">rO0ABXQAEDVhNWZhYzUzZjdiOTZhZmQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE/vAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE1NDEw</field><field name="title" class="java.lang.String">rO0ABXQAMlRyYWlsYmxhemluZyBJc3JhZWxpIEVsZWN0cmljIENhciBDb21wYW55IHRvIENsb3Nl</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT7kW3iAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDdmMzk1NjY5YTg2MmYzNTM=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZJTkw=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT7pgdSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1euFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1uuFHrhR7</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1RR64UeuF</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1XCj1wo9c</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA01wo9cKPX</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAXUlA==</field><field name="id" class="java.lang.String">rO0ABXQAEDUyYzMxYTE2ZjQzMDcwYzU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHdhAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTEzODc0</field><field name="title" class="java.lang.String">rO0ABXQAMkF1dG9tYWtlcnMgQmV0IG9uIEFsdGVybmF0aXZlLUZ1ZWwgQ2FycyBmb3IgRnV0dXJl</field><field name="content" class="java.lang.String">rO0ABXQQHUp1ZGdpbmcgYnkgdGhlIHNsZXcgb2YgZWxlY3RyaWMgYW5kIGh5YnJpZCB2ZWhpY2xlcyBiZWluZyByb2xsZWQgb3V0IGF0IHRoZSBGcmFua2Z1cnQgQXV0byBTaG93LCBpdCBtaWdodCBzZWVtIGNhcm1ha2VycyBhcmUgdGFwcGluZyBhIGxhcmdlIGFuZCBlYWdlciBtYXJrZXQuIEJ1dCBpbiBmYWN0IGFsbW9zdCBubyBvbmUgYnV5cyBzdWNoIGNhcnMsIHlldC4gRXZlcnkgbWFqb3IgYXV0b21ha2VyIGlzIGNvbWluZyBvdXQgd2l0aCBlbGVjdHJpYyB2ZXJzaW9ucyBvZiBleGlzdGluZyB2ZWhpY2xlcywgc3VjaCBhcyBWb2xrc3dhZ2VuJ3MgYWxsLWVsZWN0cmljIHZlcnNpb25zIG9mIGl0cyBVcCEgY2l0eSBjYXIgYW5kIEdvbGYgY29tcGFjdCwgb3Igb25lcyB0aGV5IGhhdmUgZGVzaWduZWQgYXMgZWxlY3RyaWNzIGZyb20gdGhlIGdyb3VuZCB1cC4gQW5hbHlzdCBDaHJpc3RvcGggU3R1ZXJtZXIgYXQgSUhTIGF1dG9tb3RpdmUgY2FsbGVkIEZyYW5rZnVydCAidGhlIGZpcnN0IGZ1bGwtdGhyb3R0bGUgZWxlY3RyaWMgcHJvcHVsc2lvbiBzaG93IiB0aGF0J3MgYWJvdXQgImdldHRpbmcgZWxlY3RyaWMgZHJpdmUgY2FycyBvdXQgb2YgdGhlIGVjby1uZXJkLCB0cmVlLWh1Z2dlciBzZWdtZW50IGFuZCBpbnRvIHRoZSBjb29sIGdyb3VwLiIgVG8gd2hldCBhcHBldGl0ZXMsIGF1dG9tYWtlcnMgYXJlIG1ha2luZyBoaWdoLXBlcmZvcm1hbmNlLCBsdXh1cnkgdmVyc2lvbnMgdGhhdCBnaXZlIHVwIGxpdHRsZSBvciBub3RoaW5nIGluIHBlcmZvcm1hbmNlIHRvIGNvbnZlbnRpb25hbCBtb2RlbHMuIEJNVydzIGk4IGdvZXMgMC02MiBtcGggaW4gNC41IHNlY29uZHMuICBBdWRpJ3MgUXVhdHRybyBzcG9ydCBjb25jZXB0LCBtZWFuaW5nIGl0J3MgZm9yIGRlbW9uc3RyYXRpb24sIG5vdCBmb3Igc2FsZSwgaXMgYW4gYWdncmVzc2l2ZSBsb29raW5nIHNwb3J0cyBjYXIgd2l0aCBsYXJnZSBhaXIgaW50YWtlcyBmbGFua2luZyB0aGUgZ3JpbGxlIGFuZCA3MDAgaG9yc2Vwb3dlciBmcm9tIGl0cyBoeWJyaWQgZHJpdmUuICBUaGUgY29tcGFueSBzYXlzIGl0IGNhbiByZWFjaCAxOTAgbXBoLiBUaGUgTWVyY2VkZXMgUy1DbGFzcyBwbHVnLWluIGh5YnJpZCB2ZXJzaW9uIGhhcyBhIHNpeC1jeWxpbmRlciBpbnRlcm5hbCBjb21idXN0aW9uIGVuZ2luZSBwbHVzIGFuIGFsbC1lbGVjdHJpYyByYW5nZSBvZiBhYm91dCAyMCBtaWxlcy4gVGhpcyB3YXksIG93bmVycyBjb3VsZCBjb21tdXRlIGFsbC1lbGVjdHJpYyBkdXJpbmcgdGhlIHdlZWssIHJlY2hhcmdpbmcgb3Zlcm5pZ2h0LCBidXQgdXNlIHRoZSBnYXNvbGluZSBlbmdpbmUgb24gYSBmYW1pbHkgdmFjYXRpb24uICAgVGhlIGNvbXBhbnkgc2F5cyBtaWxlYWdlIGlzIDc4IG1pbGVzIHBlciBnYWxsb24uIEFsbCB0aGlzLCB0byBjYXRlciB0byBhIG1hcmtldCB0aGF0IGRvZXNuJ3QgcmVhbGx5IGV4aXN0IGluIG1hc3MgdGVybXMuIE9ubHkgMC4yIHBlcmNlbnQgb2YgYWxsIGNhcnMgcmVnaXN0ZXJlZCBpbiBFdXJvcGUgYXJlIGh5YnJpZHMsIHdoaWNoIGNvbWJpbmUgYmF0dGVyaWVzIHdpdGggaW50ZXJuYWwgY29tYnVzdGlvbiBlbmdpbmVzLCBvciBlbGVjdHJpY3MsIGFjY29yZGluZyB0byB0aGUgQUNFQSBFdXJvcGVhbiBhdXRvbWFrZXJzIGFzc29jaWF0aW9uLiBJbiB0aGUgVW5pdGVkIFN0YXRlcywgdGhlIFRveW90YSBQcml1cyBoeWJyaWQgaGFzIGJyb2tlbiBpbnRvIHRoZSB0b3AgMTAgc2VsbGluZyBwYXNzZW5nZXIgY2Fycy4gSG93ZXZlciwgZWxlY3RyaWMgdmVoaWNsZXMgaGF2ZSBzdHJ1Z2dsZWQgdG8gaW5jcmVhc2Ugc2FsZXMgbnVtYmVycyBiZWNhdXNlIG9mIGhpZ2ggcHJpY2VzIGFuZCBzby1jYWxsZWQgcmFuZ2UgYW54aWV0eTogIGJ1eWVycycgZmVhciBvZiBydW5uaW5nIG91dCBvZiBwb3dlci4gQW5hbHlzdHMgYW5kIGV4ZWN1dGl2ZXMgc2F5IHRoZXJlIGFyZSBzZXZlcmFsIHNvbGlkIHJlYXNvbnMgdG8gbWFrZSBhbmQgcHJvbW90ZSBzdWNoIGNhcnMgbm93LiBUaGV5IGNhbiBoZWxwIGxvd2VyIGF2ZXJhZ2UgZmxlZXQgZW1pc3Npb25zIHRvIG1lZXQgZ292ZXJubWVudCByZXF1aXJlbWVudHMuICBBbmQgYXV0b21ha2VycyB3YW50IHRvIGJlIHJlYWR5IGluIGNhc2UgZ292ZXJubWVudHMsIHBlcmhhcHMgaW4gaGVhdmlseSBwb2xsdXRlZCBDaGluYSwgcHVzaCBwZW9wbGUgaW50byBlbWlzc2lvbi1mcmVlIHZlaGljbGVzLiAiU2hvcnQgdGVybSwgbm9ib2R5IHdpbGwgZ2V0IGEgcmV0dXJuIG9uIHRoZXNlIGludmVzdG1lbnRzLCIgRGFpbWxlciBBRyBjaGllZiBleGVjdXRpdmUgRGlldGVyIFpldHNjaGUgdG9sZCBUaGUgQXNzb2NpYXRlZCBQcmVzcy4gICJCdXQgZGVmaW5pdGVseSwgbG9uZyB0ZXJtLCB0aGUgZGV2ZWxvcG1lbnQgd2lsbCBnbyBpbiB0aGlzIGRpcmVjdGlvbiwgYW5kIGlmIHlvdSBkb24ndCBsZWFybiB0aGlzIGxlc3NvbiB0b2RheSB5b3Ugd2lsbCBub3QgYmUgaW4gdGhlIGdhbWUgdG9tb3Jyb3cuIiAiQWxsIHRoZXNlIHRlY2hub2xvZ2llcyBoYXZlIHRvIGJlIGRldmVsb3BlZCBmdXJ0aGVyIGFuZCB5b3UgY2FuIG9ubHkgZG8gdGhhdCwgaW5jbHVkaW5nIGluZHVzdHJpYWwgcHJvY2Vzc2VzIHRvIHJlZHVjZSBjb3N0cywgYnkgc2VsbGluZyB0aGVtLiIgVm9sa3N3YWdlbiBDRU8gTWFydGluIFdpbnRlcmtvcm4gc2FpZCBvbmUga2V5IHRvIGdldHRpbmcgdGhlIGh5YnJpZCBhbmQgZWxlY3RyaWMgbWFya2V0IG1vdmluZyBpcyByZWR1Y2luZyB0aGUgY29zdCBvZiB0aGUgbW9zdCBleHBlbnNpdmUgZWxlbWVudCwgdGhlIGJhdHRlcnkuICBUaGUgY29tcGFueSdzIGdvYWwgaXMgdG8gY3V0IHRoZSBjb3N0IG9mIGEgdW5pdCBvZiBiYXR0ZXJ5IHBvd2VyIGJ5IGEgZmFjdG9yIG9mIGZpdmUgb3ZlciB0aGUgbmV4dCBzZXZlcmFsIHllYXJzLiBXaW50ZXJrb3JuIHNhaWQgdGhlIGNvbXBhbnkgaGFkIGluY2x1ZGVkIGVsZWN0cmljIGFuZCBoeWJyaWQgbW9kZWxzIGluIHRoZSBjb21wYW55J3MgbXVsdGktcGxhdGZvcm0gbWFudWZhY3R1cmluZyBzeXN0ZW0uIFRoaXMgc3RhbmRhcmRpemVzIHBhcnRzIGFuZCBhbGxvd3MgdGhlIHNhbWUgYXNzZW1ibHkgbGluZSB0byBwcm9kdWNlIG11bHRpcGxlIHZlaGljbGVzLiBUaGF0IG1lYW5zIGEgbmV3IGVsZWN0cmljIGNvdWxkIGhhdmUgbW9kZXN0IHNhbGVzIG51bWJlcnMsIGJ1dCBub3QgaW52b2x2ZSB0aGUgZXhwZW5zZSBvZiBhZGRpdGlvbmFsIHBsYW50IGNhcGFjaXR5IGFuZCBwYXJ0cyBkZXNpZ24uIFRoZSBVLlMuIGdvdmVybm1lbnQgaXMgcmVxdWlyaW5nIGF1dG9tYWtlcnMgdG8gaW5jcmVhc2UgZmxlZXQgbWlsZWFnZSBzdGFuZGFyZHMsIGFuZCB0aGUgRXVyb3BlYW4gVW5pb24gaXMgcmVxdWlyaW5nIHRoZW0gdG8gY3V0IGVtaXNzaW9ucyBieSAyMDIwLiBBdXRvIGFuYWx5c3RzIHNheSBlbGVjdHJpY3MgY291bGQgZ2V0IGEgZnVydGhlciBwdXNoIGlmIENoaW5hIG9yIGl0cyBiaWdnZXN0IGNpdGllcyBzdGFydCBlbmNvdXJhZ2luZyBvciByZXF1aXJpbmcgdGhlbSB0byBsb3dlciBjaG9raW5nIHBvbGx1dGlvbiBsZXZlbHMuIFRoZSBDaGluZXNlIENhYmluZXQgaXNzdWVkIGEgZGV2ZWxvcG1lbnQgcGxhbiBsYXN0IEp1bmUgdGhhdCBjYWxscyBmb3IgdGhlIG51bWJlciBvZiBlbGVjdHJpYyB2ZWhpY2xlcyB0byByaXNlIHRvIDUwMCwwMDAgYnkgMjAxNSBhbmQgdGhlbiB0byA1IG1pbGxpb24gYnkgMjAyMC4gQnV5ZXJzIG9mIGVsZWN0cmljIHZlaGljbGVzIHdpbGwgYmUgZW50aXRsZWQgdG8gZ292ZXJubWVudCBzdWJzaWRpZXMsIGFuZCBiZSBleGVtcHQgZnJvbSByZXN0cmljdGlvbnMgb24gY2FyIHB1cmNoYXNlcy4gT25lIG9mIHRoZSBiaWdnZXN0IGJ1bGxzIGlzIFJlbmF1bHQtTmlzc2FuIENFTyBDYXJsb3MgR2hvc24sIHdob3NlIGNvbXBhbnkgaGFzIGJldCBoZWF2aWx5IG9uIHRoZSBhbGwtZWxlY3RyaWMgTGVhZi4gSGUgc2FpZCBtdWNoIG9mIHRoZSBpbmR1c3RyeSBpcyB3YWl0aW5nIG5vdyB0byBzZWUgd2hhdCBDaGluYSdzIG5leHQgbW92ZSBpcyBvbiByZWR1Y2luZyBlbWlzc2lvbnMuIFdoZW4gQ2hpbmEgYWN0cywgaXQgd2lsbCBtZWFuICJ0aGUgZXhwbG9zaW9uIG9mIHRoZSBlbGVjdHJpYyBjYXIuIg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUELY+yAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDUxYWUwZDM3NTZiODU4MDY=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0NBUg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEQikiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA9q4UeuFHs</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA9x64UeuFI</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA9PXCj1wo9</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA9rhR64Ueu</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA9rhR64Ueu</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAA91bA==</field><field name="id" class="java.lang.String">rO0ABXQAEGY3MTAxMWI4YzYxODJkNzk=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEySAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTEzODU0</field><field name="title" class="java.lang.String">rO0ABXQALEJpZyBTVVZzIFJ1bWJsZSBBbG9uZyBhcyBHTSBTaG93cyBOZXcgTW9kZWxz</field><field name="content" class="java.lang.String">rO0ABXQT8VRoZSBiaWcgU1VWIHJvbGxzIG9uLiBGaXZlIHllYXJzIGFnbywgd2hlbiBnYXMgaGl0ICQ0IHBlciBnYWxsb24sIGF1dG8gaW5kdXN0cnkgYW5hbHlzdHMgYm9sZGx5IHByZWRpY3RlZCB0aGF0IGVub3Jtb3VzIFNVVnMgd291bGQgdmFuaXNoIGxpa2UgdGhlIGF1dG9tb2JpbGUgdGFpbCBmaW4uIE9uIFRodXJzZGF5LCBHZW5lcmFsIE1vdG9ycyBpcyB1bnZlaWxpbmcgYSBjb21wbGV0ZWx5IHJlZGVzaWduZWQgbGluZXVwIG9mIGl0cyB0cnVjay1iYXNlZCBTVVZzLCB0aHJlZS10b24gYmVoZW1vdGhzIHRoYXQgYXJlIHN0aWxsIHBvcHVsYXIgd2l0aCBkcml2ZXJzIGhhdWxpbmcgYXJvdW5kIGJvYXRzLCBjYW1wZXJzIGFuZCBsYXJnZSBmYW1pbGllcywgb3Igd2hvIGxpa2UgdG8gc2l0IGhpZ2ggb3IgZmVlbCBzYWZlciBpbiBhIGhlYXZ5IHZlaGljbGUuIFRoZSAyMDE1IENoZXZyb2xldCBUYWhvZSBhbmQgU3VidXJiYW4sIEdNQyBZdWtvbiBhbmQgQ2FkaWxsYWMgRXNjYWxhZGUgd2lsbCBoaXQgc2hvd3Jvb21zIGluIGVpdGhlciBsYXRlIHdpbnRlciBvciBlYXJseSBzcHJpbmcuICJUaGVyZSBhcmUgc29tZSBwZW9wbGUsIGVzcGVjaWFsbHkgaW4gb3VyIG1hcmtldCwgd2hvIHdhbnQgYSBwcm9kdWN0IGluIHRoYXQgc2VnbWVudCwiIHNheXMgRWQgV2lsbGlhbXNvbiwgcGFydC1vd25lciBvZiB0d28gR01DIGFuZCBDYWRpbGxhYyBkZWFsZXJzaGlwcyBuZWFyIE1pYW1pLCB3aGVyZSBwZW9wbGUgb2Z0ZW4gdXNlIHRoZSBWOC1wb3dlcmVkIFNVVnMgdG8gdG93IGJvYXRzIHRvIHRoZSBvY2Vhbi4gSW4gcmVjZW50IHllYXJzLCBidXllcnMgaGF2ZSBmbG9ja2VkIHRvIGNyb3Nzb3ZlcnMsIHdoaWNoIGFyZSBjYXItYmFzZWQgc3BvcnQgdXRpbGl0aWVzIHRoYXQgYXJlIGVhc2llciB0byBkcml2ZSwgY2FycnkganVzdCBhcyBtYW55IHBlb3BsZSBhbmQgZ2V0IGJldHRlciBnYXMgbWlsZWFnZS4gWWV0IHRoZXJlJ3Mgc3RpbGwgYSBsdWNyYXRpdmUgVS5TLiBtYXJrZXQgZm9yIHRoZSB0cnVjay1iYXNlZCBTVVZzLCBhbmQgR00gY29udHJvbHMgbW9yZSB0aGFuIDcwIHBlcmNlbnQgb2YgaXQuIEFtZXJpY2FucyBib3VnaHQgbW9yZSB0aGFuIDEzMiwwMDAgYmlnIFNVVnMgZnJvbSBHTSBmcm9tIEphbnVhcnkgdGhyb3VnaCBBdWd1c3QsIGNvbXBhcmVkIHdpdGggYXJvdW5kIDExNCwwMDAgaW4gdGhlIHNhbWUgcGVyaW9kIGEgeWVhciBhZ28sIGV2ZW4gdGhvdWdoIHRoZSBzdGlja2VyIHByaWNlIGNhbiB0b3AgJDUwLDAwMCBhbmQgYSBmaWxsLXVwIGNhbiBjb3N0IGNsb3NlIHRvICQxMDAuIFdpdGggZ2FzIG1pbGVhZ2UgYXJvdW5kIDE3IG1wZyBpbiBjaXR5IGFuZCBoaWdod2F5IGRyaXZpbmcsIHRob3NlIGZpbGwtdXBzIGNvbWUgbW9yZSBvZnRlbiB0aGFuIHdpdGggbWFueSBvdGhlciB2ZWhpY2xlcy4gR00gZXhlY3V0aXZlcyBhcmVuJ3Qgc3VyZSBpZiB0aGlzIGdlbmVyYXRpb24gb2YgU1VWcyB3aWxsIGJlIGl0cyBsYXN0LiBHb3Zlcm5tZW50IHBvbGx1dGlvbiBsaW1pdHMgYW5kIHN0cmljdGVyIGZ1ZWwtZWNvbm9teSByZXF1aXJlbWVudHMgaW4gdGhlIGZ1dHVyZSBjb3VsZCBmb3JjZSB0aGUgY29tcGFueSdzIGhhbmQuIEVOVEhSQUxMRUQgV0lUSCBUUlVDS1MgVGhlIGdpYW50IFNVVnMgYmVjYW1lIHRoZSByYWdlIGluIHRoZSBsYXRlIDE5OTBzLiBHYXMgbWlsZWFnZSB3YXMgb2YgbGl0dGxlIGNvbmNlcm4gd2l0aCBmdWVsIGF0IGp1c3Qgb3ZlciAkMSBwZXIgZ2FsbG9uLiBOaXNzYW4gYW5kIFRveW90YSBqb2luZWQgdGhlIG1hcmtldCB3aXRoIHRoZSBBcm1hZGEgYW5kIFNlcXVvaWEgU1VWcywgdHJ5aW5nIHRvIHRha2UgYSBwaWVjZSBvZiBEZXRyb2l0J3MgYWN0aW9uLiBCeSAyMDAxLCBiaWcgU1VWIHNhbGVzIGhpdCBhIHJlY29yZCBvZiBqdXN0IG92ZXIgOTE3LDAwMCwgYWNjb3JkaW5nIHRvIFdhcmQncyBBdXRvbW90aXZlLiBUaGUgU1VWcyBhY2NvdW50ZWQgZm9yIGFib3V0IDUgcGVyY2VudCBvZiBhbGwgY2FyIHNhbGVzIHRoYXQgeWVhciwgZHJpdmVuIG1vc3RseSBieSBwZW9wbGUgd2hvIHdlcmVuJ3QgZ29pbmcgb2ZmLXJvYWQgb3IgdG93aW5nIHNvbWV0aGluZy4gIldlIHdlcmUgcmVhbGx5IGluIHNvcnQgb2YgYSB0cnVjayBjcmF6ZSBhdCB0aGF0IHRpbWUsIiBzYWlkIEJpbGwgVmlzbmljLCBzZW5pb3IgYW5hbHlzdCB3aXRoIHRoZSBFZG11bmRzLmNvbSBhdXRvIHdlYnNpdGUuIFNhbGVzIHdlcmUgZmFpcmx5IHN0YWJsZSB1bnRpbCAyMDA1LCB3aGVuIGdhcyBzcGlrZWQgb3ZlciAkMyBwZXIgZ2FsbG9uIGFzIGh1cnJpY2FuZXMgcG91bmRlZCBHdWxmIENvYXN0IHJlZmluZXJpZXMuIEFib3V0IHRoZSBzYW1lIHRpbWUsIGNvbXBhbmllcyBmaWd1cmVkIG91dCB3YXlzIHRvIHB1dCBiaWcgcGVvcGxlLWhhdWxlcnMgb24gY2FyIHVuZGVycGlubmluZ3MuIFRoZSBuZXcgdmVoaWNsZXMgYmVjYW1lIHF1aWNrIGhpdHMuIEFzIHRoZSBHcmVhdCBSZWNlc3Npb24gYXJyaXZlZCwgdGhlIHRydWNrLWJhc2VkIHZlaGljbGVzIGFsc28gZHJldyBzY29ybiBmcm9tIGVudmlyb25tZW50YWxpc3RzIHdobyB2aWV3ZWQgdGhlbSBhcyBpY29ucyBvZiBleGNlc3MuIEdhcyB0b3BwZWQgJDQgbmF0aW9ud2lkZSBpbiB0aGUgc3VtbWVyIG9mIDIwMDguIEh1bW1lciwgdGhlIHBvc3RlciBjaGlsZCBmb3IgZ2FzLWd1enpsaW5nIHdhc3RlLCB3ZW50IG91dCBvZiBidXNpbmVzcy4gQnkgMjAwOSwgbGFyZ2UgU1VWIHNhbGVzIGhhZCBwbHVtbWV0ZWQgdG8gMjI4LDAwMC4gQSBDT01FQkFDSywgT0YgU09SVFMgU2FsZXMgb2YgYmlnIFNVVnMgaGl0IDIzNywwMDAgbGFzdCB5ZWFyLCB1cCA0LjUgcGVyY2VudCBmcm9tIHRoZSAyMDA5IHRyb3VnaCBidXQgc3RpbGwgb25seSBhIHF1YXJ0ZXIgb2Ygd2hhdCB0aGV5IHdlcmUgaW4gdGhlIGJvb20geWVhcnMuIEV4cGVydHMgc3VzcGVjdCBkcml2ZXJzIGhhdmUgYmVjb21lIGFjY3VzdG9tZWQgdG8gaGlnaCBnYXMgcHJpY2VzLCB3aGljaCBoYXZlIGF2ZXJhZ2VkIGFyb3VuZCAkMy41MCBuYXRpb253aWRlIHNpbmNlIDIwMTEuIEJlY2F1c2UgdGhleSBjYXJyeSB1cCB0byBlaWdodCBwZW9wbGUsIFN1YnVyYmFucyBhbmQgWXVrb25zIGFyZSBtb3JlIGVmZmljaWVudCB0aGFuIGRyaXZpbmcgdHdvIGNhcnMsIHNhaWQgQ2hyaXMgSGVtbWVyc21laWVyLCBDRU8gb2YgYSAxMC1mcmFuY2hpc2UgZGVhbGVyc2hpcCBjaGFpbiBpbiBTYWx0IExha2UgQ2l0eSwgd2hlcmUgdGhlcmUncyBhbiBhYnVuZGFuY2Ugb2YgYmlnIGZhbWlsaWVzIGFuZCBwZW9wbGUgd2hvIHRyYXZlbCBpbnRvIG5lYXJieSBtb3VudGFpbnMuICJXaGVuIHlvdSBsb29rIGF0IGl0IGluIG1pbGVzIHBlciBwYXNzZW5nZXIsIGl0J3MgcHJldHR5IGdvb2QsIiBIZW1tZXJzbWVpZXIgc2FpZC4gVGhlcmUgYXJlIHN0aWxsIGJ1eWVycyB3aG8ganVzdCB3YW50IHNvbWV0aGluZyBiaWcuIEdNJ3Mgb3duIGRhdGEgc2hvdyB0aGF0IG1vcmUgdGhhbiBoYWxmIG9mIFRhaG9lIGJ1eWVycyBuZXZlciB0b3cgYW55dGhpbmcsIGFuZCBvbmx5IDEuMyBwZXJjZW50IGdvIG9mZiB0aGUgcm9hZCBhdCBsZWFzdCBtb250aGx5LiBPbmx5IDM1IHBlcmNlbnQgaGF2ZSBjaGlsZHJlbiBpbiB0aGVpciBob21lcy4gVEhFIE5FWFQgU1RFUCBGb3IgR00sIHRoZSBidXNpbmVzcyBjYXNlIGZvciB1cGRhdGluZyB0aGUgU1VWcyBtYWtlcyBwZXJmZWN0IHNlbnNlLiBUaGV5IHNlbGwgdG8gaGlnaC1pbmNvbWUgaG91c2Vob2xkcyBmb3IgYW4gYXZlcmFnZSBvZiAkNDcsMDAwIGVhY2gsIGFib3V0ICQyMCwwMDAgYWJvdmUgbGFzdCB5ZWFyJ3MgYXZlcmFnZSBwcmljZSBvZiBhIG5ldyB2ZWhpY2xlIGluIHRoZSBVLlMuIEFuYWx5c3RzIHNheSBHTSBtYWtlcyBhdCBsZWFzdCAkMTAsMDAwIHBlciBTVVYuIEdNIGhhZCBhbHJlYWR5IGRlc2lnbmVkIG5ldyBlbmdpbmVzLCB0cmFuc21pc3Npb25zIGFuZCBzdXNwZW5zaW9ucyBmb3IgaXRzIGZ1bGwtc2l6ZSBwaWNrdXAgdHJ1Y2tzLiBUaG9zZSB3aWxsIGJlIHVzZWQgaW4gdGhlIFNVVnMuIEFsbCBpdCB0b29rIHdhcyBhIG1pbmltYWwgYW1vdW50IG9mIGVuZ2luZWVyaW5nIHRvIG1ha2UgdGhlIFNVViBib2RpZXMgYSBsaXR0bGUgc2xlZWtlciwgdXBkYXRlIHRoZSBpbnRlcmlvcnMgYW5kIGFkZCB0aGlyZC1yb3cgc2VhdHMgdGhhdCBmb2xkIGludG8gdGhlIGZsb29yLiBHTSBzYXlzIHRoZSBuZXcgbW9kZWxzIHdpbGwgYmUgbW9yZSBlZmZpY2llbnQgdGhhbiB0aGUgY3VycmVudCBvbmVzLiBBY3R1YWwgbWlsZWFnZSB3b24ndCBiZSBhbm5vdW5jZWQgdW50aWwgYSBsYXRlciBkYXRlLiBUaGUgY29tcGFueSB1bnZlaWxlZCB0aGUgQ2hldnkgYW5kIEdNQyBtb2RlbHMgVGh1cnNkYXksIHdpdGggdGhlIENhZGlsbGFjIHRvIGZvbGxvdy4gTm8gcHJpY2VzIHdlcmUgYW5ub3VuY2VkLiBJTiBUSElTIFRIRSBFTkQ/IFdpdGggZ292ZXJubWVudCBncmVlbmhvdXNlIGdhcyBsaW1pdHMgYW5kIHJpc2luZyBmdWVsIGVjb25vbXkgcmVxdWlyZW1lbnRzLCBpdCdzIHBvc3NpYmxlIHRoYXQgdGhpcyB3aWxsIGJlIHRoZSBsYXN0IGdlbmVyYXRpb24gb2YgYmlnIFNVVnMuIFRveW90YSwgTmlzc2FuIGFuZCBGb3JkIGhhdmVuJ3QgdXBkYXRlZCB0aGVpciBtb2RlbHMgaW4geWVhcnMuIERlYWxlcnMgaG9wZSBHTSBjYW4gc2VsbCBlbm91Z2ggc21hbGwgY2FycyBhbmQgZWxlY3RyaWMgdmVoaWNsZXMgdG8gb2Zmc2V0IHRoZSBTVVYncyBsb3cgbWlsZWFnZS4gSm9obiBTY2h3ZWdtYW4sIEdNJ3MgZXhlY3V0aXZlIGRpcmVjdG9yIG9mIHRydWNrIHByb2R1Y3QgYW5kIHByaWNpbmcsIHNhaWQgdGhlIGNvbXBhbnkgd2lsbCBzZWUgaWYgaXQgY2FuIG1lZXQgZ292ZXJubWVudCB0YXJnZXRzIGFuZCBzdGlsbCBtYWtlIG1vbmV5LiBWaXNuaWMsIHRoZSBFZG11bmRzIGFuYWx5c3QsIHNhaWQgR00gbWF5IG1ha2UgZW5vdWdoIG1vbmV5IG9uIHRoZW0gdG8gcGF5IGdvdmVybm1lbnQgZmluZXMgZm9yIG5vdCBtZWV0aW5nIGZ1ZWwgZWNvbm9teSByZXF1aXJlbWVudHMsIHNpbWlsYXIgdG8gd2hhdCBsdXh1cnkgYW5kIHNwb3J0cyBjYXIgbWFrZXJzIGFscmVhZHkgZG8sIGhlIHNhaWQu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEQikiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGM4NGMwYjkwYjY1ZTBiZjE=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0VELVVOLlY=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEVsKSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+x64UeuFHs</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+x64UeuFHs</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+x64UeuFHs</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+x64UeuFHs</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/0UeuFHrhS</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDlmYzRiMTRjYzg3N2E2YTk=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHKBAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwNTI=</field><field name="title" class="java.lang.String">rO0ABXQAMlRoZSBTZWNyZXQsIERpcnR5IENvc3Qgb2YgT2JhbWEncyBHcmVlbiBQb3dlciBQdXNo</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJK5SMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI3MTcyMzgzMzAxZTY3Yjg=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZBUk0=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJQC38AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyI9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABp3A==</field><field name="id" class="java.lang.String">rO0ABXQAEGIxNzhiNTk3MDYyZjcwYTE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGoqAAAA==</field></document></documents><date>2015-05-07T12:16:29-0500</date></cacheEntry>
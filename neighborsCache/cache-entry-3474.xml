<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hBIGZpbmFsIHBpZWNlIG9mIEJhbmsgb2YgQW1lcmljYSBDb3JwcyByZWNvcmQgMTY3IGJpbGxpb24gdG94aWNtb3J0Z2FnZSBzZXR0bGVtZW50IGlzIGJlaW5nIGhlbGQgdXAgYnkgYW4gaW50ZXJuYWwgZmlnaHQgYXQgdGhlIFVTIFNlY3VyaXRpZXMgYW5kIEV4Y2hhbmdlIENvbW1pc3Npb24gc2FpZCBmb3VyIHBlb3BsZSBmYW1pbGlhciB3aXRoIHRoZSBjYXNlIFRoZSBhZ3JlZW1lbnQgd2l0aCB0aGUgYmFuayBhbm5vdW5jZWQgaW4gQXVndXN0IGhhcyBzdGFsbGVkIGFzIHRoZSBhZ2VuY3lzIGNvbW1pc3Npb25lcnMgd2FnZSBhIGJlaGluZHRoZXNjZW5lcyBiYXR0bGUgb3ZlciB3YWl2aW5nIGEgc2VyaWVzIG9mIGFkZGl0aW9uYWwgc2FuY3Rpb25zIHRoYXQgd2lsbCBraWNrIGluIHdoZW4gdGhlIHNldHRsZW1lbnQgaXMgZW50ZXJlZCBpbiBjb3VydCBHZXR0aW5nIGEgcGFzcyBvbiB0aGUgcGVuYWx0aWVzIHdoaWNoIGNhbiBhZmZlY3QgYSBsZW5kZXJzIGFzc2V0bWFuYWdlbWVudCBidXNpbmVzcyBhbmQgYWJpbGl0eSB0byByYWlzZSBjYXBpdGFsIGVhc2lseSBoYWQgb25jZSBiZWVuIHJvdXRpbmUgSXRzIG5vdyBhIGZsYXNocG9pbnQgYWNjb3JkaW5nIHRvIHRoZSBwZW9wbGUgSW4gdGhlIEJhbmsgb2YgQW1lcmljYSBjYXNlIHR3byBEZW1vY3JhdGljIGNvbW1pc3Npb25lcnMgYXJlIGJhbGtpbmcgYXQgZ3JhbnRpbmcgdGhlIGZpcm1zIHJlcXVlc3QgZm9yIHJlbGllZiBzYWlkIHRoZSAgcGVvcGxlIHdobyBhc2tlZCBub3QgdG8gYmUgbmFtZWQgYmVjYXVzZSBTRUMgbmVnb3RpYXRpb25zIHdpdGggIGNvbXBhbmllcyBhcmVudCBwdWJsaWMgU0VDIENoYWlyIE1hcnkgSm8gV2hpdGUgdGhlIHN3aW5nICB2b3RlIGlzbnQgcGFydGljaXBhdGluZyBpbiB0aGUgZGlzY3Vzc2lvbnMgZHVlIHRvIGEgY29uZmxpY3QgIHRoZXkgc2FpZCBXaXRoIHRoZSB0d28gUmVwdWJsaWNhbnMgb24gdGhlIG90aGVyIHNpZGUgdGhlICBjb21taXNzaW9uIGlzIGxvY2tlZCBpbiBhIHN0YWxlbWF0ZSBVbnRpbCByZWNlbnRseSB0aGUgd2FpdmVyIGlzc3VlcyB3ZXJlIG5ldmVyIHZpZXdlZCBhcyB0aGUgbGVhc3QgYml0IGNvbnRyb3ZlcnNpYWwgc2FpZCBKb24gRWlzZW5iZXJnIGEgcGFydG5lciBhdCB0aGUgS0wgR2F0ZXMgTExQIGxhdyBmaXJtIGluIFdhc2hpbmd0b24gd2hvIHdhcyBwcmV2aW91c2x5IGdlbmVyYWwgY291bnNlbCBvZiBVQlMgQUdzIHdlYWx0aG1hbmFnZW1lbnQgYnVzaW5lc3MgaW4gdGhlIEFtZXJpY2FzIFNvZnQgUmVndWxhdG9ycyBUaGF0IGhhcyBjaGFuZ2VkIGFzIHRoZSBjb21taXNzaW9uIGdyYXBwbGVzIHdpdGggYSBoaWdobHkgY2hhcmdlZCBwb2xpdGljYWwgcXVlc3Rpb24gaGF2ZSByZWd1bGF0b3JzIGJlZW4gdG9vIHNvZnQgb24gV2FsbCBTdHJlZXQgVGhlIGRlYmF0ZSBpcyBub3cgdGhydXN0aW5nIHdhaXZlcnMgb25jZSBhbiBvYnNjdXJlIGFuZCB0ZWNobmljYWwgbGVnYWwgbWF0dGVyIGludG8gdGhlIHNwb3RsaWdodCBIb3cgdGhlIG1hdHRlciBpcyByZXNvbHZlZCBjb3VsZCBhZmZlY3Qgbm90IG9ubHkgQmFuayBvZiBBbWVyaWNhIGJ1dCB3aGV0aGVyIG90aGVyIGZpbmFuY2lhbCBmaXJtcyBkZWNpZGUgdG8gc2V0dGxlIGludmVzdGlnYXRpb25zIG9yIGdvIHRvIHRyaWFsIHNlY3VyaXRpZXMgbGF3eWVycyBzYWlkIFRob3VnaCBtb3N0IGNhc2VzIGRvbnQgZmFjZSB0aGUgc2FtZSBkZWFkbG9jayBmb3JtZXIgU0VDIG9mZmljaWFscyBzYXkgaW5jcmVhc2luZyBwcmVzc3VyZSBmcm9tIENhcGl0b2wgSGlsbCBhbmQgaW52ZXN0b3IgYWR2b2NhdGVzIHRvIHBlbmFsaXplIGJhbmtzIG1heSBib2cgZG93biBmdXR1cmUgZW5mb3JjZW1lbnQgYWN0aW9ucyBUaGUgZGViYXRlIG92ZXIgd2FpdmVycyBpc250IGxpbWl0ZWQgdG8gdGhlIFNFQyBBdCB0aGUgTGFib3IgRGVwYXJ0bWVudCBTZWNyZXRhcnkgVGhvbWFzIFBlcmV6IGZhY2VzIGNhbGxzIGZyb20gIERlbW9jcmF0aWMgbGF3bWFrZXJzIHRvIHNjcnV0aW5pemUgd2hldGhlciBDcmVkaXQgU3Vpc3NlIEdyb3VwICBBRyBkZXNlcnZlcyByZWxpZWYgaXQgbmVlZHMgdG8ga2VlcCBtYW5hZ2luZyBwZW5zaW9uZnVuZCBhc3NldHMgIGFmdGVyIHBsZWFkaW5nIGd1aWx0eSB0byBoZWxwaW5nIEFtZXJpY2FucyBldmFkZSB0YXhlcyBIYXJzaGVzdCBCYW4gQXQgdGhlIFNFQyB0aGVyZSBhcmUgdGhyZWUgbWFpbiBwZW5hbHRpZXMgdGhhdCBiYW5rcyBzZWVrIHdhaXZlcnMgZm9yIHdoZW4gdGhleSBzZXR0bGUgY2FzZXMgd2l0aCB0aGUgaGFyc2hlc3QgYSBiYW4gb24gbWFuYWdpbmcgbXV0dWFsIGZ1bmRzIEFub3RoZXIgcHJldmVudHMgYmFua3MgZnJvbSByYWlzaW5nIG1vbmV5IGZvciBwcml2YXRlIGNvbXBhbmllcyBUaGUgdGhpcmQgYW5kIG1vc3QgbWlub3IgdGFrZXMgYXdheSBhIHByaXZpbGVnZSB0aGF0IGFsbG93cyBhIGZpcm0gdG8gaXNzdWUgaXRzIG93biBzaGFyZXMgb3IgYm9uZHMgd2l0aG91dCBTRUMgYXBwcm92YWwgRm9yIEJhbmsgb2YgQW1lcmljYSB0aGUgYmlnZ2VzdCBob2xkdXAgaXMgb3ZlciB0aGUgd2FpdmVyIHRoYXQgd2lsbCBhbGxvdyB0aGUgYmFuayB0byBjb250aW51ZSBzZWVraW5nIGludmVzdG9ycyBmb3IgcHJpdmF0ZSBmaXJtcyBzdWNoIGFzIHRlY2hub2xvZ3kgY29tcGFuaWVzIHRoYXQgaGF2ZW50IHlldCBnb25lIHB1YmxpYyBhbmQgaGVkZ2UgZnVuZHMgdGhlIHBlb3BsZSBzYWlkIEl0IHNlZW1zIHRvIG1lIGl0IHdvdWxkIGJlIGltcG9ydGFudCBmb3IgdGhlbSB0byBoYXZlIHRoYXQgd2FpdmVyIHNhaWQgUmljaGFyZCBBIEtsaW5lIGEgbGF3IHBhcnRuZXIgYXQgR29vZHdpbiBQcm9jdGVyIExMUCBpbiBNZW5sbyBQYXJrIENhbGlmb3JuaWEgV2hlbiBmYXN0Z3Jvd2luZyBjb21wYW5pZXMgYXJlIHNlZWtpbmcgdG8gcmFpc2UgbW9uZXkgZnJvbSBpbnN0aXR1dGlvbnMgdGhlcmUgYXJlIG9mdGVuIGJhbmtzIHRoYXQgd2lsbCBsZWFkIHNvbWUgb2YgdGhvc2UgcHJpdmF0ZSBwbGFjZW1lbnRzIGhlIHNhaWQgTGF3cmVuY2UgR3JheXNvbiBhIHNwb2tlc21hbiBmb3IgQ2hhcmxvdHRlIE5vcnRoIENhcm9saW5hYmFzZWQgQmFuayBvZiBBbWVyaWNhIGRlY2xpbmVkIHRvIGNvbW1lbnQgUHJvcG9uZW50cyBvZiBpc3N1aW5nIHdhaXZlcnMgc2F5IHRoZSBleGVtcHRpb25zIGFyZSBuZWVkZWQgYmVjYXVzZSB0aGUgcHVuaXNobWVudHMgYmVoaW5kIHRoZW0gYXJlIGJsdW50IGluc3RydW1lbnRzIGNyZWF0ZWQgZm9yIGVncmVnaW91cyBmcmF1ZHMgbWFpbmx5IGJ5IHNtYWxsdGltZSBzY2hlbWVycyBhbmQgYm9pbGVycm9vbSBvcGVyYXRvcnMgUGVuYWx0aWVzIGtpY2sgaW4gYXV0b21hdGljYWxseSB3aGVuIGEganVkZ2UgYXBwcm92ZXMgYSBzZXR0bGVtZW50IG1ha2luZyBpdCBuZWNlc3NhcnkgZm9yIGEgY29tcGFueSB0byBhcnJhbmdlIGZvciBhbiBleGVtcHRpb24gYmVmb3JlaGFuZCBCYWQgQWN0aW9ucyBCeSBncmFudGluZyB3YWl2ZXJzIHRoZSBTRUMgaXMgZXhlcmNpc2luZyBkaXNjcmV0aW9uIHRvIG1ha2Ugc3VyZSB0aGF0IHRoZSBtYXJrZXQgc3RpbGwgZnVuY3Rpb25zIGFuZCB0aGF0IGFsbCBzb3J0cyBvZiBnb29kIHBlb3BsZSBkb250IGdldCB0aHJvd24gdW5kZXIgdGhlIGJ1cyBiZWNhdXNlIG9mIHRoZSBiYWQgYWN0aW9ucyBvZiBvdGhlcnMgc2FpZCBQYXVsIEF0a2lucyBhIGZvcm1lciBTRUMgY29tbWlzc2lvbmVyIHdob3Mgbm93IHRoZSBjaGllZiBleGVjdXRpdmUgb2ZmaWNlciBvZiBjb25zdWx0aW5nIGZpcm0gUGF0b21hayBHbG9iYWwgUGFydG5lcnMgQmFua3MgaGF2ZSBoaXN0b3JpY2FsbHkgc291Z2h0IHJlbGllZiBmcm9tIHRoZSBleHRyYSBwdW5pc2htZW50cyBieSBhcmd1aW5nIHRoYXQgdGhlIHNhbmN0aW9ucyBhcmUgc2V2ZXJlIHRvbyBicm9hZCBhbmQgdGFyZ2V0IHVuaXRzIHRoYXQgaGFkIG5vdGhpbmcgdG8gZG8gd2l0aCB0aGUgZnJhdWQgQmFuayBvZiBBbWVyaWNhcyBzZXR0bGVtZW50IHdpdGggdGhlIEp1c3RpY2UgRGVwYXJ0bWVudCBTRUMgb3RoZXIgYWdlbmNpZXMgYW5kIGEgaGFuZGZ1bCBvZiBzdGF0ZXMgcmVzb2x2ZWQgYWxsZWdhdGlvbnMgIHRoYXQgaXQgc29sZCBzaG9kZHkgbW9ydGdhZ2Ugc2VjdXJpdGllcyB3aXRob3V0IGRpc2Nsb3NpbmcgYWxsICB0aGUgcmlza3MgdG8gaW52ZXN0b3JzIE1vc3Qgb2YgdGhlIGFsbGVnZWQgd3Jvbmdkb2luZyBpbnZvbHZlZCAgTWVycmlsbCBMeW5jaCBhbmQgQ291bnRyeXdpZGUgRmluYW5jaWFsIGNvbXBhbmllcyBCYW5rIG9mICBBbWVyaWNhIGJvdWdodCBUaGUgd3JhbmdsaW5nIGF0IHRoZSBTRUMgaXMgaG9sZGluZyB1cCBqdXN0IGl0cyBwb3J0aW9uIG9mIHRoZSBzZXR0bGVtZW50IFRoZSB1cHJpc2luZyBvdmVyIHdhaXZlcnMgaGFzIGJlZW4gbGVkIGJ5IFNFQyBDb21taXNzaW9uZXIgS2FyYSBTdGVpbiBhbmQgaGVyIGZlbGxvdyBEZW1vY3JhdCBMdWlzIEFndWlsYXIgd2hvIGFyZ3VlIHRoYXQgYWRkaXRpb25hbCBzYW5jdGlvbnMgYXJlIHNvbWV0aW1lcyBqdXN0aWZpZWQgZXNwZWNpYWxseSBmb3IgYmFua3MgdGhhdCBnZXQgaW4gdHJvdWJsZSBhZ2FpbiBhbmQgYWdhaW4gUnViYmVyIFN0YW1waW5nIFRoZSBjb21taXNzaW9uIGFuZCBpdHMgc3RhZmYgc2hvdWxkIG5vdCBiZSBpbiB0aGUgYnVzaW5lc3Mgb2YgcnViYmVyc3RhbXBpbmcgYW5kIGFwcHJvdmluZyBhbGwgd2FpdmVyIGFwcGxpY2F0aW9ucyBzaW1wbHkgYmVjYXVzZSBhIHJlcXVlc3QgaXMgbWFkZSBBZ3VpbGFyIHNhaWQgSW4gQXByaWwgaGUgYW5kIFN0ZWluIHZvdGVkIGFnYWluc3QgdGhlIGNvbW1pc3Npb25zIGRlY2lzaW9uIHRvIGFwcHJvdmUgYSB3YWl2ZXIgZm9yIFJveWFsIEJhbmsgb2YgU2NvdGxhbmQgR3JvdXAgUGxjIGFmdGVyIG9uZSBvZiBpdHMgc3Vic2lkaWFyaWVzIHBsZWFkZWQgZ3VpbHR5IHRvIHJpZ2dpbmcgYmVuY2htYXJrIGludGVyZXN0IHJhdGVzIFN0ZWluIHdlbnQgcHVibGljIHdpdGggaGVyIGRpc3NlbnQgcXVlc3Rpb3QABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMC0wNi0xMVQwMDowMDowMFogVE8gMjAxMy0wNy0zMVQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDY5MzA=</field><field name="title" class="java.lang.String">rO0ABXQANlRyZWFzdXJ5J3MgR2VpdGhuZXIgVXJnZXMgQWN0aW9uIG9uIE1vbmV5IE1hcmtldCBGdW5kcw==</field><field name="content" class="java.lang.String">rO0ABXQO6kluIGEgbGV0dGVyIGRhdGVkIFRodXJzZGF5LCBHZWl0aG5lciBzYWlkIHRoZSBGaW5hbmNpYWwgU3RhYmlsaXR5IE92ZXJzaWdodCBDb3VuY2lsIHNob3VsZCBmb3JtYWxseSBhc2sgdGhlIFNlY3VyaXRpZXMgYW5kIEV4Y2hhbmdlIENvbW1pc3Npb24gdG8gbW92ZSBmb3J3YXJkIHdpdGggbmV3IHJ1bGVzIGluIGEgYmlkIHRvIGdldCB0aGUgZGl2aWRlZCBTRUMgdG8gYWN0LiBIZSBhbHNvIHNhaWQgdGhlIGNvdW5jaWwgYW5kIGl0cyBtZW1iZXIgcmVndWxhdG9ycyBzaG91bGQgY29uc2lkZXIgZXhlcmNpc2luZyBvdGhlciBwb3dlcnMgdG8gbW9yZSB0aWdodGx5IHJlZ3VsYXRlIHRoZSBtb25leSBtYXJrZXQgZnVuZCBpbmR1c3RyeSwgaW5jbHVkaW5nIG5hbWluZyBzb21lIGZpcm1zIGFzICJzeXN0ZW1pYyIgYW5kIGltcG9zaW5nIGNhcGl0YWwgc3VyY2hhcmdlcyBvbiBiYW5rcyB0aGF0IHNwb25zb3IgbW9uZXkgZnVuZHMuICJXaXRob3V0IGZ1cnRoZXIgcmVmb3JtIG9mIG1vbmV5IG1hcmtldCBmdW5kcywgb3VyIGZpbmFuY2lhbCBzeXN0ZW0gd2lsbCByZW1haW4gdnVsbmVyYWJsZSB0byBydW5zIGFuZCBpbnN0YWJpbGl0eSwgd2hpY2ggYXJlIGhhcm1mdWwgZm9yIHJldGFpbCBhbmQgaW5zdGl0dXRpb25hbCBpbnZlc3RvcnMsIiBHZWl0aG5lciB3cm90ZS4gIldpdGggdGhlIGZhaWx1cmUgb2YgdGhlIFNFQyB0byBhY3QsIHRoZSBDb3VuY2lsIHNob3VsZCBub3cgbW92ZSBmb3J3YXJkIHdpdGggdGhlIHRvb2xzIHByb3ZpZGVkIGJ5IENvbmdyZXNzLiIgR2VpdGhuZXIncyBsZXR0ZXIgY2FtZSBhYm91dCBhIG1vbnRoIGFmdGVyIE1hcnkgU2NoYXBpcm8sIHRoZSBoZWFkIG9mIHRoZSBTRUMsIGFubm91bmNlZCBzaGUgaGFkIGZhaWxlZCB0byB3aW4gZW5vdWdoIHN1cHBvcnQgYXQgaGVyIGFnZW5jeSB0byBhZHZhbmNlIHJlZm9ybXMuIFNjaGFwaXJvIGhhZCBjaXJjdWxhdGVkIGEgZHJhZnQgcHJvcG9zYWwgb24gZnVuZCByZWZvcm1zIHRoYXQgaW5jbHVkZWQgcmVxdWlyaW5nIHRoZSBmdW5kcyB0byBidWlsZCB1cCBjYXBpdGFsIGJ1ZmZlcnMgYW5kIGltcG9zZSBsaW1pdHMgb24gcmVkZW1wdGlvbnMsIHRvIHJlZHVjZSB0aGUgcmlzayBvZiBydW5zIG9uIGZ1bmRzLiBJdCBhbHNvIGluY2x1ZGVkIGEgcGxhbiB0byBtb3ZlIGF3YXkgZnJvbSB0aGVpciBwb2xpY3kgb2YgbWFpbnRhaW5pbmcgYSBzdGFibGUgJDEgcGVyIHNoYXJlIG5ldCBhc3NldCB2YWx1ZS4gQnV0IHRocmVlIG9mIHRoZSBTRUMncyBjb21taXNzaW9uZXJzIC0gRGVtb2NyYXQgTHVpcyBBZ3VpbGFyIGFuZCBSZXB1YmxpY2FucyBUcm95IFBhcmVkZXMgYW5kIERhbiBHYWxsYWdoZXIgLSBzYWlkIHRoZXkgY291bGQgbm90IHN1cHBvcnQgaGVyIHByb3Bvc2Fscy4gVGhleSBoYXZlIGV4cHJlc3NlZCBza2VwdGljaXNtIGFib3V0IHRoZSBuZWVkIHRvIGFkb3B0IGFkZGl0aW9uYWwgbW9uZXkgbWFya2V0IHJlZm9ybXMgYmV5b25kIHRoZSBvbmVzIGVuYWN0ZWQgaW4gMjAxMC4gQ29uZmlkZW5jZSBpbiB0aGUgbW9uZXkgZnVuZCBpbmR1c3RyeSB3YXMgc2hha2VuIGluIDIwMDggd2hlbiB0aGUgUmVzZXJ2ZSBQcmltYXJ5IEZ1bmQsIG9uZSBvZiB0aGUgb2xkZXN0IGFuZCBiaWdnZXN0IG1vbmV5IGZ1bmRzLCAiYnJva2UgdGhlIGJ1Y2siLCBtZWFuaW5nIGl0cyBwZXItc2hhcmUgdmFsdWUgZmVsbCBiZWxvdyAkMS4gVGhhdCBoYXBwZW5lZCBiZWNhdXNlIG9mIHRoZSBmdW5kJ3MgaGVhdnkgbG9zc2VzIG9uIGRlYnQgaG9sZGluZ3MgaW4gaW52ZXN0bWVudCBiYW5rIExlaG1hbiBCcm90aGVycyB3aGljaCBoYWQgIGNvbGxhcHNlZCBhIGZldyBkYXlzIGVhcmxpZXIuIFRoZSBTRUMgZW5hY3RlZCBtb25leSBtYXJrZXQgcmVmb3JtcyBpbiAyMDEwIHRoYXQgdGlnaHRlbmVkIGNyZWRpdCBxdWFsaXR5IHN0YW5kYXJkcywgc2hvcnRlbmVkIHdlaWdodGVkIGF2ZXJhZ2UgbWF0dXJpdGllcyBhbmQgaW1wb3NlZCBhIGxpcXVpZGl0eSByZXF1aXJlbWVudCBvbiBtb25leSBtYXJrZXQgZnVuZHMuIEJ1dCBTY2hhcGlybyBpcyBub3QgY29udmluY2VkIHRoZXNlIHJ1bGVzIGdvIGZhciBlbm91Z2guIExhc3Qgd2VlaywgU2NoYXBpcm8gcGVubmVkIGEgY29sdW1uIGluIHRoZSBXYWxsIFN0cmVldCBKb3VybmFsIGNhbGxpbmcgb24gRlNPQyB0byB0YWtlIGFjdGlvbiwgc2F5aW5nIG1vbmV5IG1hcmtldCBmdW5kcyByZW1haW4gdnVsbmVyYWJsZSB0byBydW5zLiBUaGUgRlNPQyBpcyBzbGF0ZWQgdG8gbWVldCBpbiBhIGNsb3NlZC1kb29yIHNlc3Npb24gRnJpZGF5LCB3aGVyZSB0aGUgdG9waWMgb2YgbW9uZXkgbWFya2V0IGZ1bmRzIG1heSBjb21lIHVwLiBHZWl0aG5lcidzIGRlY2lzaW9uIHRvIGdldCBGU09DIGludm9sdmVkIGluIG1vbmV5IG1hcmtldCBmdW5kcyB3aWxsIHJhdGNoZXQgdXAgdGhlIHByZXNzdXJlIG9uIFNFQyBjb21taXNzaW9uZXJzIHRvIGNvbWUgdG8gYSBjb25zZW5zdXMuIENyZWF0ZWQgYnkgdGhlIERvZGQtRnJhbmsgV2FsbCBTdHJlZXQgcmVmb3JtIGxhdyBpbiAyMDEwLCBGU09DIGlzIGEgcGFuZWwgY29tcHJpc2VkIG9mIHRoZSB0b3AgVS5TLiBiYW5raW5nIGFuZCBmaW5hbmNpYWwgbWFya2V0IHJlZ3VsYXRvcnMuIFRoZSBjb3VuY2lsIGhhcyB0aGUgYXV0aG9yaXR5IHRvIGR1YiBub24tYmFuayBmaW5hbmNpYWwgZmlybXMgc3VjaCBhcyBtb25leSBtYXJrZXQgZnVuZHMgYXMgInN5c3RlbWljYWxseSBpbXBvcnRhbnQsIiBhIGRlc2lnbmF0aW9uIHRoYXQgc3ViamVjdHMgdGhlbSB0byBncmVhdGVyIHJlZ3VsYXRvcnkgb3ZlcnNpZ2h0LiBUaGUgcGFuZWwgY2FuIGFsc28gdXNlIGl0cyBwb3dlcnMgdG8gcHJlc3N1cmUgcmVndWxhdG9ycyB0byBhY3QsIGluIGEgRG9kZC1GcmFuayBtZWFzdXJlIGNvbGxvcXVpYWxseSBrbm93biBhcyB0aGUgIm5hbWUgYW5kIHNoYW1lIiBwcm92aXNpb24uIFRoYXQgcHJvdmlzaW9uIGFsbG93cyB0aGUgRlNPQyB0byBtYWtlIGZvcm1hbCByZWNvbW1lbmRhdGlvbnMgdG8gcmVndWxhdG9ycy4gVGhlIFNFQyB3b3VsZCB0aGVuIG5lZWQgdG8gZWl0aGVyIGFkb3B0IHRoZSBGU09DJ3MgcHJvcG9zZWQgcnVsZXMsIG9yIGZvcm1hbGx5IHJlamVjdCB0aGVtIGluIHdyaXRpbmcgd2l0aGluIDkwIGRheXMuIEluIGhpcyBsZXR0ZXIsIEdlaXRobmVyIHVyZ2VkIHRoZSBjb3VuY2lsIHRvIGNvbnNpZGVyIGJvdGggb2YgdGhlc2Ugb3B0aW9ucy4gSGUgc2FpZCBoZSBoYXMgYWxyZWFkeSBhc2tlZCBoaXMgc3RhZmYgdG8gYmVnaW4gZHJhZnRpbmcgYSBsaXN0IG9mIGZvcm1hbCByZWNvbW1lbmRhdGlvbnMgZm9yIHRoZSBTRUMgdG8gY29uc2lkZXIuIFNvbWUgb2YgdGhvc2UgcmVmb3JtcywgaGUgc2FpZCwgY291bGQgaW5jbHVkZSBTY2hhcGlybydzIHByb3Bvc2FscyB0byByZXF1aXJlIGZ1bmRzIHRvIHNldCBhc2lkZSBtb3JlIGNhcGl0YWwgYW5kIHJlc3RyaWN0IGN1c3RvbWVyIHdpdGhkcmF3YWxzIGF0IHRpbWVzIG9mIHN0cmVzcy4gSGUgYWxzbywgaG93ZXZlciwgc2FpZCB0aGUgY291bmNpbCBpcyB3aWxsaW5nIHRvIGVudGVydGFpbiBhbiBhbHRlcm5hdGl2ZSBhcHByb2FjaCBvZiBpbXBvc2luZyBjYXBpdGFsIHN0YW5kYXJkcyBjb3VwbGVkIHdpdGggbGlxdWlkaXR5IGZlZXMgb3IgdGVtcG9yYXJ5ICJnYXRlcyIgb24gcmVkZW1wdGlvbnMuIEJvdGggUmVwdWJsaWNhbiBTRUMgY29tbWlzc2lvbmVycyBsYXN0IG1vbnRoIHNhaWQgdGhleSB3ZXJlIG9wZW4gdG8gZXhwbG9yaW5nIHJ1bGVzIHRoYXQgd291bGQgYWxsb3cgZnVuZCBib2FyZHMgdG8gaW1wb3NlICJnYXRlcyIgb24gcmVkZW1wdGlvbnMu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAToGGICAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDFmZWYyOGVjMWMyNTBhYjY=</field><field name="symbol" class="java.lang.String">rO0ABXQABFdTQ08=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAToLPtyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/Ao9cKPXCk</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/Ao9cKPXCk</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/Ao9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/Ao9cKPXCk</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/0AAAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDliZTY2ZTg4NzRlYzUzM2M=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGraAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExMjk0</field><field name="title" class="java.lang.String">rO0ABXQAMUFwcGxlIENvbnRyb3ZlcnN5IExheXMgQmFyZSBDb21wbGV4IElyaXNoIFRheCBXZWI=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT/gsxSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDhhYzg2NDIwNWE4ZjdhZTU=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0JTWA==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT/l2XCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAjLhR64Ueu</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAjPXCj1wo9</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAi1wo9cKPX</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAi8KPXCj1x</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAi8KPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAGEhPA==</field><field name="id" class="java.lang.String">rO0ABXQAEGNhMGMyNGMwOWZmOWU3OTk=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mLvhAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQAAzcxNg==</field><field name="title" class="java.lang.String">rO0ABXQAL1JlZ3VsYXRvcnMgTG9vayBJbnRvIENoaW5hIEZpcm1zJyBMaXN0aW5nIFBsb3lz</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATLnDUiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDk1YmY2ZTYyODgxZWQ1NWE=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNJTk8=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATLsM6SAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/8zMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/+PXCj1wo9</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/8AAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/9mZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/9mZmZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABZdA==</field><field name="id" class="java.lang.String">rO0ABXQAEGMzODNkM2Y1ZThiNjliZDc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mK0sAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIxNDY2</field><field name="title" class="java.lang.String">rO0ABXQAOVN0YW5kYXJkIENoYXJ0ZXJlZOKAmXMgTlkgUHJvYmUgRW5kcyBhcyBVUyBJbnF1aXJpZXMgTG9vbQ==</field><field name="content" class="java.lang.String">rO0ABXQv5lN0YW5kYXJkIENoYXJ0ZXJlZCBQbGMsIGhhdmluZyBzZXR0bGVkIGEgTmV3IFlvcmsgbW9uZXkgbGF1bmRlcmluZyBwcm9iZSBmb3IgJDM0MCBtaWxsaW9uIHRoZSBkYXkgYmVmb3JlIGl0IHdhcyB0byBkZWZlbmQgaXRzIHJpZ2h0IHRvIG9wZXJhdGUgaW4gdGhlIHN0YXRlLCBzdGlsbCBmYWNlcyBmZWRlcmFsIGlucXVpcmllcyBvdmVyIGNsYWltcyBpdCBoZWxwZWQgc2FuY3Rpb25lZCBuYXRpb25zIGluY2x1ZGluZyBJcmFuIGlsbGVnYWxseSBmdW5uZWwgbW9uZXkgdGhyb3VnaCB0aGUgVS5TLiBSZWd1bGF0b3JzIGluY2x1ZGluZyB0aGUgVS5TLiBUcmVhc3VyeSwgRmVkZXJhbCBSZXNlcnZlLCBKdXN0aWNlIERlcGFydG1lbnQgYW5kIE1hbmhhdHRhbiBEaXN0cmljdCBBdHRvcm5leSBkZWNsaW5lZCBpbW1lZGlhdGUgYXR0ZW1wdHMgYXQgYSBnbG9iYWwgc2V0dGxlbWVudCwgc2FpZCB0d28gcGVvcGxlIGZhbWlsaWFyIHdpdGggdGhlIG1hdHRlci4gQSBjb29yZGluYXRlZCBlZmZvcnQgd2FzIGFscmVhZHkgaW4gcHJvZ3Jlc3MgYmVmb3JlIE5ldyBZb3Jr4oCZcyB1bmlsYXRlcmFsIGRlYWwsIGFubm91bmNlZCB5ZXN0ZXJkYXkgYnkgZmluYW5jaWFsIHJlZ3VsYXRvciBCZW5qYW1pbiBMYXdza3ksIG9uZSBvZiB0aGUgcGVvcGxlIHNhaWQuIFRoZSBhZ3JlZW1lbnQgZG9lc27igJl0IHRha2UgaW50byBhY2NvdW50IGFsbCBvZiB0aGUgYmFua+KAmXMgYWxsZWdlZCB2aW9sYXRpb25zLCBpbmNsdWRpbmcgdGhvc2UgaW52b2x2aW5nIG5hdGlvbnMgc3VjaCBhcyBTdWRhbiwgc2FpZCBvbmUgb2YgdGhlIHBlb3BsZSwgd2hvIGFkZGVkIHRoYXQgU2VwdGVtYmVyIGlzIHRoZSBlYXJsaWVzdCBhIHVuaXZlcnNhbCBkZWFsIG1heSBiZSByZWFjaGVkLiBTaGFyZXMgb2YgdGhlIGJhbmsgcm9zZSBhcyBtdWNoIGFzIDUuMSBwZXJjZW50IGluIExvbmRvbiB0b2RheSBhcyB0aGUgTmV3IFlvcmsgc2V0dGxlbWVudCByZW1vdmVkIG9uZSBwcmVzc2luZyByaXNrIHRvIHRoZSBiYW5rLiDigJxGcm9tIHRoZSBiYW5r4oCZcyBwZXJzcGVjdGl2ZSwgdGhleSBuZWVkZWQgdG8gZ2V0IHRoaXMgYmVoaW5kIHRoZW0s4oCdIEFubiBHcmFoYW0sIGRpcmVjdG9yIG9mIHRoZSBCdXNpbmVzcyBMYXcgSW5zdGl0dXRlIGF0IEhhbWxpbmUgVW5pdmVyc2l0eSBTY2hvb2wgb2YgTGF3IGluIFN0LiBQYXVsLCBNaW5uZXNvdGEsIHNhaWQgb2YgdGhlIE5ldyBZb3JrIGFncmVlbWVudC4g4oCcSGFkIHRoaXMgYWN0aW9uIGdvbmUgZm9yd2FyZCwgdGhlIHBvdGVudGlhbCB3YXMgdGhhdCB0aGV5IGNvdWxkIGxvc2UgdGhlaXIgbGljZW5zZSB0byBvcGVyYXRlIGluIE5ldyBZb3JrLCBhbmQgdGhhdCB3b3VsZCBoYXZlIGJlZW4gZGV2YXN0YXRpbmcgdG8gdGhlaXIgb3BlcmF0aW9ucy7igJ0gT25lIGFuYWx5c3QgZXN0aW1hdGVkIHRoYXQgdGhlIGJhbmvigJlzIGxvc3Mgb2YgaXRzIE5ldyBZb3JrIGxpY2Vuc2UgY291bGQgaGF2ZSByZXN1bHRlZCBpbiBhIDQwIHBlcmNlbnQgZHJvcCBpbiBlYXJuaW5ncy4gTGF3c2t54oCZcyBPcmRlciBPbiBBdWcuIDYsIExhd3NreSBpc3N1ZWQgYW4gb3JkZXIgYWNjdXNpbmcgU3RhbmRhcmQgQ2hhcnRlcmVkIG9mIGhlbHBpbmcgSXJhbiBsYXVuZGVyIGFib3V0ICQyNTAgYmlsbGlvbiBpbiB2aW9sYXRpb24gb2YgZmVkZXJhbCBsYXdzLiBIZSBhY2N1c2VkIHRoZSBiYW5rIG9mIGEgZGVjYWRlIG9mIGRlY2VwdGlvbiwgaW5jbHVkaW5nIGtlZXBpbmcgZmFsc2UgcmVjb3JkcywgaW4gaGFuZGxpbmcgbHVjcmF0aXZlIHdpcmUgdHJhbnNmZXJzIGZvciBJcmFuaWFuIGNsaWVudHMuIFRoZSBiYW5rIHNlbnQgdGhlbSB0aHJvdWdoIGl0cyBOZXcgWW9yayB1bml0IGluIHNvLWNhbGxlZCBVLVR1cm4gdHJhbnNhY3Rpb25zIHdpdGggY2xpZW50IG5hbWVzIG9taXR0ZWQgdG8gaGlkZSB0aGVpciBwcm92ZW5hbmNlLCBMYXdza3kgc2FpZC4gVGhlIE5ldyBZb3JrIHJlZ3VsYXRvciBzYWlkIHllc3RlcmRheSBpbiBhIHN0YXRlbWVudCB0aGF0IOKAnHRoZSBwYXJ0aWVzIGhhdmUgYWdyZWVkIHRoYXQgdGhlIGNvbmR1Y3QgYXQgaXNzdWUgaW52b2x2ZWQgdHJhbnNhY3Rpb25zIG9mIGF0IGxlYXN0ICQyNTAgYmlsbGlvbi7igJ0gVGhlICQzNDAgbWlsbGlvbiBmaW5lIHdpbGwgZ28gdG8gTGF3c2t54oCZcyBhZ2VuY3ksIE5ldyBZb3Jr4oCZcyBEZXBhcnRtZW50IG9mIEZpbmFuY2lhbCBTZXJ2aWNlcywgb3IgREZTLCBhbmQgdGhlIHN0YXRlLiBBcyBwYXJ0IG9mIHRoZSBzZXR0bGVtZW50LCBOZXcgWW9yayBzYWlkIHRoZSBiYW5rIGFncmVlZCB0byBpbnN0YWxsIGFuIGluZGVwZW5kZW50IG9uLXNpdGUgbW9uaXRvciBmb3IgYXQgbGVhc3QgdHdvIHllYXJzIHdobyB3aWxsIHJlcG9ydCBkaXJlY3RseSB0byByZWd1bGF0b3JzLiBFeGFtaW5lcnMgZnJvbSB0aGUgREZTIHdpbGwgYWxzbyBiZSBwbGFjZWQgYXQgdGhlIGJhbmsuIEluZGl2aWR1YWwgUmVndWxhdG9yIFRoZSBhY2NvcmQgbWF5IGJlIHRoZSBsYXJnZXN0IGV2ZXIgcGFpZCB0byBhbiBpbmRpdmlkdWFsIHJlZ3VsYXRvciBhcyBwYXJ0IG9mIGEgbW9uZXkgbGF1bmRlcmluZyBhY2NvcmQuIEluIEp1bmUsIElORyBCYW5rIE5WIGFncmVlZCB0byBwYXkgJDYxOSBtaWxsaW9uIHRvIHNldHRsZSBzaW1pbGFyIGFsbGVnYXRpb25zLiBUaGF0IHN1bSB3YXMgc3BsaXQgZXZlbmx5IGJldHdlZW4gYSAkMzA5LjUgbWlsbGlvbiBwYXltZW50IHRvIHRoZSBmZWRlcmFsIGdvdmVybm1lbnQgYW5kIGFuIGVxdWFsIHN1bSB0byB0aGUgTWFuaGF0dGFuIERpc3RyaWN0IEF0dG9ybmV5LiBBIHBlcnNvbiBmYW1pbGlhciB3aXRoIHRoZSBOZXcgWW9yayBwcm9iZSBvZiBTdGFuZGFyZCBDaGFydGVyZWQgc2FpZCB0aGF0IExhd3NreSBoYWQgc291Z2h0IGFzIG11Y2ggYXMgJDcwMCBtaWxsaW9uIHRvIHNldHRsZSBoaXMgaW52ZXN0aWdhdGlvbi4gU3RhbmRhcmQgQ2hhcnRlcmVkIHNhaWQgaW4gYSBzdGF0ZW1lbnQgeWVzdGVyZGF5IHRoYXQg4oCcYSBmb3JtYWwgYWdyZWVtZW50IGNvbnRhaW5pbmcgdGhlIGRldGFpbGVkIHRlcm1zIG9mIHRoZSBzZXR0bGVtZW50IGlzIGV4cGVjdGVkIHRvIGJlIGNvbmNsdWRlZCBzaG9ydGx5LuKAnSBJdCDigJxjb250aW51ZXMgdG8gZW5nYWdlIGNvbnN0cnVjdGl2ZWx5IHdpdGggdGhlIG90aGVyIHJlbGV2YW50IFUuUy4gYXV0aG9yaXRpZXMs4oCdIHRoZSBiYW5rIHNhaWQuIExvbmRvbi1iYXNlZCBTdGFuZGFyZCBDaGFydGVyZWQgZ2VuZXJhdGVzIGFsbW9zdCA5MCBwZXJjZW50IG9mIGl0cyBwcm9maXQgYW5kIHJldmVudWUgaW4gQXNpYSwgQWZyaWNhIGFuZCB0aGUgTWlkZGxlIEVhc3QuIFRoZSBiYW5r4oCZcyBzaGFyZXMgY2xpbWJlZCA0LjEgcGVyY2VudCB0byAxLDQyNi41MCBwZW5jZSBpbiBMb25kb24uIFRoZSBzZXR0bGVtZW50IGJyaW5ncyB0byBhbiBlbmQgYSB3ZWVrLWxvbmcgc2hvd2Rvd24gYmV0d2VlbiBMYXdza3ksIDQyLCBOZXcgWW9ya+KAmXMgdG9wIGJhbmtpbmcgcmVndWxhdG9yLCBhbmQgU3RhbmRhcmQgQ2hhcnRlcmVkIENoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyIFBldGVyIFNhbmRzLCA1MC4g4oCYUm9ndWUgQmFua+KAmSBMYXdza3nigJlzIG9yZGVyIGxhc3Qgd2VlayBjYXVnaHQgdGhlIGJhbmvigJlzIG1hbmFnZW1lbnQgdGVhbSBieSBzdXJwcmlzZS4gTGF3c2t5IGFsbGVnZWQgdGhhdCBTdGFuZGFyZCBDaGFydGVyZWQgd2FzIGEg4oCccm9ndWUgYmFua+KAnSB0aGF0IGhhZCBleGVjdXRlZCA2MCwwMDAgZG9sbGFyLWJhc2VkIHdpcmUgdHJhbnNhY3Rpb25zIGZvciBJcmFuaWFuIGNsaWVudHMgZnJvbSAyMDAxIHRvIDIwMDcuIFN0YW5kYXJkIENoYXJ0ZXJlZOKAmXMgYXBwYXJlbnQgZWZmb3J0IHRvIGNvbmNlYWwgdGhlIGlkZW50aXR5IG9mIGl0cyBJcmFuaWFuIGNvdW50ZXJwYXJ0aWVzIHZpb2xhdGVkIHRoZSB0ZXJtcyBvZiBhIDIwMDQgc2V0dGxlbWVudCBiZXR3ZWVuIGl0IGFuZCB0aGUgc3RhdGUgb2YgTmV3IFlvcmssIGluIHdoaWNoIHRoZSBVLksuIGJhbmsgcGxlZGdlZCDigJx0byBlbnN1cmUgY29tcGxpYW5jZSB3aXRoIGFsbCByZWNvcmQtIGtlZXBpbmcgYW5kIHJlcG9ydGluZyByZXF1aXJlbWVudHMs4oCdIGFjY29yZGluZyB0byB0aGUgb3JkZXIuIEV2ZW4gYmVmb3JlIDIwMDEsIHRoZSBvcmRlciBzdGF0ZWQsIHRoZSBiYW5r4oCZcyBnZW5lcmFsIGNvdW5zZWwg4oCcZW1icmFjZWQgYSBmcmFtZXdvcmsgZm9yIHJlZ3VsYXRvcnkgZXZhc2lvbuKAnSBieSBrZWVwaW5nIGl0cyBOZXcgWW9yayBicmFuY2ggaW4gdGhlIGRhcmsgYWJvdXQgSXJhbiB0cmFuc2FjdGlvbnMuIFRoZSBiYW5rIGFsbGVnZWRseSBhY2NvbXBsaXNoZWQgdGhpcyBnb2FsIGJ5IHN0cmlwcGluZyBvdXQgdGhlIG5hbWUgb2YgSXJhbmlhbiBjbGllbnRzIHNvIGFzIG5vdCB0byBzbG93IGRvd24gdHJhbnNmZXJzIHRoYXQgbWlnaHQgaGF2ZSB0byBiZSByZXZpZXdlZCBmb3IgY29tcGxpYW5jZSB3aXRoIFUuUy4gZWNvbm9taWMgc2FuY3Rpb25zLiBUaG9zZSByZXN0cmljdGlvbnMgYWxsb3dlZCBzb21lIHRyYW5zYWN0aW9ucyBidXQgbm90IG90aGVycyBhcyBsb25nIGFzIG5vbi1JcmFuaWFuIGJhbmtzIHdlcmUgaW52b2x2ZWQgb24gYm90aCBlbmRzLiBGZWRlcmFsIENvbnRyb2xzIEluIGFkZGl0aW9uIHRvIGV2YWRpbmcgZmVkZXJhbCBjb250cm9scywgU3RhbmRhcmQgQ2hhcnRlcmVkIGNvdmVyZWQgdXAgaXRzIHBsYW4gdG8gZ3JhYiBtYXJrZXQgc2hhcmUgaW4gdGhlIElyYW5pYW4gZnVuZHMgbWFya2V0IGJ5IGZhbHNpZnlpbmcgYnVzaW5lc3MgcmVjb3JkcywgbWFraW5nIGZhbHNlIHN0YXRlbWVudHMsIG1haW50YWluaW5nIGluYWNjdXJhdGUgYm9va3MsIG9ic3RydWN0aW5nIG92ZXJzaWdodCBhbmQgZmFpbGluZyB0byByZXBvcnQgbWlzY29uZHVjdCBwcm9tcHRseSwgYWNjb3JkaW5nIHRvIExhd3NreeKAmXMgb3JkZXIuIEZyb20gMjAwNCB0aHJvdWdoIDIwMDcsIFN0YW5kYXJkIENoYXJ0ZXJlZCB3YXMgc3ViamVjdCB0byBmb3JtYWwgYWN0aW9uIG92ZXIgb3RoZXIgcmVndWxhdG9yeSBjb21wbGlhbmNlIGZhaWx1cmVzIHJlbGF0ZWQgdG8gdGhlIEJhbmsgU2VjcmVjeSBBY3QsIGFudGktbW9uZXkgbGF1bmRlcmluZyBwb2xpY2llcyBhbmQgcHJvY2VkdXJlcyBhbmQgcmVndWxhdGlvbnMgb2YgdGhlIFUuUy4gT2ZmaWNlIG9mIEZvcmVpZ24gQXNzZXRzIENvbnRyb2wsIHRoZSBtYWluIG92ZXJzZWVyIG9mIElyYW4gdHJhbnNhY3Rpb25zLiBJbiBhIDIwMDQgYWdyZWVtZW50IHdpdGggcmVndWxhdG9ycywgdGhlIGJhbmsgcHJvbWlzZWQgdG8gbW9uaXRvciBhbmQgaW1wcm92ZSBtb25leS1sYXVuZGVyaW5nIGNvbnRyb2xzLiBUaGUgcmVzdHJpY3Rpb25zIG9mIHRoZSBhZ3JlZW1lbnQgd2VyZSBsaWZ0ZWQgaW4gMjAwNyBiZWNhdXNlIHRoZSBiYW5rIHByb3ZpZGVkIGEg4oCcd2F0ZXJlZC1kb3du4oCdIHJlcG9ydCBvZiBjb21wbGlhbmNlLCBhY2NvcmRpbmcgdG8gTGF3c2t54oCZcyBvcmRlci4gQmFuayBzdGF0ZW1lbnRzIOKAnG1pc2xlZOKAnSB0aGUgZGVwYXJ0bWVudCBpbnRvIGxpZnRpbmcgdGhlIHJlc3RyaWN0aW9ucyBvZiB0aGUgMjAwNCBhZ3JlZW1lbnQsIHRoZSBvcmRlciBzdGF0ZWQuIFRoZSBvcmRlciBjaXRlZCBiYW5rIGUtbWFpbHMgYW5kIG90aGVyIGludGVybmFsIGRvY3VtZW50cyB0byBzdXBwb3J0IGl0cyBhY2N1c2F0aW9ucy4gQmFuayBPYnNjZW5pdHkgSW4gb25lIHN1Y2ggbWVzc2FnZSwgdGhlIGhlYWQgb2YgU3RhbmRhcmQgQ2hhcnRlcmVk4oCZcyBVLlMuIHVuaXQgd2FybmVkIGhpcyBzdXBlcmlvcnMgaW4gTG9uZG9uIGluIDIwMDYgdGhhdCB0aGUgYmFua+KAmXMgYWN0aW9ucyBjb3VsZCBleHBvc2UgaXQgdG8g4oCcY2F0YXN0cm9waGljIHJlcHV0YXRpb25hbCBkYW1hZ2Uu4oCdIEhlIHJlY2VpdmVkIGEgcmVwbHkgcmVmZXJyaW5nIHRvIFUuUy4gZW1wbG95ZWVzIHdpdGggYW4gb2JzY2VuaXR5LCBhY2NvcmRpbmcgdG8gTGF3c2t54oCZcyBvcmRlci4g4oCcV2hvIGFyZSB5b3UgdG8gdGVsbCB1cywgdGhlIHJlc3Qgb2YgdGhlIHdvcmxkLCB0aGF0IHdl4oCZcmUgbm90IGdvaW5nIHRvIGRlYWwgd2l0aCBJcmFuaWFucz/igJ0gYSBiYW5rIHN1cGVyaW9yIGluIExvbmRvbiBzYWlkLCBhY2NvcmRpbmcgdG8gdGhlIG9yZGVyLiBTdGFuZGFyZCBDaGFydGVyZWTigJlzIFNhbmRzIG1vdW50ZWQgYW4gYWdncmVzc2l2ZSBkZWZlbnNlIGFnYWluc3QgTGF3c2t5LCB0ZWxsaW5nIGludmVzdG9ycyBsYXN0IHdlZWsgdGhhdCBtb3JlIHRoYW4gOTkgcGVyY2VudCBvZiB0aGUgSXJhbmlhbiB0cmFuc2FjdGlvbnMgd2VyZSBpbiBjb21wbGlhbmNlIHdpdGggZXhpc3RpbmcgVS5TLiBsYXdzLiBMYXdza3nigJlzIG9yZGVyIGFuZ2VyZWQgVS5LLiBvZmZpY2lhbHMsIHdobyB2aWV3ZWQgaXQgYXMgYW4gYXR0YWNrIG9uIExvbmRvbuKAmXMgc3RhdHVzIGFzIGEgZmluYW5jaWFsIGNlbnRlci4gSW4gdGhlIFUuUy4sIHJlZ3VsYXRvcnMgaW5jbHVkaW5nIHRoZSBUcmVhc3VyeSBEZXBhcnRtZW50LCB0aGUgRmVkZXJhbCBSZXNlcnZlIGFuZCB0aGUgTWFuaGF0dGFuIERpc3RyaWN0IEF0dG9ybmV5IGNvbXBsYWluZWQgcHJpdmF0ZWx5IGluIHB1Ymxpc2hlZCByZXBvcnRzIHRoYXQgTGF3c2t54oCZcyBvcmRlciB3YXMgYSBwdWJsaWNpdHkgc3R1bnQgdGhhdCBkaXNydXB0ZWQgdGhlaXIgb3duIHByb2JlcyBvZiB0aGUgbWF0dGVyLiBVbmRlcmN1dHRpbmcgRW5mb3JjZW1lbnQg4oCcSSBjYW7igJl0IHRoaW5rIG9mIGFub3RoZXIgY2FzZSB3aGVyZSB0aGVyZSBoYXMgYmVlbiBzdWNoIHVuaWZvcm1pdHkgYW1vbmcgZmVkZXJhbCByZWd1bGF0b3JzIHVuZGVyY3V0dGluZyBhbiBlbmZvcmNlbWVudCBjYXNlLOKAnSBzYWlkIE5laWwgQmFyb2Zza3ksIGEgZm9ybWVyIGZlZGVyYWwgcHJvc2VjdXRvciB3aG8gb3ZlcnNhdyB0aGUgVS5TLiBUcm91YmxlZCBBc3NldCBSZWxpZWYgUHJvZ3JhbSBhbmQgd3JvdGUg4oCcQmFpbG91dCzigJ0gYSBib29rIHRoYXQgY3JpdGljaXplcyB3aGF0IGhlIGNhbGxzIHRoZSBVLlMuIGdvdmVybm1lbnTigJlzIGxheCByZWd1bGF0aW9uIG9mIFdhbGwgU3RyZWV0IGJhbmtzLiBCeSB0aGUgZW5kIG9mIHRoZSB3ZWVrLCBTYW5kcyBoYWQgc3RvcHBlZCBkZWZlbmRpbmcgdGhlIGJhbmsgaW4gcHVibGljLiBJbnN0ZWFkLCBpdHMgbGF3eWVycyBhdCBTdWxsaXZhbiAmIENyb213ZWxsIExMUCBoYWQgYmVndW4gbmVnb3RpYXRpbmcgYSBzZXR0bGVtZW50IHdpdGggTGF3c2t5LCBhY2NvcmRpbmcgdG8gdHdvIHBlb3BsZSB3aXRoIGtub3dsZWRnZSBvZiB0aGUgbWF0dGVyLiBTYW5kcyBhcnJpdmVkIGluIE5ldyBZb3JrIHRoaXMgd2VlayB0byBvdmVyc2VlIHRoZSBwcm9jZXNzLiBIZSBzaWduZWQgb2ZmIG9uIHRoZSBmaW5hbCBhZ3JlZW1lbnQganVzdCBhZnRlciBtaWRkYXkgeWVzdGVyZGF5LCBzYWlkIG9uZSBvZiB0aGUgcGVvcGxlLCBhbGwgb2Ygd2hvbSBkZWNsaW5lZCB0byBiZSBpZGVudGlmaWVkIGJlY2F1c2UgdGhleSB3ZXJlbuKAmXQgYXV0aG9yaXplZCB0byBzcGVhayBwdWJsaWNseS4gVGhlIGFncmVlbWVudCBiZXR3ZWVuIExhd3NreSBhbmQgdGhlIGJhbmssIHdoaWxlIHJlZmVycmluZyB0byDigJx0cmFuc2FjdGlvbnMgb2YgYXQgbGVhc3QgJDI1MCBiaWxsaW9uLOKAnSBkb2VzbuKAmXQgYWRkcmVzcyB0aGUgcXVlc3Rpb24gb2Ygd2hldGhlciB0aGV5IHdlcmUgaW4gY29tcGxpYW5jZSB3aXRoIFUuUy4gbGF3LiBJbiBhIG1lbW8gdG8gZW1wbG95ZWVzIHRvZGF5IG9idGFpbmVkIGJ5IEJsb29tYmVyZyBOZXdzLCBTYW5kcyBzYWlkIHRoZSBiYW5r4oCZcyBlYXJsaWVyIHJldmlldyBpZGVudGlmaWVkIG1pc3Rha2VzLCBmb3Igd2hpY2ggaXQgYXBvbG9naXplZC4g4oCcV2UgaGF2ZSBzb3VnaHQgdG8gYWN0IGluIHRoZSBiZXN0IGludGVyZXN0cyBvZiBvdXIgc2hhcmVob2xkZXJzLCBjbGllbnRzLCBjdXN0b21lcnMgYW5kIHN0YWZmLOKAnSB0aGUgbWVtbyBzdGF0ZWQuIE90aGVyIFNob2UgU29tZSBvYnNlcnZlcnMgc2FpZCB0aGUgYmFua+KAmXMgaW52ZXN0b3JzIGFyZSB3YWl0aW5nIGZvciB0aGUgb3RoZXIgc2hvZSB0byBkcm9wLiDigJxJbnZlc3RvcnMgd2lsbCBiZSBwbGVhc2VkIHRoZXnigJl2ZSBzZXR0bGVkLCBidXQgaXTigJlzIG5vdCBrbm93biBpZiB0aGV5IGhhdmUgdG8gcGF5IG1vcmUgdG8gdGhlIG90aGVyIHJlZ3VsYXRvcnMs4oCdIHNhaWQgQ2hyaXN0b3BoZXIgV2hlZWxlciBvZiBNZWRpb2JhbmNhIFNwQSBpbiBMb25kb24uIFRoZSBEZXBhcnRtZW50IG9mIEZpbmFuY2lhbCBTZXJ2aWNlcyB3YXMgY3JlYXRlZCBpbiAyMDExIHdoZW4gTmV3IFlvcmvigJlzIEJhbmtpbmcgRGVwYXJ0bWVudCBhbmQgSW5zdXJhbmNlIERlcGFydG1lbnQgd2VyZSBhYm9saXNoZWQuIFRoZSBhZ2VuY3kgaGFzIHRoZSBwb3dlciB0byBpc3N1ZSByZWd1bGF0aW9ucywgaW52ZXN0aWdhdGUgYW5kIGZpbmUgZmluYW5jaWFsIHNlcnZpY2VzIGNvbXBhbmllcy4gSXQgbWF5IGFsc28gcHJvYmUgYWxsZWdlZCBjcmltaW5hbCBhY3Rpdml0eSBhbmQgcmVmZXIgaXRzIGZpbmRpbmdzIHRvIE5ldyBZb3Jr4oCZcyBhdHRvcm5leSBnZW5lcmFsIGZvciBwcm9zZWN1dGlvbi4gSXRzIGp1cmlzZGljdGlvbiBvdmVyIFdhbGwgU3RyZWV0LCBob3dldmVyLCBwdXRzIGl0IGluIHRoZSBzYW1lIHJlZ3VsYXRvcnkgd29ybGQgYXMgbWFueSBmZWRlcmFsIGFnZW5jaWVzLiDigJxUaGUgRmVkZXJhbCBSZXNlcnZlIGNvbnRpbnVlcyB0byB3b3JrIHdpdGggdGhlIG90aGVyIGFnZW5jaWVzIG9uIGEgY29tcHJlaGVuc2l2ZSByZXNvbHV0aW9uLOKAnSBzYWlkIEJhcmJhcmEgSGFnZW5iYXVnaCwgYSBzcG9rZXN3b21hbiBmb3IgdGhlIGFnZW5jeSwgaW4gcmVzcG9uc2UgdG8gbmV3cyBvZiB0aGUgc2V0dGxlbWVudC4g4oCYV29yayBDbG9zZWx54oCZIERlYW4gQm95ZCwgYSBzcG9rZXNtYW4gZm9yIHRoZSBKdXN0aWNlIERlcGFydG1lbnQsIHNhaWQgdGhlIGFnZW5jeSDigJxjb250aW51ZXMgdG8gd29yayBjbG9zZWx5IHdpdGggb3VyIHJlZ3VsYXRvcnkgYW5kIG90aGVyIHBhcnRuZXJzIHRvIGRldGVybWluZSB3aGF0IGFjdGlvbnMgbWlnaHQgYmUgYXBwcm9wcmlhdGUgaW4gdGhpcyBtYXR0ZXIu4oCdIEFuZCB0aGUgVHJlYXN1cnkgRGVwYXJ0bWVudCBzYWlkIGluIGEgc3RhdGVtZW50IHRoYXQgaXQgd2lsbCB3b3JrIOKAnHdpdGggb3VyIHJlZ3VsYXRvcnkgYW5kIGxhdyBlbmZvcmNlbWVudCBwYXJ0bmVycyB0byBob2xkIFN0YW5kYXJkIENoYXJ0ZXJlZCBhY2NvdW50YWJsZSBmb3IgYW55IHNhbmN0aW9uYWJsZSBhY3Rpdml0eSB0aGF0IG9jY3VycmVkLuKAnSBFcmluIER1Z2dhbiwgYSBzcG9rZXN3b21hbiBmb3IgTWFuaGF0dGFuIERpc3RyaWN0IEF0dG9ybmV5IEN5cnVzIFZhbmNlLCBzYWlkIOKAnGJhbmtzIHRoYXQgdmlvbGF0ZSBpbnRlcm5hdGlvbmFsIHNhbmN0aW9ucyBhcmUgbm90IGp1c3QgYnJlYWtpbmcgdGhlIGxhdywgdGhleSBhcmUgZW5hYmxpbmcgdGhlIGZpbmFuY2luZyBvZiB0ZXJyb3Jpc3QgcmVnaW1lcyBhbmQgdW5kZXJtaW5pbmcgb3VyIGNvbGxlY3RpdmUgc2FmZXR5IGFuZCBzZWN1cml0eS7igJ0gU2hlIGFkZGVkIHRoYXQgdGhlIG9mZmljZSBsb29rcyDigJxmb3J3YXJkIHRvIGNvbnRpbnVpbmcgdG8gd29yayB3aXRoIG91ciBwYXJ0bmVycyBvbiB0aGVzZSBjYXNlcy7igJ0gSW5zdXJhbmNlIENvc3RzIFRoZSBjb3N0IG9mIGluc3VyaW5nIFN0YW5kYXJkIENoYXJ0ZXJlZCBCYW5rIGRlYnQgZnJvbSBub24tIHBheW1lbnQgZGVjbGluZWQgMTIgYmFzaXMgcG9pbnQgdG8gMTMyLjEgYmFzaXMgcG9pbnRzIGF0IDk6MTEgYS5tLiBpbiBOZXcgWW9yaywgYWNjb3JkaW5nIHRvIGRhdGEgcHJvdmlkZXIgQ01BLCB3aGljaCBpcyBvd25lZCBieSBNY0dyYXctSGlsbCBDb3MuIGFuZCBjb21waWxlcyBwcmljZXMgcXVvdGVkIGJ5IGRlYWxlcnMgaW4gdGhlIHByaXZhdGVseSBuZWdvdGlhdGVkIG1hcmtldC4gVGhlIGNvbnRyYWN0cyBoYXZlIHJhbmdlZCBiZXR3ZWVuIDEyNSBhbmQgMjIwIHRoaXMgeWVhciwgYWNjb3JkaW5nIHRvIHRoZSBkYXRhLiBTd2FwcyBwYXkgdGhlIGJ1eWVyIGZhY2UgdmFsdWUgaW4gZXhjaGFuZ2UgZm9yIHRoZSB1bmRlcmx5aW5nIHNlY3VyaXRpZXMgb3IgdGhlIGNhc2ggZXF1aXZhbGVudCBzaG91bGQgYSBib3Jyb3dlciBmYWlsIHRvIGFkaGVyZSB0byBpdHMgZGVidCBhZ3JlZW1lbnRzLiBBIGJhc2lzIHBvaW50IGVxdWFscyAxLDAwMCBldXJvcyBhIHllYXIgb24gYSBjb250cmFjdCBwcm90ZWN0aW5nIDEwIG1pbGxpb24gZXVyb3MgKCQxMi4zIG1pbGxpb24pIG9mIGRlYnQgZnJvbSBkZWZhdWx0IGZvciBmaXZlIHllYXJzLiBUaGUgY29zdCBvZiBpbnN1cmluZyBTdGFuZGFyZCBDaGFydGVyZWQgQmFuayBkZWJ0IGZyb20gbm9uLSBwYXltZW50IGRlY2xpbmVkIDEgYmFzaXMgcG9pbnQgdG8gMTQ0IGJhc2lzIHBvaW50cyB5ZXN0ZXJkYXksIGFjY29yZGluZyB0byBkYXRhIHByb3ZpZGVyIENNQS4gVGhlIGNvbnRyYWN0cyBoYXZlIHJhbmdlZCBiZXR3ZWVuIDEyMi43IGFuZCAxOTUgdGhpcyB5ZWFyLCBhY2NvcmRpbmcgdG8gQ01BIGRhdGEuIFN3YXBzIHBheSB0aGUgYnV5ZXIgZmFjZSB2YWx1ZSBpbiBleGNoYW5nZSBmb3IgdGhlIHVuZGVybHlpbmcgc2VjdXJpdGllcyBvciB0aGUgY2FzaCBlcXVpdmFsZW50IHNob3VsZCBhIGJvcnJvd2VyIGZhaWwgdG8gYWRoZXJlIHRvIGl0cyBkZWJ0IGFncmVlbWVudHMuIEEgYmFzaXMgcG9pbnQgb24gYSBjcmVkaXQtZGVmYXVsdCBzd2FwIHByb3RlY3RpbmcgMTAgbWlsbGlvbiBldXJvcyAoJDEyLjMgbWlsbGlvbikgb2YgZGVidCBmcm9tIGRlZmF1bHQgZm9yIGZpdmUgeWVhcnMgaXMgZXF1aXZhbGVudCB0byAxLDAwMCBldXJvcyBhIHllYXIuIOKAmEFjdGluZyBRdWlja2x54oCZIOKAnEl04oCZcyBwb3NzaWJsZSB0aGF0IGJ5IGFjdGluZyBxdWlja2x5IGFuZCB0cnlpbmcgdG8gcHV0IHRoaXMgYmVoaW5kIHRoZW0sIHRoZSBDRU8gY291bGQgcmV0YWluIGhpcyBwb3NpdGlvbizigJ0gc2FpZCBEYXZpZCBLYXNzLCBhIHByb2Zlc3NvciBhdCB0aGUgVW5pdmVyc2l0eSBvZiBNYXJ5bGFuZOKAmXMgUm9iZXJ0IEguIFNtaXRoIFNjaG9vbCBvZiBCdXNpbmVzcywgb2YgU3RhbmRhcmQgQ2hhcnRlcmVkIENFTyBTYW5kcy4g4oCcSXQgcHV0cyB0aGUgaXNzdWUgYmVoaW5kIHRoZW0gZm9yIHRvZGF5IGFuZCBnZXRzIHRoZWlyIG5hbWUgb2ZmIG9mIHRoZSBmcm9udCBwYWdlLCBidXQgSeKAmW0gc3VyZSB0aGV54oCZbGwgYmUgdW5kZXIgZ3JlYXRlciBzY3J1dGlueSBieSByZWd1bGF0b3JzIGZvciBhIHdoaWxlLuKAnSBBbnRob255IFNhYmlubywgYSBwcm9mZXNzb3Igb2YgbGF3IGF0IHRoZSBQZXRlciBKLiBUb2JpbiBDb2xsZWdlIG9mIEJ1c2luZXNzIGF0IFN0LiBKb2hu4oCZcyBVbml2ZXJzaXR5IGluIE5ldyBZb3JrLCBzYWlkIHRoZSBkZWNpc2lvbiB0byBzZXR0bGUgd2FzIOKAnGEgYnVzaW5lc3MgZGVjaXNpb24gLS0gdGhleSB3YW50IHRvIHB1dCB0aGlzIGluIHRoZSByZWFydmlldyBtaXJyb3Iu4oCdIOKAnFRoZSBzaG9lIHRoYXQgSSBhbSB3YWl0aW5nIHRvIHNlZSBkcm9wIGlzIHdoYXQgd2lsbCB0aGUgZmVkcyBkbyBuZXh0P+KAnSBTYWJpbm8gc2FpZC4gTGF3c2t54oCZcyBhY3Rpb25zIOKAnG1pZ2h0IHB1c2ggdGhlIGZlZGVyYWwgYXV0aG9yaXRpZXMgdG8gZ2l2ZSBTdGFuZGFyZCBDaGFydGVyZWQgbW9yZSB0aGFuIGEgcGVyZnVuY3Rvcnkgc2xhcCBvbiB0aGUgd3Jpc3Qu4oCdIEJleW9uZCB0aGUgU3RhbmRhcmQgQ2hhcnRlcmVkIGNhc2UsIExhd3NreeKAmXMgZ28taXQtYWxvbmUgZ2FtYml0IG1heSBjb21wbGljYXRlIGZ1dHVyZSBiYW5rIGludmVzdGlnYXRpb25zIGFuZCBzZXR0bGVtZW50cywgc2FpZCBvbmUgZm9ybWVyIHByb3NlY3V0b3IuIOKAnEJlbiBMYXdza3kgaGlqYWNrZWQgdGhlIGZlZHPigJkgY2FzZSzigJ0gc2FpZCBSaXRhIEdsYXZpbiwgbm93IGFuIGF0dG9ybmV5IGF0IFNld2FyZCAmIEtpc3NlbCBMTFAuIOKAnFRoYXQga2luZCBvZiBtb3ZlIGNhdXNlcyBhIG1ham9yIGhlYWRhY2hlIGZvciB0aGUgSnVzdGljZSBEZXBhcnRtZW50LiBCZWZvcmUsIHRoZXkgbWF5IGhhdmUgYmVlbiBtb3JlIHdpbGxpbmcgdG8gc2hhcmUgd2l0aCBhIHN0YXRlIHJlZ3VsYXRvci4gVGhleSBtYXkgbm90IGJlIHNvIHdpbGxpbmcgaW4gdGhlIGZ1dHVyZS7igJ0=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATkopwyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDY4N2ZlNGU2YWZhMDEzYzY=</field><field name="symbol" class="java.lang.String">rO0ABXQABFdJUkU=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATktzWiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA8DMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA9Ao9cKPXD</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA8DMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA9AAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA82ZmZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAADhZA==</field><field name="id" class="java.lang.String">rO0ABXQAEDA4YWEwYWJmZDBmYmEzODA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mH/AAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIxNDky</field><field name="title" class="java.lang.String">rO0ABXQAOk5ldmFkYSBSZWd1bGF0b3JzIFNhaWQgdG8gQmUgSW52ZXN0aWdhdGluZyBMYXMgVmVnYXMgU2FuZHM=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATkeWlSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDY4YWYwZWIxNTUxZWM4N2Q=</field><field name="symbol" class="java.lang.String">rO0ABXQABkxDUi5ERQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATkjgLCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA/KPXCj1wp</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA/KPXCj1wp</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA/KPXCj1wp</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA/KPXCj1wp</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA9HrhR64Uf</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDI0MjliZGVmOTRiMjc4Yzc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mET5AAAA==</field></document></documents><date>2015-05-07T06:39:24-0500</date></cacheEntry>
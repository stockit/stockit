<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0ErZGcmVuY2ggYmFuayBCTlAgUGFyaWJhcyB3aGljaCBpcyBmYWNpbmcgYSBwb3RlbnRpYWwgMTAgYmlsbGlvbiBmaW5lIGZvciBicmVha2luZyBVUyBzYW5jdGlvbnMgaGFzIGhhbmRlZCBvdmVyIHRvIFVTIGludmVzdGlnYXRvcnMgZmlsZXMgY292ZXJpbmcgbWFueSB5ZWFycyBvZiBpdHMgZGVhbGluZ3Mgd2l0aCBsZWFkaW5nIGNvbXBhbmllcyBpbiB0aGUgb2lsIG1hcmtldCBBIGRvemVuIGZvcm1lciBCTlAgaW5zaWRlcnMgYW5kIHNlbmlvciB0cmFkaW5nIGV4ZWN1dGl2ZXMgc2FpZCBpdCBoYWQgaW4gcmVjZW50IG1vbnRocyBoYW5kZWQgb3ZlciBhIGhvc3Qgb2YgZG9jdW1lbnRzIHJlbGF0aW5nIHRvIGl0cyBvaWwgZGVhbGluZ3Mgd2l0aCBTdWRhbiBhbmQgSXJhbiBpbmNsdWRpbmcgZGV0YWlscyBvbiB0cmFkaW5nIGhvdXNlcyBhbmQgb2lsIG1ham9ycyBpbnZvbHZlbWVudCBpbiB0aGUgdHJhZGVzIEJlZm9yZSBub3cgYWxsIHRoYXQgaGFkIGJlZW4ga25vd24gYWJvdXQgdGhlIHByb2JlIHdhcyB0aGF0IFVTIGF1dGhvcml0aWVzIHdlcmUgaW52ZXN0aWdhdGluZyB3aGV0aGVyIEJOUCBldmFkZWQgc2FuY3Rpb25zIHJlbGF0aW5nIHRvIFN1ZGFuIElyYW4gYW5kIEN1YmEgYW5kIGlmIGl0IHN0cmlwcGVkIGlkZW50aWZ5aW5nIGluZm9ybWF0aW9uIGZyb20gcmVsYXRlZCBkb2xsYXIgd2lyZSB0cmFuc2ZlcnMgdG8gYmUgY2xlYXJlZCBieSB0aGUgVVMgZmluYW5jaWFsIHN5c3RlbSBCTlAgZGVjbGluZWQgdG8gY29tbWVudCBJdCBoYXMgc2FpZCBwdWJsaWNseSBvbmx5IHRoYXQgaXQgaXMgaW4gZGlzY3Vzc2lvbnMgd2l0aCBVUyBhdXRob3JpdGllcyBhYm91dCBjZXJ0YWluIFVTIGRvbGxhciBwYXltZW50cyBpbnZvbHZpbmcgY291bnRyaWVzIHBlcnNvbnMgYW5kIGVudGl0aWVzIHRoYXQgY291bGQgaGF2ZSBiZWVuIHN1YmplY3QgdG8gZWNvbm9taWMgc2FuY3Rpb25zIFRoZSBzb3VyY2VzIHRvbGQgUmV1dGVycyB0aGF0IHRoZSBwcm9iZSBoYXMgc28gZmFyIG1vc3RseSBmb2N1c2VkIG9uIHRoZSBiYW5rcyBkb2xsYXIgZmluYW5jaW5nIG9mIG9pbCB0cmFkZSBvdXQgb2YgU3VkYW4gYSBtdWNoIHNtYWxsZXIgcHJvZHVjZXIgdGhhbiBJcmFuIGJldHdlZW4gMjAwMiBhbmQgMjAwOSBsb25nIGFmdGVyIFdhc2hpbmd0b24gaW1wb3NlZCBzYW5jdGlvbnMgYWdhaW5zdCB0aGUgZ292ZXJubWVudCBpbiBLaGFydG91bSBpbiAxOTk3IG92ZXIgaHVtYW4gcmlnaHRzIHZpb2xhdGlvbnMgSXQgZXh0ZW5kZWQgdGhlIHNhbmN0aW9ucyBpbiAyMDA3IFRoZXkgc2FpZCBCTlAgcHJvdmlkZWQgdGhlIGxpb25zIHNoYXJlIG9mIHRyYWRlIGZpbmFuY2luZyB0byBDaGluZXNlIGNvbXBhbmllcyBpbmNsdWRpbmcgU2lub3BlYyBhbmQgQ05QQyB3aGljaCB3ZXJlIHRoZSBtYWluIGltcG9ydGVycyBvZiBTdWRhbmVzZSBjcnVkZSBkdXJpbmcgdGhlIHBlcmlvZCBUaGUgQ2hpbmVzZSBjb21wYW5pZXMgZGVjbGluZWQgdG8gY29tbWVudCBTdWRhbnMgb2lsIHByb2R1Y3Rpb24gcm9zZSBmcm9tIGFyb3VuZCAyMDAwMDAgYmFycmVscyBwZXIgZGF5IGluIDIwMDAgdG8gYSBwZWFrIG9mIGFsbW9zdCA1MDAwMDAgaW4gMjAxMCBhY2NvcmRpbmcgdG8gVVMgRW5lcmd5IEluZm9ybWF0aW9uIEFkbWluaXN0cmF0aW9uIGRhdGEgQWx0aG91Z2ggQ2hpbmEgd2FzIGFuZCByZW1haW5zIHRoZSBtYWluIGltcG9ydGVyIG9mIGNydWRlIGZyb20gU3VkYW4gQk5QIGFsc28gcHJvdmlkZWQgdHJhZGUgZmluYW5jZSB0byBtYWpvciBnbG9iYWwgdHJhZGluZyBob3VzZXMgc3VjaCBhcyBUcmFmaWd1cmEgYW5kIFZpdG9sIHdoaWNoIHdlcmUgYWxzbyBpbnZvbHZlZCBpbiB0cmFkaW5nIFN1ZGFuZXNlIG9pbCBhdCB0aGUgdGltZSBUaGUgdHJhZGluZyBob3VzZXMgZGVjbGluZWQgdG8gY29tbWVudCBTZXZlcmFsIG9mIHRoZSBzb3VyY2VzIHNhaWQgdGhleSBiZWxpZXZlZCB0aGUgZmlsZXMgZGlkIG5vdCBjb250YWluIGNvbXByb21pc2luZyBpbmZvcm1hdGlvbiBhZ2FpbnN0IHRoZSB0cmFkaW5nIGhvdXNlcyBhbmQgb2lsIGNvbXBhbmllcyBJdCB3YXMgbm90IGNsZWFyIGlmIEJOUCBwcm92aWRlZCB0aGUgbWF0ZXJpYWxzIHZvbHVudGFyaWx5IFRoZSBVUyBEZXBhcnRtZW50IG9mIEp1c3RpY2UgYW5kIHRoZSBNYW5oYXR0YW4gRGlzdHJpY3QgQXR0b3JuZXkgZGVjbGluZWQgdG8gY29tbWVudCBCTlAgaGFzIGdpdmVuIGFsbCBpdHMgZmlsZXMgdG8gdGhlIFVTIGF1dGhvcml0aWVzIFRoZSBmdWxsIE1vbnR5IGEgZm9ybWVyIEJOUCBQYXJpYmFzIGluc2lkZXIgc2FpZCBUaGUgaW5mb3JtYXRpb24gdGhhdCBpdCBoYXMgcHJvdmlkZWQgY2VydGFpbmx5IGluY2x1ZGVzIGFsbCBjb3VudGVycGFydGllcyBhIHNlbmlvciB0cmFkaW5nIHNvdXJjZSBzYWlkIEFjY29yZGluZyB0byBwZW9wbGUgZmFtaWxpYXIgd2l0aCB0aGUgbWF0dGVyIFVTIGF1dGhvcml0aWVzIGF0IG9uZSBwb2ludCBzdWdnZXN0ZWQgdGhhdCBCTlAgcGF5IGEgcGVuYWx0eSBhcyBoaWdoIGFzIDE2IGJpbGxpb24gdGhvdWdoIG1vcmUgcmVjZW50bHkgdGhleSBoYXZlIGJlZW4gZGlzY3Vzc2luZyAxMCBiaWxsaW9uIHdoaWNoIHdvdWxkIHN0aWxsIGFsbW9zdCB3aXBlIG91dCBCTlBzIGVudGlyZSAyMDEzIHByZXRheCBpbmNvbWUgRnJhbmNlcyBmaW5hbmNlIG1pbmlzdGVyIHNhaWQgb24gU3VuZGF5IHRoYXQgdGFsa3MgYWJvdXQgdGhlIGZpbmUgYmV0d2VlbiB0aGUgYmFuayBhbmQgVVMgYXV0aG9yaXRpZXMgaGFkIHByb2dyZXNzZWQgdG93YXJkIGEgbW9yZSBlcXVpdGFibGUgbGV2ZWwgVGhlIGJhbmsgYWxzbyBmYWNlcyB0aGUgcmlzayBvZiBiZWluZyB0ZW1wb3JhcmlseSBibG9ja2VkIGZyb20gY2xlYXJpbmcgVVMgZG9sbGFyIHRyYW5zYWN0aW9ucwoKMjAwNyBIQUxUCgpCTlAgYW5kIG90aGVyIG5vblVTbGlzdGVkIGJhbmtzIGNvbnRpbnVlZCB0byBmaW5hbmNlIG9pbCB0cmFkZXMgaW4gVVMgZG9sbGFycyBvdXQgb2YgU3VkYW4gZm9sbG93aW5nIHRoZSBpbXBvc2l0aW9uIG9mIFVTIHNhbmN0aW9ucyBpbiAxOTk3IGluIHRoZSBiZWxpZWYgdGhleSB3ZXJlIG5vdCB2aW9sYXRpbmcgdGhvc2UgcmVzdHJpY3Rpb25zIEZldyBwZW9wbGUgcmVhbGx5IGJlbGlldmVkIHRoYXQgdGhlIG1lcmUgZmFjdCB0aGF0IHlvdSB3ZXJlIHRvdWNoaW5nIGEgVVMgZG9sbGFyIHdoZW4geW91IGFyZSBub3QgYSBVUyBiYW5rIHdoZW4geW91IGFyZSBub3QgZG9pbmcgaXQgb3V0IG9mIHRoZSBVUyB3YXMgcmVhbGx5IGJyZWFjaGluZyBVUyBsYXcgYSBmb3JtZXIgc2VuaW9yIEJOUCBlbXBsb3llZSBpbnZvbHZlZCBpbiB0aGUgZmluYW5jaW5nIHNhaWQgQk5QIGZpbmFuY2VkIGFyb3VuZCAzMCBwZXJjZW50IG9mIG9pbCBleHBvcnRzIGZyb20gU3VkYW4gYnV0IGl0IGhhbHRlZCB0cmFkZSB3aXRoIFN1ZGFuIGluIEp1bHkgMjAwNyBhIG1vbnRoIGFmdGVyIHRoZSBVUyBpbXBvc2VkIG5ldyBzYW5jdGlvbnMgYW5kIHR3byBtb250aHMgYWZ0ZXIgTmljb2xhcyBTYXJrb3p5IHdhcyBzd29ybiBpbiBhcyBGcmVuY2ggcHJlc2lkZW50IHdpdGggYSBwcm9taXNlIHRvIGltcHJvdmUgdGllcyB3aXRoIFdhc2hpbmd0b24gdGhlIGZvcm1lciBzZW5pb3IgQk5QIHNvdXJjZSBzYWlkIENoaW5hcyBuYXRpb25hbCBvaWwgY29tcGFuaWVzIHdoaWNoIGJ1eSB1cCBtb3N0IG9mIHRoZSBoZWF2eWdyYWRlIG9pbCBwcm9kdWNlZCBpbiBTdWRhbiB0byBwcm9jZXNzIGluIHJlZmluZXJpZXMgd2VyZSBlbnJhZ2VkIGJ5IHRoZSBkZWNpc2lvbiBhY2NvcmRpbmcgdG8gb25lIGZvcm1lciBleGVjdXRpdmUgVHJhZGluZyBlbnRpdGllcyB3ZXJlIHRoZW4gc2V0IHVwIGluIEhvbmcgS29uZyBTaW5nYXBvcmUgYW5kIFN3aXR6ZXJsYW5kIGluIG9yZGVyIHRvIGNvbnRpbnVlIHRoZSBvaWwgdHJhZGUgb3V0IG9mIFN1ZGFuIHNldmVyYWwgc291cmNlcyBzYWlkIEl0IHdhcyBub3QgY2xlYXIgd2hldGhlciBzb21lIG9mIHRob3NlIGVudGl0aWVzIHdlcmUgZmluYW5jZWQgYnkgQk5QIGFuIGlzc3VlIGJlaW5nIGludmVzdGlnYXRlZCBieSB0aGUgRG9KIGFjY29yZGluZyB0byB0aGUgc291cmNlcyBJdCB3YXMgdGhlIHdvcmxkcyB0b3AgZmluYW5jaWVyIG9mIGNvbW1vZGl0eSB0cmFkaW5nIHRocm91Z2hvdXQgdGhlIDE5OTBzIGFuZCAyMDAwcyBidXQgaGFzIGRyYXN0aWNhbGx5IHJlZHVjZWQgc3RhZmZpbmcgaW4gaXRzIEdlbmV2YSBhbmQgUGFyaXMgb2ZmaWNlcyBpbiB0aGUgcGFzdCB0d28geWVhcnMgYXMgaXQgY3V0IHNvbWUgb2YgaXRzIHJpc2tpZXIgYnVzaW5lc3MgYW5kIGFuYWx5emVkIHRoZSBpbXBsaWNhdGlvbnMgb2YgdGhlIG9uZ29pbmcgVVMgaW52ZXN0aWdhdGlvbiBJZiB0aGF0IGhpc3RvcnkgbGVmdCBpdCBleHBvc2VkIGluIFN1ZGFuIGl0cyBidXNpbmVzcyBpbiBJcmFuIE9QRUNzIHNlY29uZGxhcmdlc3Qgb2lsIHByb2R1Y2VyIGFmdGVyIFNhdWRpIEFyYWJpYSBjb3VsZCBoYXZlIHdpZGVyIGltcGxpY2F0aW9ucyBhcyB0aGUgc2NhbGUgb2YgaXRzIG9wZXJhdGlvbnMgYW5kIHRoZSBudW1iZXIgb2YgcGFydGllcyBpbnZvbHZlZCBkd2FyZiB0aG9zZSBpbiBTdWRhbiBJcmFuIHdhcyB0aGUgdGFyZ2V0IG9mIGEgVVMgZW1iYXJnbyBhZnRlciB0aGUgMTk3OSBJc2xhbWljIHJldm9sdXRpb24gYnV0IGl0cyBvaWwgYmVjYW1lIHN1YmplY3QgdG8gYW4gRVUgZW1iYXJnbyBvbmx5IGluIDIwMTIgYXMgcGFydCBvZiBXZXN0ZXJuIGVmZm9ydHMgdG8gcGVyc3VhZGUgVGVocmFuIHRvIGFiYW5kb24gaXRzIG51Y2xlYXIgcHJvZ3JhbXQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0wMy0yN1QwMDowMDowMFogVE8gMjAxMy0xMi0wM1Q1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTE3MDAw</field><field name="title" class="java.lang.String">rO0ABXQAP0ZyZW5jaCBBdXRvIENvbXBhbmllcywgT2lsIFNoaXBwZXJzIE1heSBQcm9maXQgRnJvbSBJcmFuIEFjY29yZA==</field><field name="content" class="java.lang.String">rO0ABXQnEVRoZSBkZWFsIHN0cnVjayBpbiBHZW5ldmEgYW1vbmcgSXJhbiBhbmQgc2l4IHdvcmxkIHBvd2VycywgaW5jbHVkaW5nIHRoZSBVLlMuIGFuZCBpdHMgRXVyb3BlYW4gVW5pb24gcGFydG5lcnMsIHdpbGwgcmVsYXggcmVzdHJpY3Rpb25zIG9uIGNhcnMsIHBldHJvY2hlbWljYWxzLCBhdmlhdGlvbiBwYXJ0cywgZ29sZCwgYW5kIGluc3VyYW5jZSBmb3Igb2lsIGNhcmdvZXMuIEluIGFkZGl0aW9uLCBpdCB3aWxsIGxldCB0aGUgUGVyc2lhbiBHdWxmIHN0YXRlIGNvbnRpbnVlIGV4cG9ydGluZyBvaWwgYXQgY3VycmVudCBsZXZlbHMgaW5zdGVhZCBvZiBmb3JjaW5nIGZ1cnRoZXIgcmVkdWN0aW9ucy4gRGlyZWN0IGNvbW1lcmNpYWwgYmVuZWZpdHMgZnJvbSB0aGUgYWdyZWVtZW50IHdpbGwgYmUgbGltaXRlZCBiZWNhdXNlIHRoZSBwcmltYXJ5IHNhbmN0aW9ucyBvbiBvaWwgYW5kIGJhbmtpbmcgcmVtYWluIGluIHBsYWNlLiBJdHMgc2lnbmlmaWNhbmNlIG1heSBiZSBhcyB0aGUgZmlyc3QgYnJlYWsgaW4gYSBwYXR0ZXJuIG9mIGV2ZXItdGlnaHRlciBzYW5jdGlvbnMgb24gSXJhbiBhbmQgYSBwb3RlbnRpYWwgZmlyc3Qgc3RlcCB0b3dhcmQgaXRzIHJldHVybiB0byB0aGUgaW50ZXJuYXRpb25hbCBlY29ub215LiDigJxBbnkgaW5kaWNhdGlvbiB0aGF0IHdlIGNvdWxkIHJlc3VtZSBkb2luZyBidXNpbmVzcyB3aXRoIG91ciBwYXJ0bmVycyBpbiBJcmFuIGdvZXMgaW4gdGhlIHJpZ2h0IGRpcmVjdGlvbizigJ0gUGV1Z2VvdCBzcG9rZXNtYW4gSmVhbi1CYXB0aXN0ZSBUaG9tYXMgc2FpZC4g4oCcV2XigJlsbCBvZiBjb3Vyc2Ugd2VsY29tZSB0aGUgcmUtb3BlbmluZyBvZiB0aGUgSXJhbmlhbiBtYXJrZXQu4oCdIEluIGV4Y2hhbmdlIGZvciBhIHNlbGVjdGl2ZSBlYXNpbmcgb2Ygc2FuY3Rpb25zLCB0aGUgYWdyZWVtZW50IHJlcXVpcmVzIElyYW4gdG8gY3VydGFpbCBzZW5zaXRpdmUgbnVjbGVhciBhY3Rpdml0aWVzLCByZWR1Y2UgaXRzIHN0b2NrcGlsZSBvZiBlbnJpY2hlZCB1cmFuaXVtIGFuZCBhZ3JlZSB0byBpbmNyZWFzZWQgaW50ZXJuYXRpb25hbCBpbnNwZWN0aW9ucyBvZiBpdHMgbnVjbGVhciBmYWNpbGl0aWVzLiBMb3N0IFJldmVudWUgVGhlIGFjY29yZCBkZXBlbmRzIG9uIElyYW4ga2VlcGluZyBpdHMgZW5kIG9mIHRoZSBiYXJnYWluIGFuZCB0aGUgT2JhbWEgYWRtaW5pc3RyYXRpb24gZmVuZGluZyBvZmYgY29uZ3Jlc3Npb25hbCBwcmVzc3VyZSB0byBpbXBvc2UgYSBuZXcgcm91bmQgb2Ygc2FuY3Rpb25zLiBBbWVyaWNhbiBjb21wYW5pZXMgZG9u4oCZdCBzdGFuZCB0byBwcm9maXQgYmVjYXVzZSBhbG1vc3QgYWxsIFUuUy4gdHJhZGUgd2l0aCBJcmFuIG90aGVyIHRoYW4gZm9vZCBhbmQgbWVkaWNpbmUgaGFzIGJlZW4gYmFubmVkIGZvciBkZWNhZGVzLiBTYW5jdGlvbnMgaGF2ZSBjb3N0IElyYW4gJDEyMCBiaWxsaW9uIGluIGxvc3QgcmV2ZW51ZSBzaW5jZSB0aGUgVS5TLiBhbmQgRVUgc3RhcnRlZCBpbXBvc2luZyB0b3VnaCBwZW5hbHRpZXMgb24gZW5lcmd5LCBwb3J0cywgaW5zdXJhbmNlLCBzaGlwcGluZywgYmFua2luZyBhbmQgb3RoZXIgdHJhbnNhY3Rpb25zIGluIDIwMTAsIGFjY29yZGluZyB0byBVLlMuIFRyZWFzdXJ5IGVzdGltYXRlcy4gVGhlIEFtZXJpY2FuIHNhbmN0aW9ucyBwZW5hbGl6ZSBvdGhlciBuYXRpb25zIHRoYXQgdHJhZGUgd2l0aCBJcmFuLCBpbmNsdWRpbmcgVS5TLiBhbGxpZXMuIEFsb25nIHdpdGggdGhlIGF1dG9tYWtlcnMsIHRoZSBhY2NvcmQgbWF5IGNyYWNrIG9wZW4gdGhlIGRvb3IgdG8gdHJhZGUgd2l0aCBJcmFuIGZvciBnb2xkIHRyYWRlcnMgaW4gVHVya2V5LCBvaWwgcmVmaW5lcnMgaW4gSW5kaWEgYW5kIHNoaXBwaW5nIGluc3VyZXJzIGluIExvbmRvbi4gVGhlIGZpcnN0LXN0ZXAgZGVhbCB3b27igJl0IGxvb3NlbiB0aGUgcmVzdHJpY3Rpb25zIHRoYXQgYWZmZWN0IG1vc3QgSXJhbmlhbiBiYW5rcyBhbmQgbWFrZSBpdCBhbG1vc3QgaW1wb3NzaWJsZSBmb3IgSXJhbiB0byByZWdhaW4gYWNjZXNzIHRvIHRoZSBnbG9iYWwgZmluYW5jaWFsIHN5c3RlbS4gTm9yIHdpbGwgaXQgcHJvdmlkZSBhbiBpbW1lZGlhdGUgYm9vbiB0byBtdWx0aW5hdGlvbmFsIG9pbCBjb21wYW5pZXMgc3VjaCBhcyBUb3RhbCBTQSBvZiBGcmFuY2UsIEVuaSBTcEEgb2YgSXRhbHkgb3IgU3RhdG9pbCBBU0Egb2YgTm9yd2F5IGJlY2F1c2UgdGhlIHJlc3RyaWN0aW9ucyBvbiBJcmFu4oCZcyBlbmVyZ3kgc2VjdG9yIGFuZCB0aGUgRVUgb2lsIGVtYmFyZ28gb24gSXJhbiB3aWxsIHJlbWFpbiBpbiBwbGFjZS4gT2lsIFRyYWRlIENocmlzdG9waGUgZGUgTWFyZ2VyaWUsIGNoYWlybWFuIGFuZCBjaGllZiBleGVjdXRpdmUgb2ZmaWNlciBvZiBQYXJpcy1iYXNlZCBUb3RhbCwgc2FpZCBvbiBOb3YuIDEwIHRoYXQgaGUgaG9wZWQgaXQg4oCcd29u4oCZdCB0YWtlIHRvbyBtdWNoIHRpbWXigJ0gZm9yIEZyYW5jZeKAmXMgZW5lcmd5IGdpYW50IHRvIHJldHVybiB0byBJcmFuIGlmIHRob3NlIHNhbmN0aW9ucyBhcmUgbGlmdGVkLiBJcmFuLCB0aGUgc2Vjb25kLWJpZ2dlc3QgcHJvZHVjZXIgaW4gdGhlIE9yZ2FuaXphdGlvbiBvZiBQZXRyb2xldW0gRXhwb3J0aW5nIENvdW50cmllcyBiZWZvcmUgb2lsIHNhbmN0aW9ucyB0b29rIGVmZmVjdCBpbiBKdWx5IDIwMTIsIGhhcyBmYWxsZW4gdG8gc2l4dGggcGxhY2UuIFdoaWxlIHRoZSBVLlMuIHNhbmN0aW9ucyB0aGF0IHJlZHVjZWQgSXJhbuKAmXMgY3J1ZGUgZXhwb3J0cyBieSA2MCBwZXJjZW50IHNpbmNlIGxhc3QgeWVhciB3aWxsIGNvbnRpbnVlLCB0aGUgZGVhbCBlYXNlcyBzb21lIHJ1bGVzIHNvIGJ1eWVycyBvZiBJcmFuaWFuIG9pbCBjYW4gbWFpbnRhaW4gdGhlaXIgcHVyY2hhc2VzIGF0IGN1cnJlbnQgdm9sdW1lcyBpbnN0ZWFkIG9mIGN1dHRpbmcgdGhlbSBmdXJ0aGVyLCB0aGUgV2hpdGUgSG91c2Ugc2FpZCBpbiBhbm5vdW5jaW5nIHRoZSBkZWFsLiBPdmVyIHRoZSBuZXh0IHNpeCBtb250aHMsIFUuUy4gU2VjcmV0YXJ5IG9mIFN0YXRlIEpvaG4gS2VycnkgYW5kIGhpcyBwYXJ0bmVycyBmcm9tIHRoZSBVLksuLCBGcmFuY2UsIEdlcm1hbnksIENoaW5hIGFuZCBSdXNzaWEgd2lsbCBwdXJzdWUgYSBmaW5hbCBhZ3JlZW1lbnQgdGhhdCBjb3VsZCB5aWVsZCBhIGZhci0gcmVhY2hpbmcgZWFzaW5nIG9mIHNhbmN0aW9ucy4gQXV0byBTYW5jdGlvbnMgRXZlbiB0aGUgbGltaXRlZCBwYXJpbmcgb2Ygc2FuY3Rpb25zIG5vdyB3aWxsIHByb2R1Y2UgdGFuZ2libGUgYmVuZWZpdHMuIEVhc2luZyB0aGUgYXV0byBzYW5jdGlvbnMgd2lsbCByZXN0b3JlICQ1MDAgbWlsbGlvbiBpbiBsb3N0IHRyYWRlIHRvIElyYW4gb3ZlciBzaXggbW9udGhzLCBhY2NvcmRpbmcgdG8gT2JhbWEgYWRtaW5pc3RyYXRpb24gb2ZmaWNpYWxzIHdobyBhc2tlZCBub3QgdG8gYmUgbmFtZWQgZGVzY3JpYmluZyBkZXRhaWxzIG9mIHRoZSBwYWNrYWdlLiDigJxUaGlzIGlzIGdvb2QgbmV3cyBmb3IgdXMsIGFzIElyYW4gaXMgYW4gaW1wb3J0YW50IG1hcmtldCBmb3IgUmVuYXVsdCzigJ0gRmxvcmVuY2UgZGUgR29sZGZpZW0sIGRpcmVjdG9yIG9mIGNvbW11bmljYXRpb25zIGZvciB0aGUgY29tcGFueSBiYXNlZCBpbiBCb3Vsb2duZS1CaWxsYW5jb3VydCwgc2FpZCBpbiBhIHRlbGVwaG9uZSBpbnRlcnZpZXcuIOKAnFdl4oCZcmUgd2FpdGluZyB0byBzZWUgd2hhdCB0aGUgY29uZGl0aW9ucyBvZiByZWRlcGxveW1lbnQgb2Ygb3VyIGFjdGl2aXRpZXMgaW4gdGhlIGNvdW50cnkgbWF5IGJlLuKAnSBQZXVnZW90LCBFdXJvcGXigJlzIHNlY29uZC1sYXJnZXN0IGNhcm1ha2VyLCBzb2xkIDQ1Nyw5MDAgdmVoaWNsZXMgdG8gSXJhbiBpbiAyMDExIGFzIHNwYXJlIHBhcnRzIGtpdHMgdGhhdCB3ZXJlIGFzc2VtYmxlZCBpbnRvIHZlaGljbGVzIGluIHRoZSBjb3VudHJ5LiBUaGF0IG1hZGUgSXJhbiBQZXVnZW904oCZcyBzZWNvbmQgbWFya2V0IGluIHZvbHVtZSBhZnRlciBGcmFuY2UuIFNhbGVzIGZlbGwgNjggcGVyY2VudCBsYXN0IHllYXIgdG8gMTQ1LDAwMCB2ZWhpY2xlcyBhZnRlciB0aGUgUGFyaXMtYmFzZWQgY29tcGFueSBoYWx0ZWQgc2hpcG1lbnRzIGluIEZlYnJ1YXJ5IDIwMTIgdG8gYWJpZGUgYnkgcmVzdHJpY3Rpb25zLiBUaGF0IGh1cnQgdGhlIGNvbXBhbnnigJlzIGVhcm5pbmdzIGJ5IDEwIG1pbGxpb24gZXVyb3MgYSBtb250aCwgQ2hpZWYgRmluYW5jaWFsIE9mZmljZXIgSmVhbi1CYXB0aXN0ZSBkZSBDaGF0aWxsb24gc2FpZCBvbiBBcHJpbCAyNSwgMjAxMi4gUGV1Z2VvdCwgS2lhIFBldWdlb3QgYW5kIEtJQSBNb3RvcnMgQ29ycC4sIGJhc2VkIGluIFNlb3VsLCB3ZXJlIHRoZSB0d28gbGFyZ2VzdCBmb3JlaWduIGF1dG9tYWtlcnMgaW4gSXJhbiBiZWZvcmUgc2FuY3Rpb25zIGlzb2xhdGVkIHRoZSBjb3VudHJ54oCZcyBlY29ub215IGFuZCBhcmUgYW1vbmcgdGhlIGNvbXBhbmllcyB0aGF0IHN0YW5kIHRvIGJlbmVmaXQgbW9zdCBmcm9tIGFuIGVhc2luZywgc2FpZCBQZXRlciBGdXNzLCBhIHBhcnRuZXIgYXQgRXJuc3QgJiBZb3VuZyBHbWJIIGluIEZyYW5rZnVydC4g4oCcSXTigJlzIGFuIGludGVyZXN0aW5nIG1hcmtldCB3aXRoIGdyb3d0aCBwcm9zcGVjdHMsIGFuZCBwb3RlbnRpYWxseSBhIHByb21pc2luZyBzdGVwcGluZy1zdG9uZSBpbnRvIHRoZSB3aG9sZSByZWdpb24gZm9yIGNhciBtYW51ZmFjdHVyZXJzLOKAnSBGdXNzIHNhaWQgaW4gYW4gaW50ZXJ2aWV3LiBUaGUgYWdyZWVtZW50IHRvIGFsbG93IGNydWRlIGV4cG9ydHMgYXQgY3VycmVudCBsZXZlbHMgYmVuZWZpdHMgQ2hpbmEsIEluZGlhLCBTb3V0aCBLb3JlYSwgSmFwYW4sIFR1cmtleSBhbmQgVGFpd2FuLCB0aGUgb25seSBuYXRpb25zIHN0aWxsIGJ1eWluZyBJcmFu4oCZcyBvaWwuIFRob3NlIGNvdW50cmllcyBoYXZlIGNvbXBsYWluZWQgdG8gVS5TLiBvZmZpY2lhbHMgdGhhdCB0aGUgcHVzaCB0byByZWR1Y2UgSXJhbmlhbiBjcnVkZSBpbXBvcnRzIGJ5IGFuIGFkZGl0aW9uYWwgMTUgcGVyY2VudCBldmVyeSBzaXggbW9udGhzIHdhcyBzdHJhaW5pbmcgdGhlaXIgZWNvbm9taWVzLiBJcmFuIGhhZCAyMyBjcnVkZSBvaWwgY2xpZW50cyBiZWZvcmUgc2FuY3Rpb25zIGluIEp1bHkgMjAxMjsgbm93IGl0IGhhcyBzaXguIFRhbmtlciBJbnN1cmFuY2UgQ29tcGFuaWVzIHRoYXQgdHJhbnNwb3J0IElyYW5pYW4gb2lsIGFsc28gYXJlIHBvdGVudGlhbCBiZW5lZmljaWFyaWVzIG9mIHRoZSBhZ3JlZW1lbnQuIFRoZSBsaWZ0aW5nIG9mIGFuIEVVIGJhbiBvbiBpbnN1cmluZyB0YW5rZXJzIGNhcnJ5aW5nIElyYW5pYW4gY3J1ZGUgYWxzbyB3aWxsIGVhc2UgdGhlIHByb2Nlc3Mgb2YgaW1wb3J0aW5nIHRoZSBQZXJzaWFuIEd1bGYgc3RhdGXigJlzIG9pbCB0byBjb3VudHJpZXMgaW5jbHVkaW5nIEluZGlhIGFuZCBUdXJrZXkuIE9mZmljaWFscyBvZiBJbmRpYW4gT2lsIENvcnAuIGFuZCBIaW5kdXN0YW4gUGV0cm9sZXVtIENvcnAuLCBib3RoIGJhc2VkIGluIE11bWJhaSwgYW5kIE1hbmdhbG9yZSBSZWZpbmVyeSAmIFBldHJvY2hlbWljYWxzIEx0ZC4gc2FpZCByZW1vdmluZyByZXN0cmljdGlvbnMgb24gc2hpcHBpbmcgY292ZXJhZ2Ugd2lsbCBlbmFibGUgdGhlbSB0byBwdXJjaGFzZSBjb250cmFjdGVkIHZvbHVtZXMgbW9yZSBlYXNpbHkuIFRoZSBmaXJtcyBzYWlkIHRoZXkgbm9uZXRoZWxlc3MgZG9u4oCZdCBpbnRlbmQgdG8gYnV5IG1vcmUgSXJhbmlhbiBvaWwgdGhhbiBwbGFubmVkLiBMaWZ0aW5nIHRoZSBFVSBpbnN1cmFuY2UgYmFuIG9uIElyYW5pYW4gY2FyZ29lcyB3aWxsIGJlbmVmaXQgc2hpcCBvd25lcnMgYW5kIGNvbXBhbmllcyB0aGF0IGNvdmVyIHRoZW0gZm9yIHJpc2tzIHN1Y2ggYXMgc3BpbGxzLCBzYWlkIEFuZHJldyBCYXJkb3QsIHNlY3JldGFyeSBvZiB0aGUgSW50ZXJuYXRpb25hbCBHcm91cCBvZiBQJkkgQ2x1YnMgaW4gTG9uZG9uLiBXaXRoIHRoZSBiYW4gbGlmdGVkLCBpdCB3b3VsZCBhZ2FpbiBiZSBsZWdhbCBmb3IgUCZJIGluc3VyYW5jZSBjbHVicyBhbmQgcmVpbnN1cmFuY2UgY29tcGFuaWVzIHN1Y2ggYXMgTGxveWTigJlzIEJhbmtpbmcgR3JvdXAgUGxjLCBNdW5pY2ggUmUsIGFuZCBTd2lzcyBSZSBMdGQuIHRvIGluc3VyZSBJcmFuaWFuIG9pbCBjYXJnb2VzIGlmIHRoZXkgY2hvb3NlIHRvIGRvIHNvLiBQZXRyb2NoZW1pY2FsIEV4cG9ydHMgTGlmdGluZyBwZXRyb2NoZW1pY2FsIHNhbmN0aW9ucyB3aWxsIHBlcm1pdCAkMSBiaWxsaW9uIGluIGV4cG9ydHMgZm9yIElyYW4sIGFjY29yZGluZyB0byBVLlMuIG9mZmljaWFscyBjbG9zZSB0byB0aGUgdGFsa3MuIElyYW4gbWF5IG5vdCBmZWVsIGFuIGltbWVkaWF0ZSBpbXBhY3QgYmVjYXVzZSBpdOKAmXMgYmVlbiBhYmxlIHRvIHNoaXAgbWF0ZXJpYWxzIHN1Y2ggYXMgcG9seWV0aHlsZW5lIHJlc2lucyB0byBDaGluYSBpbiB2aW9sYXRpb24gb2Ygc2FuY3Rpb25zLCBQYXVsIEhvZGdlcywgY2hhaXJtYW4gb2YgSW50ZXJuYXRpb25hbCBlQ2hlbSwgYSBMb25kb24tYmFzZWQgY29uc3VsdGluZyBmaXJtLCBzYWlkIGluIGFuIGludGVydmlldy4gQW55IGZ1dHVyZSBpbmNyZWFzZSBpbiBJcmFuaWFuIHN1cHBsaWVzIG9mIG9pbCBhbmQgZ2FzIHdvdWxkIHRyaWNrbGUgZG93biB0byBFdXJvcGXigJlzIGNoZW1pY2FsIGluZHVzdHJ5LCBjcmVhdGluZyBhIHBvdGVudGlhbCBnYW1lIGNoYW5nZXIgZm9yIGVuZXJneS1pbnRlbnNpdmUgaW5kdXN0cmllcywgaW5jbHVkaW5nIHRob3NlIG1ha2luZyBwb2x5dmlueWwgY2hsb3JpZGUsIHRoZSBwbGFzdGljIGtub3duIGFzIFBWQywgc2FpZCBIb2RnZXMsIGEgZm9ybWVyIGV4ZWN1dGl2ZSBvZiBJbXBlcmlhbCBDaGVtaWNhbCBJbmR1c3RyaWVzLiDigJxZb3XigJlkIGhhdmUgYSB0cmFkaXRpb25hbCBtYWpvciBwcm9kdWNlciBjb21pbmcgYmFjayBpbnRvIHRoZSBtYXJrZXQgYW5kIGRlc3BlcmF0ZSB0byBzZWxsLOKAnSBzYWlkIEhvZGdlcy4g4oCcVGhpcyBoYXMgc3VkZGVubHkgdGhlIHBvdGVudGlhbCB0byBjaGFuZ2UgdGhlIHdob2xlIG91dGxvb2sgYXMgdGhlcmXigJlzIHNvbWVvbmUgb3V0IHRoZXJlIHdobyB3YW50cyB0byBzZWxsIGFuZCBhbHNvIG5lZWRzIHRvIHNlbGwuIEV2ZXJ5IHNpbmdsZSBvbGVmaW4gcmVmaW5lciwgY2hlbWljYWwgcGxhbnQgaW4gRXVyb3BlIHdvdWxkIGJlbmVmaXQu4oCdIOKAmFdhaXQgYSBCaXTigJkgVGhhdCB3b3VsZCBiZSBhIGJvbnVzIGZvciBjb21wYW5pZXMgZnJvbSBHZXJtYW4gcGxhc3RpY3MgbWFrZXIgQmF5ZXIgQUcgYW5kIHN5bnRoZXRpYyBydWJiZXIgc3VwcGxpZXIgTGFueGVzcyBBRyB0byBBcmtlbWEgU0Egb2YgRnJhbmNlIGFuZCBTb2x2YXkgU0Egb2YgQmVsZ2l1bSwgaGUgc2FpZC4gTGluZGUgQUcgb2YgR2VybWFueSwgd2hvc2UgaW5kdXN0cmlhbCBhbmQgc3BlY2lhbHR5IGdhc2VzIGFyZSB1c2VkIGJ5IHBldHJvY2hlbWljYWwgY3VzdG9tZXJzIHdvcmxkd2lkZSwgc2FpZMKgaXTigJlzIHRvbyBlYXJseSB0byBzYXkgaWYgdGhlIGNvbXBhbnkgd2lsbCBzZWl6ZSBvbiB0aGUgbGlmdGluZyBvZiBzYW5jdGlvbnMuIOKAnFdlIHdpdGhkcmV3IGEgZmV3IHllYXJzIGFnbyBmcm9tIElyYW4gYmVjYXVzZSBvZiB0aGUgcG9saXRpY2FsIHNpdHVhdGlvbizigJ0gVXdlIFdvbGZpbmdlciwgYSBzcG9rZXNtYW4gZm9yIE11bmljaC0gYmFzZWQgTGluZGUsIHNhaWQgYnkgdGVsZXBob25lLiDigJxXZeKAmWQgbmVlZCB0byB3YWl0IGEgYml0IGJlZm9yZSBkZWNpZGluZyB3aGV0aGVyIGl04oCZcyB3b3J0aCByZXR1cm5pbmcu4oCdIFRoZSBzaXgtbW9udGggZGVhbCBhbHNvIHdvdWxkIGdpdmUgSXJhbiBhY2Nlc3MgdG8gcmVwbGFjZW1lbnQgcGFydHMgZm9yIGNpdmlsaWFuIGFpcmNyYWZ0LCBhbGxvd2luZyB0aGUgY291bnRyeSB0byBtYWludGFpbiBpdHMgYWdpbmcgY29tbWVyY2lhbCBmbGVldC4gSXJhbiBoYXMgYmVlbiBhbiBhdmlhdGlvbiBiYWNrd2F0ZXIgZm9yIGRlY2FkZXMsIHdpdGggYSBzbWFsbCBmbGVldCBvZiBvdXRkYXRlZCBhaXJjcmFmdCBpbiBuZWVkIG9mIHJlcGFpci4gQWlyY3JhZnQgTWFpbnRlbmFuY2Ug4oCcVGhlIG1haW4gZGVhbCB3b3VsZCBiZSBlbmdpbmUgbWFpbnRlbmFuY2UgYW5kIHBhcnRzLCBhbmQgcHJvYmFibHkgc29tZSBjb25zdW1hYmxlcyBzdWNoIGFzIHRpcmVzLCBicmFrZXMsIGV0Yy4s4oCdIHNhaWQgSm9lbCBKb2huc29uLCBleGVjdXRpdmUgZGlyZWN0b3IsIGludGVybmF0aW9uYWwgYXQgdGhlIFRlYWwgR3JvdXAsIGEgRmFpcmZheCwgVmlyZ2luaWEsIGNvbnN1bHRpbmcgZmlybS4g4oCcQm90dG9tIGxpbmUgaXMgd2UgYXJlIG5vdCB0YWxraW5nIHNlcmlvdXMgbW9uZXku4oCdIOKAnElmIHNhbmN0aW9ucyB3ZXJlIGxpZnRlZCBpbiB0aGUgZnV0dXJlLCBhbmQgSXJhbiB3YXMgc2VsbGluZyBvaWwgYWdhaW4sIGl0IHdvdWxkIGJlIGEgc2VyaW91cyBtYXJrZXQgZm9yIG5ldyBhaXJjcmFmdCwgYXMgdGhlaXIgZmxlZXQgaGFzIGFnZWQgY29uc2lkZXJhYmx5IGFuZCBpcyBwcm9iYWJseSBub3QgaW4gZ29vZCByZXBhaXIs4oCdIEpvaG5zb24gc2FpZCBpbiBhbiBpbnRlcnZpZXcuIOKAnFRoYXQgd291bGQgdGFrZSBhIGZ1bGwtZmxlZGdlZCBkZWFsLCBwcm9iYWJseSBpbnZvbHZpbmcgY29tcGxldGUgY2Vzc2F0aW9uIG9mIHRoZWlyIGVucmljaG1lbnQgcHJvZ3JhbSBhbmQgZGlzbWFudGxpbmcgb2Ygc29tZSBwbGFudCBhbmQgZXF1aXBtZW50LuKAnSBUaGUgaW50ZXJpbSBkZWFsIHdvdWxkIHRlbXBvcmFyaWx5IGxpZnQgc2FuY3Rpb25zIG9uIGdvbGQgYW5kIHByZWNpb3VzIG1ldGFscyB0cmFkZSB3aXRoIElyYW4uIFBvdGVudGlhbCBiZW5lZmljaWFyaWVzIGluY2x1ZGUgZ29sZCB0cmFkZXJzIGluIFR1cmtleSBhbmQgdGhlIFVuaXRlZCBBcmFiIEVtaXJhdGVzLCB3aXRoIHdob20gSXJhbiBkaWQgdGhlIG1vc3QgZ29sZCB0cmFkZSBiZWZvcmUgc2FuY3Rpb25zLiBHb2xkIFB1cmNoYXNlcyBJcmFuIGhhcyBwdXJjaGFzZWQgZ29sZCBhcyBhIGhlZGdlIGFnYWluc3QgYSBsb29taW5nIGJhbGFuY2Utb2YtcGF5bWVudHMgY3Jpc2lzIGJyb3VnaHQgb24gYnkgdGhlIGRlY2xpbmUgaW4gaXRzIGV4cG9ydHMsIHRoZSBmYWxsaW5nIHZhbHVlIG9mIGl0cyBjdXJyZW5jeSwgdGhlIHJpYWwsIGFuZCB0aWdodCBsaW1pdHMgb24gaXRzIGFjY2VzcyB0byBkb2xsYXJzIGFuZCBldXJvcy4gR29sZCBpbXBvcnRzIHNob3QgdG8gYSBoaWdoIG9mIG1vcmUgdGhhbiAkMS41IGJpbGxpb24gYSBtb250aCBmcm9tIFR1cmtleSBhbG9uZSBpbiBtaWQtMjAxMiBhcyBJcmFuaWFucyBib3VnaHQgZ29sZCB0byBzYWZlZ3VhcmQgYWdhaW5zdCBpbmZsYXRpb24gYW5kIHRoZSB0YW5raW5nIHJpYWwuIFRoZSBJcmFuaWFuIGN1cnJlbmN5IHN0cmVuZ3RoZW5lZCBtb3JlIHRoYW4gMiBwZXJjZW50IGFmdGVyIHRoZSBkZWFsIGluIEdlbmV2YS4gVGhlIHRyYWRlIGhhcyBiZWVuIGxhcmdlbHkgdW5kZXIgdGhlIHRhYmxlLCB3aXRoIGdvbGQgbW92aW5nIGZyb20gVHVya2V5IHRvIElyYW4gaW4gaGFuZCBsdWdnYWdlLiBXaGlsZSBhIHJldml2ZWQgdHJhZGUgaXMgdW5saWtlbHkgdG8gbmV0IGFueSBjb3Jwb3JhdGUgd2lubmVycywgaXQgd291bGQgaGVscCBUdXJrZXnigJlzIGVjb25vbXkuIOKAnEZvciBhIGJyaWVmIHBlcmlvZCBvZiB0aW1lLCBJcmFuIHdhcyBhYmxlIHRvIHJlY2VpdmUgcGF5bWVudCBmb3IgbXVjaCBvZiBpdHMgb2lsIGV4cG9ydHMgdmlhIHRyYW5zZmVycyBvZiBnb2xkLCByb3V0ZWQgdmlhIFR1cmtleSzigJ0gc2FpZCBOaWMgQnJvd24sIGhlYWQgb2YgY29tbW9kaXRpZXMgcmVzZWFyY2ggYXQgTmF0aXhpcyBTQSBpbiBMb25kb24uIOKAnFRoZSBnb2xkIHdvdWxkIGJlIGNpcmN1bGF0aW5nIGJldHdlZW4gYnV5ZXJzIG9mIElyYW5pYW4gb2lsLCBJcmFuIGl0c2VsZiBhbmQgc2VsbGVycyBvZiBleHBvcnRzIHRvIElyYW4u4oCd</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKN188AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDBkZjQ3NmJkMTY5ZTJhZWI=</field><field name="symbol" class="java.lang.String">rO0ABXQAAlJF</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKS/isAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBjsKPXCj1x</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBjw9cKPXCk</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBjmPXCj1wp</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBjm4UeuFHs</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBjB64UeuFI</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAbwkA==</field><field name="id" class="java.lang.String">rO0ABXQAEDczNjdhODQ5Nzc0MGZhYmM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJJdAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDg3MTM=</field><field name="title" class="java.lang.String">rO0ABXQANUlyYW4gdG8gUmVhc3NlcnQgQXV0aG9yaXR5IGF0IE9QRUMgQWZ0ZXIgTnVjbGVhciBEZWFs</field><field name="content" class="java.lang.String">rO0ABXQW+EJpamFuIFphbmdhbmVoIHJldHVybnMgdGhpcyB3ZWVrIHRvIHRoZSBzYW1lIFZpZW5uYSBob3RlbCBzdWl0ZSBoZSBsYXN0IG9jY3VwaWVkIGVpZ2h0IHllYXJzIGFnbyBhcyBJcmFuaWFuIG9pbCBtaW5pc3RlciwgcmVhZHkgdG8gcHJlcGFyZSBPUEVDIGZvciB3aGF0IFRlaHJhbiBob3BlcyB3aWxsIG1hcmsgaXRzIHJldHVybiBhcyB0aGUgY2FydGVsJ3Mgc2Vjb25kIGJpZ2dlc3QgcHJvZHVjZXIuIEVtYm9sZGVuZWQgYnkgaXRzIG51Y2xlYXIgZGVhbCB3aXRoIHRoZSBXZXN0LCBJcmFuaWFuIG9pbCBuZWdvdGlhdG9ycyBsZWQgYWdhaW4gYnkgaW5kdXN0cnkgdmV0ZXJhbiBaYW5nYW5laCwgd2lsbCBzZWVrIHRvIHJlYXNzZXJ0IFRlaHJhbidzIGF1dGhvcml0eSBpbiB0aGUgT3JnYW5pemF0aW9uIG9mIHRoZSBQZXRyb2xldW0gRXhwb3J0aW5nIENvdW50cmllcyBhdCBhIFdlZG5lc2RheSBtZWV0aW5nLiBXZXN0ZXJuIHNhbmN0aW9ucyBpbXBvc2VkIGluIDIwMTIgb24gSXJhbiBmb3IgaXRzIG51Y2xlYXIgcHJvZ3JhbSBoYXZlIGNvc3QgaXQgZGVhcmx5LCBsb3NpbmcgaXQgYmlsbGlvbnMgb2YgZG9sbGFycyBpbiBvaWwgcmV2ZW51ZXMgYW5kIG1hcmtldCBzaGFyZSBpbiBPUEVDLCBsYXJnZWx5IHRvIGl0cyBtYWluIHJlZ2lvbmFsIHBvbGl0aWNhbCByaXZhbCBTYXVkaSBBcmFiaWEsIGFuZCBuZWlnaGJvciBJcmFxLiBXaXRoIGl0cyBleHBvcnRzIHN0aWxsIHNoYWNrbGVkIGJ5IHNhbmN0aW9ucyBmb3IgYXQgbGVhc3QgYW5vdGhlciBzaXggbW9udGhzLCBJcmFuIHBvc2VzIG5vIGltbWVkaWF0ZSB0aHJlYXQgdG8gdGhlIHN0YXR1cyBxdW8uIE9pbCBtaW5pc3RlcnMgYXJlIHdpZGVseSBleHBlY3RlZCB0byByb2xsIGZvcndhcmQgdW50aWwgSnVuZSBhbiBhZ3JlZW1lbnQgdG8gaG9sZCB0aGVpciBvdXRwdXQgbmVhciAzMCBtaWxsaW9uIGJhcnJlbHMgZGFpbHkgZm9yIDEyIG1lbWJlciBjb3VudHJpZXMuIEJ1dCBvaWwgdHJhZGVycyB3aWxsIGJlIHdhdGNoaW5nIGNsb3NlbHkgZm9yIHNpZ25zIG9mIGNvb3BlcmF0aW9uLCBvciBvdGhlcndpc2UsIGJldHdlZW4gdGhlIGJpZyB0aHJlZSBwcm9kdWNlcnMgaW4gT1BFQywga25vd2luZyB0aGF0IFJpeWFkaCBhbmQgQmFnaGRhZCB3aWxsIG5lZWQgdG8gZmluZCByb29tIGZvciBJcmFuIHNob3VsZCBpdHMgaW50ZXJpbSBudWNsZWFyIGRlYWwgYmUgdmVyaWZpZWQgYW5kIHNhbmN0aW9ucyBsaWZ0ZWQuIFJlYXBwb2ludGVkIHRvIHRoZSBvaWwgbWluaXN0cnkgYnkgSXJhbidzIG5ldyBhbmQgbW9yZSB3ZXN0ZXJuLWZyaWVuZGx5IFByZXNpZGVudCBIYXNzYW4gUm91aGFuaSwgWmFuZ2FuZWggaGFzIG9wZW5seSBjcml0aWNpemVkIElyYXEsIG5vdyBPUEVDJ3Mgc2Vjb25kIGJpZ2dlc3QgcHJvZHVjZXIsIGZvciBpbmNyZWFzaW5nIGl0cyBtYXJrZXQgc2hhcmUgYXQgVGVocmFuJ3MgZXhwZW5zZS4gIklyYXEgaGFzIHJlcGxhY2VkIElyYW4ncyBvaWwgd2l0aCBpdHMgb3duLCIgWmFuZ2FuZWggc2FpZCBpbiBOb3ZlbWJlci4gIlRoaXMgSXJhcSBtb3ZlIGlzIG5vdCBmcmllbmRseSBhdCBhbGwuIiAiV2UgZXhwZWN0IHRoZSBJcmFuaWFucyB0byBzYXksICdXZSdyZSBjb21pbmcgYmFjayB0byB0aGUgbWFya2V0IGFuZCB3ZSBuZWVkIHNvbWUgc3BhY2UsJyIgc2FpZCBhbiBPUEVDIGRlbGVnYXRlIGZyb20gYSByaXZhbCBHdWxmIEFyYWIgcHJvZHVjZXIuIFJpc2luZyB2b2x1bWVzIGZyb20gdGhlIFVuaXRlZCBTdGF0ZXMgc3B1cnJlZCBieSBwcm9kdWN0aW9uIGZyb20gbmV3IHNoYWxlIHRlY2hub2xvZ3kgbWF5IG1lYW4gT1BFQyB3aWxsIG5lZWQgdG8gY3V0IG91dHB1dCBpbiB0aGUgc2Vjb25kIGhhbGYgb2YgMjAxNCBpZiBpdCB3YW50cyB0byBrZWVwIG9pbCBwcmljZXMgYWJvdmUgJDEwMCBhIGJhcnJlbC4gIkZyb20gbm93IHVudGlsIHRoZSBlbmQgb2YgTWFyY2gsIHRoZSBtYXJrZXQgbG9va3Mgd2VsbCBiYWxhbmNlZCBhbmQgdGhlIHByaWNlIHNob3VsZCBzdGF5IHN1cHBvcnRlZC4gQnV0IGZyb20gSnVuZSwgdGhlcmUgd2lsbCBiZSBhIG5lZWQgZm9yIGEgY3V0LCIgc2FpZCBhIHNlbmlvciBPUEVDIGRlbGVnYXRlLiAiVGhlIG9udXMgd291bGQgYmUgb24gU2F1ZGkgQXJhYmlhIGFuZCBhIGZldyBvdGhlciBHdWxmIHByb2R1Y2VycyB0byByZWluIGluIHRoZSBpbmNyZW1lbnRhbCBvdXRwdXQgdGhleSBwdXQgaW50byB0aGUgbWFya2V0LCIgc2FpZCBTYW11ZWwgQ2lzenVrLCBvaWwgYW5hbHlzdCBhdCB0aGUgU3dlZGlzaCBFbmVyZ3kgQWdlbmN5LiBCZWNhdXNlIG9mIHNhbmN0aW9ucywgSXJhbidzIG91dHB1dCBpcyBkb3duIGEgbWlsbGlvbiBiYXJyZWxzIHBlciBkYXkgc2luY2UgdGhlIHN0YXJ0IG9mIDIwMTIgdG8gMi43IG1pbGxpb24gd2hpbGUgSXJhcSwgcmVjb3ZlcmluZyBmcm9tIHllYXJzIG9mIHdhciBhbmQgc2FuY3Rpb25zIHVuZGVyIFNhZGRhbSBIdXNzZWluLCBoYXMgYm9vc3RlZCBwcm9kdWN0aW9uIHRvIG5lYXJseSAzIG1pbGxpb24uICJJcmFuJ3MgcG9zaXRpb24gaGFzIGJlZW4gc3RyZW5ndGhlbmVkIGFmdGVyIHRoZSBHZW5ldmEgZGVhbCwgYnV0IHRoZXJlIGlzIHN0aWxsIGEgbG9uZyB3YXkgdG8gZ28sIiBzYWlkIGVuZXJneSBjb25zdWx0YW50IE1laGRpIFZhcnppLCBmb3JtZXJseSBvZiBzdGF0ZSBOYXRpb25hbCBJcmFuaWFuIE9pbCBDb21wYW55LiAiVGhlIGJvdHRvbSBsaW5lIGlzIHRoZSBJcmFuaWFucyBkb24ndCB3YW50IHRvIHJvY2sgdGhlIGJvYXQgYW5kIHB1dCAkMTAwIG9pbCB1bmRlciB0aHJlYXQsIHNvIHRoZXkgbmVlZCB0aGUgY29vcGVyYXRpb24gb2YgdGhlIFNhdWRpcy4iIE9pbCBwcmljZXMgbm93IG5lYXIgJDExMCBhIGJhcnJlbCBhcmUgY2xvc2UgdG8gaWRlYWwgZm9yIFNhdWRpIEFyYWJpYSwgT1BFQydzIG1vc3QgaW5mbHVlbnRpYWwgcHJvZHVjZXIgYmVjYXVzZSBvZiBpdHMgIG9uZS10aGlyZCBzaGFyZSBvZiBncm91cCBvdXRwdXQsIGFuZCBpdHMgcG9zaXRpb24gYXMgdGhlIG9ubHkgcHJvZHVjZXIgZ2xvYmFsbHkgdGhhdCBrZWVwcyBhbnkgc2lnbmlmaWNhbnQgc3BhcmUgY2FwYWNpdHkuIFJpeWFkaCBwdW1wZWQgYXQgcmVjb3JkIGxldmVscyBhYm92ZSAxMCBtaWxsaW9uIGJhcnJlbHMgcGVyIGRheSB3aGVuIHNhbmN0aW9ucyB3ZXJlIGltcG9zZWQgb24gSXJhbiBhbmQgdG8gZmlsbCB0aGUgZ2FwIGxlZnQgYnkgcG9zdCBjaXZpbCB3YXIgZGlzcnVwdGlvbiBpbiBMaWJ5YSwgdGhyb3R0bGluZyBiYWNrIGEgbGl0dGxlIHJlY2VudGx5IHRvIHN1cHBvcnQgcHJpY2VzLgoKVGhlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHRoZSBvaWwgbWluaXN0ZXJzIG9mIFNhdWRpIEFyYWJpYSBhbmQgSXJhbiBpcyBrZXkgdG8gcG9saWN5LW1ha2luZyBpbiB0aGUgb2Z0ZW4tcXVhcnJlbHNvbWUgT1BFQy4gTG9uZy1zdGFuZGluZyBTYXVkaSBPaWwgTWluaXN0ZXIgQWxpIGFsLU5haW1pIGZpcnN0IG1ldCBoaXMgSXJhbmlhbiBjb3VudGVycGFydCBhdCBaYW5nYW5laCdzIE9QRUMgZGVidXQgaW4gSmFrYXJ0YSBpbiAxOTk3LCBhIG1lZXRpbmcgd2hlcmUgUml5YWRoIHB1c2hlZCB0aHJvdWdoIGEgc3VycHJpc2luZyBwcm9kdWN0aW9uIGluY3JlYXNlIHRoYXQgaGVscGVkIHNlbmQgb2lsIHByaWNlcyBjcmFzaGluZy4gU2F1ZGkgQXJhYmlhJ3MgbW9kZXJhdGUgcG9zaXRpb24gb24gb2lsIHByaWNlcywgdG8gc3VwcG9ydCB3b3JsZCBlY29ub21pYyBncm93dGgsIGhhcyBvZnRlbiBjbGFzaGVkIHdpdGggcHJpY2UgaGF3ayBJcmFuJ3Mgd2lzaCB0byBrZWVwIE9QRUMgcHJvZHVjdGlvbiBpbiBjaGVjayB0byBzdXBwb3J0IHByaWNlcy4gQnV0IFphbmdhbmVoLCB3aG8gc2VydmVkIGFzIG9pbCBtaW5pc3RlciB1bmRlciBJcmFuJ3MgcmVmb3JtaXN0IGdvdmVybm1lbnQgZnJvbSAxOTk3LTIwMDUsIGFuZCBoaXMgdHJ1c3RlZCBhaWRlLCBIb3NzZWluIEthemVtcG91ciBBcmRlYmlsaSwgYXJlIHJlc3BlY3RlZCB3aXRoaW4gT1BFQyBhbmQgd2lsbCB3YW50IHRvIGJlIGF0IHRoZSBjZW50ZXIgb2YgbmVnb3RpYXRpb25zLiBJcmFuJ3Mgb2lsIG1pbmlzdGVyIHVuZGVyIGZvcm1lciBQcmVzaWRlbnQgQWhtYWRpbmVqYWQgd2FzIFJvc3RhbSBRYXNlbWkgYSBmb3JtZXIgY29tbWFuZGVyIG9mIHRoZSBSZXZvbHV0aW9uYXJ5IEd1YXJkJ3MgZW5naW5lZXJpbmcgd2luZywgS2hhdGFtIGFsLUFuYmlhIGFuZCBkaWQgbm90IHBsYXkgYSBzaWduaWZpY2FudCByb2xlIGF0IE9QRUMuIFdoaWxlIHRoZSBvaWwgcHJpY2UgaGF3ay12ZXJzdXMtZG92ZSBkeW5hbWljIHBlcnNpc3RzIGJldHdlZW4gU3VubmkgTXVzbGltIFNhdWRpIEFyYWJpYSBhbmQgU2hpJ2l0ZSBNdXNsaW0gSXJhbiwgdGhlaXIgcHJpY2UgYXNwaXJhdGlvbnMgaGF2ZSBjb252ZXJnZWQgYXJvdW5kIHRyaXBsZSBkaWdpdCBvaWwuICJTYXVkaSBBcmFiaWEgYW5kIElyYW4gZG9uJ3QgdHJ1c3QgZWFjaCBvdGhlciwiIHNhaWQgVmFyemksICJCdXQgdGhlIFNhdWRpcyB3aWxsIG5vdCBncmF0dWl0b3VzbHkgcmFpc2UgdGVuc2lvbnMgd2l0aGluIE9QRUMuIiBUaGUgY29tYmluYXRpb24gb2YgYSByZW5haXNzYW5jZSBmb3IgYm90aCBJcmFuIGFuZCBJcmFxLCBhbHNvIFNoaSdpdGUtbGVkLCBhcmUgY2F1c2luZyBqaXR0ZXJzIGZvciBSaXlhZGgsIGNvbmNlcm5lZCB0aGF0IGl0cyBsb25nLXN0YW5kaW5nIGJvbmQgd2l0aCB0aGUgVW5pdGVkIFN0YXRlcyBpcyBpbiBqZW9wYXJkeS4gIlNhdWRpIEFyYWJpYSBpcyB3b3JyaWVkIHRoYXQgdGhlIFVuaXRlZCBTdGF0ZXMgaXMgZHJhd2luZyBjbG9zZXIgdG8gSXJhbiwgYWZ0ZXIgdGhlIEdlbmV2YSB0YWxrcyBhbmQgaXQgZmVhcnMgaXQgY291bGQgYmUgbG9zaW5nIGl0cyBzdHJhdGVnaWNhbGx5IGltcG9ydGFudCBwb3NpdGlvbiBpbiBVLlMuIGV5ZXMgc2hvdWxkIHRoZSBkZXRlbnRlIGNvbnRpbnVlLCIgc2FpZCBDaXN6dWsuIFphbmdhbmVoIGhhcyBhbHJlYWR5IGJlZW4gaW4gY29udGFjdCB3aXRoIHRoZSBiaWcgV2VzdGVybiBvaWwgY29tcGFuaWVzIHdobyB3b3VsZCBpbnZlc3QgaW4gSXJhbiBvbmNlIHNhbmN0aW9ucyBhcmUgbGlmdGVkLiBCdXQgYSByYXBpZCByZWNvdmVyeSBpbiBvdXRwdXQgaXMgdW5saWtlbHkuIFBldGVyIFdlbGxzIG9mIGdlb2xvZ2ljYWwgY29uc3VsdGFuY3kgTmVmdGV4LCB3aG8gaGFzIHdvcmtlZCBpbiBJcmFuLCBzYWlkIGl0IGNvdWxkIHByb2JhYmx5IHJhaXNlIG91dHB1dCB0byAzIG1pbGxpb24gdG8gMy41IG1pbGxpb24gYmFycmVscyBwZXIgZGF5IHdpdGhpbiBzaXggbW9udGhzIG9mIHRoZSBsaWZ0aW5nIG9mIHNhbmN0aW9ucyBidXQgd291bGQgc3RydWdnbGUgYmV5b25kIDQgbWlsbGlvbi4gIkluIHRoZSBsb25nIHRlcm0sIElyYW4gd29uJ3QgYmUgYWJsZSB0byBrZWVwIHVwIHdpdGggSXJhcSBubyBtYXR0ZXIgaG93IG1hbnkgY29tcGFuaWVzIHBpbGUgaW4gYW5kIGludmVzdCwiIFdlbGxzIHNhaWQuICJUaGUgY291bnRyeSdzIGZpZWxkcyBoYXZlIGJlZW4gaW4gcHJvZHVjdGlvbiBmb3IgYSBsb25nLCBsb25nIHRpbWUuIiBPUEVDIG1heSBmYWlsIGFnYWluIHRvIGFncmVlIHRvIGFwcG9pbnQgYSBuZXcgc2VjcmV0YXJ5IGdlbmVyYWwgdG8gcmVwbGFjZSB0aGUgbG9uZy1zdGFuZGluZyBMaWJ5YW4gQWJkdWxsYWggYWwtQmFkcmkuIElyYW4gYW5kIFNhdWRpIGJvdGggaGF2ZSBjYW5kaWRhdGVzIGFuZCBuZWl0aGVyIHdpbGwgZ2l2ZSB3YXkuICJDZXJ0YWlubHkgd2Ugd2lsbCBub3QgbGV0IHRob3NlIGNvdW50cmllcyB0aGF0IGFyZSBvcHByZXNzaXZlIGFnYWluc3QgSXJhbiB0byB0YWtlIHRoZSByb2xlIG9mIHRoZSBzZWNyZXRhcnkgZ2VuZXJhbCwiIFphbmdhbmVoIHNhaWQgaW4gU2VwdGVtYmVyLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKx5FMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGRjN2YzYjVkMGE2YjA2NzE=</field><field name="symbol" class="java.lang.String">rO0ABXQABEdVTEY=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUK3Cq8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzFwo9cKPX</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzFwo9cKPX</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzAo9cKPXD</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzFwo9cKPX</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyPXCj1wo9</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAOEA==</field><field name="id" class="java.lang.String">rO0ABXQAEDUyYTZhNDZlNDk1YjcwZmU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHPVAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExNTI4</field><field name="title" class="java.lang.String">rO0ABXQAN1NoZWxsIFRhcmdldGVkIFdpdGggQlAgaW4gRVUgUHJpY2UgRml4aW5nIFByb2JlIGZvciBPaWw=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6mjyiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDQ2ZjMyMzQxMWQxY2YyMDE=</field><field name="symbol" class="java.lang.String">rO0ABXQABE1IRkk=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6rtYSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBLxmZmZmZm</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBL+ZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBLszMzMzMz</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBLwAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBK49cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAABFRNA==</field><field name="id" class="java.lang.String">rO0ABXQAEDIwMDU5NGY4MDM1ZmE1Njg=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJABAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM0Nzc=</field><field name="title" class="java.lang.String">rO0ABXQAQUNvbW1vZGl0eSBQcmljZXMgV3JvbmcgYXMgT2Z0ZW4gYXMgMjcgUGVyY2VudCBvZiBUaW1lIGZvciBUcmFkZXJz</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGblfyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGE1ZmZiZjg1OTM3MTk0ZTI=</field><field name="symbol" class="java.lang.String">rO0ABXQACEdMQ05GLlBL</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGgvFiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAUzMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAU4UeuFHrh</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAUwo9cKPXD</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAU4UeuFHrh</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAUR64UeuFI</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAKKA==</field><field name="id" class="java.lang.String">rO0ABXQAEDYyODg1MzdkNzAwOTFhOTI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHfPAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwODk=</field><field name="title" class="java.lang.String">rO0ABXQAOklyYW4gT2ZmZXJzIHRvIFNoaXAgQ3J1ZGUgdG8gSW5kaWEgZm9yIEZyZWUgdG8gQm9vc3QgU2FsZXM=</field><field name="content" class="java.lang.String">rO0ABXQMAUlyYW4gaXMgb2ZmZXJpbmcgZnJlZSBkZWxpdmVyeSBvZiBjcnVkZSB0byBtYWpvciBjbGllbnQgSW5kaWEsIGluZHVzdHJ5IHNvdXJjZXMgc2FpZCwgc2lnbmFsaW5nIHRoYXQgdG91Z2ggV2VzdGVybiBzYW5jdGlvbnMgd2hpY2ggaGF2ZSBzbGFzaGVkIGl0cyBleHBvcnRzIGluIGhhbGYgYXJlIGRyaXZpbmcgVGVocmFuIHRvIGluY3JlYXNpbmdseSBkZXNwZXJhdGUgbWVhc3VyZXMgdG8ga2VlcCBvaWwgZmxvd2luZy4gVGhlIFVuaXRlZCBTdGF0ZXMgaGFzIHlldCB0byBlYXNlIHRoZSBwcmVzc3VyZSBvbiBBc2lhbiBidXllcnMgdG8gY29udGludWUgcmVkdWNpbmcgcHVyY2hhc2VzIGZyb20gdGhlIE9QRUMgbWVtYmVyLCBldmVuIHRob3VnaCBJcmFuIGFuZCB3b3JsZCBwb3dlcnMgYmVnYW4gdHdvIGRheXMgb2YgdGFsa3Mgb24gVGh1cnNkYXkgaG9waW5nIHRvIHJlYWNoIGEgImZpcnN0IHN0ZXAiIHRvd2FyZCBlbmRpbmcgdGhlIGRlY2FkZS1vbGQgc3RhbmRvZmYgb3ZlciBUZWhyYW4ncyBkaXNwdXRlZCBudWNsZWFyIHByb2dyYW0uIFRoZSBkcm9wIGluIGV4cG9ydHMgaXMgY29zdGluZyBJcmFuIGJpbGxpb25zIG9mIGRvbGxhcnMgaW4gbG9zdCByZXZlbnVlIGV2ZXJ5IG1vbnRoLiBUZWhyYW4gaXMgYWxzbyB1bmFibGUgdG8gcmVwYXRyaWF0ZSBtb3N0IG9mIHRoZSBtb25leSBlYXJuZWQgZnJvbSBvaWwgaXQgZG9lcyBtYW5hZ2UgdG8gc2VsbCwgYXMgdGhlIHNhbmN0aW9ucyBoYXZlIGN1dCBvZmYgYmFuayB0cmFuc2ZlciBmYWNpbGl0aWVzLCBjcmlwcGxpbmcgaXRzIGVjb25vbXkgYnkgY2hva2luZyBvZmYgaXRzIGJpZ2dlc3QgcmV2ZW51ZSBzdHJlYW0uIERlc3BpdGUgdGhlIG5lYXIgaGFsdCBvZiBwZXRyb2RvbGxhciBwYXltZW50cywgSXJhbiBpcyByZXNvcnRpbmcgdG8gbWVhc3VyZXMgc3VjaCBhcyBvZmZlcmluZyBkZWVwIGRpc2NvdW50cyBvbiBvaWwgYW5kIG5vdyBmcmVlIGRlbGl2ZXJ5IHRvIEluZGlhLCBhY2NvcmRpbmcgdG8gc291cmNlcyB3aG8gcmVxdWVzdGVkIGFub255bWl0eSBiZWNhdXNlIG9mIHRoZSBzZW5zaXRpdml0eSBvZiB0aGUgaXNzdWUuIElyYW4ncyByZW1haW5pbmcgSW5kaWFuIGNsaWVudHMsIE1hbmdhbG9yZSBSZWZpbmVyeSBhbmQgUGV0cm9jaGVtaWNhbHMgTHRkLiwgRXNzYXIgT2lsIGFuZCBJbmRpYW4gT2lsIENvcnAuLCBjb3VsZCBzYXZlIGZyZWlnaHQgb2YgNzAgY2VudHMgdG8gJDEgYSBiYXJyZWwgb24gcHVyY2hhc2VzIGZyb20gSXJhbiwgc2FpZCBvbmUgb2YgdGhlIHNvdXJjZXMuIFRlaHJhbiBpcyBhbHNvIG9mZmVyaW5nIEluZGlhbiBidXllcnMgYSBkaXNjb3VudCBvbiBwcmljZSBpZiByZWZpbmVycyByYWlzZSBwdXJjaGFzZXMsIHRoZSBzb3VyY2VzIHNhaWQuICJUaGUgbW9yZSB5b3UgYnV5LCB0aGUgbW9yZSBpbmNlbnRpdmVzIHlvdSBnZXQuIElmIGEgcmVmaW5lciBidXlzIDMwIG1pbGxpb24gYmFycmVscyBvZiBJcmFuaWFuIG9pbCBpbiBhIHllYXIgdGhlbiB0aGUgZGlzY291bnQgdHJhbnNsYXRlcyB0byAyNSBjZW50cyBwZXIgYmFycmVsLCIgdGhpcyBzb3VyY2UgYWRkZWQuIElyYW4gYWxyZWFkeSBvZmZlcnMgOTAgZGF5cycgY3JlZGl0IG9uIGNydWRlIHNhbGVzIHRvIEluZGlhbiByZWZpbmVycyB3aGlsZSBtb3N0IG90aGVyIHByb2R1Y2VycyBzdGljayB0byAzMCBkYXlzJyBjcmVkaXQuIFdoaWxlIGFueSBkaXNjb3VudCB3b3VsZCBiZSBhdHRyYWN0aXZlIGFzIEluZGlhIHRyaWVzIHRvIGN1cmIgYW4gb2lsIGltcG9ydCBiaWxsIHRoYXQgd2FzIGFyb3VuZCAkMTcwIGJpbGxpb24gaW4gMjAxMi8xMywgaXQgbGlrZWx5IHdvdWxkIGJlIHdhcnkgb2YgcmFpc2luZyBpbXBvcnRzIGp1c3QgcHJpb3IgdG8gYSByZXZpZXcgb2YgaXRzIHdhaXZlciBmcm9tIFUuUy4gc2FuY3Rpb25zLiBJbmRpYSdzIHNpeC1tb250aCBleGVtcHRpb24gY29tZXMgdXAgZm9yIHJlbmV3YWwgaW4gZWFybHkgRGVjZW1iZXIsIHNob3J0bHkgYWZ0ZXIgdG9wIFUuUy4gZW5lcmd5IGRpcGxvbWF0IENhcmxvcyBQYXNjdWFsJ3MgY3VycmVudCB2aXNpdCB0byBOZXcgRGVsaGkuIFNvdXJjZXMgaGF2ZSBzYWlkIHRoZSBVbml0ZWQgU3RhdGVzIGlzIHVubGlrZWx5IHRvIGFsbG93IElyYW4ncyBleHBvcnRzIHRvIHJpc2UgYmVmb3JlIGEgZGVhbCBpcyBzdHJ1Y2sgd2l0aCBUZWhyYW4uIEJvdGggc2lkZXMgaW52b2x2ZWQgaW4gdGhlIEdlbmV2YSB0YWxrcyBoYXZlIHNhaWQgYSBicmVha3Rocm91Z2ggd2FzIGZhciBmcm9tIGNlcnRhaW4uIEluZGlhIHNvIGZhciBsb29rcyB3ZWxsIG9uIHRyYWNrIHRvIG1lZXQgVS5TLiBjb25kaXRpb25zIHRvIHJlbmV3IGl0cyB3YWl2ZXIuIERhaWx5IGltcG9ydHMgZnJvbSBJcmFuIHNsaWQgMzQgcGVyY2VudCBpbiBKdW5lLVNlcHRlbWJlciBmcm9tIHRoZSBzaXggbW9udGhzIGJldHdlZW4gRGVjZW1iZXIgMjAxMiBhbmQgTWF5IDIwMTMsIGRhdGEgZnJvbSB0cmFkZSBzb3VyY2VzIHNob3cuIEluZGlhIGlzIG9uZSBvZiBJcmFuJ3MgZmV3IHJlbWFpbmluZyBjbGllbnRzIGFsb25nIHdpdGggb3RoZXIgQXNpYW4gYnV5ZXJzIENoaW5hLCBKYXBhbiBhbmQgU291dGggS29yZWEuIEluIEluZGlhLCB0aGVyZSBpcyBhYm91dCAkNS4zIGJpbGxpb24gb2YgSXJhbmlhbiBvaWwgbW9uZXkgaGVsZCB1cCBieSB0aGUgc2FuY3Rpb25zLiBPZiB0aGUgdG90YWwsIGFib3V0ICQxLjggYmlsbGlvbiBpcyB3aXRoIHRoZSBvaWwgY29tcGFuaWVzIHRoYXQgaGF2ZSBib3VnaHQgY3J1ZGUgZnJvbSBJcmFuIGFuZCB0aGUgcmVtYWluZGVyIGlzIGhlbGQgd2l0aCBhIGJhbmssIHNvdXJjZXMgc2FpZC4gSW4gU291dGggS29yZWEsIHRvdGFsIElyYW5pYW4gbW9uZXkgc3R1Y2sgaW4gYmFuayBhY2NvdW50cyBpcyBtb3JlIHRoYW4gJDUgYmlsbGlvbiwgYSBzb3VyY2Ugd2l0aCBkaXJlY3Qga25vd2xlZGdlIG9mIHRoZSBtYXR0ZXIgc2FpZC4gSW4gSmFwYW4sIGEgc2ltaWxhciBhbW91bnQgb2YgSXJhbmlhbiBvaWwgbW9uZXkgaGFzIGJlZW4gaGVsZCB1cCBzaW5jZSB0aGUgYmVnaW5uaW5nIG9mIHRoZSB5ZWFyLCBhY2NvcmRpbmcgdG8gc291cmNlcy4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUIxJVcAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGVkM2JiZjdlZWZiYTVjYjk=</field><field name="symbol" class="java.lang.String">rO0ABXQAA1NJWA==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUI2S7MAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCSPXCj1wp</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCgo9cKPXD</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCQAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCTMzMzMzN</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBBAUeuFHrh</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAA43dA==</field><field name="id" class="java.lang.String">rO0ABXQAEDdjN2M1MGE1YTJmYzRiYWQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE6lAAAA==</field></document></documents><date>2015-05-07T12:13:56-0500</date></cacheEntry>
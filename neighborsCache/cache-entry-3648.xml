<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hUcmluZSBEYWhsIGEgYnJva2VyIGF0IE5vcndheXMgc2Vjb25kbGFyZ2VzdCByZWFsdG9yIEROQiBFaWVuZG9tIHNheXMgdGhlIG51bWJlciBvZiBwb3RlbnRpYWwgYnV5ZXJzIGF0IGhlciB2aWV3aW5ncyBoYXMgZmFsbGVuIGJ5IDUwIHBlcmNlbnQgaW4gdGhlIHBhc3QgeWVhciBhbmQgc2hlIG5vdyBoYXMgdG8gbWFrZSBhcyBtYW55IGFzIDE1IGNhbGxzIHRvIHNlbGwgYW4gT3NsbyBhcGFydG1lbnQgQSB5ZWFyIGFnbyBEYWhsIHNheXMgc2VsbGluZyB3YXMgYXMgZWFzeSBhcyBzaXR0aW5nIGF0IGEgY2FzaCByZWdpc3RlciBUaGUgY2hhbmdlIGNhbWUgaW4gdGhlIHN1bW1lciBhbmQgc2luY2UgQXVndXN0IGFuZCBTZXB0ZW1iZXIgaXQgaGFzIGJlZW4gcmVhbGx5IGRpZmZlcmVudCBEYWhsIHNhaWQgaW4gYW4gaW50ZXJ2aWV3IGF0IEROQiBFaWVuZG9tcyBvZmZpY2Ugb24gT3Nsb3MgdXBzY2FsZSB3ZXN0IHNpZGUgSXRzIHZlcnkgaGFyZCB0byBzYXkgd2hpY2ggcHJvcGVydHkgaXMgYSBkaWZmaWN1bHQgaG91c2UgdG8gc2VsbCBhbmQgd2hpY2ggaXMgZWFzeSBJbiBhIG5vcm1hbCBtYXJrZXQgdGhhdHMgZWFzeSB0byBkbyBOb3J3YXlzIGhvdXNpbmcgbWFya2V0IHdoaWNoIE5vYmVsIExhdXJlYXRlIFJvYmVydCBKIFNoaWxsZXIgZGVzY3JpYmVkIGluIDIwMTIgYXMgYmVpbmcgaW4gYSBidWJibGUgaXMgbm93IGRlZmxhdGluZyBmYXN0ZXIgdGhhbiBldmVuIHRoZSBjZW50cmFsIGJhbmsgaGFkIHByZWRpY3RlZCBhZnRlciByZWd1bGF0b3JzIGludHJvZHVjZWQgYSBzbGF0ZSBvZiBtZWFzdXJlcyB0byBjb29sIGRlbWFuZCBBZnRlciBob21lIHByaWNlcyBkb3VibGVkIG92ZXIgdGhlIHBhc3QgZGVjYWRlIGZ1ZWxlZCBieSBsb3cgaW50ZXJlc3QgcmF0ZXMgYW5kIHN1cmdpbmcgb2lsIHdlYWx0aCB0aGV5dmUgc2xpZCBmb3IgdHdvIGNvbnNlY3V0aXZlIG1vbnRocyByYWlzaW5nIGNvbmNlcm4gdGhhdCByZWFsIGVzdGF0ZSBjb3VsZCBiZSBpbiBmb3IgYSBoYXJkIGxhbmRpbmcgYW1pZCByZWNvcmQgaG91c2Vob2xkIGRlYnQgV2hlbiBpdCBjb21lcyB0byByZXNpZGVudGlhbCBwcm9wZXJ0eSBOb3J3YXkgaXMgYW1vbmcgY291bnRyaWVzIHN1Y2ggYXMgQ2FuYWRhIEF1c3RyYWxpYSBhbmQgU3dpdHplcmxhbmQgY29uc2lkZXJlZCBoaWdoZmx5ZXJzIGluIHRoZSBwYXN0IGZldyB5ZWFycyBhY2NvcmRpbmcgdG8gR29sZG1hbiBTYWNocyBHcm91cCBJbmMgVGhlc2UgbWFya2V0cyBoYXZlIGJlbmVmaXRlZCBmcm9tIHJvYnVzdCByZWNvdmVyaWVzIGFzIHdlbGwgYXMgYSBzaWduaWZpY2FudCBkb3NlIG9mIGluYWR2ZXJ0ZW50IG1vbmV0YXJ5IHBvbGljaWVzIGZyb20gdGhlIHdvcmxkcyBsYXJnZXN0IGNlbnRyYWwgYmFua3MgTm9yd2F5IGhhcyBzZWVuIHNvbWUgb2YgdGhlIG1vc3QgZHJhbWF0aWMgaW5jcmVhc2VzIHdpdGggaG91c2UgcHJpY2UgZ2FpbnMgb2YgY2xvc2UgdG8gMzAgcGVyY2VudCBzaW5jZSB0aGUgZmlyc3QgcXVhcnRlciBvZiAyMDA5IGNvbXBhcmVkIHdpdGggaW5jcmVhc2VzIG9mIG1vcmUgdGhhbiAyMCBwZXJjZW50IGZvciBTd2l0emVybGFuZCBhbmQgYWxtb3N0IDQwIHBlcmNlbnQgZm9yIElzcmFlbCBhY2NvcmRpbmcgdG8gYW4gT2N0IDIzIEdvbGRtYW4gU2FjaHMgcmVwb3J0IE9zbG8gUHJpY2VzIFRoZSBhdmVyYWdlIGhvbWUgcHJpY2UgaW4gT3NsbyB3YXMgYWJvdXQgNDU1IG1pbGxpb24ga3JvbmVyIDc0MDAwMCBsYXN0IG1vbnRoIGFjY29yZGluZyB0byBhIHJlcG9ydCBieSByZWFsIGVzdGF0ZSBicm9rZXJzIHZlcnN1cyB0aGUgODA2MDAwIGluIE5ldyBZb3JrIGFzIG9mIFNlcHQgMzAgUmVhbCBFc3RhdGUgQm9hcmQgb2YgTmV3IFlvcmsgZmlndXJlcyBzaG93IGFuZCAzMzEzMzggcG91bmRzIDUyOTc0MyBpbiBMb25kb24gU3VyZ2luZyBOb3J3ZWdpYW4gcHJpY2VzIGRyaXZlbiBieSBsb3cgYm9ycm93aW5nIGNvc3RzIGhhdmUgaGVscGVkIGZ1ZWwgY29uc3VtZXIgZGVidCB0byB0d2ljZSBkaXNwb3NhYmxlIGluY29tZXMgcHJvbXB0aW5nIHdhcm5pbmdzIGZyb20gcG9saWN5IG1ha2VycyBhbmQgZWNvbm9taXN0cyB0aGF0IHRoZSBkZXZlbG9wbWVudCBpcyB1bnN1c3RhaW5hYmxlIEluIHJlc3BvbnNlIHJlZ3VsYXRvcnMgaW50cm9kdWNlZCBtZWFzdXJlcyB0byBjb29sIGRlbWFuZCBpbmNsdWRpbmcgY2FwcGluZyBsb2FuIHNpemVzIGF0IDg1IHBlcmNlbnQgb2YgYSBwcm9wZXJ0eXMgdmFsdWUgYXMgd2VsbCBhcyBoaWdoZXIgY2FwaXRhbCByZXF1aXJlbWVudHMgYW5kIHJpc2sgd2VpZ2h0cyBvbiBtb3J0Z2FnZXMgSG91c2UgcHJpY2VzIHNsaWQgYSBzZWFzb25hbGx5IGFkanVzdGVkIDE1IHBlcmNlbnQgaW4gT2N0b2JlciBmcm9tIGEgbW9udGggZWFybGllciBkcm9wcGluZyBmb3IgYSBzZWNvbmQgbW9udGggYWNjb3JkaW5nIHRvIGRhdGEgZnJvbSB0aGUgTm9yd2VnaWFuIFJlYWwgRXN0YXRlIEFnZW50cyBBc3NvY2lhdGlvbiBOb3JkZWEgUHJlZGljdGlvbiBOb3JkZWEgQmFuayBBQiB0aGUgbGFyZ2VzdCBOb3JkaWMgbGVuZGVyIGxhc3Qgd2VlayBmb3JlY2FzdCB0aGF0IGhvdXNlIHByaWNlcyB3aWxsIGZhbGwgMTUgcGVyY2VudCB0byAyMCBwZXJjZW50IG92ZXIgdGhlIG5leHQgdHdvIHllYXJzIGZvcmNpbmcgdGhlIGNlbnRyYWwgYmFuayB0byBjdXQgcmF0ZXMgdHdpY2UgbmV4dCB5ZWFyIGZyb20gdGhlIGN1cnJlbnQgMTUgcGVyY2VudCBQc3ljaG9sb2d5IGlzIG92ZXJ0YWtpbmcgdGhlIG1hcmtldCBzYWlkIFRlcmplIEhhbHZvcnNlbiBjaGllZiBleGVjdXRpdmUgb2ZmaWNlciBvZiBETkIgRWllbmRvbSBhIHN1YnNpZGlhcnkgb2YgTm9yd2F5cyBsYXJnZXN0IGJhbmsgRE5CIEFTQSBQZW9wbGUgaGF2ZSBiZWNvbWUgY2F1dGlvdXMgc2V0dGluZyBvZmYgYSBkb21pbm8gZWZmZWN0IHRoYXQgaXMgc2xvd2luZyBhY3Rpdml0eSBpbiB0aGUgbWFya2V0IHdoaWxlIHRoZXkgd2FpdCB0byBzZWUgd2hhdCB3aWxsIGhhcHBlbiBoZSBzYWlkIFRoZXJlIHdlcmUgMzEzOCBtb3JlIHJlc2lkZW50aWFsIHByb3BlcnRpZXMgb24gdGhlIG1hcmtldCBpbiBPY3RvYmVyIHRoYW4gYSB5ZWFyIGVhcmxpZXIgUmVhbHRvcnMgaGF2ZSB0byBiZSBtb3JlIHNraWxsZWQgaW4gZmluZGluZyB0aGUgcmlnaHQgYnV5ZXJzIGhlIHNhaWQgUGF0aWVuY2UgYW5kIGNyZWF0aXZpdHkgYWxvbmcgd2l0aCB0aGUgYWJpbGl0eSB0byBzb290aGUgYm90aCB0aGUgc2VsbGVycyBhbmQgYnV5ZXJzIGFib3V0IHRoZSB1bmNlcnRhaW50eSB3aWxsIGNvbWUgaW4gaGFuZHkgRGF5c29uTWFya2V0IFRoZSBhdmVyYWdlIG51bWJlciBvZiBkYXlzIGhvdXNlcyBzcGVudCBvbiB0aGUgbWFya2V0IGhhcyBpbmNyZWFzZWQgdG8gMzMgaW4gT2N0b2JlciA1IG1vcmUgdGhhbiBhIHllYXIgZWFybGllciBhY2NvcmRpbmcgdG8gdGhlIFJlYWwgRXN0YXRlIEFnZW50cyBBc3NvY2lhdGlvbiBEdXJpbmcgdGhlIGJvb20gdGhhdCBudW1iZXIgd2FzIGFzIGxvdyBhcyAxMiBhY2NvcmRpbmcgdG8gRE5CIEVpZW5kb20gTm9yd2F5cyBjYXBpdGFsIHNhdyBwcm9wZXJ0aWVzIHNwZW5kIDkgbW9yZSBkYXlzIG9uIHRoZSBtYXJrZXQgbGFzdCBtb250aCBjb21wYXJlZCB0byBPY3RvYmVyIDIwMTIgQ2VudHJhbCBCYW5rIEdvdmVybm9yIE9leXN0ZWluIE9sc2VuIGhhcyB3YXJuZWQgYWJvdXQgaG91c2luZyBpbWJhbGFuY2VzIGV2ZW4gYXMgbG93IGludGVyZXN0IHJhdGVzIGFicm9hZCBoYXZlIGZvcmNlZCBoaW0gdG8ga2VlcCByYXRlcyBhdCBuZWFyIGEgcmVjb3JkIGxvdyB0byBhdm9pZCBzcHVycmluZyBnYWlucyBpbiB0aGUgY291bnRyeXMgY3VycmVuY3kgT2xzZW4gaXMgbm93IHVuY29uY2VybmVkIGFib3V0IHRoZSBlZmZlY3RzIG9mIGEgaG91c2luZyBzbHVtcCBUaGUgZWNvbm9teSBjYW4gd2l0aHN0YW5kIGhvdXNlIHByaWNlIGRlY2xpbmVzIG92ZXIgYSBsb25nZXIgcGVyaW9kIE9sc2VuIHNhaWQgaW4gYW4gaW50ZXJ2aWV3IGF0IGhpcyBvZmZpY2Ugb24gT2N0IDI5IGluZGljYXRpbmcgdGhlIGJhbmsgd2lsbCBhdm9pZCBwb2xpY2llcyB0aGF0IGRyaXZlIHVwIHRoZSBwcm9wZXJ0eSBtYXJrZXQgVGhlIGJhbmsgc2lnbmFsZWQgaW4gU2VwdGVtYmVyIGl0IHdpbGwgbW92ZSB0b3dhcmQgaGlnaGVyIHJhdGVzIGFzIGVhcmx5IGFzIHN1bW1lciBvZiBuZXh0IHllYXIgRWNvbm9teSBTdGFsbGluZyBHcm93dGggaW4gTm9yd2F5cyA1MDAgYmlsbGlvbiBlY29ub215IGlzIHNob3dpbmcgc2lnbnMgb2Ygc3RhbGxpbmcgYXMgaG91c2Vob2xkIGRlYnQgYnVyZGVucyBjdXJiIHByaXZhdGUgZGVtYW5kIGFuZCBhZnRlciBwZXJzaXN0ZW50IGtyb25lIGFwcHJlY2lhdGlvbiBsYXN0IHllYXIgaHVydCBleHBvcnRzIE1haW5sYW5kIGdyb3NzIGRvbWVzdGljIHByb2R1Y3Qgd2hpY2ggZXhjbHVkZXMgb2lsIGFuZCBnYXMgcHJvZHVjdGlvbiB3aWxsIGV4cGFuZCAxNzUgcGVyY2VudCB0aGlzIHllYXIgdGhlIGNlbnRyYWwgYmFuayBmb3JlY2FzdCBpbiBTZXB0ZW1iZXIgSW4gMjAxMiBHRFAgYnkgdGhhdCBtZWFzdXJlIGdyZXcgYnkgMzQgcGVyY2VudCBNZWFud2hpbGUgYmFua3MgaW5jbHVkaW5nIEROQiBOb3J3YXlzIGxhcmdlc3QgbGVuZGVyIGhhdmUgcmFpc2VkIG1vcnRnYWdlIHJhdGVzIHRoaXMgeWVhciBpbmNyZWFzaW5nIHJldmVudWUgYW5kIGhlbHBpbmcgY29vbCBob3VzaW5nIE5vcndheSBsaWtlIFN3ZWRlbiBwbGFucyB0byBpbXBvc2UgY29yZSBjYXBpdGFsIHJlcXVpcmVtZW50cyBvbiBiYW5rcyB0aGF0IGV4Y2VlZCB0aG9zZSBzZXQgYnkgRXVyb3BlYW4gYW5kIGludGVybmF0aW9uYWwgcmVndWxhdG9ycyBUaGVzZSBpbmNsdWRlIHRhcmdldGluZyBjb3JlIGNhcGl0YWwgcmVxdWlyZW1lbnRzIGZvciBpdHMgYmFua3Mgb2YgMTAgcGVyY2VudCBvZiByaXNrd2VpZ2h0ZWQgYXNzZXRzIGJ5IEp1bHkgbmV4dCB5ZWFyIHVwIGZyb20gOSBwZXJjZW50IEZvciBlaWdodCBzeXN0ZW1pY2FsbHkgaXQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AHVhcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLHNjb3JlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMC0wNi0xMVQwMDowMDowMFogVE8gMjAxMy0wNy0zMVQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDUxNjQ=</field><field name="title" class="java.lang.String">rO0ABXQAN0NoaW5hIEhlbHBzIEZpcnN0LUhvbWUgQnV5ZXJzIFdoaWxlIEN1cmJpbmcgU3BlY3VsYXRvcnM=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATbtBSiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGYxNTY4YzliNjM3ZmU4OWY=</field><field name="symbol" class="java.lang.String">rO0ABXQABExPQU4=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATbyK4SAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/xR64UeuFI</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/xcKPXCj1x</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/wKPXCj1wp</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/xR64UeuFI</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/vXCj1wo9c</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAALuA==</field><field name="id" class="java.lang.String">rO0ABXQAEDI2NzJlMzBjNmJjOWVjNzk=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGRRAAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPzfyAQ==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDc0MjU=</field><field name="title" class="java.lang.String">rO0ABXQAOE5vcndheSBJbmNyZWFzZXMgQmVuY2htYXJrIFJhdGUgZm9yIEZpcnN0IFRpbWUgaW4gYSBZZWFy</field><field name="content" class="java.lang.String">rO0ABXQNFFRoZSBvdmVybmlnaHQgZGVwb3NpdCByYXRlIHdhcyByYWlzZWQgYnkgYSBxdWFydGVyIG9mIGEgcGVyY2VudGFnZSBwb2ludCB0byAyLjI1IHBlcmNlbnQsIHRoZSBPc2xvLWJhc2VkIGJhbmsgc2FpZCB0b2RheS4gVGhlIGRlY2lzaW9uIHdhcyBleHBlY3RlZCBieSAxNSBvZiB0aGUgMjAgZWNvbm9taXN0cyBzdXJ2ZXllZCBieSBCbG9vbWJlcmcuIFRoZSBiYW5rIHJlaXRlcmF0ZWQgYSBmb3JlY2FzdCBjYWxsaW5nIGZvciB0d28gbW9yZSBxdWFydGVyIHBvaW50IGluY3JlYXNlcyB0aGlzIHllYXIuIOKAnFRoZSB1cHR1cm4gaW4gdGhlIE5vcndlZ2lhbiBlY29ub215IGhhcyBnYWluZWQgYSBmaXJtIGZvb3Rpbmcs4oCdIEdvdmVybm9yIE9leXN0ZWluIE9sc2VuIHNhaWQgaW4gdGhlIHN0YXRlbWVudC4g4oCcU2V2ZXJhbCBvdGhlciBjZW50cmFsIGJhbmtzIGhhdmUgcmFpc2VkIHRoZWlyIGtleSByYXRlcy4gVGhlIGNvbnNpZGVyYXRpb24gb2Ygc3RhYmlsaXppbmcgYWN0aXZpdHkgYW5kIGluZmxhdGlvbiBzb21ld2hhdCBmdXJ0aGVyIGFoZWFkIHN1Z2dlc3RzIHRoYXQgdGhlIGtleSBwb2xpY3kgcmF0ZSBzaG91bGQgYmUgcmFpc2VkLuKAnSBPbHNlbiBpcyB0cnlpbmcgdG8gc3RlZXIgYSBjb25zdW1lci1kcml2ZW4gcmVjb3ZlcnkgaW4gc2V2ZW50aC1sYXJnZXN0IG9pbCBleHBvcnRlciBhcyB1bmVtcGxveW1lbnQgaGFzIGRpcHBlZCBiZWxvdyAzIHBlcmNlbnQsIHB1c2hpbmcgdXAgY3JlZGl0IGdyb3d0aCBhbmQgZnVlbGluZyBwcm9wZXJ0eSBwcmljZXMuIEluZmxhdGlvbiwgd2hpY2ggaGFzIGJlZW4gYmVsb3cgdGhlIGNlbnRyYWwgYmFua+KAmXMgMi41IHBlcmNlbnQgdGFyZ2V0IHNpbmNlIEp1bHkgMjAwOSwgYWNjZWxlcmF0ZWQgdG8gYSBuaW5lLW1vbnRoIGhpZ2ggaW4gQXByaWwuIEtyb25hIEdhaW5zIFRoZSBrcm9uZSB0cmFkZWQgMC4zIHBlcmNlbnQgaGlnaGVyIGFnYWluc3QgdGhlIGV1cm8gYXQgNy44MDMzIGF0IDI6MDggcC5tLiBpbiBPc2xvLiBBZ2FpbnN0IHRoZSBkb2xsYXIsIHRoZSBrcm9uZSB3YXMgdXAgMC4yIHBlcmNlbnQgYXQgNS41MDc2LiBUaGUgYmFuaywgd2hpY2ggZXhwZWN0cyB0byBsaWZ0IGl0cyBiZW5jaG1hcmsgdG8gYW4gYXZlcmFnZSBvZiA0Ljc1IHBlcmNlbnQgYnkgMjAxNCwgc2hlbHZlZCBhIHNlcmllcyBpbmNyZWFzZXMgaW4gTWF5IGxhc3QgeWVhciBvbiBjb25jZXJuIEV1cm9wZeKAmXMgZGVidCBjcmlzaXMgd291bGQgc3RpZmxlIGV4cG9ydHMuIFNpbmNlIHRoZW4sIGEgY29tbW9kaXR5IHByaWNlIGJvb20gaGFzIHNwdXJyZWQgaW5mbGF0aW9uLCBmb3JjaW5nIGJhbmtzIGZyb20gQXNpYSB0byBFdXJvcGUgdG8gcmFpc2UgcmF0ZXMuIFRoZSBFdXJvcGVhbiBDZW50cmFsIEJhbmsgYW5kIHBvbGljeSBtYWtlcnMgaW4gU3dlZGVuLCB0aGUgUGhpbGlwcGluZXMsIE1hbGF5c2lhIGFuZCBJbmRpYSBhbGwgdGlnaHRlbmVkIHBvbGljeSBpbiB0aGUgcGFzdCB0d28gbW9udGhzLiBFQ0IgUHJlc2lkZW50IEplYW4tQ2xhdWRlIFRyaWNoZXQgc2FpZCB0aGlzIHdlZWsgY2VudHJhbCBiYW5rZXJzIGFyZSB1bml0ZWQgaW4gZmlnaHRpbmcgaW5mbGF0aW9uLiDigJxPdGhlciBjZW50cmFsIGJhbmtzIGhhdmUgc3RhcnRlZCBoaWtpbmcgcmF0ZXMgZ2l2aW5nIE5vcmdlcyBCYW5rIG1vcmUgcm9vbSB0byBtYW5ldXZlciBiZWNhdXNlIHRoZSByYXRlIGRpZmZlcmVudGlhbHMgd2hpY2ggd291bGQgcHV0IGFuIHVwd2FyZCBwcmVzc3VyZSBvbiB0aGUgY3VycmVuY3kgaXMgYmVjb21pbmcgbGVzcyzigJ0gc2FpZCBHaXplbSBLYXJhLCBhbiBlY29ub21pc3QgYXQgQk5QIFBhcmliYXMgU0EsIGJ5IHBob25lIGZyb20gTG9uZG9uLiBTaGUgcHJlZGljdHMgdHdvIG1vcmUgaW5jcmVhc2VzIHRoaXMgeWVhciwgd2l0aCB0aGUgbmV4dCBjb21pbmcgaW4gU2VwdGVtYmVyLiBJbmZsYXRpb24gRXhjZWVkcyBOb3J3YXnigJlzIHVuZGVybHlpbmcgaW5mbGF0aW9uLCB3aGljaCBleGNsdWRlcyBlbmVyZ3kgY29zdHMgYW5kIHRheGVzLCBsYXN0IG1vbnRoIGV4Y2VlZGVkIE5vcmdlcyBCYW5r4oCZcyBlc3RpbWF0ZSBvZiAwLjkgcGVyY2VudCwgcGlja2luZyB1cCB0byAxLjMgcGVyY2VudCBpbiBBcHJpbC4gQSByZXBvcnQgZWFybGllciB0aGlzIHdlZWsgc2hvd2VkIE5vcndlZ2lhbiBjcmVkaXQgZ3Jvd3RoIGFjY2VsZXJhdGVkIHRvIDYuMyBwZXJjZW50IGluIE1hcmNoLCB0aGUgaGlnaGVzdCBzaW5jZSBKdWx5IDIwMDksIGFzIGNvbnN1bWVycyB0YWtlIGFkdmFudGFnZSBvZiBsb3cgYm9ycm93aW5nIGNvc3RzLiBTdXJ2ZXllZCB1bmVtcGxveW1lbnQgZmVsbCB0byAzLjEgcGVyY2VudCBpbiBGZWJydWFyeSwgdGhlIGxvd2VzdCBpbiAxOSBtb250aHMsIGFsc28gaGVscGluZyB0byBmdWVsIHNwZW5kaW5nIGFuZCBkZW1hbmQgaW4gdGhlIGVjb25vbXkuIFJlZ2lzdGVyZWQgdW5lbXBsb3ltZW50IHdhcyAyLjggcGVyY2VudCBpbiBBcHJpbC4gVGhlIGJhbmssIHdoaWNoIGluIDIwMDkgYmVjYW1lIHRoZSBmaXJzdCBpbiBFdXJvcGUgdG8gdGlnaHRlbiBwb2xpY3kgYXMgdGhlIGZpbmFuY2lhbCBjcmlzaXMgZWFzZWQsIGhhcyBoZWxkIHJhdGVzIG92ZXIgdGhlIHBhc3QgeWVhciBpbiBwYXJ0IHRvIGxpbWl0IGdhaW5zIGluIHRoZSBrcm9uZSBhbmQgaGVscCBleHBvcnRlcnMuIFRoZSBrcm9uZSB0aGlzIG1vbnRoIHJvc2UgdG8gdGhlIGhpZ2hlc3QgaW4gMzMgbW9udGhzIGFnYWluc3QgdGhlIGRvbGxhciBhcyBvaWwgcHJpY2VzIHJhbGxpZWQgZm9sbG93aW5nIHVucmVzdCBpbiBOb3J0aCBBZnJpY2EgYW5kIHRoZSBNaWRkbGUgRWFzdC4gTm90IFdvcnJpZWQgRGVwdXR5IEdvdmVybm9yIEphbiBGLiBRdmlnc3RhZCBzaWduYWxlZCBpbiBNYXJjaCB0aGF0IGVmZm9ydHMgdG8gbGltaXQgY3VycmVuY3kgZ2FpbnMgd2lsbCBwbGF5IGEgc21hbGxlciByb2xlIGluIHNoYXBpbmcgcG9saWN5LiBUaGUga3JvbmUg4oCcaXMgc3Ryb25nLCBidXQgd2UgYXJlIG5vdCB3b3JyaWVkIGVzcGVjaWFsbHks4oCdIGhlIHNhaWQgaW4gYSBNYXJjaCAxNiBpbnRlcnZpZXcuIFNpbmNlIHRoZW4sIHRoZSBrcm9uZSBoYXMgc3RyZW5ndGhlbmVkIDIuNiBwZXJjZW50IGFnYWluc3QgdGhlIGRvbGxhciBhbmQgMC44IHBlcmNlbnQgYWdhaW5zdCB0aGUgZXVyby4gTm9yd2F54oCZcyBtYWlubGFuZCBlY29ub215LCB3aGljaCBleGNsdWRlcyBvaWwsIGdhcyBhbmQgc2hpcHBpbmcsIHdpbGwgZXhwYW5kIDMuMjUgcGVyY2VudCB0aGlzIHllYXIgYW5kIDMuNzUgcGVyY2VudCBpbiAyMDEyIGFzIGV4cG9ydCBkZW1hbmQgcGlja3MgdXAsIHRoZSBjZW50cmFsIGJhbmsgZXN0aW1hdGVzLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAS/ik2CAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDNlM2Y2YjYxZjRkMDEwMWQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABUJOUFFG</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAS/nubyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBTfrhR64Uf</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBTfrhR64Uf</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBTfrhR64Uf</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBTfrhR64Uf</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBS8AAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAyA==</field><field name="id" class="java.lang.String">rO0ABXQAEGMxNjMyM2E5OTgzMWY5NDI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFdWAAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPyXtwA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQAAzE3OA==</field><field name="title" class="java.lang.String">rO0ABXQAPEN1cnJlbmN5IFJoZXRvcmljIEhlYXRzIFVwIFdpdGggTmV3IFplYWxhbmQgSm9pbmluZyBXYXJuaW5ncw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATz2L+cAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDhlY2I5ZmI2ZTZhYzMxNTI=</field><field name="symbol" class="java.lang.String">rO0ABXQABlJCQS5UTw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATz7VkMAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3DMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3D1wo9cKP</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA2q4UeuFHs</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3BR64UeuF</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA19cKPXCj2</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAEfgA==</field><field name="id" class="java.lang.String">rO0ABXQAEDFjNDc5MmJmZWNkYzYzZDk=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mF+lAAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPxgCaQ==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExNzgx</field><field name="title" class="java.lang.String">rO0ABXQAL0NoaW5hIENyZWRpdCBTcXVlZXplIFByb21wdHMgU3VpY2lkZXMsIFZpb2xlbmNl</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATN8nKMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGJhYzM0NzI1NmU0ZDE0ZTM=</field><field name="symbol" class="java.lang.String">rO0ABXQABExPQU4=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATOBwv8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/yj1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/yj1wo9cKP</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/wAAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/wKPXCj1wp</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/tcKPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAH0A==</field><field name="id" class="java.lang.String">rO0ABXQAEDhlMzNhZjQ5YjBjMTQ4OTc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mF7zAAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPxJbbA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDI0MTQ=</field><field name="title" class="java.lang.String">rO0ABXQAP1NwYWluIFJlYm91bmRpbmcgRnJvbSBXb3JzdCBFY29ub215IGFzIEV4cG9ydHMgVHJhbnNmb3JtIE5hdGlvbg==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8NjliAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGYzNzVlMzJjNmU5YjA3OTM=</field><field name="symbol" class="java.lang.String">rO0ABXQABU02Ty5G</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8StLSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAz2ZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAz2ZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAz2ZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAz2ZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyI9cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDVkNzE3MGVhMzY2YTQ1MWI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mL0/AAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPxCghQ==</field></document></documents><date>2015-05-07T07:51:10-0500</date></cacheEntry>
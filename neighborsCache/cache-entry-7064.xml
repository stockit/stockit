<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hNYW55IGluc3RpdHV0aW9uYWwgaW52ZXN0b3JzIGluIEdlbmVyYWwgTW90b3JzIENvIHNheSB0aGV5cmUga2VlcGluZyBmYWl0aCBpbiB0aGUgc3RvY2sgYWZ0ZXIgdGhlIHJlY2FsbCBjcmlzaXMgd2lwZWQgb3V0IG1vcmUgdGhhbiAzIGJpbGxpb24gaW4gc2hhcmVob2xkZXJzIHZhbHVlIG92ZXIgZm91ciB3ZWVrcyBDaGllZiBFeGVjdXRpdmUgT2ZmaWNlciBNYXJ5IEJhcnJhIGhhcyBhcG9sb2dpemVkIGZvciB0aGUgbGl2ZXMgbG9zdCBpbiBhY2NpZGVudHMgdGllZCB0byBhbiBpZ25pdGlvbiBzd2l0Y2ggZGVmZWN0IGFuZCBwcm9taXNlZCBhbiBhZ2dyZXNzaXZlIGludmVzdGlnYXRpb24gaW50byB3aHkgaXQgdG9vayBzbyBsb25nIHRvIGRvIGFueXRoaW5nIGV2ZW4gdGhvdWdoIHNvbWUgYXQgR00ga25ldyBhYm91dCB0aGUgZmF1bHR5IHN3aXRjaGVzIGFzIGVhcmx5IGFzIDIwMDEgV2h5IGluIHRoZSB3b3JsZCB0aGV5IGRpZG50IGRlYWwgd2l0aCBpdCBiYWNrIHRoZW4gaXMgYmV5b25kIG1lIGJ1dCBpdCBzZWVtcyB0byBtZSBub3cgdGhhdCB0aGV5cmUgZG9pbmcgdGhlIGJlc3Qgam9iIHRoZXkgY2FuIGdpdmVuIHRoZSBjaXJjdW1zdGFuY2VzIHNhaWQgU2NvdHQgU2NoZXJtZXJob3JuIGNoaWVmIGludmVzdG1lbnQgb2ZmaWNlciBvZiBDb25jb3JkIE5ldyBIYW1wc2hpcmViYXNlZCBHcmFuaXRlIEludmVzdG1lbnQgQWR2aXNvcnMgSW5jIHdoaWNoIG92ZXJzZWVzIDYwMCBtaWxsaW9uIGFuZCBhcyBvZiBEZWMgMzEgb3duZWQgNDY0NDY5IEdNIHNoYXJlcyBCYXJyYSBpcyBiZWluZyB2ZXJ5IGNhbmRpZCBMYXN0IHdlZWsgYSBjb250cml0ZSBCYXJyYSB3aG9zIGJlZW4gQ0VPIHNpbmNlIEphbnVhcnkgZmllbGRlZCBzaGFycCBxdWVzdGlvbnMgZHVyaW5nIGhlYXJpbmdzIGluIHRoZSBVUyBIb3VzZSBhbmQgU2VuYXRlIENvbmdyZXNzIGFuZCB0aGUgSnVzdGljZSBEZXBhcnRtZW50IGFyZSBpbnZlc3RpZ2F0aW5nIHdoYXQgaGFwcGVuZWQgYmVmb3JlIHRoZSBEZXRyb2l0YmFzZWQgYXV0b21ha2VyIHJlY2FsbGVkIDI1OSBtaWxsaW9uIHNtYWxsIGNhcnMgaW4gRmVicnVhcnkgYW5kIE1hcmNoIFdoaWxlIHRoZSBmYWxsb3V0IG1pZ2h0IGJyaWVmbHkgY3JpbXAgc2FsZXMgdGhlIHN0b2NrIGRyb3AgaXMgZXhjZXNzaXZlIHNhaWQgTWF0dGhldyBNb3JhbiBhIGZ1bmQgbWFuYWdlciBhdCBSaXZlciBSb2FkIEFzc2V0IE1hbmFnZW1lbnQgTExDIGluIExvdWlzdmlsbGUgS2VudHVja3kgd2hpY2ggbWFuYWdlcyBhYm91dCAxMSBiaWxsaW9uIGFuZCBvd25lZCAxODMxNTggR00gc2hhcmVzIGFzIG9mIERlYyAzMSBHTSBzaGFyZXMgIHdoaWNoIGNsaW1iZWQgNDIgcGVyY2VudCBpbiAyMDEzIGFtaWQgcmVjb3JkIE5vcnRoIEFtZXJpY2FuIHByb2ZpdCAgaGF2ZSBzbHVtcGVkIDc2IHBlcmNlbnQgc2luY2UgTWFyY2ggNyBhcyB0aGUgY3Jpc2lzIGVzY2FsYXRlZCB0aGUgY29tcGFueSBleHBhbmRlZCB0aGUgcmVjYWxsIGFuZCB0aGUgSnVzdGljZSBEZXBhcnRtZW50IG9wZW5lZCBpdHMgcHJvYmUgSW4gdGhlIG1lYW50aW1lIEZvcmQgTW90b3IgQ28gYWR2YW5jZWQgMzMgcGVyY2VudCAgICAgICAgICAgICAgICAgICAgICAgICBUb3VnaCBTaXR1YXRpb24gSXRzIGEgbGl0dGxlIHNpbGx5IHRoYXQgaXRzIHRyYWRlZCBvZmYgdG8gdGhlIGV4dGVudCB0aGF0IGl0IGhhcyBNb3JhbiBzYWlkIG9mIEdlbmVyYWwgTW90b3JzIFRoZSBuZXcgQ0VPIGlzIGRvaW5nIGEgZmluZSBqb2IgYW5kIEltIHZlcnkgb3B0aW1pc3RpYyBhYm91dCBoZXIgYWJpbGl0aWVzIHRvIGxlYWQgdGhpcyBjb21wYW55IE1vcmFuIGFuZCBTY2hlcm1lcmhvcm4gYm90aCBwb2ludGVkIHRvIHdoYXQgaGFwcGVuZWQgYXQgVG95b3RhIE1vdG9yIENvcnAgYWZ0ZXIgaXQgcmVjYWxsZWQgbW9yZSB0aGFuIDEwIG1pbGxpb24gdmVoaWNsZXMgZm9sbG93aW5nIGNvbXBsYWludHMgb2Ygc3VkZGVuIHVuaW50ZW5kZWQgYWNjZWxlcmF0aW9uIFdoaWxlIHJldmVudWUgZmVsbCBhbWlkIHRoZSByZWNhbGxzIHdoaWNoIHRvb2sgcGxhY2UgaW4gMjAwOSBhbmQgMjAxMCBkdXJpbmcgdGhlIGdsb2JhbCByZWNlc3Npb24gaXRzIGluY3JlYXNlZCBzaW5jZSBBbmFseXN0cyBmb3JlY2FzdCByZWNvcmQgc2FsZXMgZm9yIHRoZSBUb3lvdGEgQ2l0eSBKYXBhbmJhc2VkIGNhcm1ha2VyIGluIGZpc2NhbCAyMDE1IGFjY29yZGluZyB0byBkYXRhIGNvbXBpbGVkIGJ5IEJsb29tYmVyZyBTdGlsbCB0aGUgY29tcGFueXMgcmVwdXRhdGlvbiB3YXMgZGFtYWdlZCBhbmQgaXQgcmVsaW5xdWlzaGVkIGl0cyB0aXRsZSBhcyB0aGUgd29ybGRzIHRvcHNlbGxpbmcgYXV0b21ha2VyIHRvIEdNIGZvciBhIHllYXIgVG95b3RhIGxhc3QgbW9udGggYWRtaXR0ZWQgaXQgbWlzbGVkIGNvbnN1bWVycyBhbmQgYWdyZWVkIHRvIHBheSAxMiBiaWxsaW9uIHRvIGVuZCBhIFVTIHByb2JlIG9mIGl0cyBhdHRlbXB0IHRvIGhpZGUgdGhlIGRlZmVjdHMgICAgICAgICAgICAgICAgICAgICAgICAgT3RoZXIgQ2hhbGxlbmdlcyBBdCBHTSBCYXJyYSBoYXMgYmVlbiBkZWFsaW5nIHdpdGggdGhlIGlzc3VlIGhlYWQgb24gc2FpZCBKb3JkYW4gU215dGggYSBCZXRoZXNkYSBNYXJ5bGFuZGJhc2VkIG1hbmFnaW5nIGRpcmVjdG9yIGF0IEVkZ2Vtb29yIEludmVzdG1lbnQgQWR2aXNvcnMgSW5jIHdoaWNoIG93bmVkIDIwMTk0NCBHTSBzaGFyZXMgYXMgb2YgRGVjIDMxIGFuZCBvdmVyc2VlcyBhYm91dCA3MjUgbWlsbGlvbiBJdmUgYmVlbiBpbXByZXNzZWQgd2l0aCBob3cgdGhleXZlIGJlZW4gaGFuZGxpbmcgaXQgU215dGggc2FpZCBJdHMgYSB2ZXJ5IHRvdWdoIHNpdHVhdGlvbiBmb3IgYW55IG5ldyBDRU8gdG8gY29tZSBpbnRvIFRoZXJlcyBhbHJlYWR5IGEgbG90IG9mIHNjcnV0aW55IG9mIGhlciBzb2xlbHkgYmVjYXVzZSBzaGVzIGEgd29tYW4gaW4gYSBwb3NpdGlvbiBsaWtlIHRoaXMgYmVpbmcgdGhlIENFTyBvZiBvbmUgb2YgdGhlIGJpZ2dlc3QgY29tcGFuaWVzIGluIHRoZSB3b3JsZCBIZSBzYWlkIGhlIHNlZXMgYW55IGltcGFjdCBvbiBzYWxlcyBpbiBtb250aHMgdG8gY29tZSBhcyBhIHNob3J0dGVybSBpc3N1ZSBhdCB3b3JzdCBUaGUgY3Jpc2lzIGhhcyBhbHJlYWR5IHJlZHVjZWQgdGhlIG11bHRpcGxlIGludmVzdG9ycyBhcmUgd2lsbGluZyB0byBwYXkgZm9yIEdNcyBzaGFyZXMgcmVsYXRpdmUgdG8gdGhlIGF1dG9tYWtlcnMgc2FsZXMgYW5kIHByb2ZpdHMgR00gbGFzdCBtb250aCB3YXMgdmFsdWVkIGF0IDAzMSB0aW1lcyByZXZlbnVlIGFuZCAxMDggdGltZXMgZWFybmluZ3MgdGhlIGxvd2VzdCBtdWx0aXBsZXMgc2luY2UgdGhlIHNlY29uZCBxdWFydGVyIG9mIGxhc3QgeWVhciBhY2NvcmRpbmcgdG8gZGF0YSBjb21waWxlZCBieSBCbG9vbWJlcmcgT24gYSBwcmljZXRvc2FsZXMgYmFzaXMgR00gdHJhZGVzIGF0IGEgMjggcGVyY2VudCBkaXNjb3VudCB0byBGb3JkIGFuZCBpcyA1OCBwZXJjZW50IGNoZWFwZXIgdGhhbiBUb3lvdGEgdGhlIGRhdGEgc2hvdyAgICAgICAgICAgICAgICAgICAgICAgICBPdGhlciBDaGFsbGVuZ2VzIFBhcnQgb2YgdGhlIHN0b2NrcyBkZWNsaW5lIGhhcyB0byBkbyB3aXRoIGNvbmNlcm5zIGFib3V0IGNoYWxsZW5nZXMgb3ZlcnNlYXMgYW5kIHdlYWtuZXNzIGluIHNvbWUgb2YgR01zIHByb2R1Y3QgbGluZXMgVGhlIGF1dG9tYWtlciBpcyBzZWVraW5nIHRvIGJyZWFrIGV2ZW4gaW4gRXVyb3BlICB3aGVyZSBpdCBoYXMgbG9zdCBtb3JlIHRoYW4gMTggYmlsbGlvbiBzaW5jZSAxOTk5ICBhbmQgaXMgdGFraW5nIGEgNDAwIG1pbGxpb24gY2hhcmdlIHJlbGF0ZWQgdG8gdGhlIFZlbmV6dWVsYW4gY3VycmVuY3kgQXQgaG9tZSB0aGUgQ2hldnkgU2lsdmVyYWRvIGZ1bGxzaXplIHBpY2t1cCB3YXMgb3V0c29sZCBieSBDaHJ5c2xlciBHcm91cCBMTENzIFJhbSBsYXN0IG1vbnRoIHdoaWxlIENhZGlsbGFjIGx1eHVyeSBicmFuZCBzYWxlcyBzbGlkIDczIHBlcmNlbnQgdGhyb3VnaCB0aGUgZmlyc3QgcXVhcnRlciBTdGlsbCBHTXMgVVMgdmVoaWNsZSBzYWxlcyByb3NlIDQxIHBlcmNlbnQgaW4gTWFyY2ggZXhjZWVkaW5nIGFuYWx5c3RzIGV4cGVjdGF0aW9ucyBBbmQgZXZlbiBhZnRlciB0aGUgcmVjZW50IHNlbGxvZmYgR00gdHJhZGVzIGhpZ2hlciB0aGFuIG1hbnkgcGVlcnMgb24gYSBwcmljZWVhcm5pbmdzIHJhdGlvIGJhc2lzIFRoZSBjb21wYW55cyByYXRpbyBvZiAxMSB0b3BzIEZvcmRzIDEwNCBhbmQgVG95b3RhcyAxMCBhY2NvcmRpbmcgdG8gZGF0YSBjb21waWxlZCBieSBCbG9vbWJlcmcgRGFpbWxlciBBR3MgcmF0aW8gaXMgMTExIEJvdGggR01zIHByaWNldG9lYXJuaW5ncyBhbmQgcHJpY2V0byBzYWxlcyByYXRpb3MgYXJlIGFsc28gbW9yZSB0aGFuIDUwIHBlcmNlbnQgaGlnaGVyIHRoYW4gdGhlaXIgcG9zdGJhbmtydXB0Y3kgbG93cyB0aGUgZGF0YSBzaG93IFRoZSBjb21wYW55IHdlbnQgdGhyb3VnaCBhIGdvdmVybm1lbnRiYWNrZWQgYmFua3J1cHRjeSBpbiAyMDA5ICAgICAgICAgICAgICAgICAgICAgICAgQnV5aW5nIE9wcG9ydHVuaXR5IFNwb2tlc21lbiBmb3IgdGhlIHR3byBsYXJnZXN0IEdNIHN0YWtlaG9sZGVycyAgYSB1bmlvbiBoZWFsdGhjYXJlIHRydXN0IGFuZCB0aGUgQ2FuYWRpYW4gZ292ZXJubWVudCAgZGVjbGluZWQgdG8gY29tbWVudCBUaGUgdW5pb24gdHJ1c3QgaGVsZCAxNDAyIG1pbGxpb24gc2hhcmVzIG9yIDg4IHBlcmNlbnQgb2YgdGhlIHNoYXJlcyBvdXRzdGFuZGluZyBhcyBvZiBEZWMgMzEgVGhlIENhbmFkaWFuIGdvdmVybm1lbnQgaG9sZHMgMTEwMSBtaWxsaW9uIHNoYXJlcyBvciA1NiBwZXJjZW50IGFmdGVyIHNlbGxpbmcgMzAgbWlsbGlvbiBzaGFyZXMgaW4gU2VwdGVtYmVyIEdlcnJ5IEpvcmRhbiBwcmVzaWRlbnQgb2YgSGVsbG1hbiBKb3JkYW4gTWFuYWdlbWVudCBDbyBzYWlkIHRoZSByZWNhbGwgY3Jpc2lzIHdhcyBhbiBvcHBvcnR1bml0eSB0byBidXkgT24gYXZlcnQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0wMy0yN1QwMDowMDowMFogVE8gMjAxMy0xMi0wM1Q1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTE0MTk5</field><field name="title" class="java.lang.String">rO0ABXQAP0ZvcmQgRm9jdXMgR3JhYnMgR2xvYmFsIFNhbGVzIENyb3duIGFzIFdvcmxkIEJ1eXMgQW1lcmljYW4gQ2Fycw==</field><field name="content" class="java.lang.String">rO0ABXQeZEl04oCZcyBvZmZpY2lhbDogVGhlIEZvcmQgRm9jdXMgd2FzIHRoZSBiZXN0LXNlbGxpbmcgY2FyIGluIHRoZSB3b3JsZCBpbiAyMDEyLiBBbmQgd2hpbGUgdGhlIHRpdGxlIGNvbWVzIHdpdGggYWxsIHNvcnRzIG9mIGNhdmVhdHMsIHRoZSByaXNlIG9mIHRoZSBuYW1lcGxhdGUgc2F5cyBhbGwga2luZHMgb2YgdGhpbmdzIGFib3V0IHRoZSBVLlMuIGFuZCBBc2lhbiBhdXRvbW90aXZlIGluZHVzdHJpZXMsIHRoZSBpbXBvcnRhbmNlIG9mIGdsb2JhbCBtYW51ZmFjdHVyaW5nIGFuZCBob3cgVGhhaWxhbmQgYmVjYW1lIHRoZSBuZXcgU3BhaW4uIEZvcmQgTW90b3IgQ28uLCBsZWFkaW5nIFUuUy4gYXV0b21ha2VycyBpbiBidWlsZGluZyB0aGVpciBiZXN0IGNhcnMgaW4gZGVjYWRlcywgcmVnaXN0ZXJlZCAxLjAyIG1pbGxpb24gRm9jdXMgY2FycyBpbiAyMDEyLCB0b3BwaW5nIDg3Miw3NzQgZm9yIFRveW90YSBNb3RvciBDb3JwLuKAmXMgQ29yb2xsYSwgYWNjb3JkaW5nIHRvIFIuTC4gUG9sayAmIENvLiBkYXRhIHRoYXQgRm9yZCByZWxlYXNlZCBUdWVzZGF5LiBGb3Jk4oCZcyBGLVNlcmllcyBwaWNrdXAgbGluZSB3YXMgdGhlIE5vLiAzIG5hbWVwbGF0ZSwgaXRzIEZpZXN0YSBzdWJjb21wYWN0IHdhcyBOby4gNiwgYW5kIEdlbmVyYWwgTW90b3JzIENvLuKAmXMgQ2hldnJvbGV0IENydXplIHdhcyBOby4gOCwgYWhlYWQgb2YgSG9uZGEgTW90b3IgQ28u4oCZcyBDaXZpYy4gVGhlIEZvY3VzLCBGaWVzdGEgYW5kIENydXplIGFyZSBhbW9uZyBzZXZlcmFsIG1vZGVscyBmcm9tIFUuUy4gYXV0b21ha2VycyB0aGF0IGFyZSBzdWNjZWVkaW5nIGFnYWluc3QgSmFwYW7igJlzIFRveW90YSBhbmQgSG9uZGEsIHdoaWNoIHVzZWQgdG8gZG9taW5hdGUgY2FyIHNlZ21lbnRzLiBGb3JkIGhhcyBiZWVuIHJldml2ZWQgYnkgQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXIgQWxhbiBNdWxhbGx5LCB3aG8gaGFzIG92ZXJoYXVsZWQgaXRzIGxpbmV1cCB3aXRoIG1vcmUgZnVlbC1lZmZpY2llbnQgbW9kZWxzIHRvIHJvdW5kIG91dCBpdHMgc3RyZW5ndGggaW4gYmlnIHBpY2t1cHMgYW5kIHNwb3J0LXV0aWxpdHkgdmVoaWNsZXMgYW5kIHB1c2hlZCBhIGdsb2JhbCBwcm9kdWN0LWRldmVsb3BtZW50IHBsYW4gY2FsbGVkIE9uZSBGb3JkLiDigJxTaW5jZSBBbGFuIGhhcyBiZWVuIHdpdGggdXMsIHdl4oCZdmUgcHV0IGEgdHJlbWVuZG91cyBhbW91bnQgb2YgYXR0ZW50aW9uIHRvd2FyZCBiYWxhbmNpbmcgb3VyIHByb2R1Y3QgcG9ydGZvbGlvLOKAnSBFcmljaCBNZXJrbGUsIEZvcmTigJlzIFUuUy4gc2FsZXMgYW5hbHlzdCwgc2FpZCBieSB0ZWxlcGhvbmUuIOKAnFdlIGhhZCB0byBiZXR0ZXIgcmVwcmVzZW50IHdoYXQgdGhlIG1ham9yaXR5IG9mIHRoZSB3b3JsZCBpcyBsb29raW5nIGZvciwgYW5kIHRoZXnigJlyZSBsb29raW5nIGZvciBzbWFsbGVyIHBhc3NlbmdlciBjYXJzLuKAnSBUaGUgbnVtYmVycyB0aGVtc2VsdmVzIGRvbuKAmXQgbmVjZXNzYXJpbHkgbWVhbiBhbnl0aGluZyBpZiByb2J1c3QgcHJvZml0cyBkb27igJl0IGZvbGxvdy4gVGhlIHRvcC1zZWxsaW5nIGNhciBpbiB0aGUgVS5TLiByZW1haW5zIHRoZSBUb3lvdGEgQ2FtcnksIGFzIGl0IGhhcyBiZWVuIGZvciAxMSB5ZWFycywgYW5kIFRveW90YSByZWdhaW5lZCB0aGUgZ2xvYmFsIHNhbGVzIGNyb3duIGZyb20gR00gbGFzdCB5ZWFyLiBNb2RlbCBUIEFsbCB0aGF0IHNhaWQsIHRoZSBhbm5vdW5jZW1lbnQgaXMgZ29vZCByZWFzb24gZm9yIEZvcmQg4oCUIGFuZCwgbW9yZSBicm9hZGx5LCB0aGUgcmVzdXJnZW50IFUuUy4gYXV0byBpbmR1c3RyeSDigJQgdG8gY2hlZXIuIEZvcmQgcHJvYmFibHkgaGFzbuKAmXQgYmVlbiBhYmxlIHRvIGNsYWltIG93bmVyc2hpcCBvZiB0aGUgZ2xvYmFsIGJlc3Qtc2VsbGluZyBtb2RlbCBzaW5jZSB0aGUgZGF5cyBvZiBmb3VuZGVyIEhlbnJ5IEZvcmTigJlzIE1vZGVsIFQgb3IgaXRzIHN1Y2Nlc3NvciwgdGhlIE1vZGVsIEEsIHNhaWQgSm9obiBXb2xrb25vd2ljeiwgYW4gaW5kZXBlbmRlbnQgYXV0byBhbmFseXN0IGJhc2VkIGluIEJvc3Rvbi4gVm9sa3N3YWdlbiBBRyBoYWQgdGhlIG1vc3QgZ2xvYmFsIHJlYWNoIHdpdGggaXRzIEJlZXRsZSBzdGFydGluZyBpbiB0aGUgbWlkLTE5NTBzLCBhbmQgVm9sa3N3YWdlbuKAmXMgR29sZiBhbmQgVG95b3Rh4oCZcyBDb3JvbGxhIGhhdmUgdHJhZGVkIHdvcmxkd2lkZSBzYWxlcyBsZWFkZXJzaGlwIGJ5IG1vZGVsIG1vcmUgcmVjZW50bHkuIOKAnEl04oCZcyBhIHNpZ25pZmljYW50IGFjaGlldmVtZW50IGZvciBGb3JkLOKAnSBoZSBzYWlkIGluIGEgdGVsZXBob25lIGludGVydmlldy4gR2xvYmFsIEZvY3VzIHJlZ2lzdHJhdGlvbnMgcm9zZSAxNiBwZXJjZW50IGxhc3QgeWVhciBmcm9tIDg3OSw5MTQgaW4gMjAxMSwgd2hlbiBGb3JkIHNheXMgaXQgd2FzIGFsc28gdGhlIHdvcmxk4oCZcyBiZXN0LSBzZWxsaW5nIGNhciwgYWNjb3JkaW5nIHRvIE1lcmtsZS4gUG9sayBkaWRu4oCZdCBkZWNsYXJlIGEgc2FsZXMgd2lubmVyIGFuZCBpcyB1bmFibGUgdG8gcHJvdmlkZSBkYXRhIG9uIGdsb2JhbCBzYWxlcyBieSBuYW1lcGxhdGUgYmV5b25kIHdoYXQgRm9yZCBoYXMgcmVsZWFzZWQsIHNhaWQgTWljaGVsbGUgQ3VsdmVyLCBhIFBvbGsgc3Bva2Vzd29tYW4gd2hvIHdvcmtzIGZvciBMYW1iZXJ0LCBFZHdhcmRzICYgQXNzb2NpYXRlcy4gTXVsYWxseeKAmXMgQmV0IFRoZSBnbG9iYWwgYmV0IGJ5IE11bGFsbHksIDY3LCBoYXMgcGFpZCBvZmYgYXMgYnVyZ2VvbmluZyB3ZWFsdGggaW4gY291bnRyaWVzIHN1Y2ggYXMgSW5kaWEsIEluZG9uZXNpYSwgQ2hpbmEgYW5kIFRoYWlsYW5kIGJyaW5nIHRoZWlyIGF1dG8gbWFya2V0cyBtb3JlIGluIGxpbmUgd2l0aCB0aGUgZGV2ZWxvcGVkIHdvcmxkLiBUaGVyZSB3ZXJlIG9ubHkgMzIgdmVoaWNsZXMgaW4gb3BlcmF0aW9uIGluIEluZGlhIGZvciBldmVyeSAxLDAwMCBwZW9wbGUgb2YgZHJpdmluZyBhZ2UgaW4gMjAxMSwgYWNjb3JkaW5nIHRvIEZvcmQuIEluZG9uZXNpYSBoYWQganVzdCA0OSwgQ2hpbmEgODMgYW5kIFRoYWlsYW5kIDIwMCwgY29tcGFyZWQgd2l0aCA5NzUgaW4gdGhlIFUuUy4gYW5kIDY1NCBpbiBHZXJtYW55LiBFeHBhbnNpb24gaW4gdGhvc2UgZW1lcmdpbmcgbWFya2V0cyBpcyBleHBlY3RlZCBieSBGb3JkIHRvIGNvbWUgZnJvbSBmaXJzdC10aW1lIGJ1eWVycyBzZWVraW5nIGFmZm9yZGFibGUgc21hbGwgY2Fycy4g4oCcSWYgeW91IHdhbnQgdG8gYmUgc3VjY2Vzc2Z1bCBpbiBTb3V0aGVhc3QgQXNpYSBhbmQgaW4gQ2hpbmEsIHlvdeKAmXZlIGdvdCB0byBoYXZlIGdyZWF0IHN1YmNvbXBhY3QgYW5kIGNvbXBhY3QgY2FyIG9mZmVyaW5ncyB0byBjb21wZXRlLOKAnSBNZXJrbGUgc2FpZC4gRm9jdXMgcmVnaXN0cmF0aW9ucyBzdXJnZWQgNTEgcGVyY2VudCBsYXN0IHllYXIgaW4gQ2hpbmEsIHRoZSB3b3JsZOKAmXMgbGFyZ2VzdCBhdXRvIG1hcmtldCwgYWNjb3JkaW5nIHRvIFNvdXRoZmllbGQsIE1pY2hpZ2FuLWJhc2VkIFBvbGsuIEZvcmQgaGFzIHN0YXJ0ZWQgY29uc3RydWN0aW9uIG9uIGEgdGhpcmQgYXNzZW1ibHkgcGxhbnQgaW4gQ2hvbmdxaW5nIGFmdGVyIGFkZGluZyBpdHMgc2Vjb25kIGZhY3RvcnkgaW4gdGhlIGNpdHkgaW4gc291dGh3ZXN0ZXJuIENoaW5hIGluIEZlYnJ1YXJ5LiDigJhEZW1hbmQgUGljdHVyZeKAmSBUaGUgc2Vjb25kIENob25ncWluZyBwbGFudCBib29zdGVkIEZvcmTigJlzIGNhciBjYXBhY2l0eSBpbiBDaGluYSBieSBvbmUtdGhpcmQsIHRvIDYwMCwwMDAgdW5pdHMsIGFuZCBoZWxwZWQgdGhlIGNvbXBhbnkgdG8gbW9yZSB0aGFuIGRvdWJsZSBGb2N1cyByZWdpc3RyYXRpb25zIGluIHRoZSBjb3VudHJ5IGluIGVhY2ggb2YgdGhlIGxhc3QgdGhyZWUgbW9udGhzIG9mIDIwMTIsIFBvbGsgZGF0YSBzaG93LiBGb3JkIGFsc28gYnVpbGRzIHRoZSBGb2N1cyBpbiBXYXluZSwgTWljaGlnYW4sIGFuZCBpbiBmYWN0b3JpZXMgaW4gR2VybWFueSwgUnVzc2lhIGFuZCBUaGFpbGFuZCwgYWNjb3JkaW5nIHRvIGl0cyB3ZWJzaXRlLiDigJxUaGUgZGVtYW5kIHBpY3R1cmUgaW4gdGhlIFUuUy4gYW5kIENoaW5hIHNlZW1zIHRvIGJlIGZhdm9yaW5nIHdoZXJlIEZvcmQgaXMgc3Ryb25nLCB3aGljaCBpcyBpbmNyZWFzaW5nbHkgaW4gc21hbGwgY2FycyzigJ0gc2FpZCBLZXZpbiBUeW5hbiwgYW4gYW5hbHlzdCBmb3IgQmxvb21iZXJnIEluZHVzdHJpZXMgcmVzZWFyY2ggaW4gU2tpbGxtYW4sIE5ldyBKZXJzZXkuIOKAnFlvdeKAmXZlIGdvdCBhbiBlbWVyZ2luZyBtYXJrZXQgaW4gQ2hpbmEgYW5kIGEgbWFya2V0IHRoYXTigJlzIHJlY3JlYXRpbmcgaXRzZWxmIGluIHRoZSBVLlMuIHRoYXQgYXJlIGZhdm9yaW5nIHNtYWxsIGNhcnMsIGZ1ZWwgZWZmaWNpZW5jeSBhbmQgdmFsdWUu4oCdIEZvcmQgaGFzIGVhcm5lZCAkMzUuMiBiaWxsaW9uIHRoZSBwYXN0IGZvdXIgeWVhcnMgYWZ0ZXIgbG9zaW5nICQzMC4xIGJpbGxpb24gZnJvbSAyMDA2IHRocm91Z2ggMjAwOC4gVGhlIERlYXJib3JuLCBNaWNoaWdhbi1iYXNlZCBjb21wYW55IGF2b2lkZWQgdGhlIGdvdmVybm1lbnQgcmVzY3VlcyBhbmQgYmFua3J1cHRjaWVzIHRoYXQgdGhhdCBiZWZlbGwgdGhlIHByZWRlY2Vzc29ycyBvZiBHTSBhbmQgQ2hyeXNsZXIgR3JvdXAgTExDwqBpbiAyMDA5IGJ5IGJvcnJvd2luZyAkMjMuNCBiaWxsaW9uIHRocmVlIHllYXJzIGVhcmxpZXIuIE9iYW1h4oCZcyBRdWVzdGlvbiBHTSBhbmQgQ2hyeXNsZXIgZmFpbGVkIGluIHBhcnQgYmVjYXVzZSBvZiBhIGxhY2sgb2YgY29tcGV0aXZlbmVzcyBpbiBjYXIgc2VnbWVudHMuIFByZXNpZGVudCBCYXJhY2sgT2JhbWEsIHdob3NlIGFkbWluaXN0cmF0aW9uIG92ZXJzYXcgdGhlIGdvdmVybm1lbnQtYmFja2VkIHJlc3RydWN0dXJpbmdzLCBhc2tlZCB3aHkgR00gb3IgQ2hyeXNsZXIgY291bGRu4oCZdCBwcm9kdWNlIGEgY2FyIGFzIGdvb2QgYXMgYSBDb3JvbGxhLCBTdGV2ZSBSYXR0bmVyLCBmb3JtZXIgaGVhZCBvZiBPYmFtYeKAmXMgYXV0b21vdGl2ZSB0YXNrIGZvcmNlLCB3cm90ZSBpbiBoaXMgMjAxMCBib29rLCDigJxPdmVyaGF1bC7igJ0gVGhhdCBoYXMgY2hhbmdlZCwgdGhhbmtzIHRvIGNhcnMgbGlrZSB0aGUgQ3J1emUsIGludHJvZHVjZWQgYnkgRGV0cm9pdC1iYXNlZCBHTSBpbiAyMDEwLiBUaGUgYXV0b21ha2VyIGlzIG5vIGxvbmdlciBhIOKAnGJpZyBNaWR3ZXN0IHRydWNrIGNvbXBhbnks4oCdIE1hcmsgUmV1c3MsIHByZXNpZGVudCBvZiBHTeKAmXMgTm9ydGggQW1lcmljYW4gb3BlcmF0aW9ucywgdG9sZCByZXBvcnRlcnMgbGFzdCBtb250aCBhdCB0aGUgTmV3IFlvcmsgYXV0byBzaG93LiDigJxUaGUgZG9tZXN0aWNzIGNvbmNlbnRyYXRlZCBvbiBsaWdodCB0cnVja3MgaW4gdGhlIOKAmTkwcyBhbmQgcmVhbGx5IGxldCB0aGVpciBjYXJzIHNsaXAs4oCdIFRvbSBMaWJieSwgUG9sa+KAmXMgbGVhZCBhbmFseXN0IGZvciBOb3J0aCBBbWVyaWNhLCBzYWlkIGluIGEgdGVsZXBob25lIGludGVydmlldy4gR00gYW5kIEZvcmQg4oCcaGF2ZSB0aGUgY2FwYWJpbGl0eSBvZiBkb2luZyBhbnl0aGluZyB0aGF0IHRoZSBBc2lhbiBjb21wYW5pZXMgZG8uIFRoZXkgbmVlZGVkIHRvIGZvY3VzIG9uIHRoZWlyIGNvcmUgYnVzaW5lc3MsIGFuZCB5b3UgY291bGQgbWFrZSB0aGUgY2FzZSB0aGV5IHdlcmUgbm90IGRvaW5nIHRoYXQgaW4gdGhlIGxhdGUg4oCZOTBzIGFuZCBlYXJseSAyMDAwcy7igJ0gQ2hyeXNsZXLigJlzIFN0cmlkZXMgR03igJlzIENydXplIGhhZCA2NjEsMzI1IHJlZ2lzdHJhdGlvbnMgbGFzdCB5ZWFyLCBhaGVhZCBvZiA2NTEsMTU5IGZvciBUb2t5by1iYXNlZCBIb25kYeKAmXMgQ2l2aWMsIGFjY29yZGluZyB0byBQb2xrLiBUaGUgcmVzZWFyY2hlcuKAmXMgZ2xvYmFsIHJlcG9ydGluZyB0eXBpY2FsbHkgbGFncyBieSB0aHJlZSB0byBmb3VyIG1vbnRocyBiZWNhdXNlIGl0IHRyYWNrcyBtb3JlIHRoYW4gODAgbWFya2V0cyB3b3JsZHdpZGUuIENocnlzbGVyLCB0b28sIGhhcyBtYWRlIHN0cmlkZXMgd2l0aCBzbWFsbCBjYXJzIHRoYXQgY29tcGxlbWVudCB0aGUgQXVidXJuIEhpbGxzLCBNaWNoaWdhbi1iYXNlZCBjb21wYW554oCZcyBmb3J0ZSBpbiBKZWVwIFNVVnMgYW5kIFJhbSB0cnVja3MuIFRoZSBEb2RnZSBEYXJ0IGNvbXBhY3QsIGRldmVsb3BlZCBhbG9uZyB3aXRoIG1ham9yaXR5IG93bmVyIEZpYXQgU3BBLCBoYXMgc2V0IG1vbnRobHkgVS5TLiBzYWxlcyByZWNvcmRzIHNpbmNlIERlY2VtYmVyLiBDaHJ5c2xlciBhbmQgVHVyaW4sIEl0YWx5LWJhc2VkIEZpYXQgYWxzbyBhcmUgc2VsbGluZyB0aGUgY2FyIGluIENoaW5hIHVuZGVyIHRoZSBuYW1lIFZpYWdnaW8gYWZ0ZXIgaW50cm9kdWNpbmcgaXQgaW4gdGhlIFUuUy4gaW4gSnVuZSBsYXN0IHllYXIuIEphcGFu4oCZcyBhdXRvbWFrZXJzIHdvbuKAmXQgbWFrZSBpdCBlYXN5IGZvciB0aGUgVS5TLiBjb21wYW5pZXMgdG8gbWFpbnRhaW4gdGhlaXIgbW9tZW50dW0gaW4gc21hbGwgY2Fycy4gVG95b3RhIENpdHksIEphcGFuLWJhc2VkIFRveW90YSBpcyBpbnRyb2R1Y2luZyBhIHJldmFtcGVkIHZlcnNpb24gb2YgaXRzIENvcm9sbGEgbGF0ZXIgdGhpcyB5ZWFyLiBIb25kYSByZWxlYXNlZCBhIG1vZGlmaWVkIHZlcnNpb24gb2YgaXRzIENpdmljIGluIE5vdmVtYmVyIHRoYXQgaGFzIHBhY2lmaWVkIGNyaXRpY3MsIGluY2x1ZGluZyBDb25zdW1lciBSZXBvcnRzLCB3aGljaCBkZWFsdCB0aGUgY29tcGFueSBhIGJsb3cgYnkgd2l0aGhvbGRpbmcgaXRzIHJlY29tbWVuZGF0aW9uIGZvciB0aGUgY2FyIG1vcmUgdGhhbiBhIHllYXIgZWFybGllci4gV2Vha2VyIFllbiBJbiBhZGRpdGlvbiB0byB0aGUgcHJvbWlzZSBvZiBuZXcgbW9kZWxzLCBUb3lvdGEgYW5kIEhvbmRhIGNvdWxkIGJlbmVmaXQgZnJvbSB0aGUgd2Vha2VyIHllbiBhbmQgYSByZWJvdW5kIGluIENoaW5hLCB3aGVyZSBhbnRpLUphcGFuIHNlbnRpbWVudCByZWxhdGVkIHRvIGEgdGVycml0b3JpYWwgZGlzcHV0ZSBoYXMgZGV0ZXJyZWQgY29uc3VtZXJzIGZyb20gYnV5aW5nIHRoZWlyIGNhcnMgYWxvbmcgd2l0aCBOaXNzYW4gTW90b3IgQ28u4oCZcy4gRGVtYW5kIGZvciBKYXBhbmVzZS1icmFuZGVkIHZlaGljbGVzIGluIENoaW5hIHdpbGwgcmVjb3ZlciB3aXRoaW4gdGhyZWUgbW9udGhzLCBBbmR5IFBhbG1lciwgZXhlY3V0aXZlIHZpY2UgcHJlc2lkZW50IG9mIFlva29oYW1hLCBKYXBhbi1iYXNlZCBOaXNzYW4sIHRvbGQgQmxvb21iZXJnIFRlbGV2aXNpb24gbGFzdCB3ZWVrLiBJbiB0aGUgVS5TLiwgY2FycyBsaWtlIFRveW90YeKAmXMgQ2FtcnkgYW5kIENvcm9sbGEgYW5kIEhvbmRh4oCZcyBDaXZpYyBhbmQgQWNjb3JkIGFyZSBzdGlsbCBsZWFkZXJzIGFuZCBtYWludGFpbiBhIGxveWFsIG93bmVyc2hpcCBiYXNlIHRoYXQgd2lsbCB0ZXN0IFUuUy4gYXV0b21ha2Vyc+KAmSBhYmlsaXR5IHRvIGNvbnRpbnVlIGNsb3NpbmcgdGhlIGdhcC4g4oCcVGhlIEFzaWFucyBoYXZlIGEgc3RyZW5ndGggaW4gc21hbGxlciB2ZWhpY2xlcyB0aGF0IHRoZXnigJl2ZSBoYWQgZm9yIG1hbnksIG1hbnkgeWVhcnMs4oCdIFBvbGvigJlzIExpYmJ5IHNhaWQuIOKAnEdNIGFuZCBGb3JkIGhhdmUgdG8gYmUgY29tcGV0aXRpdmUgaW4gdGhvc2Ugc2VnbWVudHMgdG8gYmUgY29tcGV0aXRpdmUgZ2xvYmFsbHkuIEl04oCZcyBnb2luZyB0byByZXF1aXJlIGEgbG9uZy10ZXJtIGVmZm9ydC7igJ0=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT3tKjiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDUzYmQ1MmRkNTExM2RiZDk=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0NBUg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT3yUJSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA77hR64Ueu</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA9K4UeuFHs</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA71wo9cKPX</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA9IUeuFHrh</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA9IUeuFHrh</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAABwfnA==</field><field name="id" class="java.lang.String">rO0ABXQAEDQzZjZmZjVkOGY3MjA0YzU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mM2fAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDMyMzE=</field><field name="title" class="java.lang.String">rO0ABXQAQ0phcGFuJ3MgU3dlZXQgU3BvdDogU3RvY2sgUHJpY2VzIFJpc2UsIFByb2ZpdCBGb3JlY2FzdHMgUmlzZSBGYXN0ZXI=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUD78NiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGI2MDAzZDA4ZmZkMTNmZTU=</field><field name="symbol" class="java.lang.String">rO0ABXQAA01UVQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEBFzSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAZAAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAZXCj1wo9c</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAY9cKPXCj2</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAZXCj1wo9c</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAZXCj1wo9c</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAABBL4A==</field><field name="id" class="java.lang.String">rO0ABXQAEDc4MTY1NWQ3YTllZmFiYjM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFDjAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIyMzM3</field><field name="title" class="java.lang.String">rO0ABXQAPEdNIFBsYW5zIEdyYWR1YWwgUHVsbG91dCBvZiBTb3V0aCBLb3JlYSBhcyBMYWJvciBDb3N0cyBTdXJnZQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUBw5SSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGY1MzllYjAyMTY5ZTYwYmY=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0NPU1QuTVg=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUB2C4CAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW3AAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW3AAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW3AAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW3AAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW1czMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDJjMWZmMDYxMWU4ZDRlODA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEQyAAAQ==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDYzNjY=</field><field name="title" class="java.lang.String">rO0ABXQAPEdNIFBsYW5zIEdyYWR1YWwgUHVsbG91dCBvZiBTb3V0aCBLb3JlYSBhcyBMYWJvciBDb3N0cyBTdXJnZQ==</field><field name="content" class="java.lang.String">rO0ABXQbV1RoZSBVLlMuIGF1dG9tYWtlcidzIHBsYW4sIHdoaWNoIGFscmVhZHkgYXBwZWFycyB0byBoYXZlIGJlZW4gcHV0IGludG8gYWN0aW9uIHdpdGggcmVjZW50IGRlY2lzaW9ucyB0byBzaGlmdCBwcm9kdWN0aW9uIG9mIG5ld2VyIG1vZGVscyBhd2F5IGZyb20gU291dGggS29yZWEsIGhpZ2hsaWdodHMgY29tcGxhaW50cyBmcm9tIGJvdGggbG9jYWwgYW5kIGZvcmVpZ24gY2FybWFrZXJzIGFib3V0IHJhcGlkbHkgcmlzaW5nIHdhZ2UgY29zdHMgaW4gdGhlIHdvcmxkJ3Mgc2V2ZW50aC1sYXJnZXN0IGV4cG9ydGluZyBuYXRpb24uICJXZSBuZWVkIHRvIG1ha2Ugc3VyZSB3ZSBtaXRpZ2F0ZSByaXNrIGluIChTb3V0aCBLb3JlYSksIG5vdCBvdmVyIHRoZSBuZXh0IDItMyB5ZWFycyBidXQgb3ZlciB0aW1lLCBub3QgdG8gYmVjb21lIHRvbyBkZXBlbmRlbnQgb24gb25lIHByb2R1Y3Qgc291cmNlLCIgc2FpZCBvbmUgb2YgdGhlIHNvdXJjZXMgd2hvIGRlY2xpbmVkIHRvIGJlIGlkZW50aWZpZWQgZHVlIHRvIHRoZSBzZW5zaXRpdml0eSBvZiB0aGUgbWF0dGVyLgoKRWRpdG9yJ3MgTm90ZTogU2F2ZSwgc2hvcCBhbmQgaW52ZXN0IGxpa2UgYW4gaW5zaWRlciEgT3VyIGV4cGVydHMgbGVhZCB0aGUgd2F5IGVhY2ggbW9udGggaW4gVGhlIEZyYW5rbGluIFByb3NwZXJpdHkgUmVwb3J0LiBDbGljayBoZXJlIHRvIGxlYXJuIG1vcmUuICJJZiBzb21ldGhpbmcgZ29lcyB3cm9uZyBpbiBLb3JlYSwgd2hldGhlciBpdCBpcyBjb3N0LCBwb2xpdGljcywgb3IgdW5pb25zLCBpdCBoYXMgYW4gaW1tZWRpYXRlIGltcGFjdC4iIEdNIG1hZGUgU291dGggS29yZWEgb25lIG9mIGl0cyBtYWluIHByb2R1Y3Rpb24gaHVicyBhZnRlciBpdHMgMjAwMiBwdXJjaGFzZSBvZiBmYWlsZWQgbG9jYWwgY2FybWFrZXIgRGFld29vIE1vdG9ycy4gVGhlIGNvdW50cnkgYWNjb3VudHMgZm9yIHNsaWdodGx5IG1vcmUgdGhhbiAyMCBwZXJjZW50IG9mIEdNJ3MgYW5udWFsIGdsb2JhbCBwcm9kdWN0aW9uIG9mIHNvbWUgOS41IG1pbGxpb24gY2Fycy4gTW9yZSB0aGFuIDgwIHBlcmNlbnQgb2YgdGhvc2UgR00gY2FycyBtYWRlIGluIHRoZSBjb3VudHJ5IGFyZSBleHBvcnRlZC4gVGhlIHNvdXJjZXMsIGFsbCBwcml2eSB0byBoaWdoLWxldmVsIGRpc2N1c3Npb25zIGluc2lkZSBHTSBhYm91dCB0aGUgZnV0dXJlIG9mIGl0cyBTb3V0aCBLb3JlYW4gc3RyYXRlZ3ksIHNhaWQgbGFib3IgY29zdHMgaGFkIHJpc2VuIHNoYXJwbHkgb3ZlciB0aGUgcGFzdCBkZWNhZGUsIHR1cm5pbmcgdGhlIGNvdW50cnkgaW50byBhIGhpZ2gtY29zdCBiYXNlIC0tIGEgcHJvYmxlbSBleGFjZXJiYXRlZCBieSB0aGUgU291dGggS29yZWFuIGN1cnJlbmN5J3MgcmVsYXRpdmUgc3RyZW5ndGggb3ZlciB0aGUgcGFzdCB5ZWFyLiBHTSBLb3JlYSdzIGxhYm9yIHVuaW9uIGRpc2FncmVlcyBhbmQgYmVsaWV2ZXMgR00ncyB0YWxrIG9mIHJlZHVjaW5nIGl0cyBwcmVzZW5jZSBpcyBhIGJsdWZmIGRlc2lnbmVkIHRvIGludGltaWRhdGUgd29ya2VycyBhZ2FpbnN0IHNlZWtpbmcgZnVydGhlciBwYXkgaGlrZXMuIExhc3QgbW9udGgsIEdNIEtvcmVhIHJlYWNoZWQgYW4gYW5udWFsIHdhZ2Ugc2V0dGxlbWVudCB0aGF0IGluY2x1ZGVkIGJvbnVzZXMgb2YgMTAgbWlsbGlvbiB3b24gKCQ5LDAwMCkgcGVyIG1lbWJlciwgYWNjb3JkaW5nIHRvIHRoZSBHTSBLb3JlYSBsYWJvciB1bmlvbi4gIk91ciB2aWV3IGlzIHRoYXQgbWFuYWdlbWVudCBpcyBtYWtpbmcgdGhyZWF0cyB0byBwcmVzc3VyZSB1cyBhbmQgbWFrZSB1cyBjb29wZXJhdGUsIiB1bmlvbiBzcG9rZXNtYW4gQ2hvaSBKb25nLWhhayBzYWlkLiBIb3dldmVyLCBHTSBhcHBlYXJzIHRvIGhhdmUgYWxyZWFkeSBiZWd1biBlYXNpbmcgaXRzIHJlbGlhbmNlIG9uIFNvdXRoIEtvcmVhLCBsZWFkaW5nIHNvbWUgdW5pb24gbGVhZGVycyB0byB0ZWxsIFJldXRlcnMgb24gY29uZGl0aW9uIG9mIGFub255bWl0eSB0aGF0IHRoZXkgZmVhciBhbiBldmVudHVhbCBzaHV0dGVyaW5nIG9mIHNvbWUgR00gZmFjdG9yaWVzIGluIHRoZSBjb3VudHJ5LiBHTSB0b2xkIGl0cyBTb3V0aCBLb3JlYW4gbGFib3IgdW5pb24gbGF0ZSBsYXN0IHllYXIgaXQgd291bGQgbm90IHByb2R1Y2UgdGhlIG5leHQtZ2VuZXJhdGlvbiBDaGV2cm9sZXQgQ3J1emUsIGEgY29tcGFjdCBjYXIsIGluIEtvcmVhLCB0aG91Z2ggaXQgaW5kaWNhdGVkIGl0IHBsYW5uZWQgdG8gY29udGludWUgdG8gcHJvZHVjZSB0aGUgY3VycmVudCBtb2RlbCB0aGVyZSBhcyBhIGxvd2VyLWNvc3Qgc3RyYXRlZ2ljIGNhciBmb3IgZW1lcmdpbmcgbWFya2V0cy4gSXQgaGFzIG5vdCBzcGVjaWZpZWQgd2hlcmUgaXQgZXhwZWN0cyB0byBtYWtlIHRoZSBuZXcgY2FyLCB0aG91Z2ggU3BhaW4gaXMgcnVtb3JlZCB0byBiZSB0aGUgY2hvaWNlLiBUd28gaW5kaXZpZHVhbHMgZmFtaWxpYXIgd2l0aCBHTSdzIHByb2R1Y3QtZGV2ZWxvcG1lbnQgcGxhbnMgc2FpZCB0aGUgYXV0b21ha2VyIGhhZCBhbHNvIHNoaWZ0ZWQgdGhlIENydXplJ3MgbGVhZCBkZXZlbG9wbWVudCB0ZWFtIG91dCBvZiBLb3JlYSB0byBpdHMgdGVjaG5pY2FsIGNlbnRlciBuZWFyIERldHJvaXQuIFRoZSBjb21wYW55IGhhcyBzaW1pbGFyIHBsYW5zIGZvciB0aGUgT3BlbCBNb2trYSwgYSBzdWJjb21wYWN0IFNVViBpdCBtYWtlcyBpbiBTb3V0aCBLb3JlYSBhbmQgZXhwb3J0cyB0byBFdXJvcGUgYXMgdGhlIE1va2thIGFuZCB0byBDaGluYSBhbmQgdGhlIFVuaXRlZCBTdGF0ZXMgYXMgdGhlIEJ1aWNrIEVuY29yZS4gR00gc2FpZCBpdCBwbGFubmVkIHRvIHNoaWZ0IGEgbGFyZ2UgY2h1bmsgb2YgcHJvZHVjdGlvbiBvZiB0aGUgY2FyJ3MgcmVkZXNpZ25lZCBtb2RlbCB0byBTcGFpbiBmcm9tIHRoZSBzZWNvbmQgaGFsZiBvZiAyMDE0LCBpbml0aWFsbHkgdXNpbmcga2l0cyBicm91Z2h0IGluIGZyb20gS29yZWEuIEdNIEtvcmVhIHdvdWxkIGtlZXAgcHJvZHVjaW5nIGl0cyBjdXJyZW50IG1vZGVsIGluIFNvdXRoIEtvcmVhLiBMQUJPUiBDT1NUUyBGb3IgbXVjaCBvZiB0aGUgcGFzdCBkZWNhZGUsIEdNIEtvcmVhIGhhcyBiZWVuIGEgc3VjY2Vzc2Z1bCB2ZW50dXJlLiBJdCBjb21iaW5lZCBHTSdzIGdsb2JhbCByZWFjaCB3aXRoIHRoZSBmb3JtZXIgRGFld29vJ3Mgc21hbGwgY2FyIHRlY2hub2xvZ3ksIHdoaWNoIEdNIGxhY2tlZC4gRGFld29vJ3MgdGVjaG5vbG9neSBwbGF5ZWQgYSBrZXkgcm9sZSBpbiBwb3dlcmluZyBHTSBmb3IgYSByZWxhdGl2ZWx5IHF1aWNrIGNvbWViYWNrIGZyb20gaXRzIGJhbmtydXB0Y3kgaW4gMjAwOSwgYWxsb3dpbmcgdGhlIERldHJvaXQtYmFzZWQgZmlybSB0byBtYWtlIGlucm9hZHMgaW4gQ2hpbmEgYW5kIG90aGVyIGhpZ2gtZ3Jvd3RoIGVtZXJnaW5nIG1hcmtldHMuIEJ1dCB3YWdlcyBoYXZlIGJlZW4gc3VyZ2luZyBpbiBLb3JlYS4gQXQgR00gS29yZWEsIGxhYm9yIGNvc3QgcGVyIHZlaGljbGUgaXMgc2V0IHRvIGhpdCAkMSwxMzMgdGhpcyB5ZWFyLCBhY2NvcmRpbmcgdG8gYSBzbGlkZSBwcmVzZW50YXRpb24gdGhhdCBHTSBLb3JlYSBtYW5hZ2VtZW50IGdhdmUgdG8gdGhlIHVuaW9uIG92ZXIgdGhlIHBhc3QgeWVhciwgc2FpZCBhIHVuaW9uIG9mZmljaWFsIHdobyBhdHRlbmRlZCB0aGUgcHJlc2VudGF0aW9uLiBUaGF0IGNvbXBhcmVzIHRvIGFuIGF2ZXJhZ2UgJDY3NyBwZXIgdmVoaWNsZSBhY3Jvc3MgR00ncyBpbnRlcm5hdGlvbmFsIG9wZXJhdGlvbnMuIFRoZSBzb3VyY2VzIHNhaWQgdGhhdCBHTSBLb3JlYSdzIHBlci12ZWhpY2xlIGxhYm9yIGNvc3Qgd2FzIG9uIHBhciB3aXRoIFNwYWluIGFuZCBSdXNzaWEsIG9yICJ0aGUgbG93ZXIgZW5kIG9mIHRoZSBzY2FsZSBvZiB3aGF0IEdNIGNvbnNpZGVycyBhcyBhIGhpZ2gtY29zdCBjb3VudHJ5Iiwgb25lIHNhaWQuIFRoZSBtYW51ZmFjdHVyaW5nIHNlY3RvcidzIHRvdGFsIGxhYm9yLWNvbXBlbnNhdGlvbiBwZXIgZW1wbG95ZWUgaW4gU291dGggS29yZWEganVtcGVkIDExOSBwZXJjZW50IGluIHRoZSAxMCB5ZWFycyB0aHJvdWdoIDIwMDksIGNvbXBhcmVkIHRvIGEgNDAgcGVyY2VudCByaXNlIGluIHRoZSBVbml0ZWQgU3RhdGVzIGFuZCBhIDI3IHBlcmNlbnQgZ2FpbiBmb3IgdGhlIGV1cm8gem9uZSwgYWNjb3JkaW5nIHRvIGRhdGEgZnJvbSB0aGUgT3JnYW5pc2F0aW9uIGZvciBFY29ub21pYyBDb29wZXJhdGlvbiBhbmQgRGV2ZWxvcG1lbnQuIE5vdywgY29tYmluZWQgd2l0aCBhIHN0cm9uZ2VyIHdvbiBhbmQgdGhlIHJlY2VudCBib3V0IG9mIGdlb3BvbGl0aWNhbCB0ZW5zaW9ucyBvbiB0aGUgS29yZWFuIHBlbmluc3VsYSwgR00gYmVsaWV2ZXMgaXRzIHJpc2stZXhwb3N1cmUgdG8gU291dGggS29yZWEgaGFzIGJlY29tZSBleGNlc3NpdmUgYW5kIG5lZWRzIHRvIGJlICJyZWJhbGFuY2VkIiwgb25lIG9mIHRoZSBzb3VyY2VzIHNhaWQuIEdNIEtvcmVhJ3MgbGFib3IgdW5pb24gYmVsaWV2ZXMgU291dGggS29yZWEgaXMgc3RpbGwgYSBjb21wZXRpdGl2ZSBiYXNlIGZvciBwcm9kdWNpbmcgcXVhbGl0eSBjYXJzIGZvciBzYWxlIGF0IGNvbXBldGl0aXZlIHByaWNlcy4gIktvcmVhIGhhcyBhbiBlZGdlIGluIGNvc3QgY29tcGFyZWQgd2l0aCB0aGUgbGlrZXMgb2YgQXVzdHJhbGlhIGFuZCBHZXJtYW55LCIgdGhlIHVuaW9uJ3MgQ2hvaSBzYWlkLiBMYXN0IG1vbnRoJ3Mgd2FnZSBzZXR0bGVtZW50IGNhbWUgYWZ0ZXIgcGFydGlhbCBzdHJpa2VzIGJ5IEdNIEtvcmVhJ3MgYmx1ZS1jb2xsYXIgYW5kIHdoaXRlLWNvbGxhciB3b3JrZXJzLCB3aGljaCBpbiB0dXJuIGZvbGxvd2VkIHRoZSB1bmlvbidzIHdvcnN0IHdhbGtvdXQgaW4gYSBkZWNhZGUgbGFzdCB5ZWFyLiBUaGF0IHN0cmlrZSByZXN1bHRlZCBpbiBhIHByb2R1Y3Rpb24gbG9zcyBvZiA0OCwwMDAgdmVoaWNsZXMgb3IgJDkyIG1pbGxpb24sIGFjY29yZGluZyB0byBHTSBLb3JlYS4gTGFzdCB5ZWFyLCBtZW1iZXJzIG9mIHRoZSB1bmlvbiBzdG9ybWVkIEdNIEtvcmVhIGNoaWVmIGZpbmFuY2lhbCBvZmZpY2VyIFN0ZXBoZW4gU21hbGwncyBvZmZpY2Ugd2l0aCBzdGVlbCBwaXBlcyBpbiBoYW5kIGRlbWFuZGluZyBiaWdnZXIgbWVhbCBzdWJzaWRpZXMsIHVuaW9uIG9mZmljaWFscyBzYXksIGFkZGluZyB0aGF0IHRoZSBmaXJtIGxhdGVyIGFncmVlZCB0byByYWlzZSBzdWJzaWRpZXMuIEdNIGRlY2xpbmVkIHRvIGNvbW1lbnQgb24gdGhlIGluY2lkZW50LiBMYWJvciBzdHJpa2VzIGhhdmUgbm90IGJlZW4gY29uZmluZWQgdG8gR00gaW4gU291dGggS29yZWEuIE9uIEZyaWRheSwgdW5pb24gZGVsZWdhdGVzIHJlcHJlc2VudGluZyB3b3JrZXJzIGF0IHRoZSBjb3VudHJ5J3MgYmlnZ2VzdCBjYXJtYWtlciwgSHl1bmRhaSBNb3RvciBDbywgdm90ZWQgdG8gc3RyaWtlLiBIeXVuZGFpIHdvcmtlcnMgcmVwcmVzZW50ZWQgYnkgdGhlIHVuaW9uIHdpbGwgdm90ZSBvbiBXZWRuZXNkYXkgd2hldGhlciB0byBnbyBhaGVhZCB3aXRoIHRoZSBzdHJpa2Ugb3Igbm90LiBHTSBpcyBlc3BlY2lhbGx5IGNvbmNlcm5lZCBhYm91dCB1bmlvbiBsZWdhbCBhY3Rpb24gc2Vla2luZyB0byByZWRlZmluZSB0aGUgbWVhbmluZyBvZiAicmVndWxhciB3YWdlIiBpbiBLb3JlYSwgd2hpY2ggdGhlIHNvdXJjZXMgc2F5IGlzIGJ5IGZhciB0aGUgYmlnZ2VzdCBwb3RlbnRpYWwgdGhyZWF0IHRvIEdNIEtvcmVhJ3MgY29udGludWVkIGNvbXBldGl0aXZlbmVzcy4gQSBoaWdoIGNvdXJ0IGluIFNvdXRoIEtvcmVhIGNvdXJ0IHJ1bGVkIGxhc3QgeWVhciB0aGF0IHJlZ3VsYXJseSBwYWlkIGJvbnVzZXMgc2hvdWxkIGJlIGNvdW50ZWQgYXMgcGFydCBvZiBhIHdvcmtlcnMnICJiYXNlIHBheSIsIHdoaWNoIGlzIHVzZWQgdG8gY2FsY3VsYXRlIG92ZXJ0aW1lIGFuZCBwZW5zaW9uIHBheW1lbnRzLiBUaGUgc3VwcmVtZSBjb3VydCBpcyBjdXJyZW50bHkgcmV2aWV3aW5nIHRoZSBydWxpbmcuIEdNIENoaWVmIEV4ZWN1dGl2ZSBEYW4gQWtlcnNvbiB2b2ljZWQgaGlzIGNvbmNlcm5zIGFib3V0IHJpc2luZyBjb3N0cyB0byBTb3V0aCBLb3JlYW4gUHJlc2lkZW50IFBhcmsgR2V1bi1oeWUgZHVyaW5nIGhlciB2aXNpdCB0byBXYXNoaW5ndG9uIGluIE1heSwgdHdvIHNvdXJjZXMgc2FpZC4gQSBzcG9rZXN3b21hbiBmb3IgUHJlc2lkZW50IFBhcmsgZGVjbGluZWQgdG8gY29tbWVudC4gR00gS29yZWEgQ0VPIFNlcmdpbyBSb2NoYSB0aGlzIHllYXIgdG9sZCBSZXV0ZXJzIHRoYXQgR00gS29yZWEncyBsYWJvciBjb3N0cyB3b3VsZCByaXNlIDEwLTEyIHBlcmNlbnQgaWYgaXQgd2FzIGZvcmNlZCB0byBjb3VudCBib251c2VzIGFzIHBhcnQgb2YgYSB3b3JrZXIncyByZWd1bGFyIHBheS4gTWluIEtpLCBjaGFpcm1hbiBvZiB0aGUgR00gS29yZWEgbGFib3IgdW5pb24sIGRlc2NyaWJlZCB1bmlvbi1sZWQgYWN0aW9ucyBpbiB0aGUgcGFzdCB0d28geWVhcnMgYXMgImFuIGV4cGxvc2lvbiBvZiBwZW50LXVwIGZydXN0cmF0aW9uIi4gTWluJ3MgdGVybSBhcyB1bmlvbiBjaGllZiBlbmRzIGluIFNlcHRlbWJlciwgYW5kIGhlIHNheXMgaGUgZG9lc24ndCBwbGFuIHRvIHJ1biBmb3IgcmUtZWxlY3Rpb24uICJXZSBwZXJzZXZlcmVkIG92ZXIgdGhlIHllYXJzIHdpdGggbG93ZXIgcGF5LCBhbmQgd2UncmUgcHJvdWQgb2Ygd2hhdCB3ZSBhY2NvbXBsaXNoZWQgYXMgYSBjb21wYW55LCIgTWluIHRvbGQgUmV1dGVycywgcmVmZXJyaW5nIHRvIGhvdyBEYWV3b28ncyBzbWFsbCBjYXIgdGVjaG5vbG9neSBoZWxwZWQgR00ncyByZWNvdmVyeSBmcm9tIGJhbmtydXB0Y3kuICJXZSB3aWxsIGNvbnRpbnVlIHRvIGZpZ2h0IGZvciBvdXIgZnV0dXJlLiIKCkVkaXRvcidzIE5vdGU6IFNhdmUsIHNob3AgYW5kIGludmVzdCBsaWtlIGFuIGluc2lkZXIhIE91ciBleHBlcnRzIGxlYWQgdGhlIHdheSBlYWNoIG1vbnRoIGluIFRoZSBGcmFua2xpbiBQcm9zcGVyaXR5IFJlcG9ydC4gQ2xpY2sgaGVyZSB0byBsZWFybiBtb3JlLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUBw5SSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGY1MzllYjAyMTY5ZTYwYmY=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0NPU1QuTVg=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUB2C4CAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW3AAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW3AAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW3AAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW3AAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECW1czMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGNkZWY0MjFlZWI4NWFmM2Y=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEv5AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExNTQ5</field><field name="title" class="java.lang.String">rO0ABXQAP1dhbGwgU3RyZWV0J3MgUmFsbHkgTWF0Y2hlcyAxOTkwcyDigJMgd2l0aCBWYWx1YXRpb25zIDI4JSBMb3dlcg==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6XHBSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGNlODRhMmIwNTMyMGI2MDQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAAk1O</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6cQnCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAysKPXCj1x</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzZmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAysKPXCj1x</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzT1wo9cKP</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxz1wo9cKP</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAGUTA==</field><field name="id" class="java.lang.String">rO0ABXQAEDJkZjgwZDJjYzNiZGY3MTA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFC9AAAA==</field></document></documents><date>2015-05-07T12:16:47-0500</date></cacheEntry>
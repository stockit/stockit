<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hQcmVzaWRlbnQgVmxhZGltaXIgUHV0aW5zIG1lZGRsaW5nIGluIFVrcmFpbmUgY29zdCBSdXNzaWEgZGVhcmx5IGluIGZpbmFuY2lhbCBtYXJrZXRzIFdpdGggdGhlIGRvd25pbmcgb2YgTWFsYXlzaWFuIEFpcmxpbmVzIEZsaWdodCAxNyB0aGUgdG9sbCBpcyBvbmx5IGdldHRpbmcgd29yc2UgVGhlIHByaWNlIHRvIHByb3RlY3QgUnVzc2lhbiBib25kcyBhZ2FpbnN0IGRlZmF1bHQgYWxyZWFkeSB0aGUgaGlnaGVzdCBhbW9uZyB0aGUgd29ybGRzIGZvdXIgbGFyZ2VzdCBlbWVyZ2luZyBtYXJrZXRzIGhhcyBzdXJnZWQgc2luY2UgdGhlIEp1bHkgMTcgdHJhZ2VkeSBpbiBlYXN0ZXJuIFVrcmFpbmUgVGhlIE1pY2V4IEluZGV4IHJlc3VtZWQgaXRzIGRlY2xpbmUgcHV0dGluZyB0aGUgbG9zc2VzIHNpbmNlIFB1dGluIGJlZ2FuIGhpcyBwdXNoIGludG8gQ3JpbWVhIGluIGxhdGUgRmVicnVhcnkgYXQgNDIgcGVyY2VudCB0aHJvdWdoIHllc3RlcmRheSBhbmQgd2lwaW5nIG91dCBhYm91dCAyOCBiaWxsaW9uIGluIG1hcmtldCB2YWx1ZSBldmVuIGFzIHN0b2NrIGdhdWdlcyBmcm9tIHRoZSBVUyB0byBJbmRpYSBqdW1wZWQgdG8gYWxsdGltZSBoaWdocyBSdXNzaWFzIG1hcmtldCBzbHVtcCBpcyBleGFjZXJiYXRpbmcgYW4gZWNvbm9taWMgc2xvd2Rvd24gdGhlIG9wcG9zaXRlIGVmZmVjdCBvZiB0aGUgd2VhbHRoIGdlbmVyYXRpb24gZnJvbSBzdG9jayByYWxsaWVzIHRoYXQgYXJlIGhlbHBpbmcgdW5kZXJwaW4gZ3Jvd3RoIGFjcm9zcyB0aGUgZ2xvYmUgUnVzc2lhbiBEZXB1dHkgRWNvbm9teSBNaW5pc3RlciBBbmRyZXkgS2xlcGFjaCBzYWlkIHRoaXMgbW9udGggdGhlIDIgdHJpbGxpb24gZWNvbm9teSBwb3N0ZWQgemVybyBncm93dGggaW4gdGhlIHNlY29uZCBxdWFydGVyIHdoZW4gY29tcGFyZWQgd2l0aCB0aGUgZmlyc3QgVGhhdCBmb2xsb3dzIGEgMDUgcGVyY2VudCBjb250cmFjdGlvbiBpbiB0aGUgSmFudWFyeXRvTWFyY2ggcGVyaW9kIFRoZSBtYXJrZXQgaXMgc2VuZGluZyBhIHNpZ25hbCB0aGF0IFJ1c3NpYSBzaG91bGQgYXZvaWQgYmVjb21pbmcgYW4gb3V0Y2FzdCBhbmQgYXZvaWQgc2h1dHRpbmcgaXRzZWxmIG91dCBvZiBnbG9iYWwgbWFya2V0cyBBbGVrc2VpIEJlbGtpbiB3aG8gaGVscHMgbWFuYWdlIGFib3V0IDQgYmlsbGlvbiBhcyBjaGllZiBpbnZlc3RtZW50IG9mZmljZXIgYXQgS2FwaXRhbCBBc3NldCBNYW5hZ2VtZW50IExMQyBpbiBNb3Njb3cgc2FpZCBieSBlbWFpbCB5ZXN0ZXJkYXkgUHV0aW4gYmVsaWV2ZXMgdGhhdCB3aGF0IGhlIGlzIGRvaW5nIGlzIGp1c3RpZmllZCBhbmQgaGUgaXMgdmVyeSBtdWNoIGF3YXJlIHRoYXQgaGUgaXMgbm90IGZhY2luZyBhIHVuaXRlZCBvcHBvc2l0aW9uIGluIFVrcmFpbmUgQnV0IGl0cyBnZXR0aW5nIGNvc3RsaWVyIHdpdGggZXZlcnkgbW9udGggTW9yZSBTYW5jdGlvbnMgVGhlIE1pY2V4IHNhbmsgNjEgcGVyY2VudCBpbiB0aGUgdGhyZWUgZGF5cyB0aHJvdWdoIEp1bHkgMjEgdGhlIGJpZ2dlc3QgcmV0cmVhdCBzaW5jZSBNYXJjaCBmb2xsb3dpbmcgYSB0aGlyZCByb3VuZCBvZiBVUyBzYW5jdGlvbnMgYWdhaW5zdCBQdXRpbnMgZ292ZXJubWVudCBhbmQgdGhlIGRvd25pbmcgb2YgTUgxNyB3aGljaCB0aGUgVVMgYW5kIEV1cm9wZWFuIFVuaW9uIHNheSBtYXkgaGF2ZSBiZWVuIGNhcnJpZWQgb3V0IGJ5IHByb1J1c3NpYW4gcmViZWxzIEFsbCAyOTggcGFzc2VuZ2VycyBhbmQgY3JldyBhYm9hcmQgdGhlIHBsYW5lIHdlcmUga2lsbGVkIFRoZSBNaWNleCByb3NlIDE4IHBlcmNlbnQgdG9kYXkgYnkgMTMwIHBtIGluIE1vc2NvdyBMZXNzIHRoYW4gYSB3ZWVrIGFmdGVyIGFwcHJvdmluZyB0aGUgbmV3IG1lYXN1cmVzIGRlc2lnbmVkIHRvIHB1bmlzaCBQdXRpbiBmb3IgZmFpbGluZyB0byBlbmQgc3VwcG9ydCBmb3IgdGhlIFVrcmFpbmlhbiBzZXBhcmF0aXN0cyB0aGUgVVMgaXMgcHVzaGluZyBFdXJvcGVhbiBnb3Zlcm5tZW50cyBmb3IgZnVydGhlciBwZW5hbHRpZXMgYWdhaW5zdCBSdXNzaWEgU2VjcmV0YXJ5IG9mIFN0YXRlIEpvaG4gS2Vycnkgc2FpZCBKdWx5IDIwIGNpcmN1bXN0YW50aWFsIGV2aWRlbmNlIHN1Z2dlc3RzIFJ1c3NpYSBwcm92aWRlZCB0aGUgbWlzc2lsZSB0aGF0IHJlYmVscyB1c2VkIHRvIHNob290IGRvd24gdGhlIHBhc3NlbmdlciBwbGFuZSBVSyBQcmltZSBNaW5pc3RlciBEYXZpZCBDYW1lcm9uIHllc3RlcmRheSByYWlzZWQgdGhlIHByb3NwZWN0IG9mIGEgRVV3aWRlIGJsb2NrIG9uIGRlZmVuc2UgZXhwb3J0cyB0byBSdXNzaWEgYXMgd2VsbCBhcyB0YXJnZXRlZCBzYW5jdGlvbnMgYWdhaW5zdCB0aGUgY3JvbmllcyBhbmQgb2xpZ2FyY2hzIGFyb3VuZCBQdXRpbiB1bmxlc3MgdGhlIGNvdW50cnkgZHJvcHMgaXRzIHN1cHBvcnQgb2YgdGhlIHNlcGFyYXRpc3RzIE5lZ290aWF0ZSBTb2x1dGlvbiBQdXRpbiBoYXMgZGVmaWVkIGludGVybmF0aW9uYWwgbGVhZGVycyBzYXlpbmcgdGhhdCBub2JvZHkgc2hvdWxkIHVzZSB0aGlzIHRyYWdlZHkgdG8gYWNoaWV2ZSBzZWxmaXNoIHBvbGl0aWNhbCBhaW1zIEhlIGJsYW1lZCB0aGUgY3Jhc2ggb2YgdGhlIHBsYW5lIG9uIHRoZSBVa3JhaW5lIGNvbmZsaWN0IGFuZCBzYWlkIFJ1c3NpYSB3aWxsIGRvIGV2ZXJ5dGhpbmcgaXQgY2FuIHRvIHNlZWsgYSBuZWdvdGlhdGVkIHNldHRsZW1lbnQgb2YgdGhlIGNyaXNpcyBUaGUgYmlnIGRpZmZlcmVuY2UgYmV0d2VlbiB0aGUgcmVjZW50IGRldGVyaW9yYXRpb24gaW4gc2VudGltZW50IHRvd2FyZHMgUnVzc2lhIGFuZCB0aGUgcHJlc3N1cmUgb24gb3RoZXIgRU0gYXNzZXRzIGlzIHRoYXQgaW4gdGhlIGNhc2Ugb2YgUnVzc2lhIGl0IGlzIGFsbW9zdCBlbnRpcmVseSBkcml2ZW4gYnkgdGhlIGFjdGlvbnMgb2Ygb25lIG1hbiBOaWNob2xhcyBTcGlybyBtYW5hZ2luZyBkaXJlY3RvciBvZiBMb25kb25iYXNlZCBTcGlybyBTb3ZlcmVpZ24gU3RyYXRlZ3kgc2FpZCBieSBlbWFpbCBXaGlsZSB0aGVyZXMgbm8gcXVlc3Rpb24gdGhhdCBSdXNzaWFzIGVjb25vbXkgaXMgaW4gYSBkaXJlIHN0YXRlIHJpZ2h0IG5vdyBzZW50aW1lbnQgdG93YXJkcyBSdXNzaWFuIGFzc2V0cyBpcyBzdGlsbCBzdHJvbmdseSBpbmZsdWVuY2VkIGJ5IHBlcmNlcHRpb25zIG9mIHdoYXQgTXIgUHV0aW4gd2lsbCBkbyBUaGUgY29zdCBvZiBwcm90ZWN0aW5nIFJ1c3NpYW4gYm9uZHMgYWdhaW5zdCBkZWZhdWx0IGZvciBmaXZlIHllYXJzIHJvc2UgYWJvdXQgMjMgYmFzaXMgcG9pbnRzIHRvIDIwNyBiYXNpcyBwb2ludHMgdGhpcyBtb250aCB0aGUgaGlnaGVzdCBhbW9uZyB0aGUgd29ybGRzIGxhcmdlc3QgZW1lcmdpbmcgbWFya2V0cyBpbmNsdWRpbmcgQnJhemlsIEluZGlhIGFuZCBDaGluYSBhY2NvcmRpbmcgdG8gZGF0YSBjb21waWxlZCBieSBCbG9vbWJlcmcgUnVzc2lhIGhhZCBpdHMgY3JlZGl0IHJhdGluZyBjdXQgdG8gQkJCIHRoZSBsb3dlc3QgaW52ZXN0bWVudCBncmFkZSByYW5raW5nIGluIEFwcmlsIGJ5IFN0YW5kYXJkICBQb29ycyBCZWFyaXNoIFRyYWRlcnMgUnVzc2lhbiBjb3Jwb3JhdGUgZGVidCBzYWxlcyBvdmVyc2VhcyBhcmUgZG93biA2NyBwZXJjZW50IHRoaXMgeWVhciBqdXN0IGFzIGNoZWFwIGdsb2JhbCBib3Jyb3dpbmcgY29zdHMgc3B1ciByZWNvcmQgaXNzdWFuY2Ugd29ybGR3aWRlIHRoZSBkYXRhIHNob3cgSW4gY3VycmVuY3kgb3B0aW9ucyB0cmFkZXJzIGFyZSB0aGUgbW9zdCBiZWFyaXNoIG9uIFJ1c3NpYXMgcnVibGUgYW1vbmcgMjMgZGV2ZWxvcGluZ2NvdW50cnkgY3VycmVuY2llcyBhZnRlciBBcmdlbnRpbmFzIHBlc28gSW52ZXN0b3JzIGFyZSBwYXlpbmcgMjkgcGVyY2VudGFnZSBwb2ludHMgbW9yZSBmb3IgdGhlIHJpZ2h0cyB0byBzZWxsIHRoZSBydWJsZSBvdmVyIHRob3NlIHRvIGJ1eSBUaGF0cyBhYm91dCB0d2ljZSB0aGUgcHJlbWl1bSBmb3IgdGhlIFBvbGlzaCB6bG90eSBhbmQgQ29sb21iaWFuIHBlc28gYWNjb3JkaW5nIHRvIHNvY2FsbGVkIHRocmVlbW9udGggcmlzayByZXZlcnNhbCBkYXRhIGNvbXBpbGVkIGJ5IEJsb29tYmVyZyBUaGUgMjUgcGVyY2VudCBkZWNsaW5lIGZvciBSdXNzaWFzIE1pY2V4IGVxdWl0eSBnYXVnZSBzaW5jZSB0aGUgZW5kIG9mIEZlYnJ1YXJ5IGNvbXBhcmVzIHdpdGggYW4gMTEgcGVyY2VudCBnYWluIGZvciBlbWVyZ2luZ21hcmtldCBzdG9ja3MgZ2xvYmFsbHkgYW5kIGEgNjEgcGVyY2VudCByYWxseSBpbiB0aGUgU3RhbmRhcmQgIFBvb3JzIDUwMCBJbmRleCBpbiB0aGUgVVMgQmlsbGlvbmFpcmUgTG9zc2VzIFJ1c3NpYXMgZm9yZWlnbiByZXNlcnZlcyBoYXZlIHNsaWQgMTUgYmlsbGlvbiBzaW5jZSB0aGUgZW5kIG9mIEZlYnJ1YXJ5IHRvIDQ3OCBiaWxsaW9uIGluIEp1bmUgYXMgdGhlIGNlbnRyYWwgYmFuayBzb2xkIGRvbGxhcnMgdG8gc3RlbSB0aGUgbG9zc2VzIGluIHRoZSBydWJsZSBSZXNlcnZlcyBoYXZlIGRlY2xpbmVkIDY3IGJpbGxpb24gb3IgMTIgcGVyY2VudCBzaW5jZSB0aGVpciBwZWFrIGluIEF1Z3VzdCAyMDExIGFjY29yZGluZyB0byBjZW50cmFsIGJhbmsgZGF0YSBBbWlkIHRoZSBtYXJrZXQgdHVybW9pbCB0aGUgMTkgcmljaGVzdCBSdXNzaWFucyBsb3N0IDE3NCBiaWxsaW9uIHNpbmNlIHRoZSBzdGFydCBvZiB0aGUgeWVhciBCeSBjb21wYXJpc29uIHRoZSByaWNoZXN0IDY0IEFtZXJpY2FucyBoYXZlIHNlZW4gdGhlaXIgd2VhbHRoIGdvIHVwIDU1IGJpbGxpb24gYWNjb3JkaW5nIHRvIHRoZSBCbG9vbWJlcmcgQmlsbGlvbmFpcmVzIEluZGV4IEdsb2JhbCBpbnZlc3RvcnMgd2l0aGRyZXcgMzQ4IG1pbGxpb24gZnJvbSBSdXNzaWFuIGJvbmQgYW5kIHN0b2NrIGZ1bmRzIHNpbmNlIHRoZSBlbmQgb2YgRmVicnVhcnkgYWNjb3JkaW5nIHRvIGRhdGEgY29tcGlsZWQgYnkgRVBGUiBHbG9iYWwgUnVzc2lhbiBzdG9ja3MgaGF2ZSB3aGlwc2F3ZWQgYXNzZXQgbWFuYWdlcnMgdGhpcyB5ZWFyIFRoZXkgcGx1bmdlZCBhYm91dCAxOCBwZXQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0xMi0wM1QwMDowMDowMFogVE8gMjAxNC0wNy0xMFQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDM5ODA=</field><field name="title" class="java.lang.String">rO0ABXQAN0JhbmtydXB0Y3kgSXMgT3B0aW9uIGZvciBSdXNzaWEncyBNZWNoZWwsIE1pbmlzdGVyIFNheXM=</field><field name="content" class="java.lang.String">rO0ABXQNk0luZGVidGVkIG1pbmVyIE1lY2hlbCAgbWF5IGJlIGFsbG93ZWQgdG8gZGVjbGFyZSBiYW5rcnVwdGN5IHRvIHNvcnQgb3V0IGl0cyBmaW5hbmNlcywgYSBSdXNzaWFuIG1pbmlzdGVyIHNhaWQsIHN1Z2dlc3RpbmcgZm9yIHRoZSBmaXJzdCB0aW1lIHRoYXQgdGhlIGNvbXBhbnkgbWlnaHQgbm90IGJlIGJhaWxlZCBvdXQuIFJ1c3NpYSBoYXMgYmVlbiBudXJzaW5nIGl0cyBvbGlnYXJjaC1vd25lZCBjb25nbG9tZXJhdGVzIHRocm91Z2ggYSBwcm9sb25nZWQgZG93bnR1cm4gaW4gdGhlIGNvbW1vZGl0aWVzIGN5Y2xlLCBzZWVraW5nIHRvIGF2b2lkIGEgd2F2ZSBvZiBkZWZhdWx0cyB0aGF0IHdvdWxkIGxlYWQgdG8gbWFzcyBqb2IgbG9zc2VzIGF0IGEgdGltZSB3aGVuIHRoZSBlY29ub215IGlzIGF0IGEgbmVhciBzdGFuZHN0aWxsLiBIb3dldmVyLCBJbmR1c3RyeSBNaW5pc3RlciBEZW5pcyBNYW50dXJvdiBzYWlkIG9uIFRodXJzZGF5IGJhbmtydXB0Y3kgbWlnaHQgaGVscCBNZWNoZWwsIGEgY29hbC10by1zdGVlbCBncm91cCB3aXRoICQ4LjYgYmlsbGlvbiBpbiBkZWJ0IGFuZCB3aGljaCBlbXBsb3lzIDcwLDAwMCB3b3JrZXJzLCBhIGRheSBhZnRlciBzdGF0ZSBkZXZlbG9wbWVudCBiYW5rIFZuZXNoZWNvbm9tYmFuayBzYWlkIGl0IGRpZCBub3Qgd2FudCB0byB0YWtlIHBhcnQgaW4gYW55IGJhaWxvdXQuIFdoaWxlIE1hbnR1cm92J3MgY29tbWVudHMgY291bGQgc2lnbmFsIGEgY2hhbmdlIGluIHBvbGljeSwgdGhlIGZpbmFsIGRlY2lzaW9uIG9uIHdoYXQgdG8gZG8gd2l0aCBNZWNoZWwsIGNvbnRyb2xsZWQgYnkgYnVzaW5lc3NtYW4gSWdvciBaeXV6aW4sIHdpbGwgbW9zdCBwcm9iYWJseSByZXN0IHdpdGggUnVzc2lhbiBQcmVzaWRlbnQgVmxhZGltaXIgUHV0aW4uICJXZSBuZWVkIHRvIHRhbGsgYWJvdXQgZmluYW5jaWFsIHJlY292ZXJ5IGVpdGhlciB2aWEgYmFua3J1cHRjeSBsYXcsIG9yIGJ5IHN0cmVuZ3RoZW5pbmcgYSBtYW5hZ2luZyBjb21wYW55LCB3aGljaCBzaG91bGQgdGFrZSB0aGUgcmlzayBvbiBpdHNlbGYgYW5kIHRoZSByZXNwb25zaWJpbGl0eSB0byB0YWtlIHRoZSBjb21wYW55IG91dCBvZiBjcmlzaXMsIiBSSUEgbmV3cyBhZ2VuY3kgcXVvdGVkIE1hbnR1cm92IGFzIHNheWluZy4gIkJ1dCB0aGUgdGFza3MgYW5kIHRoZSBjb21taXRtZW50cyBhcmUgaHVnZSBhbmQgSSBjYW5ub3Qgc2F5IHdobyBpcyB3aWxsaW5nIHRvIHRha2UgaXQgeWV0LiBUaGVyZWZvcmUsIHdlIHdpbGwgY29udGludWUgdG8gd29yayBvbiBpdCwiIE1hbnR1cm92IGFkZGVkLiBIZSBkaWQgbm90IGdpdmUgYW55IGZ1cnRoZXIgZGV0YWlscy4gTWVjaGVsIGRlY2xpbmVkIHRvIGNvbW1lbnQuIEhpdCBieSB3ZWFrIHByaWNlcyBmb3IgaXRzIHByb2R1Y3RzLCBNZWNoZWwgaXMgaW4gY3JpdGljYWwgbmVlZCBvZiBmaW5hbmNpYWwgc3VwcG9ydC4gSXQgaGFzIGFscmVhZHkgdW5kZXJnb25lIHNldmVyYWwgZGVidCByZXN0cnVjdHVyaW5ncyB3aXRoIGNyZWRpdG9yIGJhbmtzLCBtYWlubHkgd2l0aCB0aHJlZSBzdGF0ZSBiYW5rczogU2JlcmJhbmssIFZUQiBhbmQgR2F6cHJvbWJhbmsuIEluIDIwMTMsIHRoZSBjb21wYW55IGVhcm5lZCBsZXNzIHRoYW4gaXQgbmVlZGVkIHRvIHN0dW1wIHVwIGluIGludGVyZXN0IHBheW1lbnRzIG9uIGl0cyBsb2Fucy4KClBVVElOJ1MgREVDSVNJT04KCkFmdGVyIG1vbnRocyBvZiBuZWdvdGlhdGlvbnMsIGl0IGlzIGNsZWFyIG9mZmljaWFscyBoYXZlIHlldCB0byByZWFjaCBhIGNvbnNlbnN1cyBvbiB3aGF0IHRvIGRvIG5leHQgd2l0aCBhIGNvbXBhbnkgdGhhdCBwcm92aWRlcyBlbXBsb3ltZW50IHRvIHRob3VzYW5kcyBpbiBSdXNzaWEncyBpbmR1c3RyaWFsIFVyYWxzIHJlZ2lvbnMsIGl0cyBmYXIgZWFzdCBhbmQgU2liZXJpYS4gUHJldmlvdXNseSwgdGhlIGdvdmVybm1lbnQgaGFkIHByZWZlcnJlZCBhIGJhaWxvdXQgYmVjYXVzZSBpdCB3YXMgc2VlbiBhcyBzYWZlciBmb3IgY3JlZGl0b3JzIGFuZCBiZXR0ZXIgYWJsZSB0byBzYXZlIGpvYnMuIEEgc291cmNlIGZhbWlsaWFyIHdpdGggZ292ZXJubWVudCBkaXNjdXNzaW9ucyBvbiBNZWNoZWwgdG9sZCBSZXV0ZXJzIHRoYXQgUHV0aW4gd291bGQgdGFrZSB0aGUgZmluYWwgZGVjaXNpb24uICJUaGVyZSB3ZXJlIHNldmVyYWwgb3JkZXJzICh0byBkaXNjdXNzIHRoZSBwcm9ibGVtKSBmcm9tIGhpbTsgbm93IGV2ZXJ5dGhpbmcgd2lsbCByZXR1cm4gdG8gaGltIGFuZCBoZSB3aWxsIGhhdmUgdG8gbWFrZSBhIGRlY2lzaW9uIGhpbXNlbGYsIiB0aGUgc291cmNlIHNhaWQuICJJdCdzIHRoZSBjb21wYW55J3MgZGVzdGlueSwgbm90IFp5dXppbidzLCB3aGljaCBpcyB0aGUgcHJlc2lkZW50J3MgaGVhZGFjaGUgbm93LCIgdGhlIHNvdXJjZSBzYWlkLCBzdWdnZXN0aW5nIHRoYXQgdGhlIGdvdmVybm1lbnQgd291bGQgbGlrZSB0byBhdm9pZCBhIGxhcmdlIGxvc3Mgb2Ygam9icy4gIkl0J3MgZXhhY3RseSB0aGF0IGNhc2Ugd2hlbiAoc29tZXRoaW5nKSBpcyB0b28gYmlnIHRvIGZhaWwuIiBUaGUgZ292ZXJubWVudCBoYWQgYmVlbiBjb25zaWRlcmluZyBpbXBsZW1lbnRpbmcgYSAxODAtYmlsbGlvbiBydWJsZSAoJDUuMyBiaWxsaW9uKSBzY2hlbWUgaW4gd2hpY2ggdGhyZWUgYmFua3Mgd291bGQgbG9hbiB0aGlzIHN1bSB0byBWRUIsIHdoaWNoIHdvdWxkIHVzZSB0aGUgY2FzaCB0byBidXkgY29udmVydGlibGUgYm9uZHMgZnJvbSBNZWNoZWwuIEhvd2V2ZXIgb24gV2VkbmVzZGF5IFZFQiBjaGFpcm1hbiBWbGFkaW1pciBEbWl0cmlldiBzYWlkIGhlIHdvdWxkIHJlY29tbWVuZCB0byB0aGUgYmFuaydzIHN1cGVydmlzb3J5IGJvYXJkLCBjaGFpcmVkIGJ5IFByaW1lIE1pbmlzdGVyIERtaXRyeSBNZWR2ZWRldiwgdGhhdCBpdCBzaG91bGQgYXZvaWQgYmFpbG91dCBzY2hlbWVzIGFzIHRoZXkgd291bGQgYmUgbG9zcy1tYWtpbmcuIEl0IHdhcyBub3QgY2xlYXIgd2hldGhlciBWRUIncyBib2FyZCB3b3VsZCBmb2xsb3cgdGhlIGFkdmljZSwgbm9yIHdoZW4gdGhleSB3b3VsZCBuZXh0IG1lZXQuIEJlc2lkZXMgVkVCIGFuZCBiYW5rcnVwdGN5LCBhbm90aGVyIG9wdGlvbiBpcyBmb3Igc3RhdGUgYmFua3MgdG8gc2VlayBnb3Zlcm5tZW50IGd1YXJhbnRlZXMgZm9yIGZ1cnRoZXIgcmVzdHJ1Y3R1cmluZyBvZiBNZWNoZWwncyBkZWJ0cy4gIklmIFZFQiBkZWNsaW5lcyAodG8gcGFydGljaXBhdGUpLCBiYW5rcyB3aWxsIHB1c2ggZm9yIHN0YXRlIGd1YXJhbnRlZXMsIiBhIGJhbmtpbmcgc291cmNlIHRvbGQgUmV1dGVycy4gU2hhcmVzIGluIE1lY2hlbCB3ZXJlIGRvd24gMTMgcGVyY2VudCBpbiBNb3Njb3cgb24gVGh1cnNkYXkuIFRoZSBjb21wYW55J3MgbWFya2V0IHZhbHVlIGhhcyBwbHVtbWV0ZWQgbW9yZSB0aGFuIDk1IHBlcmNlbnQgc2luY2UgaXRzIHBlYWsgaW4gMjAwOCwgYWNjb3JkaW5nIHRvIFJldXRlcnMgZGF0YS4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcepHSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDdlMmE0ZmI5YzRkYzJjOGY=</field><field name="symbol" class="java.lang.String">rO0ABXQAA05PUg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcjytCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAQMzMzMzMz</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAQo9cKPXCk</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAP1wo9cKPX</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAQPXCj1wo9</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAQHrhR64Uf</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAU1NA==</field><field name="id" class="java.lang.String">rO0ABXQAEGNhYWZlZWQ1N2RkNDY3NGU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFV4AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM5ODE=</field><field name="title" class="java.lang.String">rO0ABXQAM0ZhbHRlcmluZyBHZXJtYW55IENhc3RzIENsb3VkIE92ZXIgRnJhZ2lsZSBFdXJvem9uZQ==</field><field name="content" class="java.lang.String">rO0ABXQVm0dlcm1hbnkncyBmYWx0ZXJpbmcgZWNvbm9teSBoYXMgY2FzdCBmdXJ0aGVyIGRvdWJ0IG92ZXIgdGhlIGV1cm96b25lJ3MgcHJvc3BlY3RzIGZvciByZWNvdmVyeSB0aGlzIHllYXIsIHdpdGggbm8gb3RoZXIgYmlnIGNvdW50cnkgc3Ryb25nIGVub3VnaCB0byBwaWNrIHVwIHRoZSBzbGFjay4gU2luY2UgbGF0ZSBsYXN0IHllYXIsIHRoZSAxOCBjb3VudHJpZXMgdXNpbmcgdGhlIGV1cm8gaGF2ZSBiZWVuIGNsaW1iaW5nIHN0ZWFkaWx5IG91dCBvZiBhIHR3by15ZWFyIHJlY2Vzc2lvbi4gQnV0IGp1c3QgYXMgdGhlIGJsb2MgYXBwZWFyZWQgdG8gYmUgdHVybmluZyB0aGUgY29ybmVyLCBpdHMgc3RhciBlY29ub215LCBHZXJtYW55LCBoYXMgZnVtYmxlZCB0aGUgYmFsbC4gVG8gbWFrZSBtYXR0ZXJzIHdvcnNlLCBvdGhlciBiaWcgc3RhdGVzLCBpbmNsdWRpbmcgdGhlIGV1cm96b25lJ3Mgc2Vjb25kLWxhcmdlc3QgZWNvbm9teSBGcmFuY2UsIHNob3cgbGl0dGxlIHByb3NwZWN0IG9mIGEgc3Ryb25nIHJlYm91bmQuIEZyZW5jaCBpbmR1c3RyaWFsIHByb2R1Y3Rpb24gcGx1bmdlZCB1bmV4cGVjdGVkbHkgaW4gTWF5LCBhbmQgaW5mbGF0aW9uIGZlbGwgdG8gaXRzIGxvd2VzdCBsZXZlbCBzaW5jZSB0aGUgZmluYW5jaWFsIGNyaXNpcyBpbiAyMDA5LiBBZGRpbmcgdG8gdGhlIGdsb29tLCBJdGFseSdzIGZhY3RvcmllcyBhbHNvIHNhdyBhIDEuMiBwZXJjZW50IGRyb3AgaW4gb3V0cHV0IGluIE1heSwgdGhlIHN0ZWVwZXN0IGZhbGwgaW4gbW9yZSB0aGFuIGEgeWVhciBhbmQgYSBoYWxmLiBBbmQgd2hpbGUgU3BhaW4gaXMgZXhwZWN0aW5nIGdyb3d0aCB0byBhY2NlbGVyYXRlIHRvIG5lYXIgMiBwZXJjZW50IGluIDIwMTUsIG9uZSBpbiBmb3VyIG9mIFNwYWluJ3Mgd29ya2ZvcmNlIGFyZSBvdXQgb2Ygd29yayBhZnRlciB0aGUgY29sbGFwc2Ugb2YgYSBwcm9wZXJ0eSBwcmljZSBidWJibGUuICJFdXJvcGUgaXMgZ2V0dGluZyBtb3JlIGFuZCBtb3JlIEphcGFuZXNlLCIgc2FpZCBDYXJzdGVuIEJyemVza2ksIGFuIGVjb25vbWlzdCB3aXRoIElORywgZWNob2luZyBjb25jZXJucyBvZiBvdGhlcnMgdGhhdCB0aGUgcmVnaW9uIGZhY2VzIHBlcm1hbmVudCBzbG93IGdyb3d0aCBhbmQgbm8gcHJpY2UgaW5mbGF0aW9uLiAiVGhlIGV1cm96b25lIGlzIGZsYXQgbGluaW5nLiBJIGRvbid0IHNlZSBzdWJzdGFudGlhbCBncm93dGggZm9yIGFub3RoZXIgeWVhci4iCgpDSE9LSU5HIEVYUE9SVFMKCkF0IHRoZSBzdGFydCBvZiAyMDE0LCB0aGUgcGljdHVyZSBsb29rZWQgZGlmZmVyZW50LiBUaHJvdWdob3V0IHRoZSBmaXJzdCB0aHJlZSBtb250aHMsIHRoZSBHZXJtYW4gZWNvbm9teSBncmV3IGF0IGl0cyBzdHJvbmdlc3QgcmF0ZSBpbiB0aHJlZSB5ZWFycywgMC44IHBlcmNlbnQsIHRoYW5rcyBpbiBwYXJ0IHRvIG1pbGQgd2VhdGhlciBsaWZ0aW5nIGNvbnN0cnVjdGlvbiB3b3JrLiBUaGF0IG1hZGUgdXAgZm9yIHN0YWduYXRpb24gb3Igc2xvd2Rvd24gaW4gRnJhbmNlLCBJdGFseSBhbmQgdGhlIE5ldGhlcmxhbmRzIGFuZCBwcmV2ZW50ZWQgdGhlIGJsb2MncyBvdmVyYWxsIHJlY292ZXJ5IGZyb20gc3RhbGxpbmcuIFdoaWxlIEJyaXRhaW4sIG91dHNpZGUgdGhlIGJsb2MsIHVuZGVybGluZWQgaXRzIHJvYnVzdCByZWNvdmVyeSB3aXRoIHRoZSBzdHJvbmdlc3QgcXVhcnRlcmx5IGdyb3d0aCBpbiBmb3VyIHllYXJzIHRvIGVuZCBKdW5lLCB0aGUgbW9vZCBpcyB0dXJuaW5nIGluIGNvbnRpbmVudGFsIEV1cm9wZSdzIGluZHVzdHJpYWwgcG93ZXJob3VzZS4gR2VybWFuIGV4cG9ydHMsIGltcG9ydHMsIGluZHVzdHJpYWwgb3JkZXJzLCBvdXRwdXQgYW5kIHJldGFpbCBzYWxlcyBhbGwgZmVsbCBpbiBNYXkgY29tcGFyZWQgd2l0aCBhIG1vbnRoIGVhcmxpZXIuIE9uIFRodXJzZGF5LCBHZXJtYW55J3MgZWNvbm9teSBtaW5pc3RyeSBjYXV0aW9uZWQgYWJvdXQgdGhlIGltcGFjdCBvZiB0aGUgY3Jpc2lzIGluIFVrcmFpbmUgb24gY29uZmlkZW5jZSBpbiBHZXJtYW55IGFzIGl0IHBhaW50ZWQgYSBibGVhayBwaWN0dXJlIG9mIHRoZSBzZWNvbmQgcXVhcnRlci4gIkFmdGVyIGEgZ3Jvd3RoLXN0cm9uZyBzdGFydCB0byB0aGUgeWVhciwgdGhlIGRldmVsb3BtZW50IG9mIHRoZSBHZXJtYW4gZWNvbm9teSBpbiB0aGUgc2Vjb25kIHF1YXJ0ZXIgaXMgc3ViZHVlZCwiIHRoZSByZXBvcnQgc2FpZC4gQWNyb3NzIHRoZSB3aG9sZSBldXJvem9uZSwgYW5hbHlzdHMgZXhwZWN0IGdyb3d0aCBpbiB0aGUgc2Vjb25kIHF1YXJ0ZXIgYXQgYXJvdW5kIDAuMiBwZXJjZW50LCBxdWFydGVyIG9uIHF1YXJ0ZXIsIGFzIHNlZW4gaW4gdGhlIHRocmVlIG1vbnRocyB0byBNYXJjaC4gSW4gdGhlIGJvYXJkcm9vbXMgb2YgR2VybWFueSdzIE1pdHRlbHN0YW5kLCB0aGUgc21hbGwgYW5kIG1lZGl1bS1zaXplZCBjb21wYW5pZXMgdGhhdCBlbXBsb3kgYWJvdXQgNzAgcGVyY2VudCBvZiBpdHMgd29ya2ZvcmNlLCB0aGUgc2Vuc2Ugb2YgbmVydm91c25lc3MgaXMgcGFscGFibGUuICJUaGUgbW9vZCBoYXMgZGV0ZXJpb3JhdGVkIGFmdGVyIHRoZSBzdHJvbmcgc3RhcnQgdG8gdGhlIHllYXIsIiBNYXJpbyBPaG92ZW4sIGhlYWQgb2YgdGhlIEJWTVcgTWl0dGVsc3RhbmQgYXNzb2NpYXRpb24sIHRvbGQgUmV1dGVycy4gSGUgYmxhbWVkIHRoZSAic21vbGRlcmluZyIgZXVyb3pvbmUgY3Jpc2lzIGFuZCBVa3JhaW5lIGZvciBjcmltcGluZyBjb21wYW5pZXMnIGV4cG9ydCBmb3JlY2FzdHMuIE1hcnRpbiBXYW5zbGViZW4sIE1hbmFnaW5nIERpcmVjdG9yIG9mIHRoZSBHZXJtYW4gQ2hhbWJlciBvZiBJbmR1c3RyeSBhbmQgQ29tbWVyY2UsIG1hZGUgYSBzaW1pbGFyIGFzc2Vzc21lbnQuICJUaGUgb25nb2luZyBVa3JhaW5lLVJ1c3NpYSBjcmlzaXMsIHRoZSBjb25mbGljdHMgaW4gdGhlIE1pZGRsZSBFYXN0IGFuZCB0aGUgcm9weSBlY29ub21pYyBhY3Rpdml0eSBpbiBlbWVyZ2luZyBtYXJrZXRzIGFyZSBjbGVhcmx5IGNob2tpbmcgdGhlIGV4cG9ydCBidXNpbmVzcy4iIEJvdGggZXhwZWN0IGFuIGltcHJvdmVtZW50IGxhdGVyIGluIHRoZSB5ZWFyLCBhcyBkbyBlY29ub21pc3RzLCBidXQgZmV3IGJlbGlldmUgR2VybWFueSdzIGVjb25vbWljIG11c2NsZSBjYW4gdGhpcyB0aW1lIHB1bGwgaXRzIG5laWdoYm9ycyBmcm9tIHRoZSB0cm91Z2guICJUaGUgbnVtYmVycyBhcmUgYnVtcHksIiBzYWlkIEpvbmF0aGFuIExveW5lcywgQ2hpZWYgRXVyb3BlYW4gRWNvbm9taXN0IGF0IENhcGl0YWwgRWNvbm9taWNzLiAiSSB0aGluayB0aGUgZWNvbm9teSBpcyBncm93aW5nLCBidXQgLi4uIG5vdCBzdHJvbmdseSBlbm91Z2ggdG8gc3VzdGFpbiBhIHN0cm9uZyBlY29ub21pYyByZWNvdmVyeSBhY3Jvc3MgdGhlIGV1cm96b25lIGFzIGEgd2hvbGUuIgoKU1RVQkJPUk4KClRoZXJlIGlzIGEgd2lkZXIgZGViYXRlIGFjcm9zcyBFdXJvcGUgYWJvdXQgd2hldGhlciB0byBzaGlmdCB0aGUgcG9saWN5IGZvY3VzIHRvd2FyZCBzcGVuZGluZyB0byBsaWZ0IHRoZSBlY29ub215IGFuZCBhd2F5IGZyb20gc3BlbmRpbmcgY3V0cyBhbmQgYXVzdGVyaXR5LiBJdGFseSdzIFByaW1lIE1pbmlzdGVyIE1hdHRlbyBSZW56aSBpcyBsZWFkaW5nIGEgZHJpdmUgZm9yIGdyZWF0ZXIgZmxleGliaWxpdHkgaW4gdGhlIHdheSBFdXJvcGVhbiBidWRnZXQgcnVsZXMgYXJlIGFwcGxpZWQsIHdoZXJlYXMgR2VybWFueSB3YW50cyB0byBrZWVwIHRoZSBmb2N1cyBvbiB0aHJpZnQuIEJ1dCBmb3Igc29tZSwgdGhhdCBkZWJhdGUgZ2xvc3NlcyBvdmVyIGEgZGVlcGVyIHByb2JsZW0gdGhhdCBob2xkcyBiYWNrIHRoZSBldXJvem9uZSBlY29ub215OiBhIHJlbHVjdGFuY2UgdG8gY2hhbmdlLiBHZXJtYW55LCB0aGV5IHNheSwgaXMgc3R1YmJvcm5seSB3ZWRkZWQgdG8gaXRzIG1vZGVsIG9mIG1hbnVmYWN0dXJpbmcsIHdoaWxlIG90aGVycywgaW5jbHVkaW5nIEZyYW5jZSwgYXJlIHJlc2lzdGluZyBzb2NpYWwgYW5kIGVjb25vbWljIHJlZm9ybXMgbmVlZGVkIHRvIGJvb3N0IGluZHVzdHJ5LiAiR2VybWFueSBzaG91bGQgYmUgdGhlIGxvY29tb3RpdmUgb2YgRXVyb3BlLCIgc2FpZCBHdW50cmFtIFdvbGZmIG9mIEJydXNzZWxzLWJhc2VkIHRoaW5rLXRhbmsgQnJ1ZWdlbC4gIkJ1dCB0aGUgZmVlbGluZyBpbiBHZXJtYW55IGlzIHRoYXQgd2Ugd2FudCB0byByZWx5IG9uIHRoZSBzdHJlbmd0aCBvZiB0aGUgbGFzdCAxMCB5ZWFycyBpbiBtYW51ZmFjdHVyaW5nLCBhbmQgd2UgZG9uJ3QgYWNjZXB0IGNoYW5nZSBpbiB0aGUgZWNvbm9teS4gVGhlIHNlcnZpY2VzIHNlY3RvciwgZm9yIGV4YW1wbGUsIGlzIHN0aWxsIHF1aXRlIHJlZ3VsYXRlZC4iIEluIG5laWdoYm9yaW5nIEZyYW5jZSwgdGhlIGdvdmVybm1lbnQgaGFzIHN0cnVnZ2xlZCB0byByZWZvcm0gaXRzIHNvY2lhbCB3ZWxmYXJlIHN5c3RlbSBhbmQgbGFib3IgbW9kZWwuIFByZXNpZGVudCBGcmFuY29pcyBIb2xsYW5kZSBpcyBwaW5uaW5nIGhpcyByZWNvdmVyeSBob3BlcyBvbiBwbGFucyBmb3IgbmVhcmx5IDQwIGJpbGxpb24gZXVyb3MgaW4gY29ycG9yYXRlIHRheCBicmVha3MgdG8gYmUgcGhhc2VkIGluIG92ZXIgdGhlIGNvbWluZyB0aHJlZSB5ZWFycy4gQnV0IHRoZSBhbm5vdW5jZW1lbnQgaGFzIGRvbmUgbGl0dGxlIHNvIGZhciB0byBsaWZ0IGJ1c2luZXNzIGNvbmZpZGVuY2UsIHdoaWNoIGhhcyBlYmJlZCBldmVyIGxvd2VyIGluIEZyYW5jZS4gVGhlIGNvdW50cnkncyBjZW50cmFsIGJhbmsgZXN0aW1hdGVzIGdyb3d0aCBvZiBvbmx5IDAuMiBwZXJjZW50IGluIHRoZSBzZWNvbmQgcXVhcnRlciBhZnRlciBzdGFsbGluZyBpbiB0aGUgZmlyc3QgdGhyZWUgbW9udGhzLiBXZWFrIGJ1c2luZXNzIGNvbmZpZGVuY2UgaW4gdHVybiB3ZWlnaHMgb24gY29tcGFueSBpbnZlc3RtZW50LCB3aGljaCB0aGUgZ292ZXJubWVudCBpcyBjb3VudGluZyBvbiB0byB1bmRlcnBpbiBncm93dGggZXZlbiB0aG91Z2ggY29uc3VtZXIgc3BlbmRpbmcsIGN1cnJlbnRseSB3ZWFrIGFtaWRzdCBoaWdoIHVuZW1wbG95bWVudCwgaXMgdHJhZGl0aW9uYWxseSB0aGUgbWFpbiBkcml2ZXIuIEZvciBjYXB0YWlucyBvZiBpbmR1c3RyeSwgc3VjaCBhcyBDaHJpc3RvcGhlIGRlIE1hcmdlcmllLCB0aGUgY2hpZWYgZXhlY3V0aXZlIG9mIEZyZW5jaCBvaWwgbWFqb3IgVG90YWwsIHRoaXMgcmVsdWN0YW5jZSB0byByZWZvcm0gaXMgb25lIG9mIHRoZSBjaGllZiBwcm9ibGVtcy4gIldoeSBkb2Vzbid0IGl0ICh0aGUgZWNvbm9teSkgdGFrZSBvZmYgYXMgZmFzdCBhcyB3ZSB3b3VsZCBsaWtlPyIgaGUgcmVjZW50bHkgdG9sZCByZXBvcnRlcnMuICJQcm9iYWJseSBmaXJzdCBvZiBhbGwgYmVjYXVzZSB3ZSB3ZXJlIGhpdCBieSB0aGUgY3Jpc2lzIGxhdGVyIHRoYW4gb3RoZXJzIHNvIHRoZXJlIGlzIGEgZGVsYXllZCBpbXBhY3QsIGJ1dCBhbHNvIGJlY2F1c2Ugb3VyIHdlbGZhcmUgc3lzdGVtIC4uLiBzb21ldGltZXMgaGlkZXMgaG93IHRvdWdoIHRpbWVzIGFyZS4i</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcepHSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDFhYTAwNjY5ZjQ0OTQwNWY=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lTRg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcjytCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5euFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5lHrhR64U</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5eFHrhR64</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5j1wo9cKP</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4Y9cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAEW6A==</field><field name="id" class="java.lang.String">rO0ABXQAEDIzOGY3MjQ0ODQ3MTc2NDM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFj1AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM5ODc=</field><field name="title" class="java.lang.String">rO0ABXQANUFsY29hIEhlbHBzIExpZnQgV2FsbCBTdHJlZXQgYWZ0ZXIgMiBEYXlzIG9mIERlY2xpbmVz</field><field name="content" class="java.lang.String">rO0ABXQOk1RoZSBjb3Jwb3JhdGUgZWFybmluZ3Mgc2Vhc29uIGdvdCBvZmYgdG8gYSBwb3NpdGl2ZSBzdGFydCBXZWRuZXNkYXksIGhlbHBpbmcgbGlmdCB0aGUgc3RvY2sgbWFya2V0IGFmdGVyIHR3byBkYXlzIG9mIGRlY2xpbmVzLiBUaGUgbWFya2V0IG9wZW5lZCBoaWdoZXIgYW5kIHJlbWFpbmVkIG1vZGVzdGx5IGhpZ2hlciB0aHJvdWdob3V0IHRoZSBkYXkuIFN0b2NrcyBjbGltYmVkIGZ1cnRoZXIgYWZ0ZXIgdGhlIEZlZGVyYWwgUmVzZXJ2ZSByZWxlYXNlZCBtaW51dGVzIGZyb20gaXRzIGxhdGVzdCBwb2xpY3kgbWVldGluZyBpbiBKdW5lLiBUaGUgYmlnZ2VzdCBnYWluZXIgaW4gdGhlIFN0YW5kYXJkICYgUG9vcidzIDUwMCBpbmRleCB3YXMgQWxjb2EuIFRoZSBhbHVtaW51bSBnaWFudCdzIGVhcm5pbmdzLCB3aGljaCBpbnZlc3RvcnMgY29uc2lkZXIgdG8gYmUgdGhlIG9mZmljaWFsIHN0YXJ0IG9mIHRoZSBxdWFydGVybHkgY29ycG9yYXRlIGVhcm5pbmdzIHNlYXNvbiwgY2FtZSBpbiB3ZWxsIGFib3ZlIFdhbGwgU3RyZWV0J3MgZXhwZWN0YXRpb25zLiBBbGNvYSBlYXJuZWQgJDEzOCBtaWxsaW9uLCBvciAxOCBjZW50cyBhIHNoYXJlLCBjb21wYXJlZCB3aXRoIGFuYWx5c3RzJyBlc3RpbWF0ZXMgb2YgMTIgY2VudHMgYSBzaGFyZSwgYWNjb3JkaW5nIHRvIEZhY3RTZXQuIEFsY29hIHNoYXJlcyByb3NlIDg0IGNlbnRzLCBvciA2IHBlcmNlbnQsIHRvICQxNS42OS4gQXMgY29tcGFuaWVzIGJlZ2luIHJlcG9ydGluZyB0aGVpciBzZWNvbmQtcXVhcnRlciByZXN1bHRzLCBpbnZlc3RvcnMgd2lsbCBiZSBsb29raW5nIGZvciBzaWducyB0aGF0IHRoZSBzdHJlbmd0aGVuaW5nIFUuUy4gZWNvbm9teSBoYXMgdHJhbnNsYXRlZCBpbnRvIGhpZ2hlciBzYWxlcyBhbmQgcHJvZml0cy4gQW5hbHlzdHMgZXhwZWN0IGVhcm5pbmdzIGluY3JlYXNlZCA2LjYgcGVyY2VudCBpbiB0aGUgdGhyZWUgbW9udGhzIHRocm91Z2ggSnVuZSBjb21wYXJlZCB3aXRoIHRoZSBwcmV2aW91cyB5ZWFyLCBhY2NvcmRpbmcgdG8gUyZQIENhcGl0YWwgSVEsIGEgcmVzZWFyY2ggZmlybS4gSW52ZXN0b3JzIGFyZ3VlIHRoYXQgd2l0aCBzdG9ja3MgdHJhZGluZyBuZWFyIGFsbC10aW1lIGhpZ2hzLCBpdCdzIG5vdyB1cCB0byBjb21wYW5pZXMgdG8gc2hvdyB3aGV0aGVyIG9yIG5vdCB0aGVzZSByZWNvcmQgaGlnaCBwcmljZXMgY2FuIGJlIGp1c3RpZmllZC4gIlN0b2NrcyBhcmUgbm90IGNoZWFwLCBhbmQgd2UgbmVlZCB0byBiZSBhc3N1cmVkIHRoYXQgdGhlc2UgY29tcGFuaWVzJyBncm93dGggaXMgZ29pbmcgdG8gY29udGludWUsIiBzYWlkIFF1aW5jeSBLcm9zYnksIG1hcmtldCBzdHJhdGVnaXN0IHdpdGggUHJ1ZGVudGlhbCBGaW5hbmNpYWwuIFRoZSBuZXh0IGJpZyBuYW1lIHRvIHJlcG9ydCB3aWxsIGJlIHRoZSBtYWpvciBVLlMuIGJhbmsgV2VsbHMgRmFyZ28sIHdoaWNoIHJlcG9ydHMgRnJpZGF5LiBUaGUgYmFuayBpcyBvbmUgb2YgdGhlIGNvdW50cnkncyBiaWdnZXN0IG1vcnRnYWdlIGxlbmRlcnMsIGFuZCBpbnZlc3RvcnMgd2lsbCBiZSBsb29raW5nIGZvciBXZWxscycgb3V0bG9vayBvbiB0aGUgaG91c2luZyBtYXJrZXQuICJJJ20gbG9va2luZyBmb3IgYSBnb29kLCBidXQgbm90IGEgZ3JlYXQsIGVhcm5pbmdzIHNlYXNvbiwiIHNhaWQgTWljaGFlbCBGcmVkZXJpY2tzLCBwb3J0Zm9saW8gbWFuYWdlciBvZiB0aGUgTXVsdGktQXNzZXQgSW5jb21lIEZ1bmQgYXQgQmxhY2tSb2NrLiAiV2UgcmVhbGx5IG5lZWQgdG8gc2VlIHRoZSBndWlkYW5jZSBmcm9tIGNvbXBhbmllcywgaWYgbWFuYWdlbWVudCB0ZWFtcyBhcmUgYXMgdXBiZWF0IGFzIHRoZSBtYXJrZXQuIiBUaGUgRG93IEpvbmVzIGluZHVzdHJpYWwgYXZlcmFnZSByb3NlIDc4Ljk5IHBvaW50cywgb3IgMC41IHBlcmNlbnQsIHRvIDE2LDk4NS42MS4gVGhlIFMmUCA1MDAgaW5kZXggcm9zZSA5LjEyIHBvaW50cywgb3IgMC41IHBlcmNlbnQsIHRvIDEsOTcyLjgzIGFuZCB0aGUgTmFzZGFxIGNvbXBvc2l0ZSByb3NlIDI3LjU3IHBvaW50cywgb3IgMC42IHBlcmNlbnQsIHRvIDQsNDE5LjAzLiBUaGUgbWFya2V0IGtlcHQgdXAgaXRzIHBvc2l0aXZlIG1vbWVudHVtIGZvbGxvd2luZyB0aGUgbGF0ZXN0IHJlcG9ydCBmcm9tIHRoZSBGZWRlcmFsIFJlc2VydmUuIFBvbGljeW1ha2VycyBhdCB0aGUgRmVkIGhhdmUgY29tZSB1cCB3aXRoIGEgcm91Z2ggdGltZXRhYmxlIGZvciB3aGVuIHRoZSBjZW50cmFsIGJhbmsncyBib25kLWJ1eWluZyBwcm9ncmFtIHdpbGwgd2luZCBkb3duLCBhY2NvcmRpbmcgdG8gbWludXRlcyBmcm9tIHRoZSBiYW5rJ3MgbW9zdCByZWNlbnQgbWVldGluZy4gVGhleSBnZW5lcmFsbHkgYWdyZWVkIHRoYXQgdGhlIHByb2dyYW0gd2lsbCBlbmQgaW4gT2N0b2JlciwgaWYgdGhlIGVjb25vbXkgY29udGludWVzIHRvIGltcHJvdmUgYXQgdGhpcyBwYWNlLCB3aXRoIGEgJDE1IGJpbGxpb24gcmVkdWN0aW9uIGluIG1vbnRobHkgYm9uZCBwdXJjaGFzZXMuIFRoZSBGZWQgaXMgY3VycmVudGx5IGJ1eWluZyAkNDUgYmlsbGlvbiBhIG1vbnRoIGluIGJvbmRzIGFuZCBoYXMgYmVlbiBjdXR0aW5nIGJhY2sgYnkgJDEwIGJpbGxpb24gYSBtb250aCBhdCBlYWNoIG1lZXRpbmcgc2luY2UgRGVjZW1iZXIuIFRoZSBwcm9ncmFtIGlzIGRlc2lnbmVkIHRvIGtlZXAgaW50ZXJlc3QgcmF0ZXMgbG93IHRvIHN0aW11bGF0ZSBib3Jyb3dpbmcgYW5kIGVjb25vbWljIGFjdGl2aXR5LiBUaGUgYm9uZCBtYXJrZXQgdHVybmVkIGhpZ2hlciBhZnRlciB0aGUgRmVkJ3MgYW5ub3VuY2VtZW50LiBUaGUgeWllbGQgb24gdGhlIDEwLXllYXIgVS5TLiBUcmVhc3VyeSBub3RlIGZlbGwgdG8gMi41NSBwZXJjZW50IGZyb20gMi41NiBwZXJjZW50IFR1ZXNkYXksIGEgcmV2ZXJzYWwgZnJvbSBlYXJsaWVyIGluIHRoZSBkYXksIHdoZW4geWllbGRzIHdlcmUgMi41OCBwZXJjZW50LiBCb25kIHlpZWxkcyBmYWxsIHdoZW4gcHJpY2VzIHJpc2UuIEluIGluZGl2aWR1YWwgY29tcGFueSBuZXdzOiDigJQgQW1lcmljYW4gQWlybGluZXMgcm9zZSAkMS43Mywgb3IgNC4zIHBlcmNlbnQsIHRvICQ0MS45OC4gVGhlIHdvcmxkJ3MgbGFyZ2VzdCBhaXJsaW5lIHJhaXNlZCBpdHMgc2FsZXMgZm9yZWNhc3QgZm9yIHRoZSBzZWNvbmQgcXVhcnRlciwgdHlwaWNhbGx5IHRoZSBidXNpZXN0IHRpbWUgb2YgeWVhci4gVGhlIG5ld3MgaGVscGVkIGxpZnQgb3RoZXIgYWlybGluZSBzdG9ja3MsIGluY2x1ZGluZyBEZWx0YSwgd2hpY2ggcm9zZSAxLjUgcGVyY2VudC4gQWlybGluZSBzdG9ja3MgaGFkIHRha2VuIGEgYmVhdGluZyBlYXJsaWVyIHRoaXMgd2Vlay4g4oCUIFRoZSBDb250YWluZXIgU3RvcmUsIHdoaWNoIHdlbnQgcHVibGljIGxlc3MgdGhhbiBhIHllYXIgYWdvLCBwbHVuZ2VkICQyLjI3LCBvciA4IHBlcmNlbnQsIHRvICQyNC44MC4gQ0VPIFdpbGxpYW0gVGluZGVsbCB3YXJuZWQgdGhhdCB0aGUgY29tcGFueSB3YXMgaW4gYSAicmV0YWlsIGZ1bmsiIGFuZCB0aGF0IHRoZSBzbHVnZ2lzaCBzYWxlcyBvZiB0aGUgd2ludGVyIHNlZW1lZCB0byBiZSBsaW5nZXJpbmcgaW50byB0aGUgc3ByaW5nIGFuZCBzdW1tZXIuIFRoZSBDb250YWluZXIgU3RvcmUgd2VudCBwdWJsaWMgYXQgJDE4IGEgc2hhcmUgaW4gTm92ZW1iZXIgYW5kIGl0cyBzaGFyZXMgZG91YmxlZCBpbiBwcmljZSBvbiB0aGUgZGF5IG9mIGl0cyBkZWJ1dCB0byAkMzYuMjAu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcZfhiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDA0OTczYTFkODhiNzBlMTM=</field><field name="symbol" class="java.lang.String">rO0ABXQAA1RDUw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcepHSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4GZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5nCj1wo9c</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4B64UeuFI</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4lHrhR64U</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4lHrhR64U</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAsO3A==</field><field name="id" class="java.lang.String">rO0ABXQAEDBlMTExMDgwOGQ2NThlYWY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHdPAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM5Nzc=</field><field name="title" class="java.lang.String">rO0ABXQAQEdvbGQgSGl0cyBOZWFybHkgNC1Nb250aCBIaWdoIGFzIFBvcnR1Z2FsIFdvZXMgU3B1ciBIYXZlbiBEZW1hbmQ=</field><field name="content" class="java.lang.String">rO0ABXQKV0dvbGQgZnV0dXJlcyBjbGltYmVkIHRvIGEgMTYtd2VlayBoaWdoIFRodXJzZGF5IGFzIGJhbmtpbmcgY29uY2VybnMgaW4gUG9ydHVnYWwgYW5kIGEgc2x1bXAgaW4gZXF1aXRpZXMgYm9vc3RlZCBkZW1hbmQgZm9yIHRoZSBwcmVjaW91cyBtZXRhbCBhcyBhIGhhdmVuLiBJbiBQb3J0dWdhbCwgQmFuY28gRXNwaXJpdG8gU2FudG8gU0EgYm9uZHMgcGx1bmdlZCB0byByZWNvcmQgbG93cyBhZnRlciBhIHBhcmVudCBjb21wYW55IGRlbGF5ZWQgZGVidCBwYXltZW50cyBvbiBzaG9ydC10ZXJtIG5vdGVzLCBmdWVsaW5nIGNvbmNlcm4gdGhhdCB0aGUgZXVybyByZWdpb24gcmVtYWlucyB2dWxuZXJhYmxlIHRvIGZpbmFuY2lhbCBzaG9ja3MuIEdvbGQgaGFzIGNsaW1iZWQgMTEgcGVyY2VudCB0aGlzIHllYXIsIG91dHBhY2luZyBnYWlucyBmb3IgaW5kZXhlcyBvZiBjb21tb2RpdGllcywgZXF1aXRpZXMgYW5kIFRyZWFzdXJpZXMuIEludmVzdG9yIGhvbGRpbmdzIGluIGV4Y2hhbmdlLXRyYWRlZCBwcm9kdWN0cyBiYWNrZWQgYnkgdGhlIG1ldGFsIGhhdmUgcmVib3VuZGVkIHRoaXMgbW9udGggYXMgdHVybW9pbCBzcHJlYWQgaW4gdGhlIE1pZGRsZSBFYXN0IGFuZCBFYXN0ZXJuIEV1cm9wZS4gUGFsbGFkaXVtLCBwbGF0aW51bSBhbmQgc2lsdmVyIGV4dGVuZGVkIHJhbGxpZXMuIOKAnEVxdWl0aWVzIGFyZSBnZXR0aW5nIGhhbW1lcmVkLCBhbmQgd2UgYXJlIHNlZWluZyBhIGZsaWdodCB0byBzYWZldHks4oCdIEZyYW5rIExlc2gsIGEgdHJhZGVyIGF0IEZ1dHVyZVBhdGggVHJhZGluZyBMTEMgaW4gQ2hpY2Fnbywgc2FpZCBpbiBhIHRlbGVwaG9uZSBpbnRlcnZpZXcuIOKAnENvbmNlcm5zIGFib3V0IEV1cm9wZSBhcmUgY29taW5nIGJhY2sgdG8gdGhlIGZvcmVmcm9udC7igJ0gR29sZCBmdXR1cmVzIGZvciBBdWd1c3QgZGVsaXZlcnkgcm9zZSAxLjEgcGVyY2VudCB0byBzZXR0bGUgYXQgJDEsMzM5LjIwIGFuIG91bmNlIGF0IDE6MzUgcC5tLiBvbiB0aGUgQ29tZXggaW4gTmV3IFlvcmsuIEVhcmxpZXIsIHRoZSBwcmljZSByZWFjaGVkICQxLDM0Ni44MCwgdGhlIGhpZ2hlc3QgZm9yIGEgbW9zdC0gYWN0aXZlIGNvbnRyYWN0IHNpbmNlIE1hcmNoIDE5LiBUcmFkaW5nIHdhcyA0OCBwZXJjZW50IGhpZ2hlciB0aGFuIHRoZSAxMDAtZGF5IGF2ZXJhZ2UgZm9yIHRoaXMgdGltZSwgYWNjb3JkaW5nIHRvIGRhdGEgY29tcGlsZWQgYnkgQmxvb21iZXJnLiAgICAgICAgICAgICAgICAgICAgICAgICAgIEZlZCBTdGltdWx1cyBMYXN0IHllYXIsIGdvbGQgc2x1bXBlZCAyOCBwZXJjZW50LCB0aGUgbW9zdCBzaW5jZSAxOTgxLCBhbWlkIGFuIGVxdWl0eSByYWxseSB0byBhIHJlY29yZCBhbmQgc3BlY3VsYXRpb24gdGhhdCB0aGUgRmVkZXJhbCBSZXNlcnZlIHdvdWxkIHRhcGVyIFUuUy4gbW9uZXRhcnkgc3RpbXVsdXMuIFRoZSBtZXRhbCBjbGltYmVkIDcwIHBlcmNlbnQgZnJvbSBEZWNlbWJlciAyMDA4IHRvIEp1bmUgMjAxMSBhcyB0aGUgRmVkIGJvdWdodCBkZWJ0IGFuZCBjdXQgYm9ycm93aW5nIGNvc3RzIHRvIG5lYXIgemVybyBwZXJjZW50LiBHbG9iYWwgaG9sZGluZ3MgaW4gZ29sZCBFVFBzIGhhdmUgY2xpbWJlZCB0byBhIHR3by1tb250aCBoaWdoLCBkYXRhIGNvbXBpbGVkIGJ5IEJsb29tYmVyZyBzaG93LiBBc3NldHMgaW4gcHJvZHVjdHMgYmFja2VkIGJ5IHBsYXRpbnVtIGFuZCBwYWxsYWRpdW0gcm9zZSB0byByZWNvcmRzIHRoaXMgbW9udGguIFBhbGxhZGl1bSBmdXR1cmVzIGZvciBTZXB0ZW1iZXIgZGVsaXZlcnkgYWR2YW5jZWQgMC4xIHBlcmNlbnQgdG8gJDg3My42MCBhbiBvdW5jZSBvbiBOZXcgWW9yayBNZXJjYW50aWxlIEV4Y2hhbmdlLiBUaGUgcHJpY2UgcmVhY2hlZCAkODc3Ljc1LCBleHRlbmRpbmcgYSByYWxseSB0byB0aGUgaGlnaGVzdCBzaW5jZSBGZWJydWFyeSAyMDAxLiBSdXNzaWEgaXMgdGhlIHdvcmxk4oCZcyB0b3Agc291cmNlIG9mIHRoZSBtZXRhbC4gU3VwcGxpZXMgd2VyZSBkaXNydXB0ZWQgYmVjYXVzZSBvZiBhIGZpdmUtbW9udGggbWluaW5nIHN0cmlrZSB0aGF0IGVuZGVkIGluIGxhdGUgSnVuZSBpbiBTb3V0aCBBZnJpY2EsIHRoZSBiaWdnZXN0IHByb2R1Y2VyIG9mIHBsYXRpbnVtIGFuZCB0aGUgc2Vjb25kLWxhcmdlc3QgZm9yIHBhbGxhZGl1bS4gUGxhdGludW0gZnV0dXJlcyBmb3IgT2N0b2JlciBkZWxpdmVyeSByb3NlIDAuNyBwZXJjZW50IHRvICQxLDUxNyBhbiBvdW5jZSBvbiB0aGUgTnltZXguIFRoZSBwcmljZSByZWFjaGVkICQxLDUyMy44MCwgdGhlIGhpZ2hlc3Qgc2luY2UgU2VwdC4gNC4gU2lsdmVyIGZ1dHVyZXMgZm9yIFNlcHRlbWJlciBkZWxpdmVyeSBjbGltYmVkIDIuMSBwZXJjZW50IHRvICQyMS41MDggYW4gb3VuY2Ugb24gdGhlIENvbWV4LiBUaGUgbWV0YWwgcmVhY2hlZCAkMjEuNjMsIHRoZSBoaWdoZXN0IHNpbmNlIE1hcmNoIDE3LiBUaHVyc2RheSwgc2lsdmVyIGFuZCBnb2xkIHdlcmUgdGhlIHRvcCBnYWluZXJzIGluIHRoZSBCbG9vbWJlcmcgQ29tbW9kaXR5IFNwb3QgSW5kZXggb2YgMjIgcHJpY2VzIGluIGVuZXJneSwgbWV0YWxzIGFuZCBhZ3JpY3VsdHVyZS4gVGhlIGdhdWdlIGZlbGwgdG8gYSAyMC13ZWVrIGxvdyBhcyBncmFpbiBhbmQgbGl2ZXN0b2NrIGZ1dHVyZXMgZHJvcHBlZC4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcepHSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDY0YTIzMWRlODNjN2UwMjY=</field><field name="symbol" class="java.lang.String">rO0ABXQABEdPTEQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcjytCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBVwo9cKPXD</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBWZmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBVtcKPXCj2</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBWVcKPXCj2</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBWJHrhR64U</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAtUZA==</field><field name="id" class="java.lang.String">rO0ABXQAEDA4MWUyMjE1ZDcxOGM0ZmM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mK5HAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM5NzY=</field><field name="title" class="java.lang.String">rO0ABXQAPldhc2hpbmd0b24sIFJlZ3VsYXRvcnMgU2hydWcgYXQgQWxpYmFiYSdzIFBsYW4gZm9yIE1hc3NpdmUgSVBP</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcepHSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDA3MjRkOGEzODdhYzY5Y2Y=</field><field name="symbol" class="java.lang.String">rO0ABXQABFBFUlk=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcjytCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxKPXCj1wp</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxUeuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxD1wo9cKP</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxTMzMzMzN</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxTMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAF6hA==</field><field name="id" class="java.lang.String">rO0ABXQAEGVlMDVmOTQ5N2ViNWY4OWU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE6aAAAA==</field></document></documents><date>2015-05-07T03:34:07-0500</date></cacheEntry>
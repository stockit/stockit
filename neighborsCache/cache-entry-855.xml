<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hJdCB3YXMgb25jZSBzdWNoIGEgc2V4eSBwcm9mZXNzaW9uIGluc3BpcmluZyB0aGUgcmVhbG0gb2YgU2hlcm1hbiBNY0NveSBpbiB0aGUgbm92ZWwgVGhlIEJvbmZpcmUgb2YgdGhlIFZhbml0aWVzIEluIHRoZSAxOTgwcyB0aGUgZXhjaXRlbWVudCBpbiB0aGUgdHJhZGluZyByb29tIHdpdGggaHVuZHJlZHMgb2YgcGVvcGxlIHRhbGtpbmcgb24gdGhlIHBob25lIHdhcyBwYWxwYWJsZSBsaWtlIGEgc3BvcnRpbmcgZXZlbnQgc2FpZCBLZXJyeSBTdGVpbiBoZWFkIG9mIGNyZWRpdCB0cmFkaW5nIGF0IExsb3lkcyBTZWN1cml0aWVzIEluYyBUaG9zZSBkYXlzIGFyZSBnb25lIEl0cyBzdXJwcmlzaW5nIGhvdyBxdWlldCBhIHBsYWNlIGNvdWxkIGJlIGNvbXBhcmVkIHRvIHdoYXQgSSBoYWQga25vd24gc2FpZCBTdGVpbiB3aG8gYmVnYW4gdHJhZGluZyBoaWdoeWllbGQgYm9uZHMgaW4gMTk4NSBhdCBEcmV4ZWwgQnVybmhhbSBMYW1iZXJ0IEluYyB0aGUgaG91c2Ugb2YgTWljaGFlbCBNaWxrZW4gd2hvIHdhcyBuaWNrbmFtZWQgdGhlIGp1bmtib25kIGtpbmcgQXMgYm9uZHRyYWRpbmcgdm9sdW1lcyBoYXZlIHNocnVuayBzbyBoYXZlIHRoZSBudW1iZXIgb2Ygam9icyBsZWF2aW5nIGV2ZW4gc29tZSBvZiB0aGUgbW9zdCBzZW5pb3IgdHJhZGVycyBhbmQgc2FsZXNtZW4gbW92aW5nIGZyb20gZmlybSB0byBmaXJtIFRoZXJlcyBhIHdhdmUgb2Ygam91cm5leW1lbiBpbiBhbiBpbmR1c3RyeSB0aGF0IHVzZWQgdG8gYXR0cmFjdCB0aGUgeW91bmcgaW4gdGhyb25ncyBsdXJlZCBieSBtb25leSBhbmQgcHJlc3RpZ2UgYWNjb3JkaW5nIHRvIE1pY2hhZWwgTWFsb25leSBwcmVzaWRlbnQgb2YgZml4ZWRpbmNvbWUgcmVjcnVpdGluZyBmaXJtIE1pY2hhZWwgUCBNYWxvbmV5IEluYyBUaGUgYnVzaW5lc3MgbW9kZWwgaXMgYnJva2VuIGFuZCA1MCBwZXJjZW50IG9mIHRoZSBwZW9wbGUgaW4gb3VyIHdvcmxkIHdobyBhcmUgaW4gdHJhZGluZyBhcmUgc3R1Y2sgcmlnaHQgbm93IE1hbG9uZXkgc2FpZCBpbiBhbiBpbnRlcnZpZXcgaW4gaGlzIE5ldyBZb3JrIG9mZmljZSBGb3IgZXZlcnkgMTAgb2YgdGhlbSB0aGVyZXMgZ29pbmcgdG8gYmUgdGhyZWUgb3IgZm91ciBsZWZ0IGhlIHNhaWQgV2hhdHMgdGhlIHRpbWVmcmFtZSBXZWxsIGV2ZXJ5Ym9keSBJIGtub3cgaXMgbG9va2luZyBmb3IgYSBqb2IgIG5vdCBsb29raW5nIGZvciBhIGpvYiBsb29raW5nIGZvciBhIGNhcmVlciBUcmFkaW5nIFNsdW1wIFdoaWxlIHRoZSBzaXplIG9mIHRoZSBVUyBib25kIG1hcmtldCBiYWxsb29uZWQgYnkgbW9yZSB0aGFuIDUgdHJpbGxpb24gc2luY2UgMjAwOCB0byAzNzggdHJpbGxpb24gYXQgeWVhcmVuZCB0cmFkaW5nIGluIHRoZSBkZWJ0IGhhcyBzbHVtcGVkIGFjY29yZGluZyB0byBkYXRhIGZyb20gdGhlIFNlY3VyaXRpZXMgSW5kdXN0cnkgIEZpbmFuY2lhbCBNYXJrZXRzIEFzc29jaWF0aW9uIEF2ZXJhZ2UgZGFpbHkgdHVybm92ZXIgZmVsbCB0byA4MDkgYmlsbGlvbiBsYXN0IHllYXIgZnJvbSAxMDQgdHJpbGxpb24gaW4gMjAwOCBUaGF0cyBwYXJ0bHkgYmVjYXVzZSBiYW5rcyBoYXZlIHB1bGxlZCBiYWNrIGZyb20gbWFraW5nIG1hcmtldHMgaW4gYm9uZHMgYXMgaGlnaGVyIGNhcGl0YWwgcmVxdWlyZW1lbnRzIG1ha2UgaXQgbGVzcyBwcm9maXRhYmxlIFRoZSBidXNpbmVzcyB3aGVyZSBidXllcnMgYW5kIHNlbGxlcnMgYXJlIHByaW1hcmlseSBtYXRjaGVkIG92ZXIgdGhlIHRlbGVwaG9uZSBvciB0aHJvdWdoIGVtYWlscyBoYXMgYWxzbyBzdWZmZXJlZCBzaHJpbmtpbmcgbWFyZ2lucyBiZWNhdXNlIG9mIHJlZ3VsYXRvcm1hbmRhdGVkIHByaWNlIHRyYW5zcGFyZW5jeSBhbmQgdGhlIHJpc2Ugb2YgZWxlY3Ryb25pYyB0cmFkaW5nIFRyYW5zYWN0aW9uIGNvc3RzIGRlY2xpbmVkIGFmdGVyIHRoZSBGaW5hbmNpYWwgSW5kdXN0cnkgUmVndWxhdG9yeSBBdXRob3JpdHkgaW50cm9kdWNlZCBpdHMgYm9uZHByaWNlIHJlcG9ydGluZyBzeXN0ZW0gY2FsbGVkIFRyYWNlIGluIDIwMDIgV2FsbCBTdHJlZXQgYm9uZCB0cmFkZXJzIGxvc3QgYWJvdXQgMSBiaWxsaW9uIGluIGZlZXMgaW4gdGhlIG5leHQgeWVhciBvciBhYm91dCAyMDAwIGEgdHJhZGUgYWNjb3JkaW5nIHRvIGEgc3R1ZHkgaW4gdGhlIEpvdXJuYWwgb2YgRmluYW5jaWFsIEVjb25vbWljcyBUaGUgc3lzdGVtIGlzIGludGVuZGVkIHRvIHByb3ZpZGUgdHJhbnNwYXJlbmN5IGluIGFuIG9wYXF1ZSBtYXJrZXQgYW5kIGhlbHAgcHJldmVudCBpbnZlc3RvcnMgZnJvbSBiZWluZyBmbGVlY2VkIERlY2xpbmluZyBQYXkgRGVzcGl0ZSBhdHRlbXB0cyB0byBnZXQgaXQgdG8gYmUgZWxlY3Ryb25pYyBpdHMgc3RpbGwgYSB2b2ljZSBtYXJrZXQgTWFyayBQaWJsIGhlYWQgb2YgcmVzZWFyY2ggYW5kIGZpeGVkIGluY29tZSBzdHJhdGVneSBhdCBDYW5hY2NvcmQgR2VudWl0eSBzYWlkIGluIGEgdGVsZXBob25lIGludGVydmlldyBPbiB0aGUgZXF1aXR5IHNpZGUgdGhlcmVzIGp1c3Qgb25lIHNlY3VyaXR5IHdoZXJlYXMgb24gdGhlIGJvbmRzIG9mIGFuIGlzc3VlciB0aGVyZSBjb3VsZCBiZSBmaXZlIG9yIHNpeCBvciBtb3JlIHRoZXJlIGNvdWxkIGJlIGRpZmZlcmVudCBzdWJvcmRpbmF0ZWQgaXNzdWVzIFRvIGEgbGFyZ2UgZGVncmVlIHRoYXQgY29tcGxleGl0eSB3aXRoaW4gdGhlIGNhcGl0YWwgc3RydWN0dXJlIGRvZXNudCBhbGxvdyBpdHNlbGYgdG8gZWFzaWx5IGJlIGF1dG9tYXRlZCBTaW5jZSB0aGUgY3JlZGl0IGNyaXNpcyBqb2JzIGFuZCBjb21wZW5zYXRpb24gaGF2ZSBkZWNsaW5lZCBhcyBXYWxsIFN0cmVldCByZXRyZW5jaGVkIFRvdGFsIHBheSBhdCB0aGUgYmlnZ2VzdCBiYW5rcyBoYXMgZmFsbGVuIGFzIG11Y2ggYXMgNTAgcGVyY2VudCBmb3IgaGlnaHlpZWxkIGFuZCBpbnZlc3RtZW50Z3JhZGUgdHJhZGVycyBhbmQgdXAgdG8gMjUgcGVyY2VudCBmb3IgZGlzdHJlc3NlZGRlYnQgdHJhZGVycyBzaW5jZSAyMDEwIGFjY29yZGluZyB0byBOZXcgWW9ya2Jhc2VkIHJlY3J1aXRtZW50IGZpcm0gT3B0aW9ucyBHcm91cCBUaGUgbnVtYmVyIG9mIGNyZWRpdCB0cmFkZXJzIHdvcmtpbmcgZm9yIHRoZSBmaXJtcyBwbHVuZ2VkIDMwIHBlcmNlbnQgdG8gYWJvdXQgMzAwIG92ZXIgdGhlIHNhbWUgcGVyaW9kIGV2ZW4gYXMgY29tcGFuaWVzIGlzc3VlZCByZWNvcmQgYW1vdW50cyBvZiBib25kcyBpbiB0aGUgVVMgdG8gdGFrZSBhZHZhbnRhZ2Ugb2YgaGlzdG9yaWNhbGx5IGxvdyBpbnRlcmVzdCByYXRlcyBhY2NvcmRpbmcgdG8gT3B0aW9ucyBHcm91cCBhbmQgZGF0YSBjb21waWxlZCBieSBCbG9vbWJlcmcgTGlxdWlkaXR5IERyb3AgVGhlIGRlY2xpbmUgb2YgdGhlIHByb2Zlc3Npb24gbWF0dGVycyBiZWNhdXNlIGl0cyBiZWNvbWUgaGFyZGVyIGZvciBldmVyeW9uZSB0byBidXkgYW5kIHNlbGwgZGVidCBhcyBiYW5rcyBjdXQgdGhlIGFtb3VudCBvZiBjYXBpdGFsIHRoZXlyZSBkZXZvdGluZyB0byB0cmFkaW5nIFByaW1hcnkgZGVhbGVycyBzbGFzaGVkIHRoZSBhbW91bnQgb2YgYm9uZHMgdGhleSBob2xkIGJ5IDc2IHBlcmNlbnQgZnJvbSBhIHJlY29yZCBoaWdoIGluIE9jdG9iZXIgMjAwNyB0byA1NiBiaWxsaW9uIGluIE1hcmNoIDIwMTMgd2hlbiB0aGUgRmVkZXJhbCBSZXNlcnZlIGNoYW5nZWQgdGhlIHdheSBpdCByZXBvcnRlZCB0aGUgZGF0YSBUdXJub3ZlciBpbiBpbnZlc3RtZW50Z3JhZGUgY29ycG9yYXRlIGJvbmRzIGZlbGwgdG8gYSA3MiBwZXJjZW50IGFubnVhbGl6ZWQgcmF0ZSBkdXJpbmcgdGhlIGZpcnN0IGhhbGYgb2YgdGhpcyB5ZWFyIHRoZSBsZWFzdCBpbiB0aGUgcGFzdCBkZWNhZGUgYWNjb3JkaW5nIHRvIGEgU2VwdCAxMiBCYXJjbGF5cyBQbGMgcmVwb3J0IExpcXVpZGl0eSBtYXkgb25seSBnZXQgd29yc2Ugd2hlbiBib25kIHByaWNlcyBzdGFydCBmYWxsaW5nIGFzIHRoZSBGZWQgd2l0aGRyYXdzIGl0cyByZWNvcmQgc3RpbXVsdXMgd2hpY2ggbWF5IG1ha2UgdGhlIG1hcmtldHMgc3dpbmdzIG1vcmUgZHJhbWF0aWMgYWNjb3JkaW5nIHRvIFBldGVyIFRjaGlyIGhlYWQgb2YgbWFjcm8gc3RyYXRlZ3kgYXQgQnJlYW4gQ2FwaXRhbCBMTEMgaW4gTmV3IFlvcmsgQmFua3MgYXJlIGxlc3MgYWJsZSB0byBhbmQgd2lsbGluZyB0byB0YWtlIHJpc2tzIFRjaGlyIHNhaWQgVGhlIHJlYWwgcmlzayB3aGVuIHJhdGVzIHJpc2UgaXMgdGhhdCB5b3UgZ2V0IGhlaWdodGVuZWQgdm9sYXRpbGl0eSBiZWNhdXNlIHRoZSBuYXR1cmUgb2YgdGhpcyBidXNpbmVzcyBoYXMgY2hhbmdlZCBTYWxvbW9uIEJyb3RoZXJzIFRoZSBjaGFuZ2VzIHRvIHRoZSBib25kIGJ1c2luZXNzIGhhdmUgYWZmZWN0ZWQgc29tZSBvZiB0aGUgaW5kdXN0cnlzIG1vc3Qgc2Vhc29uZWQgdmV0ZXJhbnMgSm9uIEJhc3Mgc2F0IGp1c3QgZml2ZSBkZXNrcyBmcm9tIGNoaWVmIGV4ZWN1dGl2ZSBvZmZpY2VyIEpvaG4gR3V0ZnJldW5kIGF0IFNhbG9tb24gQnJvdGhlcnMgSW5jIHRoZSBmaXJtIHRoYXQgaW5zcGlyZWQgVG9tIFdvbGZlcyBUaGUgQm9uZmlyZSBvZiB0aGUgVmFuaXRpZXMgSGUgd2VudCBvbiB0byBoZWxwIHJ1biBVQlMgQUdzIGZpeGVkaW5jb21lIGJ1c2luZXNzIGJlZm9yZSBsZWF2aW5nIHRoZSBTd2lzcyBiYW5rIGluIDIwMDkgYWZ0ZXIgbmluZSB5ZWFycyBOb3cgdGhlIDUyeWVhcm9sZCBCYXNzIGlzIG9uIGhpcyBmaWZ0aCBqb2IgaW4gYXMgbWFueSB5ZWFycyBqb2luaW5nIEplZmZlcmllcyBMTEMgaW4gYSBzZW5pb3Igc2FsZXMgcm9sZSBhZnRlciBsZXNzIHRoYW4gdHdvIHllYXJzIGF0IEJOUCBQYXJpYmFzIFNBIGFzIGRlcHV0eSBoZWFkIG9mIGZpeGVkIGluY29tZSBIaXMgcmVjZW50IHBvc2l0aW9ucyBpbmNsdWRlZCBmaXZlIG1vbnRocyBhdCBNaXp1aG8gU2VjdXJpdGllcyBVU0EgSW5jIGEgeWVhciBhdCBub3diYW5rcnVwdCBNRiBHbG9iYWwgSG9sZGluZ3MgTHRkIGFuZCBsZXNzIHRoYW4gdHdvIHllYXJzIGF0IEJUSUcgTExDIGFjY29yZHQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMC0wNi0xMFQwMDowMDowMFogVE8gMjAxMy0wNy0zMFQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDkzMjA=</field><field name="title" class="java.lang.String">rO0ABXQAQVMmUCA1MDAgVmFsdWF0aW9uIFNsaXBzIDE5JSBCZWxvdyAyMDExIGFzIFNoYW91bCBBZHZpc2VzIFBhdGllbmNl</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATe13SyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGQxODhlMWU2ZTBjYzhhNzc=</field><field name="symbol" class="java.lang.String">rO0ABXQAAk1O</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATe7A4iAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArFHrhR64U</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArQo9cKPXD</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAqij1wo9cK</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAq64UeuFHs</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAnszMzMzMz</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAsiA==</field><field name="id" class="java.lang.String">rO0ABXQAEDE2YTZmMTI1NTk1Y2M3MDc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJLtAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTEyMzYx</field><field name="title" class="java.lang.String">rO0ABXQAMUJhbmtzIEZpZ2h0IEZlZCdzIFB1c2ggdG8gTWFrZSBUaGVtIExlc3MgRW50d2luZWQ=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATgiAriAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDVjM2YwNmQ5MGYxYTU2Yjc=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lDQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATgnKRSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyEeuFHrhS</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyEeuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAx/XCj1wo9</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyCj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwI9cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABsmA==</field><field name="id" class="java.lang.String">rO0ABXQAEDg1MjdhZjNlNWQxZGY5NGI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKU4AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDc3ODI=</field><field name="title" class="java.lang.String">rO0ABXQAM1VTIENvbW1vZGl0eSBNYXJrZXRzIFNocmluayBBZnRlciBNRiBHbG9iYWwgRmFpbHVyZQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATRfNHMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGE0M2RhOTA2YTE4NTE2NDg=</field><field name="symbol" class="java.lang.String">rO0ABXQAA05PVg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATRkWs8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBQ49cKPXCk</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBRKFHrhR64</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBQtwo9cKPX</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBREo9cKPXD</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBNS4UeuFHs</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAADgwxA==</field><field name="id" class="java.lang.String">rO0ABXQAEGIxZDYxOGFiZWI3YTBkYTI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHh6AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE4MzEw</field><field name="title" class="java.lang.String">rO0ABXQANEdFIElnbm9yZXMgJDEwMCBCaWxsaW9uIG9mIENhc2ggdG8gQm9ycm93ICQ3IEJpbGxpb24=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATof2EyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDBhZmE3NzhkYTQzYWEzZWY=</field><field name="symbol" class="java.lang.String">rO0ABXQAAkdF</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATok/qiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA23Cj1wo9c</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA2+uFHrhR7</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA2uFHrhR64</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA26PXCj1wp</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1DMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAfZ2eA==</field><field name="id" class="java.lang.String">rO0ABXQAEGNmZjg3MTgyYTg0ODc4ODI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mM2UAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUzNTk=</field><field name="title" class="java.lang.String">rO0ABXQAP1MmUCA1MDAgQmVhdGluZyBHb2xkIE1vc3QgU2luY2UgMTk5OSBhcyBFYXJuaW5ncyBFc3RpbWF0ZXMgUmlzZQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATZxbIiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGJiN2EzMDQ2ZDZmOWVjZWM=</field><field name="symbol" class="java.lang.String">rO0ABXQAAVA=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATZ2kuSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkvXCj1wo9</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlMzMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAklHrhR64U</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAk8KPXCj1x</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAk8KPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAC1pZA==</field><field name="id" class="java.lang.String">rO0ABXQAEDBjZmU2YzNkZDk1MDllMmU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMl3AAAA==</field></document></documents><date>2015-05-07T06:16:07-0500</date></cacheEntry>
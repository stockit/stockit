<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0CxFSZWd1bGF0b3JzIGFyZSBhcHByb3ZpbmcgbmV3IHJ1bGVzIHRoaXMgd2VlayBtYWtpbmcgaXQgbW9yZSBleHBlbnNpdmUgdG8gY3JlYXRlIGZ1bmRzIHRoYXQgYXJlIHRoZSBiaWdnZXN0IHNvdXJjZSBvZiBkZW1hbmQgZm9yIHRoZSBiZWxvdyBpbnZlc3RtZW50Z3JhZGUgZGVidCBjb2xsYXRlcmFsaXplZCBsb2FuIG9ibGlnYXRpb25zIE1hbmFnZXJzIG9mIHRoZSBmdW5kcyB3aWxsIGJlIHJlcXVpcmVkIHRvIHJldGFpbiA1IHBlcmNlbnQgb2YgdGhlIGRlYnQgdGhleSBwYWNrYWdlIG9yIHNlbGwgb3IgYmFua3MgdW5kZXJ3cml0aW5nIENMT3Mgd2lsbCBoYXZlIHRvIGhhbmcgb24gdG8gYSBwaWVjZSBUaGUgTG9hbiBTeW5kaWNhdGlvbnMgIFRyYWRpbmcgQXNzb2NpYXRpb24gdGhlIG1hcmtldHMgbWFpbiBsb2JieWluZyBncm91cCBzYWlkIFR1ZXNkYXkgdGhlIHJ1bGUgd2lsbCBtYXRlcmlhbGx5IHJlZHVjZSB0aGUgQ0xPIG1hcmtldCBUaGlzIG1hdHRlcnMgYmVjYXVzZSBqdW5rcmF0ZWQgY29tcGFuaWVzIGhhdmUgZm91bmQgd2lsbGluZyBsZW5kZXJzIGluIENMTyBtYW5hZ2VycyBhcyBvdGhlciBpbnZlc3RvcnMgaGF2ZSBmbGVkIHJhdHRsZWQgYnkgd2FybmluZ3MgZnJvbSBwb2xpY3kgbWFrZXJzIHRoYXQgdGhlIG1hcmtldHMgc2hvd2luZyBzaWducyBvZiBmcm90aCBhbWlkIGEgc2l4dGggeWVhciBvZiByZWNvcmQgRmVkZXJhbCBSZXNlcnZlIHN0aW11bHVzIEludmVzdG9ycyBwdWxsZWQgOTQ2IG1pbGxpb24gZnJvbSBVUyBmdW5kcyB0aGF0IGJ1eSBsZXZlcmFnZWQgbG9hbnMgaW4gdGhlIHdlZWsgZW5kZWQgT2N0IDE1IGJyaW5naW5nIG5ldCBvdXRmbG93cyBmb3IgdGhlIHllYXIgdG8gMTEyIGJpbGxpb24gYWNjb3JkaW5nIHRvIGRhdGEgcHJvdmlkZWQgYnkgTGlwcGVyIE1lYW53aGlsZSB0aGUgQ0xPIG1hcmtldCBoYXMgZ3Jvd24gYnkgYWJvdXQgNTAgYmlsbGlvbiB0aGlzIHllYXIgdG8gYWxtb3N0IDM1MCBiaWxsaW9uIGFjY29yZGluZyB0byBXZWxscyBGYXJnbyAgQ28gICAgICAgICAgICAgICAgICAgICAgICAgU2hyaW5raW5nIE1hcmtldCBJZiBmZXdlciBDTE9zIGFyZSByYWlzZWQgdGhlIGxvYW4gbWFya2V0IGNvdWxkIHNocmluayBuZXcgc3RydWN0dXJlcyBtYXkgZW1lcmdlIG9yIHJldGFpbCBhbmQgaW5zdGl0dXRpb25hbCBpbnZlc3RvcnMgd291bGQgaGF2ZSB0byBpbmNyZWFzZSBtYXJrZXQgc2hhcmUgV2VsbHMgRmFyZ28gYW5hbHlzdHMgRGF2ZSBQcmVzdG9uIGFuZCBKYXNvbiBNY05laWxpcyB3cm90ZSBpbiBhbiBPY3QgOCByZXBvcnQgUmlzayByZXRlbnRpb24gbWF5IGJlY29tZSBlZmZlY3RpdmUgYXQgYW4gaW5vcHBvcnR1bmUgdGltZSBhcyBzaG9ydHRlcm0gcmF0ZXMgYXJlIHJpc2luZyBDTE9zIHR5cGljYWxseSBwdXJjaGFzZSA2MCBwZXJjZW50IG9mIG5ldyBpc3N1YW5jZSBXZWxscyBGYXJnbyBkYXRhIHNob3cgQmFuayBvZiBBbWVyaWNhIENvcnAgYW5hbHlzdHMgcHJlZGljdGVkIGluIGFuIE9jdCAxNyByZXBvcnQgdGhhdCBDTE8gaXNzdWFuY2Ugd291bGQgcmVhY2ggYSByZWNvcmQgb2YgYXMgbXVjaCBhcyAxMzAgYmlsbGlvbiBpbiB0aGUgVVMgdGhpcyB5ZWFyIFRoZSBwdXJjaGFzZXMgYnkgQ0xPcyB3aGljaCBwb29sIGxvYW5zIGFuZCBzbGljZSB0aGVtIGludG8gcGllY2VzIG9mIHZhcnlpbmcgcmlzayBhbmQgcmV0dXJuIGhhdmUgaGVscGVkIG9mZnNldCB0aGUgZHJvcCBpbiBkZW1hbmQgZnJvbSBpbmRpdmlkdWFsIGludmVzdG9ycyBQcmljZXMgaGF2ZSBkZWNsaW5lZCB0byA5NjQgY2VudHMgb24gdGhlIGRvbGxhciBmcm9tIDk5MSBjZW50cyBpbiBKdWx5IGFzIG11dHVhbGZ1bmQgd2l0aGRyYXdhbHMgaGF2ZSBtb3VudGVkIGFjY29yZGluZyB0byB0aGUgU3RhbmRhcmQgIFBvb3JzTFNUQSBVUyBMZXZlcmFnZWQgTG9hbiAxMDAgSW5kZXggICAgICAgICAgICAgICAgICAgICAgICAgIENyaXNpcyBSZXNwb25zZSBUaGUgbmV3IHJlZ3VsYXRpb25zIGFyZSBiZWluZyBlbmFjdGVkIGluIHJlc3BvbnNlIHRvIHRoZSBjcmVkaXQgY3Jpc2lzIHRoYXQgd2FzIGZ1ZWxlZCBpbiBwYXJ0IGJ5IHNlY3VyaXRpemVkIGRlYnQgcGFydGljdWxhcmx5IGluIHRoZSBtb3J0Z2FnZSBtYXJrZXQgVGhlIHJ1bGVzIHdoaWNoIG1heSB0YWtlIGVmZmVjdCBpbiAyMDE2IGFyZSBkZXNpZ25lZCB0byBjdXJiIGV4Y2Vzc2l2ZSByaXNrdGFraW5nIGJ5IG1ha2luZyBzdXJlIG1hbmFnZXJzIGhhdmUgc29tZSBza2luIGluIHRoZSBnYW1lIFRoaXMgd2lsbCBoZWxwIGVuc3VyZSB0aGUgcXVhbGl0eSBvZiBhc3NldHMgcHVyY2hhc2VkIGJ5IENMT3MgVVMgcmVndWxhdG9ycyB3cm90ZSBpbiBhIGRvY3VtZW50IHJlbGVhc2VkIHllc3RlcmRheSBUaGUgQ0xPIG1hY2hpbmUgaGFzIGVuYWJsZWQgYm9ycm93ZXJzIHRvIGlzc3VlIGRlYnQgd2l0aCByaXNraWVyIHRlcm1zIENvdmVuYW50bGlnaHQgbG9hbnMgIHdoaWNoIGxhY2sgY2VydGFpbiBwcm90ZWN0aW9ucyBmb3IgbGVuZGVycyBzdWNoIGFzIGxpbWl0cyBvbiBkZWJ0IGxldmVscyByZWxhdGl2ZSB0byBlYXJuaW5ncyAgYXJlIG9uIHRyYWNrIHRvIGV4Y2VlZCBhIHJlY29yZCA3MCBwZXJjZW50IG9mIGlzc3VhbmNlIHRoaXMgeWVhciBCYXJjbGF5cyBQbGMgc2FpZCBpbiBhIHJlcG9ydCBsYXN0IG1vbnRoIFRoZXJlIG1heSBiZSBsZXNzIGRlbWFuZCBmcm9tIENMT3Mgc3RhcnRpbmcgaW4gMjAxNiBjb2luY2lkaW5nIHdpdGggcmlzaW5nIGludGVyZXN0IHJhdGVzIGFuZCBhbiBpbmNyZWFzZSBpbiBkZWZhdWx0cyBUaGlzIG1heSBwcm92ZSB0byBiZSBhIHJvY2t5IG1peCBmb3IgdGhlIGxvYW4gbWFya2V0dAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAb2FydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2UsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEwLTA2LTExVDAwOjAwOjAwWiBUTyAyMDEzLTA3LTMxVDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDcyMzE=</field><field name="title" class="java.lang.String">rO0ABXQANU5vbXVyYTogSmFwYW4ncyBDZW50cmFsIEJhbmsgSGVscHMgVVMgRmVkLCBIb21lYnV5ZXJz</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4G6gSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDA0N2Q2ZjYyNjMyMTFkYzg=</field><field name="symbol" class="java.lang.String">rO0ABXQABkZOTS5CRQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4MEGCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/hR64UeuFI</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/hmZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/hR64UeuFI</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/hmZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/hmZmZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAA2sA==</field><field name="id" class="java.lang.String">rO0ABXQAEDk4ZGY3MzNkYTZkNGM5YzE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mIUGAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIyNDY5</field><field name="title" class="java.lang.String">rO0ABXQAPEV1cm9wZSBCYW5rcyBIb2FyZGluZyBDYXNoIFJlc2lzdCBEcmFnaGkgQmlkIHRvIEF2b2lkIENydW5jaA==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATTLWf8AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDU3MjA5MjNiYjJkMjI3NWI=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lDQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATTQgFsAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxZmZmZmZm</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxgo9cKPXD</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxXrhR64Uf</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxeFHrhR64</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAuhR64UeuF</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAq+A==</field><field name="id" class="java.lang.String">rO0ABXQAEDI5ODk5N2I4Y2NlMjc1MmU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMaaAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExNDg2</field><field name="title" class="java.lang.String">rO0ABXQAMFNtYWxsLUNvbXBhbnkgU3RvY2tzIEFyZSBXYWxsIFN0cmVldCBCcmlnaHQgU3BvdA==</field><field name="content" class="java.lang.String">rO0ABXQVS1NtYWxsLWNvbXBhbnkgc3RvY2tzIHdlcmUgYSBicmlnaHQgc3BvdCBpbiBhIHN1YmR1ZWQgc3RhcnQgdG8gdGhlIHdlZWsgZm9yIFdhbGwgU3RyZWV0LiBUaGUgUnVzc2VsbCAyMDAwLCBhbiBpbmRleCBvZiBzbWFsbC1jb21wYW55IHN0b2NrcywgY2xpbWJlZCBhYm92ZSAxLDAwMCBwb2ludHMgZm9yIHRoZSBmaXJzdCB0aW1lIGFuZCBlbmRlZCBoaWdoZXIgTW9uZGF5LCBldmVuIGFzIHRoZSBEb3cgSm9uZXMgaW5kdXN0cmlhbCBhdmVyYWdlLCB0aGUgU3RhbmRhcmQgJiBQb29yJ3MgNTAwIGluZGV4IGFuZCB0aGUgTmFzZGFxIGNvbXBvc2l0ZSBpbmRleCBhbGwgZWRnZWQgbG93ZXIuIFRoZSBnYWlucyBmb3IgdGhlIHNtYWxsZXIgY29tcGFuaWVzIGFyZSBlbmNvdXJhZ2luZyBmb3IgdGhlIGJyb2FkZXIgc3RvY2sgbWFya2V0IGJlY2F1c2UgdGhleSBzaG93IHRoYXQgaW52ZXN0b3JzIGFyZSBiZWNvbWluZyBtb3JlIGNvbWZvcnRhYmxlIGFib3V0IHRoZSBlY29ub215IGFuZCBpbnZlc3RpbmcgaW4gcmlza2llciBhc3NldHMsIHNhaWQgUm9iIEx1dHRzLCBDaGllZiBJbnZlc3RtZW50IE9mZmljZXIgYXQgQ2Fib3QgTW9uZXkgTWFuYWdlbWVudC4gU21hbGwtY29tcGFueSBzdG9ja3MgYXJlIGNvbnNpZGVyZWQgcmlza2llciB0aGFuIHRoZSBzdG9ja3Mgb2Ygd2VsbC1lc3RhYmxpc2hlZCwgbGFyZ2UgY29tcGFuaWVzIGxpa2UgSUJNIG9yIENvY2EtQ29sYS4gVGhhdCdzIGJlY2F1c2Ugc21hbGwgY29tcGFuaWVzIGFyZSBvZnRlbiByZWxhdGl2ZWx5IHlvdW5nIGFuZCB0ZW5kIHRvIGhhdmUgbGVzcyBkaXZlcnNpZmllZCBidXNpbmVzc2VzIHRoYW4gbGFyZ2VyIG9uZXMsIG1ha2luZyB0aGVtIG1vcmUgc3VzY2VwdGlibGUgdG8gc3dpbmdzIGluIGRlbWFuZCBmcm9tIHRoZWlyIGN1c3RvbWVycy4gVGhlcmUgYXJlIGFsc28gZmV3ZXIgYnV5ZXJzIGFuZCBzZWxsZXJzIGZvciB0aGVtLCB3aGljaCBjYW4gbWFrZSB0aGUgc3RvY2tzIGhhcmRlciB0byBvZmYtbG9hZCBpZiBwcmljZXMgc3RhcnQgdG8gZmFsbC4gIkhhdmluZyBzbWFsbGVyIHN0b2NrcyBoaXQgbmV3IGhpZ2hzIG1lYW5zIHRoYXQgdGhlIHJhbGx5IGlzIGJyb2FkLCIgTHV0dHMgc2FpZC4gIkl0IGdpdmVzIHVzIGEgbGl0dGxlIG1vcmUgY29uZmlkZW5jZSB0aGF0IGl0J3MgYSBnb29kLCBzdXN0YWluYWJsZSByYWxseSB0aGF0IGNhbiBob2xkIHRvZ2V0aGVyIGZvciBhIHdoaWxlLiIgVGhlIGJldHRlci1rbm93biBtYXJrZXQgYmFyb21ldGVycywgdGhlIERvdyBhbmQgdGhlIFMmUCA1MDAgaW5kZXhlcywgZmx1Y3R1YXRlZCBiZXR3ZWVuIHNtYWxsIGdhaW5zIGFuZCBsb3NzZXMgZm9yIG1vc3Qgb2YgTW9uZGF5LiBUaGV5IGVuZGVkIHNsaWdodGx5IGJlbG93IHRoZSByZWNvcmQgbGV2ZWxzIHRoZXkgcmVhY2hlZCBGcmlkYXkuIFRoZSBSdXNzZWxsIDIwMDAgcm9zZSAxLjcwIHBvaW50cywgb3IgMC4yIHBlcmNlbnQsIGhpZ2hlciBhdCA5OTcuOTguIFRoZSBpbmRleCBjbGltYmVkIGFzIGhpZ2ggYXMgMTAwMS41MCBhdCBtaWRkYXkuIFRoZSBpbmRleCBjdXJyZW50bHkgY29uc2lzdHMgb2YgMiwwMDggb2YgdGhlIHNtYWxsZXN0IHN0b2NrcyBvZiB0aGUgVS5TLiBlcXVpdHkgbWFya2V0IGFuZCB0aGUgYXZlcmFnZSBjb21wYW55IGhhdmluZyBhIHN0b2NrIG1hcmtldCB2YWx1ZSBvZiBhYm91dCAkMS41IGJpbGxpb24uIFN1bnBvd2VyIENvcnAuLCBhIG1hbnVmYWN0dXJlciBvZiBzb2xhciBwYW5lbHMsIGhhcyBsZWQgZ2FpbnMgZm9yIHRoZSBpbmRleCB0aGlzIHllYXIsIGNsaW1iaW5nICQxNy4wOCwgb3IgMzA0IHBlcmNlbnQsIHRvICQyMi43MC4gS2VyeXggQmlvcGhhcm1hY2V1dGljYWxzIGlzIHRoZSBzZWNvbmQtYmlnZ2VzdCBjbGltYmVyIGluIHRoZSBpbmRleCwgcmlzaW5nICQ1LjMyLCBvciAyMDMgcGVyY2VudCwgJDcuOTQuIFRoZSBEb3cgY2xvc2VkIGRvd24gMTkuMTIgcG9pbnRzLCBvciAwLjEgcGVyY2VudCwgYXQgMTUsMzM1LjI4LCBwYXJpbmcgaXRzIGdhaW4gZm9yIHRoZSB5ZWFyIHRvIDE3IHBlcmNlbnQuIFRoZSBTJlAgNTAwIGluZGV4IGZlbGwgMS4xOCBwb2ludHMsIG9yIDAuMSBwZXJjZW50LCB0byAxLDY2Ni4yOS4gSXRzIGFkdmFuY2UgZm9yIHRoZSB5ZWFyIG5vdyBzdGFuZHMgYXQgMTYuOCBwZXJjZW50LiBJbnZlc3RvcnMgYXJlIGZvY3VzaW5nIG9uIHRoZSBGZWRlcmFsIFJlc2VydmUgdGhpcyB3ZWVrIGFuZCBsb29raW5nIGZvciBjbHVlcyBhYm91dCB3aGF0IGl0IHBsYW5zIHRvIGRvIG5leHQgd2l0aCBpdHMgZWNvbm9taWMgc3RpbXVsdXMgcHJvZ3JhbS4gT24gV2VkbmVzZGF5IEZlZCBDaGFpcm1hbiBCZW4gQmVybmFua2Ugd2lsbCBhcHBlYXIgYmVmb3JlIENvbmdyZXNzIGFuZCB0aGUgY2VudHJhbCBiYW5rIHdpbGwgcmVsZWFzZSBtaW51dGVzIG9mIGl0cyBtb3N0IHJlY2VudCBwb2xpY3kgbWVldGluZy4gVGhlIEZlZCBpcyBidXlpbmcgJDg1IGJpbGxpb24gb2YgYm9uZHMgZXZlcnkgbW9udGggdG8ga2VlcCBsb25nLXRlcm0gaW50ZXJlc3QgcmF0ZXMgbG93LiBUaGF0IGhhcyBlbmNvdXJhZ2VkIGludmVzdG9ycyB0byBwdXQgbW9uZXkgaW50byBzdG9ja3MgaW5zdGVhZCBvZiBib25kcy4gVGhlIHlpZWxkIG9uIHRoZSAxMC15ZWFyIFRyZWFzdXJ5IG5vdGUgaGFzIGJlZW4gYmVsb3cgMiBwZXJjZW50IGFsbW9zdCBjb250aW51YWxseSBzaW5jZSBBcHJpbCAxMi4gVGhhdCdzIGxlc3MgdGhhbiBtYW55IGxhcmdlIGNvbXBhbmllcyBwYXkgaW4gZGl2aWRlbmRzLiBQb2xpY3kgbWFrZXJzIGFyZSB1bmxpa2VseSB0byBjdXQgYmFjayBvbiBzdGltdWx1cyBqdXN0IHlldCBzaW5jZSBVLlMuIGVjb25vbWljIGdyb3d0aCBpcyBsaWtlbHkgdG8gc2xvdyBpbiB0aGUgc2Vjb25kIHF1YXJ0ZXIsIHNhaWQgU2NvdHQgV3JlbiwgYSBzZW5pb3IgZXF1aXR5IHN0cmF0ZWdpc3QgYXQgV2VsbHMgRmFyZ28gQWR2aXNvcnMuIEFzIGEgY29uc2VxdWVuY2UsIFdyZW4gc2FpZCwgc3RvY2tzIGFyZSBsaWtlbHkgdG8gY29udGludWUgdG8gcmlzZS4gIkF0IHNvbWUgcG9pbnQsIHdlIHdpbGwgc2VlIHNvbWUgc29ydCBvZiBhIHB1bGxiYWNrLCBidXQgaXQgZG9lc24ndCBzZWVtIGxpa2UgaXQncyBnb2luZyB0byBiZSByaWdodCBub3csIiBzYWlkIFdyZW4uICJJbiB0aGUgbmVhciB0ZXJtIHdlJ3JlIHByb2JhYmx5IGdvaW5nIHRvIHRyYWRlIGEgbGl0dGxlIGJpdCBoaWdoZXIuIiBUaGUgc3RvY2sgbWFya2V0IHJhbGx5IGlzIGFsc28gaXMgYmVpbmcgdW5kZXJwaW5uZWQgYnkgaW52ZXN0b3JzIG1vdmluZyBiYWNrIGludG8gc3RvY2tzLCByZXZlcnNpbmcgeWVhcnMgb2Ygb3V0Zmxvd3Mgb2YgZnVuZHMgZnJvbSBlcXVpdHkgbWFya2V0cywgc2FpZCBKZXJyeSBCcmFha21hbiwgY2hpZWYgaW52ZXN0bWVudCBvZmZpY2VyIGF0IEZpcnN0IEFtZXJpY2FuIFRydXN0LiBJbnZlc3RvcnMgaGF2ZSBpbnZlc3RlZCBhYm91dCBuZXQgJDE3IGJpbGxpb24gaW50byBkb21lc3RpYyBzdG9jayBtdXR1YWwgZnVuZHMgc2luY2UgdGhlIHN0YXJ0IG9mIHRoZSB5ZWFyLCBhY2NvcmRpbmcgdG8gZGF0YSBmcm9tIHRoZSBJbnZlc3RtZW50IENvbXBhbnkgSW5zdGl0dXRlLiBJbnZlc3RvcnMgaGF2ZSBwdWxsZWQgbW9uZXkgb3V0IG9mIG11dHVhbCBmdW5kcyBldmVyeSB5ZWFyIHNpbmNlIHRoZSBiZWdpbm5pbmcgb2YgdGhlIGZpbmFuY2lhbCBjcmlzaXMgaW4gMjAwNy4gIlRoaXMgbWFya2V0IHJhbGx5IHN0aWxsIGhhcyBsZWdzLCBwYXJ0bHkgYmVjYXVzZSB3ZSd2ZSBzZWVuIGh1Z2UgcmV0YWlsIGluZmxvd3MgYmFjayBpbnRvIGVxdWl0aWVzLCIgQnJhYWttYW4gc2FpZC4gIkl0J3MgaGFyZCB0byBiZWF0IHRoZSBtb25leSBmbG93LiIgSW4gY29tbW9kaXRpZXMgdHJhZGluZywgdGhlIHByaWNlIG9mIGNydWRlIG9pbCByb3NlIDY5IGNlbnRzLCBvciAwLjcgcGVyY2VudCwgdG8gJDk2LjcxIGEgYmFycmVsLiBUaGUgcHJpY2Ugb2YgZ29sZCByb3NlIGZvciB0aGUgZmlyc3QgZGF5IGluIGVpZ2h0IGFzIHRoZSBkb2xsYXIgZmVsbC4gVGhlIHByZWNpb3VzIG1ldGFsIGNsaW1iZWQgJDE5LjQwLCBvciAxLjQgcGVyY2VudCwgdG8gJDEsMzg0LiBHb2xkIGhhcyBzbHVtcGVkIHRoaXMgbW9udGggYXMgaXRzIGF0dHJhY3Rpb24gYXMgYW4gYWx0ZXJuYXRpdmUgaW52ZXN0bWVudCBmYWRlcyBhcyB0aGUgZG9sbGFyIGFwcHJlY2lhdGVzLiBUaGUgVS5TLiBjdXJyZW5jeSBpcyBzdHJlbmd0aGVuaW5nIGJlY2F1c2UgaW52ZXN0b3JzIGJlbGlldmUgdGhlIFUuUy4gZWNvbm9teSBpcyBpbiBiZXR0ZXIgc2hhcGUgdGhhbiB0aGUgSmFwYW5lc2Ugb3IgRXVyb3BlYW4gZWNvbm9taWVzLiBUaGUgZG9sbGFyJ3MgcmFsbHkgcGF1c2VkIG9uIE1vbmRheSwgdGhvdWdoLCBhbmQgdGhlIFUuUy4gY3VycmVuY3kgZmVsbCBhZ2FpbnN0IHRoZSBldXJvIGFuZCB0aGUgeWVuLiBUaGUgZG9sbGFyIGluZGV4IGFsc28gZHJvcHBlZCwgYWZ0ZXIgY2xpbWJpbmcgdG8gaXRzIGhpZ2hlc3QgbGV2ZWwgaW4gY2xvc2UgdG8gdGhyZWUgeWVhcnMgRnJpZGF5LiBJbiBVLlMuIGdvdmVybm1lbnQgYm9uZCB0cmFkaW5nLCB0aGUgeWllbGQgb24gdGhlIDEwLXllYXIgVHJlYXN1cnkgbm90ZSByb3NlIHRvIDEuOTcgcGVyY2VudCBmcm9tIDEuOTMgcGVyY2VudC4gVGhlIE5hc2RhcSBjb21wb3NpdGUgaW5kZXggZmVsbCAyLjUzIHBvaW50cywgb3IgMC4xIHBlcmNlbnQsIHRvIDMsNDk2LjQzIHBvaW50cy4gQW1vbmcgc3RvY2tzIGluIGZvY3VzIG9uIE1vbmRheTog4oCUIEFjdGF2aXMgcm9zZSAkMS42NSwgb3IgMS4zIHBlcmNlbnQsIHRvICQxMjcuMTUgYWZ0ZXIgdGhlIHBoYXJtYWNldXRpY2FsIGNvbXBhbnkgc2FpZCBpdCdzIGJ1eWluZyBXYXJuZXIgQ2hpbGNvdHQuIFRoZSBhbGwtc3RvY2sgZGVhbCwgdmFsdWVkIGF0ICQ4LjUgYmlsbGlvbiwgd291bGQgY3JlYXRlIHRoZSB0aGlyZC1iaWdnZXN0IHNwZWNpYWx0eSBwaGFybWFjZXV0aWNhbCBjb21wYW55IGluIHRoZSBVLlMuIOKAlCBDaGVzYXBlYWtlIEVuZXJneSByb3NlIDUzIGNlbnRzLCBvciAyLjYgcGVyY2VudCwgdG8gJDIwLjgwIGFmdGVyIHRoZSBuYXR1cmFsIGdhcyBwcm9kdWNlciBuYW1lZCBBbmFkYXJrbyBQZXRyb2xldW0gZXhlY3V0aXZlIFJvYmVydCBEb3VnbGFzIExhd2xlciBhcyBpdHMgbmV3IENFTy4gSGUgdGFrZXMgb3ZlciBhcyBDaGVzYXBlYWtlIGNvbnRpbnVlcyBzZWxsaW5nIGFzc2V0cyB0byBwYXJlIGRvd24gYW4gZW5vcm1vdXMgZGVidCBidXJkZW4uIOKAlFdlYnNlbnNlLCBhbiBpbnRlcm5ldCBzZWN1cml0eSBmaXJtLCBzdXJnZWQgJDUuNTMsIG9yIDI5IHBlcmNlbnQsIHRvICQyNC43NiBhZnRlciB0aGUgY29tcGFueSBhZ3JlZWQgdG8gYmUgdGFrZW4gcHJpdmF0ZSBmb3IgJDkwNiBtaWxsaW9uIGJ5IHByaXZhdGUgZXF1aXR5IGZpcm0gVmlzdGEgRXF1aXR5IFBhcnRuZXJzLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT7ATvSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDIxMDljNGE3N2I1ZjZhYWM=</field><field name="symbol" class="java.lang.String">rO0ABXQABEtFUlg=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT7FdVCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAf9cKPXCj2</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAgZmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAfeuFHrhR7</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAgGZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAgGZmZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAABU95A==</field><field name="id" class="java.lang.String">rO0ABXQAEGNkYjU3OTY4ZjA0ODNkMmU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEaVAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDIyMzM=</field><field name="title" class="java.lang.String">rO0ABXQAN0JvcnJvd2VycyBTaGVsdmUgRGVidCBPZmZlcnMgYXMgRmVkIEphcnMgQ3JlZGl0IE1hcmtldHM=</field><field name="content" class="java.lang.String">rO0ABXQTslByb3NwZWN0aXZlIGJvcnJvd2VycyByYW5naW5nIGZyb20gVS5TLiBjb21wYW5pZXMgdG8gY291bnR5IGdvdmVybm1lbnRzIG9uIE1vbmRheSBzaGVsdmVkIGEgcmFmdCBvZiBkZWFscyB0byByYWlzZSBuZXcgY2FwaXRhbCBvciByZWZpbmFuY2UgZGVidCBhcyBhIHN1ZGRlbmx5IHVuY2VydGFpbiBpbnRlcmVzdCByYXRlIGVudmlyb25tZW50IGRlbnRlZCBkZW1hbmQuIEluIHRoZSBtdW5pY2lwYWwgYm9uZCBtYXJrZXQsIGhhbGYgYSBkb3plbiBkZWFscyBhaW1lZCBhdCByYWlzaW5nIGNvbGxlY3RpdmVseSBtb3JlIHRoYW4gJDMwMCBtaWxsaW9uIHdlcmUgcG9zdHBvbmVkLCB3aGlsZSBzZXZlcmFsIGNvbXBhbmllcyBwdWxsZWQgcGxhbnMgdG8gcmVmaW5hbmNlIHN5bmRpY2F0ZWQgYmFuayBsb2Fucy4gQ29ycG9yYXRlIGJvbmRzLCBtZWFud2hpbGUsIHBhc3NlZCBhIGZvdXJ0aCBkYXkgd2l0aCBubyBkZWFscyBicm91Z2h0IHRvIG1hcmtldCwgZWl0aGVyIGluIHRoZSByaXNreSBoaWdoLXlpZWxkIHNlY3RvciBvciB0aGUgc2FmZXIgaW52ZXN0bWVudC1ncmFkZSBzcGhlcmUuIFJhaXNpbmcgY2FwaXRhbCBoYXMgYmVlbiBjaGFsbGVuZ2luZyB0byBzYXkgdGhlIGxlYXN0IHNpbmNlIGxhc3QgV2VkbmVzZGF5IHdoZW4gRmVkZXJhbCBSZXNlcnZlIENoYWlybWFuIEJlbiBCZXJuYW5rZSBzZW50IGludGVyZXN0IHJhdGVzIHNvYXJpbmcgYnkgb3V0bGluaW5nIGEgcGxhbiB0byB3aW5kIGRvd24gdGhlIGNlbnRyYWwgYmFuaydzIG1hc3NpdmUgc3RpbXVsdXMgcHJvZ3JhbS4gS25vd24gYXMgcXVhbnRpdGF0aXZlIGVhc2luZyBhbmQgY29uc2lzdGluZyBvZiAkODUgYmlsbGlvbiBhIG1vbnRoIGluIGJvbmQgcHVyY2hhc2VzLCB0aGUgcHJvZ3JhbSB3YXMgaW5zdHJ1bWVudGFsIGluIGEgcmFsbHkgb2YgYm9uZHMsIGVxdWl0aWVzIGFuZCBjb21tb2RpdGllcywgYW5kIGhhZCBkcml2ZW4gaW50ZXJlc3QgcmF0ZXMgdG8gcmVjb3JkIGxvd3MuIEJ1dCBzaW5jZSBCZXJuYW5rZSdzIGNvbW1lbnRzIGxhc3Qgd2VlaywgdGhlIHlpZWxkIG9uIHRoZSBiZW5jaG1hcmsgMTAteWVhciBVLlMuIFRyZWFzdXJ5IE5vdGUgIGhhcyBzaG90IHVwIDM3IGJhc2lzIHBvaW50cywgYnJpZWZseSB0b3VjaGluZyBhIHR3by15ZWFyIGhpZ2ggb2YgMi42NyBwZXJjZW50IG9uIE1vbmRheS4gIldlIG5lZWQgdG8gaGF2ZSBwYW5pYyBzZWxsaW5nIChpbiBUcmVhc3VyaWVzKSBvdXQgb2YgdGhlIHdheSBhbmQgYSBzdGFibGUgbGV2ZWwgb24gdGhlIDEwLXllYXIgVHJlYXN1cnksIiBiZWZvcmUgdGhlIG5ldy1pc3N1ZSBtYXJrZXQgY2FuIHJldHVybiwgc2FpZCBTY290dCBTY2h1bHRlLCBzZW5pb3IgaW52ZXN0bWVudC1ncmFkZSBjb3Jwb3JhdGUgYm9uZCBzeW5kaWNhdGUgbWFuYWdlciBhdCBDaXRpZ3JvdXAuIFRoYXQgbmVlZHMgdG8gYmUgZm9sbG93ZWQgYnkgYm9ycm93ZXJzIHdpbGxpbmcgdG8gc2VsbCBib25kcyBhdCBoaWdoZXIgeWllbGRzIHRoYW4gdGhleSBoYWQgdG8gdW5kZXIgdGhlIEZlZCdzIGVhc3ktbW9uZXkgcmVnaW1lLiBDb3Jwb3JhdGUgYm9uZHMgaGFkIGJlZW4gZmx5aW5nIG9mZiB0aGUgc2hlbHZlcyB1bnRpbCByZWNlbnRseSBhcyBjb21wYW5pZXMgbG9va2VkIHRvIHJlZmluYW5jZSBhdCByZWNvcmQgbG93IHJhdGVzIGFuZCB5aWVsZC1odW5ncnkgaW52ZXN0b3JzIHdlcmUgcmVhZHkgdG8gc2lnbiBjaGVja3MuIFNpbmNlIEJlcm5hbmtlIGZpcnN0IGZsb2F0ZWQgdGhlIG5vdGlvbiBsYXN0IG1vbnRoIG9mIGEgcHVsbCBiYWNrIGZyb20gYm9uZCBidXlpbmcsIGNvcnBvcmF0ZSBib25kcyBoYXZlIGZhbGxlbiBoYXJkIGFuZCBhcmUgbm93IGRvd24gZm9yIHRoZSB5ZWFyIGJ5IDMuNzQgcGVyY2VudCBvbiBhIHRvdGFsIHJldHVybiBiYXNpcywgYWNjb3JkaW5nIHRvIHRoZSBCYXJjbGF5cyBpbnZlc3RtZW50LWdyYWRlIGluZGV4LiAiVGhlIGxldmVsIHRvIHdoaWNoIGludmVzdG1lbnQgZ3JhZGUgY29ycG9yYXRlIGJvbmRzIGFyZSBpbnRlcmVzdCByYXRlIHNlbnNpdGl2ZSB3aWxsIGNlcnRhaW5seSBiZSBhbiBleWUtb3BlbmVyIHRvIG1hbnkgdG90YWwgcmV0dXJuIGludmVzdG9ycyB3aGVuIHRoZXkgb3BlbiB1cCB0aGVpciBxdWFydGVybHkgc3RhdGVtZW50cyBvbiBKdW5lIDMwLCIgc2FpZCBFZHdhcmQgTWFycmluYW4sIGhlYWQgb2YgUm95YWwgQmFuayBvZiBTY290bGFuZCdzIFVTIHJlc2VhcmNoLiBTYWlkIENyZWRpQ29ycCBDYXBpdGFsIENFTyBDaHJpc3RpYW4gTGF1YjogIldoYXQgd2Uga25vdyBpcyB0aGF0IHdlIHdvbid0IHNlZSBjaGVhcCBmaW5hbmNpbmcgbGlrZSB3ZSBkaWQgaW4gdGhlIGVhcmx5IGhhbGYgb2YgdGhlIHllYXIuIiBNVU5JIEJPTkQgU0FMRVMgU1RBTEw7IExPQU4gUkVGSU5BTkNJTkdTIFNIRUxWRUQgTXVuaWNpcGFsIGlzc3VlcyBoYXZlIGFsc28gc2xvd2VkIHRvIGEgY3Jhd2wsIHdpdGggYm9uZCBzYWxlcyB3b3J0aCAkMzMxIG1pbGxpb24gcG9zdHBvbmVkIG9uIE1vbmRheS4gVGhhdCBicm91Z2h0IHRoZSB0b3RhbCB2YWx1ZSBvZiBkZWFscyBzaGVsdmVkIHNpbmNlIG1pZC1KdW5lIHRvICQyLjYgYmlsbGlvbi4gQSBzdGVlcCBwcmljZSBkcm9wIGluIHRoZSAkMy43IHRyaWxsaW9uIG11bmljaXBhbCBib25kIG1hcmtldCBoYXMgbGlmdGVkIHlpZWxkcyBvbiBib25kcyBkdWUgaW4gMTAgYW5kIDMwIHllYXJzIHRvIGxldmVscyBub3Qgc2VlbiBzaW5jZSAyMDExLiAiUHVibGljIG9mZmljaWFscyBkbyBub3Qgd2FudCBiZSB0aGUgb25lcyBzZWxsaW5nIGEgZGVhbCBhdCB5aWVsZHMgd2hpY2ggcmVzdWx0IHRvIGJlIHRvcCBvZiB0aGUgbWFya2V0LCIgc2FpZCBhIG11bmljaXBhbCBib25kIGFuYWx5c3Qgd2hvIGRlY2xpbmVkIHRvIGJlIG5hbWVkLiAiVGhleSBwcmVmZXIgdG8gd2FpdCBmb3IgdGhlIG1hcmtldCB0byBjYWxtIGRvd24gYW5kIGJlY29tZSBtb3JlIHN0YWJsZSBiZWZvcmUgcHVzaGluZyBhaGVhZCB3aXRoIHRoZWlyIHNhbGVzLiIgTG9vcCBDYXBpdGFsLCBhIG11bmkgYm9uZCB1bmRlcndyaXRlciwgcmVjZW50bHkgY3V0IGl0cyBlc3RpbWF0ZSBmb3IgMjAxMyBtdW5pIGlzc3VhbmNlIHRvICQzNjAgYmlsbGlvbiBmcm9tICQ0MDAgYmlsbGlvbiwgYnV0IExvb3AgTWFuYWdpbmcgRGlyZWN0b3IgQ2hyaXMgTWllciBzYWlkIHRoZXkgbWF5IGN1dCB0aGVpciBmb3JlY2FzdCBtb3JlIGlmIHByZXNlbnQgY29uZGl0aW9ucyBwZXJzaXN0LiBTdGlsbCwgdGhlIHR3byBiaWcgbXVuaXMgZGVhbCBvZiB0aGUgd2VlayByZW1haW4gb24gdGhlIGNhbGVuZGFyIGZvciBub3c6ICQxLjMgYmlsbGlvbiBlYWNoIGZyb20gdGhlIHN0YXRlIG9mIElsbGlub2lzIGFuZCB0aGUgY2l0eSBvZiBMb3MgQW5nZWxlcy4gSW4gdGhlIHN5bmRpY2F0ZWQgbG9hbiBtYXJrZXQsIExvYW4gUHJpY2luZyBDb3JwLCBhIHVuaXQgb2YgVGhvbXNvbiBSZXV0ZXJzLCByZXBvcnRlZCB0aGF0IEJlYXRzIEVsZWN0cm9uaWNzLCB0aGUgY29uc3VtZXIgYXVkaW8gY29tcGFueSBmb3VuZGVkIGJ5IHJhcHBlciBEci4gRHJlLCBwdWxsZWQgYSAkNjAwIG1pbGxpb24gdG8gJDY1MCBtaWxsaW9uIHNlbmlvciBzZWN1cmVkIGxvYW4gZGVhbCBkZXNpZ25lZCB0byBmaW5hbmNlIGEgZGl2aWRlbmQgcmVjYXBpdGFsaXphdGlvbi4gTWVhbndoaWxlLCBhaXJjcmFmdCBwYXJ0IG1hbnVmYWN0dXJlciBQUlYgQWVyb3NwYWNlIHNoZWx2ZWQgYSBwcm9wb3NlZCByZXByaWNpbmcgZHVlIHRvIG1hcmtldCBjb25kaXRpb25zLCBzb3VyY2VzIHRvbGQgTFBDLiBTVE9DSyBJU1NVQU5DRSBBTFNPIEhVUlQgRXF1aXR5IGNhcGl0YWwgcmFpc2luZyBpcyBhbHNvIGF0IHJpc2ssIGJhbmtlcnMgc2FpZC4gQXQgbGVhc3QgMTAgaW5pdGlhbCBwdWJsaWMgb2ZmZXJpbmdzIGFyZSBkdWUgdG8gcHJpY2UgdGhpcyB3ZWVrIGFuZCBhbmFseXN0cyBzYWlkIHNvbWUgY291bGQgYmUgcG9zdHBvbmVkLCB3aGlsZSBJUE8gYWN0aXZpdHkgaXMgZXhwZWN0ZWQgdG8gc2xvdyBpbiB0aGUgY29taW5nIHdlZWtzLiBCYW5rZXJzIHJlbWFpbiBob3BlZnVsIHRoYXQgdHdvIG9mIHRoaXMgd2VlaydzIGJpZ2dlc3QgSVBPcywgYSAkMS4zIGJpbGxpb24gb2ZmZXJpbmcgYnkgaW5kdXN0cmlhbCBkaXN0cmlidXRpb24gY29tcGFueSBIRCBTdXBwbHkgYW5kIGEgJDY0MiBtaWxsaW9uIG9mZmVyaW5nIGJ5IHRlY2hub2xvZ3kgZGlzdHJpYnV0aW9uIGNvbXBhbnkgQ0RXIENvcnBvcmF0aW9uLCB3aWxsIHByaWNlLiBCdXQgYm90aCBkZWFscyBhcmUgbm90IHlldCBjb3ZlcmVkIGFuZCBhcmUgZmFjaW5nIHNvbWUgcHVzaGJhY2sgb24gdmFsdWF0aW9uLiAiSXQncyBhIG5lcnZvdXMgYW5kIGFueGlvdXMgdGltZSB0aGlzIHdlZWsgZm9yIElQTyBpbnZlc3RvcnMsIiBzYWlkIElQTyBCb3V0aXF1ZSdzIG1hbmFnaW5nIGRpcmVjdG9yIFNjb3R0IFN3ZWV0LiBMYXN0IHdlZWssIHNwZWNpYWx0eSByZXRhaWxlciBGaXZlIEJlbG93IEluYyAgcG9zdHBvbmVkIGEgc2Vjb25kYXJ5IHNoYXJlIG9mZmVyaW5nIGNpdGluZyAiY3VycmVudCBjYXBpdGFsIG1hcmtldCBjb25kaXRpb25zLiIgRnVydGhlciBzb3V0aCwgQXp1bCBMaW5oYXMgQcOpcmVhcyBCcmFzaWxlaXJhcyBTQSwgQnJhemlsJ3MgdGhpcmQtYmlnZ2VzdCBhaXJsaW5lLCBpcyBjb25zaWRlcmluZyBwb3N0cG9uaW5nIGFuIElQTyBzY2hlZHVsZWQgZm9yIGFzIGVhcmx5IGFzIG5leHQgbW9udGggYW5kIGV4cGVjdGVkIHRvIHJhaXNlIHNvbWUgJDQ1MCBtaWxsaW9uIGJlY2F1c2Ugb2YgbWFya2V0IGNvbmRpdGlvbnMuIFRoZSBlbmQgb2YgdGhlIHVwY29taW5nIHF1YXJ0ZXIsIGFzIHdlbGwgYXMgdGhlIEp1bHkgNCBVLlMuIGhvbGlkYXkgY29udHJpYnV0ZSB0byB0aGUgZXhwZWN0ZWQgc2xvd2Rvd24sIGJ1dCBwb29yIGFmdGVyIG1hcmtldCBwZXJmb3JtYW5jZSBvZiByZWNlbnQgSVBPcyBzdWNoIGFzIHBlcmZ1bWUgY29tcGFueSBDb3R5IEluYyBhbmQgaW4tZmxpZ2h0IHdpcmVsZXNzIHByb3ZpZGVyIEdvZ28gSW5jLiAgYXJlIGFsc28gdG8gYmxhbWUu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT90jYiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGZmNTAzZDU4Mzg2YTIyMzI=</field><field name="symbol" class="java.lang.String">rO0ABXQABExPQU4=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT95s+SAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/4AAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/5mZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/4AAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/5mZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/3XCj1wo9c</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAK8A==</field><field name="id" class="java.lang.String">rO0ABXQAEGVlY2MzNjI5MThhZGJiNWY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mK3JAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExNzgx</field><field name="title" class="java.lang.String">rO0ABXQAL0NoaW5hIENyZWRpdCBTcXVlZXplIFByb21wdHMgU3VpY2lkZXMsIFZpb2xlbmNl</field><field name="content" class="java.lang.String">rO0ABXQ3T0hvdXJzIGFmdGVyIGEgY3JlZGl0b3IgYW5kIGhpcyBnYW5nIG9mIHRhdHRvb2VkIHRodWdzIGh1c3RsZWQgWmhvbmcgTWFvamluIGludG8gYSBjb2ZmZWUgc2hvcCBpbiBXZW56aG91LCBoZSBzYXlzIGhlIHdvdWxkbuKAmXQgeWllbGQgdG8gdGhlaXIgZGVtYW5kcy4gVGhleSB3YW50ZWQgdG8gdGFrZSBvdmVyIG9uZSBvZiB0aGUgcGhhcm1hY2llcyBpbiBhIGNoYWluIGhl4oCZZCBidWlsdCBieSBib3Jyb3dpbmcgZnJvbSBwcml2YXRlIGxlbmRlcnMuIEluc3RlYWQsIGhlIG1hZGUgYW4gb2ZmZXIgb2YgdHJhZGl0aW9uYWwgcmV0cmlidXRpb24gaW4gdGhpcyBlYXN0ZXJuIENoaW5lc2UgY2l0eSwga25vd24gZm9yIGxvYW4gc2hhcmtzIHdobyBoYXZlIHNvbWV0aW1lcyBtZXRlZCBvdXQgdmlvbGVuY2UgdG8gYmFkIGRlYnRvcnMuIOKAnElmIHlvdSBsaWtlLCB5b3UgY2FuIGN1dCBvZmYgb25lIG9mIG15IGZpbmdlcnMgaW5zdGVhZCzigJ0gWmhvbmcsIDQyLCBzYXlzIGhlIHRvbGQgdGhlbS4gR2l2aW5nIHVwIHRoZSBzdG9yZSB3b3VsZCBoYXZlIG1hZGUgaXQgaW1wb3NzaWJsZSB0byBwYXkgYmFjayBhbm90aGVyIDEzMCBjcmVkaXRvcnMsIFpob25nIHNhaWQuIEhl4oCZZCBib3Jyb3dlZCAzMCBtaWxsaW9uIHl1YW4gKCQ0LjcgbWlsbGlvbikgYXQgaW50ZXJlc3QgcmF0ZXMgYXMgaGlnaCBhcyA3IHBlcmNlbnQgYSBtb250aCB0byBleHBhbmQgdGhlIGJ1c2luZXNzLiBNYW55IG9mIHRoZSBsZW5kZXJzIHdlcmUgZWxkZXJseSBuZWlnaGJvcnMgd2hv4oCZZCBtb3J0Z2FnZWQgdGhlaXIgaG9tZXMuIEF0IGxlYXN0IDkwIGJvc3NlcyBpbiBzaW1pbGFyIHNpdHVhdGlvbnMgdG8gWmhvbmcgaGF2ZSBmbGVkIHRoZSBjaXR5IHNpbmNlIEFwcmlsLCBhbmQgdHdvIGtpbGxlZCB0aGVtc2VsdmVzLCBhY2NvcmRpbmcgdG8gWmhvdSBEZXdlbiwgaGVhZCBvZiBhIHNtYWxsIGJ1c2luZXNzIGFzc29jaWF0aW9uIGluIFdlbnpob3UuIE9uZSB3YXMgc2hvZW1ha2VyIFNoZW4gS3VpemhlbmcsIHdobyBqdW1wZWQgdG8gaGlzIGRlYXRoIGZyb20gaGlzIDIybmQtc3RvcnkgaG9tZSBvbiBTZXB0LiAyMSwgaGUgc2FpZC4gV2VuemhvdeKAmXMgNDAwLDAwMCBidXNpbmVzc2VzIGFyZSBmYWNpbmcgZmluYW5jaWFsIGhhcmRzaGlwIGJlY2F1c2Ugb2YgcmlzaW5nIGNvc3RzLCBzb2FyaW5nIGJsYWNrIG1hcmtldCBpbnRlcmVzdCByYXRlcyBhbmQgYSBzdWRkZW4gY3JlZGl0IHNxdWVlemUsIFpob3Ugc2FpZC4gU2ltaWxhciBwcm9ibGVtcyBhcmUgaGFwcGVuaW5nIGFjcm9zcyBDaGluYSBiZWNhdXNlIHByaXZhdGUgZW50ZXJwcmlzZXMgaW4gQ2hpbmEgcmVseSBvbiB1bmRlcmdyb3VuZCBib3Jyb3dpbmcgcmF0aGVyIHRoYW4gYmFua3MgdG8gb3BlcmF0ZSwgaGUgc2FpZC4gVGhlaXIgcHJlZGljYW1lbnQgcHJvbXB0ZWQgQ2hpbmHigJlzIHByZW1pZXIgV2VuIEppYWJhbyB0byB2aXNpdCB0aGUgY2l0eSAyMzAgbWlsZXMgKDM3MCBraWxvbWV0ZXJzKSBzb3V0aCBvZiBTaGFuZ2hhaSBvbiBPY3QuIDQsIHdoZXJlIGhlIHBsZWRnZWQgaGVscCBmb3IgdHJvdWJsZWQgYnVzaW5lc3Nlcy4gTmF0aW9uYWwgYW5kIGxvY2FsIGxlYWRlcnMgaGF2ZSBzaW5jZSBhbm5vdW5jZWQgbW92ZXMgdG8gaGVscCBzbWFsbCBmaXJtcywgaW5jbHVkaW5nIG9mZmVyaW5nIGVhc2llciBhY2Nlc3MgdG8gYmFuayBsb2FucywgYSBjYXAgb24gcHJpdmF0ZS1sZW5kaW5nIGludGVyZXN0IHJhdGVzIGluIFdlbnpob3UgYW5kIGEgY3JhY2tkb3duIG9uIGxvYW4gc2hhcmtzIHRoYXQgdXNlIHZpb2xlbmNlLiDigJhIdWdlIFByZXNzdXJl4oCZIFRoZSBtZWFzdXJlcyBoYXZlIGRvbmUgbGl0dGxlIHRvIGhlbHAgWmhvbmcsIGhlIHNheXMuIOKAnEkgYW0gdW5kZXIgaHVnZSBwcmVzc3VyZSzigJ0gaGUgc2F5cywgc2l0dGluZyBpbiBhIHdhcmVob3VzZSB3aXRoIGZhc3QtZGVwbGV0aW5nIHN0b2NrcyBvZiBtZWRpY2luZS4g4oCcV2UgZG9u4oCZdCBoYXZlIGVub3VnaCBtb25leS7igJ0gVGhlIHN1ZGRlbiBjb2xsYXBzZSBvZiBpbmZvcm1hbCBsZW5kaW5nIG5ldHdvcmtzIHJldmVhbHMgdGhlIGZyYWdpbGl0eSBvZiBDaGluYeKAmXMgdW5yZWd1bGF0ZWQgZmluYW5jaW5nIHN5c3RlbSB3aGVuIGNyZWRpdCB0aWdodGVucyBhbmQgY3JlZGl0b3JzIGxvc2UgY29uZmlkZW5jZSwgc2FpZCBUYW8gRG9uZywgYSBIb25nIEtvbmctYmFzZWQgZWNvbm9taXN0IGF0IENyZWRpdCBTdWlzc2UgR3JvdXAgQUcuIE1vbmV5IHN1cHBseSBoYXMgc2hydW5rIGFzIHRoZSBnb3Zlcm5tZW50IHRpZ2h0ZW5zIGxlbmRpbmcgdG8gdHJ5IGFuZCByZWluIGluIGluZmxhdGlvbiBydW5uaW5nIG5lYXIgYSB0aHJlZS15ZWFyIGhpZ2guIOKAmFRpcCBvZiBJY2ViZXJn4oCZIOKAnFRoaXMgaXMgYSBtdWNoIGJpZ2dlciBwcm9ibGVtIGFjcm9zcyB0aGUgY291bnRyeSzigJ0gc2FpZCBUYW8sIHdobyBlc3RpbWF0ZXMgb3V0c3RhbmRpbmcgcHJpdmF0ZSBsb2FucyBzdGFuZCBhdCA0IHRyaWxsaW9uIHl1YW4sIG9yIDggcGVyY2VudCBvZiB0b3RhbCBsZW5kaW5nIGluIENoaW5hLiDigJxXZW56aG91IGlzIGp1c3QgdGhlIHRpcCBvZiB0aGUgaWNlYmVyZy7igJ0gTW9zdCBvZiB0aGUgaW5mb3JtYWwgbGVuZGluZyBoYXMgYmVlbiBwdW1wZWQgaW50byByZWFsIGVzdGF0ZSBkZXZlbG9wZXJzIHJpZGluZyBDaGluYeKAmXMgcHJvcGVydHkgYm9vbSB0aGF0IGlzIHNob3dpbmcgc2lnbnMgb2Ygc2xvd2luZywgc2FpZCBUYW8uIEluIFdlbnpob3UsIGl04oCZcyBkcml2ZW4gdXAgaG9tZSBwcmljZXMgdG8gYW1vbmcgdGhlIG1vc3QgZXhwZW5zaXZlIGluIHRoZSBjb3VudHJ5LiBDaGluZXNlIG1lZGlhIHJlcG9ydHMgb2Ygc2ltaWxhciBkaWZmaWN1bHRpZXMgaGF2ZSBlbWVyZ2VkIGluIHRoZSBwcm9zcGVyb3VzIG1pbmluZyB0b3duIE9yZG9zIGluIHRoZSBub3J0aCBhbmQgdGhlIGluZHVzdHJpYWwgaGVhcnRsYW5kIG9mIEd1YW5nZG9uZyBpbiB0aGUgc291dGguIFRoZSByaXNrcyB0byBDaGluYeKAmXMgd2lkZXIgZWNvbm9teSBpbmNsdWRlIGEgcG90ZW50aWFsIGNyZWRpdCBmcmVlemUgdHJpZ2dlcmVkIGJ5IGluY3JlYXNlZCBtaXN0cnVzdCBhbW9uZyBpbmZvcm1hbCBsZW5kZXJzLCBhbHNvIHJlZmVycmVkIHRvIGFzIGN1cmIgbGVuZGVycywgYWNjb3JkaW5nIHRvIGFuIE9jdC4gMTEgcmVwb3J0IGJ5IFdhbmcgVGFvLCBhIEhvbmcgS29uZy1iYXNlZCBlY29ub21pc3QgYXQgVUJTIEFHLiBUaGF0IGNvdWxkIHRyaWdnZXIgbW9yZSB3aWRlc3ByZWFkIGJhbmtydXB0Y2llcywgc2hlIHNhaWQuIFdlbnpob3UgLS0gYSBjaXR5IG9mIDkgbWlsbGlvbiB3aG9zZSBwcml2YXRlIGVudGVycHJpc2VzIHJhbmdlIGZyb20gc2hvZW1ha2VycyBpbiBkdXN0eSByb2FkLXNpZGUgaG9tZXMgdG8gbWFudWZhY3R1cmluZyBwbGFudHMgaW4gbmV3IGluZHVzdHJpYWwgcGFya3MgLS0gcHJvZHVjZXMgOTAgcGVyY2VudCBvZiBDaGluYeKAmXMgZXllZ2xhc3NlcyBhbmQgZXhwb3J0ZWQgbGlnaHRlcnMuIFRoZSBjaXR54oCZcyB3ZWFsdGggaXMgcmVmbGVjdGVkIGluIHRoZSBQb3JzY2hlcyBhbmQgTGFuZCBSb3ZlcnMgcGFya2VkIGluIHRoZSBzdHJlZXRzIGFuZCB0aGUgZW1lcmdlbmNlIG9mIGRvd250b3duIHNob3BwaW5nIGFyY2FkZXMgc2VsbGluZyBIdWdvIEJvc3MgY2xvdGhlcyBhbmQgT21lZ2Egd2F0Y2hlcy4gRW1icmFjZWQgRGVuZ+KAmXMgUmVmb3JtcyBJdCB3YXMgdGhlIGZpcnN0IGNpdHkgdG8gd2lkZWx5IGVtYnJhY2UgcHJpdmF0ZSBlbnRlcnByaXNlIGluIHRoZSBlYXJseSAxOTgwcyB1bmRlciB0aGUgZWNvbm9taWMgcmVmb3JtcyBvZiB0aGVuIGxlYWRlciBEZW5nIFhpYW9waW5nLCBkZXZlbG9waW5nIHRoZSBtb3N0IGFkdmFuY2VkIHByaXZhdGUgbGVuZGluZyBuZXR3b3JrcyBpbiB0aGUgY291bnRyeS4gQnVzaW5lc3NlcyBpbiBXZW56aG91IHVzZWQgZmFtaWx5IGFuZCBob21ldG93biBuZXR3b3JrcyBiZWNhdXNlIGJhbmsgbG9hbnMgd2VyZSBoYXJkIHRvIGNvbWUgYnkuIFRoZSBsb2NhbCBnb3Zlcm5tZW50IGhlbHBlZCBmb3N0ZXIgdGhhdCBieSB0YWtpbmcgYSBsZW5pZW50IGFwcHJvYWNoIHRvIHByaXZhdGUgbGVuZGluZywgYWNjb3JkaW5nIHRvIEh1YW5nIFlhc2hlbmcsIGFuIGFzc29jaWF0ZSBwcm9mZXNzb3IgYXQgdGhlIE1hc3NhY2h1c2V0dHMgSW5zdGl0dXRlIG9mIFRlY2hub2xvZ3nigJlzIFNsb2FuIFNjaG9vbCBvZiBNYW5hZ2VtZW50LiBBIHByZXZpb3VzIGNyZWRpdCBzcXVlZXplIGluIFdlbnpob3UgMjUgeWVhcnMgYWdvIGFmZmVjdGVkIDIwMCwwMDAgbGVuZGVycywgcmVzdWx0aW5nIGluIDUyMyBraWRuYXBwaW5ncyBhbmQgbW9yZSB0aGFuIDMwIGRlYXRocywgYWNjb3JkaW5nIHRvIGEgbG9jYWwgZ292ZXJubWVudCB3ZWJzaXRlLiBBcyB0aGUgY2xhY2tpbmcgZnJvbSBhIG5lYXJieSBzaG9lIGZhY3RvcnkgZHJpZnRzIHRocm91Z2ggdGhlIHdpbmRvdyBvZiBoaXMgd2FyZWhvdXNlIG9uIFdlbnpob3XigJlzIGluZHVzdHJpYWwgb3V0c2tpcnRzLCBaaG9uZyB0ZWxscyBob3cgaGUgcmVsaWVkIG9uIG1vbmV5IGxlbmRlcnMgdG8gYnVpbGQgQmx1ZSBTa3kgUGhhcm1hY3kgaW50byBhIGNoYWluIG9mIDI3IHNob3BzIGluIGp1c3QgdGhyZWUgeWVhcnMuIEEgZG9jdG9yIGZyb20gYSBtb3VudGFpbiB2aWxsYWdlLCBaaG9uZyBib3Jyb3dlZCBtb25leSB0byBwYXkgbWVkaWNhbCBiaWxscyBoZSByYW4gdXAgY2FyaW5nIGZvciBoaXMgd2lmZSB3aG8gZGllZCBhdCAyMyBvZiBsaXZlciBkaXNlYXNlLiBBZnRlciBoZSByZW1hcnJpZWQsIHRvIGEgd29tYW4gd2l0aCBkZWJ0cyBvZiBoZXIgb3duIGZyb20gcnVubmluZyBhIG1vbmV5LWxlbmRpbmcgYnVzaW5lc3MsIGhlIG9wZW5lZCB1cCBhIHBoYXJtYWN5IGluIFdlbnpob3UgdG8gdHJ5IHRvIHBheSBiYWNrIHRoZWlyIGNvbWJpbmVkIGRlYnQuIE5ldHdvcmsgb2YgTGVuZGVycyBUaGUgY291cGxlIHRvb2sgb24gbW9yZSBkZWJ0IHRvIGZ1bmQgdGhlaXIgZXhwYW5zaW9uLCBaaG9uZyBzYWlkLiBIZSBjb3VsZG7igJl0IGdldCBtb25leSBmcm9tIHRoZSBiYW5rcywgaGUgc2FpZCwgc28gaGUgZmlyc3QgYm9ycm93ZWQgZnJvbSBlbGRlcmx5IG5laWdoYm9ycyBmcm9tIGhpcyBob21lIGNvdW50eS4gU21hbGwgYW5kIG1lZGl1bS1zaXplZCBidXNpbmVzc2VzIGFjY291bnQgZm9yIDgwIHBlcmNlbnQgb2Ygam9icyBpbiBDaGluYSwgYWNjb3JkaW5nIHRvIHRoZSBjb3VudHJ54oCZcyBpbmR1c3RyeSBtaW5pc3RyeS4gWWV0IHRoZXnigJlyZSBsYXJnZWx5IHVuYWJsZSB0byBnZXQgbG9hbnMgZnJvbSBiYW5rcywgd2hpY2ggcHJlZmVyIGNvbGxhdGVyYWwgdG8gY2FzaC1mbG93LCBhY2NvcmRpbmcgdG8gYW4gT2N0LiAxNyByZXBvcnQgYnkgU3lkbmV5LWJhc2VkIGludmVzdG1lbnQgYmFuayBNYWNxdWFyaWUgR3JvdXAgTHRkLiBCeSB0YXBwaW5nIGludG8gaGlzIGhvbWV0b3duIG5ldHdvcmssIFpob25nIHdhcyB0aGUgZmluYWwgbGluayBpbiBhIGxvbmcgY2hhaW4gb2YgZGVidC4g4oCcRm9yIHVzdWFsIGxlbmRpbmcsIEJhbmsgQSBsZW5kcyB0byBhIGN1c3RvbWVyIGFuZCBzZWVzIHRoZSBjYXNoIGZsb3dzLOKAnSBzYWlkIFRhbywgdGhlIENyZWRpdCBTdWlzc2UgZWNvbm9taXN0LiDigJxXaXRoIGluZm9ybWFsIGxlbmRpbmcsIGl0IGdvZXMgZnJvbSBBIHRvIEIgdG8gQywgYWxsIHRoZSB3YXkgdG8gWFlaLiBPbmNlIGl04oCZcyBiZXlvbmQgQywgeW91IGhhdmUgbm8gaWRlYSB3aGVyZSB0aGlzIG1vbmV5IHdlbnQgdG8u4oCdIEluIFpob25n4oCZcyBjYXNlLCB0aGUgdHJhaWwgb2YgZGVidCBjYW4gYmUgdHJhY2VkIHRvIHJvd3Mgb2YgZm91ci1zdG9yeSBjZW1lbnQgaG91c2luZyBub3QgZmFyIGZyb20gdGhlIFdlbnpob3UgYWlycG9ydCA0MCBtaW51dGVzIG91dHNpZGUgb2YgdG93biBieSBjYXIuIE1lbiBwbGF5IHBvb2wgYmVzaWRlIHRoZSBncm91bmQtIGZsb29yIHN0b3JlZnJvbnRzIG5lYXIgYSBkYXJrZW5lZCBtYWhqb25nIHBhcmxvci4gQ290dGFnZSBJbmR1c3RyeSBUaGUgcmVzaWRlbnRzIHR1cm5lZCBtb25leSBsZW5kaW5nIGludG8gYSBjb3R0YWdlIGluZHVzdHJ5LCBhY2NvcmRpbmcgdG8gaW50ZXJ2aWV3cyB3aXRoIHNpeCBvZiB0aGVtLiBUaGV5IGJ1aWx0IGEgbGF0dGljZSBvZiBpbnRlcmxvY2tlZCBjcmVkaXQsIG9mdGVuIGJvcnJvd2luZyBmcm9tIGJhbmtzIGFuZCBvdGhlciBwcml2YXRlIGxlbmRlcnMgdG8gYXJiaXRyYWdlIGludGVyZXN0IHJhdGVzLiBUYWtpbmcgb3V0IGJhbmsgbG9hbnMgYXQgMSBwZXJjZW50IGEgbW9udGgsIG1hbnkgbGVudCBvdXQgdGhlaXIgY2FzaCBmb3IgMiBwZXJjZW50IG9yIGhpZ2hlciBhIG1vbnRoLiBUaGV5IHBvY2tldGVkIHRoZSBkaWZmZXJlbmNlIHRvIHN1cHBsZW1lbnQgbWVhZ2VyIGluY29tZSBmcm9tIG9kZCBqb2JzLiBTaXR0aW5nIG9uIGEgc21hbGwgc3Rvb2wsIGdyYXktaGFpcmVkIEppbiBYaWFveXUgZmlsbHMgYSB3b29kZW4gYm94IHdpdGggdGhlIGVsZWN0cmljYWwgY2xhbXBzIHNoZSBtYWtlcyB0byBlYXJuIDEwIHl1YW4gYSBkYXkuIEhlciBsZWZ0IGV5ZSBpcyB0aGUgbWlsa3ktd2hpdGUgY29sb3Igb2YgYSBjYXRhcmFjdCBhbmQgc2hlIHNheXMgc2hlIGhhcyBkaWZmaWN1bHR5IHNlZWluZy4gU2hlIGxlbnQgWmhvbmcgNTAsMDAwIHl1YW4gYW5kIGNoYXJnZWQgMSwwMDAgeXVhbiBhIG1vbnRoIGluIGludGVyZXN0LCBzaGUgc2FpZC4g4oCcSSB3b3JyeSB0aGF0IEkgY2Fubm90IGdldCB0aGUgbW9uZXkgYmFjayzigJ0gSmluIHNheXMuIOKAnEkgaG9wZSB0aGUgZ292ZXJubWVudCB3aWxsIGhlbHAgaGltIG91dC7igJ0gU29tZSB1c2VkIHRoZWlyIGhvdXNpbmcgYXMgY29sbGF0ZXJhbC4gQW1vbmcgdGhlbSB3YXMgV3UgU3VpaHVhLCB3aG8gYm9ycm93ZWQgYWdhaW5zdCBoZXIgZml2ZS1zdG9yeSBob21lLCBzaGUgc2F5cy4gVGFraW5nIEhvbWUgTG9hbnMg4oCcV2UgZG9u4oCZdCBoYXZlIG11Y2ggaW5jb21lLOKAnSBzYWlkIFd1LiBIZXIgaG9tZSBpcyBvbmUgYnVpbGRpbmcgYXdheSBmcm9tIGEgQmx1ZSBTa3kgcGhhcm1hY3kgd2hpY2ggb3BlbmVkIGEgZmV3IG1vbnRocyBhZ28sIHNlbGxpbmcgZ2luc2VuZyBhbmQgb3RoZXIgdHJhZGl0aW9uYWwgQ2hpbmVzZSBoZXJiYWwgcmVtZWRpZXMgYXMgd2VsbCBhcyBXZXN0ZXJuIG1lZGljaW5lcy4gVGhlIGNvbGxhdGVyYWxpemF0aW9uIG9mIGhvbWVzIG1lYW5zIFpob25n4oCZcyBwcm9ibGVtcyBtYXkgc3RyZXRjaCBiYWNrIHRvIHRoZSBiYW5rcy4gT25lLXRoaXJkIHRvIGEgaGFsZiBvZiBtb25leSB1c2VkIGZvciBwcml2YXRlIGxlbmRpbmcgb3JpZ2luYWxseSBjb21lcyBmcm9tIGJhbmtzLCBzYWlkIEx1IFRpbmcsIGFuIGVjb25vbWlzdCB3aXRoIEJhbmsgb2YgQW1lcmljYSBDb3JwLuKAmXMgYnJva2VyYWdlIHVuaXQuIFRpZ2h0ZW5pbmcgY2FzaCBmbG93IGZvciBidXNpbmVzc2VzIGNvbnRpbnVlcyB0byByYWlzZSB0aGUgcmlzayBvZiBiYW5rIGxvYW5zIGdvaW5nIGJhZCwgYWNjb3JkaW5nIHRvIGEgc3RhdGVtZW50IGZyb20gV2VuemhvdeKAmXMgRmluYW5jaWFsIE9mZmljZSBnaXZlbiB0byBCbG9vbWJlcmcgTmV3cyBvbiBPY3QuIDIxLiBUaGUgY3VycmVudCBub24tcGVyZm9ybWluZyBsb2FuIHJhdGUgaW4gV2VuemhvdSBpcyBjb250cm9sbGFibGUgYW5kIGJlbG93IHRoZSBuYXRpb25hbCBhdmVyYWdlLCBpdCBhZGRlZC4gVGhlIGluZm9ybWFsIGxlbmRpbmcgbmV0d29yayB3b3JrZWQgdW50aWwgdGhlIHN1bW1lciBvZiAyMDEwIHdoZW4gc29tZSBvZiBaaG9uZ+KAmXMgdmlsbGFnZXJzIHdlcmUgdW5hYmxlIHRvIGdldCBuZXcgbG9hbnMgZnJvbSB0aGUgYmFua3MgYXMgZ292ZXJubWVudCB0aWdodGVuaW5nIGtpY2tlZCBpbiwgaGUgc2FpZC4gUmlzaW5nIENvc3RzIFdlbnpob3XigJlzIGJ1c2luZXNzZXMgd2VyZSBhbHJlYWR5IGZhY2luZyB0b3VnaGVyIHRpbWVzIGJlY2F1c2Ugb2YgZGVjbGluaW5nIGV4cG9ydHMgdG8gRXVyb3BlIGFuZCB0aGUgVS5TLiBhbmQgcmlzaW5nIGxhYm9yIGNvc3RzLCBDaGVuIFl1eXUsIGFzc29jaWF0ZSBwcm9mZXNzb3IgYXQgdGhlIEd1YW5naHVhIFNjaG9vbCBvZiBNYW5hZ2VtZW50IGF0IFBla2luZyBVbml2ZXJzaXR5LCBzYWlkLiBNaW5pbXVtIHdhZ2VzIGluIFpoZWppYW5nIHByb3ZpbmNlLCB3aGVyZSBXZW56aG91IGlzIGxvY2F0ZWQsIGhhdmUgcmlzZW4gMTkgcGVyY2VudCBpbiAyMDExIGZyb20gbGFzdCB5ZWFyLCBhY2NvcmRpbmcgdG8gTG9uZG9uLWJhc2VkIFN0YW5kYXJkIENoYXJ0ZXJlZCBQbGMuIFpob25nIG5lZWRlZCBjYXNoIHRvIGtlZXAgcGF5aW5nIGhpcyBzdXBwbGllcnMsIHJlbnQgYW5kIGVtcGxveWVlcy4gU2Nhbm5pbmcgdGhlIGxvY2FsIHBhcGVyIG9uZSBkYXksIGhlIHNhdyBhbiBhZCBmb3IgbG9hbnMgd2l0aG91dCBjb2xsYXRlcmFsLiBIZSBkaWFsZWQgdGhlIG51bWJlciBhbmQgYXJyYW5nZWQgdG8gYm9ycm93IDYwMCwwMDAgeXVhbiBmb3Igb25lIG1vbnRoLCBmcm9tIHdoYXQgWmhvbmcgY2FsbGVkIGEg4oCcZ2FvbGlkYWks4oCdIGEgQ2hpbmVzZSB0ZXJtIGZvciBhIGxvYW4gc2hhcmsuIEhlIGJvcnJvd2VkIGFnYWluIGFuZCBzdGFydGVkIHRvIGp1c3QgcGF5IGludGVyZXN0IGFuZCByb2xsIG92ZXIgdGhlIHByaW5jaXBhbCwgaGUgc2FpZC4gUmF0ZXMgcm9zZSB0byA3IHBlcmNlbnQgYSBtb250aC4gQmxhY2sgbWFya2V0IHJhdGVzIGhhdmUgZG91YmxlZCB0aGlzIHllYXIsIGZhciBleGNlZWRpbmcgdGhlIHJldHVybiBvZiBjb21wYW5pZXMgaW4gV2VuemhvdSB0aGF0IHR5cGljYWxseSBoYXZlIHdhZmVyLSB0aGluIHByb2ZpdCBtYXJnaW5zLCBhY2NvcmRpbmcgdG8gUmVuIFhpYW5mYW5nLCBhIEJlaWppbmctYmFzZWQgZWNvbm9taXN0IHdpdGggSUhTIEdsb2JhbCBJbnNpZ2h0IEx0ZC4gSGlnaCBJbnRlcmVzdCBSYXRlcyBDdXJiIGxlbmRlcnMgZGVtYW5kIGFubnVhbCBpbnRlcmVzdCBvZiBiZXR3ZWVuIDIwIHBlcmNlbnQgYW5kIDQwIHBlcmNlbnQgb3IgaGlnaGVyLCBtYW55IHRpbWVzIHRoZSBvZmZpY2lhbCBsZW5kaW5nIHJhdGUgb2YgNi41NiBwZXJjZW50IGEgeWVhciwgVUJT4oCZcyBXYW5nIHNhaWQuIFRoZSByYXRlIHJvc2UgYXMgQ2hpbmHigJlzIG5ldyBiYW5rIGxvYW5zIGRlY3JlYXNlZCwgZG93biB0byBhIDIxLW1vbnRoIGxvdyBvZiA0NzAgYmlsbGlvbiB5dWFuIGluIFNlcHRlbWJlci4gWmhvbmcgdGhvdWdodCBoaXMgcHJvYmxlbXMgd291bGQgYmUgc29sdmVkIGluIEF1Z3VzdCBhZnRlciB0d28gZnJpZW5kcyBhZ3JlZWQgdG8gYWN0IGFzIGd1YXJhbnRlZXMgYW5kIGhlIGZpbmFsbHkgc2VjdXJlZCBhIGxvYW4gZnJvbSB0aGUgbG9jYWwgYnJhbmNoIG9mIEZ1emhvdS1iYXNlZCBJbmR1c3RyaWFsIEJhbmsgQ28uIEl0IHdhcyBmb3IgMTUgbWlsbGlvbiB5dWFuIGF0IDEgcGVyY2VudCBhIG1vbnRoLCBkaXZpZGVkIGludG8gdHdvIHRyYW5jaGVzLiBPbmUgb2YgdGhlIGd1YXJhbnRvcnMgcHV0IHVwIGhpcyBkb3dudG93biBhcGFydG1lbnQgYXMgY29sbGF0ZXJhbCBpbiBleGNoYW5nZSBmb3IgNjAsMDAwIHl1YW4gYSBtb250aCBmcm9tIFpob25nLCBoZSBzYWlkLiBUaGVyZSB3YXMgYSBzbmFnLiBCeSBub3csIFpob25nIHNhaWQgaGUgb3dlZCB0aGUg4oCcZ2FvbGlkYWnigJ0gNCBtaWxsaW9uIHl1YW4uIFRoZSBmaXJzdCB0cmFuY2hlIG9mIHRoZSBiYW5rIGxvYW4gbW9zdGx5IHdlbnQgdG8gcGF5aW5nIHRoYXQgZGVidC4gVGhlIGxlbmRlciBzYWlkIE9jdC4gMjAgaGUgd2FzIG5vIGxvbmdlciBpbiB0aGUgYnVzaW5lc3Mgd2hlbiByZWFjaGVkIGJ5IHBob25lLCBkZWNsaW5pbmcgdG8gY29tbWVudCBhbnkgZnVydGhlci4gVGhlIEluZHVzdHJpYWwgQmFua+KAmXMgV2VuemhvdSBicmFuY2ggd291bGRu4oCZdCBjb21tZW50IG9uIFpob25n4oCZcyBjYXNlLiBXYXJlaG91c2UgTW9iYmVkIFdoZW4gd29yZCBvZiBaaG9uZ+KAmXMgc2hvcnRmYWxsIHNwcmVhZCwgYW5ncnkgY3JlZGl0b3JzIGNvbnZlcmdlZCBvbiBoaXMgd2FyZWhvdXNlIGRlbWFuZGluZyB0aGVpciBtb25leSBiYWNrLCBaaG9uZyBhbmQgdmlsbGFnZXJzIHNhaWQuIFpob25nIHNheXMgaGUgc3RydWdnbGVkIHRvIGNhbG0gdGhlbSBkb3duIGFzIHRoZXkgc3RhcnRlZCB0b3NzaW5nIGN1cHMgb24gdGhlIGZsb29yIGFuZCBncmFiYmluZyBib3hlcyBvZiBtZWRpY2luZXMuIEluIFNlcHRlbWJlciwgdGhlIGFsYXJtIHNwcmVhZCBhY3Jvc3MgV2VuemhvdSBhZnRlciBuZXdzcGFwZXJzIHJlcG9ydGVkIGJ1c2luZXNzbWVuIGhhZCBmbGVkIG9yIGtpbGxlZCB0aGVtc2VsdmVzIGJlY2F1c2UgdGhleSBjb3VsZG7igJl0IHBheSBkZWJ0cy4g4oCcRXZlcnlvbmUgd2FzIG5lcnZvdXMgYW5kIGluc2VjdXJlLOKAnSBzYWlkIHRoZSBtdXN0YWNoaW9lZCBaaG9uZywgc29ja2xlc3MgaW4gbGVhdGhlciBzaG9lcywgc3RhbmRpbmcgbmVhciBhIGRhcmtlbmVkIGNvbmZlcmVuY2Ugcm9vbSB3aXRoIGEgYnVzdCBvZiBDaGFpcm1hbiBNYW8uIOKAnFBhbmljIHdhcyBldmVyeXdoZXJlLiBCbHVlIFNreSBpcyBmYW1vdXMgbm93IC0tIGZvciBvd2luZyBkZWJ0LiBObyBvbmUgaXMgZ29pbmcgdG8gbGVuZCBtZSBtb25leS7igJ0gTG9ic3RlciBEaW5uZXIgWmhvbmfigJlzIHByb2JsZW1zIGFyZSBzaGFyZWQgYnkgbWFueSBvdGhlciBidXNpbmVzcyBvd25lcnMuIEEgZmV3IHdlZWtzIGFnbywgYSBncm91cCBvZiBhYm91dCAyMCBnYXRoZXJlZCBpbiBvbmUgb2YgdGhlIG1hcmJsZWQgcHJpdmF0ZSByb29tcyB0byBmZWFzdCBvbiBsb2JzdGVyIGFuZCBzdGVhayBhdCBIYWkgWWFuIExvdSwgYSBDYW50b25lc2UgcmVzdGF1cmFudCBhY3Jvc3MgdGhlIHN0cmVldCBmcm9tIHRoZSBsb2NhbCBvZmZpY2VzIG9mIENoaW5h4oCZcyBiYW5raW5nIHJlZ3VsYXRvci4gVGhlIG1vb2Qgd2FzIGdyaW0uIFRoZXkgdGFsa2VkIGFib3V0IHRoZSByZWNlbnQgc3VpY2lkZSBvZiBzaG9lIGZhY3Rvcnkgb3duZXIgU2hlbiBiZWNhdXNlIGhlIGNvdWxkbuKAmXQgcmVwYXkgZGVidHMsIGFuZCB0aGUgZGlzYXBwZWFyYW5jZSBvZiBhbm90aGVyIGJvc3Mgd2hvIG93ZWQgdGhlbSBtb25leSwgYWNjb3JkaW5nIHRvIFlhbmcgWGksIHRoZSBvd25lciBvZiBhIGNvbXBhbnkgdGhhdCBtYWtlcyBkeWVzIGZvciBzaG9lcyBhbmQgdGV4dGlsZXMsIHdobyB3YXMgdGhlcmUuIEVhY2ggbWFuIHByZXNlbnQgZG93bmVkIGEgYm90dGxlIG9mIE1vdXRhaSwgYW4gZXhwZW5zaXZlIGJyYW5kIG9mIENoaW5lc2UgbGlxdW9yIG1hZGUgZnJvbSBzb3JnaHVtLCBiZWNhdXNlIHRoZXkgZmVhcmVkIHRoZXkgbWF5IG5ldmVyIGJlIGFibGUgdG8gYWZmb3JkIHRoZSBsdXh1cnkgYWdhaW4sIHNoZSBzYWlkLiBCeSBPY3RvYmVyLCB0aGUgZGV0ZXJpb3JhdGluZyBzaXR1YXRpb24gaW4gV2VuemhvdSBwcm9tcHRlZCB0aGUgdmlzaXQgYnkgdGhlIHByZW1pZXIsIHdoaWNoIHRyaWdnZXJlZCBhIHJhZnQgb2YgaW5pdGlhdGl2ZXMgdG8gaGVscCBwcml2YXRlIGJ1c2luZXNzZXMuIOKAnEFmdGVyIFByZW1pZXIgV2Vu4oCZcyB2aXNpdCwgSSBzZW50IHRleHQgbWVzc2FnZXMgdG8gZnJpZW5kcyBhbGwgb3ZlciB0aGUgd29ybGQgdGhhdCBXZW56aG91IHdpbGwgYmUgcmVzY3VlZCzigJ0gWWFuZyBzYWlkLiBFbWVyZ2VuY3kgRnVuZCBDaGluYeKAmXMgYmFua2luZyByZWd1bGF0b3Igc2FpZCBsYXRlciBpdCB3b3VsZCBsZXQgYmFua3Mgc2VsbCBib25kcyB0byByYWlzZSBtb25leSBmb3IgbG9hbnMgdG8gc21hbGwgZW50ZXJwcmlzZXMgYW5kIHRvbGVyYXRlIGhpZ2hlciByYXRlcyBvZiBub24tcGVyZm9ybWluZyBsb2FucyBhbW9uZyBvdGhlciBtZWFzdXJlcyB0byBlbmNvdXJhZ2UgYmFuayBsZW5kaW5nLiBJbiBXZW56aG91LCB0aGUgbG9jYWwgZ292ZXJubWVudCBzZXQgdXAgYW4gZW1lcmdlbmN5IDEgYmlsbGlvbiB5dWFuIGZ1bmQuIEl0cyBhbnRpLWxvYW4gc2hhcmsgY2FtcGFpZ24gbGVkIHRvIHRoZSBPY3QuIDI3IGFycmVzdCBvZiBhIGNvdXBsZSBzdXNwZWN0ZWQgb2YgaWxsZWdhbGx5IHJhaXNpbmcgMS4zIGJpbGxpb24geXVhbiwgYWNjb3JkaW5nIHRvIHRoZSBDaGluYSBEYWlseS4gQSBmZXcgYnVzaW5lc3NtZW4gd2hvIGhhZCBmbGVkIFdlbnpob3UgaGF2ZSByZXR1cm5lZCBzaW5jZSBXZW7igJlzIHZpc2l0LCBhY2NvcmRpbmcgdG8gWmhvdSBvZiB0aGUgc21hbGwgYnVzaW5lc3MgYXNzb2NpYXRpb24uIE90aGVycyBoYXZlIGJlZW4gdHJhY2tlZCBkb3duIGFuZCBhcnJlc3RlZCwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBYaW5odWEgTmV3cyBBZ2VuY3kuIEFuYWx5c3RzIGFyZSB0cnlpbmcgdG8gYXNjZXJ0YWluIGhvdyBlZmZlY3RpdmUgdGhlIG1lYXN1cmVzIGFyZSBhbmQgaG93IHdpZGVzcHJlYWQgdGhlIGZhbGxvdXQgZnJvbSBXZW56aG91IHdpbGwgYmUgYWNyb3NzIENoaW5hLiBUaGUgY2l0eSBpcyBub3cgdGhlIGNvdW50cnnigJlzIGJpZ2dlc3Qgc291cmNlIG9mIHByaXZhdGUgY2FwaXRhbCwgbWFyc2hhbGluZyBhYm91dCA4MDAgYmlsbGlvbiB5dWFuLCBlcXVpdmFsZW50IHRvIDIgcGVyY2VudCBvZiBDaGluYeKAmXMgdG90YWwgZWNvbm9taWMgb3V0cHV0LCBhY2NvcmRpbmcgdG8gUmVuIG9mIElIUyBHbG9iYWwuIE1vbmV5IGZyb20gV2VuemhvdSBpcyBpbnZlc3RlZCBpbiBldmVyeXRoaW5nIGZyb20gcmVhbCBlc3RhdGUgaW4gRHViYWkgdG8gY29hbCBtaW5lcyBpbiBTaGFueGkgcHJvdmluY2UsIGluIENoaW5h4oCZcyBub3J0aHdlc3QuIEFmdGVyIGEgcmVzZWFyY2ggdHJpcCB0byBXZW56aG91LCBCYW5rIG9mIEFtZXJpY2HigJlzIEx1IHNhaWQgaW4gYW4gT2N0LiAyNSByZXBvcnQgdGhhdCB0aGUgY2hhbmNlcyBvZiBhIG5hdGlvbndpZGUgbGlxdWlkaXR5IHNxdWVlemUgd2VyZSBsb3cuIEJyb2FkZXIgUHJvYmxlbXMgT3RoZXJzIHNlZSBXZW56aG91IGFzIHN5bXB0b21hdGljIG9mIGJyb2FkZXIgcHJvYmxlbXMsIHN1Y2ggYXMgYW4gb3Zlci1yZWxpYW5jZSBvbiBpbnZlc3RtZW50IHRvIGdyb3cgdGhlIGVjb25vbXkgdGhhdCBzdGVlcnMgbW9uZXkgdG93YXJkIHN0YXRlLW93bmVkIGNvbXBhbmllcywgc2FpZCBNaWNoYWVsIFBldHRpcywgdGhlIEJlaWppbmctYmFzZWQgY2hpZWYgc3RyYXRlZ2lzdCBhdCBHdW9zZW4gU2VjdXJpdGllcyBDby4g4oCcWW91IGNhbiBzb2x2ZSBXZW56aG91LCBidXQgeW914oCZcmUgc2ltcGx5IHRyYW5zZmVycmluZyB0aGUgcHJvYmxlbSBzb21lcGxhY2UgZWxzZSzigJ0gaGUgc2FpZC4gWmhvbmcsIHRoZSBwaGFybWFjaXN0LCBzYXlzIGhl4oCZcyBmaWxlZCBhIHJlcG9ydCB0byB0aGUgbG9jYWwgZ292ZXJubWVudCBob3BpbmcgdG8gYmVuZWZpdCBmcm9tIHRoZSBiYWlsb3V0IHBsYW4uIEhlIHNwZW5kcyBoaXMgZGF5cyBhbmQgbmlnaHRzIGluIHRoZSB3YXJlaG91c2Ugb2YgaGlzIGNydW1ibGluZyBkcmVhbS4gSGXigJlzIHNvbGQgb2ZmIGhpcyBCTVcgYW5kIGxpdmVzIGluIGEgY29tcGFueSBkb3JtaXRvcnkuIEhpcyB3aWZlIHNsZWVwcyBpbiBvbmUgb2YgdGhlaXIgc3RvcmVzIGFuZCB0aGV54oCZdmUgc2VudCB0aGVpciBkYXVnaHRlciB0byBsaXZlIGF0IHNjaG9vbC4gWmhvbmcgcmVjb3VudGVkIGhpcyBuaWdodCBhdCB0aGUgY29mZmVlIHNob3AuIEFsZXJ0ZWQgdG8gdGhlIGluY2lkZW50IGJ5IFpob25n4oCZcyB3aWZlLCBhIG1vcmUgc3ltcGF0aGV0aWMgY3JlZGl0b3IgY2FtZSBieSBkZW1hbmRpbmcgaGlzIHJlbGVhc2UsIHNheWluZyB0aGUgcGhhcm1hY2lzdCBvd2VkIGhpbSBldmVuIG1vcmUgbW9uZXkuIFRoZSBydXNlIHdvcmtlZCwgWmhvbmcgc2FpZC4gSGlzIG9mZmVyIGZvciBhIGZpbmdlciB3YXMgZGVjbGluZWQuIEhlIHNheXMgaGXigJlsbCBwcm9iYWJseSBzdGlsbCBsb3NlIGhpcyBidXNpbmVzcy4gSGXigJlzIG5lZ290aWF0aW5nIHRvIHRyYW5zZmVyIGl0IHRvIGhpcyAxMzAgY3JlZGl0b3JzLiBUaGV5IHdvdWxkIGtlZXAgaGltIG9uIGFzIGEgcGFpZCBtYW5hZ2VyLiDigJxNeSB3aWZlIGFuZCBJIHdpbGwgcHJvYmFibHkgaGF2ZSBub3RoaW5nIGxlZnQs4oCdIGhlIHNhaWQu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATN8nKMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGJhYzM0NzI1NmU0ZDE0ZTM=</field><field name="symbol" class="java.lang.String">rO0ABXQABExPQU4=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATOBwv8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/yj1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/yj1wo9cKP</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/wAAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/wKPXCj1wp</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/tcKPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAH0A==</field><field name="id" class="java.lang.String">rO0ABXQAEDhlMzNhZjQ5YjBjMTQ4OTc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mF7zAAAA==</field></document></documents><date>2015-05-07T06:39:06-0500</date></cacheEntry>
<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hUaGUgc3ByYXdsaW5nIEJhaWppIHJlZmluZXJ5IDIwMCBrbSAxMzAgbWlsZXMgbm9ydGggb2YgdGhlIGNhcGl0YWwgbmVhciBUaWtyaXQgd2FzIGEgYmF0dGxlZmllbGQgYXMgdHJvb3BzIGxveWFsIHRvIHRoZSBTaGlpdGVsZWQgZ292ZXJubWVudCBoZWxkIG9mZiBpbnN1cmdlbnRzIGZyb20gdGhlIElzbGFtaWMgU3RhdGUgb2YgSXJhcSBhbmQgdGhlIExldmFudCBhbmQgaXRzIGFsbGllcyB3aG8gaGFkIHN0b3JtZWQgdGhlIHBlcmltZXRlciBhIGRheSBlYXJsaWVyIHRocmVhdGVuaW5nIG5hdGlvbmFsIGVuZXJneSBzdXBwbGllcyBBIGdvdmVybm1lbnQgc3Bva2VzbWFuIHNhaWQgYXJvdW5kIG5vb24gMDkwMCBHTVQgdGhhdCBpdHMgZm9yY2VzIHdlcmUgaW4gY29tcGxldGUgY29udHJvbCBidXQgYSB3aXRuZXNzIGluIEJhaWppIHNhaWQgZmlnaHRpbmcgd2FzIGNvbnRpbnVpbmcgYW5kIElTSUwgbWlsaXRhbnRzIHdlcmUgc3RpbGwgcHJlc2VudCBBIGRheSBhZnRlciB0aGUgZ292ZXJubWVudCBwdWJsaWNseSBhcHBlYWxlZCBmb3IgVVMgYWlyIHBvd2VyIHRoZXJlIHdlcmUgaW5kaWNhdGlvbnMgV2FzaGluZ3RvbiBpcyBzY2VwdGljYWwgb2Ygd2hldGhlciB0aGF0IHdvdWxkIGJlIGVmZmVjdGl2ZSBnaXZlbiB0aGUgcmlzayBvZiBjaXZpbGlhbiBkZWF0aHMgdGhhdCBjb3VsZCBmdXJ0aGVyIGVucmFnZSBJcmFxcyBvbmNlIGRvbWluYW50IFN1bm5pIG1pbm9yaXR5IFJlZ2lvbmFsIFVTIGFsbGllcyBzZWVtZWQga2VlbiB0byBkaXNjb3VyYWdlIGFpciBzdHJpa2VzIFR1cmtpc2ggUHJpbWUgTWluaXN0ZXIgVGF5eWlwIEVyZG9nYW4gYSBOQVRPIGFsbHkgc2FpZCB0aGUgVW5pdGVkIFN0YXRlcyBkb2VzIG5vdCB2aWV3IHN1Y2ggYXR0YWNrcyBwb3NpdGl2ZWx5IGdpdmVuIHRoZSByaXNrIHRvIGNpdmlsaWFucyAgYSB2aWV3IHNvbWUgVVMgb2ZmaWNpYWxzIGhhdmUgYWxzbyBleHByZXNzZWQgQSBTYXVkaSBzb3VyY2Ugc2FpZCB0aGF0IFdlc3Rlcm4gcG93ZXJzIGFncmVlZCB3aXRoIFJpeWFkaCB0aGUgbWFpbiBTdW5uaSBwb3dlciBpbiB0aGUgcmVnaW9uIHRoYXQgd2hhdCB3YXMgbmVlZGVkIHdhcyBwb2xpdGljYWwgY2hhbmdlIG5vdCBvdXRzaWRlIGludGVydmVudGlvbiB0byBoZWFsIHNlY3RhcmlhbiBkaXZpc2lvbiB0aGF0IGhhcyB3aWRlbmVkIHVuZGVyIE1hbGlraSBWaWRlbyBhaXJlZCBieSBBbEFyYWJpeWEgdGVsZXZpc2lvbiBzaG93ZWQgc21va2UgYmlsbG93aW5nIGZyb20gdGhlIHBsYW50IGFuZCB0aGUgYmxhY2sgZmxhZyB1c2VkIGJ5IElTSUwgZmx5aW5nIGZyb20gYSBidWlsZGluZyBXb3JrZXJzIHdobyBoYWQgYmVlbiBpbnNpZGUgdGhlIGNvbXBsZXggd2hpY2ggc3ByZWFkcyBmb3IgbWlsZXMgY2xvc2UgdG8gdGhlIFRpZ3JpcyByaXZlciBzYWlkIFN1bm5pIG1pbGl0YW50cyBzZWVtZWQgdG8gaG9sZCBtb3N0IG9mIHRoZSBjb21wb3VuZCBpbiBlYXJseSBtb3JuaW5nIGFuZCB0aGF0IHNlY3VyaXR5IGZvcmNlcyB3ZXJlIGNvbmNlbnRyYXRlZCBhcm91bmQgdGhlIHJlZmluZXJ5cyBjb250cm9sIHJvb20gVGhlIDI1MDMwMCByZW1haW5pbmcgc3RhZmYgd2VyZSBldmFjdWF0ZWQgZWFybHkgb24gVGh1cnNkYXkgb25lIG9mIHRob3NlIHdvcmtlcnMgc2FpZCBieSB0ZWxlcGhvbmUgTWlsaXRhcnkgaGVsaWNvcHRlcnMgaGFkIGF0dGFja2VkIG1pbGl0YW50IHBvc2l0aW9ucyBvdmVybmlnaHQgaGUgYWRkZWQgVm90ZSBOb3cgIFNob3VsZCB0aGUgVVMgU3RyaWtlIElyYXEgSW5zdXJnZW50cyBWb3RlIE5vdyAgQ0FQVFVSRUQgVEVSUklUT1JZIEJhaWppIDQwIGttIDI1IG1pbGVzIG5vcnRoIG9mIFNhZGRhbSBIdXNzZWlucyBob21lIGNpdHkgb2YgVGlrcml0IGxpZXMgc3F1YXJlbHkgaW4gdGVycml0b3J5IGNhcHR1cmVkIGluIHRoZSBwYXN0IHdlZWsgYnkgYW4gYXJyYXkgb2YgYXJtZWQgU3VubmkgZ3JvdXBzIHNwZWFyaGVhZGVkIGJ5IElTSUwgd2hpY2ggaXMgc2Vla2luZyBhIG5ldyBJc2xhbWljIGNhbGlwaGF0ZSBpbiBJcmFxIGFuZCBTeXJpYSBPbiBUdWVzZGF5IHN0YWZmIHNodXQgZG93biB0aGUgcGxhbnQgd2hpY2ggbWFrZXMgbXVjaCBvZiB0aGUgZnVlbCBJcmFxaXMgaW4gdGhlIG5vcnRoIG5lZWQgZm9yIGJvdGggdHJhbnNwb3J0IGFuZCBnZW5lcmF0aW5nIGVsZWN0cmljaXR5IElTSUwgd2hpY2ggY29uc2lkZXJzIElyYXFzIFNoaWl0ZSBNdXNsaW0gbWFqb3JpdHkgYXMgaGVyZXRpY3MgaW4gbGVhZ3VlIHdpdGggbmVpZ2hib3VyaW5nIFNoaWl0ZSBJcmFuIGhhcyBsZWQgYSBTdW5uaSBjaGFyZ2UgYWNyb3NzIG5vcnRoZXJuIElyYXEgYWZ0ZXIgY2FwdHVyaW5nIHRoZSBtYWpvciBjaXR5IG9mIE1vc3VsIGxhc3Qgd2VlayBhcyBNYWxpa2lzIFVTYXJtZWQgZm9yY2VzIGNvbGxhcHNlZCBUaGUgZ3JvdXBzIGFkdmFuY2UgaGFzIG9ubHkgYmVlbiBzbG93ZWQgYnkgYSByZWdyb3VwZWQgbWlsaXRhcnkgU2hpaXRlIG1pbGl0aWFzIGFuZCBvdGhlciB2b2x1bnRlZXJzIEJ1dCBvbiBUdWVzZGF5IFN1bm5pIGZpZ2h0ZXJzIHRvb2sgdGhlIHNtYWxsIHRvd24gb2YgTXV0YXNpbSBzb3V0aCBvZiBTYW1hcnJhIGdpdmluZyB0aGVtIHRoZSBwcm9zcGVjdCBvZiBlbmNpcmNsaW5nIHRoZSBjaXR5IHdoaWNoIGhvdXNlcyBhIG1ham9yIFNoaWl0ZSBzaHJpbmUgQSBsb2NhbCBwb2xpY2Ugc291cmNlIHNhaWQgc2VjdXJpdHkgZm9yY2VzIHdpdGhkcmV3IHdpdGhvdXQgYSBmaWdodCB3aGVuIGRvemVucyBvZiB2ZWhpY2xlcyBjYXJyeWluZyBpbnN1cmdlbnRzIGNvbnZlcmdlZCBvbiBNdXRhc2ltIGZyb20gdGhyZWUgZGlyZWN0aW9ucyBJU0lMIHdob3NlIGxlYWRlciBicm9rZSB3aXRoIGFsIFFhZWRhIGFmdGVyIGFjY3VzaW5nIHRoZSBnbG9iYWwgamloYWRpc3QgbW92ZW1lbnQgb2YgYmVpbmcgdG9vIGNhdXRpb3VzIGhhcyBub3cgc2VjdXJlZCBjaXRpZXMgYW5kIHRlcnJpdG9yeSBpbiBJcmFxIGFuZCBTeXJpYSBpbiBlZmZlY3QgcHV0dGluZyBpdCB3ZWxsIG9uIHRoZSBwYXRoIHRvIGVzdGFibGlzaGluZyBpdHMgb3duIHdlbGxhcm1lZCBlbmNsYXZlIHRoYXQgV2VzdGVybiBjb3VudHJpZXMgZmVhciBjb3VsZCBiZWNvbWUgYSBjZW50cmUgZm9yIHRlcnJvcmlzbSBUaGUgSXJhcWkgZ292ZXJubWVudCBtYWRlIHB1YmxpYyBvbiBXZWRuZXNkYXkgaXRzIHJlcXVlc3QgZm9yIFVTIGFpciBzdHJpa2VzIHR3byBhbmQgaGFsZiB5ZWFycyBhZnRlciBVUyBmb3JjZXMgZW5kZWQgdGhlIG5pbmV5ZWFyIG9jY3VwYXRpb24gdGhhdCBiZWdhbiBieSB0b3BwbGluZyBTYWRkYW0gaW4gMjAwMyAKVVMgUkVTUE9OU0UgV2FzaGluZ3RvbiBoYXMgZ2l2ZW4gbm8gaW5kaWNhdGlvbiBpdCB3aWxsIGFncmVlIHRvIGF0dGFjayBhbmQgc29tZSBwb2xpdGljaWFucyBoYXZlIHVyZ2VkIFByZXNpZGVudCBCYXJhY2sgT2JhbWEgdG8gaW5zaXN0IHRoYXQgTWFsaWtpIGdvZXMgYXMgYSBjb25kaXRpb24gZm9yIGZ1cnRoZXIgVVMgaGVscCBHZW5lcmFsIE1hcnRpbiBEZW1wc2V5IHRoZSBjaGFpcm1hbiBvZiB0aGUgSm9pbnQgQ2hpZWZzIG9mIFN0YWZmIGF2b2lkZWQgYSBkaXJlY3QgYW5zd2VyIHdoZW4gYXNrZWQgYnkgc2VuYXRvcnMgd2hldGhlciBXYXNoaW5ndG9uIHdvdWxkIGFjY2VkZSB0byB0aGUgSXJhcSByZXF1ZXN0IFVTIG9mZmljaWFscyBzcGVha2luZyBvbiBjb25kaXRpb24gb2YgYW5vbnltaXR5IHNhaWQgdGhlIElyYXFpIHJlcXVlc3QgaGFkIGluY2x1ZGVkIGRyb25lIHN0cmlrZXMgYW5kIGluY3JlYXNlZCBzdXJ2ZWlsbGFuY2UgYnkgVVMgZHJvbmVzIHdoaWNoIGhhdmUgYmVlbiBmbHlpbmcgb3ZlciBJcmFxICBIb3dldmVyIHRoZXkgc2FpZCB0YXJnZXRzIGZvciBhaXIgc3RyaWtlcyBjb3VsZCBiZSBoYXJkIHRvIGRpc3Rpbmd1aXNoIGZyb20gY2l2aWxpYW5zIGFtb25nIHdob20gSVNJTHMgbWVuIHdlcmUgb3BlcmF0aW5nIFR1cmtpc2ggcHJlbWllciBFcmRvZ2FuIHNhaWQgQW1lcmljYSB3aXRoIGl0cyBjdXJyZW50IHN0YW5jZSBhbmQgdGhlIHN0YXRlbWVudHMgaXQgaGFzIG1hZGUgZG9lcyBub3QgdmlldyBzdWNoIGF0dGFja3MgcG9zaXRpdmVseSAgU3VjaCBhbiBvcGVyYXRpb24gY291bGQgcmVzdWx0IGluIGEgc2VyaW91cyBudW1iZXIgb2YgZGVhdGhzIGFtb25nIGNpdmlsaWFucyBUaGUgU2F1ZGkgc291cmNlIHRvbGQgUmV1dGVycyBObyBvdXRzaWRlIGludGVyZmVyZW5jZSB3aWxsIGJlIG9mIGFueSBiZW5lZml0IGFkZGluZyB0aGF0IFdhc2hpbmd0b24gRnJhbmNlIGFuZCBCcml0YWluIGFsbCBhZ3JlZWQgd2l0aCBSaXlhZGggdGhhdCBkaWFsb2d1ZSBhbmQgYSBwb2xpdGljYWwgc29sdXRpb24gaXMgdGhlIHdheSBmb3J3YXJkIGluIElyYXEgVGhlcmUgaXMgcG9saXRpY2FsIHByZXNzdXJlIGluIFdhc2hpbmd0b24gZm9yIE1hbGlraSB0byBxdWl0IGFsdGhvdWdoIE9iYW1hIGhhcyBub3QgbWFkZSBzdWNoIGEgZGVtYW5kIHB1YmxpYyBTZXZlcmFsIGxlYWRpbmcgZmlndXJlcyBpbiBDb25ncmVzcyBoYXZlIHNwb2tlbiBvdXQgYWdhaW5zdCB0aGUgcHJlbWllciB3aG9tIE9iYW1hIGhhcyB1cmdlZCB0byBkbyBtb3JlIHRvIG92ZXJjb21lIHNlY3RhcmlhbiByaWZ0cyBUaGUgTWFsaWtpIGdvdmVybm1lbnQgY2FuZGlkbHkgaGFzIGdvdCB0byBnbyBpZiB5b3Ugd2FudCBhbnkgcmVjb25jaWxpYXRpb24gc2FpZCBEaWFubmUgRmVpbnN0ZWluIG9uZSBvZiBPYmFtYXMgZmVsbG93IERlbW9jcmF0cyB3aG8gY2hhaXJzIHRoZSBTZW5hdGUgSW50ZWxsaWdlbmNlIENvbW1pdHRlZSBSZXB1YmxpY2FuIHNlbmF0b3IgSm9obiBNY0NhaW4gdXJnZWQgT2JhbWEgdG8gbWFrZSBpdCBtYWtlIHZlcnkgY2xlYXIgdG8gTWFsaWtpIHRoYXQgaGlzIHRpbWUgaXMgdXAgCk9JTCBJTkRVU1RSWSBJZiB0aGUgQmFpamkgcmVmaW5lcnkgZmFsbHMgSVNJTCBhbmQgaXRzIGFsbGllcyB3aWxsIGhhdmUgYWNjZXNzIHRvIGEgbGFyZ2Ugc3VwcGx5IG9mIGZ1ZWwgdG8gYWRkIHRvIHRoZSB3ZXQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0wMy0yN1QwMDowMDowMFogVE8gMjAxMy0xMi0wM1Q1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDg3MTM=</field><field name="title" class="java.lang.String">rO0ABXQANUlyYW4gdG8gUmVhc3NlcnQgQXV0aG9yaXR5IGF0IE9QRUMgQWZ0ZXIgTnVjbGVhciBEZWFs</field><field name="content" class="java.lang.String">rO0ABXQW+EJpamFuIFphbmdhbmVoIHJldHVybnMgdGhpcyB3ZWVrIHRvIHRoZSBzYW1lIFZpZW5uYSBob3RlbCBzdWl0ZSBoZSBsYXN0IG9jY3VwaWVkIGVpZ2h0IHllYXJzIGFnbyBhcyBJcmFuaWFuIG9pbCBtaW5pc3RlciwgcmVhZHkgdG8gcHJlcGFyZSBPUEVDIGZvciB3aGF0IFRlaHJhbiBob3BlcyB3aWxsIG1hcmsgaXRzIHJldHVybiBhcyB0aGUgY2FydGVsJ3Mgc2Vjb25kIGJpZ2dlc3QgcHJvZHVjZXIuIEVtYm9sZGVuZWQgYnkgaXRzIG51Y2xlYXIgZGVhbCB3aXRoIHRoZSBXZXN0LCBJcmFuaWFuIG9pbCBuZWdvdGlhdG9ycyBsZWQgYWdhaW4gYnkgaW5kdXN0cnkgdmV0ZXJhbiBaYW5nYW5laCwgd2lsbCBzZWVrIHRvIHJlYXNzZXJ0IFRlaHJhbidzIGF1dGhvcml0eSBpbiB0aGUgT3JnYW5pemF0aW9uIG9mIHRoZSBQZXRyb2xldW0gRXhwb3J0aW5nIENvdW50cmllcyBhdCBhIFdlZG5lc2RheSBtZWV0aW5nLiBXZXN0ZXJuIHNhbmN0aW9ucyBpbXBvc2VkIGluIDIwMTIgb24gSXJhbiBmb3IgaXRzIG51Y2xlYXIgcHJvZ3JhbSBoYXZlIGNvc3QgaXQgZGVhcmx5LCBsb3NpbmcgaXQgYmlsbGlvbnMgb2YgZG9sbGFycyBpbiBvaWwgcmV2ZW51ZXMgYW5kIG1hcmtldCBzaGFyZSBpbiBPUEVDLCBsYXJnZWx5IHRvIGl0cyBtYWluIHJlZ2lvbmFsIHBvbGl0aWNhbCByaXZhbCBTYXVkaSBBcmFiaWEsIGFuZCBuZWlnaGJvciBJcmFxLiBXaXRoIGl0cyBleHBvcnRzIHN0aWxsIHNoYWNrbGVkIGJ5IHNhbmN0aW9ucyBmb3IgYXQgbGVhc3QgYW5vdGhlciBzaXggbW9udGhzLCBJcmFuIHBvc2VzIG5vIGltbWVkaWF0ZSB0aHJlYXQgdG8gdGhlIHN0YXR1cyBxdW8uIE9pbCBtaW5pc3RlcnMgYXJlIHdpZGVseSBleHBlY3RlZCB0byByb2xsIGZvcndhcmQgdW50aWwgSnVuZSBhbiBhZ3JlZW1lbnQgdG8gaG9sZCB0aGVpciBvdXRwdXQgbmVhciAzMCBtaWxsaW9uIGJhcnJlbHMgZGFpbHkgZm9yIDEyIG1lbWJlciBjb3VudHJpZXMuIEJ1dCBvaWwgdHJhZGVycyB3aWxsIGJlIHdhdGNoaW5nIGNsb3NlbHkgZm9yIHNpZ25zIG9mIGNvb3BlcmF0aW9uLCBvciBvdGhlcndpc2UsIGJldHdlZW4gdGhlIGJpZyB0aHJlZSBwcm9kdWNlcnMgaW4gT1BFQywga25vd2luZyB0aGF0IFJpeWFkaCBhbmQgQmFnaGRhZCB3aWxsIG5lZWQgdG8gZmluZCByb29tIGZvciBJcmFuIHNob3VsZCBpdHMgaW50ZXJpbSBudWNsZWFyIGRlYWwgYmUgdmVyaWZpZWQgYW5kIHNhbmN0aW9ucyBsaWZ0ZWQuIFJlYXBwb2ludGVkIHRvIHRoZSBvaWwgbWluaXN0cnkgYnkgSXJhbidzIG5ldyBhbmQgbW9yZSB3ZXN0ZXJuLWZyaWVuZGx5IFByZXNpZGVudCBIYXNzYW4gUm91aGFuaSwgWmFuZ2FuZWggaGFzIG9wZW5seSBjcml0aWNpemVkIElyYXEsIG5vdyBPUEVDJ3Mgc2Vjb25kIGJpZ2dlc3QgcHJvZHVjZXIsIGZvciBpbmNyZWFzaW5nIGl0cyBtYXJrZXQgc2hhcmUgYXQgVGVocmFuJ3MgZXhwZW5zZS4gIklyYXEgaGFzIHJlcGxhY2VkIElyYW4ncyBvaWwgd2l0aCBpdHMgb3duLCIgWmFuZ2FuZWggc2FpZCBpbiBOb3ZlbWJlci4gIlRoaXMgSXJhcSBtb3ZlIGlzIG5vdCBmcmllbmRseSBhdCBhbGwuIiAiV2UgZXhwZWN0IHRoZSBJcmFuaWFucyB0byBzYXksICdXZSdyZSBjb21pbmcgYmFjayB0byB0aGUgbWFya2V0IGFuZCB3ZSBuZWVkIHNvbWUgc3BhY2UsJyIgc2FpZCBhbiBPUEVDIGRlbGVnYXRlIGZyb20gYSByaXZhbCBHdWxmIEFyYWIgcHJvZHVjZXIuIFJpc2luZyB2b2x1bWVzIGZyb20gdGhlIFVuaXRlZCBTdGF0ZXMgc3B1cnJlZCBieSBwcm9kdWN0aW9uIGZyb20gbmV3IHNoYWxlIHRlY2hub2xvZ3kgbWF5IG1lYW4gT1BFQyB3aWxsIG5lZWQgdG8gY3V0IG91dHB1dCBpbiB0aGUgc2Vjb25kIGhhbGYgb2YgMjAxNCBpZiBpdCB3YW50cyB0byBrZWVwIG9pbCBwcmljZXMgYWJvdmUgJDEwMCBhIGJhcnJlbC4gIkZyb20gbm93IHVudGlsIHRoZSBlbmQgb2YgTWFyY2gsIHRoZSBtYXJrZXQgbG9va3Mgd2VsbCBiYWxhbmNlZCBhbmQgdGhlIHByaWNlIHNob3VsZCBzdGF5IHN1cHBvcnRlZC4gQnV0IGZyb20gSnVuZSwgdGhlcmUgd2lsbCBiZSBhIG5lZWQgZm9yIGEgY3V0LCIgc2FpZCBhIHNlbmlvciBPUEVDIGRlbGVnYXRlLiAiVGhlIG9udXMgd291bGQgYmUgb24gU2F1ZGkgQXJhYmlhIGFuZCBhIGZldyBvdGhlciBHdWxmIHByb2R1Y2VycyB0byByZWluIGluIHRoZSBpbmNyZW1lbnRhbCBvdXRwdXQgdGhleSBwdXQgaW50byB0aGUgbWFya2V0LCIgc2FpZCBTYW11ZWwgQ2lzenVrLCBvaWwgYW5hbHlzdCBhdCB0aGUgU3dlZGlzaCBFbmVyZ3kgQWdlbmN5LiBCZWNhdXNlIG9mIHNhbmN0aW9ucywgSXJhbidzIG91dHB1dCBpcyBkb3duIGEgbWlsbGlvbiBiYXJyZWxzIHBlciBkYXkgc2luY2UgdGhlIHN0YXJ0IG9mIDIwMTIgdG8gMi43IG1pbGxpb24gd2hpbGUgSXJhcSwgcmVjb3ZlcmluZyBmcm9tIHllYXJzIG9mIHdhciBhbmQgc2FuY3Rpb25zIHVuZGVyIFNhZGRhbSBIdXNzZWluLCBoYXMgYm9vc3RlZCBwcm9kdWN0aW9uIHRvIG5lYXJseSAzIG1pbGxpb24uICJJcmFuJ3MgcG9zaXRpb24gaGFzIGJlZW4gc3RyZW5ndGhlbmVkIGFmdGVyIHRoZSBHZW5ldmEgZGVhbCwgYnV0IHRoZXJlIGlzIHN0aWxsIGEgbG9uZyB3YXkgdG8gZ28sIiBzYWlkIGVuZXJneSBjb25zdWx0YW50IE1laGRpIFZhcnppLCBmb3JtZXJseSBvZiBzdGF0ZSBOYXRpb25hbCBJcmFuaWFuIE9pbCBDb21wYW55LiAiVGhlIGJvdHRvbSBsaW5lIGlzIHRoZSBJcmFuaWFucyBkb24ndCB3YW50IHRvIHJvY2sgdGhlIGJvYXQgYW5kIHB1dCAkMTAwIG9pbCB1bmRlciB0aHJlYXQsIHNvIHRoZXkgbmVlZCB0aGUgY29vcGVyYXRpb24gb2YgdGhlIFNhdWRpcy4iIE9pbCBwcmljZXMgbm93IG5lYXIgJDExMCBhIGJhcnJlbCBhcmUgY2xvc2UgdG8gaWRlYWwgZm9yIFNhdWRpIEFyYWJpYSwgT1BFQydzIG1vc3QgaW5mbHVlbnRpYWwgcHJvZHVjZXIgYmVjYXVzZSBvZiBpdHMgIG9uZS10aGlyZCBzaGFyZSBvZiBncm91cCBvdXRwdXQsIGFuZCBpdHMgcG9zaXRpb24gYXMgdGhlIG9ubHkgcHJvZHVjZXIgZ2xvYmFsbHkgdGhhdCBrZWVwcyBhbnkgc2lnbmlmaWNhbnQgc3BhcmUgY2FwYWNpdHkuIFJpeWFkaCBwdW1wZWQgYXQgcmVjb3JkIGxldmVscyBhYm92ZSAxMCBtaWxsaW9uIGJhcnJlbHMgcGVyIGRheSB3aGVuIHNhbmN0aW9ucyB3ZXJlIGltcG9zZWQgb24gSXJhbiBhbmQgdG8gZmlsbCB0aGUgZ2FwIGxlZnQgYnkgcG9zdCBjaXZpbCB3YXIgZGlzcnVwdGlvbiBpbiBMaWJ5YSwgdGhyb3R0bGluZyBiYWNrIGEgbGl0dGxlIHJlY2VudGx5IHRvIHN1cHBvcnQgcHJpY2VzLgoKVGhlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHRoZSBvaWwgbWluaXN0ZXJzIG9mIFNhdWRpIEFyYWJpYSBhbmQgSXJhbiBpcyBrZXkgdG8gcG9saWN5LW1ha2luZyBpbiB0aGUgb2Z0ZW4tcXVhcnJlbHNvbWUgT1BFQy4gTG9uZy1zdGFuZGluZyBTYXVkaSBPaWwgTWluaXN0ZXIgQWxpIGFsLU5haW1pIGZpcnN0IG1ldCBoaXMgSXJhbmlhbiBjb3VudGVycGFydCBhdCBaYW5nYW5laCdzIE9QRUMgZGVidXQgaW4gSmFrYXJ0YSBpbiAxOTk3LCBhIG1lZXRpbmcgd2hlcmUgUml5YWRoIHB1c2hlZCB0aHJvdWdoIGEgc3VycHJpc2luZyBwcm9kdWN0aW9uIGluY3JlYXNlIHRoYXQgaGVscGVkIHNlbmQgb2lsIHByaWNlcyBjcmFzaGluZy4gU2F1ZGkgQXJhYmlhJ3MgbW9kZXJhdGUgcG9zaXRpb24gb24gb2lsIHByaWNlcywgdG8gc3VwcG9ydCB3b3JsZCBlY29ub21pYyBncm93dGgsIGhhcyBvZnRlbiBjbGFzaGVkIHdpdGggcHJpY2UgaGF3ayBJcmFuJ3Mgd2lzaCB0byBrZWVwIE9QRUMgcHJvZHVjdGlvbiBpbiBjaGVjayB0byBzdXBwb3J0IHByaWNlcy4gQnV0IFphbmdhbmVoLCB3aG8gc2VydmVkIGFzIG9pbCBtaW5pc3RlciB1bmRlciBJcmFuJ3MgcmVmb3JtaXN0IGdvdmVybm1lbnQgZnJvbSAxOTk3LTIwMDUsIGFuZCBoaXMgdHJ1c3RlZCBhaWRlLCBIb3NzZWluIEthemVtcG91ciBBcmRlYmlsaSwgYXJlIHJlc3BlY3RlZCB3aXRoaW4gT1BFQyBhbmQgd2lsbCB3YW50IHRvIGJlIGF0IHRoZSBjZW50ZXIgb2YgbmVnb3RpYXRpb25zLiBJcmFuJ3Mgb2lsIG1pbmlzdGVyIHVuZGVyIGZvcm1lciBQcmVzaWRlbnQgQWhtYWRpbmVqYWQgd2FzIFJvc3RhbSBRYXNlbWkgYSBmb3JtZXIgY29tbWFuZGVyIG9mIHRoZSBSZXZvbHV0aW9uYXJ5IEd1YXJkJ3MgZW5naW5lZXJpbmcgd2luZywgS2hhdGFtIGFsLUFuYmlhIGFuZCBkaWQgbm90IHBsYXkgYSBzaWduaWZpY2FudCByb2xlIGF0IE9QRUMuIFdoaWxlIHRoZSBvaWwgcHJpY2UgaGF3ay12ZXJzdXMtZG92ZSBkeW5hbWljIHBlcnNpc3RzIGJldHdlZW4gU3VubmkgTXVzbGltIFNhdWRpIEFyYWJpYSBhbmQgU2hpJ2l0ZSBNdXNsaW0gSXJhbiwgdGhlaXIgcHJpY2UgYXNwaXJhdGlvbnMgaGF2ZSBjb252ZXJnZWQgYXJvdW5kIHRyaXBsZSBkaWdpdCBvaWwuICJTYXVkaSBBcmFiaWEgYW5kIElyYW4gZG9uJ3QgdHJ1c3QgZWFjaCBvdGhlciwiIHNhaWQgVmFyemksICJCdXQgdGhlIFNhdWRpcyB3aWxsIG5vdCBncmF0dWl0b3VzbHkgcmFpc2UgdGVuc2lvbnMgd2l0aGluIE9QRUMuIiBUaGUgY29tYmluYXRpb24gb2YgYSByZW5haXNzYW5jZSBmb3IgYm90aCBJcmFuIGFuZCBJcmFxLCBhbHNvIFNoaSdpdGUtbGVkLCBhcmUgY2F1c2luZyBqaXR0ZXJzIGZvciBSaXlhZGgsIGNvbmNlcm5lZCB0aGF0IGl0cyBsb25nLXN0YW5kaW5nIGJvbmQgd2l0aCB0aGUgVW5pdGVkIFN0YXRlcyBpcyBpbiBqZW9wYXJkeS4gIlNhdWRpIEFyYWJpYSBpcyB3b3JyaWVkIHRoYXQgdGhlIFVuaXRlZCBTdGF0ZXMgaXMgZHJhd2luZyBjbG9zZXIgdG8gSXJhbiwgYWZ0ZXIgdGhlIEdlbmV2YSB0YWxrcyBhbmQgaXQgZmVhcnMgaXQgY291bGQgYmUgbG9zaW5nIGl0cyBzdHJhdGVnaWNhbGx5IGltcG9ydGFudCBwb3NpdGlvbiBpbiBVLlMuIGV5ZXMgc2hvdWxkIHRoZSBkZXRlbnRlIGNvbnRpbnVlLCIgc2FpZCBDaXN6dWsuIFphbmdhbmVoIGhhcyBhbHJlYWR5IGJlZW4gaW4gY29udGFjdCB3aXRoIHRoZSBiaWcgV2VzdGVybiBvaWwgY29tcGFuaWVzIHdobyB3b3VsZCBpbnZlc3QgaW4gSXJhbiBvbmNlIHNhbmN0aW9ucyBhcmUgbGlmdGVkLiBCdXQgYSByYXBpZCByZWNvdmVyeSBpbiBvdXRwdXQgaXMgdW5saWtlbHkuIFBldGVyIFdlbGxzIG9mIGdlb2xvZ2ljYWwgY29uc3VsdGFuY3kgTmVmdGV4LCB3aG8gaGFzIHdvcmtlZCBpbiBJcmFuLCBzYWlkIGl0IGNvdWxkIHByb2JhYmx5IHJhaXNlIG91dHB1dCB0byAzIG1pbGxpb24gdG8gMy41IG1pbGxpb24gYmFycmVscyBwZXIgZGF5IHdpdGhpbiBzaXggbW9udGhzIG9mIHRoZSBsaWZ0aW5nIG9mIHNhbmN0aW9ucyBidXQgd291bGQgc3RydWdnbGUgYmV5b25kIDQgbWlsbGlvbi4gIkluIHRoZSBsb25nIHRlcm0sIElyYW4gd29uJ3QgYmUgYWJsZSB0byBrZWVwIHVwIHdpdGggSXJhcSBubyBtYXR0ZXIgaG93IG1hbnkgY29tcGFuaWVzIHBpbGUgaW4gYW5kIGludmVzdCwiIFdlbGxzIHNhaWQuICJUaGUgY291bnRyeSdzIGZpZWxkcyBoYXZlIGJlZW4gaW4gcHJvZHVjdGlvbiBmb3IgYSBsb25nLCBsb25nIHRpbWUuIiBPUEVDIG1heSBmYWlsIGFnYWluIHRvIGFncmVlIHRvIGFwcG9pbnQgYSBuZXcgc2VjcmV0YXJ5IGdlbmVyYWwgdG8gcmVwbGFjZSB0aGUgbG9uZy1zdGFuZGluZyBMaWJ5YW4gQWJkdWxsYWggYWwtQmFkcmkuIElyYW4gYW5kIFNhdWRpIGJvdGggaGF2ZSBjYW5kaWRhdGVzIGFuZCBuZWl0aGVyIHdpbGwgZ2l2ZSB3YXkuICJDZXJ0YWlubHkgd2Ugd2lsbCBub3QgbGV0IHRob3NlIGNvdW50cmllcyB0aGF0IGFyZSBvcHByZXNzaXZlIGFnYWluc3QgSXJhbiB0byB0YWtlIHRoZSByb2xlIG9mIHRoZSBzZWNyZXRhcnkgZ2VuZXJhbCwiIFphbmdhbmVoIHNhaWQgaW4gU2VwdGVtYmVyLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKx5FMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGRjN2YzYjVkMGE2YjA2NzE=</field><field name="symbol" class="java.lang.String">rO0ABXQABEdVTEY=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUK3Cq8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzFwo9cKPX</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzFwo9cKPX</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzAo9cKPXD</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzFwo9cKPX</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyPXCj1wo9</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAOEA==</field><field name="id" class="java.lang.String">rO0ABXQAEDUyYTZhNDZlNDk1YjcwZmU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHPVAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwNTI=</field><field name="title" class="java.lang.String">rO0ABXQAMlRoZSBTZWNyZXQsIERpcnR5IENvc3Qgb2YgT2JhbWEncyBHcmVlbiBQb3dlciBQdXNo</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJK5SMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI3MTcyMzgzMzAxZTY3Yjg=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZBUk0=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJQC38AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyI9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABp3A==</field><field name="id" class="java.lang.String">rO0ABXQAEGIxNzhiNTk3MDYyZjcwYTE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGoqAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDIzMDQ=</field><field name="title" class="java.lang.String">rO0ABXQAN0Nhc2gtU3RyYXBwZWQgRXVyb3BlIFBvb2xzIERlZmVuc2UsIFNhdmVzIExpdHRsZSBTbyBGYXI=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT9QgQSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGVkOWZiYmE3MjZjODA4MTU=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0ZMWQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT9Vp2CAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwnrhR64Uf</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwrhR64Ueu</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwUeuFHrhS</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAweuFHrhR7</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAtPXCj1wo9</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAGQAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDk1MzFkYjgzZDI5Y2UzMmU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGrJAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDMyNzU=</field><field name="title" class="java.lang.String">rO0ABXQAO09pbCBQcmljZXMgQ2xpbWIgYXMgT2JhbWEgV2lucyBLZXkgU3VwcG9ydCBmb3IgU3lyaWEgU3RyaWtl</field><field name="content" class="java.lang.String">rO0ABXQKu09pbCBwcmljZXMgcmFsbGllZCBUdWVzZGF5IGFmdGVyIFUuUy4gUHJlc2lkZW50IEJhcmFjayBPYmFtYSByZWNlaXZlZCBzdXBwb3J0IGZyb20ga2V5IG9wcG9zaXRpb24gUmVwdWJsaWNhbiBsYXdtYWtlcnMgZm9yIG1pbGl0YXJ5IHN0cmlrZXMgYWdhaW5zdCBTeXJpYSBmb3IgaXRzIGFsbGVnZWQgY2hlbWljYWwgd2VhcG9ucyBhdHRhY2sgb24gY2l2aWxpYW5zLiBCdXlpbmcgYWxzbyBmb3VuZCBzdXBwb3J0IGZyb20gYSBzdXJwcmlzaW5nbHkgc3Ryb25nIHJlcG9ydCBvbiBncm93dGggaW4gdGhlIFVTIG1hbnVmYWN0dXJpbmcgc2VjdG9yIHRoYXQgYm9vc3RlZCBob3BlcyBmb3IgaW1wcm92ZWQgZW5lcmd5IGRlbWFuZCBpbiB0aGUgd29ybGQncyBiaWdnZXN0IGVjb25vbXkuIE5ldyBZb3JrJ3MgbWFpbiBjb250cmFjdCwgV2VzdCBUZXhhcyBJbnRlcm1lZGlhdGUgKFdUSSkgZm9yIE9jdG9iZXIgZGVsaXZlcnksIHJvc2UgOTEgY2VudHMgdG8gY2xvc2UgYXQgJDEwOC41NCBwZXIgYmFycmVsLiBCcmVudCBOb3J0aCBTZWEgY3J1ZGUgb2lsIGZvciBPY3RvYmVyIGRlbGl2ZXJ5IGNsaW1iZWQgdG8gJDExNS42OCBwZXIgYmFycmVsLCB1cCAkMS40NSBmcm9tIE1vbmRheSdzIGNsb3NpbmcgbGV2ZWwuIE9iYW1hIHJlY2VpdmVkIFR1ZXNkYXkgdGhlIHN1cHBvcnQgb2YgdHdvIFJlcHVibGljYW4gbGVhZGVycyBvZiB0aGUgSG91c2Ugb2YgUmVwcmVzZW50YXRpdmVzIOKAkyBIb3VzZSBTcGVha2VyIEpvaG4gQm9laG5lciBhbmQgSG91c2UgTWFqb3JpdHkgTGVhZGVyIEVyaWMgQ2FudG9yIOKAkyBmb3IgdGhlIHN0cmlrZXMgYWdhaW5zdCBTeXJpYW4gUHJlc2lkZW50IEJhc2hhciBhbC1Bc3NhZCdzIGdvdmVybm1lbnQgaW4gcmVzcG9uc2UgdG8gaXRzIGFsbGVnZWQgQXVnLiAyMSBkZWFkbHkgZ2FzIGF0dGFja3MgYWdhaW5zdCBjaXZpbGlhbnMuIE92ZXIgdGhlIHdlZWtlbmQgdGhlIFUuUy4gcHJlc2lkZW50IHNhaWQgaGUgd291bGQgc2VlayBhdXRob3JpemF0aW9uIGZyb20gQ29uZ3Jlc3MgZm9yIGFueSBpbnRlcnZlbnRpb24sIGFmdGVyIHNpZ25hbGluZyBsYXN0IHdlZWsgYSBwdW5pdGl2ZSBhY3Rpb24gY291bGQgYmUgaW1taW5lbnQuIFRob3VnaCB0aGUgc3Ryb25nIHN1cHBvcnQgZnJvbSBSZXB1YmxpY2FuIGxlYWRlcnMgZGlkIG5vdCBtZWFuIHRoYXQgQ29uZ3Jlc3Mgd291bGQgZ2l2ZSBPYmFtYSBhIGdyZWVuIGxpZ2h0IG9uIHRoZSBwbGFubmVkIGF0dGFja3MsIGl0IHN1YnN0YW50aWFsbHkgaW5jcmVhc2VkIHRoZSBvZGRzIG9mIGEgeWVzIHZvdGUsIGxpa2VseSBhcyBzb29uIGFzIG5leHQgd2VlayBhZnRlciBDb25ncmVzcyByZXR1cm5zIGZyb20gc3VtbWVyIHJlY2VzcyBNb25kYXkuICJIZSdzIChCb2VobmVyKSBzaWduZWQgb24gdG8gdGhlIHByZXNpZGVudCdzIGFjdGlvbiBwbGFuLCBwdXR0aW5nIHRoZWlyIHBvbGl0aWNhbCBkaWZmZXJlbmNlcyBhc2lkZSwgd2hpY2ggaW5jcmVhc2VzIHRoZSBwcm9iYWJpbGl0eSBvZiBhIGNvbmZsaWN0IGluIHRoZSBNaWRkbGUgRWFzdCwiIHNhaWQgQmFydCBNZWxlaywgY29tbW9kaXR5IHN0cmF0ZWdpc3QgYXQgVEQgU2VjdXJpdGllcy4gQSBrZXkgVS5TLiByZXBvcnQgb24gbWFudWZhY3R1cmluZywgc2hvd2luZyBncm93dGggZm9yIHRoZSB0aGlyZCBtb250aCBpbiBhIHJvdyBpbiBBdWd1c3QsIGZ1cnRoZXIgYm9sc3RlcmVkIGludmVzdG9yIGludGVyZXN0IGluIGNydWRlIG9pbC4gVGhlIEluc3RpdHV0ZSBmb3IgU3VwcGx5IE1hbmFnZW1lbnQgc2FpZCBpdHMgcHVyY2hhc2luZyBtYW5hZ2VycyBpbmRleCBmb3IgdGhlIG1hbnVmYWN0dXJpbmcgc2VjdG9yIGNsaW1iZWQgdG8gNTUuNyBpbiBBdWd1c3QsIHRoZSBoaWdoZXN0IHBvaW50IGluIDIwMTMuIEFuYWx5c3RzIGhhZCBleHBlY3RlZCB0aGUgaW5kZXggdG8gZHJvcCBmcm9tIEp1bHkuICJTdHJvbmdlciBtYWNyb2Vjb25vbWljIGRhdGEgc3VjaCBhcyB0aGUgVVMgSVNNIG1hbnVmYWN0dXJpbmcgaW5kZXggaXMgaGVscGluZyBzdXBwb3J0IGEgcmFsbHkgaW4gdGhlIGVxdWl0eSBtYXJrZXRzIHRoYXQgaXMgYWxzbyBicm9hZGx5IHN1cHBvcnRpdmUgZm9yIHRoZSBvaWwgbWFya2V0LCBhbHRob3VnaCB3ZSBub3RlIGdsb2JhbCBwZXRyb2xldW0gZGVtYW5kIHJlbWFpbnMgYXQgd2hhdCB3ZSBjb25zaWRlciBhICdiZWxvdyB0cmVuZCcgcGFjZSBvZiBncm93dGgsIiBzYWlkIFRpbSBFdmFucyBvZiBDaXRpIEZ1dHVyZXMuIEVhcmxpZXIgaW4gdGhlIGRheSBvaWwgcHJpY2VzIHNwaWtlZCBzaGFycGx5IGhpZ2hlciBhZnRlciBhIHN1cnByaXNlIG1pc3NpbGUgdGVzdCBpbiB0aGUgTWVkaXRlcnJhbmVhbiBhbWlkIHJpc2luZyB0ZW5zaW9ucyBvdmVyIFN5cmlhJ3MgbG9uZy1ydW5uaW5nIGNpdmlsIHdhci4gUnVzc2lhJ3MgZGVmZW5zZSBtaW5pc3RyeSBzYWlkIGl0IGhhZCBkZXRlY3RlZCB0aGUgbGF1bmNoIG9mIHR3byBiYWxsaXN0aWMgbWlzc2lsZXMgZnJvbSB0aGUgY2VudHJhbCBNZWRpdGVycmFuZWFuIGZpcmVkIHRvd2FyZCB0aGUgc2VhJ3MgZWFzdGVybiBjb2FzdGxpbmUuIFRoZSBJc3JhZWxpIGRlZmVuc2UgbWluaXN0cnkgc2FpZCB0aGUgbWlzc2lsZSBsYXVuY2ggd2FzIHBhcnQgb2Ygam9pbnQgVVMtSXNyYWVsaSBtaWxpdGFyeSBleGVyY2lzZXMsIGFuZCB0aGUgUGVudGFnb24gc2FpZCBpdCBoYWQgbm8gY29ubmVjdGlvbiB0byBwb3NzaWJsZSBhdHRhY2tzIGFnYWluc3QgdGhlIFN5cmlhbiByZWdpbWUu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUDiMQyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDhlNzE2Y2U5MzQ4OWI2MGE=</field><field name="symbol" class="java.lang.String">rO0ABXQABE1TQ0E=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUDnV2iAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4AAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4czMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4AAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4TMzMzMzN</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA2HrhR64Uf</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAASXA==</field><field name="id" class="java.lang.String">rO0ABXQAEDdlMTAxYTliMGUyYjMwMWY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGqqAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDMyMjQ=</field><field name="title" class="java.lang.String">rO0ABXQANlRheCBMYXcgRnVlbHMsIFRoZW4gS2lsbHMsIGEgRGlzY291bnQtVG9iYWNjbyBJbmR1c3RyeQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEBFzSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGUzOTY1NDdiNTJkZmZkYWE=</field><field name="symbol" class="java.lang.String">rO0ABXQABFJPTEw=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEGPZCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOOZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOtwo9cKPX</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOOZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOp64UeuFI</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBNrMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAC6VA==</field><field name="id" class="java.lang.String">rO0ABXQAEDdkMmZmMzdiYmUxMThlMzc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKMBAAAA==</field></document></documents><date>2015-05-07T12:12:19-0500</date></cacheEntry>
<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0ECtDYW5hZGlhbiBzdG9ja3MgcmFsbGllZCBUaHVyc2RheSB3aXRoIHRoZSBiZW5jaG1hcmsgaW5kZXggY2xvc2luZyBhYm92ZSAxNDAwMCBmb3IgdGhlIGZpcnN0IHRpbWUgaW4gYWxtb3N0IHRocmVlIHllYXJzIGFzIGZpbmFuY2lhbCBzaGFyZXMgcm9zZSBvbiBpbXByb3ZpbmcgZWFybmluZ3MgYW5kIG1pbmluZyBjb21wYW5pZXMgZ2FpbmVkIGFzIGdvbGQgdG9wcGVkIDEzMDAgYW4gb3VuY2UgQmFycmljayBHb2xkIENvcnAgYW5kIEdvbGRjb3JwIEluYyBhZGRlZCBhdCBsZWFzdCAzNiBwZXJjZW50IGFmdGVyIHJlcG9ydGluZyBmb3VydGhxdWFydGVyIGVhcm5pbmdzIENhbmFkaWFuIFRpcmUgQ29ycCBjbGltYmVkIDMxIHBlcmNlbnQgYXMgZWFybmluZ3MgdG9wcGVkIGVzdGltYXRlcyBhbmQgc2FtZXN0b3JlIHNhbGVzIGluY3JlYXNlZCBUZWNrIFJlc291cmNlcyBMdGQgc2FuayA2NyBwZXJjZW50IGFzIHJlc3VsdHMgd2VyZSBoYW1wZXJlZCBieSBkZWNsaW5pbmcgY29hbCBhbmQgY29wcGVyIHByaWNlcyBCb21iYXJkaWVyIHNsdW1wZWQgODkgcGVyY2VudCBhZnRlciBjdXR0aW5nIGl0cyBwcm9maXQgdGFyZ2V0cyBOYXV0aWx1cyBNaW5lcmFscyBJbmMgZHJvcHBlZCAxMCBwZXJjZW50IGFzIHRoZSB1bmRlcnNlYSBtZXRhbHMgZXhwbG9yZXIgdGVybWluYXRlZCBpdHMgcGFjdCB3aXRoIFBhcHVhIE5ldyBHdWluZWEgVGhlIFN0YW5kYXJkICBQb29yc1RTWCBDb21wb3NpdGUgSW5kZXggcm9zZSAxMDExNiBwb2ludHMgb3IgMDcgcGVyY2VudCB0byAxNDAwMTY1IGF0IDQgcG0gaW4gVG9yb250byB0byBjbG9zZSBhYm92ZSB0aGUgMTQwMDAgbGV2ZWwgZm9yIHRoZSBmaXJzdCB0aW1lIHNpbmNlIEFwcmlsIDIwMTEgVGhlIGJlbmNobWFyayBpbmRleCBoYXMganVtcGVkIDM4IHBlcmNlbnQgaW4gZWlnaHQgc3RyYWlnaHQgZGF5cyBvZiBnYWlucyB0aGUgbG9uZ2VzdCByYWxseSBzaW5jZSBTZXB0ZW1iZXIgMjAxMCBJdCBoYXMgdG8gZG8gd2l0aCBleHBlY3RhdGlvbnMgZm9yIGluc3RhbmNlIHdpdGggQmFycmljayB0aGUgbnVtYmVycyB3ZXJlIG5lZ2F0aXZlIGJ1dCBleHBlY3RhdGlvbnMgd2VyZW50IHRoYXQgaGlnaCBzbyBhcyBhIHJlc3VsdCB0aGUgc3RvY2sgbW92ZXMgaGlnaGVyIHNhaWQgQnJ1Y2UgQ2FtcGJlbGwgZnVuZCBtYW5hZ2VyIHdpdGggU3RvbmVDYXN0bGUgSW52ZXN0bWVudCBNYW5hZ2VtZW50IEluYyBpbiBLZWxvd25hIEJyaXRpc2ggQ29sdW1iaWEgSGUgbWFuYWdlcyBhYm91dCBDMTAwIG1pbGxpb24gOTA5IG1pbGxpb24gd2l0aCB0aGUgZmlybSBJbiBzb21lIGNhc2VzIHN0b2NrcyBhcmUgc3RhcnRpbmcgb2ZmIHdlYWtlciBhbmQgdGhlbiBtb3ZpbmcgdXAgYWZ0ZXIgc29tZSBwYW5pYyBkdW1waW5nIFRoZSBtYXJrZXQgcHJvYmFibHkgZWFzZXMgdXAgYmFycmluZyBzb21ldGhpbmcgbW9yZSBtYWNybyB0aGF0IHNjYXJlcyBldmVyeW9uZSBDYW5hZGlhbiBzaGFyZXMgZmVsbCBlYXJsaWVyIGFzIFVTIGRhdGEgc2hvd2VkIHJldGFpbCBzYWxlcyBkZWNsaW5lZCB0aGUgbW9zdCBzaW5jZSBKdW5lIDIwMTIgaW4gSmFudWFyeSBzbGlkaW5nIDA0IHBlcmNlbnQgYXMgcG9vciB3ZWF0aGVyIGtlcHQgY3VzdG9tZXJzIGF3YXkgZnJvbSBhdXRvIHNob3dyb29tcyBhbmQgc3RvcmVzIEpvYmxlc3MgY2xhaW1zIHVuZXhwZWN0ZWRseSBpbmNyZWFzZWQgdG8gMzM5MDAwIGxhc3Qgd2VlayBmcm9tIDMzMTAwMCBpbiB0aGUgcHJpb3IgcGVyaW9kICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQmFycmljayBCYXJyaWNrIEdvbGQgdGhlIHdvcmxkcyBsYXJnZXN0IGdvbGQgcHJvZHVjZXIgYnkgc2FsZXMgYWRkZWQgNjEgcGVyY2VudCB0byBDMjIwOCBhbmQgR29sZGNvcnAgcm9zZSAzNiBwZXJjZW50IHRvIEMyOTY0IEJhcnJpY2sgcmVwb3J0ZWQgYSBuZXQgbG9zcyBvZiAyODMgYmlsbGlvbiBhaGVhZCBvZiBhIGxvc3Mgb2YgMzAxIGJpbGxpb24gYSB5ZWFyIGVhcmxpZXIgR29sZGNvcnBzIGF2ZXJhZ2UgY29zdCB0byBwcm9kdWNlIGFuZCBzZWxsIGdvbGQgYWRqdXN0ZWQgZm9yIHRoZSBzYWxlIG9mIHNpbHZlciBhbmQgb3RoZXIgbWV0YWxzIHdhcyA0NjcgYW4gb3VuY2UgY29tcGFyZWQgd2l0aCB0aGUgNDg0IGF2ZXJhZ2Ugb2YgZml2ZSBlc3RpbWF0ZXMgY29tcGlsZWQgYnkgQmxvb21iZXJnIEIyR29sZCBDb3JwIGluY3JlYXNlZCA2MSBwZXJjZW50IHRvIEMyOTYgYW5kIElhbWdvbGQgQ29ycCBjbGltYmVkIDQyIHBlcmNlbnQgdG8gQzQ0MyBhcyB0aGUgU1BUU1ggR29sZCBJbmRleCByYWxsaWVkIDQgcGVyY2VudCBUaGUgcHJpY2Ugb2YgZ29sZCBpbmNyZWFzZWQgMDQgcGVyY2VudCB0byAxMzAwMTAgYW4gb3VuY2UgaW4gTmV3IFlvcmsgZm9yIGEgc2V2ZW50aCBzdHJhaWdodCBzZXNzaW9uIHRoZSBsb25nZXN0IHJhbGx5IHNpbmNlIDIwMTEgVGVsdXMgQ29ycCByb3NlIDA3IHBlcmNlbnQgdG8gQzM3MzMgYWZ0ZXIgYWRkaW5nIG1vcmUgdGhhbiBleHBlY3RlZCB3aXJlbGVzcyBjdXN0b21lcnMgaW4gdGhlIGZvdXJ0aCBxdWFydGVyIFRoZSBWYW5jb3V2ZXJiYXNlZCB3aXJlbGVzcyBjYXJyaWVyIHJlcG9ydGVkIGEgMzQgcGVyY2VudCBpbmNyZWFzZSBpbiBzYWxlcyBIb21lIENhcGl0YWwgR3JvdXAgSW5jIGEgbW9ydGdhZ2UgYW5kIGNyZWRpdCBjYXJkIHNlcnZpY2VzIGNvbXBhbnkgc29hcmVkIDg2IHBlcmNlbnQgdG8gQzgzMTMgdGhlIG1vc3Qgc2luY2UgMjAwOSBUaGUgY29tcGFueSBzYWlkIDIwMTQgZWFybmluZ3Mgd2lsbCByaXNlIDEzIHBlcmNlbnQgdG8gMTggcGVyY2VudCBhbmQgYm9vc3RlZCBpdHMgcXVhcnRlcmx5IGRpdmlkZW5kIHRvIDMyIENhbmFkaWFuIGNlbnRzIGEgc2hhcmUgZnJvbSAyOCBjZW50cyAgICAgICAgICAgICAgICAgICAgICAgIENhbmFkaWFuIFRpcmUgU2FsZXMgQ2FuYWRpYW4gVGlyZSBqdW1wZWQgMzEgcGVyY2VudCB0byBDOTc2OSB0aGUgbW9zdCBzaW5jZSBBdWd1c3QgYXMgY29uc3VtZXIgZGlzY3JldGlvbmFyeSBzdG9ja3MgYWR2YW5jZWQgMDUgcGVyY2VudCBhcyBhIGdyb3VwIE5pbmUgb2YgMTAgaW5kdXN0cmllcyBpbiB0aGUgZ2F1Z2Ugcm9zZSBvbiB0cmFkaW5nIHZvbHVtZSA2MiBwZXJjZW50IGhpZ2hlciB0aGFuIHRoZSAzMGRheSBhdmVyYWdlIENhbmFkaWFuIFRpcmUgdGhlIGhvbWUgaGFyZHdhcmUgYW5kIHNwb3J0cyBlcXVpcG1lbnQgcmV0YWlsZXIgcmVwb3J0ZWQgZm91cnRocXVhcnRlciBlYXJuaW5ncyBvZiBDMjM1IGEgc2hhcmUgYWhlYWQgb2YgYW5hbHlzdHMgZXN0aW1hdGVzIG9mIEMyMjYgU2FtZXN0b3JlIHNhbGVzIGEgbWVhc3VyZSBvZiBwZXJmb3JtYW5jZSBhbW9uZyBsb2NhdGlvbnMgb3BlbiBmb3IgYXQgbGVhc3QgYSB5ZWFyIHJvc2UgNCBwZXJjZW50IGluIENhbmFkaWFuIFRpcmUgc3RvcmVzIGluIHRoZSBxdWFydGVyIFRlY2sgUmVzb3VyY2VzIHNsdW1wZWQgNjcgcGVyY2VudCB0byBDMjYgdGhlIG1vc3Qgc2luY2UgSnVuZSBTYWxlcyBkZWNsaW5lZCB0byBDMjM4IGJpbGxpb24gZnJvbSBDMjczIGJpbGxpb24gYSB5ZWFyIGFnbyBhcyBjb3BwZXIgcHJpY2VzIGRlY2xpbmVkIDEwIHBlcmNlbnQgaW4gdGhlIGZvdXJ0aCBxdWFydGVyIGNvbXBhcmVkIHdpdGggYSB5ZWFyIGVhcmxpZXIgTmF1dGlsdXMgTWluZXJhbHMgcGx1bmdlZCAxMCBwZXJjZW50IHRvIDIyNSBDYW5hZGlhbiBjZW50cyBhZnRlciB0ZXJtaW5hdGluZyBpdHMgYWdyZWVtZW50IHdpdGggUGFwdWEgTmV3IEd1aW5lYSBhcyB0aGUgY291bnRyeSBoYXMgbm90IGNvbXBsZXRlZCBwdXJjaGFzZSBvZiBpdHMgMzAgcGVyY2VudCBzdGFrZSBpbiB0aGUgb2Zmc2hvcmUgU29sd2FyYSAxIHByb2plY3QgVGhlIGNvbXBhbnkgd2lsbCBzZWVrIGRhbWFnZXMgQm9tYmFyZGllciBzbHVtcGVkIDg5IHBlcmNlbnQgdG8gQzM2OCB0aGUgbG93ZXN0IHNpbmNlIERlY2VtYmVyIDIwMTIgYWZ0ZXIgaXQgbG93ZXJlZCBpdHMgcHJvamVjdGlvbiBmb3IgZWFybmluZ3MgYmVmb3JlIGludGVyZXN0IGFuZCB0YXhlcyBpbiBpdHMgcGxhbmVtYWtpbmcgYnVzaW5lc3MgdG8gNSBwZXJjZW50IG9mIHJldmVudWUgZnJvbSA2IHBlcmNlbnQgRWFybmluZ3MgaW4gaXRzIHJhaWwgZGl2aXNpb24gd2lsbCBhbHNvIGZhbGwgc2hvcnQgb2YgdGFyZ2V0c3QABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0wMy0yN1QwMDowMDowMFogVE8gMjAxMy0xMi0wM1Q1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTExMTYw</field><field name="title" class="java.lang.String">rO0ABXQASkZvcmVjYXN0ZXJzIEZhdm9yaW5nIFBsYXRpbnVtIE92ZXIgR29sZCBhcyBJbnZlc3RvcnMgTG9zZSBGYWl0aCBpbiBCdWxsaW9u</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUAt8niAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGRlNGM2MjdkMDA1MWM4YWQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABkpNQVQuTA==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUAzGNSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECmCgAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECmTgAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECl+AAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECmJgAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECll9HrhR64</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAp/gA==</field><field name="id" class="java.lang.String">rO0ABXQAEDI4ZDJmNjU3ZGYwMzQ3NzA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFhBAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDYyNjg=</field><field name="title" class="java.lang.String">rO0ABXQAM0dvbGQgQmVhcnMgVGFrZSBPdmVyIGFzIEZlZCBNZW1iZXJzIEJhY2sgVGFwZXIgUGxhbg==</field><field name="content" class="java.lang.String">rO0ABXQTglR3ZWx2ZSBhbmFseXN0cyBzdXJ2ZXllZCBieSBCbG9vbWJlcmcgZXhwZWN0IHByaWNlcyB0byBmYWxsIG5leHQgd2VlaywgZWlnaHQgd2VyZSBidWxsaXNoIGFuZCB0d28gbmV1dHJhbC4gVGhhdOKAmXMgdGhlIGhpZ2hlc3QgcHJvcG9ydGlvbiBvZiBiZWFycyBzaW5jZSBKdW5lIDIxLCBhIHdlZWsgYmVmb3JlIHByaWNlcyByZWFjaGVkIGEgMzQtbW9udGggbG93LiBHb2xkIGlzIGhlYWRpbmcgZm9yIGJhY2stdG8tYmFjayBtb250aGx5IGdhaW5zIGZvciB0aGUgZmlyc3QgdGltZSBzaW5jZSBTZXB0ZW1iZXIgYWZ0ZXIgc3BlY3VsYXRvcnMgY3V0IGJlYXJpc2ggYmV0cyBieSAyNyBwZXJjZW50IGZyb20gYSByZWNvcmQgaW4gSnVseS4gQnVsbGlvbiBpcyBzZXQgZm9yIHRoZSBmaXJzdCBhbm51YWwgZHJvcCBpbiAxMyB5ZWFycyBhZnRlciBzb21lIGludmVzdG9ycyBsb3N0IGZhaXRoIGluIHRoZSBtZXRhbCBhcyBhIHN0b3JlIG9mIHZhbHVlLCBzcHVycmluZyBhdCBsZWFzdCAkMjYgYmlsbGlvbiBvZiB3cml0ZWRvd25zIGluIHRoZSBtaW5pbmcgaW5kdXN0cnkgYW5kIGxvc3NlcyBmb3IgSm9obiBQYXVsc29uLCB0aGUgYmlsbGlvbmFpcmUgaGVkZ2UgZnVuZCBtYW5hZ2VyLiBNaW51dGVzIHJlbGVhc2VkIEF1Zy4gMjEgc2hvd2VkIEZlZCBwb2xpY3kgbWFrZXJzIHdlcmUg4oCcYnJvYWRseSBjb21mb3J0YWJsZeKAnSBpbiBzbG93aW5nIGRlYnQgcHVyY2hhc2VzLiBTdXJnaW5nIGRlbWFuZCBmb3IgamV3ZWxyeSwgY29pbnMgYW5kIGJhcnMgaW4gQXNpYSBoZWxwZWQgcHJpY2VzIHJhbGx5IGFzIG11Y2ggYXMgMTcgcGVyY2VudCBzaW5jZSB0aGUgZW5kIG9mIEp1bmUuIOKAnFdlIG1heSBoYXZlIHNlZW4gdGhlIHdvcnN0IGluIHRlcm1zIG9mIGludmVzdG9yIGxpcXVpZGF0aW9uIGFuZCB0aGUgZ29sZCBtYXJrZXQgaXMgbXVjaCBiZXR0ZXIgYmFsYW5jZWQgbm93LCBidXQgd2UgYXJlIHByb2JhYmx5IG5vdCBvdXQgb2YgdGhlIHdvb2RzIHlldCzigJ0gc2FpZCBPbGUgSGFuc2VuLCB0aGUgaGVhZCBvZiBjb21tb2RpdHkgc3RyYXRlZ3kgYXQgU2F4byBCYW5rIEEvUyBpbiBDb3BlbmhhZ2VuLiDigJxXZSBjb250aW51ZSB0byBoYXZlIHRoZSBGZWQtdGFwZXJpbmcgdGFsay4gVGhlIG5lZ2F0aXZlIHZpZXcgaXMgc3RpbGwgZHJpdmVuIGJ5IHRoaXMu4oCdICAgICAgICAgICAgICAgICAgICAgICAgICAgVS5TLiBTdGltdWx1cyBUaGUgbWV0YWwgZmVsbCAxOCBwZXJjZW50IHRvICQxLDM3Mi45MSBhbiBvdW5jZSBpbiBMb25kb24gdGhpcyB5ZWFyLiBQcmljZXMgY2xpbWJlZCB0byBhIHR3by1tb250aCBoaWdoIG9mICQxLDM4NC41NSBvbiBBdWcuIDE5LCByZWJvdW5kaW5nIGZyb20gYXMgbG93IGFzICQxLDE4MC41MCBvbiBKdW5lIDI4LiBUaGUgU3RhbmRhcmQgJiBQb29y4oCZcyBHU0NJIGdhdWdlIG9mIDI0IGNvbW1vZGl0aWVzIGxvc3QgMC43IHBlcmNlbnQgc2luY2UgdGhlIHN0YXJ0IG9mIEphbnVhcnkgYW5kIHRoZSBNU0NJIEFsbC1Db3VudHJ5IFdvcmxkIEluZGV4IG9mIGVxdWl0aWVzIGdhaW5lZCA4LjMgcGVyY2VudC4gVHJlYXN1cmllcyBkZWNsaW5lZCAzLjkgcGVyY2VudCwgdGhlIEJsb29tYmVyZyBVLlMuIFRyZWFzdXJ5IEJvbmQgSW5kZXggc2hvd3MuIEdvbGQgcm9zZSA3MCBwZXJjZW50IGZyb20gRGVjZW1iZXIgMjAwOCB0byBKdW5lIDIwMTEgYXMgdGhlIEZlZCBwdW1wZWQgbW9yZSB0aGFuICQyIHRyaWxsaW9uIGludG8gdGhlIGZpbmFuY2lhbCBzeXN0ZW0gYnkgcHVyY2hhc2luZyBkZWJ0LCBpbmNyZWFzaW5nIGludmVzdG9yc+KAmSBjb25jZXJuIGFib3V0IGN1cnJlbmN5IGRlYmFzZW1lbnQgYW5kIGFjY2VsZXJhdGluZyBpbmZsYXRpb24uIFdoaWxlIG1vc3QgcG9saWN5IG1ha2VycyBhZ3JlZWQgY2hhbmdpbmcgdGhlICQ4NSBiaWxsaW9uIG9mIG1vbnRobHkgcHVyY2hhc2VzIHdhc27igJl0IHlldCBhcHByb3ByaWF0ZSwgYSBmZXcgc2FpZCBpdCBtaWdodCBzb29uIGJlIHRpbWUgdG8gc2xvdyBidXlpbmcsIGFjY29yZGluZyB0byBtaW51dGVzIG9mIHRoZSBKdWx5IDMwLTMxIG1lZXRpbmcuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBVLlMuIE1pbnQgQnVsbGlvbiBjbGltYmVkIHRoaXMgbW9udGggcGFydGx5IGJlY2F1c2UgVS5TLiBzcGVjdWxhdG9ycyBjbG9zZWQgb3V0IGJldHMgb24gbG93ZXIgcHJpY2VzLCByYXRoZXIgdGhhbiBpbmNyZWFzaW5nIGJ1bGxpc2ggd2FnZXJzLCBTdGFuZGFyZCBCYW5rIEdyb3VwIEx0ZC4gc2FpZCBpbiBhbiBBdWcuIDIxIHJlcG9ydC4gTW9uZXkgbWFuYWdlcnPigJkgbmV0LWxvbmcgcG9zaXRpb24gcm9zZSAxOCBwZXJjZW50IGluIHRoZSB3ZWVrIHRvIEF1Zy4gMTMgYXMgc2hvcnQgYmV0cyBmZWxsIDE3IHBlcmNlbnQsIG1vcmUgdGhhbiB0aGUgMyBwZXJjZW50IGRyb3AgaW4gbG9uZyB3YWdlcnMsIFUuUy4gQ29tbW9kaXR5IEZ1dHVyZXMgVHJhZGluZyBDb21taXNzaW9uIGRhdGEgc2hvdy4gVGhlIG5ldC1sb25nIHBvc2l0aW9uIHNsaWQgNzEgcGVyY2VudCBzaW5jZSBPY3RvYmVyLiBUaGUgd2Vha2VyIGludmVzdG9yIHNlbnRpbWVudCBpcyBiZWluZyByZWZsZWN0ZWQgaW4gVS5TLiBNaW50IHNhbGVzIG9mIEFtZXJpY2FuIEVhZ2xlIGdvbGQgY29pbnMgdGhhdCBzbG93ZWQgZXZlcnkgbW9udGggc2luY2UgcGVha2luZyBhdCAyMDksNTAwIG91bmNlcyBpbiBBcHJpbCwgd2hlbiBnb2xkIGVudGVyZWQgYSBiZWFyIG1hcmtldC4gVGhlIG1pbnQgc29sZCA1LDAwMCBvdW5jZXMgc28gZmFyIHRoaXMgbW9udGgsIGl0cyB3ZWJzaXRlIHNob3dzLiBQYXVsc29uLCB0aGUgYmlnZ2VzdCBpbnZlc3RvciBpbiB0aGUgU1BEUiBHb2xkIFRydXN0LCB0aGUgbGFyZ2VzdCBnb2xkLWJhY2tlZCBleGNoYW5nZS10cmFkZWQgcHJvZHVjdCwgY3V0IGhpcyBzdGFrZSBpbiB0aGUgZnVuZCBieSA1MyBwZXJjZW50IHRvIDEwLjIgbWlsbGlvbiBzaGFyZXMgaW4gdGhlIHNlY29uZCBxdWFydGVyLCBhIGZpbGluZyB0byB0aGUgU2VjdXJpdGllcyBhbmQgRXhjaGFuZ2UgQ29tbWlzc2lvbiBzaG93ZWQuIEJpbGxpb25haXJlIEdlb3JnZSBTb3JvcyBhbmQgRGFuaWVsIExvZWIgc29sZCB0aGVpciBlbnRpcmUgaW52ZXN0bWVudHMgaW4gdGhlIHByb2R1Y3QuIFRoZSA2ODMuNiBtZXRyaWMgdG9uIGRyb3AgaW4gRVRQIGFzc2V0cyB0aGlzIHllYXIgd2lwZWQgJDU1LjcgYmlsbGlvbiBmcm9tIHRoZWlyIHZhbHVlLCBkYXRhIGNvbXBpbGVkIGJ5IEJsb29tYmVyZyBzaG93LiBXaGlsZSBob2xkaW5ncyByZWFjaGVkIGEgdGhyZWUteWVhciBsb3cgb24gQXVnLiA4LCBzYWxlcyB0b3RhbGVkIDIzLjIgdG9ucyBzbyBmYXIgdGhpcyBtb250aCwgc2V0IHRvIGJlIHRoZSBsZWFzdCBzaW5jZSBKYW51YXJ5LiBPdXRmbG93cyB3aWxsIGJlIDcwMCB0b25zIHRoaXMgeWVhciwgQmFyY2xheXMgUGxjIGVzdGltYXRlcy4gICAgICAgICAgICAgICAgICAgICAgICAgICAgMjAxMSBSZWNvcmQgUHJpY2VzIHRoYXQgYXJlIDI5IHBlcmNlbnQgYmVsb3cgdGhlIHJlY29yZCAkMSw5MjEuMTUgc2V0IGluIFNlcHRlbWJlciAyMDExIGluY3JlYXNlZCBwaHlzaWNhbCBkZW1hbmQgaW4gQXNpYS4gQ29uc3VtZXIgYnV5aW5nIGluIEluZGlhLCBsYXN0IHllYXLigJlzIGJpZ2dlc3QgdXNlciwganVtcGVkIDcxIHBlcmNlbnQgaW4gdGhlIHNlY29uZCBxdWFydGVyIGZyb20gYSB5ZWFyIGVhcmxpZXIuIENoaW5lc2UgcHVyY2hhc2VzIHJvc2UgODcgcGVyY2VudCwgaGVscGluZyB0byBwdXNoIGdsb2JhbCBiYXIgYW5kIGNvaW4gc2FsZXMgdG8gYSByZWNvcmQgYW5kIGpld2VscnkgdXNhZ2UgdG8gdGhlIG1vc3Qgc2luY2UgMjAwOCwgdGhlIExvbmRvbi0gYmFzZWQgV29ybGQgR29sZCBDb3VuY2lsIHNhaWQgQXVnLiAxNS4gU3RyZW5ndGhlbmluZyBjb25zdW1wdGlvbiBoZWxwZWQga2VlcCB0aGUgY29zdCBvZiBib3Jyb3dpbmcgZ29sZCBmb3Igc2l4IG1vbnRocyBjbG9zZSB0byBhIGZvdXIteWVhciBoaWdoLiBUaGF0IG1heSBpbmRpY2F0ZSBhIHNjYXJjaXR5IG9mIG1ldGFsLCB0aGUgTG9uZG9uIEJ1bGxpb24gTWFya2V0IEFzc29jaWF0aW9uIHNheXMuIFRoZSBBdWd1c3QgZnV0dXJlcyBjb250cmFjdCBvbiB0aGUgQ29tZXggaW4gTmV3IFlvcmsgZmxpcHBlZCB0byBhIHByZW1pdW0gdG8gRGVjZW1iZXIgdGhpcyBtb250aCBmb3IgdGhlIGZpcnN0IHRpbWUgc2luY2UgdGhleSBzdGFydGVkIHRyYWRpbmcuIFRoZSBzby1jYWxsZWQgYmFja3dhcmRhdGlvbiBzaWduYWxzIGNvbmNlcm4gYWJvdXQgbmVhci10ZXJtIHN1cHBseS4gICAgICAgICAgICAgICAgICAgICAgICAgUHJvZHVjdGlvbiBDdXJicyBHb2xkIHdpbGwgYXZlcmFnZSAkMSwzMDAgaW4gdGhlIGZvdXJ0aCBxdWFydGVyLCByaXNpbmcgdG8gJDEsMzUwIGluIHRoZSBmaW5hbCB0aHJlZSBtb250aHMgb2YgbmV4dCB5ZWFyLCBhY2NvcmRpbmcgdG8gdGhlIG1lZGlhbiBvZiBhcyBtYW55IGFzIDE3IGFuYWx5c3QgZXN0aW1hdGVzIGNvbXBpbGVkIGJ5IEJsb29tYmVyZy4gU29tZSBhbmFseXN0cyBwcmVkaWN0IHByaWNlcyBhcmUgYm90dG9taW5nIGFzIHBoeXNpY2FsIHVzYWdlIHJpc2VzIGFuZCBtaW5pbmcgY29tcGFuaWVzIHBsYW4gZnV0dXJlIG91dHB1dCBjdXJicy4gUHJvZHVjdGlvbiBpc27igJl0IHN1c3RhaW5hYmxlIGF0IHByaWNlcyBiZWxvdyAkMSwyNTAsIEdvbGQgRmllbGRzIEx0ZC4gQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXIgTmljayBIb2xsYW5kIHNhaWQgaW4gYW4gaW50ZXJ2aWV3IGluIEp1bmUuIEJhcnJpY2sgR29sZCBDb3JwLiwgdGhlIGJpZ2dlc3QgcHJvZHVjZXIsIHNhaWQgQXVnLiAxIGl0IG1heSBzZWxsLCBjbG9zZSBvciBjdXJiIG91dHB1dCBhdCAxMiBtaW5lcyBmcm9tIFBlcnUgdG8gUGFwdWEgTmV3IEd1aW5lYS4gVGhlIDMwLW1lbWJlciBQaGlsYWRlbHBoaWEgU3RvY2sgRXhjaGFuZ2UgR29sZCBhbmQgU2lsdmVyIEluZGV4IGZlbGwgMzQgcGVyY2VudCB0aGlzIHllYXIu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUCkZLyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDhmZjQyYjE4MmMyYjA5NDM=</field><field name="symbol" class="java.lang.String">rO0ABXQABEdPTEQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUCpixiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBTyFHrhR64</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUVwo9cKPX</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBTp64UeuFI</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUPMzMzMzN</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBT8KPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAABRT6A==</field><field name="id" class="java.lang.String">rO0ABXQAEDJjZTJhZGViMGZmMDM5OWM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mIQ6AAAQ==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIyNTM5</field><field name="title" class="java.lang.String">rO0ABXQAOEJhcnJpY2sgR29sZCBTaGVsdmVzIEJpZyBNaW5lIFByb2plY3QsIFBsYW5zIFNoYXJlIElzc3Vl</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUIM4eSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDIwMTdiMmUzNDZkYWZlMWY=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0FCWA==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUISCECAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyKPXCj1wp</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAydcKPXCj2</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAx3rhR64Uf</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyAo9cKPXD</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxq4UeuFHs</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAABHAkWA==</field><field name="id" class="java.lang.String">rO0ABXQAEGIxNWQwODU4MDliODAyNmU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMIaAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDg3MDI=</field><field name="title" class="java.lang.String">rO0ABXQAM0dvbGQgQnVsbHMgUmV0cmVhdCBhcyBQcmljZXMgRHJvcCB0byBGb3VyLU1vbnRoIExvdw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUK3Cq8AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGRmNDQ1MGM3N2Y1NGE2NTc=</field><field name="symbol" class="java.lang.String">rO0ABXQAA05PVg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUK8MQsAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUiuFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUqZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUQzMzMzMz</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUdmZmZmZm</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBR49cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAACEpdA==</field><field name="id" class="java.lang.String">rO0ABXQAEGZmNzhiYTVlYjFiYmM4MGM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mG5hAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDMyMzE=</field><field name="title" class="java.lang.String">rO0ABXQAQ0phcGFuJ3MgU3dlZXQgU3BvdDogU3RvY2sgUHJpY2VzIFJpc2UsIFByb2ZpdCBGb3JlY2FzdHMgUmlzZSBGYXN0ZXI=</field><field name="content" class="java.lang.String">rO0ABXQvgUphcGFuZXNlIHNoYXJlcyBhcmUgZ2V0dGluZyBjaGVhcGVyIGZhc3RlciB0aGFuIGFueSBkZXZlbG9wZWQgbWFya2V0IGFzIGdsb2JhbCBpbnZlc3RvcnMgcmVnYWluIGZhaXRoIGluIHRoZSB3b3JsZOKAmXMgdGhpcmQtbGFyZ2VzdCBlY29ub215LCB3aXRoIHZhbHVhdGlvbnMgZGVjbGluaW5nIGV2ZW4gYXMgdGhlIGJlbmNobWFyayBUb3BpeCBpbmRleCByYWxsaWVzLiBUaGUgcHJpY2UtZWFybmluZ3MgcmF0aW8gZm9yIHRoZSBuYXRpb27igJlzIGNvbXBhbmllcyBkcm9wcGVkIHRvIDE0LjMgdGltZXMgZXN0aW1hdGVkIHByb2ZpdHMgZnJvbSAxNy4xIGF0IHRoZSBzdGFydCBvZiAyMDEzIGJlY2F1c2UgdGhlIFRvcGl44oCZcyAzNCBwZXJjZW50IHN1cmdlLCB0aGUgYmlnZ2VzdCBhbW9uZyAyNCBkZXZlbG9wZWQgY291bnRyaWVzIHRyYWNrZWQgYnkgQmxvb21iZXJnLCBoYXMgZmFpbGVkIHRvIGtlZXAgdXAgd2l0aCBhbmFseXN0IGZvcmVjYXN0cyBmb3IgNjAgcGVyY2VudCBpbmNvbWUgZ3Jvd3RoLiBOb3doZXJlIGhhdmUgdmFsdWF0aW9ucyBjb250cmFjdGVkIGZhc3RlciB0aGFuIGluIEphcGFuLiBNdWx0aXBsZXMgaGF2ZSBpbmNyZWFzZWQgaW4gdGhlIFUuUy4sIEZyYW5jZSBhbmQgdGhlIFUuSy4gQmVhcnMgc2F5IHRoZSBiZXN0IG9mIHRoZSByYWxseSB0aGF0IGJlZ2FuIGluIE5vdmVtYmVyIGlzIGFscmVhZHkgb3ZlciBiZWNhdXNlIGVhcm5pbmdzIGhhdmUgZmFpbGVkIHRvIHRyYW5zbGF0ZSBpbnRvIHN0b2NrIGdhaW5zIGZvciBtdWNoIG9mIHRoZSBwYXN0IGRlY2FkZS4gQnVsbHMgc2F5IHByb2ZpdCBlc3RpbWF0ZXMgYXJlIHJldHVybmluZyB0byBwcmUtZmluYW5jaWFsIGNyaXNpcyBsZXZlbHMgYXMgdGhlIHllbiB3ZWFrZW5zIGFtaWQgY29uZmlkZW5jZSBpbiBQcmltZSBNaW5pc3RlciBTaGluem8gQWJl4oCZcyBwb2xpY2llcyB0byBlbmQgMTUgeWVhcnMgb2YgZGVmbGF0aW9uIGFuZCB0aGUgY2VudHJhbCBiYW5r4oCZcyBwcm9taXNlIHRvIGRvdWJsZSB0aGUgYW1vdW50IG9mIGN1cnJlbmN5IGluIGNpcmN1bGF0aW9uLiBFYXJuaW5ncyBlc3RpbWF0ZXMgYnkgYW5hbHlzdHMgYW5kIGNvbXBhbmllcyBhcmUgYmFzZWQgb24gYW4gZXZlbiBzdHJvbmdlciB5ZW4uIOKAnFRoaXMgdGltZSBpcyBmb3IgcmVhbCzigJ0gU2VyZ2kgTWFydGluIEFtb3Jvcywgd2hvIGhlbHBzIG92ZXJzZWUgJDQgYmlsbGlvbiBhcyBjaGllZiBleGVjdXRpdmUgb2ZmaWNlciBvZiBDcmVkaXQgQW5kb3JyYSBBc3NldCBNYW5hZ2VtZW50IGluIEFuZG9ycmEsIHNhaWQgaW4gYSBTZXB0LiA2IHBob25lIGludGVydmlldy4g4oCcVGhlaXIgcHJldmlvdXMgZWZmb3J0cyB3ZXJlIG5ldmVyIGFjY29tcGFuaWVkIGJ5IHN1Y2ggYSBkZWNpc2l2ZSBtb25ldGFyeSBwb2xpY3kgYW5kIHRoZSBnb3Zlcm5tZW504oCZcyB3aWxsaW5nbmVzcyB0byBjb21taXQgdG8gc3RydWN0dXJhbCByZWZvcm1zIGlzIGFsc28gc29tZXRoaW5nIHdlIGhhdmVu4oCZdCBzZWVuIGJlZm9yZS4gVGhpcyBpcyB0aGUgcmVhbCBvbmUu4oCdIENyZWRpdCBBbmRvcnJhIG1hZGUgaXRzIGZpcnN0IEphcGFuZXNlIGludmVzdG1lbnRzIGluIOKAnG1hbnkgeWVhcnPigJ0gdGhpcyBxdWFydGVyLCBoZSBzYWlkLiAgICAgICAgICAgICAgICAgICAgICAgICAgVG9waXggRGl2ZXJnZXMgRWFybmluZ3MgZ3Jvd3RoIGRpZCBsaXR0bGUgdG8gbGlmdCBlcXVpdGllcyBhZnRlciB0aGUgZmluYW5jaWFsIGNyaXNpcy4gVGhlIFRvcGl4IGVuZGVkIGxhc3QgeWVhciBhdCA4NTkuODAsIGxlc3MgdGhhbiBhIHBvaW50IGFib3ZlIGl0cyAyMDA4IGNsb3NlLiBEdXJpbmcgdGhlIGZvdXIgeWVhcnMgaW4gYmV0d2VlbiwgZWFybmluZ3MgZG91YmxlZCwgd2hpbGUgdGhlIGluZGV4IG5ldmVyIHJvc2UgbW9yZSB0aGFuIDE2IHBlcmNlbnQgYWJvdmUgaXRzIHN0YXJ0aW5nIGxldmVsLCBkYXRhIGNvbXBpbGVkIGJ5IEJsb29tYmVyZyBzaG93LiBUaGUgeWVuIHNvYXJlZCB0byBhIHBvc3QtV29ybGQgV2FyIElJIHJlY29yZCBpbiAyMDExLiBTdG9ja3MgcmFsbGllZCBsYXN0IHdlZWssIHdpdGggdGhlIFRvcGl4IGNsaW1iaW5nIDMuOCBwZXJjZW50IHRvIDEsMTQ3LjgyIGZvciB0aGUgYmlnZ2VzdCBhZHZhbmNlIGluIHR3byBtb250aHMuIFNvbnkgQ29ycC4gYW5kIEhvbmRhIE1vdG9yIENvLiwgY29tcGFuaWVzIHRoYXQgZ2V0IG1vcmUgdGhhbiA2NSBwZXJjZW50IG9mIHNhbGVzIG91dHNpZGUgSmFwYW4sIHN1cmdlZCBtb3JlIHRoYW4gNSBwZXJjZW50LiBUaGUgYmVuY2htYXJrIGdhdWdlIGZvciBKYXBhbmVzZSBzaGFyZXMgaGFzIGdhaW5lZCAzNCBwZXJjZW50IGluIDIwMTMgYW5kIHRoZSA1OSBwZXJjZW50IHJpc2Ugc2luY2UgTm92ZW1iZXIgaXMgdGhlIGJpZ2dlc3QgYWR2YW5jZSBpbiBhIHF1YXJ0ZXIgY2VudHVyeS4gICAgICAgICAgICAgICAgICAgICAgICAgIFJlY29yZCBIb2xkaW5ncyDigJxXZeKAmXJlIHBvc2l0aXZlIG9uIEphcGFuZXNlIGVxdWl0aWVzLOKAnSBTdGVwaGVuIENvcnJ5LCBIb25nIEtvbmctYmFzZWQgY2hpZWYgaW52ZXN0bWVudCBzdHJhdGVnaXN0IGF0IExHVCBHcm91cCwgYSBwcml2YXRlIGJhbmtpbmcgYW5kIGFzc2V0LW1hbmFnZW1lbnQgZmlybSB0aGF0IG92ZXJzZWVzIGFib3V0ICQxMTUgYmlsbGlvbiwgc2FpZCBpbiBhIHBob25lIGludGVydmlldyBGcmlkYXkuIOKAnFdl4oCZbGwgY29udGludWUgdG8gc2VlIG1vcmUgcG9zaXRpdmUgZWFybmluZ3MgcmV2aXNpb25zLiBBYmUgd2FudHMgdG8gbGVhdmUgYSBsZWdhY3kgaW4gSmFwYW5lc2UgcG9saXRpY3MgYXMgdGhlIG1hbiB3aG8gYWx0ZXJlZCB0aGUgZWNvbm9teSBhbmQgdGhhdOKAmXMgZW5jb3VyYWdpbmcu4oCdIEZvcmVpZ25lcnMgc3BlY3VsYXRpbmcgdGhhdCBBYmUgd2lsbCBzdWNjZWVkIGluIHN0aW11bGF0aW5nIGVjb25vbWljIGdyb3d0aCBhbmQgaGFsdGluZyBkZWZsYXRpb24gaGF2ZSBiZWVuIHBvdXJpbmcgbW9uZXkgaW50byB0aGUgVG9reW8gc3RvY2sgbWFya2V0LiBUaGV5IGFkZGVkICQ5MyBiaWxsaW9uIHRvIGhvbGRpbmdzIHRoaXMgeWVhciwgRmluYW5jZSBNaW5pc3RyeSBkYXRhIHNob3cuIFRvcGl4IGNvbXBhbmllcyB3aWxsIGVhcm4gYSBjb21iaW5lZCA4MC40OCB5ZW4gYSBzaGFyZSB0aGlzIHllYXIsIHVwIGZyb20gNTAuMjkgeWVuIGluIDIwMTIgYW5kIDM4LjA1IHllbiBpbiAyMDExLCB3aGVuIEphcGFuIGhhZCBpdHMgYmlnZ2VzdCBlYXJ0aHF1YWtlIGFuZCBudWNsZWFyIGRpc2FzdGVyLCBhY2NvcmRpbmcgdG8gbW9yZSB0aGFuIDYsMDAwIGFuYWx5c3QgZXN0aW1hdGVzIGNvbXBpbGVkIGJ5IEJsb29tYmVyZy4gRmlmdGVlbiBvZiAxOCBzdHJhdGVnaXN0cyBzdXJ2ZXllZCBieSBCbG9vbWJlcmcgZXhwZWN0IHRoZSBnYXVnZSB0byByaXNlIGJ5IHllYXItZW5kLCB3aXRoIHRoZSBtZWRpYW4gZm9yZWNhc3QgZm9yIGEgMTEgcGVyY2VudCBpbmNyZWFzZSB0byAxLDI3MC4gTm9tdXJhIEhvbGRpbmdzIEluYy4gaXMgdGhlIG1vc3QgYnVsbGlzaCwgcHJvamVjdGluZyBhIDMxIHBlcmNlbnQganVtcCB0byAxLDUwMC4g4oCcSmFwYW5lc2Ugc3RvY2tzIHN0aWxsIGhhdmUgYmlnIHVwc2lkZSzigJ0gc2FpZCBNaXl1a2kgS2FzaGltYSwgaGVhZCBvZiBKYXBhbmVzZSBlcXVpdHkgaW52ZXN0bWVudCBhdCBCTlkgTWVsbG9uIEFzc2V0IE1hbmFnZW1lbnQgSmFwYW4gTHRkLiwgd2hpY2ggb3ZlcnNlZXMgYWJvdXQgJDEzIGJpbGxpb24uIOKAnFRoZSBjb3JyZWxhdGlvbiB3aXRoIHRoZSBjdXJyZW5jeSB3aWxsIHdlYWtlbiBhbmQgdGhlIG1hcmtldCB3aWxsIGJlY29tZSBtb3JlIGxpbmtlZCB0byBlYXJuaW5ncywgbGlrZSBpdCB3YXMgaW4gdGhlIHBhc3Qu4oCdIFRoZSBpbmRleOKAmXMgcmF0aW8gb2YgMTQuMyB0aW1lcyBlc3RpbWF0ZWQgZWFybmluZ3MgY29tcGFyZXMgd2l0aCB0aGUgYXZlcmFnZSB2YWx1YXRpb24gb2YgMjguNyBvdmVyIHRoZSBsYXN0IGRlY2FkZSwgYmFzZWQgb24gaGlzdG9yaWNhbCBlYXJuaW5ncywgZGF0YSBjb21waWxlZCBieSBCbG9vbWJlcmcgc2hvdy4gICAgICAgICAgICAgICAgICAgICAgICAgV29ybGQgVmFsdWF0aW9ucyBUaGUgMi44LXBlcmNlbnRhZ2UtcG9pbnQgbmFycm93aW5nIGluIHRoZSByYXRpbyBjb21lcyBhcyBtdWx0aXBsZXMgZXhwYW5kIGluIGRldmVsb3BlZCBjb3VudHJpZXMuIEluIHRoZSBVLlMuLCB3aGVyZSBhIGZvdXIteWVhciBidWxsIG1hcmtldCBsaWZ0ZWQgdGhlIFN0YW5kYXJkICYgUG9vcuKAmXMgNTAwIEluZGV4IG1vcmUgdGhhbiAxNDUgcGVyY2VudCB0byBhIHJlY29yZCBoaWdoLCBzdG9ja3MgdHJhZGUgZm9yIDE1IHRpbWVzIGZvcmVjYXN0IDIwMTMgZWFybmluZ3MsIHVwIGZyb20gMTMuMSBpbiBKYW51YXJ5LiBWYWx1YXRpb25zIGhhdmUgcmlzZW4gMTcgcGVyY2VudCB0byAxMi45IGZvciBGcmFuY2XigJlzIENBQy00MCBJbmRleCBhbmQgMTMgcGVyY2VudCB0byAxMi44IGluIHRoZSBVLkvigJlzIEZUU0UgMTAwLCBhY2NvcmRpbmcgdG8gZGF0YSBjb21waWxlZCBieSBCbG9vbWJlcmcuIE9wdGltaXNtIGFib3V0IEFiZeKAmXMgcG9saWNpZXMgaGFzIHByb21wdGVkIGFuYWx5c3RzIHRvIHB1c2ggcHJvZml0IHByb2plY3Rpb25zIHVwIDE2IHBlcmNlbnQgaW4gMjAxMywgbGVhdmluZyB0aGVtIHdpdGhpbiA2IHBlcmNlbnQgb2YgdGhlaXIgbGV2ZWwgaW4gRmVicnVhcnkgMjAwNywgdGhlIHllYXIgYmVmb3JlIHRoZSBjb2xsYXBzZSBvZiBMZWhtYW4gQnJvdGhlcnMgSG9sZGluZ3MgSW5jLiwgd2hlbiB0aGUgVG9waXggcmVhY2hlZCBhIDE2LXllYXIgaGlnaCBvZiAxLDgxNi45Ny4gRXZlbiB0aG91Z2ggbW9yZSB0aGFuICQ2NTAgYmlsbGlvbiBoYXMgYmVlbiByZXN0b3JlZCB0byBKYXBhbmVzZSBzaGFyZSB2YWx1ZXMgc2luY2UgRGVjZW1iZXIsIHRoZSBnYXVnZSByZW1haW5zIDM3IHBlcmNlbnQgYmVsb3cgdGhlIDIwMDcgbGV2ZWwuICAgICAgICAgICAgICAgICAgICAgICAgRWFybmluZ3MgSW5mbHVlbmNlIFRoZSB5ZW7igJlzIDE5IHBlcmNlbnQgZGVjbGluZSBhZ2FpbnN0IHRoZSBkb2xsYXIgc2luY2UgZWxlY3Rpb25zIHdlcmUgYW5ub3VuY2VkIGluIE5vdmVtYmVyIGhhcyBiZWVuIGJlaGluZCBtdWNoIG9mIHRoZSBwcm9maXQgZ2Fpbi4gVGhlIGN1cnJlbmN5IHN0aWxsIGlzbuKAmXQgd2VhayBjb21wYXJlZCB3aXRoIGl0cyBsZXZlbCBvZiAxMDggcGVyIGRvbGxhciBiZWZvcmUgdGhlIGNvbGxhcHNlIG9mIExlaG1hbiBCcm90aGVycyBIb2xkaW5ncyBJbmMuIGluIDIwMDgsIEZpbmFuY2UgTWluaXN0ZXIgVGFybyBBc28gc2FpZCBhdCBhIFNlcHQuIDYgcHJlc3MgYnJpZWZpbmcgaW4gU3QuIFBldGVyc2J1cmcsIFJ1c3NpYSwgYWZ0ZXIgYSBHcm91cCBvZiAyMCBuYXRpb25zIHN1bW1pdC4gVGhlIHllbiB0cmFkZWQgYXQgOTkuNTcgYXQgNSBwLm0uIGluIFRva3lvIG9uIFNlcHQuIDYuIE5pc3NhbiBNb3RvciBDby4sIHdoaWNoIGdldHMgbW9yZSB0aGFuIDgwIHBlcmNlbnQgb2YgaXRzIHJldmVudWUgb3V0c2lkZSBvZiBpdHMgaG9tZSBtYXJrZXQsIHNhaWQgaW4gTWF5IHRoYXQgYSBvbmUteWVuIGRyb3AgYWdhaW5zdCB0aGUgZG9sbGFyIGJvb3N0cyBvcGVyYXRpbmcgaW5jb21lIGJ5IDE1IGJpbGxpb24geWVuICgkMTUxIG1pbGxpb24pLiBUaGUgY3VycmVuY3kgaGFzIGRpc3RvcnRlZCB0eXBpY2FsIHJlbGF0aW9uc2hpcHMgYmV0d2VlbiBzaGFyZSBwcmljZXMgYW5kIGVhcm5pbmdzIGdyb3d0aCwgYWNjb3JkaW5nIHRvIFRha2FzaGkgTWl5YXpha2ksIGdlbmVyYWwgbWFuYWdlciBvZiBzdHJhdGVnaWMgcmVzZWFyY2ggYW5kIGludmVzdG1lbnQgYXQgTWl0c3ViaXNoaSBVRkogQXNzZXQgTWFuYWdlbWVudCBDby4sIGEgdW5pdCBvZiB0aGUgbmF0aW9u4oCZcyBiaWdnZXN0IGJhbmsuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENhdGNoaW5nIFVwIOKAnFNoYXJlIHByaWNlcyBzaG91bGQgZGVwZW5kIG9uIGNvbXBhbnkgcHJvZml0cywgYnV0IHN0b2NrcyBpbiBKYXBhbiBoYXZlbuKAmXQgZm9sbG93ZWQgdGhlIHJlY292ZXJ5IGluIGVhcm5pbmdzIGFmdGVyIHRoZSBMZWhtYW4gc2hvY2sgcHJpbWFyaWx5IGJlY2F1c2Ugb2YgdGhlIHN0cm9uZyB5ZW4s4oCdIE1peWF6YWtpIHNhaWQgaW4gYW4gQXVnLiAyOCBwaG9uZSBpbnRlcnZpZXcgZnJvbSBUb2t5by4g4oCcVGhhdCBzYWlkLCB0aGUgQk9K4oCZcyB1bnByZWNlZGVudGVkIGVhc2luZyBjYXVzZWQgYSBjaGFuZ2UgaW4gdGhlIGN1cnJlbmN5IGxldmVsIGFuZCBiZWNhdXNlIG9mIHRoaXMgd2UgZXhwZWN0IHNoYXJlcyB0byBjYXRjaCB1cC7igJ0gQW5hbHlzdHMgYm9vc3RlZCBhbm51YWwgcHJvZml0IGVzdGltYXRlcyBmb3IgSmFwYW5lc2UgY29tcGFuaWVzIGFib3V0IDkgcGVyY2VudCBkdXJpbmcgdGhlIGxhc3QgZml2ZSBtb250aHMsIGFjY29yZGluZyB0byBkYXRhIGNvbXBpbGVkIGJ5IEJsb29tYmVyZy4gVGhlIHllbiB3ZWFrZW5lZCAwLjEgcGVyY2VudCBvdmVyIHRoYXQgcGVyaW9kLCBmYWxsaW5nIHRvIGl0cyBsb3dlc3QgcG9pbnQgb2YgMTAzLjc0IHBlciBkb2xsYXIgb24gTWF5IDIyIGFuZCB0cmFkaW5nIGFzIGhpZ2ggYXMgOTMuNzkgb24gSnVuZSAxMy4gVGhhdOKAmXMgYSBzaGlmdCBmcm9tIHRoZSBzYW1lIHBlcmlvZCBpbiB0aGUgbGFzdCB0d28geWVhcnMsIHdoZW4gYW5hbHlzdHMgY3V0IGVhcm5pbmdzIHByb2plY3Rpb25zIGFzIHRoZSB5ZW4gc3RyZW5ndGhlbmVkLiBBIDQuMiBwZXJjZW50IGFwcHJlY2lhdGlvbiBhZ2FpbnN0IHRoZSBkb2xsYXIgZnJvbSBBcHJpbCA5LCAyMDEyIHRvIFNlcHQuIDkgb2YgdGhhdCB5ZWFyIGNvaW5jaWRlZCB3aXRoIGFuIDcuOCBwZXJjZW50IGRlY2xpbmUgaW4gZm9yZWNhc3RzLiBQcm9maXQgZXN0aW1hdGVzIGZlbGwgMTQgcGVyY2VudCBpbiB0aGF0IHBhcnQgb2YgMjAxMSwgd2hlbiB0aGUgeWVuIHN0cmVuZ3RoZW5lZCA5LjIgcGVyY2VudC4gICAgICAgICAgICAgICAgICAgICAgICDigJhTdGlsbCBBdHRyYWN0aXZl4oCZIOKAnEVhcm5pbmdzIG1vbWVudHVtIGlzIHN0cm9uZyBhbmQgdmFsdWF0aW9ucyBhcmUgc3RpbGwgYXR0cmFjdGl2ZSzigJ0gc2FpZCBUb3NoaXl1a2kgTWl3YSwgaGVhZCBvZiBtb25leSBtYW5hZ2VtZW50IGZvciBKYXBhbmVzZSBlcXVpdHkgYXQgdGhlIGxvY2FsIHVuaXQgb2YgSW52ZXNjbyBMdGQuLCB3aGljaCBvdmVyc2VlcyAkNzI5IGJpbGxpb24gb2YgYXNzZXRzLiDigJxDeWNsaWNhbGx5LCBKYXBhbiBpcyByZWNvdmVyaW5nLiBUaGF04oCZcyB3aHkgdGhlIG1hcmtldCBzaG91bGQgYmUgaGlnaGVyLuKAnSBPbmUgcmVhc29uIGZvciBjYXV0aW9uIGlzIGhlaWdodGVuZWQgdm9sYXRpbGl0eS4gSW52ZXN0b3JzIGluIEphcGFuZXNlIHNoYXJlcyBoYXZlIGVuZHVyZWQgdGhlIGJpZ2dlc3Qgc3dpbmdzIHNpbmNlIHRoZSBmaW5hbmNpYWwgY3Jpc2lzLiBUaGUgVG9waXggaGFzIHJpc2VuIG9yIGZhbGxlbiBieSBhbiBhdmVyYWdlIG9mIDEuMzIgcGVyY2VudCBhIGRheSB0aGlzIHllYXIsIGNvbXBhcmVkIHdpdGggdGhlIDEwLXllYXIgYXZlcmFnZSBvZiAxIHBlcmNlbnQgYW5kIDEuOTUgcGVyY2VudCBpbiAyMDA4LCBhY2NvcmRpbmcgdG8gZGF0YSBjb21waWxlZCBieSBCbG9vbWJlcmcuIFRoZSBpbmRleCB0dW1ibGVkIG1vcmUgdGhhbiAxOCBwZXJjZW50IGZyb20gTWF5IDIyIHRvIEp1bmUgMTMsIGFib3V0IGZvdXIgdGltZXMgdGhlIGRyb3AgaW4gdGhlIE1TQ0kgQWxsLUNvdW50cnkgV29ybGQgSW5kZXgsIG9uIHNwZWN1bGF0aW9uIHRoYXQgcmVkdWNlZCBzdGltdWx1cyBmb3IgdGhlIFUuUy4gZWNvbm9teSB3b3VsZCBzbG93IHRoZSByYXRlIG9mIGdsb2JhbCBncm93dGguICAgICAgICAgICAgICAgICAgICAgICAgIE92ZXJ2YWx1ZWQgSmFwYW4/IEphcGFuIHJlbWFpbnMgb3ZlcnZhbHVlZCBhbmQgd2lsbCBzdWZmZXIgc3RlZXBlciBsb3NzZXMgc2hvdWxkIEFiZSBkZWNpZGUgdG8gYWxsb3cgYSBuYXRpb25hbCBzYWxlcyB0YXggdG8gaW5jcmVhc2UsIGFjY29yZGluZyB0byBTaGlua2luIEFzc2V0IE1hbmFnZW1lbnQgQ28uLCB0aGUgYmlnZ2VzdCBiZWFyIGFtb25nIDE4IEphcGFuZXNlIHN0cmF0ZWdpc3RzIHN1cnZleWVkIGJ5IEJsb29tYmVyZy4gSXQgcHJlZGljdHMgYSAzMCBwZXJjZW50IGRyb3AgZm9yIHRoZSBtZWFzdXJlIHRvIDgwMC4g4oCcRWFybmluZ3MgYXJlIGFscmVhZHkgbmVhciB0aGVpciBwZWFrIGFuZCBsaWtlbHkgdG8gc3RhcnQgZmFsbGluZyBzb29uLOKAnSBzYWlkIEhpcm9zaGkgRnVqaW1vdG8sIGEgZnVuZCBtYW5hZ2VyIGZvciBTaGlua2luLCB3aGljaCBtYW5hZ2VzIHRoZSBlcXVpdmFsZW50IG9mIGFib3V0ICQ2LjQgYmlsbGlvbiwgaW4gYSBwaG9uZSBpbnRlcnZpZXcgZnJvbSBUb2t5byBvbiBTZXB0LiA0LiDigJxFeHBlY3RhdGlvbnMgZm9yIEFiZW5vbWljcywgd2hpY2ggaGF2ZSBiZWVuIGRyaXZpbmcgdGhlIG1hcmtldCBmb3J3YXJkLCB3aWxsIGZhbGwgb2ZmLCBhbmQgaWYgdGhlIGdvdmVybm1lbnQgZGVjaWRlcyB0byByYWlzZSB0aGUgc2FsZXMgdGF4LCBhIG5lZ2F0aXZlIGltcGFjdCBvbiB0aGUgZWNvbm9teSB3aWxsIGJlIHVuYXZvaWRhYmxlLuKAnSBBIGxhdyBlbmFjdGVkIGxhc3QgeWVhciBhbGxvd3MgQWJlIHRvIHBlcm1pdCB0aGUgc2FsZXMgdGF4IHRvIHJpc2UgdG8gOCBwZXJjZW50IGluIEFwcmlsIGFuZCAxMCBwZXJjZW50IGluIDIwMTUgZnJvbSA1IHBlcmNlbnQgdG9kYXksIG9yIHRvIGhvbGQgb2ZmIGlmIGhlIGNvbmNsdWRlcyBKYXBhbuKAmXMgZWNvbm9teSBpc27igJl0IHN0cm9uZyBlbm91Z2guIFJhaXNpbmcgdGhlIGxldnkgd291bGQgcmVkdWNlIGdyb3NzIGRvbWVzdGljIHByb2R1Y3QgMS40MiBwZXJjZW50YWdlIHBvaW50cyBpbiB0aGUgZmlzY2FsIHllYXIgdG8gTWFyY2ggMjAxNSwgYWNjb3JkaW5nIHRvIGEgU2VwdC4gMyByZXBvcnQgYnkgRGFpd2EgSW5zdGl0dXRlIG9mIFJlc2VhcmNoIEx0ZC4gICAgICAgICAgICAgICAgICAgICAgICAgIFByb2ZpdCBPdXRsb29rIFNvbnksIHRoZSBjb3VudHJ54oCZcyBOby4gMSBjb25zdW1lci1lbGVjdHJvbmljcyBleHBvcnRlciwgbGlmdGVkIGl0cyByZXZlbnVlIG91dGxvb2sgYnkgNS4zIHBlcmNlbnQgYWZ0ZXIgZmlyc3QtcXVhcnRlciBwcm9maXQgdG9wcGVkIGVzdGltYXRlcy4gVGhlIFRva3lvLWJhc2VkIG1hbnVmYWN0dXJlciBzYWlkIGluIE1heSBpdOKAmXMgYXNzdW1pbmcgYW4gZXhjaGFuZ2UgcmF0ZSBvZiA5MCB5ZW4gdG8gdGhlIGRvbGxhciBmb3IgdGhlIGZpc2NhbCB5ZWFyLiBJdHMgcHJpY2UtZWFybmluZ3MgcmF0aW8gaGFzIGZhbGxlbiA0NSBwZXJjZW50IHRvIDI5Ljcgc2luY2UgTWF5LiBIb25kYSBhbmQgRnVqaSBIZWF2eSBJbmR1c3RyaWVzIEx0ZC7igJlzIFN1YmFydSBsZWQgVS5TLiBzYWxlcyBnYWlucyBpbiBBdWd1c3QgYXMgYXV0byBkZW1hbmQgYmVhdCBwcm9qZWN0aW9ucyBhbmQgQXNpYS0gYmFzZWQgY2FybWFrZXJzLCBidW95ZWQgYnkgVG95b3RhIE1vdG9yIENvcnAuLCBjb21iaW5lZCBmb3IgdGhlaXIgYmVzdCBtb250aCBldmVyLiBIb25kYeKAmXMgZGVsaXZlcmllcyBqdW1wZWQgMjcgcGVyY2VudCwgdG9wcGluZyBhbmFseXN0c+KAmSBlc3RpbWF0ZXMsIGFuZCBUb3lvdGEgb3V0c29sZCBGb3JkIE1vdG9yIENvLiBmb3IgYSBzZWNvbmQgbW9udGggaW4gYSByb3cuIE5ldCBpbmNvbWUgYXQgVG95b3RhIHdpbGwgY2xpbWIgdG8gYSBzaXgteWVhciBoaWdoIGZvciB0aGUgeWVhciB0aHJvdWdoIE1hcmNoIDIwMTQsIEphcGFu4oCZcyBsYXJnZXN0IGNvbXBhbnkgYnkgbWFya2V0IHZhbHVlIHNhaWQgaW4gQXVndXN0LCB3aGVuIGl0IHJhaXNlZCBpdHMgZm9yZWNhc3QgYnkgOCBwZXJjZW50LiBUaGUgYXV0b21ha2Vy4oCZcyBzaGFyZXMgdHJhZGUgZm9yIDE1LjkgdGltZXMgcmVwb3J0ZWQgcHJvZml0LCBjb21wYXJlZCB3aXRoIGFib3V0IDIyIGp1c3Qgb3ZlciB0aHJlZSBtb250aHMgYWdvLiAgICAgICAgICAgICAgICAgICAgICAgICAgQXV0byBDb21wYW5pZXMgVGhlIG5hdGlvbuKAmXMgc2l4IGJpZ2dlc3QgY2FybWFrZXJzIHJlcG9ydGVkIHRvdGFsIG5ldCBpbmNvbWUgb2YgYWJvdXQgODQ4IGJpbGxpb24geWVuIGZvciB0aGUgdGhyZWUgbW9udGhzIGVuZGVkIEp1bmUsIGJlYXRpbmcgYW5hbHlzdCBlc3RpbWF0ZXMgYnkgMTQgcGVyY2VudC4gRXhwb3J0ZXJzIGluIHRoZSBUb3BpeCBnZW5lcmFsbHkgdXNlIGEgeWVuIHZhbHVlIG9mIDkzLjUgcGVyIGRvbGxhciBmb3IgZm9yZWNhc3QgZWFybmluZ3MsIGFjY29yZGluZyB0byBPa2FzYW4gU2VjdXJpdGllcyBDby4gVGhlIGN1cnJlbmN5IGhhc27igJl0IGJlZW4gc3Ryb25nZXIgdGhhbiB0aGF0IGxldmVsIHNpbmNlIEFwcmlsLCBnaXZpbmcgY29tcGFuaWVzIGEgYm9vc3QgZm9yIGJlYXRpbmcgZXN0aW1hdGVzLCBkYXRhIGNvbXBpbGVkIGJ5IEJsb29tYmVyZyBzaG93LiBFYXJuaW5ncyBhdCBmaW5hbmNpYWwgY29tcGFuaWVzLCB3aGljaCBhY2NvdW50IGZvciBhYm91dCAxOSBwZXJjZW50IG9mIHRoZSBUb3BpeCBpbmRleCwgYXJlIGFsc28gc3VyZ2luZy4gTmV0IGluY29tZSBhdCBKYXBhbuKAmXMgdGhyZWUgYmlnZ2VzdCBiYW5rcyBjbGltYmVkIDYzIHBlcmNlbnQgaW4gdGhlIGZpcnN0IGZpc2NhbCBxdWFydGVyIGZyb20gYSB5ZWFyIGVhcmxpZXIgb24gaGlnaGVyIGZlZSBpbmNvbWUgYW5kIGVxdWl0eSBpbnZlc3RtZW50cywgYWNjb3JkaW5nIHRvIHRoZWlyIGVhcm5pbmdzIHN0YXRlbWVudHMuIEZpcnN0LXF1YXJ0ZXIgcHJvZml0IGF0IE5vbXVyYSwgdGhlIGNvdW50cnnigJlzIGxhcmdlc3Qgc2VjdXJpdGllcyBmaXJtLCBzb2FyZWQgdG8gNjUuOSBiaWxsaW9uIHllbiBmcm9tIDEuOSBiaWxsaW9uIHllbiwgYXMgdGhlIHN0b2NrIHJhbGx5IHNwdXJyZWQgYnJva2VyYWdlIGNvbW1pc3Npb25zIGFuZCBmZWVzIGZyb20gbWFuYWdpbmcgc2hhcmUgc2FsZXMuICAgICAgICAgICAgICAgICAgICAgICAgICAgQWJl4oCZcyBBcnJvd3MgVGhlIHllbiBzbHVtcGVkIGFzIEFiZeKAmXMgTGliZXJhbCBEZW1vY3JhdGljIFBhcnR5IHJlY2xhaW1lZCBwb3dlciwgcHJvbWlzaW5nIOKAnHRocmVlIGFycm93c+KAnSBvZiBtb25ldGFyeSBlYXNpbmcsIGZpc2NhbCBzdGltdWx1cyBhbmQgcmVmb3JtcyB0byBib29zdCB0aGUgZWNvbm9teS4gVGhlIGdvdmVybm1lbnQgd2lsbCBzcGVuZCAxMC4zIHRyaWxsaW9uIHllbiB0byBzcHVyIGdyb3d0aCBhbmQgZW5jb3VyYWdlIHByaXZhdGUgaW52ZXN0bWVudCwgb2ZmaWNpYWxzIHNhaWQgaW4gSmFudWFyeSwgYmVmb3JlIHRoZSBCYW5rIG9mIEphcGFuIG9uIEFwcmlsIDQgcGxlZGdlZCB0byBkb3VibGUgdGhlIG1vbmV0YXJ5IGJhc2UgaW4gdHdvIHllYXJzIHRvIHJlYWNoIGEgMiBwZXJjZW50IGluZmxhdGlvbiBnb2FsLiBQcm9maXQgYXQgVG9waXggY29tcGFuaWVzIHRoaXMgcmVwb3J0aW5nIHNlYXNvbiBqdW1wZWQgOTMgcGVyY2VudCBmcm9tIHRoZSBwcmV2aW91cyBxdWFydGVyLCBjb21wYXJlZCB0byBhIDMuMyBwZXJjZW50IGdhaW4gZm9yIGNvbXBhbmllcyBpbiB0aGUgUyZQIDUwMC4gSmFwYW5lc2Ugb3V0cHV0IHJvc2UgYW4gYW5udWFsaXplZCAyLjYgcGVyY2VudCBpbiB0aGUgdGhyZWUgbW9udGhzIGVuZGVkIEp1bmUsIGFmdGVyIGdhaW5pbmcgMy44IHBlcmNlbnQgdGhlIHByaW9yIHF1YXJ0ZXIuIOKAnE1vbmV0YXJ5IGVhc2luZyBoYXMgZHJpdmVuIHN0b2NrcyB1cHdhcmQgYW5kIHJldmVyc2VkIHRoZSB5ZW4gdHJlbmQsIGJ1dCBpdHMgaW1wYWN0IGhhcyBvbmx5IGJlZW4gZmFjdG9yZWQgaW4gdG8gYSBzbWFsbCBleHRlbnQs4oCdIHNhaWQgQk5ZIE1lbGxvbuKAmXMgS2FzaGltYS4g4oCcVGhlIG90aGVyIHR3byBhcnJvd3Mgb2YgQWJl4oCZcyBwb2xpY3kgcHJvZ3JhbSwgZmlzY2FsIHN0aW11bHVzIGFuZCBncm93dGggc3RyYXRlZ3ksIGNhbiBhbHNvIGJlIGV4cGVjdGVkIHRvIGhhdmUgYSBwb3NpdGl2ZSBlZmZlY3QgaW4gdGhlIG1lZGl1bSB0byBsb25nIHRlcm0uIEVhcm5pbmdzIHBlciBzaGFyZSBhcmUgbGlrZWx5IHRvIHJldHVybiB0byBwcmUtTGVobWFuIGxldmVscyBhbmQgdGhlIFRvcGl4IHdpbGwgcHJvYmFibHkgZG8gdGhlIHNhbWUu4oCd</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUD78NiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGI2MDAzZDA4ZmZkMTNmZTU=</field><field name="symbol" class="java.lang.String">rO0ABXQAA01UVQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEBFzSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAZAAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAZXCj1wo9c</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAY9cKPXCj2</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAZXCj1wo9c</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAZXCj1wo9c</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAABBL4A==</field><field name="id" class="java.lang.String">rO0ABXQAEDc4MTY1NWQ3YTllZmFiYjM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFDjAAAA==</field></document></documents><date>2015-05-07T12:13:06-0500</date></cacheEntry>
<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hTd2l0emVybGFuZHMgMzAwIGJhbmtzIGhhdmUgZW5saXN0ZWQgYW4gYXJteSBvZiBhdWRpdG9ycyBsYXd5ZXJzIGFuZCBpbmhvdXNlIHdvcmtlcnMgYXMgdGhleSByYWNlIHRvIG1lZXQgYSBEZWMgMzEgZGVhZGxpbmUgb24gd2hldGhlciB0byBzZWVrIFVTIGFtbmVzdHkgZm9yIGhlbHBpbmcgQW1lcmljYW4gY2xpZW50cyBldmFkZSB0YXhlcyBCYW5rcyBpbiBTd2l0emVybGFuZCB0aGUgbGFyZ2VzdCBjcm9zc2JvcmRlciBmaW5hbmNpYWwgY2VudGVyIHdpdGggMjIgdHJpbGxpb24gb2YgYXNzZXRzIGFyZSBjbG9zZWx5IGV4YW1pbmluZyBhY2NvdW50cyBiZWZvcmUgam9pbmluZyBhIGRpc2Nsb3N1cmUgcHJvZ3JhbSB0aGF0cyB0aGUgYnJvYWRlc3QgYXNzYXVsdCBpbiBhIGZpdmV5ZWFyIFVTIGNyYWNrZG93biBvbiBvZmZzaG9yZSB0YXggZXZhc2lvbiBUaGUgaGFyZCB3b3JrIGlzIGdldHRpbmcgdG8gdGhlIHJpZ2h0IGRhdGEgYW5kIGN1dHRpbmcgdGhyb3VnaCBjb21wbGV4IHN5c3RlbXMgdG8gZ2V0IGFsbCB0aGUgZmFjdHMgb24gdGhlIHRhYmxlIHNhaWQgRGF2aWQgRmlkYW4gYSBwYXJ0bmVyIGluIERlbG9pdHRlIExMUHMgZm9yZW5zaWMgc2VydmljZXMgcHJhY3RpY2UgaW4gU3dpdHplcmxhbmQgVGhhdHMgdmVyeSBleHBlbnNpdmUgYW5kIGludm9sdmVzIGxhd3llcnMgZm9yZW5zaWMgYWNjb3VudGFudHMgYW5kIGJhbmsgZW1wbG95ZWVzIEl0IGNhbiB0YWtlIDIwIDMwIG9yIDQwIHBlb3BsZSBvdmVyIGZvdXIgb3IgZml2ZSBtb250aHMgZm9yIGJpZ2dlciBiYW5rcyBCYW5rcyB3aXRoIHJlYXNvbiB0byBiZWxpZXZlIHRoZXkgdmlvbGF0ZWQgdGF4IGxhd3MgY2FuIGFzayB0aGUgSnVzdGljZSBEZXBhcnRtZW50IHRvIGZvcmdvIHByb3NlY3V0aW9uIEluIHR1cm4gYmFua3MgbXVzdCBkaXNjbG9zZSBob3cgdGhleSBoZWxwZWQgQW1lcmljYW5zIGhpZGUgYXNzZXRzIGhhbmQgb3ZlciBkYXRhIG9uIHVuZGVjbGFyZWQgYWNjb3VudHMgYW5kIHBheSBwZW5hbHRpZXMgVGhvc2UgdGhhdCBkb250IGFwcGx5IGNvdWxkIGZhY2UgY3JpbWluYWwgcHJvYmVzIGxpa2UgdGhvc2UgYWdhaW5zdCAxNCBiYW5rcyBpbmNsdWRpbmcgQ3JlZGl0IFN1aXNzZSBHcm91cCBBRyBIU0JDIEhvbGRpbmdzIFBsYyBhbmQgQmFzbGVyIEthbnRvbmFsYmFuayBUaGUgU3dpc3MgZ292ZXJubWVudCBlbmNvdXJhZ2VzIGJhbmtzIHRvIGpvaW4gdGhlIHByb2dyYW0gYW5ub3VuY2VkIEF1ZyAyOSBZZXQgdGhlIFN3aXNzIEJhbmtlcnMgQXNzb2NpYXRpb24gY3JpdGljaXplcyB0aGUgcHJvZ3JhbXMgY29zdCBhbmQgdmV4aW5nIHF1ZXN0aW9ucyBzdWNoIGFzIHdobyBxdWFsaWZpZXMgYXMgYSBVUyBjbGllbnQgYW5kIHdoYXQgYXNzZXRzIGFyZSBjb25zaWRlcmVkIHVudGF4ZWQgVGhlIGFuc3dlcnMgY291bGQgZGV0ZXJtaW5lIGhvdyBtdWNoIGEgYmFuayBwYXlzIGluIHBlbmFsdGllcyBEZWVwIEFuYWx5c2lzIEl0cyBuZWNlc3NhcnkgZm9yIHRoZSBiYW5rcyB0byBkbyBhIGRlZXAgYW5hbHlzaXMgb2YgdGhlaXIgY2xpZW50cyBhbmQgdGhlIGhpc3Rvcnkgb2YgdGhvc2UgcmVsYXRpb25zaGlwcyBzYWlkIFNCQSBzcG9rZXN3b21hbiBTaW5keSBTY2htaWVnZWwgVGhhdHMgcmVhbGx5IGV4cGVuc2l2ZSBhbmQgdGhhdHMgd2h5IHRoZSBwcm9ncmFtIGlzIGF0IHRoZSBsaW1pdCBvZiB0b2xlcmFiaWxpdHkgZm9yIHRoZSBiYW5rcyBJdHMgcmVhbGx5IGEgcGFpbmZ1bCBwcm9ncmFtIEF0IGxlYXN0IDMzIGhhdmUgYW5ub3VuY2VkIHRoZXkgd2lsbCBqb2luIHNvbWUgZm9ybSBvZiB0aGUgcHJvZ3JhbSBpbmNsdWRpbmcgMTkgY2FudG9uYWwgYmFua3Mgb3IgcmVnaW9uYWwgbGVuZGVycyB0eXBpY2FsbHkgb3duZWQgYnkgcmVnaW9uYWwgZ292ZXJubWVudHMgVGhleSBpbmNsdWRlIFVuaW9uIEJhbmNhaXJlIFByaXZlZSB0aGUgR2VuZXZhYmFzZWQgYmFuayBmb3VuZGVkIGJ5IEVkZ2FyIGRlIFBpY2Npb3R0byBpbiAxOTY5IEVkbW9uZCBkZSBSb3Roc2NoaWxkIEdyb3VwIHRoZSBHZW5ldmFiYXNlZCB3ZWFsdGggbWFuYWdlciBvd25lZCBieSBCYXJvbiBCZW5qYW1pbiBkZSBSb3Roc2NoaWxkIEVGRyBJbnRlcm5hdGlvbmFsIEFHIGNvbnRyb2xsZWQgYnkgR3JlZWsgYmlsbGlvbmFpcmUgU3Bpcm8gTGF0c2lzIGFuZCBoaXMgZmFtaWx5IGFuZCBCZXJuYmFzZWQgVmFsaWFudCBIb2xkaW5nIEFHIEJhbmtzIGV4cHJlc3NlZCBjb25mdXNpb24gb3ZlciBob3cgdGhlIEp1c3RpY2UgRGVwYXJ0bWVudCB3aWxsIGNhbGN1bGF0ZSBwZW5hbHRpZXMgYW5kIHRyZWF0IGxlbmRlcnMgdGhhdCBhcmUgbGVzcyBjdWxwYWJsZSBpbiBoaWRpbmcgYXNzZXRzIGZyb20gdGhlIEludGVybmFsIFJldmVudWUgU2VydmljZSBzYWlkIEpvc2h1YSBNaWxncmltIGFuIGF0dG9ybmV5IGF0IERlY2hlcnQgTExQIFBvdGVudGlhbCBGaW5lcyBUbyBnYWluIG5vbnByb3NlY3V0aW9uIGRlYWxzIGJhbmtzIG11c3QgcGF5IDIwIHBlcmNlbnQgb2YgdGhlIHZhbHVlIG9mIGFjY291bnRzIG5vdCBkaXNjbG9zZWQgdG8gdGhlIElSUyBvbiBBdWcgMSAyMDA4IDMwIHBlcmNlbnQgZm9yIHN1Y2ggYWNjb3VudHMgb3BlbmVkIGJldHdlZW4gdGhlbiBhbmQgRmVicnVhcnkgMjAwOSBhbmQgNTAgcGVyY2VudCBmb3IgYWNjb3VudHMgb3BlbmVkIGFmdGVyd2FyZCBUaGUgdmlldyBzZWVtcyB0byBiZSB0aGF0IHRoZSBwZW5hbHR5IHJhdGVzIGZvciB0aGlzIHByb2dyYW0gY2FtZSBvdXQgd2F5IHRvbyBoaWdoIHNhaWQgTWlsZ3JpbSB3aG8gaXMgYWR2aXNpbmcgYSBTd2lzcyBiYW5rIEEgbG90IG9mIGJhbmtzIGFyZSBoYXZpbmcgZGlmZmljdWx0eSBkZWNpZGluZyB3aGV0aGVyIHRvIGdvIGludG8gYSBwcm9ncmFtIHdoaWNoIGRvZXNudCB0YWtlIGludG8gYWNjb3VudCB0aGUgbGV2ZWwgb2YgY3VscGFiaWxpdHkgYW5kIGluc3RlYWQgdHJlYXRzIGFsbCBiYW5rcyB0aGUgc2FtZSBCYW5rcyBhcmUgYWxzbyB3YWl0aW5nIHRvIGZpbmQgb3V0IHdoZXRoZXIgU3dpdHplcmxhbmRzIGZpbmFuY2lhbCBzdXBlcnZpc29yeSBhdXRob3JpdHkgRmlubWEgd2lsbCBlbmNvdXJhZ2UgdGhlbSB0byBtYWtlIHByb3Zpc2lvbnMgZm9yIGNvc3RzIHJlbGF0ZWQgdG8gdGhlIHByb2dyYW0gYW5kIHBvdGVudGlhbCBmaW5lcyBpbiB0aGlzIHllYXJzIGFjY291bnRzIEJhc2xlciBLYW50b25hbGJhbmsgYW5ub3VuY2VkIGEgMTAwIG1pbGxpb24gU3dpc3MgZnJhbmMgMTEyIG1pbGxpb24gcHJvdmlzaW9uIG9uIERlYyAxOSB3aGlsZSBDcmVkaXQgU3Vpc3NlIGhhcyBzZXQgYXNpZGUgMjk1IG1pbGxpb24gZnJhbmNzIGZvciBVUyB0YXggbWF0dGVycyAyMDEzIFByb3Zpc2lvbiBGaW5tYSBzYWlkIGl0IHdhcyBnZW5lcmFsbHkgaW4gZmF2b3Igb2YgYmFua3MgbWFraW5nIGEgcHJvdmlzaW9uIHRoaXMgeWVhciBhY2NvcmRpbmcgdG8gYSBsZXR0ZXIgZGF0ZWQgTm92IDIyIHRoYXQgd2FzIHB1Ymxpc2hlZCB5ZXN0ZXJkYXkgb24gdGhlIHdlYnNpdGUgb2YgU29ubnRhZ3NaZWl0dW5nIG5ld3NwYXBlciBXaGlsZSB0aGF0IGxldHRlciB3YXMgbm9uYmluZGluZyB0aGUgcmVndWxhdG9yIG1heSBpc3N1ZSBmdXJ0aGVyIGd1aWRhbmNlIFdlIGNhbm5vdCBleGNsdWRlIHRoYXQgd2Ugd2lsbCBwdXQgb3V0IHN1Y2ggYSByZWNvbW1lbmRhdGlvbiBpbiB0aGUgZnV0dXJlIFZpbnplbnogTWF0aHlzIGEgc3Bva2VzbWFuIGZvciBCZXJuIFN3aXR6ZXJsYW5kYmFzZWQgRmlubWEgc2FpZCB0b2RheSBUaGUgcHJvZ3JhbSBoYXMgcHJvdm9rZWQgU3dpc3MgZGViYXRlIG9uIHdoZXRoZXIgdGhlIFVTIHdlbnQgdG9vIGZhciBpbiB0cnlpbmcgdG8gcGllcmNlIGJhbmtpbmcgc2VjcmVjeSB0aGF0IHByb3RlY3RlZCBBbWVyaWNhbiB0YXggY2hlYXRzIGZvciBkZWNhZGVzIFRoZSBjcmFja2Rvd24gZXNjYWxhdGVkIGFmdGVyIDIwMDkgd2hlbiB0aGUgVVMgY2hhcmdlZCBVQlMgQUcgdGhlIGJpZ2dlc3QgU3dpc3MgYmFuayB3aXRoIGhlbHBpbmcgQW1lcmljYW5zIGhpZGUgMjAgYmlsbGlvbiBpbiBhc3NldHMgVUJTIGF2b2lkZWQgcHJvc2VjdXRpb24gYnkgYWRtaXR0aW5nIGl0IGZvc3RlcmVkIHRheCBldmFzaW9uIGFuZCBwYXlpbmcgNzgwIG1pbGxpb24gSXQgaGFuZGVkIG92ZXIgNDcwMCBhY2NvdW50cyBUaGUgVVMgcHJvc2VjdXRlZCAxMDAgdGF4cGF5ZXJzIGJhbmtlcnMgbGF3eWVycyBhbmQgYWR2aXNlcnMgZm9yIG9mZnNob3JlIHRheCBjcmltZXMgQXQgbGVhc3QgMzgwMDAgdGF4cGF5ZXJzIGF2b2lkZWQgcHJvc2VjdXRpb24gYnkgcGF5aW5nIGJhY2sgdGF4ZXMgYW5kIHBlbmFsdGllcyBhbmQgZGlzY2xvc2luZyB3aGljaCBvZmZzaG9yZSBiYW5rcyBhbmQgYWR2aXNlcnMgaGVscGVkIHRoZW0gaGlkZSBhc3NldHMgRm91ciBDYXRlZ29yaWVzIFRoZSBwcm9ncmFtIGRpdmlkZXMgYmFua3MgaW50byBmb3VyIGNhdGVnb3JpZXMgVGhlIDE0IGluIGNhdGVnb3J5IDEgYXJlIGV4Y2x1ZGVkIGJlY2F1c2Ugb2YgdGhlaXIgY3JpbWluYWwgcHJvYmVzIFRoZXkgaW5jbHVkZSBDcmVkaXQgU3Vpc3NlIHRoZSBzZWNvbmRiaWdnZXN0IFN3aXNzIGJhbmsgdGhlIFN3aXNzIHVuaXQgb2YgSFNCQyBFdXJvcGVzIGJpZ2dlc3QgYmFuayBKdWxpdXMgQmFlciBHcm91cCBMdGQgU3dpdHplcmxhbmRzIHRoaXJkbGFyZ2VzdCB3ZWFsdGggbWFuYWdlciBhbmQgWnVlcmNoZXIgS2FudG9uYWxiYW5rIHRoZSBsYXJnZXN0IHN0YXRlb3duZWQgcmVnaW9uYWwgYmFuayBCYW5rcyBtdXN0IG9wdCBieSBEZWMgMzEgZm9yIGVudHJ5IGludG8gY2F0ZWdvcnkgMiB3aGljaCBjb3VsZCBicmluZyB0aGVtIG5vbnByb3NlY3V0aW9uIGFncmVlbWVudHMgVGhleSBtdXN0IGRpc2Nsb3NlIHRoZSB0b3RhbCBudW1iZXIgb2YgVVMgYWNjb3VudHMgc2luY2UgMjAwOCB0aGVpciBoaWdoZXN0IGRvbGxhciB2YWx1ZSBhbmQgdGhlIGVtcGxveWVlcyB3aG8gbWFuYWdlZCB0aGVtIFRoZSBiYW5rcyBhbHNvIG11c3QgdXNlIGluZGVwZW5kZW50IHQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0wMy0yN1QwMDowMDowMFogVE8gMjAxMy0xMi0wM1Q1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDYzMzE=</field><field name="title" class="java.lang.String">rO0ABXQANkdvbGQgSW52ZXN0b3JzIFNlZWsgQWxwaW5lIEhhdmVuIGluIFN3aXNzIEFybXkgQnVua2Vycw==</field><field name="content" class="java.lang.String">rO0ABXQW8OKAnFRoaXMgYmFyIGlzIG9uZSBvZiB0aGUgYmVzdCBzZWxsZXJzLOKAnSBzYWlkIHRoZSBmb3JtZXIgVUJTIEFHIGJhbmtlciwgc3RhbmRpbmcgaW4gdGhlIHZhdWx0IG9mIGhpcyBTd2lzcyBnb2xkIGFuZCBzaWx2ZXIgdHJhZGluZyBjb21wYW55IFBybyBBdXJ1bSBhcyBoZSByZWFjaGVkIGludG8gYSBzdG9uZS1ncmV5IHNhZmUgaG9sZGluZyBuZWF0bHkgc3RhY2tlZCBjb2lucyBhbmQgc2VsZWN0ZWQgYSAxMDAgZ3JhbSB0YWJsZXQuIOKAnFlvdSBjYW4gYnJlYWsgaXQgaW50byBpbmRpdmlkdWFsIHBpZWNlcyBhbmQgdXNlIGl0IGFzIG1vbmV5IGluIGNhc2UgdGhlIEV1cm9wZWFuIFVuaW9uIGdvZXMgdW5kZXIu4oCdIEFzIHRoZSBldXJvLWFyZWEgd2VudCB0aHJvdWdoIGEgcmVjb3JkLWxvbmcgcmVjZXNzaW9uLCBhbmQgb25seSBlZGdlZCBiYWNrIHRvIGdyb3d0aCBsYXN0IHF1YXJ0ZXIsIGRlbWFuZCBmb3Igc3RvcmluZyBnb2xkIGJhcnMgYW5kIGNvaW5zIGluIFN3aXNzIHZhdWx0cyBoYXMgYmVlbiByaXNpbmcuIEV2ZW4gYXMgdGhlIHByaWNlIG9mIHRoZSBtZXRhbCBoYXMgZGVjbGluZWQgbW9yZSB0aGFuIDIwIHBlcmNlbnQgdGhpcyB5ZWFyLCBzb21lIGludmVzdG9ycyBzZWUgZ29sZCBhcyBsZXNzIHJpc2t5IHRoYW4gb3RoZXIgYXNzZXRzIHN1Y2ggYXMgYm9uZHMsIHdoZXJlIGRlYnRvcnMgbWF5IG5vdCBiZSBhYmxlIHRvIHBheSwgb3IgZXF1aXR5IGluIGEgY29tcGFueSB0aGF0IG1heSBnbyBvdXQgb2YgYnVzaW5lc3MuIOKAnEhpZ2gtbmV0LXdvcnRoIGluZGl2aWR1YWxzIGFyZSBkZXBlbmRlbnQgb24gdGhlIGhlYWx0aCBvZiB0aGUgZmluYW5jaWFsIHN5c3RlbSzigJ0gc2FpZCBPbGUgSGFuc2VuLCBoZWFkIG9mIGNvbW1vZGl0eSBzdHJhdGVneSBhcyBTYXhvIEJhbmsgQS9TIGluIENvcGVuaGFnZW4uIOKAnElmIHlvdSB0YWtlIHNvbWUgb2YgeW91ciBpbnZlc3RtZW50cyBvdXQgYW5kIHB1dCBpdCBpbiB0aGUgdmF1bHQsIHRoZW4geW91IGNhbiByZWR1Y2UgeW91ciBleHBvc3VyZS7igJ0gTW92ZW1lbnQgRGV0ZWN0b3JzIEF0IFBybyBBdXJ1bSwgbW92ZW1lbnQgYW5kIHZpYnJhdGlvbiBkZXRlY3RvcnMgYWRkIHByb3RlY3Rpb24gdG8gdGhlIGZvcm1lciBadWVyY2hlciBLYW50b25hbGJhbmsgYnJhbmNoIGluIEtpbGNoYmVyZywgYSBsYWtlc2lkZSBzdWJ1cmIgb2YgWnVyaWNoLiBDYW1lcmFzIGhhbmcgZnJvbSB0aGUgY2VpbGluZyB0byBmaWxtIGVtcGxveWVlcyBhcyB0aGV5IGZ1bGZpbGwgb3JkZXJzIGZyb20gY3VzdG9tZXJzIHdobyBjYW4gc3RvcmUgdmFsdWFibGVzIGluIG9uZSBvZiB0aGUgNzAwIHNhZmUgZGVwb3NpdCBib3hlcyBvciBidXkgdXAgdG8gMTAwLDAwMCBmcmFuY3MgKCQxMDcsMDAwKSBvZiBnb2xkIHdpdGggY2FzaCBvdmVyIHRoZSBjb3VudGVyIHdpdGhvdXQgcHJvb2Ygb2YgZnVuZHMgc3VjaCBhcyBhIGJhbmsgc3RhdGVtZW50LiBBYm91dCBoYWxmIG9mIEJ1Y2h3YWxkZXLigJlzIGN1c3RvbWVycyBhcmUgU3dpc3MsIHdpdGggRXVyb3BlYW5zIG1ha2luZyB1cCBtb3N0IG9mIHRoZSByZW1haW5pbmcgY2xpZW50cy4gUHJvIEF1cnVtLCB3aGljaCBhbHNvIGhhcyB1bml0cyBpbiBBdXN0cmlhIGFuZCBHZXJtYW55LCB0cmFkZXMg4oCcb3ZlciBhIGJpbGxpb24gZnJhbmNz4oCdIG9mIGdvbGQgcGVyIHllYXIsIEJ1Y2h3YWxkZXIgc2FpZC4gVGhlIEtpbGNoYmVyZyB2YXVsdCBob2xkcyBlbm91Z2ggZ29sZCBhbmQgc2lsdmVyIGZvciBvdmVyLXRoZS1jb3VudGVyIHB1cmNoYXNpbmcgYW5kIG9ubGluZSBzaGlwbWVudHMuIFRoZSBzcG90IHByaWNlIGZvciBnb2xkIGhhcyByaXNlbiA2NSBwZXJjZW50IHRvICQxLDMyNyBhbiBvdW5jZSBpbiB0aGUgbGFzdCBmaXZlIHllYXJzLCBvdXRwZXJmb3JtaW5nIHRoZSBnbG9iYWwgTVNDSSBXb3JsZCBJbmRleOKAmXMgMTQgcGVyY2VudCBnYWluLiBTdGlsbCwgdGhlIGJldHMgb24gZ29sZCBiZWluZyBhIHNhZmUgaGF2ZW4gbWF5IGJhY2tmaXJlIGZvbGxvd2luZyB0aGlzIHllYXLigJlzIHByaWNlIGRlY2xpbmUuIAoKQUJOIEFtcm8gR3JvdXAgTlYgYW5hbHlzdHMgcHJlZGljdCB0aGUgcHJpY2Ugd2lsbCBhdmVyYWdlICQxLDAwMCBuZXh0IHllYXIgYW5kICQ4NDAgaW4gMjAxNSBiZWNhdXNlIGEgc3Ryb25nZXIgVS5TLiBlY29ub215IHdpbGwgbGltaXQgZ29sZOKAmXMgYXBwZWFsLiBOZXQgc2hvcnQgcG9zaXRpb25zLCBvciBiZXRzIG9uIGZhbGxpbmcgZnV0dXJlcyBwcmljZXMgaW4gTmV3IFlvcmssIGdhaW5lZCBuaW5lZm9sZCBzaW5jZSBOb3ZlbWJlciwgVS5TLiBDb21tb2RpdHkgRnV0dXJlcyBUcmFkaW5nIENvbW1pc3Npb24gZGF0YSBzaG93LiBMZWhtYW4gQnJvdGhlcnMgRXZlbiBzbywgc29tZSBpbnZlc3RvcnMgc2VlIGdvbGQgYXMgdGhlIHVsdGltYXRlIGxvbmctdGVybSB3ZWFsdGggcHJvdGVjdGlvbiBhc3NldC4g4oCcU2luY2UgdGhlIExlaG1hbiBCcm90aGVycyBiYW5rcnVwdGN5IGFuZCB0aGUgYmFpbG91dCBvZiBVQlMsIHBlb3BsZSBhcmUgbW9yZSBjYXJlZnVsIGFib3V0IHdoZXJlIHRoZXkgcHV0IHRoZWlyIG1vbmV5LOKAnSBCdWNod2FsZGVyIHNhaWQuIEphY3F1ZXMgUmFsbCwgYSBGcmFua2Z1cnQtYmFzZWQgYnJva2VyIGF0IEV1cm8gUGFjaWZpYyBDYXBpdGFsIEluYy4sIHdobyBzdGFydGVkIGludmVzdGluZyBpbiBnb2xkIGFuZCBzaWx2ZXIgaW4gMjAwNyBiZWNhdXNlIG9mIGNvbmNlcm5zIGFib3V0IGdvdmVybm1lbnQgZGVidCBhbmQgaW5mbGF0aW9uLCBzYWlkIGhl4oCZcyBub3Qgd29ycmllZCBhYm91dCBnb2xk4oCZcyBzbHVtcCB0aGlzIHllYXIgYXMgaGUgcHJlZGljdHMgaW5jcmVhc2luZyBkZW1hbmQgZm9yIG1ldGFsIGFzc2V0cy4g4oCcSeKAmW0gaG9sZGluZyA4MCBwZXJjZW50IG9mIG15IHBvcnRmb2xpbyBpbiBwcmVjaW91cyBtZXRhbHMs4oCdIGhlIHNhaWQuIEZvcnQgS25veCBHb2xk4oCZcyBhc3N1bWVkIHNhZmUgaGF2ZW4gcXVhbGl0aWVzIGFyZSBub3QgbmV3IGFzIGdvdmVybm1lbnRzIG9uY2UgdXNlZCBob2xkaW5ncyBvZiB0aGUgbWV0YWwgdG8gYmFjayBjdXJyZW5jaWVzLiBJbiAxOTMzLCB0aGUgVS5TLiBmb3JjZWQgcHJpdmF0ZSBvd25lcnMgdG8gc2VsbCBnb2xkIHRvIHRoZSBGZWRlcmFsIFJlc2VydmUsIHdpdGggdGhlIHRyZWFzdXJ5IGJ1aWxkaW5nIGEgZGVwb3NpdG9yeSBhdCBGb3J0IEtub3guIFUuUy4gUHJlc2lkZW50IFJpY2hhcmQgTml4b24gc2V2ZXJlZCB0aGUgZG9sbGFy4oCZcyBwZWcgdG8gZ29sZCBpbiAxOTcxLiBTd2l0emVybGFuZCB3YXMgb25lIG9mIHRoZSBsYXN0IGNvdW50cmllcyB0byBsaW5rIGl0cyBjdXJyZW5jeSB0byBnb2xkIHVudGlsIGEgcHVibGljIHZvdGUgaW4gMTk5OSBlbmRlZCBpdC4gVG9kYXksIGRlY29tbWlzc2lvbmVkIFN3aXNzIG1pbGl0YXJ5IGJ1bmtlcnMgYXJlIGJlaW5nIGNvbnZlcnRlZCBpbnRvIHZhdWx0cyB0byBtZWV0IHJpc2luZyBwcml2YXRlIGRlbWFuZCwgc2FpZCBCdWNod2FsZGVyLiBBIGZvcm1lciBTd2lzcyBBaXIgRm9yY2UgY29tbWFuZCBhbmQgY29udHJvbCBjZW50ZXIgaW4gVXJpIGlzIG5vdyBhIHZhdWx0IG93bmVkIGJ5IGRhdGEgc3RvcmFnZSBjb21wYW55IERlbHRhbGlzLiBBdCBTd2lzc2RhdGFzYWZlLCBiYXNlZCBpbiBBbXN0ZWcsIGludmVzdG9ycyBjYW4gc3RvcmUgdmFsdWFibGVzIGFuZCBhcnQgaW4gc2VjdXJlIGxvY2F0aW9ucyBpbiB0aGUgU3dpc3MgQWxwcy4gU3dpdHplcmxhbmTigJlzIGdvbGQgYnVzaW5lc3MgaXMgYWxzbyBzcHVycmVkIGJ5IGl0cyBoaXN0b3J5IGFzIGEgbmF0aW9uIHRoYXQgaGFzbuKAmXQgZm91Z2h0IGEgZm9yZWlnbiB3YXIgc2luY2UgaXRzIG5ldXRyYWxpdHkgd2FzIGVzdGFibGlzaGVkIGJ5IHRoZSBUcmVhdHkgb2YgUGFyaXMgaW4gMTgxNS4gU3dpdHplcmxhbmTigJlzIGdyaXAgb24gZ29sZCB0cmFkaW5nLCBsZWQgYnkgVUJTIGFuZCBDcmVkaXQgU3Vpc3NlIEdyb3VwIEFHLCBncmV3IGluIHRoZSBsYXRlIDE5NDBzIHdoZW4gTG9uZG9u4oCZcyBnb2xkIG1hcmtldCByZW1haW5lZCBjbG9zZWQgZm9yIHNvbWUgdGltZSBhZnRlciBXb3JsZCBXYXIgSUkuIE5vIFdhciDigJxTd2l0emVybGFuZCBpcyBhIG5ldXRyYWwgY291bnRyeSBhbmQgYWx3YXlzIGhhcyBiZWVuLOKAnSBzYWlkIEFsbGFuIEZpbm4sIGdsb2JhbCBjb21tb2RpdGllcyBkaXJlY3RvciBhdCBsb2dpc3RpY3MgY29tcGFueSBNYWxjYSBBbWl0LCBhZGRpbmcgdGhhdCBlbnF1aXJpZXMgYWJvdXQgc3RvcmluZyBnb2xkIGF0IGl0cyB2YXVsdHMgaW4gU2luZ2Fwb3JlIGFuZCBTd2l0emVybGFuZCBoYXZlIHBpY2tlZCB1cCBpbiB0aGUgbGFzdCBuaW5lIG1vbnRocy4g4oCcSXTigJlzIGEgc2FmZSBoYXZlbiB3aGljaCBpcyBwZXJjZWl2ZWQgdG8gYmUgZXhlbXB0IGZyb20gcG9saXRpY2FsIGludGVyZmVyZW5jZS7igJ0gU3RpbGwsIHRoYXQgc3RhdHVzIGlzIHVuZGVyIHByZXNzdXJlIGFzIHRoZSBVLlMuIGFuZCBldXJvLSBhcmVhIGNvdW50cmllcyBwcmVzcyBmb3IgYXV0b21hdGljIGV4Y2hhbmdlIG9mIGluZm9ybWF0aW9uLCBicmVha2luZyBvcGVuIGJhbmsgc2VjcmVjeS4gQnVjaHdhbGRlciB3aWxsIGFzayBVLlMuIGNsaWVudHMgdG8gbGVhdmUgZnJvbSB0aGUgYmVnaW5uaW5nIG9mIG5leHQgeWVhciwgZWNob2luZyBhIHNpbWlsYXIgZGVjaXNpb24gYW5ub3VuY2VkIGJ5IHRyYW5zcG9ydCBjb21wYW55IFZpYSBNYXQgaW4gRmVicnVhcnkuIEdvbGQgdHJhZGVycyBoYXZlIHRoZSBzYW1lIGtub3cteW91ci1jdXN0b21lciByZXF1aXJlbWVudHMgYXMgYmFua3MsIGFuZCB0aGUgYnVyZGVuIG9mIGNvbXBsaWFuY2UgbWVhbnMgaXTigJlzIG5vdCB3b3J0aCBrZWVwaW5nIFUuUy4gY3VzdG9tZXJzLiBQcm8gQXVydW0gaGFzIHNldCB1cCBhIHVuaXQgaW4gSG9uZyBLb25nIHRvIGdpdmUgaW52ZXN0b3JzIGdlb2dyYXBoaWMgYW5kIHBvbGl0aWNhbCBkaXZlcnNpdHkuIFNpbmdhcG9yZSBpcyBhbHNvIGV4cGFuZGluZyBpdHMgb3duIGdvbGQgbWFya2V0IHdpdGggYmFua3MgZnJvbSBVQlMgdG8gSlBNb3JnYW4gb3BlbmluZyB2YXVsdHMgaW4gdGhlIGNvdW50cnkuIEF1c3RyYWxpYSAmIE5ldyBaZWFsYW5kIEJhbmtpbmcgR3JvdXAgTHRkLiBzdGFydGVkIGEgNTAgbWV0cmljLXRvbiBnb2xkIGJ1bGxpb24gdmF1bHQgaW4gU2luZ2Fwb3JlIGxhc3QgbW9udGgsIGFkZGluZyB0byBzdG9yYWdlIGluIEhvbmcgS29uZywgUGVydGggYW5kIFp1cmljaC4gRGVzcGl0ZSByaXNpbmcgZ2xvYmFsIGNvbXBldGl0aW9uIGFuZCByZWNlbnQgcHJpY2UgZGVjbGluZXMsIFN3aXR6ZXJsYW5kIHdpbGwgY29udGludWUgdG8gYXR0cmFjdCBnb2xkIGludmVzdG9ycywgc2FpZCBFZ29uIHZvbiBHcmV5ZXJ6LCBtYW5hZ2luZyBwYXJ0bmVyIGF0IE1hdHRlcmhvcm4gQXNzZXQgTWFuYWdlbWVudCBBRywgYW4gYXNzZXQgbWFuYWdlciB0YXJnZXRpbmcgaGlnaC1uZXQtd29ydGggaW5kaXZpZHVhbHMsIGFkZGluZyB0aGF0IGNsaWVudHMgZG9u4oCZdCB3YW50IHRvIGV2YWRlIHRheCBhbmQgaGlzIGNvbXBhbnkgb25seSBkZWFscyB3aXRoIGRlY2xhcmVkIGZ1bmRzLiBHb2xk4oCZcyBpbnZlc3RtZW50IHF1YWxpdGllcyBjb21iaW5lZCB3aXRoIHRoZSBjb3VudHJ54oCZcyAgbmV1dHJhbGl0eSBhbmQgc3RhYmxlIGRlbW9jcmF0aWMgc3lzdGVtIGFzIHdlbGwgYXMgdGhlICBvcHBvcnR1bml0eSB0byBrZWVwIGFzc2V0cyBvdXRzaWRlIHRoZSBiYW5raW5nIHN5c3RlbSBhbGxvdyB0byAgcHJlc2VydmUgd2VhbHRoLCBoZSBzYWlkLiAnJ0l0J3MgdGhlIHVsdGltYXRlIGZvcm0gb2Ygd2VhbHRoIHByb3RlY3Rpb24sJycgaGUgc2FpZC4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUCAWDiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDAwMzU5NTIyMTUyMGQ3N2M=</field><field name="symbol" class="java.lang.String">rO0ABXQABEdSQU0=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUCFfpSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1EeuFHrhS</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1MzMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA0+FHrhR64</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1IUeuFHrh</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA0x64UeuFI</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAOyfA==</field><field name="id" class="java.lang.String">rO0ABXQAEDgzYWUxOWMyN2MyOWUyYmM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMzFAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQ5ODE=</field><field name="title" class="java.lang.String">rO0ABXQAPENyZWRpdC1Ecml2ZW4gQ2hpbmEgR2x1dCBUaHJlYXRlbnMgdG8gU3BhcmsgQmFuayBEZWJ0IENyaXNpcw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJu8acAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDRmMmY0MjA3YzNmYTg2NWI=</field><field name="symbol" class="java.lang.String">rO0ABXQABExPQU4=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJ0GAMAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/+ZmZmZmZm</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/+ZmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/8zMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/9cKPXCj1x</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/7MzMzMzMz</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAOEA==</field><field name="id" class="java.lang.String">rO0ABXQAEGYwMTkxZDcwMTZmMDQyM2M=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEsMAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUxMDg=</field><field name="title" class="java.lang.String">rO0ABXQAQkVVIFBvaXNlZCB0byBGaW5lIERldXRzY2hlIEJhbmssIEpQTW9yZ2FuIGFuZCBPdGhlcnMgaW4gUmF0ZSBQcm9iZQ==</field><field name="content" class="java.lang.String">rO0ABXQNt1RoZSBwZW5hbHRpZXMsIHdoaWNoIHdpbGwgYWxzbyB0YXJnZXQgUm95YWwgQmFuayBvZiBTY290bGFuZCAsIENyZWRpdCBBZ3JpY29sZSBhbmQgU29jaWV0ZSBHZW5lcmFsZSwgcmVwcmVzZW50IHRoZSBmaXJzdCBwdW5pc2htZW50IG1ldGVkIG91dCBieSBCcnVzc2VscyBpbiBhIGdsb2JhbCBwcm9iZSBhbmQgcmVwcmVzZW50IGFub3RoZXIgY29zdGx5IHBheW91dCBmb3IgYW4gaW5kdXN0cnkgc3RydWdnbGluZyB0byBwdXQgcGFzdCBtaXNkZWVkcyBiZWhpbmQgaXQuIFRoZSBtb3ZlIGNvbWVzIHR3byB5ZWFycyBhZnRlciB0aGUgRXVyb3BlYW4gQ29tbWlzc2lvbiwgdGhlIEVVJ3MgYW50aXRydXN0IGF1dGhvcml0eSwgcmFpZGVkIGEgbnVtYmVyIG9mIGJhbmtzIGZvciBzdXNwZWN0ZWQgZml4aW5nIG9mIEV1cmlib3IsIGEgYmVuY2htYXJrIHVzZWQgYXMgdGhlIGJhc2lzIGZvciBwcmljaW5nIDI1MCB0cmlsbGlvbiBldXJvcyAoJDMzOCB0cmlsbGlvbikgd29ydGggb2YgZmluYW5jaWFsIGNvbnRyYWN0cywgZnJvbSBTcGFuaXNoIG1vcnRnYWdlcyB0byBjb21wbGV4IGRlcml2YXRpdmVzLiBCYXJjbGF5cywgd2hpY2ggYWxlcnRlZCB0aGUgRXVyb3BlYW4gQ29tbWlzc2lvbiB0byB0aGUgc3VzcGVjdGVkIHdyb25nZG9pbmcsIHdpbGwgbm90IGJlIGZpbmVkLCB0aGUgc291cmNlIHNhaWQuIFRoZSBwZW5hbHRpZXMgb25seSByZWxhdGUgdG8gYWxsZWdlZCBtYW5pcHVsYXRpb24gb2YgRXVyaWJvci4gQW5vdGhlciBncm91cCBvZiBiYW5rcyBzdXNwZWN0ZWQgb2YgcmlnZ2luZyB0aGUgTG9uZG9uIGludGVyYmFuayBvZmZlcmVkIHJhdGUgKExpYm9yKSBjb3VsZCBiZSBmaW5lZCBuZXh0IG1vbnRoLCB3aGVuIHRoZSBFdXJpYm9yIHBlbmFsdGllcyBhcmUgYW5ub3VuY2VkLCB0aGUgc291cmNlIHNhaWQuIFNvbWUgb2YgdGhlIGJhbmtzIGhhZCBhZ3JlZWQgdG8gc2V0dGxlIHdpdGggdGhlIENvbW1pc3Npb24gaW4gZXhjaGFuZ2UgZm9yIGEgMTAgcGVyY2VudCByZWR1Y3Rpb24gaW4gdGhlaXIgZmluZXMsIHRoZSBzb3VyY2UgYWRkZWQuIFNldmVyYWwgb2YgdGhlIGJhbmtzIHdpbGwgbm90IGJlIGZpbmVkIGltbWVkaWF0ZWx5IGFzIHRoZXkgYXJlIGNvbnRlc3RpbmcgdGhlIHNpemUgb2YgdGhlIHByb3Bvc2VkIHBlbmFsdGllcy4gSFNCQywgRXVyb3BlJ3MgbGFyZ2VzdCBiYW5rLCBpcyBvbmUgb2YgdGhvc2UsIHR3byBzb3VyY2VzIHNhaWQuIEluIHRoZXNlIGNhc2VzLCB0aGUgYmFua3MgYXJlIGxpa2VseSB0byBmYWNlIGZvcm1hbCBjaGFyZ2VzIG5leHQgbW9udGgsIGZvbGxvd2VkIGJ5IGZpbmVzIG5leHQgeWVhciwgdGhlIHNvdXJjZSBzYWlkLiBDb21taXNzaW9uIHNwb2tlc21hbiBmb3IgY29tcGV0aXRpb24gcG9saWN5LCBBbnRvaW5lIENvbG9tYmFuaSwgZGVjbGluZWQgdG8gY29tbWVudC4gVGhlIEVVIGNhbiBpbXBvc2UgZmluZXMgb2YgdXAgdG8gMTAgcGVyY2VudCBvZiBhIGNvbXBhbnkncyBnbG9iYWwgcmV2ZW51ZSBmb3IgYnJlYWNoZXMgb2YgYW50aXRydXN0IHJ1bGVzLiBJbiB0aGlzIGNhc2UsIHRoZSBmaW5lcyBhcmUgbGlrZWx5IHRvIGJlIHRvd2FyZHMgdGhlIGxvdyBlbmQgb2YgdGhlIHNjYWxlLCB0aGUgc291cmNlIHNhaWQuIEhvd2V2ZXIsIHNpbmNlIGFsbCB0aGUgYmFua3MgaGF2ZSByZXZlbnVlcyBvZiBhdCBsZWFzdCAxNiBiaWxsaW9uIGV1cm9zIGEgeWVhciwgZXZlbiBhIDEgcGVyY2VudCBmaW5lIHdvdWxkIHJlc3VsdCBpbiBodW5kcmVkcyBvZiBtaWxsaW9ucyBvZiBldXJvcyBpbiBwZW5hbHRpZXMuIENPU1RMWSBNSVNERUVEUyBIU0JDIGdlbmVyYXRlZCByZXZlbnVlIG9mICQ2My41IGJpbGxpb24gbGFzdCB5ZWFyLCB3aGlsZSBSQlMncyB0b3RhbCB3YXMgMjUuOCBiaWxsaW9uIHBvdW5kcywgU29jaWV0ZSBHZW5lcmFsZSdzIHdhcyAyMy4xIGJpbGxpb24gZXVyb3MsIERldXRzY2hlIEJhbmsncyAzMy41IGJpbGxpb24gYW5kIENyZWRpdCBBZ3JpY29sZSdzIDE2LjMgYmlsbGlvbiBldXJvcy4gSlAgTW9yZ2FuJ3MgcmV2ZW51ZSB3YXMgJDk3IGJpbGxpb24uIFJCUywgRGV1dHNjaGUgQmFuaywgU29jaWV0ZSBHZW5lcmFsZSwgSlAgTW9yZ2FuIGFuZCBIU0JDIGRlY2xpbmVkIHRvIGNvbW1lbnQuIENyZWRpdCBBZ3JpY29sZSB3YXMgbm90IGltbWVkaWF0ZWx5IGF2YWlsYWJsZSB0byBjb21tZW50LiBBdXRob3JpdGllcyBpbiB0aGUgVW5pdGVkIFN0YXRlcywgQnJpdGFpbiBhbmQgZWxzZXdoZXJlIGhhdmUgc28gZmFyIGZpbmVkIGZpdmUgZmluYW5jaWFsIGZpcm1zLCBpbmNsdWRpbmcgUkJTIGFuZCBCYXJjbGF5cywgJDMuNyBiaWxsaW9uIGZvciBtYW5pcHVsYXRpbmcgTGlib3IgYW5kIGl0cyBFdXJpYm9yIGNvdXNpbi4gU2V2ZW4gaW5kaXZpZHVhbHMgaGF2ZSBiZWVuIGNyaW1pbmFsbHkgY2hhcmdlZC4gR2xvYmFsbHksIHRoZSBjb3N0IHRvIGJhbmtzIG9mIGNsZWFuaW5nIHVwIHBhc3QgbWlzZGVlZHMgaXMgZXhwZWN0ZWQgdG8gc29hciB0byBhcm91bmQgJDEyNSBiaWxsaW9uIGlmIEpQTW9yZ2FuIGFncmVlcyBhICQxMyBiaWxsaW9uIGRlYWwgd2l0aCB0aGUgVS5TLiBKdXN0aWNlIERlcGFydG1lbnQgb3ZlciBpdHMgbW9ydGdhZ2UgYnVzaW5lc3MuIFRoaXMgZWFybmluZ3Mgc2Vhc29uLCBzZXZlcmFsIGJhbmtzIHNldCBhc2lkZSBtb3JlIG1vbmV5IHRvIGNvdmVyIHRoZSBzZWVtaW5nbHkgcmVsZW50bGVzcyByaXNlIGluIHRoZSBjb3N0IG9mIGZpbmVzLCBsYXdzdWl0cyBhbmQgY29tcGVuc2F0aW9uLiBEZXV0c2NoZSBCYW5rIGJvb2tlZCAxLjIgYmlsbGlvbiBldXJvcyBpbiBsZWdhbCBjb3N0cyBpbiB0aGUgdGhpcmQgcXVhcnRlciBvZiAyMDEzIGFsb25lLCB3aXBpbmcgb3V0IHByb2ZpdCBmb3IgdGhhdCBwZXJpb2QgYW5kIHRha2luZyBpdHMgdG90YWwgbGVnYWwgcHJvdmlzaW9ucyB0byA0LjEgYmlsbGlvbi4gRVUgQ29tcGV0aXRpb24gQ29tbWlzc2lvbmVyIEpvYXF1aW4gQWxtdW5pYSBzYWlkIGluIEFwcmlsIGhlIGV4cGVjdGVkIHRvIGlzc3VlIGRlY2lzaW9ucyBvbiB0aGUgaW50ZXJlc3QgcmF0ZXMgY2FzZXMgYnkgdGhlIGVuZCBvZiB0aGUgeWVhciBpbiBvcmRlciB0byBoZWxwIHRoZSBtYXJrZXQgcmVnYWluIGNvbmZpZGVuY2UgaW4gdGhlIGJlbmNobWFya3MuIEluIGFkZGl0aW9uIHRvIEV1cmlib3IgYW5kIExpYm9yLCB0aGUgQ29tbWlzc2lvbiBpcyBhbHNvIGludmVzdGlnYXRpbmcgc3VzcGVjdGVkIHJpZ2dpbmcgb2YgaW50ZXJlc3QgcmF0ZXMgbGlua2VkIHRvIHRoZSB5ZW4gKFRpYm9yKSBhbmQgdGhlIFN3aXNzIGZyYW5jLiBJdCBpcyBhbHNvIGNhcnJ5aW5nIG91dCBhIHByb2JlIGludG8gY3JlZGl0IGRlcml2YXRpdmVzIGludm9sdmluZyAxMyB0b3AgaW52ZXN0bWVudCBiYW5rcyBpbmNsdWRpbmcgQ2l0aWdyb3VwLCBHb2xkbWFuIFNhY2hzLCBmaW5hbmNpYWwgZGF0YSBjb21wYW55IE1hcmtpdCBhbmQgdGhlIEludGVybmF0aW9uYWwgU3dhcHMgYW5kIERlcml2YXRpdmVzIEFzc29jaWF0aW9uIChJU0RBKS4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUIm2J8AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDgyMjc5OGY0OTI2N2Y1MTA=</field><field name="symbol" class="java.lang.String">rO0ABXQABVNDR0xZ</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUIr/vsAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlzMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAl64UeuFHs</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlgAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlo9cKPXCk</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlHrhR64Uf</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAANB/A==</field><field name="id" class="java.lang.String">rO0ABXQAEDExZGE3MjA3ZWNjMzUwODA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFW9AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM1ODk=</field><field name="title" class="java.lang.String">rO0ABXQAKUN5cHJ1cyBCdXNpbmVzc2VzIEh1cnQgYXMgQmFua3MgU3RheSBTaHV0</field><field name="content" class="java.lang.String">rO0ABXQTfEN5cHJpb3QgYnVzaW5lc3NlcyB3ZXJlIHVuZGVyIGluY3JlYXNpbmcgc3RyYWluIHRvIGtlZXAgcnVubmluZyBvbiBUdWVzZGF5IGFmdGVyIGZpbmFuY2lhbCBhdXRob3JpdGllcyBzdHJldGNoZWQgdGhlIGNvdW50cnkncyBiYW5rIGNsb3N1cmUgaW50byBhIHNlY29uZCB3ZWVrIGFtaWQgZmVhcnMgdGhhdCBkZXBvc2l0b3JzIHdpbGwgcnVzaCB0byBkcmFpbiB0aGVpciBhY2NvdW50cy4gQWxsIGJ1dCB0d28gb2YgdGhlIGNvdW50cnkncyBsYXJnZXN0IGxlbmRlcnMgaGFkIGJlZW4gZHVlIHRvIHJlb3BlbiBUdWVzZGF5LCBhZnRlciBiZWluZyBzaHV0IHNpbmNlIE1hcmNoIDE2IHdoaWxlIHBvbGl0aWNpYW5zIGZpZ3VyZWQgb3V0IGhvdyB0byByYWlzZSB0aGUgZnVuZHMgbmVjZXNzYXJ5IGZvciBDeXBydXMgdG8gcXVhbGlmeSBmb3IgYW4gaW50ZXJuYXRpb25hbCBiYWlsb3V0LiBVbmRlciB0aGUgZGVhbCBmb3IgYSAxMCBiaWxsaW9uIGV1cm8gKCQxMi45IGJpbGxpb24pIHJlc2N1ZSBjbGluY2hlZCBpbiBCcnVzc2VscyBlYXJseSBNb25kYXksIEN5cHJ1cyBhZ3JlZWQgdG8gc2xhc2ggaXRzIG92ZXJzaXplZCBiYW5raW5nIHNlY3RvciBhbmQgaW5mbGljdCBoZWZ0eSBsb3NzZXMgb24gbGFyZ2UgZGVwb3NpdG9ycyBpbiB0cm91YmxlZCBiYW5rcy4gQWZ0ZXIgaW5pdGlhbGx5IHNheWluZyBtb3N0IGZpbmFuY2lhbCBpbnN0aXR1dGlvbnMgd291bGQgcmVvcGVuIFR1ZXNkYXksIHRoZSBjb3VudHJ5J3MgY2VudHJhbCBiYW5rIG1hZGUgYSBzdXJwcmlzZSByZXZlcnNhbCBqdXN0IGJlZm9yZSBtaWRuaWdodCwgYW5ub3VuY2luZyBhbGwgYmFua3Mgd291bGQgcmVtYWluIGNsb3NlZCB1bnRpbCBUaHVyc2RheS4gVGhlIGFubm91bmNlbWVudCBmb2xsb3dlZCBhIGJyb2FkY2FzdCBieSB0aGUgY291bnRyeSdzIHByZXNpZGVudCwgTmljb3MgQW5hc3Rhc2lhZGVzLCB3aG8gdG9sZCBDeXByaW90cyB0aGF0IHRoZSBjZW50cmFsIGJhbmsgd291bGQgaW1wb3NlIHNvbWUgbGltaXRzIG9uIGZpbmFuY2lhbCB0cmFuc2FjdGlvbnMsIGJ1dCBhc3N1cmVkIHRoZSBwdWJsaWMgdGhhdCByZXN0cmljdGlvbnMgd291bGQgbm90IGJlIHBlcm1hbmVudC4gIkl0IGlzIGEgdmVyeSB0ZW1wb3JhcnkgbWVhc3VyZSwgd2hpY2ggd2lsbCBncmFkdWFsbHkgYmUgcmVsYXhlZCwiIEFuYXN0YXNpYWRlcyBzYWlkLiBVbmRlciB0aGUgbmV3IEN5cHJ1cyBiYWlsb3V0IHBsYW4sIHRoZSBidWxrIG9mIHRoZSBmdW5kcyB3aWxsIGJlIHJhaXNlZCBieSBmb3JjaW5nIGxvc3NlcyBvbiBhY2NvdW50cyBvZiBtb3JlIHRoYW4gMTAwLDAwMCBldXJvcyAoJDEyOSwwMDApIGluIHRoZSBjb3VudHJ5J3Mgc2Vjb25kLSBsYXJnZXN0IGxlbmRlciwgTGFpa2ksIHdpdGggdGhlIHJlbWFpbmRlciBjb21pbmcgZnJvbSB0YXggaW5jcmVhc2VzIGFuZCBwcml2YXRpemF0aW9ucy4gVGhlIGJhbmsgd2lsbCBiZSBkaXNzb2x2ZWQgaW1tZWRpYXRlbHkgaW50byBhIHNvLWNhbGxlZCBiYWQgYmFuayBjb250YWluaW5nIGl0cyB1bmluc3VyZWQgZGVwb3NpdHMgYW5kIHRveGljIGFzc2V0cywgd2l0aCB0aGUgZ3VhcmFudGVlZCBkZXBvc2l0cyBiZWluZyB0cmFuc2ZlcnJlZCB0byB0aGUgbmF0aW9uJ3MgYmlnZ2VzdCBsZW5kZXIsIEJhbmsgb2YgQ3lwcnVzLiBEZXBvc2l0cyBhdCBCYW5rIG9mIEN5cHJ1cyBhYm92ZSAxMDAsMDAwIGV1cm9zIHdpbGwgYmUgZnJvemVuIHVudGlsIGl0IGJlY29tZXMgY2xlYXIgd2hldGhlciBvciB0byB3aGF0IGV4dGVudCB0aGV5IHdpbGwgYWxzbyBiZSBmb3JjZWQgdG8gdGFrZSBsb3NzZXMuIFRob3NlIGZ1bmRzIHdpbGwgZXZlbnR1YWxseSBiZSBjb252ZXJ0ZWQgaW50byBiYW5rIHNoYXJlcy4gIEl0J3Mgbm90IHlldCBjbGVhciBob3cgc2V2ZXJlIHRoZSBsb3NzZXMgd2lsbCBiZSB0byBMYWlraSdzIGxhcmdlIGJhbmsgZGVwb3NpdCBob2xkZXJzLCBidXQgYW5hbHlzdHMgaGF2ZSBlc3RpbWF0ZWQgaW52ZXN0b3JzIG1pZ2h0IGxvc2UgdXAgdG8gNDAgcGVyY2VudCBvZiB0aGVpciBtb25leS4gQSB0b3AgRXVyb3BlYW4gQ2VudHJhbCBCYW5rIG9mZmljaWFsLCBCZW5vaXQgQ29ldXJlLCB3aG8gc2l0cyBvbiB0aGUgYmFuaydzIHNpeC1tZW1iZXIgZXhlY3V0aXZlIGJvYXJkLCB0b2xkIEZyYW5jZSdzIEV1cm9wZSAxIFR1ZXNkYXkgdGhhdCB0aGUgcGxhbiB0byBrZWVwIHRoZSBiYW5rcyBjbG9zZWQgd2FzIHNlbnNpYmxlIGFzICJ0aGVyZSBpcyBzdGlsbCBhIGxvdCBvZiB3b3JrIHRvIGRvIG9uIHRoZSBncm91bmQiLiAiT25lIGJhbmsgbXVzdCBiZSBzaHV0LCBhbmQgdGhlIHR3byBiaWcgYmFua3MgbXVzdCBiZSBtZXJnZWQgYW5kIHRvIGRvIHRoYXQsIHRoZSBDeXByaW90IGNlbnRyYWwgYmFuayBoYXMgY29uc2lkZXJlZCBpdCBiZXR0ZXIgdG8ga2VlcCB0aGUgYmFua3MgY2xvc2VkLiIgTm9uZXRoZWxlc3MgYnVzaW5lc3NlcyBoYXZlIGFscmVhZHkgYmVlbiBmZWVsaW5nIHRoZSBicnVudCBvZiB0aGUgY2FzaCBjcnVuY2gsIHVuYWJsZSB0byBwYXkgc2FsYXJpZXMgYW5kIHN1cHBsaWVycyBhcyBDeXByaW90cyBoYXMgc2xhc2hlZCBzcGVuZGluZyB0byBrZWVwIGFzIG11Y2ggbW9uZXkgb24gdGhlbSBpbiBsaWdodCBvZiBhbGwgdGhlIHVuY2VydGFpbnR5IHN1cnJvdW5kaW5nIHRoZSBiYW5rcy4gVGhlIGJhbmtzJyBjbG9zdXJlIGhhcyBiZWVuIGZlbHQgaW4gdGhlIGNvdW50cnkncyBpbXBvcnRhbnQgc2hpcHBpbmcgaW5kdXN0cnksIHdoaWNoIGNvbnRyaWJ1dGVzIGFib3V0IDUgcGVyY2VudCBvciA4MDAgbWlsbGlvbiBldXJvcyAoJDEgYmlsbGlvbikgdG8gdGhlIGVjb25vbXkuIEN5cHJ1cyByYW5rcyAxMHRoIGluIHRoZSB3b3JsZCBpbiB0ZXJtcyBvZiB0aGUgbnVtYmVyIGlmIG9jZWFuLWdvaW5nIHZlc3NlbHMgZmx5aW5nIGl0cyBmbGFnLCBhbmQgaXQgaW4gdGhlIHRvcCBmaXZlIG9mIGNvdW50cmllcyB3aXRoIHRoZSBsYXJnZXN0IG51bWJlciBvZiBzaGlwIG1hbmFnZW1lbnQgY29tcGFuaWVzLiAiVGhpcyBpcyBkZXN0cnVjdGl2ZSBmb3IgdXMsIiBzYWlkIGFuIG9mZmljaWFsIHdpdGggQ3lwcnVzLWJhc2VkIHNoaXBwaW5nIGNvbXBhbnkgRURUIE9mZnNob3JlLCB3aG8gc3Bva2Ugb24gY29uZGl0aW9uIG9mIGFub255bWl0eSBiZWNhdXNlIGhpcyBjb21wYW55IGRpZCBub3QgYXV0aG9yaXplIGhpbSB0byBzcGVhayB0byB0aGUgbWVkaWEuICJXZSBoYXZlIHRvIHBheSBvdXIgY3Jld3MnIHNhbGFyaWVzIGFuZCB0aGF0J3MgJDUwMCwwMDAsIHdoaWxlIHdlIGhhdmUgdG8gcGF5IGFzIG11Y2ggZm9yIG91ciBvZmZpY2Ugc3RhZmYgYnkgTWFyY2ggMjggYW5kIHdlIGRvbid0IGhhdmUgYWNjZXNzIHRvIG91ciBiYW5rIGFjY291bnRzLCIgdGhlIG9mZmljaWFsIHNhaWQuICJUaGVzZSBhcmUgcGVvcGxlIHdobyBuZWVkIHRvIHBheSB0aGVpciBiaWxscywgaGF2ZSBvYmxpZ2F0aW9ucyB0byBtZWV0LiIgVGhlIG9mZmljaWFsIGV4cGxhaW5lZCB0aGF0IGF1dGhvcml0aWVzIGluIHRoZSBHcmVlayBwb3J0IG9mIFBpcmFldXMgaGF2ZSBwcmV2ZW50ZWQgb25lIG9mIHRocmVlIEVEVCBzaGlwcyB0byBsZWF2ZSB1bnRpbCB0aGUgY29tcGFueSBwYXlzIGl0IHBvcnQgZHVlcy4gVGhhdCBtZWFucyB0aGUgc2hpcCBjYW4ndCBmdWxmaWxsIGl0cyBjb250cmFjdCB3aXRoIGNsaWVudHMsIG1lYW5pbmcgcG9zc2libGUgbG9zc2VzIGZvciB0aGUgY29tcGFueSB3aGljaCBoYXMgYSBmbGVldCBvZiAxOCB2ZXNzZWxzLiBPdGhlciBidXNpbmVzc2VzIGhhdmUgYWxzbyBiZWVuIGhhbW1lcmVkIGJ5IHRoZSBiYW5rIGNsb3N1cmVzIGFzIHRoZXkgZmluZCB0aGVtc2VsdmVzIHVuYWJsZSB0byBwYXkgc3VwcGxpZXJzIG9yIGZ1bGZpbGwgb3JkZXJzLiAiQ2FzaCBpcyBkZWZpbml0ZWx5IGEgcHJvYmxlbSwiIHNhaWQgTmljb3NpYSBwaGFybWFjaXN0IEx1Y3kgU2FudG91cmlhbiwgY291bnRpbmcgb3V0IGV1cm8gYmlsbHMgdG8gYSBzdXBwbGllciB3aG8gaGFkIGp1c3QgYnJvdWdodCBpbiBuZXcgc3VwcGxpZXMgb2YgYmFieSBmb3JtdWxhIGFuZCBvdGhlciBwcm9kdWN0cy4gIldlIG5vcm1hbGx5IHBheSA5MCBwZXJjZW50IG9mIG91ciBzdXBwbGllcnMgb24gY3JlZGl0LCBvbmNlIGEgbW9udGggYXQgdGhlIGVuZCBvZiB0aGUgbW9udGguIE5vdyBtb3N0IGFyZSBhc2tpbmcgZm9yIGNhc2ggb25seS4iIFRoZSByZXRhaWwgbWFya2V0IGlzIHNoYXJwbHkgZG93biB0b28sIHNob3Agb3duZXJzIHNheSwgd2l0aCBjdXN0b21lcnMgdW53aWxsaW5nIHRvIHNwZW5kIG9uIGFueXRoaW5nIGJ1dCB0aGUgYmFzaWNzIHdoaWxlIHRoZXkgaGF2ZSBsaW1pdGVkIGFjY2VzcyB0byBjYXNoLiAiVGhlIGNvbnRpbnVhdGlvbiBvZiB0aGlzIHVuY2VydGFpbnR5IGlzIHB1c2hpbmcgdGhlIGVjb25vbXkgZGVlcGVyIGludG8gcmVjZXNzaW9uLCBzb21lIGJ1c2luZXNzZXMgY291bGQgcG9zc2libHkgbG9zZSB0aGVpciBjbGllbnRzLCBidXQgd2UncmUgaG9wZWZ1bCBvbmNlIHRoaXMgc2l0dWF0aW9uIGlzIHNvcnRlZCBvdXQsIHRoZSBtYXJrZXQgY2FuIHJlYm91bmQgcXVpY2tseSwiIHNhaWQgTWljaGFsaXMgUGlsaWtvcywgaGVhZCBvZiB0aGUgQ3lwcnVzIEVtcGxveWVycyBhbmQgSW5kdXN0cmlhbGlzdHMgRmVkZXJhdGlvbi4gQWxzbyBUdWVzZGF5LCB0aGUgY2hhaXJtYW4gb2YgdGhlIGJvYXJkIG9mIEJhbmsgb2YgQ3lwcnVzLCBBbmRyZWFzIEFydGVtaXMsIHRlbmRlcmVkIGhpcyByZXNpZ25hdGlvbiwgYSBzcG9rZXNwZXJzb24gZm9yIHRoZSBiYW5rIHNhaWQuIFRoZSBib2FyZCBvZiBkaXJlY3RvcnMgd2FzIHRvIGRlY2lkZSBvbiB3aGV0aGVyIHRvIGFjY2VwdCB0aGUgcmVzaWduYXRpb24gbGF0ZXIgaW4gdGhlIGRheSwgc2FpZCB0aGUgc3Bva2VzcGVyc29uLCBzcGVha2luZyBvbiBjb25kaXRpb24gb2YgYW5vbnltaXR5IGJlY2F1c2UgYSBkZWNpc2lvbiBoYWQgbm90IHlldCBiZWVuIG1hZGUu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT2lETCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDAzYWI3NWZiODY3MzBjM2Y=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNISVA=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT2qN4yAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/964UeuFHs</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAAUeuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/964UeuFHs</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAAPXCj1wo9</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAAPXCj1wo9</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABu8A==</field><field name="id" class="java.lang.String">rO0ABXQAEDU0NTViZDdhM2Q4ZDIyOGY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMQ2AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM0Nzc=</field><field name="title" class="java.lang.String">rO0ABXQAQUNvbW1vZGl0eSBQcmljZXMgV3JvbmcgYXMgT2Z0ZW4gYXMgMjcgUGVyY2VudCBvZiBUaW1lIGZvciBUcmFkZXJz</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGblfyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGE1ZmZiZjg1OTM3MTk0ZTI=</field><field name="symbol" class="java.lang.String">rO0ABXQACEdMQ05GLlBL</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGgvFiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAUzMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAU4UeuFHrh</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAUwo9cKPXD</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAU4UeuFHrh</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAUR64UeuFI</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAKKA==</field><field name="id" class="java.lang.String">rO0ABXQAEDYyODg1MzdkNzAwOTFhOTI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHfPAAAA==</field></document></documents><date>2015-05-07T12:11:00-0500</date></cacheEntry>
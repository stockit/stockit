<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0CrhSZXZsb24gb3duZXIgb2YgdGhlIEFsbWF5IGNvc21ldGljcyBicmFuZCBhbmQgU2luZnVsIENvbG9ycyBuYWlsIHBvbGlzaCBzYWlkIGluIGEgZmlsaW5nIHRoYXQgaXRzIENoaW5lc2Ugb3BlcmF0aW9ucyBhY2NvdW50ZWQgZm9yIGFib3V0IDIgcGVyY2VudCBvZiB0b3RhbCBuZXQgc2FsZXMgVGhlIGNvbXBhbnkgcG9zdGVkIG5ldCBzYWxlcyBvZiAxNDMgYmlsbGlvbiBpbiAyMDEyIFJldmxvbiBzYWlkIGl0IHdvdWxkIGN1dCAxMTAwIHBvc2l0aW9ucyBwcmltYXJpbHkgaW4gQ2hpbmEgaW5jbHVkaW5nIDk0MCBiZWF1dHkgYWR2aXNlcnMgcmV0YWluZWQgdGhyb3VnaCBhIHRoaXJkcGFydHkgYWdlbmN5IFJldmxvbiBoYWQgNTEwMCBlbXBsb3llZXMgYXMgb2YgRGVjIDMxIDIwMTIgVGhlIENoaW5lc2UgbWFya2V0IGlzIGZ1bGwgb2YgcG90ZW50aWFsIGZvciBXZXN0ZXJuIGJyYW5kcyBUaGUgQ2hpbmVzZSBjb3NtZXRpY3MgbWFya2V0IG1vcmUgdGhhbiBkb3VibGVkIGluIHNpemUgYmV0d2VlbiAyMDA4IGFuZCAyMDEyIHRvIDIyOCBiaWxsaW9uIGFjY29yZGluZyB0byBhIHJlcG9ydCBpbiBNYXJjaCBieSBGdW5nIEdyb3VwIHRoYXQgY2l0ZWQgdGhlIE5hdGlvbmFsIEJ1cmVhdSBvZiBTdGF0aXN0aWNzIGluIENoaW5hIFRoYXQgaGFzIGJlZW4gYSBib29uIGZvciBjb21wYW5pZXMgc3VjaCBhcyBoaWdoZW5kIGJlYXV0eSBwcm9kdWN0cyBtYWtlciBFc3RlZSBMYXVkZXIgQ29zIEluYyB3aG9zZSBzYWxlcyBpbiBBc2lhIGxhc3QgcXVhcnRlciByb3NlIDcgcGVyY2VudCBoZWxwZWQgbW9zdGx5IGJ5IENoaW5hIHdoZXJlIEVzdGVlIExhdWRlciBoYXMgZXhwYW5kZWQgdG8gc2Vjb25kdGllciBjaXRpZXMgbW9yZSBxdWlja2x5IHRoYW4gbWFueSBvdGhlciBXZXN0ZXJuIGJlYXV0eSBicmFuZHMgT3RoZXIgbm9uYmVhdXR5IFVTIGNvbXBhbmllcyB0byBzZWUgZmFzdCBncm93dGggaW4gQ2hpbmEgaW5jbHVkZSBoYW5kYmFnIG1ha2VyIENvYWNoIEluYyBhbmQgVGlmZmFueSAgQ28gRkFMTElORyBDSElOQSBTQUxFUyBCdXQgQ2hpbmEgaXMgYWxzbyBhIGNvbXBsZXggbWFya2V0IHRoYXQgY2FuIGJlZGV2aWwgZm9yZWlnbiBjb21wYW5pZXMgQXZvbiBQcm9kdWN0cyBJbmMgYSBkaXJlY3Qgc2VsbGVyIG9mIGNvc21ldGljcyBzYXcgc2FsZXMgZmFsbCAyNCBwZXJjZW50IGluIDIwMTIgaW4gQ2hpbmEgd2hlcmUgaXRzIHJlcHV0YXRpb24gaGFzIGJlZW4gaGl0IGJ5IGEgYnJpYmVyeSBwcm9iZSBhbmQgd2hlcmUgaXQgaGFzIHN0cnVnZ2xlZCB0byBhZGFwdCB0byBzZWxsaW5nIHRocm91Z2ggcmV0YWlsIHN0b3JlcyBSZXZsb25zIHNhbGVzIGluIENoaW5hIGRlY2xpbmVkIGluIDIwMTIgYSB0cmVuZCB0aGF0IGNvbnRpbnVlZCBpbnRvIHRoZSBmaXJzdCBoYWxmIG9mIHRoaXMgeWVhciBUaGUgY29tcGFueSB3aGljaCBlbnRlcmVkIHRoZSBtYXJrZXQgaW4gMTk5NiBoYXMgYXR0cmlidXRlZCB0aGUgZmFsbCB0byBkZWNsaW5pbmcgY29uc3VtcHRpb24gbGlua2VkIHRvIGEgc2xvd2Rvd24gaW4gQ2hpbmVzZSBlY29ub21pYyBncm93dGggV2UgbWFkZSBhIGhvbGlzdGljIGFzc2Vzc21lbnQgb2YgdGhlIG9wcG9ydHVuaXR5IGluIENoaW5hIHZlcnN1cyB0aGUgY29zdCBvZiBkb2luZyBidXNpbmVzcyB0aGVyZSAgYW5kIHdlIGNvbmNsdWRlZCB0aGF0IGl0IG1hZGUgdGhlIG1vc3Qgc2Vuc2UgdG8gZXhpdCB0aGUgbWFya2V0IFJldmxvbiBzcG9rZXN3b21hbiBFbGlzZSBHYXJvZmFsbyBzYWlkIEFjY29yZGluZyB0byB0aGUgTmF0aW9uYWwgQnVyZWF1IG9mIFN0YXRpc3RpY3Mgb2YgQ2hpbmEgdG90YWwgcmV0YWlsIHNhbGVzIG9mIGNvc21ldGljcyBncmV3IDEzMiBwZXJjZW50IGluIHRoZSBKYW51YXJ5Tm92ZW1iZXIgcGVyaW9kIGNvbXBhcmVkIHdpdGggZ3Jvd3RoIG9mIDE3IHBlcmNlbnQgaW4gdGhlIHdob2xlIG9mIDIwMTIgU29tZSBjb3NtZXRpY3MgY29tcGFuaWVzIG9wZXJhdGluZyBpbiBDaGluYSBoYXZlIGFsc28gZmFjZWQgcHJlc3N1cmUgZnJvbSBhbmltYWwgcmlnaHRzIGdyb3VwcyBhcyB0aGUgY291bnRyeSByZXF1aXJlcyBjb21wYW5pZXMgdG8gdGVzdCBiZWF1dHkgcHJvZHVjdHMgb24gYW5pbWFscyBUaGUgQ2hpbmEgRm9vZCBhbmQgRHJ1ZyBBZG1pbmlzdHJhdGlvbiBzYWlkIGluIE5vdmVtYmVyIGl0IHdhcyBjb25zaWRlcmluZyBhIHJ1bGUgY2hhbmdlIHRoYXQgd291bGQgYWxsb3cgdGhlIHNhbGUgb2Ygc29tZSBjb3NtZXRpY3Mgd2l0aG91dCByZXF1aXJpbmcgdGhlbSB0byBiZSB0ZXN0ZWQgb24gYW5pbWFscyBSZXZsb24gb3duZWQgYnkgYnV5b3V0IHRpdGFuIFJvbmFsZCBQZXJlbG1hbiBleHBlY3RzIHRvIGluY3VyIGFib3V0IDIyIG1pbGxpb24gb2YgcHJldGF4IHJlc3RydWN0dXJpbmcgYW5kIHJlbGF0ZWQgY2hhcmdlcyBBYm91dCAxMCBtaWxsaW9uIG9mIHRoZSBjaGFyZ2VzIHdpbGwgYmUgZW1wbG95ZWVyZWxhdGVkIGNvc3RzIHdpdGggdGhlIHJlc3QgZnJvbSBzYWxlcyBtYXJrZG93bnMgYW5kIGludmVudG9yeSB3cml0ZW9mZnMgdGhlIGNvbXBhbnkgc2FpZCBSZXZsb24gc2FpZCBpdCByZWNvcmRlZCAyMDkgbWlsbGlvbiBvZiB0aGUgY2hhcmdlcyBpbiBEZWNlbWJlciAyMDEzIHdpdGggdGhlIHJlc3QgZXhwZWN0ZWQgZHVyaW5nIDIwMTQgVGhlIGNvbXBhbnkgc2FpZCBhYm91dCA4IG1pbGxpb24gb2YgdGhlIGFubnVhbCBzYXZpbmdzIGFyZSBleHBlY3RlZCB0byBiZW5lZml0IDIwMTQgcmVzdWx0c3QABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0wMy0yN1QwMDowMDowMFogVE8gMjAxMy0xMi0wM1Q1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDY0MDM=</field><field name="title" class="java.lang.String">rO0ABXQAPENoaW5hIEZpbmVzIE1pbGsgUG93ZGVyIE1ha2VycyAkMTEwIE1pbGxpb24gZm9yIFByaWNlLUZpeGluZw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUBXJViAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDc5YWZmNmZhMTFmODI5NjI=</field><field name="symbol" class="java.lang.String">rO0ABXQABzBNSkEuQkU=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUBcS7SAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBNVcKPXCj2</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBNVcKPXCj2</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBNVcKPXCj2</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBNVcKPXCj2</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBMPrhR64Uf</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGJjMDcwMjExMmYyYmMwOWY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mISkAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE3MzM2</field><field name="title" class="java.lang.String">rO0ABXQAOEhpZ2gtRW5kIFNtYXJ0cGhvbmUgQm9vbSBFbmRpbmcgYXMgUHJpY2UgRHJvcCBIaXRzIEFwcGxl</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT//mTyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDRiYjg3ZmEzOWE2OWRlMjg=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0FCSQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUAEv5iAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/seuFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/seuFHrhR7</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/seuFHrhR7</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/seuFHrhR7</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/seuFHrhR7</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGUzNjgxMmMxNGFjNTMxMGY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mLPiAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTEzODg2</field><field name="title" class="java.lang.String">rO0ABXQAPEZhdGUgb2YgJDIzIEJpbGxpb24gTCdPcmVhbCBTdGFrZSBQb2ludHMgdG8gRnV0dXJlIG9mIE5lc3RsZQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEGPZCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDFiNGU2NDMyYjhhMmQ4ODA=</field><field name="symbol" class="java.lang.String">rO0ABXQABUpQWVlM</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUELY+yAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECL5AAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECL5AAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECLZgAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECLqAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECKIrhR64Uf</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAB9A==</field><field name="id" class="java.lang.String">rO0ABXQAEDg5YjFmNTM3NThjMDkzMTg=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHNGAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQ5ODE=</field><field name="title" class="java.lang.String">rO0ABXQAPENyZWRpdC1Ecml2ZW4gQ2hpbmEgR2x1dCBUaHJlYXRlbnMgdG8gU3BhcmsgQmFuayBEZWJ0IENyaXNpcw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJu8acAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDRmMmY0MjA3YzNmYTg2NWI=</field><field name="symbol" class="java.lang.String">rO0ABXQABExPQU4=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJ0GAMAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/+ZmZmZmZm</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/+ZmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/8zMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/9cKPXCj1x</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/7MzMzMzMz</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAOEA==</field><field name="id" class="java.lang.String">rO0ABXQAEGYwMTkxZDcwMTZmMDQyM2M=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEsMAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE3Mjk1</field><field name="title" class="java.lang.String">rO0ABXQAOUNhdGVycGlsbGFyIEN1dHMgT3V0bG9vayBhcyBQcm9maXQgU2xpZGVzIG9uIE1pbmluZyBTbHVtcA==</field><field name="content" class="java.lang.String">rO0ABXQVjUEgZ2xvYmFsIG1pbmluZyBpbmR1c3RyeSBzbHVtcCBjdXQgaW50byBzZWNvbmQtcXVhcnRlciBlYXJuaW5ncyBhdCAgQ2F0ZXJwaWxsYXIgSW5jLiBhcyBjb21wYW5pZXMgc3BlbnQgbGVzcyBvbiBlcXVpcG1lbnQgYW5kIGRlYWxlcnMgY3V0ICBpbnZlbnRvcmllcyBtb3JlIHRoYW4gQ2F0ZXJwaWxsYXIgZXhwZWN0ZWQuIFRoZSB3b3JsZCdzIGxhcmdlc3QgbWFrZXIgb2YgY29uc3RydWN0aW9uIGFuZCBtaW5pbmcgZXF1aXBtZW50IHBvc3RlZCAgYSA0MyBwZXJjZW50IHNsaWRlIGluIGVhcm5pbmdzIGFuZCBjdXQgaXRzIHByb2ZpdCBhbmQgcmV2ZW51ZSBvdXRsb29rICBmb3IgdGhlIHllYXIuIENhdGVycGlsbGFyIHJlcG9ydGVkIGVhcm5pbmdzIG9mICQ5NjAgbWlsbGlvbiwgb3IgJDEuNDUgcGVyIHNoYXJlLCAgY29tcGFyZWQgd2l0aCAkMS43IGJpbGxpb24sIG9yICQyLjU0IHBlciBzaGFyZSBhIHllYXIgYWdvLiBSZXZlbnVlIHNsaWQgIDE1LjggcGVyY2VudCB0byAkMTQuNjMgYmlsbGlvbi4gVGhhdCB3YXMgd2VsbCBzaG9ydCBvZiBXYWxsIFN0cmVldCdzIGV4cGVjdGF0aW9ucy4gQW5hbHlzdHMgc3VydmV5ZWQgIGJ5IEZhY3RTZXQgaGFkIGV4cGVjdGVkIGEgcHJvZml0IG9mICQxLjY5IHBlciBzaGFyZSBvbiByZXZlbnVlIG9mICQxNS4wOSAgYmlsbGlvbi4gVGhlIGNvbXBhbnkgc2FpZCBkZWFsZXJzIGN1dCBpbnZlbnRvcmllcyBieSAkMSBiaWxsaW9uIGFzIHRoZSBnbG9iYWwgbWluaW5nIGluZHVzdHJ5IHNsb3dlZC4gR3Jvd3RoIGVzcGVjaWFsbHkgc2xvd2VkIGluIENoaW5hLiBTaGFyZXMgb2YgQ2F0ZXJwaWxsYXIgSW5jLiBmZWxsICQyLjA2LCBvciAyLjQgcGVyY2VudCwgdG8gJDgzLjQ2IGluIGFmdGVybm9vbiB0cmFkaW5nLiBDYXRlcnBpbGxhciBhbHNvIHNhaWQgaXQgaGFkIGN1cnJlbmN5IHRyYW5zbGF0aW9uIGFuZCBoZWRnaW5nIGxvc3NlcyBkdXJpbmcgdGhlIHF1YXJ0ZXIuIENFTyBEb3VnIE9iZXJoZWxtYW4gcHJlZGljdGVkIGltcHJvdmVkIHByb2ZpdHMgZHVyaW5nIHRoZSBzZWNvbmQgaGFsZiAgb2YgdGhlIHllYXIgYXMgdGhlIGNvbXBhbnkgdGFrZXMgZnVydGhlciBjb3N0LWN1dHRpbmcgbWVhc3VyZXMuIENhdGVycGlsbGFyIHN0aWxsIGN1dCBpdHMgZnVsbC15ZWFyIHByb2ZpdCBvdXRsb29rIGZyb20gYWJvdXQgJDcgcGVyICBzaGFyZSB0byAkNi41MC4gQW5kIHJldmVudWUgaXMgbm93IGV4cGVjdGVkIHRvIGNvbWUgaW4gYmV0d2VlbiAkNTYgIGJpbGxpb24gYW5kICQ1OCBiaWxsaW9uLCBkb3duIGZyb20gcHJldmlvdXMgZ3VpZGFuY2Ugb2YgJDU3IGJpbGxpb24gdG8gICQ2MSBiaWxsaW9uLiBEZWFsZXJzLCBPYmVyaGVsbWFuIHNhaWQsIHVzZWQgaW52ZW50b3J5IGZyb20gQ2F0ZXJwaWxsYXIncyBwcm9kdWN0ICBkaXN0cmlidXRpb24gZHVyaW5nIHRoZSBxdWFydGVyIHJhdGhlciB0aGFuIHN0b2NraW5nIHRoZWlyIG93biAgYnVzaW5lc3Nlcy4gQ29tcGFueSBpbnZlbnRvcnkgYWxzbyBkcm9wcGVkIGJ5ICQxLjIgYmlsbGlvbi4gRGVhbGVycyBhcmUgcG9zaXRpb25lZCB0byBjdXQgaW52ZW50b3J5IGV2ZW4gZnVydGhlciwgYW5kIHRoZSBjb21wYW55ICBleHBlY3RzIGl0IHRvIGZhbGwgYnkgJDEuNSBiaWxsaW9uIHRvICQyIGJpbGxpb24gaW4gdGhlIHNlY29uZCBoYWxmLCAgT2JlcmhlbG1hbiBzYWlkLiAiVGhhdCBtZWFucyB3ZSBhcmUgdW5kZXJzZWxsaW5nIGVuZC11c2VyIGRlbWFuZCB0aGlzIHllYXIsIGFuZCBpdCBzZXRzIHVzIHVwIGZvciBiZXR0ZXIgc2FsZXMgaW4gMjAxNCwiIGhlIHNhaWQuIENhdGVycGlsbGFyLCB3aGljaCBoYXMgc2VlbiBpdHMgc2hhcmUgcHJpY2UgZGVjbGluZSA3IHBlcmNlbnQgdGhpcyAgeWVhciwgcmVwdXJjaGFzZWQgJDEgYmlsbGlvbiB3b3J0aCBvZiBzdG9jayBpbiB0aGUgc2Vjb25kIHF1YXJ0ZXIsIGFuZCAgYmFzZWQgb24gc3Ryb25nIGNhc2ggZmxvdywgaXQgZXhwZWN0cyB0byBidXkgYW5vdGhlciAkMSBiaWxsaW9uIHdvcnRoIGluICB0aGUgdGhpcmQgcXVhcnRlci4gT24gYSBjb25mZXJlbmNlIGNhbGwsIE1pa2UgRGVXYWx0LCB0aGUgY29tcGFueSdzIGNvbnRyb2xsZXIgYW5kICBpbnZlc3RvciByZWxhdGlvbnMgY2hpZWYsIGNvbmNlZGVkIHRoYXQgcHJvZHVjdGlvbiBhbmQgcHJvZml0IG1hcmdpbnMgIHdvbid0IHBpY2sgdXAgdW50aWwgbWluaW5nIGNvbXBhbmllcyBiZWdpbiBvcmRlcmluZyBtb3JlIGVxdWlwbWVudCBmcm9tICBkZWFsZXJzLCB3aG8gd2lsbCB0aGVuIHJlc3RvY2sgaW52ZW50b3JpZXMuICJJIHRoaW5rIHRoYXQncyBjZXJ0YWlubHkgaGF2aW5nIHNvbWUgaW1wYWN0IG9uIHRoZSBkZWFsZXIgb3JkZXIgIHJhdGVzIHRvIHVzLCIgaGUgc2FpZC4gIkNlcnRhaW5seSB1bnRpbCB3ZSBnZXQgdGhyb3VnaCB0aGUgaW52ZW50b3J5ICByZWR1Y3Rpb24sIHRoYXQgd2lsbCBwcm9iYWJseSBiZSBhIGRyYWcgYXQgbGVhc3Qgb24gb3JkZXJzIHBsYWNlZCBvbiAgdXMsIiBoZSBzYWlkLiBPYmVyaGVsbWFuIHNhaWQgdGhlIGNvbXBhbnkgYWxyZWFkeSBoYXMgdGVtcG9yYXJpbHkgY2xvc2VkIGZhY3RvcmllcyAgYW5kIGhhZCByb2xsaW5nIGxheW9mZnMuICJXZSd2ZSB0YWtlbiBzaWduaWZpY2FudCBhY3Rpb24gYWxyZWFkeSwgYW5kIHdlICB3aWxsIGJlIHRha2luZyBhZGRpdGlvbmFsIGNvc3QgcmVkdWN0aW9uIG1lYXN1cmVzIGluIHRoZSBzZWNvbmQgaGFsZiBvZiAgMjAxMywiIGhlIHNhaWQuIENhdGVycGlsbGFyIGN1dCBpdHMgZ2xvYmFsIGZ1bGwtdGltZSB3b3JrIGZvcmNlIGJ5IG1vcmUgdGhhbiAxMCwwMDAgIHBlb3BsZSBjb21wYXJlZCB3aXRoIHRoZSBzZWNvbmQgcXVhcnRlciBvZiBsYXN0IHllYXIuIFRoZSBjb21wYW55IGhhZCAgMTIyLDQwMiBlbXBsb3llZXMgYXQgdGhlIGVuZCBvZiBKdW5lLiBUaGUgdGVtcG9yYXJ5IHdvcmsgZm9yY2UgYWxzbyAgZHJvcHBlZCBieSA5LDYzMyBkdXJpbmcgdGhlIHF1YXJ0ZXIuIFByb2ZpdHMgZmVsbCBpbiBlYWNoIG9mIENhdGVycGlsbGFyJ3MgYmlnIGRpdmlzaW9ucy4gT3BlcmF0aW5nIHByb2ZpdCAgZmVsbCA2MSBwZXJjZW50IHRvICQ1NTAgbWlsbGlvbiBpbiByZXNvdXJjZSBpbmR1c3RyaWVzLCB3aGljaCBpbmNsdWRlcyAgbWluaW5nLiBJdCB3YXMgZG93biA0NyBwZXJjZW50IHRvICQzNjIgbWlsbGlvbiBmb3IgY29uc3RydWN0aW9uICBlcXVpcG1lbnQsIGFuZCBkb3duIDMgcGVyY2VudCB0byAkOTU1IG1pbGxpb24gaW4gcG93ZXIgc3lzdGVtcywgd2hpY2ggIG1ha2VzIGl0ZW1zIGluY2x1ZGluZyBsYXJnZSBlbGVjdHJpY2FsIGdlbmVyYXRvcnMgYW5kIGxvY29tb3RpdmUgIGVuZ2luZXMuIEEgOSBwZXJjZW50IGRyb3AgaW4gQ2F0ZXJwaWxsYXIncyBjb25zdHJ1Y3Rpb24gcmV2ZW51ZSBjYW1lIGRlc3BpdGUgIHRoZSBpbXByb3ZlbWVudHMgaW4gdGhlIFUuUy4gaG91c2luZyBtYXJrZXQuIEJ1dCBOb3J0aCBBbWVyaWNhIGlzIGxlc3MgIHRoYW4gaGFsZiBvZiBDYXRlcnBpbGxhcidzIGNvbnN0cnVjdGlvbiByZXZlbnVlLiAiQ29uc3RydWN0aW9uIGZvciB1cyBpbiB0aGUgVS5TLiBpcyBhIGxpdHRsZSBiZXR0ZXIgdGhhbiB3aGF0IGl0IHdhcywgIGJ1dCByZW1lbWJlciwgd2UncmUgZ2xvYmFsLCIgRGVXYWx0IHNhaWQuICJFdXJvcGUgaXMgbm90IGRvaW5nIHRvbyB3ZWxsICBhdCBhbGwuIiBIYWxmIG9mIHRoZSBjb3VudHJpZXMgdGhhdCBldXJvIGFyZSBub3cgaW4gcmVjZXNzaW9uIGFuZCB1bmVtcGxveW1lbnQgaXMgc29hcmluZy4gRGVXYWx0IGFsc28gbm90ZWQgdGhhdCBldmVuIGluIHRoZSBVLlMuLCBob3VzaW5nIHN0YXJ0cyBhcmUgbGVzcyB0aGFuICBoYWxmIG9mIHdoYXQgdGhleSB3ZXJlIGR1cmluZyB0aGUgcGVhayBpbiB0aGUgbWlkLTIwMDBzLiBBbmQgdGhlICByZWNvdmVyeSBoYXMgYmVlbiBtdWNoIHdlYWtlciBmb3Igbm9uLXJlc2lkZW50aWFsIGJ1aWxkaW5ncyBzdWNoIGFzICB3YXJlaG91c2VzIGFuZCByZXRhaWwgc3BhY2UuIENvbW1vZGl0eSBwcmljZXMgaGF2ZSBmYWxsZW4gZHVlIHRvIGVjb25vbWljIHR1cm1vaWwgaW4gRXVyb3BlIGFuZCAgc2xvd2luZyBncm93dGggaW4gQ2hpbmEsIGZvcmNpbmcgbWluZXJzIHRvIGJlY29tZSBtb3JlIGNvbnNlcnZhdGl2ZSB3aXRoICBzcGVuZGluZy4gUHJpY2VzIGZvciBjb3BwZXIsIGFsdW1pbnVtLCBhbmQgZ29sZCBoYXZlIGFsbCBmYWxsZW4gc2hhcnBseSB0aGlzIHllYXIuIEEgbmV3IENpdGkgc3VydmV5IG9mIHNwZW5kaW5nIHBsYW5zIGJ5IG1pbmluZyBhbmQgY29uc3RydWN0aW9uICBjb21wYW5pZXMgZm91bmQgYSAxNiBwZXJjZW50IGRlY2xpbmUgZXhwZWN0ZWQgc3BlbmRpbmcgb24gbWluaW5nICBlcXVpcG1lbnQgdGhpcyB5ZWFyIGNvbXBhcmVkIHdpdGggMjAxMi4gVGhlIHdlYWtuZXNzIGlzIG5vdGFibGUgYWNyb3NzICBhbGwgdHlwZXMgb2YgZXF1aXBtZW50IGFuZCBhbGwgdHlwZXMgb2YgY29tbW9kaXRpZXMsIENpdGkgd3JvdGUuIE1pbmluZyBjb21wYW5pZXMgYXJlIHR1cm5pbmcgYXdheSBmcm9tIGdyb3d0aCBhbmQgcmUtZm9jdXNpbmcgb24gIGNvc3RzIGFuZCByZXR1cm5zLiAiV2UgYmVsaWV2ZSB0aGUgY29uc2VxdWVuY2Ugd2lsbCBsaWtlbHkgYmUgYSAgbXVsdGkteWVhciBkZWNsaW5lIGluIGNhcGl0YWwgc3BlbmRpbmcsIiB0aGUgQ2l0aSByZXBvcnQgc2FpZC4gTWVhbndoaWxlIENpdGkncyBzdXJ2ZXkgYWxzbyBzaG93cyBhIGNvbnRpbnVpbmcgZGVjbGluZSBpbiBleHBlY3RlZCAgY29uc3RydWN0aW9uIHNwZW5kaW5nIOKAlCBkb3duIDguMSBwZXJjZW50IG92ZXIgdGhlIG5leHQgMTIgbW9udGhzLiAgUHJpY2luZyBpcyBleHBlY3RlZCB0byBkZWNsaW5lIGJ5IDMgcGVyY2VudC4gQ2F0ZXJwaWxsYXIgc2FpZCBUdWVzZGF5IHRoYXQgZ2xvYmFsIHNhbGVzIG9mIGl0cyBoZWF2eSBlcXVpcG1lbnQgIGZlbGwgOCBwZXJjZW50IGZvciB0aGUgdGhyZWUtbW9udGggcGVyaW9kIHRoYXQgZW5kZWQgaW4gSnVuZSwgaHVydCBieSBhICBzdGVlcCBkcm9wIGluIGRlbWFuZCBmcm9tIEFzaWEuIFRoYXQgZm9sbG93ZWQgYSA3IHBlcmNlbnQgZGVjcmVhc2UgZm9yIHRoZSB0aHJlZSBtb250aHMgdGhhdCBlbmRlZCBpbiAgTWF5IGFuZCBhIDkgcGVyY2VudCBzbGlkZSBmb3IgdGhlIHRocmVlIG1vbnRocyB0aGF0IGVuZGVkIGluIEFwcmlsLCB0aGUgIGNvbXBhbnkgc2FpZCBpbiBhIFNlY3VyaXRpZXMgYW5kIEV4Y2hhbmdlIENvbW1pc3Npb24gZmlsaW5nLiBTYWxlcyBpbiBDYXRlcnBpbGxhcidzIEFzaWEgcmVnaW9uIGRyb3BwZWQgMjEgcGVyY2VudCBpbiB0aGUgbW9zdCByZWNlbnQgcGVyaW9kLCB3aGlsZSBOb3J0aCBBbWVyaWNhbiBzYWxlcyBmZWxsIDEwIHBlcmNlbnQuIFRoZSBvbmx5IHJlZ2lvbiB0byBwb3N0IGFuIGluY3JlYXNlIHdhcyBMYXRpbiBBbWVyaWNhLCB3aGVyZSBzYWxlcyByb3NlIDkgcGVyY2VudC4gVGhlIGZpZ3VyZXMgYXJlIGJhc2VkIG9uIHVuaXQgc2FsZXMgYXMgcmVwb3J0ZWQgYnkgQ2F0ZXJwaWxsYXIncyBkZWFsZXJzLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUAPDFCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI3ZWM0ZmM3MWUzMGQ0ZGI=</field><field name="symbol" class="java.lang.String">rO0ABXQABUZVTExM</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUAUMqyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA48zMzMzMz</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA48zMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA48zMzMzMz</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA48zMzMzMz</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA2IUeuFHrh</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAFeA==</field><field name="id" class="java.lang.String">rO0ABXQAEGE3MzNmNDdlM2EzNzU1MGI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mG47AAAA==</field></document></documents><date>2015-05-07T12:07:56-0500</date></cacheEntry>
<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hQcmVzaWRlbnQgVmxhZGltaXIgUHV0aW5zIG1lZGRsaW5nIGluIFVrcmFpbmUgY29zdCBSdXNzaWEgZGVhcmx5IGluIGZpbmFuY2lhbCBtYXJrZXRzIFdpdGggdGhlIGRvd25pbmcgb2YgTWFsYXlzaWFuIEFpcmxpbmVzIEZsaWdodCAxNyB0aGUgdG9sbCBpcyBvbmx5IGdldHRpbmcgd29yc2UgVGhlIHByaWNlIHRvIHByb3RlY3QgUnVzc2lhbiBib25kcyBhZ2FpbnN0IGRlZmF1bHQgYWxyZWFkeSB0aGUgaGlnaGVzdCBhbW9uZyB0aGUgd29ybGRzIGZvdXIgbGFyZ2VzdCBlbWVyZ2luZyBtYXJrZXRzIGhhcyBzdXJnZWQgc2luY2UgdGhlIEp1bHkgMTcgdHJhZ2VkeSBpbiBlYXN0ZXJuIFVrcmFpbmUgVGhlIE1pY2V4IEluZGV4IHJlc3VtZWQgaXRzIGRlY2xpbmUgcHV0dGluZyB0aGUgbG9zc2VzIHNpbmNlIFB1dGluIGJlZ2FuIGhpcyBwdXNoIGludG8gQ3JpbWVhIGluIGxhdGUgRmVicnVhcnkgYXQgNDIgcGVyY2VudCB0aHJvdWdoIHllc3RlcmRheSBhbmQgd2lwaW5nIG91dCBhYm91dCAyOCBiaWxsaW9uIGluIG1hcmtldCB2YWx1ZSBldmVuIGFzIHN0b2NrIGdhdWdlcyBmcm9tIHRoZSBVUyB0byBJbmRpYSBqdW1wZWQgdG8gYWxsdGltZSBoaWdocyBSdXNzaWFzIG1hcmtldCBzbHVtcCBpcyBleGFjZXJiYXRpbmcgYW4gZWNvbm9taWMgc2xvd2Rvd24gdGhlIG9wcG9zaXRlIGVmZmVjdCBvZiB0aGUgd2VhbHRoIGdlbmVyYXRpb24gZnJvbSBzdG9jayByYWxsaWVzIHRoYXQgYXJlIGhlbHBpbmcgdW5kZXJwaW4gZ3Jvd3RoIGFjcm9zcyB0aGUgZ2xvYmUgUnVzc2lhbiBEZXB1dHkgRWNvbm9teSBNaW5pc3RlciBBbmRyZXkgS2xlcGFjaCBzYWlkIHRoaXMgbW9udGggdGhlIDIgdHJpbGxpb24gZWNvbm9teSBwb3N0ZWQgemVybyBncm93dGggaW4gdGhlIHNlY29uZCBxdWFydGVyIHdoZW4gY29tcGFyZWQgd2l0aCB0aGUgZmlyc3QgVGhhdCBmb2xsb3dzIGEgMDUgcGVyY2VudCBjb250cmFjdGlvbiBpbiB0aGUgSmFudWFyeXRvTWFyY2ggcGVyaW9kIFRoZSBtYXJrZXQgaXMgc2VuZGluZyBhIHNpZ25hbCB0aGF0IFJ1c3NpYSBzaG91bGQgYXZvaWQgYmVjb21pbmcgYW4gb3V0Y2FzdCBhbmQgYXZvaWQgc2h1dHRpbmcgaXRzZWxmIG91dCBvZiBnbG9iYWwgbWFya2V0cyBBbGVrc2VpIEJlbGtpbiB3aG8gaGVscHMgbWFuYWdlIGFib3V0IDQgYmlsbGlvbiBhcyBjaGllZiBpbnZlc3RtZW50IG9mZmljZXIgYXQgS2FwaXRhbCBBc3NldCBNYW5hZ2VtZW50IExMQyBpbiBNb3Njb3cgc2FpZCBieSBlbWFpbCB5ZXN0ZXJkYXkgUHV0aW4gYmVsaWV2ZXMgdGhhdCB3aGF0IGhlIGlzIGRvaW5nIGlzIGp1c3RpZmllZCBhbmQgaGUgaXMgdmVyeSBtdWNoIGF3YXJlIHRoYXQgaGUgaXMgbm90IGZhY2luZyBhIHVuaXRlZCBvcHBvc2l0aW9uIGluIFVrcmFpbmUgQnV0IGl0cyBnZXR0aW5nIGNvc3RsaWVyIHdpdGggZXZlcnkgbW9udGggTW9yZSBTYW5jdGlvbnMgVGhlIE1pY2V4IHNhbmsgNjEgcGVyY2VudCBpbiB0aGUgdGhyZWUgZGF5cyB0aHJvdWdoIEp1bHkgMjEgdGhlIGJpZ2dlc3QgcmV0cmVhdCBzaW5jZSBNYXJjaCBmb2xsb3dpbmcgYSB0aGlyZCByb3VuZCBvZiBVUyBzYW5jdGlvbnMgYWdhaW5zdCBQdXRpbnMgZ292ZXJubWVudCBhbmQgdGhlIGRvd25pbmcgb2YgTUgxNyB3aGljaCB0aGUgVVMgYW5kIEV1cm9wZWFuIFVuaW9uIHNheSBtYXkgaGF2ZSBiZWVuIGNhcnJpZWQgb3V0IGJ5IHByb1J1c3NpYW4gcmViZWxzIEFsbCAyOTggcGFzc2VuZ2VycyBhbmQgY3JldyBhYm9hcmQgdGhlIHBsYW5lIHdlcmUga2lsbGVkIFRoZSBNaWNleCByb3NlIDE4IHBlcmNlbnQgdG9kYXkgYnkgMTMwIHBtIGluIE1vc2NvdyBMZXNzIHRoYW4gYSB3ZWVrIGFmdGVyIGFwcHJvdmluZyB0aGUgbmV3IG1lYXN1cmVzIGRlc2lnbmVkIHRvIHB1bmlzaCBQdXRpbiBmb3IgZmFpbGluZyB0byBlbmQgc3VwcG9ydCBmb3IgdGhlIFVrcmFpbmlhbiBzZXBhcmF0aXN0cyB0aGUgVVMgaXMgcHVzaGluZyBFdXJvcGVhbiBnb3Zlcm5tZW50cyBmb3IgZnVydGhlciBwZW5hbHRpZXMgYWdhaW5zdCBSdXNzaWEgU2VjcmV0YXJ5IG9mIFN0YXRlIEpvaG4gS2Vycnkgc2FpZCBKdWx5IDIwIGNpcmN1bXN0YW50aWFsIGV2aWRlbmNlIHN1Z2dlc3RzIFJ1c3NpYSBwcm92aWRlZCB0aGUgbWlzc2lsZSB0aGF0IHJlYmVscyB1c2VkIHRvIHNob290IGRvd24gdGhlIHBhc3NlbmdlciBwbGFuZSBVSyBQcmltZSBNaW5pc3RlciBEYXZpZCBDYW1lcm9uIHllc3RlcmRheSByYWlzZWQgdGhlIHByb3NwZWN0IG9mIGEgRVV3aWRlIGJsb2NrIG9uIGRlZmVuc2UgZXhwb3J0cyB0byBSdXNzaWEgYXMgd2VsbCBhcyB0YXJnZXRlZCBzYW5jdGlvbnMgYWdhaW5zdCB0aGUgY3JvbmllcyBhbmQgb2xpZ2FyY2hzIGFyb3VuZCBQdXRpbiB1bmxlc3MgdGhlIGNvdW50cnkgZHJvcHMgaXRzIHN1cHBvcnQgb2YgdGhlIHNlcGFyYXRpc3RzIE5lZ290aWF0ZSBTb2x1dGlvbiBQdXRpbiBoYXMgZGVmaWVkIGludGVybmF0aW9uYWwgbGVhZGVycyBzYXlpbmcgdGhhdCBub2JvZHkgc2hvdWxkIHVzZSB0aGlzIHRyYWdlZHkgdG8gYWNoaWV2ZSBzZWxmaXNoIHBvbGl0aWNhbCBhaW1zIEhlIGJsYW1lZCB0aGUgY3Jhc2ggb2YgdGhlIHBsYW5lIG9uIHRoZSBVa3JhaW5lIGNvbmZsaWN0IGFuZCBzYWlkIFJ1c3NpYSB3aWxsIGRvIGV2ZXJ5dGhpbmcgaXQgY2FuIHRvIHNlZWsgYSBuZWdvdGlhdGVkIHNldHRsZW1lbnQgb2YgdGhlIGNyaXNpcyBUaGUgYmlnIGRpZmZlcmVuY2UgYmV0d2VlbiB0aGUgcmVjZW50IGRldGVyaW9yYXRpb24gaW4gc2VudGltZW50IHRvd2FyZHMgUnVzc2lhIGFuZCB0aGUgcHJlc3N1cmUgb24gb3RoZXIgRU0gYXNzZXRzIGlzIHRoYXQgaW4gdGhlIGNhc2Ugb2YgUnVzc2lhIGl0IGlzIGFsbW9zdCBlbnRpcmVseSBkcml2ZW4gYnkgdGhlIGFjdGlvbnMgb2Ygb25lIG1hbiBOaWNob2xhcyBTcGlybyBtYW5hZ2luZyBkaXJlY3RvciBvZiBMb25kb25iYXNlZCBTcGlybyBTb3ZlcmVpZ24gU3RyYXRlZ3kgc2FpZCBieSBlbWFpbCBXaGlsZSB0aGVyZXMgbm8gcXVlc3Rpb24gdGhhdCBSdXNzaWFzIGVjb25vbXkgaXMgaW4gYSBkaXJlIHN0YXRlIHJpZ2h0IG5vdyBzZW50aW1lbnQgdG93YXJkcyBSdXNzaWFuIGFzc2V0cyBpcyBzdGlsbCBzdHJvbmdseSBpbmZsdWVuY2VkIGJ5IHBlcmNlcHRpb25zIG9mIHdoYXQgTXIgUHV0aW4gd2lsbCBkbyBUaGUgY29zdCBvZiBwcm90ZWN0aW5nIFJ1c3NpYW4gYm9uZHMgYWdhaW5zdCBkZWZhdWx0IGZvciBmaXZlIHllYXJzIHJvc2UgYWJvdXQgMjMgYmFzaXMgcG9pbnRzIHRvIDIwNyBiYXNpcyBwb2ludHMgdGhpcyBtb250aCB0aGUgaGlnaGVzdCBhbW9uZyB0aGUgd29ybGRzIGxhcmdlc3QgZW1lcmdpbmcgbWFya2V0cyBpbmNsdWRpbmcgQnJhemlsIEluZGlhIGFuZCBDaGluYSBhY2NvcmRpbmcgdG8gZGF0YSBjb21waWxlZCBieSBCbG9vbWJlcmcgUnVzc2lhIGhhZCBpdHMgY3JlZGl0IHJhdGluZyBjdXQgdG8gQkJCIHRoZSBsb3dlc3QgaW52ZXN0bWVudCBncmFkZSByYW5raW5nIGluIEFwcmlsIGJ5IFN0YW5kYXJkICBQb29ycyBCZWFyaXNoIFRyYWRlcnMgUnVzc2lhbiBjb3Jwb3JhdGUgZGVidCBzYWxlcyBvdmVyc2VhcyBhcmUgZG93biA2NyBwZXJjZW50IHRoaXMgeWVhciBqdXN0IGFzIGNoZWFwIGdsb2JhbCBib3Jyb3dpbmcgY29zdHMgc3B1ciByZWNvcmQgaXNzdWFuY2Ugd29ybGR3aWRlIHRoZSBkYXRhIHNob3cgSW4gY3VycmVuY3kgb3B0aW9ucyB0cmFkZXJzIGFyZSB0aGUgbW9zdCBiZWFyaXNoIG9uIFJ1c3NpYXMgcnVibGUgYW1vbmcgMjMgZGV2ZWxvcGluZ2NvdW50cnkgY3VycmVuY2llcyBhZnRlciBBcmdlbnRpbmFzIHBlc28gSW52ZXN0b3JzIGFyZSBwYXlpbmcgMjkgcGVyY2VudGFnZSBwb2ludHMgbW9yZSBmb3IgdGhlIHJpZ2h0cyB0byBzZWxsIHRoZSBydWJsZSBvdmVyIHRob3NlIHRvIGJ1eSBUaGF0cyBhYm91dCB0d2ljZSB0aGUgcHJlbWl1bSBmb3IgdGhlIFBvbGlzaCB6bG90eSBhbmQgQ29sb21iaWFuIHBlc28gYWNjb3JkaW5nIHRvIHNvY2FsbGVkIHRocmVlbW9udGggcmlzayByZXZlcnNhbCBkYXRhIGNvbXBpbGVkIGJ5IEJsb29tYmVyZyBUaGUgMjUgcGVyY2VudCBkZWNsaW5lIGZvciBSdXNzaWFzIE1pY2V4IGVxdWl0eSBnYXVnZSBzaW5jZSB0aGUgZW5kIG9mIEZlYnJ1YXJ5IGNvbXBhcmVzIHdpdGggYW4gMTEgcGVyY2VudCBnYWluIGZvciBlbWVyZ2luZ21hcmtldCBzdG9ja3MgZ2xvYmFsbHkgYW5kIGEgNjEgcGVyY2VudCByYWxseSBpbiB0aGUgU3RhbmRhcmQgIFBvb3JzIDUwMCBJbmRleCBpbiB0aGUgVVMgQmlsbGlvbmFpcmUgTG9zc2VzIFJ1c3NpYXMgZm9yZWlnbiByZXNlcnZlcyBoYXZlIHNsaWQgMTUgYmlsbGlvbiBzaW5jZSB0aGUgZW5kIG9mIEZlYnJ1YXJ5IHRvIDQ3OCBiaWxsaW9uIGluIEp1bmUgYXMgdGhlIGNlbnRyYWwgYmFuayBzb2xkIGRvbGxhcnMgdG8gc3RlbSB0aGUgbG9zc2VzIGluIHRoZSBydWJsZSBSZXNlcnZlcyBoYXZlIGRlY2xpbmVkIDY3IGJpbGxpb24gb3IgMTIgcGVyY2VudCBzaW5jZSB0aGVpciBwZWFrIGluIEF1Z3VzdCAyMDExIGFjY29yZGluZyB0byBjZW50cmFsIGJhbmsgZGF0YSBBbWlkIHRoZSBtYXJrZXQgdHVybW9pbCB0aGUgMTkgcmljaGVzdCBSdXNzaWFucyBsb3N0IDE3NCBiaWxsaW9uIHNpbmNlIHRoZSBzdGFydCBvZiB0aGUgeWVhciBCeSBjb21wYXJpc29uIHRoZSByaWNoZXN0IDY0IEFtZXJpY2FucyBoYXZlIHNlZW4gdGhlaXIgd2VhbHRoIGdvIHVwIDU1IGJpbGxpb24gYWNjb3JkaW5nIHRvIHRoZSBCbG9vbWJlcmcgQmlsbGlvbmFpcmVzIEluZGV4IEdsb2JhbCBpbnZlc3RvcnMgd2l0aGRyZXcgMzQ4IG1pbGxpb24gZnJvbSBSdXNzaWFuIGJvbmQgYW5kIHN0b2NrIGZ1bmRzIHNpbmNlIHRoZSBlbmQgb2YgRmVicnVhcnkgYWNjb3JkaW5nIHRvIGRhdGEgY29tcGlsZWQgYnkgRVBGUiBHbG9iYWwgUnVzc2lhbiBzdG9ja3MgaGF2ZSB3aGlwc2F3ZWQgYXNzZXQgbWFuYWdlcnMgdGhpcyB5ZWFyIFRoZXkgcGx1bmdlZCBhYm91dCAxOCBwZXQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMC0wNi0xMVQwMDowMDowMFogVE8gMjAxMy0wNy0zMVQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDcyNTA=</field><field name="title" class="java.lang.String">rO0ABXQAQFJ1c3NpYSBTdG9ja3MgUGx1bmdlIDEwJSBGcm9tIEhpZ2ggYXMgR2F6cHJvbSBGYWxscyB0byDigJgwOSBMb3c=</field><field name="content" class="java.lang.String">rO0ABXQPS1J1c3NpYW4gc2hhcmVzIHR1bWJsZWQgdG8gYSBOb3ZlbWJlciBsb3csIGZhbGxpbmcgMTAgcGVyY2VudCBmcm9tIHRoZSBoaWdoZXN0IGxldmVsIHRoaXMgeWVhciwgYXMgT0FPIEdhenByb20gc2x1bXBlZCBhbmQgY3J1ZGUgb2lsLCB0aGUgY291bnRyeeKAmXMgbWFpbiBleHBvcnQgZWFybmVyLCBoYWx0ZWQgaXRzIGFkdmFuY2UuIFZvbGF0aWxpdHkgc3VyZ2VkLiBUaGUgTWljZXggSW5kZXggcmV0cmVhdGVkIDEuOCBwZXJjZW50IHRvIDEsNDAwLjQ0IGJ5IDI6NDEgcC5tLiBpbiBNb3Njb3csIHRoZSBsb3dlc3QgaW50cmFkYXkgbGV2ZWwgc2luY2UgTm92LiAzMCBhbmQgYSAxMCBwZXJjZW50IGRyb3AgZnJvbSB0aGlzIHllYXLigJlzIGhpZ2ggb24gSmFuLiAyOC4gVHJhZGluZyB2b2x1bWVzIHdlcmUgMTIgcGVyY2VudCBhYm92ZSB0aGUgMzAtZGF5IGF2ZXJhZ2UsIHdoaWxlIDEwLWRheSBwcmljZSBzd2luZ3Mgcm9zZSB0byAxMi45MywgdGhlIG1vc3Qgc2luY2UgTWFyY2ggMjguIE1ldGFsIHByb2R1Y2VycyBPQU8gTWFnbml0b2dvcnNrIElyb24gJiBTdGVlbCwgT0FPIFNldmVyc3RhbCBhbmQgT0FPIE5vdm9saXBldHNrIFN0ZWVsIGZlbGwgYXQgbGVhc3QgNCBwZXJjZW50LiBDcnVkZSBvaWwsIHdoaWNoIHRvZ2V0aGVyIHdpdGggbmF0dXJhbCBnYXMgYWNjb3VudHMgZm9yIGFib3V0IGhhbGYgUnVzc2lh4oCZcyBidWRnZXQgcmV2ZW51ZSwgcmV0cmVhdGVkIDAuMiBwZXJjZW50IHRvICQ5NC40NiBwZXIgYmFycmVsIGluIE5ldyBZb3JrLiBNb3N0IG1ldGFscyBkcm9wcGVkIGluIExvbmRvbiwgaW5jbHVkaW5nIHRpbiwgY29wcGVyIGFuZCB6aW5jLiBHYXpwcm9tLCBSdXNzaWHigJlzIGJpZ2dlc3QgY29tcGFueSBhbmQgbmF0dXJhbC1nYXMgZXhwb3J0IG1vbm9wb2x5LCBsb3N0IDIuNyBwZXJjZW50IHRvIDEyNS45MCBydWJsZXMsIHRoZSBsb3dlc3QgaW50cmFkYXkgbGV2ZWwgc2luY2UgQXByaWwgMjAwOS4gVGhlIHN0b2NrIGhhcyB0aGUgdGhpcmQtYmlnZ2VzdCB3ZWlnaHRpbmcgb24gdGhlIE1pY2V4LiDigJxJbnZlc3RvcnMgYXJlIGN1dHRpbmcgdGhlaXIgUnVzc2lhbiBob2xkaW5ncyzigJ0gTWFyayBSdWJpbnN0ZWluLCBoZWFkIG9mIHJlc2VhcmNoIGF0IE1ldHJvcG9sIElGQyBpbiBNb3Njb3csIHNhaWQgYnkgcGhvbmUuIOKAnEdhenByb20gaXMgZHJhZ2dpbmcgdGhlIHdob2xlIGluZGV4IGRvd24uIE1ldGFscyBhcmUgZG93biBhbmQgbWV0YWwgcHJvZHVjZXJzIGFyZSBzbHVtcGluZy7igJ0gT0FPIFJvc25lZnQgZHJvcHBlZCAyLjYgcGVyY2VudCB0byAyMjAgcnVibGVzLCB0aGUgbG93ZXN0IHNpbmNlIE9jdC4gMjMuIFJ1c3NpYSBpcyBjb25zaWRlcmluZyBzZWxsaW5nIGEgMTkgcGVyY2VudCBzdGFrZSBpbiB0aGUgbmF0aW9u4oCZcyBiaWdnZXN0IG9pbCBwcm9kdWNlciB0aGlzIHllYXIsIEVjb25vbXkgTWluaXN0ZXIgQW5kcmVpIEJlbG91c292IHRvbGQgcmVwb3J0ZXJzLiBPQU8gTWVjaGVsLCBhIGNva2luZyBjb2FsIGFuZCBzdGVlbCBwcm9kdWNlciwgZmVsbCA0LjcgcGVyY2VudCB0byAxNDEuMjAgcnVibGVzLiBUaGUgZG9sbGFyLWRlbm9taW5hdGVkIFJUUyBJbmRleCBzYW5rIDEuNSBwZXJjZW50IHRvIDEsNDMxLjcwLiBSZWxhdGl2ZSBTdHJlbmd0aCBUaGUgUmVsYXRpdmUgU3RyZW5ndGggSW5kZXggb24gdGhlIE1pY2V4IHdhcyBhYm91dCAzMi4gQSB2YWx1ZSBiZWxvdyAzMCBzaWduYWxzIHRoZSBpbmRleCBoYXMgYmVlbiBvdmVyc29sZCBhbmQgbWF5IHJldmVyc2UgbG9zc2VzLiBMb2NhbCBzdG9ja3MgZmVsbCB0aGUgbW9zdCBzaW5jZSBOb3YuIDEzIG9uIE1hcmNoIDE4IG9uIGNvbmNlcm4gQ3lwcnVz4oCZcyBwbGFuIHRvIHJlc2N1ZSBpdHMgZWNvbm9teSB0aHJvdWdoIGEgdGF4IG9uIHNhdmluZ3MgYWNjb3VudHMgbWF5IGFmZmVjdCAkNjAgYmlsbGlvbiBvZiBsb2FucyBhbmQgZGVwb3NpdHMgZnJvbSBSdXNzaWEuIEN5cHJ1cyBpcyB0aGUgYmlnZ2VzdCBkaXJlY3QgaW52ZXN0b3IgaW50byBSdXNzaWEgYW5kIHRoZSBjaGllZiByZWNpcGllbnQgb2YgUnVzc2lhbiBpbnZlc3RtZW50IGFicm9hZCBiZWNhdXNlIG9mIGEgZG91YmxlLXRheCBhdm9pZGFuY2UgdHJlYXR5IGFuZCBsb3cgdGF4IHJhdGVzLCBhY2NvcmRpbmcgdG8gUnVzc2lh4oCZcyBjZW50cmFsIGJhbmsuIE1ldGFsIHByb2R1Y2VycyBsZWQgdGhlIHJldHJlYXQgaW4gTG9uZG9uLiBOTE1LIGZlbGwgNC41IHBlcmNlbnQgdG8gJDE1LjQxIGluIExvbmRvbiB0cmFkaW5nLCB3aGlsZSBTZXZlcnN0YWwgbG9zdCA0LjEgcGVyY2VudCB0byAkOC4yOC4gT0FPIFJvc3RlbGVjb20sIHRoZSBjb3VudHJ54oCZcyBiaWdnZXN0IGZpeGVkLWxpbmUgcGhvbmUgb3BlcmF0b3IsIGZlbGwgYXMgbXVjaCBhcyAxIHBlcmNlbnQgYmVmb3JlIHRyYWRpbmcgZG93biAwLjUgcGVyY2VudCBhdCAxMTUuNTAgcnVibGVzLiBLb25zdGFudGluIE1hbG9mZWV24oCZcyBNYXJzaGFsbCBDYXBpdGFsIFBhcnRuZXIgYW5udWxlZCB0aGUgc2FsZSBvZiBpdHMgMTEgcGVyY2VudCBzdGFrZSBpbiBSb3N0ZWxlY29tIHRvIGJpbGxpb25haXJlIEFya2FkeSBSb3RlbmJlcmcsIGFjY29yZGluZyB0byBhIHN0YXRlbWVudC4gUm90ZW5iZXJn4oCZcyBjb21wYW55IGFncmVlZCB0byBidXkgdGhlIHNoYXJlcyBmcm9tIE1hcnNoYWxsIGZvciBhbiB1bmRpc2Nsb3NlZCBhbW91bnQgaW4gRmVicnVhcnkuIE5lZ2F0aXZlIFJlYWN0aW9uIOKAnFRoZSBsb3NzIG9mIGFuIGluZmx1ZW50aWFsIHNoYXJlaG9sZGVyIHN1Y2ggYXMgUm90ZW5iZXJnIG1heSBjYXVzZSBhIG5lZ2F0aXZlIG1hcmtldCByZWFjdGlvbizigJ0gQWxmYSBCYW5rIGFuYWx5c3RzIEVsaW5hIEt1bGlldmEgYW5kIERtaXRyeSBEb3JvbmluIHNhaWQgaW4gYW4gZS1tYWlsZWQgbm90ZS4gQXQgdGhlIHNhbWUgdGltZSwgdGhlIGNhbmNlbGF0aW9uIG9mIHRoZSBkZWFsIOKAnG1heSByZWR1Y2UgZmVhcnMgdGhhdCBSb3N0ZWxlY29tIHdpbGwgdXNlIG5vbi1tYXJrZXQgbWV0aG9kcyB3aGVuIGV4cGFuZGluZyBpbnRvIHRoZSBtb2JpbGUgc2VnbWVudCzigJ0gdGhlIEFsZmEgQmFuayBhbmFseXN0cyBzYWlkLiBUaGF0IHdvdWxkIGJlIOKAnHBvc2l0aXZlIGZvciBNVFMsIFZpbXBlbENvbSBhbmQgTWVnYUZvbi7igJ0gT0FPIE1vYmlsZSBUZWxlU3lzdGVtcyB0cmFkZWQgc3RlYWR5IGF0IDI2Ni4yMiBydWJsZXMgYWZ0ZXIgcmlzaW5nIGFzIG11Y2ggYXMgMS4zIHBlcmNlbnQuIFRoZSBSVFMgVm9sYXRpbGl0eSBJbmRleCwgd2hpY2ggbWVhc3VyZXMgZXhwZWN0ZWQgc3dpbmdzIGluIHN0b2NrIGZ1dHVyZXMsIGNsaW1iZWQgOC42IHBlcmNlbnQgdG9kYXkgdG8gMjAuODAsIHRoZSBmb3VydGggZGF5IG9mIGdhaW5zIGFuZCB0aGUgYmlnZ2VzdCBqdW1wIHNpbmNlIE1hcmNoIDE4IG9uIGEgY2xvc2luZyBiYXNpcy4gVGhlIE1hcmtldCBWZWN0b3JzIFJ1c3NpYSBFVEYsIHRoZSBsYXJnZXN0IGRlZGljYXRlZCBSdXNzaWFuIGV4Y2hhbmdlLXRyYWRlZCBmdW5kLCBhZGRlZCAwLjIgcGVyY2VudCB0byAkMjcuNjQgeWVzdGVyZGF5LiBUaGUgQmxvb21iZXJnIFJ1c3NpYS1VUyBFcXVpdHkgSW5kZXggaW5jcmVhc2VkIDAuNiBwZXJjZW50IHRvIDk2LjQ1IGluIE5ldyBZb3JrLiBSdXNzaWFuIGVxdWl0aWVzIGhhdmUgdGhlIGNoZWFwZXN0IHZhbHVhdGlvbnMgYW1vbmcgMjEgZW1lcmdpbmcgbWFya2V0cyB0cmFja2VkIGJ5IEJsb29tYmVyZy4gVGhlIE1pY2V4IHRyYWRlcyBhdCA1LjIgdGltZXMgZXN0aW1hdGVkIGVhcm5pbmdzIGFuZCBoYXMgbG9zdCA0LjQgcGVyY2VudCB0aGlzIHllYXIsIGNvbXBhcmVkIHdpdGggMTAuNCB0aW1lcyBmb3IgdGhlIE1TQ0kgRW1lcmdpbmcgTWFya2V0cyBJbmRleCwgd2hpY2ggaGFzIHNsaWQgMi44IHBlcmNlbnQgdGhpcyB5ZWFyLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT33dvCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGIzNzdhMjk3ZmExM2VjOTA=</field><field name="symbol" class="java.lang.String">rO0ABXQAA01UUw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT38nUyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxFHrhR64U</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxOuFHrhR7</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxFHrhR64U</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxNcKPXCj2</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAvlHrhR64U</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAACsRA==</field><field name="id" class="java.lang.String">rO0ABXQAEGI1YTdmNTE4YTliNzI2YjI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEdrAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExOTE4</field><field name="title" class="java.lang.String">rO0ABXQAOVJvdWJpbmkgRmx1bW1veGVkIGFzIFR1cmtleSdzIExpcmEgU2xpZGUgQ2xvdWRzIFJhdGUgQmV0cw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATsXQHsAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGRlYzg3ZWRjMDk2NzRhNTI=</field><field name="symbol" class="java.lang.String">rO0ABXQAA05PVg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATscZtcAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSNwo9cKPX</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSOPXCj1wp</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBRy4UeuFHs</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBR6FHrhR64</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBO4AAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAD2dDA==</field><field name="id" class="java.lang.String">rO0ABXQAEDdkNDQzMjE5MjdmZGU1MzE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGWFAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDkzMjA=</field><field name="title" class="java.lang.String">rO0ABXQAQVMmUCA1MDAgVmFsdWF0aW9uIFNsaXBzIDE5JSBCZWxvdyAyMDExIGFzIFNoYW91bCBBZHZpc2VzIFBhdGllbmNl</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATe13SyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGQxODhlMWU2ZTBjYzhhNzc=</field><field name="symbol" class="java.lang.String">rO0ABXQAAk1O</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATe7A4iAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArFHrhR64U</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArQo9cKPXD</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAqij1wo9cK</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAq64UeuFHs</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAnszMzMzMz</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAsiA==</field><field name="id" class="java.lang.String">rO0ABXQAEDE2YTZmMTI1NTk1Y2M3MDc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJLtAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUzNTk=</field><field name="title" class="java.lang.String">rO0ABXQAP1MmUCA1MDAgQmVhdGluZyBHb2xkIE1vc3QgU2luY2UgMTk5OSBhcyBFYXJuaW5ncyBFc3RpbWF0ZXMgUmlzZQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATZxbIiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGJiN2EzMDQ2ZDZmOWVjZWM=</field><field name="symbol" class="java.lang.String">rO0ABXQAAVA=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATZ2kuSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkvXCj1wo9</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlMzMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAklHrhR64U</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAk8KPXCj1x</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAk8KPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAC1pZA==</field><field name="id" class="java.lang.String">rO0ABXQAEDBjZmU2YzNkZDk1MDllMmU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMl3AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExOTc1</field><field name="title" class="java.lang.String">rO0ABXQAPFJ1c3NpYW4gVGhpcmQtUXVhcnRlciBHRFAgR3JldyBhdCBTbG93ZXN0IFNpbmNlIDIwMTAgUmVib3VuZA==</field><field name="content" class="java.lang.String">rO0ABXQT+Udyb3NzIGRvbWVzdGljIHByb2R1Y3Qgcm9zZSAyLjkgcGVyY2VudCBsYXN0IHF1YXJ0ZXIgY29tcGFyZWQgd2l0aCB0aGUgc2FtZSBwZXJpb2QgYSB5ZWFyIGVhcmxpZXIsIHRoZSBGZWRlcmFsIFN0YXRpc3RpY3MgU2VydmljZSBpbiBNb3Njb3cgc2FpZCBNb25kYXkgaW4gYW4gZS1tYWlsZWQgc3RhdGVtZW50LiBUaGF0IGV4Y2VlZGVkIGEgMi44IHBlcmNlbnQgbWVkaWFuIGZvcmVjYXN0IG9mIDE1IGVjb25vbWlzdHMgaW4gYSBCbG9vbWJlcmcgc3VydmV5LCB3aGljaCB3YXMgYWxzbyB0aGUgbGV2ZWwgb2YgZ3Jvd3RoIGVzdGltYXRlZCBieSB0aGUgRWNvbm9teSBNaW5pc3RyeSBsYXN0IG1vbnRoLiBUaGUgd2Vha2VuaW5nIGVjb25vbXkgcHJlc2VudHMgYSBjaGFsbGVuZ2UgdG8gUHJlc2lkZW50IFZsYWRpbWlyIFB1dGluLCB3aG8gcmV0dXJuZWQgaW4gTWF5IGZvciBhIHRoaXJkIHRlcm0gaW4gdGhlIEtyZW1saW4gcHJvbWlzaW5nIHRvIGNyZWF0ZSAyNSBtaWxsaW9uIG5ldyBqb2JzIGFuZCBib29zdCBpbnZlc3RtZW50LiBEcm91Z2h0cyByYXZhZ2VkIGNyb3BzIGFjcm9zcyBzb3V0aGVybiBhbmQgY2VudHJhbCBSdXNzaWEgdGhpcyB5ZWFyLCB3aGlsZSBzbG93aW5nIGdyb3d0aCBpbiBDaGluYSBhbmQgYSBzbHVtcCBpbiBFdXJvcGUgY3VyYmVkIGRlbWFuZCBmb3Igc2hpcG1lbnRzIG9mIG9pbCwgZ2FzIGFuZCBtZXRhbHMuIOKAnFdlIGV4cGVjdCBhIGZ1cnRoZXIgc2xvd2Rvd24sIHdpdGggZ3Jvd3RoIGRlcGVuZGVudCBvbiBjb25zdW1wdGlvbiwgYW5kIGFzc3VtaW5nIHRoZXJlIGFyZSBubyBleHRlcm5hbCBzaG9ja3Ms4oCdIERtaXRyeSBQb2xldm95LCBjaGllZiBlY29ub21pc3QgYXQgSU5HIEdyb2VwIE5WIGluIE1vc2Nvdywgc2FpZCBieSBwaG9uZS4g4oCcVGhlIGRvd250dXJuIGNhbWUgYXMgYSByZXN1bHQgb2Ygc2xvd2luZyBwcml2YXRlIGNvbnN1bXB0aW9uIGFuZCBpbnZlc3RtZW50LuKAnSBSdXNzaWHigJlzIE1pY2V4IEluZGV4IG9mIDMwIHN0b2NrcyBrZXB0IGdhaW5zIGFmdGVyIHRoZSByZXBvcnQsIHRyYWRpbmcgdXAgMC4zIHBlcmNlbnQgYXQgMSw0MDUuMzMgYXMgb2YgNDowMSBwLm0uIE1vc2Nvdy4gVGhlIHJ1YmxlIHdhcyBsaXR0bGUgY2hhbmdlZCBhZ2FpbnN0IHRoZSBkb2xsYXIgYXQgMzEuNjIyMC4gTG93ZXN0IFZhbHVhdGlvbiBUaGUgcnVibGUtZGVub21pbmF0ZWQgYmVuY2htYXJrIGdhdWdlIHRyYWRlcyBhdCA1LjQgdGltZXMgZXN0aW1hdGVkIGVhcm5pbmdzIGFmdGVyIGZhaWxpbmcgdG8gYWR2YW5jZSB0aGlzIHllYXIuIFRoYXQgY29tcGFyZXMgd2l0aCBhIG11bHRpcGxlIG9mIDEwIHRpbWVzIGZvciB0aGUgTVNDSSBFbWVyZ2luZyBNYXJrZXRzIEluZGV4LCB3aGljaCBoYXMgYWRkZWQgOC4yIHBlcmNlbnQuIFJ1c3NpYW4gZXF1aXRpZXMgaGF2ZSB0aGUgbG93ZXN0IHZhbHVhdGlvbnMgYmFzZWQgb24gZXN0aW1hdGVkIGVhcm5pbmdzIGFtb25nIDIxIGVtZXJnaW5nIG1hcmtldHMgdHJhY2tlZCBieSBCbG9vbWJlcmcuIOKAnFRoZSBtYWluIHJlYXNvbiBmb3IgdGhlIHNsb3dkb3duIGlzIG9idmlvdXNseSBhZ3JpY3VsdHVyZSwgYXMgdGhlIGhhcnZlc3QgaGFzIGJlZW4gd29yc2UgdGhpcyB5ZWFyLOKAnSBWbGFkaW1pciBUaWtob21pcm92LCBjaGllZiBlY29ub21pc3QgYXQgT3Rrcml0aWUgQ2FwaXRhbCBpbiBNb3Njb3csIHNhaWQgYmVmb3JlIHRoZSByZWxlYXNlLiDigJxUaGUgc2Vjb25kIHBvaW50IGlzIGEgY2VydGFpbiBkZWNlbGVyYXRpb24gaW4gaW5kdXN0cnksIGFuZCBtb3JlIHNvIGluIG1pbmluZyB0aGFuIGluIG1hbnVmYWN0dXJpbmcu4oCdIEFncmljdWx0dXJhbCBvdXRwdXQgZmVsbCA3LjcgcGVyY2VudCBpbiBTZXB0ZW1iZXIgZnJvbSBhIHllYXIgZWFybGllciBhbmQgMy44IHBlcmNlbnQgaW4gQXVndXN0LCB0aGUgRWNvbm9teSBNaW5pc3RyeSBzYWlkIG9uIGl0cyB3ZWJzaXRlIE5vdi4gOS4gUnVzc2lhLCB0aGUgd29ybGTigJlzIHRoaXJkLWJpZ2dlc3Qgd2hlYXQgZXhwb3J0ZXIgbGFzdCBzZWFzb24sIGhhcyBoYXJ2ZXN0ZWQgMjQgcGVyY2VudCBsZXNzIGdyYWlucyB0aGlzIHllYXIsIHRoZSBBZ3JpY3VsdHVyZSBNaW5pc3RyeSBzYWlkIE5vdi4gNy4gRXVyb3BlYW4gU2x1bXAgVGhlIEV1cm9wZWFuIFVuaW9uIGFjY291bnRzIGZvciBhYm91dCBoYWxmIG9mIGFsbCBSdXNzaWFuIHRyYWRlIGluIGdvb2RzLiBUaGUgZXVybyBhcmVh4oCZcyBlY29ub215IGNvbnRyYWN0ZWQgMC40IHBlcmNlbnQgaW4gdGhlIHNlY29uZCBxdWFydGVyIGZyb20gYSB5ZWFyIGVhcmxpZXIgYWZ0ZXIgc3RhZ25hdGluZyBpbiB0aGUgZmlyc3QgdGhyZWUgbW9udGhzIG9mIHRoZSB5ZWFyLiBDaGluYeKAmXMgc2hhcmUgaW4gUnVzc2lhbiB0cmFkZSByb3NlIHRvIDEwLjYgcGVyY2VudCBpbiBTZXB0ZW1iZXIgZnJvbSAxMC4xIHBlcmNlbnQgYSB5ZWFyIGVhcmxpZXIsIGFjY29yZGluZyB0byBSdXNzaWFuIGN1c3RvbXMgZGF0YSBjb21waWxlZCBieSBCbG9vbWJlcmcuIFRoZSBjb3VudHJ54oCZcyBlY29ub215IGdyZXcgNy40IHBlcmNlbnQgaW4gdGhlIHRoaXJkIHF1YXJ0ZXIsIHRoZSBzbG93ZXN0IHBhY2UgaW4gdGhyZWUgeWVhcnMuIFJhdyBtYXRlcmlhbHMgcmVwcmVzZW50IDgwIHBlcmNlbnQgb2YgYWxsIFJ1c3NpYW4gZXhwb3J0cywgd2l0aCBvaWwgYW5kIGdhcyBhbG9uZSBhY2NvdW50aW5nIGZvciA2MCBwZXJjZW50IHRvIDY1IHBlcmNlbnQsIGFjY29yZGluZyB0byBCTlAgUGFyaWJhcyBTQS4gUHJpY2VzIGZvciBVcmFscyBjcnVkZSwgUnVzc2lh4oCZcyBtYWluIG9pbCBleHBvcnQgYmxlbmQsIGFyZSBsaXR0bGUgY2hhbmdlZCB0aGlzIHllYXIsIGFmdGVyIGEgMTcgcGVyY2VudCBpbmNyZWFzZSBpbiAyMDExLiBJdCB0cmFkZWQgZG93biAwLjcgcGVyY2VudCBhdCAkMTA3LjUxIGEgYmFycmVsIHRvZGF5LiDigJxBbHRob3VnaCBvaWwgcHJpY2VzIGFyZSBmYXZvcmFibGUgZm9yIFJ1c3NpYSwgdGhlIGVjb25vbWljIHNsb3dkb3duIGlzIGxpa2VseSB0byBjb250aW51ZSzigJ0gSnVsaWEgVHNlcGxpYWV2YSwgaGVhZCBvZiByZXNlYXJjaCBhdCBCTlAgUGFyaWJhcyBTQSBpbiBNb3Njb3csIHNhaWQgYnkgZS1tYWlsLiDigJxBIHBvb3IgaGFydmVzdCBvZiAyMDEyIGFuZCB0aGUgYmFzZSBlZmZlY3QgbWF5IGFmZmVjdCBncm93dGggYW5kIHJlZHVjZSB0aGUgdXN1YWwgcmVib3VuZCB0eXBpY2FsIGZvciB0aGUgZm91cnRoIHF1YXJ0ZXIu4oCdIE5vdm9saXBldHNrLCBSdXNhbCBPQU8gTm92b2xpcGV0c2sgU3RlZWwsIGNvbnRyb2xsZWQgYnkgYmlsbGlvbmFpcmUgVmxhZGltaXIgTGlzaW4sIG1pc3NlZCB0aGlyZC1xdWFydGVyIHByb2ZpdCBlc3RpbWF0ZXMgYXMgc2FsZXMgd2Vha2VuZWQgaW4gRXVyb3BlIGFuZCBwcmljZXMgZmVsbC4gVW5pdGVkIENvLiBSdXNhbCwgdGhlIHdvcmxk4oCZcyBiaWdnZXN0IGFsdW1pbnVtIHByb2R1Y2VyLCByZXBvcnRlZCBhIG5ldCBsb3NzIHRoYXQgd2lkZW5lZCB0byAkMTE4IG1pbGxpb24gaW4gdGhlIEp1bHktU2VwdGVtYmVyIHBlcmlvZC4gQnVzaW5lc3MgYW5kIHN0YXRlIHNwZW5kaW5nIHRvIGV4cGFuZCBvdXRwdXQgaGFzIHNsdW1wZWQsIHdpdGggaW52ZXN0bWVudCB1bmV4cGVjdGVkbHkgc2hyaW5raW5nIDEuMyBwZXJjZW50IGluIFNlcHRlbWJlciBmcm9tIGEgeWVhciBlYXJsaWVyLCB0aGUgZmlyc3QgZGVjbGluZSBpbiAxOCBtb250aHMsIGFjY29yZGluZyB0byB0aGUgRmVkZXJhbCBTdGF0aXN0aWNzIFNlcnZpY2UuIEVjb25vbWlzdHMgcHJvamVjdCBhbm90aGVyIGEgZHJvcCBvZiAwLjkgcGVyY2VudCBpbiBPY3RvYmVyLCBhY2NvcmRpbmcgdG8gdGhlIG1lZGlhbiBvZiAxNCBlc3RpbWF0ZXMgaW4gYSBCbG9vbWJlcmcgc3VydmV5LiBQdXRpbiBvcmRlcmVkIHRoZSBnb3Zlcm5tZW50IGluIE1heSB0byBib29zdCBpbnZlc3RtZW50IHRvIGFjY291bnQgZm9yIG9uZS1xdWFydGVyIG9mIEdEUCBieSAyMDE1LCBhbmQgdG8gMjcgcGVyY2VudCBieSAyMDE4LCBmcm9tIDIxIHBlcmNlbnQgbGFzdCB5ZWFyLiBBUEVDLCBTb2NoaSDigJxCaWcgcHJvamVjdHMgcGxheWVkIHNvbWUgcm9sZSBpbiB0aGUgaW52ZXN0bWVudCBzbG93ZG93biwgaW5jbHVkaW5nIHByZXBhcmF0aW9ucyBmb3IgdGhlIEFzaWEtUGFjaWZpYyBFY29ub21pYyBDb29wZXJhdGlvbiBzdW1taXQsIE5vcmQgU3RyZWFtIGNvbnN0cnVjdGlvbiwgYW5kIHdvcmsgYWhlYWQgb2YgdGhlIDIwMTQgT2x5bXBpYyBHYW1lcyzigJ0gc2FpZCBNYXhpbSBPcmVzaGtpbiwgY2hpZWYgZWNvbm9taXN0IGF0IFZUQiBDYXBpdGFsIGluIE1vc2Nvdy4g4oCcV2hpbGUgcHJlcGFyYXRpb25zIGZvciB0aGUgT2x5bXBpY3MgY29udGludWUsIHRoZSBpbnZlc3RtZW50IHZvbHVtZXMgYXJlIHN0YXJ0aW5nIHRvIGRyb3Au4oCdIFJ1c3NpYeKAmXMgY2VudHJhbCBiYW5rIGxlZnQgaW50ZXJlc3QgcmF0ZXMgdW5jaGFuZ2VkIE5vdi4gOSBhZnRlciBhIHN1cnByaXNlIGluY3JlYXNlIGluIFNlcHRlbWJlciwgc2F5aW5nIHRoYXQgdGhlIGVjb25vbXnigJlzIGV4cGFuc2lvbiBoYXMgY29udGludWVkIHRvIGNvb2wgaW4gcmVjZW50IG1vbnRocy4gQ2hhaXJtYW4gU2VyZ2V5IElnbmF0aWV2IGlzIHRyeWluZyB0byByZWluIGluIHByaWNlIGdyb3d0aCB0aGF0IGZvcmNlZCBwb2xpY3kgbWFrZXJzIHRvIGFiYW5kb24gdGhlaXIgdGFyZ2V0IGZvciB0aGlzIHllYXIgYW5kIGxvd2VyIGV4cGVjdGF0aW9ucyBmb3IgbmV4dCB5ZWFy4oCZcyByYW5nZS4g4oCcV2Ugbm8gbG9uZ2VyIGV4cGVjdCBhbnkgZnVydGhlciBtb2RpZmljYXRpb25zIHRvIHBvbGljeSByYXRlcyB0aGlzIHllYXIs4oCdIENsZW1lbnMgR3JhZmUsIGNoaWVmIGVjb25vbWlzdCBhdCBHb2xkbWFuIFNhY2hzIEdyb3VwIEluYy4sIHNhaWQgaW4gYW4gZS1tYWlsZWQgbm90ZS4g4oCcVGhlIGVjb25vbXkgaXMgcnVubmluZyBhdCBjbG9zZSB0byBwb3RlbnRpYWwgb3V0cHV0LCBhbmQgaW1wcm92aW5nIFBNSXMgYW5kIHN0cm9uZyBib25kIGlzc3VhbmNlIHN1Z2dlc3QgdGhhdCBlY29ub21pYyBncm93dGggaXMgbGlrZWx5IHRvIGFjY2VsZXJhdGUgaW4gY29taW5nIG1vbnRocy7igJ0=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATrzM/cAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDVlNmY3OTQzMmYxZTcwMGM=</field><field name="symbol" class="java.lang.String">rO0ABXQABUJOUFFG</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATr4WlMAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBI4AAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBI4AAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBI4AAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBI4AAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBIKj1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDQ5NzYyNmQ1YjQ4NzI2NGQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKdQAAAA==</field></document></documents><date>2015-05-07T06:44:15-0500</date></cacheEntry>
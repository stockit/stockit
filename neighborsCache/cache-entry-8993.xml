<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0EpZBcHBsZSBtYWRlIGEgc3Ryb25nIGNhc2UgZm9yIGhvdyB5b3UgY2FuIHVzZSBpdHMgdXBjb21pbmcgQXBwbGUgV2F0Y2ggYW5kIHRoZSBkZXZpY2Ugc3RhY2tzIHVwIHdlbGwgYWdhaW5zdCB0aGUgY29tcGV0aXRpb24gSWYgeW91dmUgd2FpdGVkIGZvciB0aGUgQXBwbGUgV2F0Y2ggdG8gZGVjaWRlIG9uIGEgc21hcnR3YXRjaCBoZXJlIGFyZSBzb21lIHRoaW5ncyB0byBjb25zaWRlciBpbiB3ZWlnaGluZyB3aGV0aGVyIHlvdSByZWFsbHkgbmVlZCBvbmUgWW91bGwgbmVlZCBhbiBpUGhvbmUgNSBvciBuZXdlciB3aGlsZSB0aGUgcml2YWwgd2F0Y2hlcyB3aWxsIHR5cGljYWxseSB3b3JrIG9ubHkgd2l0aCBBbmRyb2lkIFBSSUNFIEFwcGxlIFdhdGNoIGlzIGFtb25nIHRoZSBtb3N0IGV4cGVuc2l2ZSBvbiB0aGUgbWFya2V0IFlvdSBjYW4gZ2V0IGFuIEFuZHJvaWQgc21hcnR3YXRjaCBmcm9tIE1vdG9yb2xhIG9yIFNvbnkgZm9yIDI1MCBZb3UgY2FuIGdldCBhIGhpZ2hlbmQgU2Ftc3VuZyBHZWFyIFMgd2l0aCBpdHMgb3duIGNlbGx1bGFyIGNvbm5lY3Rpdml0eSBmb3IgMzAwIHRocm91Z2ggQVRUIHBsdXMgdGhlIG1vbnRobHkgY29zdCBvZiBhIGRhdGEgcGxhbiBUaGUgY2hlYXBlc3QgQXBwbGUgV2F0Y2ggaXMgMzQ5IGFuZCB0aGF0cyBkZXNpZ25lZCBmb3IgZml0bmVzcyBlbnRodXNpYXN0cyBBIHN0YWlubGVzc3N0ZWVsIHZlcnNpb24gZm9yIGV2ZXJ5ZGF5IHdlYXIgc3RhcnRzIGF0IDU0OSBBIGx1eHVyeSBlZGl0aW9uIHdpdGggMThrYXJhdCBnb2xkIHN0YXJ0cyBhdCAxMDAwMCBhbmQgY2FuIGNvc3QgYXMgbXVjaCBhcyAxNzAwMCBERVBFTkRFTlQgT04gVEhFIFBIT05FIEFwcGxlIFdhdGNoIGRvZXNudCBoYXZlIGl0cyBvd24gY2VsbHVsYXIgY29ubmVjdGlvbiBZb3UgY2FuIG1ha2UgYW5kIHJlY2VpdmUgcGhvbmUgY2FsbHMgYW5kIG1lc3NhZ2VzIG9ubHkgaWYgeW91ciBpUGhvbmUgaXMgbmVhcmJ5IFRoYXQgc2FpZCB3aXRoIHRoZSBleGNlcHRpb24gb2YgU2Ftc3VuZ3MgR2VhciBTIGFuZCB0aGUgdXBjb21pbmcgTEcgV2F0Y2ggVXJiYW5lIExURSBtb3N0IG90aGVyIHNtYXJ0d2F0Y2hlcyBkb250IGhhdmUgY2VsbHVsYXIgc2VydmljZSBlaXRoZXIgQXBwbGUgV2F0Y2ggYWxzbyBkb2VzbnQgaGF2ZSBHUFMgZm9yIGJldHRlciBkaXN0YW5jZSB0cmFja2luZyBTb255cyBTbWFydFdhdGNoIDMgYW5kIHRoZSBHZWFyIFMgZG8gVGhlbiBhZ2FpbiBHUFMgaXMgcmFyZSBpbiBzbWFydHdhdGNoZXMgQXBwbGUgV2F0Y2ggd2lsbCB1c2UgeW91ciBwaG9uZXMgR1BTIHRvIGxlYXJuIHlvdXIgcnVubmluZyBwYXR0ZXJuIGFuZCBjYWxpYnJhdGUgaXRzIGJ1aWx0aW4gYWNjZWxlcm9tZXRlciBmb3IgYmV0dGVyIHRyYWNraW5nIHRoZSBuZXh0IHRpbWUgeW91IGdvIGZvciBhIHJ1biBhbmQgbGVhdmUgeW91ciBwaG9uZSBhdCBob21lIFNIQVBFIEFwcGxlIGlzIG9mZmVyaW5nIGRpZmZlcmVudCBzaXplcyBjb2xvcnMgbWF0ZXJpYWxzIGFuZCBiYW5kcyBidXQgYWxsIG9mIHRoZSB3YXRjaGVzIGhhdmUgcmVjdGFuZ3VsYXIgZmFjZXMgTW90b3JvbGFzIE1vdG8gMzYwIGFuZCBMR3MgRyBXYXRjaCBSIGFyZSBhbW9uZyB0aG9zZSB3aXRoIHJvdW5kIGZhY2VzIEFwcGxlIGhhcyBhIGdvb2QgcmVhc29uIHRob3VnaCBSb3VuZCBmYWNlcyBhcmUgZmluZSBmb3IgZ3JhcGhpY2FsIGNvbnRlbnQgc3VjaCBhcyBwaG90b3MgYW5kIG1hcHMgYnV0IHRoZXkgYXJlIGluZWZmaWNpZW50IGZvciB0ZXh0IFRoZXJlcyBhIGxvdCBvZiB3YXN0ZWQgc3BhY2Ugb24gYWxsIGZvdXIgc2lkZXMgcmVzdWx0aW5nIGluIGEgd2F0Y2ggdGhhdHMgYmlnZ2VyIHRoYW4gaXQgbmVlZHMgdG8gYmUgQW5vdGhlciBwbHVzIGZvciBBcHBsZSBBbGwgbW9kZWxzIGNvbWUgaW4gYSBzbWFsbGVyIHNpemUgd2hpY2ggbWlnaHQgZml0IGJldHRlciBvbiB3b21lbnMgaGFuZHMgQVBQUyBBUFBTIEFQUFMgVGhpcyBpcyBieSBmYXIgQXBwbGVzIGJpZ2dlc3Qgc3RyZW5ndGggQXQgTW9uZGF5cyBldmVudCBBcHBsZSBkZW1vbnN0cmF0ZWQgdXNpbmcgdGhlIHdhdGNoIHRvIHJlcXVlc3QgYSByaWRlIHRocm91Z2ggVWJlciBvcGVuIGEgZ2FyYWdlIGRvb3IgcmVtb3RlbHkgdXNpbmcgQWxhcm1jb20gYW5kIGJ5cGFzcyB0aGUgZnJvbnQgZGVzayB3aGVuIGNoZWNraW5nIGluIGF0IGEgU3Rhcndvb2QgaG90ZWwgRXhwZWN0IGEgcm9idXN0IG9mZmVyaW5nIG9mIGFwcHMgd2hlbiBBcHBsZSBXYXRjaCBnb2VzIG9uIHNhbGUgbmV4dCBtb250aCBXaXRoIG90aGVyIHdhdGNoZXMgZGV2ZWxvcGVycyBoYXZlIGJlZW4gc2xvdyB0byByZWxlYXNlIGFwcHMgZ2l2ZW4gaG93IHJlbGF0aXZlbHkgZmV3IHNtYXJ0d2F0Y2hlcyBoYXZlIGJlZW4gc29sZCBNT0JJTEUgUEFZIEFwcGxlIFdhdGNoIGhhcyBtb2JpbGUgcGF5IGNhcGFiaWxpdGllcyBhcyBBcHBsZSBQYXkgaXMgaW50ZWdyYXRlZCBQYXkgd2l0aCBhIHRhcCBvZiB5b3VyIHdyaXN0IGF0IGFueSBvZiB0aGUgbmVhcmx5IDcwMDAwMCBsb2NhdGlvbnMgQXBwbGUgUGF5IGlzIGFjY2VwdGVkIEl2ZSB5ZXQgdG8gc2VlIGEgc2ltaWxhciBjYXBhYmlsaXR5IGluIG90aGVyIHNtYXJ0d2F0Y2hlcyBldmVuIHRob3VnaCBzb21lIGhhdmUgTkZDIHdpcmVsZXNzIHRlY2hub2xvZ3kgZm9yIHN1Y2ggcGF5bWVudHMgU2Ftc3VuZyBpcyBjb21pbmcgb3V0IHdpdGggaXRzIG93biBwYXltZW50IHNlcnZpY2UgU2Ftc3VuZyBQYXkgYnV0IHRoZSBHZWFyIFMgZG9lc250IGhhdmUgTkZDIENVU1RPTUlaRSBUSEUgV0FUQ0ggRkFDRSBXaXRoIEFwcGxlIFdhdGNoIG9uY2UgeW91IHBpY2sgdGhlIGxvb2sgb2YgdGhlIHdhdGNoIGZhY2UgeW91IGNhbiBzb21ldGltZXMgY2hvb3NlIHRoZSB0eXBlcyBvZiBjb250ZW50IHRvIGVtYmVkIHN1Y2ggYXMgd2VhdGhlciBvciBzdG9jayBxdW90ZXMgV2l0aCBleGlzdGluZyBzbWFydHdhdGNoZXMgeW91cmUgdHlwaWNhbGx5IGxpbWl0ZWQgdG8gaG93IHRoZSBkaXNwbGF5IGxvb2tzIENPTlRST0xTIFVzZSB0aGUgQXBwbGUgV2F0Y2ggZGlhbCBrbm93biBhcyB0aGUgZGlnaXRhbCBjcm93biB0byB6b29tIGluIG9uIGEgbWFwIG9yIHNjcm9sbCBkb3duIHRleHQgWW91IHN0aWxsIG5lZWQgdG8gdGFwIG9uIHRoZSBzY3JlZW4gdG8gc2xpZGUgYSBtYXAgb3IgcGhvdG8gYXJvdW5kIGJ1dCB0aGUgZGlhbCByZWR1Y2VzIGhvdyBvZnRlbiB5b3VyIGZpbmdlciBibG9ja3MgdGhlIHNjcmVlbiBNYW55IHNtYXJ0d2F0Y2hlcyBvbiB0aGUgbWFya2V0IGhhdmUgYnV0dG9ucyB0aGF0IG1lcmVseSB0dXJuIG9uIHRoZSBkaXNwbGF5IGFuZCBtYWtlIG1lbnUgc2VsZWN0aW9ucyBCQVRURVJZIExJRkUgQXBwbGUgc2F5cyB0aGUgYmF0dGVyeSBzaG91bGQgbGFzdCAxOCBob3VycyBvbiBhIHNpbmdsZSBjaGFyZ2UgVGhhdHMgbGVzcyB0aGFuIHRoZSB0eXBpY2FsIHNtYXJ0d2F0Y2ggdGhvdWdoIGZldyBnbyBtb3JlIHRoYW4gMjQgaG91cnMgU29ueXMgU21hcnRXYXRjaCAzIGlzIGFtb25nIHRoZSBleGNlcHRpb25zIHByb21pc2luZyB0d28gZGF5cyBUaG91Z2ggSSBkaWRudCBhbHdheXMgZ2V0IHRoYXQgbXVjaCB0aGUgU29ueSB3YXRjaCBvZmZlcmVkIGVub3VnaCBmb3IgbWUgdG8gb2NjYXNpb25hbGx5IHNsZWVwIHdpdGggaXQgb24gSWYgeW91cmUgdXNpbmcgYW4gYXBwIHRoYXQgbW9uaXRvcnMgeW91ciBzbGVlcCBwYXR0ZXJucyB5b3VyIGJlc3QgYmV0IGlzIGEgZml0bmVzcyB0cmFja2VyIHRoYXQgY2FuIGdvIHNldmVyYWwgZGF5cyBvbiBhIGNoYXJnZSBHRVNUVVJFUyBUaGUgQXBwbGUgV2F0Y2ggZGlzcGxheSBpcyB1c3VhbGx5IHNsZWVwaW5nIHRvIHNhdmUgdGhlIGJhdHRlcnkgQXMgc29vbiBhcyB5b3UgbGlmdCB5b3VyIGFybSB0aGUgZGlzcGxheSBhdXRvbWF0aWNhbGx5IHR1cm5zIG9uIE1hbnkgb3RoZXIgc21hcnR3YXRjaGVzIGRvIHRoYXQgdG9vIFdoZXJlIEFwcGxlIFdhdGNoIHN0YW5kcyBvdXQgaXMgaW4gZGV0ZWN0aW5nIGhvdyBsb25nIHlvdSBoYXZlIHlvdXIgYXJtIHVwIEF0IGZpcnN0IGdsYW5jZSB5b3UgbWlnaHQgc2VlIHRoYXQgYSBtZXNzYWdlIGhhcyBhcnJpdmVkIEhvbGQgaXQgbG9uZ2VyIGFuZCB0aGUgZnVsbCBtZXNzYWdlIGFwcGVhcnMgRE9FU05UIEpVU1QgUkVQRUFUIFRIRSBQSE9ORSBNYW55IHNtYXJ0d2F0Y2hlcyBtZXJlbHkgcmVwZWF0IG5vdGlmaWNhdGlvbnMgdGhhdCBhcHBlYXIgb24geW91ciBwaG9uZSBhbmQgbm90aWZpY2F0aW9ucyBzb21ldGltZXMgbGluZ2VyIGV2ZW4gYWZ0ZXIgeW91dmUgdmlld2VkIHRoZW0gb24geW91ciBwaG9uZSB0YWJsZXQgb3IgUEMgQXBwbGUgc2F5cyBpdCB3aWxsIGRvIGEgYmV0dGVyIGpvYiBvZiBjb29yZGluYXRpbmcgdGhhdCBJZiBhIG5vdGlmaWNhdGlvbiBhcHBlYXJzIG9uIHRoZSB3YXRjaCB0aGUgcGhvbmUgaW4geW91ciBwb2NrZXQgd2lsbCBrbm93IG5vdCB0byBidWcgeW91IHdpdGggYSB2aWJyYXRpb24gU28gZG8geW91IG5lZWQgQXBwbGUgV2F0Y2ggQXBwbGUgV2F0Y2ggY2FuIGRvIGEgbG90ICBtb3JlIHRoYW4gcml2YWwgd2F0Y2hlcyBhbmQgcHJvYmFibHkgbW9yZSB0aGFuIHlvdSBuZWVkIGl0IHRvIGRvICBzbyB5b3VsbCBuZWVkIHRvIGRlY2lkZSB3aGljaCBmZWF0dXJlcyBhbmQgYXBwcyB5b3VsbCBmaW5kIGNvbnZlbmllbnQgCgpVbHRpbWF0ZWx5IGl0IGNvbWVzIGRvd24gdG8gaG93IHdpbGxpbmcgeW91IGFyZSB0byBwYXkgZm9yIHRoYXQgY29udmVuaWVuY2V0AARyb3dzdXEAfgAKAAAAAXQAATV0AAVzdGFydHVxAH4ACgAAAAF0AAEwdAACZmx1cQB+AAoAAAABdABvYXJ0aWNsZUlkLHRpdGxlLGNvbnRlbnQsZGF0ZSxzdG9ja0hpc3RvcnlJZCxzeW1ib2wsaGlzdG9yeURhdGUsb3BlbixoaWdoLGxvdyxjbG9zZSxhZGpDbG9zZSx2b2x1bWUsaWQsX3ZlcnNpb25fdAACZnF1cQB+AAoAAAABdAA6aGlzdG9yeURhdGU6WzIwMTMtMTItMDNUMDA6MDA6MDBaIFRPIDIwMTQtMDctMTBUNTk6NTk6NTlaXXgAcA==</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTI0ODc5</field><field name="title" class="java.lang.String">rO0ABXQALkdvb2dsZSBSZWRlc2lnbnMgQW5kcm9pZCB0byBQb3dlciBTbWFydHdhdGNoZXM=</field><field name="content" class="java.lang.String">rO0ABXQSA1RoZSAgSW50ZXJuZXQncyBtb3N0IGluZmx1ZW50aWFsIGNvbXBhbnkgaXMgdHJ5aW5nIHRvIHVubGVhc2ggYSBuZXcgZXJhIGluICBtb2JpbGUgY29tcHV0aW5nIHdpdGggYSB2ZXJzaW9uIG9mIGl0cyBBbmRyb2lkIHNvZnR3YXJlIHRhaWxvcmVkIGZvciAgaGlnaC10ZWNoIHdhdGNoZXMgYW5kIG90aGVyIGRldmljZXMgdGhhdCBjYW4gYmUgd29ybiBpbnN0ZWFkIG9mIGhlbGQuIFRoZSAgIkFuZHJvaWQgV2VhciIgb3BlcmF0aW5nIHN5c3RlbSByZWxlYXNlZCBUdWVzZGF5IGlzIGFuIGFsdGVyZWQgdmVyc2lvbiAgb2YgR29vZ2xlJ3MgcG9wdWxhciBzb2Z0d2FyZSB0aGF0IHBvd2VycyBtb3JlIHRoYW4gMSBiaWxsaW9uIG9mIHRoZSAgd29ybGQncyBzbWFydHBob25lcyBhbmQgdGFibGV0cy4gVGhlIG5ldyBzb2Z0d2FyZSB3aWxsIHJ1biBvbiBhbiBhcnJheSAgb2Ygc28tY2FsbGVkIHNtYXJ0d2F0Y2hlcyBzY2hlZHVsZWQgdG8gYmUgcmVsZWFzZWQgbGF0ZXIgdGhpcyB5ZWFyLiBUaGUgIEFuZHJvaWQgd2F0Y2hlcyB3aWxsIGJlIGxlc3MgY29uc3BpY3VvdXMg4oCUIGFuZCBwZXJoYXBzIGxlc3Mgb2Jub3hpb3VzIOKAlCAgdGhhbiBHb29nbGUgR2xhc3MsIHRoZSBoaWdoLXRlY2ggaGVhZHdlYXIgdGhhdCBpbmNsdWRlcyBhIHNtYWxsIGNhbWVyYSAgYW5kIHRodW1ibmFpbC1zaXplZCBkaXNwbGF5IHNjcmVlbiBhdHRhY2ggdG8gZnJhbWVzIHRoYXQgbG9vayBsaWtlIGEgIHBhaXIgb2Ygc3BlY3RhY2xlcy4gR29vZ2xlIHNvICBmYXIgaGFzIG9ubHkgc29sZCB0aGUgJDEsNTAwIEdsYXNzIGRldmljZSB0byBhIGxpbWl0ZWQgbnVtYmVyIG9mIHBlb3BsZSAga25vd24gYXMgImV4cGxvcmVycy4iIFNvbWUgb2YgdGhvc2UgZWFybHkgR2xhc3MgYWRvcHRlcnMgaGF2ZSBiZWVuICBtb2NrZWQgYXMgZ29vZnktbG9va2luZyBnZWVrcyB3aGlsZSBvdGhlcnMgaGF2ZSBiZWVuIHJpZGljdWxlZCBhbmQgIHNjb3JuZWQgZm9yIGJlaW5nIGFibGUgdG8gdGFrZSB2aWRlbyBhbmQgcGhvdG9zIHN1cnJlcHRpdGlvdXNseSB3aXRob3V0ICB0aGUgY29uc2VudCBvZiB0aG9zZSBhcm91bmQgdGhlbS4gTGlrZSAgR2xhc3MgYW5kIHNtYXJ0cGhvbmVzIHJ1bm5pbmcgb24gb3RoZXIgdmVyc2lvbnMgb2YgdGhlIHNvZnR3YXJlLCB0aGUgIEFuZHJvaWQgd2F0Y2hlcyB3aWxsIHJlc3BvbmQgdG8gdm9pY2UgY29tbWFuZHMgc3VjaCBhcyAiT2sgR29vZ2xlIiB0byAgcGxheSBhIHNwZWNpZmljIHNvbmcsIHNlbmQgYSB0ZXh0IG9yIG1ha2UgYSByZXN0YXVyYW50IHJlc2VydmF0aW9uLiBJdCAgd2lsbCBhbHNvIGZlYXR1cmUgYSB2aXJ0dWFsIGFzc2lzdGFudCwgY2FsbGVkIEdvb2dsZSBOb3csIHRvIGxlYXJuIGEgIHVzZXIncyByb3V0aW5lcyBhbmQgcHJlZmVyZW5jZSBzbyBpdCBjYW4gYXV0b21hdGljYWxseSBzaG93IGltcG9ydGFudCAgaW5mb3JtYXRpb24gdGhhdCBjYW4gYmUgc2VlbiB3aXRoIGEgcXVpY2sgbG9vayBhdCB0aGUgd3Jpc3QuIEdvb2dsZSAgaXMgYWxyZWFkeSB0cnlpbmcgdG8gY3JlYXRlIG1vcmUgdXNlcyBmb3IgQW5kcm9pZCB3YXRjaGVzIGJ5IG1ha2luZyB0aGUgIHNvZnR3YXJlIGF2YWlsYWJsZSB0byBjb21wdXRlciBwcm9ncmFtbWVycyBpbnRlcmVzdGVkIGluIG1ha2luZyBhcHBzICBmb3IgdGhlIHNvZnR3YXJlLiBDdWx0aXZhdGluZyAgbW9yZSBhcHBsaWNhdGlvbnMgd2lsbCBiZSBjcnVjaWFsIGJlY2F1c2Ugc21hcnR3YXRjaGVzIHByb2JhYmx5IG1heSAgbmV2ZXIgYmVjb21lIHRoZSBtYWluIGRldmljZSB0aGF0IHBlb3BsZSB1c2UgdG8gaGVscCBtYW5hZ2UgdGhlaXIgbGl2ZXMsICBzYWlkIEdhcnRuZXIgYW5hbHlzdCBCcmlhbiBCbGF1LiBUaGF0IG1lYW5zIGNvbnN1bWVycyBhcmUgZ29pbmcgdG8gaGF2ZSAgdG8gc2VlIG1vcmUgY29tcGVsbGluZyBmZWF0dXJlcyB0byBiZSBwZXJzdWFkZWQgdG8gc3BlbmQgYW5vdGhlciAkMTAwICBvciAkMjAwIGZvciBhIGNvbXBsZW1lbnRhcnkgZGV2aWNlIHRvIGEgc21hcnRwaG9uZSBvciB0YWJsZXQuICJGYXNoaW9uICBpcyBhIGJpZyBpbmR1c3RyeSwgYnV0IHNlbGxpbmcgdGhlc2Ugd2F0Y2hlcyB3aWxsIGJlIG1vcmUgb2YgIGNoYWxsZW5nZSwiIEJsYXUgcHJlZGljdGVkLiAiV2Ugc3RpbGwgbmVlZCB0byBzZWUgd2hhdCBraW5kIG9mIGNvb2wgYXBwcyAgdGhlcmUgd2lsbCBiZSBhbmQgd2hhdCBraW5kIG9mIG5ldyBiZWhhdmlvcnMgdGhleSB3aWxsIGVuYWJsZS4iIFRoZSAgZmlyc3QgQW5kcm9pZCB3YXRjaCBtYXkgY29tZSBmcm9tIE1vdG9yb2xhIE1vYmlsaXR5LCBhIEdvb2dsZSAgc3Vic2lkaWFyeSB0aGF0IGlzIGluIHRoZSBwcm9jZXNzIG9mIGJlaW5nIHNvbGQgdG8gTGVub3ZvIEdyb3VwLiAgTW90b3JvbGEgYWxyZWFkeSBoYXMgYnVpbHQgYSBwcm90b3R5cGUgb2YgaXRzIEFuZHJvaWQgd2F0Y2gsIGNhbGxlZCAgIk1vdG8gMzYwLCIgdGhhdCB3aWxsIGdvIG9uIHNhbGUgdGhpcyBzdW1tZXIuIE5vIGRldGFpbHMgb24gcHJpY2luZyB3ZXJlICBhbm5vdW5jZWQuIExHIEVsZWN0cm9uaWNzLCBhIGZyZXF1ZW50IEdvb2dsZSBwYXJ0bmVyIGluIHRoZSAgc21hcnRwaG9uZSBhbmQgdGFibGV0IG1hcmtldHMsIGFuZCBmYXNoaW9uIGFjY2Vzc29yeSBtYWtlciBGb3NzaWwgR3JvdXAgIGFsc28gc2F5IHRoZXkgd2lsbCBzaGFyZSBtb3JlIGRldGFpbHMgYWJvdXQgdGhlaXIgQW5kcm9pZCB3YXRjaGVzIGluIHRoZSAgY29taW5nIG1vbnRocy4gT3RoZXIgZGV2aWNlIG1ha2VycyB3b3JraW5nIG9uIEFuZHJvaWQgd2F0Y2hlcyBpbmNsdWRlICBBc3VzLCBIVEMgYW5kIFNhbXN1bmcgRWxlY3Ryb25pY3MsIGFjY29yZGluZyB0byBHb29nbGUuIFRob3NlICBjb21wYW5pZXMgd2lsbCBsaWtlbHkgYmUgY29tcGV0aW5nIGFnYWluc3QgYSBoaWdobHkgYW50aWNpcGF0ZWQgIHNtYXJ0d2F0Y2ggZnJvbSBpUGhvbmUgbWFrZXIgQXBwbGUgSW5jLiB0aGF0IGlzIGV4cGVjdGVkIHRvIGJlIHVudmVpbGVkICBsYXRlciB0aGlzIHllYXIuIFRydWUgdG8gaXRzIHNlY3JldGl2ZSBuYXR1cmUsIEFwcGxlIGhhc24ndCBjb25maXJtZWQgIGFueSBwbGFucyB0byBhZGQgYSB3YXRjaCB0byBpdHMgcHJvZHVjdCBsaW5lLCBhbHRob3VnaCBDRU8gVGltIENvb2sgaGFzICBsZWZ0IGxpdHRsZSBkb3VidCBoZSBpcyBpbnRyaWd1ZWQgYnkgdGhlIGNvbmNlcHQuIFRoZXJlIGFyZSAgYWxyZWFkeSBzZXZlcmFsIG90aGVyIHNtYXJ0d2F0Y2hlcyBvbiB0aGUgbWFya2V0LCBpbmNsdWRpbmcgYSByZWNlbnRseSAgcmVsZWFzZWQgdGltZXBpZWNlIGZyb20gU2Ftc3VuZyB0aGF0IHJ1bnMgb24gdGhhdCBjb21wYW55J3Mgb3duICBvcGVyYXRpbmcgc3lzdGVtLiBTbyBmYXIsICB0aG9zZSB3YXRjaGVzIGhhdmUgcHJvdmVuIHRvIGJlIG5vdmVsdGllcyB0aGF0IHByaW1hcmlseSBhcHBlYWwgdG8gIGdhZGdldC1sb3ZpbmcgZ2Vla3MgYW5kIHBoeXNpY2FsIGZpdG5lc3MgZW50aHVzaWFzdHMgbG9va2luZyBmb3IgbW9yZSAgdG9vbHMgdG8gaGVscCB0cmFjayB0aGVpciB3b3Jrb3V0cyBhbmQgZ2VuZXJhbCBoZWFsdGguIEdvb2dsZSdzICBuZXcgdGFrZSBvbiBBbmRyb2lkIG1heSBoZWxwIGN1bHRpdmF0ZSBtb3JlIG1haW5zdHJlYW0gYXBwZWFsIGZvciAgc21hcnR3YXRjaGVzLiBUaGUgc29mdHdhcmUgYWxyZWFkeSBpcyB0aGUgbW9zdCBwb3B1bGFyIHNtYXJ0cGhvbmUgIG9wZXJhdGluZyBzeXN0ZW0gaW4gdGhlIHdvcmxkIHdpdGggYSA3OSBwZXJjZW50IHNoYXJlIG9mIHRoZSBtYXJrZXQsICBhY2NvcmRpbmcgdG8gdGhlIHJlc2VhcmNoIGZpcm0gSW50ZXJuYXRpb25hbCBEYXRhIENvcnAuIEFwcGxlJ3MgaU9TICBzb2Z0d2FyZSByYW5rcyBzZWNvbmQgd2l0aCBhIDE1IHBlcmNlbnQgbWFya2V0IHNoYXJlLCBzbyB0aGF0IGNvbXBhbnkncyAgZW50cmFuY2UgaW50byB0aGUgc21hcnR3YXRjaCBjYXRlZ29yeSB3b3VsZCBhbHNvIGhlbHAgc3B1ciBtb3JlICBpbm5vdmF0aW9uIGluIHRoZSBjYXRlZ29yeS4gU21hcnR3YXRjaGVzICBhbmQgR29vZ2xlIEdsYXNzIGFyZSBqdXN0IHR3byBvZiB0aGUgZmlyc3QgZXhhbXBsZXMgb2YgaG93IGNvbXB1dGluZyAgZGV2aWNlcyBpbmNyZWFzaW5nbHkgYXJlIGV4cGVjdGVkIHRvIGJlY29tZSBsaWtlIGFwcGVuZGFnZXMgdG8gdGhlIGh1bWFuICBib2R5IGFzIHRlY2hub2xvZ3kgYWR2YW5jZXMgYW5kIGNvbm5lY3RpbmcgdG8gdGhlIEludGVybmV0IGJlY29tZXMgYXMgIHJlZmxleGl2ZSBhcyBicmVhdGhpbmcuIEdvb2dsZSBleGVjdXRpdmVzIGhhdmUgZXZlbiBvcGVubHkgdGFsa2VkIGFib3V0ICBkYXkgd2hlbiBpdCBtaWdodCBiZSBwb3NzaWJsZSB0byBoZWxwIHBlb3BsZSBsaXZlIGxvbmdlciBhbmQgbW9yZSAgZW5qb3lhYmxlIGxpdmVzIGJ5IHBsYW50aW5nIGNoaXBzIGluIHRoZWlyIGhlYWRzIG9yIHVuZGVyIHRoZWlyIHNraW4uICJUaGUgIHBvc3NpYmlsaXRpZXMgd2l0aCBkZXZpY2VzIHRoYXQgeW91IHdlYXIgb24geW91ciBib2R5IGFyZSBlbmRsZXNzLCIgIERhdmlkIFNpbmdsZXRvbiwgYW4gQW5kcm9pZCBkaXJlY3RvciBvZiBlbmdpbmVlcmluZywgc2FpZCBpbiBhbiBvbmxpbmUgIHZpZGVvIHBvc3RlZCBUdWVzZGF5Lg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUTTj3yAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDgzNDIwYWZhYjk2YjZlN2I=</field><field name="symbol" class="java.lang.String">rO0ABXQABE1TQ0E=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUTYtdiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4go9cKPXD</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4pmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4gAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4keuFHrhS</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3dcKPXCj2</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAqlA==</field><field name="id" class="java.lang.String">rO0ABXQAEDk5ZTc5MGI5NzkzYjNmMjE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mG0OAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIxOTEw</field><field name="title" class="java.lang.String">rO0ABXQANVNhbXN1bmcgRGVidXRzIFdlYXJhYmxlcyBhbmQgTGF0ZXN0IEdhbGF4eSBTbWFydHBob25l</field><field name="content" class="java.lang.String">rO0ABXQJfFRoZSB3b3JsZCdzIGJpZ2dlc3Qgc21hcnRwaG9uZSBtYWtlciBzZXQgYSB0cmVuZCBsZXNzIHRoYW4gc2l4IG1vbnRocyBhZ28gZm9yIHdlYXJhYmxlIGRldmljZXMgdGhhdCBsaW5rIHRvIG1vYmlsZSBoYW5kc2V0cyB3aXRoIGl0cyBHYWxheHkgR2VhciB3YXRjaCwgd2hpY2ggaGFzIHNlZW4gcml2YWxzIGxpa2UgU29ueSAgIGFuZCBIdWF3ZWkgZm9sbG93IGluIGl0cyB3YWtlLiBKSyBTaGluLCBjaGllZiBleGVjdXRpdmUgb2ZmaWNlciBhbmQgcHJlc2lkZW50IG9mIHRoZSBJVCBhbmQgTW9iaWxlIENvbW11bmljYXRpb24gRGl2aXNpb24gYXQgU2Ftc3VuZyBFbGVjdHJvbmljcywgc2FpZCB0aGUgZGV2aWNlcyB3ZXJlIGRlc2lnbmVkIHRvIG1ha2UgbGlmZSBlYXNpZXIgZm9yIGNvbnN1bWVycyBpbiBhcmVhcyBsaWtlIGZpdG5lc3MsIHJhdGhlciB0aGFuIGRhenpsaW5nIHRoZW0gd2l0aCBuZXcgdGVjaG5vbG9neSBpbiB0aGUgaGFuZHNldC4gIk91ciBjb25zdW1lcnMgZG8gbm90IHdhbnQgZXllLXBvcHBpbmcgdGVjaG5vbG9neSBvciB0aGUgbW9zdCBjb21wbGV4IHRlY2hub2xvZ3ksIiBoZSB0b2xkIGFuIGF1ZGllbmNlIG9mIFNhbXN1bmcgZW1wbG95ZWVzLCBwYXJ0bmVycyBhbmQgbWVkaWEgaW4gQmFyY2Vsb25hLiBUaGV5IGluc3RlYWQgd2FudGVkIGJlYXV0aWZ1bCBkZXNpZ24sIGEgYmV0dGVyIGNhbWVyYSwgZmFzdGVyIGNvbm5lY3Rpdml0eSBhbmQgdGVjaG5vbG9neSB0aGF0IHdvdWxkIGhlbHAgdGhlbSBrZWVwIGZpdCwgaGUgc2FpZC4gU2Ftc3VuZydzIEdlYXIgMiBzbWFydCB3YXRjaCwgd2hpY2ggcnVucyBvbiB0aGUgVGl6ZW4gb3BlcmF0aW5nIHN5c3RlbSByYXRoZXIgdGhhbiBHb29nbGUncyBBbmRyb2lkIHNvZnR3YXJlLCBjYW4gbW9uaXRvciB0aGUgd2VhcmVyJ3MgaGVhcnQgcmF0ZSwgYSBmdW5jdGlvbiB1c2VkIGluIGluY3JlYXNpbmdseSBwb3B1bGFyIGhlYWx0aCBhbmQgZml0bmVzcyBhcHBzLCBvciBpbmRpdmlkdWFsIHByb2dyYW1tZXMuIFRoZSBTYW1zdW5nIEdlYXIgRml0LCBhbHNvIHRhcmdldGluZyB0aGUgZml0bmVzcyBzZWN0b3IsIGhhcyBhIGhlYXJ0IHJhdGUgbW9uaXRvciwgdG9vLCBhcyBkb2VzIHRoZSBTYW1zdW5nIEdhbGF4eSBTNSBpdHNlbGYsIGEgZmlyc3QgZm9yIGEgc21hcnRwaG9uZSwgU2Ftc3VuZyBzYWlkLiBUaGUgR2VhciBGaXQgaGFzIGEgY3VydmVkIHRvdWNoLXNlbnNpdGl2ZSBzY3JlZW4gYW5kIGl0cyBmZWF0dXJlcyBpbmNsdWRlIGEgcGVkb21ldGVyLCB0aGUgU291dGggS29yZWFuIGNvbXBhbnkgc2FpZC4gVGhlIEdhbGF4eSBTNSwgd2hpY2ggd2lsbCBiZSBhdmFpbGFibGUgaW4gQXByaWwsIGhhcyBhIHNsaWdodGx5IGJpZ2dlciBzY3JlZW4gdGhhbiBpdHMgcHJlZGVjZXNzb3IsIGF0IDUuMSBpbmNoZXMgY29tcGFyZWQgd2l0aCA1IGluY2hlcywgaW1wcm92ZWQgY2FtZXJhIHRlY2hub2xvZ3kgYW5kIGJldHRlciBwcm90ZWN0aW9uIGFnYWluc3Qgd2F0ZXIgYW5kIGR1c3QsIFNhbXN1bmcgc2FpZC4gSXQgYWxzbyBoYXMgYSBmaW5nZXJwcmludCBzY2FubmVyIG9uIHRoZSBob21lIGJ1dHRvbiwgaXQgc2FpZCwgd2hpY2ggY2FuIGJlIHVzZWQgdG8gcHJvdGVjdCBkYXRhIGFuZCBwcm92aWRlIHNlY3VyaXR5IGNyZWRlbnRpYWxzIGluIGEgc3dpcGUuIEFuYWx5c3RzIHNhaWQgdGhlIGltcHJvdmVtZW50cyBpbiB0aGUgZmlmdGggaXRlcmF0aW9uIG9mIHRoZSBHYWxheHkgUywgd2hpY2ggaGFzIHNvbGQgbW9yZSB0aGFuIDIwMCBtaWxsaW9uIHVuaXRzIGluIHRvdGFsLCB3ZXJlIG1vcmUgaW5jcmVtZW50YWwgdGhhbiBpbiBwcmV2aW91cyBkZXZpY2VzLCBzaG93aW5nIGl0IHdhcyBiZWNvbWluZyBoYXJkZXIgdG8gaW5ub3ZhdGUgYXQgdGhlIHRvcCBlbmQuIEZvcnJlc3RlciBSZXNlYXJjaCBhbmFseXN0IFRob21hcyBIdXNzb24gc2FpZCwgIlRoZSBHYWxheHkgUzUgaGFzIGdyZWF0IGZlYXR1cmVzIGFuZCB3aWxsIHByb2JhYmx5IHNlbGwgd2VsbCBkdWUgdG8gbWFzc2l2ZSBtYXJrZXRpbmcgc3VwcG9ydC4gIkJ1dCBpcyB0aGUgdG90YWwgcHJvZHVjdCBleHBlcmllbmNlIGl0IG9mZmVycyBkaWZmZXJlbnRpYXRlZCBlbm91Z2ggdG8gY29udGludWUgdGhlIHNhbGVzIHN1Y2Nlc3Mgc3Rvcnk/IElzIGl0IGVub3VnaCB0byBiZXQgb24gZml0bmVzcyBhbmQgZmluZ2VycHJpbnQgc2Vuc29ycyB0byBiZWF0IEFwcGxlICAtIHJvb3RpbmcgdGhlIGV4cGVyaWVuY2UgaW4gcGVvcGxlJ3MgZGFpbHkgbGl2ZXM/IEkgZG9uJ3QgdGhpbmsgc28uIiBJdCB3aWxsIGVudGVyIGEgbWFya2V0IHRoYXQgaGFzIHNlZW4gc2xvd2luZyBkZW1hbmQgYXQgdGhlIHRvcCBlbmQsIHdoZXJlIFNhbXN1bmcgaXMgYWxyZWFkeSBpbiBmaWVyY2UgY29tcGV0aXRpb24gZnJvbSBBcHBsZSBJbmMgYW5kIENoaW5lc2UgdmVuZG9ycy4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAURieoMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDRiNDYxM2QwOGI4NmQzZmY=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZPUlI=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAURnoN8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBB7MzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCEzMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBBr1wo9cKP</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBB/rhR64Uf</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBBnXCj1wo9</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAACb3A==</field><field name="id" class="java.lang.String">rO0ABXQAEGYyMGFjZjc2NDYxMmYyZGY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKsEAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDE0NTU=</field><field name="title" class="java.lang.String">rO0ABXQAQ0JsYWNrc3RvbmUgVW5pdCBGb3Jlc2hhZG93cyBHb29nbGUgUGF0aCB0byBCZWNvbWluZyBhIFBvd2VyIENvbXBhbnk=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUZGWVyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDBjN2NlODc2Y2M3MmZiMDc=</field><field name="symbol" class="java.lang.String">rO0ABXQABEdSSUQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUZLf7iAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCw9cKPXCk</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCw9cKPXCk</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCo9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCo9cKPXCk</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCceuFHrhS</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAB9A==</field><field name="id" class="java.lang.String">rO0ABXQAEGI1NGM3MjZjNDIyMDQ5Njk=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mIBKAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQyOTU=</field><field name="title" class="java.lang.String">rO0ABXQARENydW1ibGluZyBVUyBFbmVyZ3kgR3JpZCBHZXRzIEpvbHQgQ3JlYXRpbmcgU21hcnRlciBQb3dlciBpbiBIb3VzdG9u</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbRZRCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDkxNTAxOGJiODRkMDliMjE=</field><field name="symbol" class="java.lang.String">rO0ABXQABEdSSUQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbWi2yAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCqj1wo9cK</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCqj1wo9cK</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCqj1wo9cK</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCqj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCnXCj1wo9</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDI3NjFiMjdmYjU4MDhmZDE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mLWHAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIzMjQz</field><field name="title" class="java.lang.String">rO0ABXQAPkphcGFuJ3MgTmlra2VpOiBBcHBsZSB0byBCZWdpbiBTZWxsaW5nIFNtYXJ0d2F0Y2hlcyBpbiBPY3RvYmVy</field><field name="content" class="java.lang.String">rO0ABXQDw0FwcGxlIEluYy4gaXMgcHJlcGFyaW5nIHRvIHNlbGwgaXRzIGZpcnN0IHdlYXJhYmxlIGRldmljZSB0aGlzIE9jdG9iZXIsIGFpbWluZyB0byBwcm9kdWNlIDMgbWlsbGlvbiB0byA1IG1pbGxpb24gc21hcnR3YXRjaGVzIGEgbW9udGggaW4gaXRzIGluaXRpYWwgcnVuLCB0aGUgTmlra2VpIG5ld3Mgc2VydmljZSByZXBvcnRlZCBvbiBGcmlkYXksIGNpdGluZyBhbiB1bmlkZW50aWZpZWQgcGFydHMgc3VwcGxpZXIgYW5kIHNvdXJjZXMgZmFtaWxpYXIgd2l0aCB0aGUgbWF0dGVyLiBTcGVjaWZpY2F0aW9ucyBhcmUgc3RpbGwgYmVpbmcgZmluYWxpemVkLCBidXQgdGhlIGRldmljZXMgYXJlIGxpa2VseSB0byBzcG9ydCBjdXJ2ZWQgT0xFRCAob3JnYW5pYyBsaWdodC1lbWl0dGluZyBkaW9kZSkgZGlzcGxheXMgYW5kIHNlbnNvcnMgdGhhdCBjb2xsZWN0IGhlYWx0aCBkYXRhIGZyb20gYmxvb2QgZ2x1Y29zZSBhbmQgY2Fsb3JpZSBjb25zdW1wdGlvbiB0byBzbGVlcCBhY3Rpdml0eSwgdGhlIEphcGFuZXNlIG5ld3Mgc2VydmljZSBjaXRlZCBpbmR1c3RyeSBzb3VyY2VzIGFzIHNheWluZy4gVGhlIGluZHVzdHJ5IGhhcyBsb25nIGV4cGVjdGVkIEFwcGxlIHRvIHVudmVpbCBzb21lIHNvcnQgb2Ygc21hcnR3YXRjaCwgZm9sbG93aW5nIHRoZSByZWxlYXNlIG9mIFNhbXN1bmcgRWxlY3Ryb25pY3MnIEdhbGF4eSBHZWFyIHdhdGNoZXMuIFdhbGwgU3RyZWV0IGlzIGhvcGluZyB0byBzZWUgYSBuZXcgQXBwbGUgcHJvZHVjdCB0aGlzIHllYXIgdG8gZ2FsdmFuaXplIHRoZSBmb3JtZXIgc3RvY2sgbWFya2V0IGRhcmxpbmcncyBzaGFyZSBwcmljZSBhbmQgZW5kIGEgeWVhcnMtbG9uZyBkcm91Z2h0IG9mIGdyb3VuZC1icmVha2luZyBkZXZpY2VzLiBDRU8gVGltIENvb2sgaGFzIHByb21pc2VkICJuZXcgcHJvZHVjdCBjYXRlZ29yaWVzIiBpbiAyMDE0LiBBcHBsZSBkZWNsaW5lZCB0byBjb21tZW50Lg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUZ52PSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGQzYjcxN2RjNTJkY2EwYTM=</field><field name="symbol" class="java.lang.String">rO0ABXQABE9MRUQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUZ+/1CAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7+uFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA92ZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA72ZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA9Cj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA9Cj1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAyYOA==</field><field name="id" class="java.lang.String">rO0ABXQAEDZlNjVkNTg2ZGEyNmM0ZTE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJC8AAAA==</field></document></documents><date>2015-05-07T12:28:29-0500</date></cacheEntry>
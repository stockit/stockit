<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hUaGUgVmlraW5ncyBkZWFjdGl2YXRlZCBQZXRlcnNvbiBmb3IgbGFzdCB3ZWVrcyBOYXRpb25hbCBGb290YmFsbCBMZWFndWUgZ2FtZSBhZnRlciBoZSB3YXMgaW5kaWN0ZWQgU2VwdCAxMiBvbiBhIGNoYXJnZSBvZiBoaXR0aW5nIGhpcyA0eWVhcm9sZCBzb24gd2l0aCBhIGJyYW5jaCBUd28gZGF5cyBhZ28gdGhlIHRlYW0gcmVpbnN0YXRlZCBQZXRlcnNvbiBhbmQgc2FpZCBpdCBleHBlY3RlZCBoaW0gdG8gcGxheSBpbiB0aGlzIHdlZWtzIGdhbWUgYWdhaW5zdCB0aGUgTmV3IE9ybGVhbnMgU2FpbnRzIFRoZSB0ZWFtIHJldmVyc2VkIGNvdXJzZSBXZWRuZXNkYXkgYWZ0ZXIgcHJlc3N1cmUgZnJvbSBmYW5zIHNwb25zb3JzIGFuZCBNaW5uZXNvdGEgR292ZXJub3IgTWFyayBEYXl0b24gV2UgbWFkZSBhIG1pc3Rha2UgYW5kIG5lZWRlZCB0byBnZXQgdGhpcyByaWdodCBXaWxmIHNhaWQgaW4gYSB0ZWxldmlzZWQgbmV3cyBjb25mZXJlbmNlIEluIGEgc3RhdGVtZW50IHJlbGVhc2VkIGVhcmx5IHRoaXMgbW9ybmluZyB0aGUgVmlraW5ncyBzYWlkIHRoZXkgZGVjaWRlZCB0byByZXZpc2l0IFBldGVyc29ucyBzaXR1YXRpb24gYWZ0ZXIgY29udmVyc2F0aW9ucyB3aXRoIHRoZSBORkwgdGhlIHBhc3QgdHdvIGRheXMgVGhlIGxlYWd1ZSB0aGVuIGluZm9ybWVkIHRoZSBWaWtpbmdzIG9mIHRoZWlyIG9wdGlvbiB0byBwdXQgUGV0ZXJzb24gb24gdGhlIEV4ZW1wdENvbW1pc3Npb25lcnMgUGVybWlzc2lvbiBsaXN0IHdoaWNoIHJlcXVpcmVzIGhpbSB0byByZW1haW4gYXdheSBmcm9tIHByYWN0aWNlcyBnYW1lcyBhbmQgYWxsIG90aGVyIHRlYW0gYWN0aXZpdGllcyB3aGlsZSB0YWtpbmcgY2FyZSBvZiBoaXMgcGVyc29uYWwgc2l0dWF0aW9uIEFmdGVyIGdpdmluZyB0aGUgc2l0dWF0aW9uIGFkZGl0aW9uYWwgdGhvdWdodCB3ZSBoYXZlIGRlY2lkZWQgdGhpcyBpcyB0aGUgYXBwcm9wcmlhdGUgY291cnNlIG9mIGFjdGlvbiBmb3IgdGhlIG9yZ2FuaXphdGlvbiBhbmQgZm9yIEFkcmlhbiBXaWxmIGFuZCBoaXMgYnJvdGhlciBNYXJrIHNhaWQgaW4gdGhlIHN0YXRlbWVudCBUaGUgTkZMIFBsYXllcnMgQXNzb2NpYXRpb24gc2FpZCBQZXRlcnNvbiB3aG8gaGFzIGEgYmFzZSBzYWxhcnkgb2YgMTE3NSBtaWxsaW9uIHRoaXMgc2Vhc29uIGFncmVlZCB0byB0aGUgdm9sdW50YXJ5IGxlYXZlIGFuZCB3aWxsIGNvbnRpbnVlIHRvIGJlIHBhaWQgd2hpbGUgYXdheSBmcm9tIHRoZSB0ZWFtIEp1ZGdlcyBEZWNpc2lvbiBBZHJpYW4gd2FudHMgdG8gY29udGludWUgaGlzIHdvcmsgaW4gdGhlIE5GTCBhbmQgY29udHJpYnV0ZSB0byBoaXMgdGVhbSBhbmQgY29tbXVuaXR5IFBldGVyc29ucyBsYXd5ZXIgUnVzdHkgSGFyZGluIHNhaWQgaW4gYSBzdGF0ZW1lbnQgSW4gb3JkZXIgdG8gZG8gc28gaGUgaXMgcHJlcGFyZWQgdG8gcmVzb2x2ZSB0aGlzIG1hdHRlciBpbiB0aGUgYXBwcm9wcmlhdGUgbGVnYWwgZm9ydW0gcmF0aGVyIHRoYW4gdGhlIGNvdXJ0IG9mIHB1YmxpYyBvcGluaW9uIEkgaGF2ZSBzcGVudCBteSBlbnRpcmUgY2FyZWVyIGFza2luZyBwZW9wbGUgdG8gd2FpdCB1bnRpbCBhbGwgdGhlIGZhY3RzIGFyZSBpbiBhbmQgSW0gZG9pbmcgc28gYWdhaW4gdG9kYXkgVWx0aW1hdGVseSBpdCB3aWxsIGJlIHVwIHRvIGEganVkZ2UgYW5kIGp1cnkgdG8gZGVjaWRlIHRoaXMgY2FzZSB3aGljaCBpcyB0aGUgd2F5IGl0IHNob3VsZCBiZSAgVGhlIENhcm9saW5hIFBhbnRoZXJzIGNvdWxkIHRha2UgYSBzaW1pbGFyIGFwcHJvYWNoIGFzIHRoZSBWaWtpbmdzIHdpdGggUHJvIEJvd2wgZGVmZW5zaXZlIGVuZCBHcmVnIEhhcmR5IHdobyBpcyBhcHBlYWxpbmcgYSA2MGRheSBzdXNwZW5kZWQgamFpbCBzZW50ZW5jZSBoZSByZWNlaXZlZCBpbiBKdWx5IGZvciBhc3NhdWx0aW5nIGEgZm9ybWVyIGdpcmxmcmllbmQgVGhlIFBhbnRoZXJzIHdobyBkZWFjdGl2YXRlZCBIYXJkeSA5MCBtaW51dGVzIGJlZm9yZSBsYXN0IHdlZWtzIGdhbWUgaGF2ZW50IGRldGVybWluZWQgd2hldGhlciBIYXJkeSB3aWxsIHBsYXkgdGhpcyB3ZWVrIENvcnBvcmFsIFB1bmlzaG1lbnQgUGV0ZXJzb24gYSB0d290aW1lIHJ1c2hpbmcgY2hhbXBpb24gYW5kIHRoZSBORkxzIDIwMTIgTW9zdCBWYWx1YWJsZSBQbGF5ZXIgdXNlZCBhIHN3aXRjaCBhIHRoaW4gYnJhbmNoIG9yIHN0aWNrIHVzZWQgZm9yIGNvcnBvcmFsIHB1bmlzaG1lbnQgdG8gZGlzY2lwbGluZSBoaXMgc29uIFBldGVyc29uIHdobyBmYWNlcyB1cCB0byB0d28geWVhcnMgaW4gcHJpc29uIGlmIGNvbnZpY3RlZCBvZiB0aGUgY2hhcmdlIGFwb2xvZ2l6ZWQgaW4gYSBzdGF0ZW1lbnQgZm9yIGh1cnRpbmcgaGlzIHNvbiBhbmQgc2FpZCBoZXMgbm90IGEgY2hpbGQgYWJ1c2VyIFBldGVyc29uIHNhaWQgaGUgd2FzIGRpc2NpcGxpbmluZyBoaXMgc29uIHRoZSBzYW1lIHdheSBoZWQgYmVlbiByZXByaW1hbmRlZCBhcyBhIGNoaWxkIGdyb3dpbmcgdXAgaW4gRWFzdCBUZXhhcyBUaGUgZ3JhbmQganVyeSBpbiBNb250Z29tZXJ5IENvdW50eSBub3J0aCBvZiBIb3VzdG9uIGRldGVybWluZWQgdGhlIGRpc2NpcGxpbmUgd2FzbnQgcmVhc29uYWJsZSBnaXZlbiB0aGUgaW5qdXJpZXMgaW5mbGljdGVkIG9uIHRoZSBib3kgYW5kIFBldGVyc29uIHdhcyBpbmRpY3RlZCBvbiBjaGFyZ2VzIG9mIHJlY2tsZXNzIG9yIG5lZ2xpZ2VudCBpbmp1cnkgdG8gYSBjaGlsZCBQZXRlcnNvbnMgaW5pdGlhbCBjb3VydCBkYXRlIGlzIHNjaGVkdWxlZCBmb3IgT2N0IDggd2l0aCBhbiBhcnJhaWdubWVudCBpbiB0aGUgTmludGggRGlzdHJpY3QgQ291cnQgaW4gTW9udGdvbWVyeSBDb3VudHkgU2Vjb25kIENhc2UgT24gU2VwdCAxNSBhIEhvdXN0b24gdGVsZXZpc2lvbiBzdGF0aW9uIHJlcG9ydGVkIHRoYXQgUGV0ZXJzb24gd2FzIGFjY3VzZWQgaW4gMjAxMyBvZiBoaXR0aW5nIGEgZGlmZmVyZW50IDR5ZWFyb2xkIHNvbiB3aG8gaGFzIGEgZGlmZmVyZW50IG1vdGhlciBBbHRob3VnaCBQZXRlcnNvbnMgYXR0b3JuZXkgc2FpZCB0aGF0IGFsbGVnYXRpb24gaXNudCB0cnVlIHRoZSBSYWRpc3NvbiBob3RlbCBjaGFpbiBzdXNwZW5kZWQgYSBzcG9uc29yc2hpcCBkZWFsIHdpdGggdGhlIHRlYW0gc2F5aW5nIGl0IG5lZWRlZCB0byBldmFsdWF0ZSB0aGUgZmFjdHMgYW5kIGNpcmN1bXN0YW5jZXMgRGF5dG9uIHRoZSBNaW5uZXNvdGEgZ292ZXJub3IgaXNzdWVkIGEgc3RhdGVtZW50IFR1ZXNkYXkgc2F5aW5nIHRoYXQgUGV0ZXJzb24gc2hvdWxkIGhhdmUgYmVlbiBzdXNwZW5kZWQgRGF5dG9uIHNhaWQgd2hpbGUgUGV0ZXJzb24gaXMgZW50aXRsZWQgdG8gZHVlIHByb2Nlc3MgaGVzIGEgcHVibGljIGZpZ3VyZSBhbmQgaGlzIGFjdGlvbnMgYXMgdGhleXZlIGJlZW4gZGVzY3JpYmVkIGFyZSBhbiBlbWJhcnJhc3NtZW50IHRvIHRoZSBWaWtpbmdzIGFuZCBzdGF0ZSBvZiBNaW5uZXNvdGEgV2Ugd2lsbCBzdXBwb3J0IEFkcmlhbiBkdXJpbmcgdGhpcyBsZWdhbCBhbmQgcGVyc29uYWwgcHJvY2VzcyBidXQgd2UgZmlybWx5IGJlbGlldmUgYW5kIHJlYWxpemUgdGhpcyBpcyB0aGUgcmlnaHQgZGVjaXNpb24gdGhlIFdpbGZzIHNhaWQgaW4gdGhlIHN0YXRlbWVudCBXZSBob3BlIHRoYXQgYWxsIG9mIG91ciBmYW5zIGNhbiByZXNwZWN0IHRoZSBwcm9jZXNzIHRoYXQgd2UgaGF2ZSBnb25lIHRocm91Z2ggdG8gcmVhY2ggdGhpcyBmaW5hbCBkZWNpc2lvbiBNYXJrIFdpbGYgc2FpZCB0aGUgdGVhbSBpcyBjb25zdGFudGx5IGluIGNvbW11bmljYXRpb24gd2l0aCBpdHMgc3BvbnNvcnMgV2UgdmFsdWUgdGhlaXIgaW5wdXQgaGUgc2FpZCBHZXR0aW5nIHRoaW5ncyByaWdodCB0aGF0cyB3aGF0IHRoZXkgd2VyZSBjb25jZXJuZWQgd2l0aCBOZXcgU3RhZGl1bSBQZXRlcnNvbiBpcyB0aGUgZmFjZSBvZiBhIGZyYW5jaGlzZSB0aGF0cyBidWlsZGluZyBhIDk3NSBtaWxsaW9uIHN0YWRpdW0gYWJvdXQgNTAwIG1pbGxpb24gb2Ygd2hpY2ggaXMgY29taW5nIGZyb20gdGF4cGF5ZXIgZnVuZHMgc2V0IHRvIG9wZW4gZm9yIHRoZSAyMDE2IHNlYXNvbiBUaGUgcGxheWVycyBpbWFnZSB3YXMgb24gdGhlIHRlYW1zIHRpY2tldHMgZm9yIGxhc3Qgd2Vla3MgaG9tZSBvcGVuZXIgYWdhaW5zdCB0aGUgTmV3IEVuZ2xhbmQgUGF0cmlvdHMgYSAzMDcgbG9zcyBpbiB3aGljaCB0aGUgVmlraW5ncyBoYWQganVzdCA1NCB5YXJkcyBydXNoaW5nIFBldGVyc29uIHJlY2VpdmVkIGhpcyB3ZWVrbHkgcGF5IG9mIGFsbW9zdCA3MDAwMDAgd2hpbGUgc2l0dGluZyBvdXQgV2Ugd2FudCB0byBiZSBjbGVhciB3ZSBoYXZlIGEgc3Ryb25nIHN0YW5jZSByZWdhcmRpbmcgdGhlIHByb3RlY3Rpb24gYW5kIHdlbGZhcmUgb2YgY2hpbGRyZW4gYW5kIHdlIHdhbnQgdG8gYmUgc3VyZSB3ZSBnZXQgdGhpcyByaWdodCB0aGUgVmlraW5ncyBvd25lcnMgc2FpZCBBdCB0aGUgc2FtZSB0aW1lIHdlIHdhbnQgdG8gZXhwcmVzcyBvdXIgc3VwcG9ydCBmb3IgQWRyaWFuIGFuZCBhY2tub3dsZWRnZSBoaXMgc2V2ZW5wbHVzIHllYXJzIG9mIG91dHN0YW5kaW5nIGNvbW1pdG1lbnQgdG8gdGhpcyBvcmdhbml6YXRpb24gYW5kIHRoaXMgY29tbXVuaXR5IEFkcmlhbiBlbXBoYXNpemVkIGhpcyBkZXNpcmUgdG8gYXZvaWQgZnVydGhlciBkaXN0cmFjdGlvbiB0byBoaXMgdGVhbW1hdGVzIGFuZCBjb2FjaGVzIHdoaWxlIGZvY3VzaW5nIG9uIGhpcyBjdXJyZW50IHNpdHVhdGlvbiB0aGlzIHJlc29sdXRpb24gYWNjb21wbGlzaGVzIHRoZXNlIG9iamVjdGl2ZXMgYXMgd2VsbCBSaWNlIEluY2lkZW50IFBldGVyc29ucyBpbmRpY3RtZW50IGNhbWUgZml2ZSBkYXlzIGFmdGVyIGZlbGxvdyBydW5uaW5nIGJhY2sgUmF5IFJpY2Ugd2FzIHJlbGVhc2VkIGJ5IHRoZSBCYWx0aW1vcmUgUmF2ZW5zIGFuZCBiYW5uZWQgaW5kZWZpbml0ZWx5IGJ5IHRoZSBORkwgYWZ0ZXIgc2V2ZW5tb250aG9sZCB2aWRlbyBlbWVyZ2VkIG9mIGhpbSBrbm9ja2luZyBvdXQgaGlzIHRoZW5maXQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0xMi0wM1QwMDowMDowMFogVE8gMjAxNC0wNy0xMFQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTI1NzIw</field><field name="title" class="java.lang.String">rO0ABXQAN1N0ZXJsaW5nICdQbG95JyBNYXkgRGVsYXkgQ2xpcHBlcnMgVGVhbSBTYWxlIHRvIEJhbGxtZXI=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcPMWCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGZhYzZmZGIzNmY2N2IzMDU=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNBTEU=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcUV7yAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5B64UeuFI</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5JmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA2x64UeuFI</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3Ao9cKPXD</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3Ao9cKPXD</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAB9CWA==</field><field name="id" class="java.lang.String">rO0ABXQAEDY0Nzg5MGMzNjYzZmFhYTc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEtmAAAQ==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE5OTc5</field><field name="title" class="java.lang.String">rO0ABXQANUlCTSBXaXRoaG9sZHMgSm9iIEN1dHMgRGF0YSwgTWFraW5nIEFnZSBDbGFpbXMgSGFyZGVy</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUXuzUCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDA4NTNmMzJhOTQ1Yjg1OGE=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lCTQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUXz85yAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBoGUeuFHrh</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBoIPXCj1wp</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBn+FHrhR64</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBoBhR64Ueu</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBnjhR64Ueu</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAACH5qA==</field><field name="id" class="java.lang.String">rO0ABXQAEDM5MGI5ODg3ZDJlNGQ2N2U=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFhtAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE5OTQ2</field><field name="title" class="java.lang.String">rO0ABXQAPktpYSBIYWQgJ0Vhc3kgRGVjaXNpb24nIGluIEN1dHRpbmcgVGllcyB0byBTdGVybGluZydzIENsaXBwZXJz</field><field name="content" class="java.lang.String">rO0ABXQHcUtpYSBNb3RvcnMgQ29ycC4gaGFkIGFuIOKAnGVhc3kgZGVjaXNpb27igJ0gdG8gc2V2ZXIgaXRzIHJlbGF0aW9uc2hpcCB3aXRoIHRoZSBMb3MgQW5nZWxlcyBDbGlwcGVycyBhZnRlciByYWNpYWxseSBjaGFyZ2VkIGNvbW1lbnRzIGJ5IHRlYW0gb3duZXIgRG9uYWxkIFN0ZXJsaW5nIGJlY2FtZSBwdWJsaWMsIGEgVS5TLiBleGVjdXRpdmUgZm9yIHRoZSBhdXRvbWFrZXIgc2FpZC4g4oCcSXQgd2FzIGFuIGVhc3kgZGVjaXNpb24gdG8gbWFrZSBiZWNhdXNlIHdlIHdlcmUgYWxsIGp1c3QgaG9ycmlmaWVkIGJ5IHdoYXQgdGhlIG93bmVyIG9mIHRoZSBDbGlwcGVycyBzYWlkLOKAnSBNaWNoYWVsIFNwcmFndWUsIGV4ZWN1dGl2ZSB2aWNlIHByZXNpZGVudCBvZiBLaWHigJlzIFUuUy4gc2FsZXMgYW5kIG1hcmtldGluZywgc2FpZCB0b2RheSBhZnRlciBhIHNwZWVjaCB0byB0aGUgQXV0b21vdGl2ZSBQcmVzcyBBc3NvY2lhdGlvbiBpbiBEZXRyb2l0LiDigJxUaGVyZSB3YXMgbmV2ZXIgYW55IHF1ZXN0aW9uLuKAnSBTdGVybGluZywgYSByZWFsLWVzdGF0ZSBiaWxsaW9uYWlyZSB3aG8gYm91Z2h0IHRoZSBOYXRpb25hbCBCYXNrZXRiYWxsIEFzc29jaWF0aW9uIHRlYW0gaW4gMTk4MSwgdG9sZCBhIHdvbWFuIGluIGF1ZGlvIHRoYXQgd2FzIHBvc3RlZCBvbiB0aGUgd2Vic2l0ZSBUTVogb24gQXByaWwgMjUgdGhhdCBoZSBkaWRu4oCZdCB3YW50IGhlciBicmluZ2luZyBibGFjayBwZW9wbGUgdG8gdGhlIHRlYW3igJlzIGdhbWVzIGFuZCBkaWRu4oCZdCBhcHByb3ZlIG9mIGhlciBwb3N0aW5nIGEgcGhvdG8gd2l0aCBIYWxsIG9mIEZhbWVyIE1hZ2ljIEpvaG5zb24gdG8gSW5zdGFncmFtLiBOQkEgQ29tbWlzc2lvbmVyIEFkYW0gU2lsdmVyIGJhbm5lZCBTdGVybGluZyBmb3VyIGRheXMgbGF0ZXIsIGZpbmVkIGhpbSAkMi41IG1pbGxpb24gYW5kIHNhaWQgaGXigJlkIHVyZ2UgdGhlIG90aGVyIG93bmVycyB0byBmb3JjZSBoaW0gdG8gc2VsbC4gS2lhIGRlY2lkZWQgdG8gY3V0IGl0cyB0aWVzIHdpdGggdGhlIENsaXBwZXJzIG9uIEFwcmlsIDI3LCBTcHJhZ3VlIHNhaWQuIFRoZSBTZW91bC1iYXNlZCBjb21wYW55IHNhaWQgdGhhdCB3ZWVrIHRoYXQgaXQgd2FzIHN1c3BlbmRpbmcgaXRzIGFkdmVydGlzaW5nIGFuZCBzcG9uc29yc2hpcCBhY3Rpdml0aWVzIHdpdGggdGhlIHRlYW0gYW5kIGluIGEgc3RhdGVtZW50IGNhbGxlZCBTdGVybGluZ+KAmXMgcmVtYXJrcyDigJxvZmZlbnNpdmUgYW5kIHJlcHJlaGVuc2libGUu4oCdIFNjb3R0IE1jS2VlLCBhIHNwb2tlc21hbiBmb3IgS2lh4oCZcyBVLlMuIHVuaXQsIGFsc28gc2FpZCBsYXN0IG1vbnRoIHRoYXQgdGhlIGF1dG9tYWtlciB3b3VsZCDigJxjb250aW51ZSB0byBtb25pdG9y4oCdIHRoZSBzaXR1YXRpb24gd2l0aCB0aGUgdGVhbSDigJxhbmQgcmVhY3RpdmF0ZSBhdCB0aGUgYXBwcm9wcmlhdGUgdGltZS7igJ0gQXNrZWQgaWYgS2lhIHdvdWxkIGxpa2UgdG8gc2VlIFN0ZXJsaW5nIHN0cmlwcGVkIG9mIGhpcyBvd25lcnNoaXAgb2YgdGhlIHRlYW0sIFNwcmFndWUgc2FpZCB0b2RheSB0aGF0IOKAnHdlIGJhY2sgdGhlIE5CQSBhbmQgdGhlIGFjdGlvbnMgdGhhdCB0aGV5IGFyZSB0YWtpbmcu4oCdIEtpYSBwbGFucyB0byByZW1haW4gYSBzcG9uc29yIG9mIHRoZSBOQkEsIGhlIHNhaWQuwqAg4oCcSXQgd2lsbCBjb250aW51ZSB0byBiZSBhIGJpZyBwYXJ0IG9mIGhvdyB3ZSBnbyB0byBtYXJrZXQs4oCdIFNwcmFndWUgc2FpZC4g4oCcVGhlIE5CQSBoYXMgaGFkIHRyZW1lbmRvdXMgZ3Jvd3RoLiBUaGV54oCZdmUgYnJvYWRlbmVkIHRoZWlyIHJlYWNoIHRvIG5ldyBkZW1vZ3JhcGhpY3MuIEl04oCZcyBzb21ldGhpbmcgd2UgaG9wZSB3aWxsIGNvbnRpbnVlIGZvciBxdWl0ZSBhIHdoaWxlLuKAnQ==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUX+QFSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDQ3NGRmNmFlNjFiYjMyYzk=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNSTFA=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUYDZrCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4AAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4Qo9cKPXD</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3szMzMzMz</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3wo9cKPXD</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA2a4UeuFHs</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAACkdA==</field><field name="id" class="java.lang.String">rO0ABXQAEDFkNGVmYjdjOWU0YzJkY2Y=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMNeAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDI1Mjk=</field><field name="title" class="java.lang.String">rO0ABXQAO0tleXN0b25lIFhMIFBpcGVsaW5lIEZhdGUgU2hpZnRzIHRvIFNldmVuIE5lYnJhc2thIEp1c3RpY2Vz</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUWCp7SAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDZmMDk3OTIwZDIxZjA5ZDk=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0NPU1QuTVg=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUWHzhCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECXNo9cKPXD</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECXNo9cKPXD</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECXNo9cKPXD</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECXNo9cKPXD</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECXMpmZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAACWA==</field><field name="id" class="java.lang.String">rO0ABXQAEDFiMGI5MmVlYmUxYmM3ZjI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGSVAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIzMTAz</field><field name="title" class="java.lang.String">rO0ABXQAOUFtZXJpY2FuIEFwcGFyZWwgSW52ZXN0b3IgTm90IFBsYW5uaW5nIHRvIFN1cHBvcnQgQ2hhcm5leQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbHGFiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDAyMzgzNTUzNzYyNTRjZGQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABFJPVEg=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbMPrSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAHUwA==</field><field name="id" class="java.lang.String">rO0ABXQAEGNhN2ZiMmEzNjdjMjVhMDU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKv9AAAA==</field></document></documents><date>2015-05-07T12:22:15-0500</date></cacheEntry>
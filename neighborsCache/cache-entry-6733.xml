<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0CvVBc2tlZCBhdCBhbiBhbm51YWwgbWVldGluZyBvZiBzaGFyZWhvbGRlcnMgd2hldGhlciBDaXRpZ3JvdXAgaXMgdG9vIGJpZyB0byBtYW5hZ2UgQ2hhaXJtYW4gTWlrZSBPTmVpbGwgc2FpZCB0aGUgdGFzayBpcyBjZXJ0YWlubHkgaGFyZGVyIGZvciBpdHMgc2l6ZSBhbmQgdGhhdCB0aGUgY29tcGFueSBoYXMgbW9yZSB5ZWFycyBvZiB3b3JrIGluIGEgZHJpdmUgdG8gcmVkdWNlIHJpc2sgYW5kIGNvbXBsZXhpdHkgdGhhdCBzdGFydGVkIHdoZW4gdGhlIGNvbXBhbnkgd2FzIGJhaWxlZCBvdXQgaW4gdGhlIGZpbmFuY2lhbCBjcmlzaXMgV2UgYXJlIG1ha2luZyBwcm9ncmVzcyBidXQgd2UgYXJlIG5vdCB3aGVyZSB3ZSB3YW50IHRvIGJlIE9OZWlsbCBzYWlkIENoaWVmIEV4ZWN1dGl2ZSBNaWtlIENvcmJhdCBzYWlkIHRoZSBiYW5rIGlzIGEgY291cGxlIG9mIHllYXJzIGZyb20gdHVybmluZyB3aGF0IGhlIGNhbGxlZCBhbiBhbWFsZ2FtYXRpb24gb2YgMzUgbG9jYWwgY29uc3VtZXIgYmFua3MgYXJvdW5kIHRoZSB3b3JsZCBpbnRvIG9uZSB0cnVseSBnbG9iYWwgYmFuayBUaGUgaXNzdWUgb2YgQ2l0aWdyb3VwcyBjb21wbGV4aXR5IHRvb2sgb24gcmVuZXdlZCBpbXBvcnRhbmNlIGxhc3QgbW9udGggd2hlbiB0aGUgVVMgRmVkZXJhbCBSZXNlcnZlIHJlamVjdGVkIHRoZSBjb21wYW55cyBiaWQgZm9yIHBlcm1pc3Npb24gdG8gcGF5IGEgaGlnaGVyIGRpdmlkZW5kIGFuZCByZXR1cm4gNjQgYmlsbGlvbiB0byBzaGFyZWhvbGRlcnMgdGhyb3VnaCBidXliYWNrcyBUaGUgRmVkIGFwcGFyZW50bHkgdHVybmVkIGRvd24gdGhlIGNhcGl0YWwgcGxhbiBiZWNhdXNlIG9mIG11bHRpcGxlIGlzc3VlcyB3aXRoIENpdGlncm91cCBwcm9jZXNzZXMgZm9yIG1hbmFnaW5nIGl0cyBjYXBpdGFsIGFuZCB0ZXN0aW5nIHJpc2sgaW4gc3RyZXNzZnVsIHNjZW5hcmlvcyBzYWlkIENvcmJhdCBjaXRpbmcgY29udmVyc2F0aW9ucyB3aXRoIHJlZ3VsYXRvcnMgSGUgYW5kIE9OZWlsbCBzYWlkIHRoZSByZWplY3Rpb24gZGlkIG5vdCBzZWVtIHRvIHJlZmxlY3QgYSBkaXNhZ3JlZW1lbnQgd2l0aCBDaXRpZ3JvdXBzIHN0cmF0ZWd5IG9yIGJ1c2luZXNzIG1vZGVsIENvcmJhdCBzYWlkIENpdGlncm91cCB3aWxsIHNwZW5kIG1vcmUgbW9uZXkgb24gc3RhZmYgYW5kIGluZm9ybWF0aW9uIHN5c3RlbXMgdG8gdXBncmFkZSBpdHMgY2FwaXRhbCBwbGFubmluZyB0b29scyBpbiB0aW1lIGZvciB0aGUgRmVkcyBuZXh0IGFubnVhbCByZXZpZXcgaW4gZWFybHkgMjAxNSBUaGUgc3BlbmRpbmcgd2lsbCBiZSBmdW5kZWQgdGhyb3VnaCBjb3N0Y3V0dGluZyBhbmQgcHJvZHVjdGl2aXR5IGdhaW5zIGluIG90aGVyIGFyZWFzIGhlIHNhaWQgQ29zdHMgaGF2ZSBiZWVuIGEgY2hyb25pYyBwcm9ibGVtIGZvciB0aGUgY29tcGFueSBhbmQgQ29yYmF0IGhhcyB0b2xkIGV4ZWN1dGl2ZXMgcmVkdWNpbmcgZXhwZW5zZXMgaXMgdGhlaXIgbnVtYmVyIG9uZSBwcmlvcml0eSBIZSBzYWlkIGF0IFR1ZXNkYXlzIG1lZXRpbmcgaGUgcmVjZW50bHkgZ2F2ZSBleGVjdXRpdmVzIHNpeCBkaWZmZXJlbnQgc2V0cyBvZiBhc3NpZ25tZW50cyB0byBpbXByb3ZlIHRoZSBjb21wYW55cyBidXNpbmVzcyBwcm9jZXNzZXMgYW5kIGVsaW1pbmF0ZSB1bm5lY2Vzc2FyeSBzdGVwcyBUaGUgZXhlY3V0aXZlcyB3aWxsIGdpdmUgdGhlIGJvYXJkIG9mIGRpcmVjdG9ycyBhIHByb2dyZXNzIHJlcG9ydCB0aGlzIHN1bW1lciBPTmVpbGwgYWNrbm93bGVkZ2VkIHRoYXQgdGhlIEZlZHMgcmVqZWN0aW9uIG9mIHRoZSBjYXBpdGFsIHBsYW4gaGFkIG1hZGUgaXQgdmlydHVhbGx5IGltcG9zc2libGUgZm9yIENpdGlncm91cCB0byBtZWV0IGEga2V5IHBlcmZvcm1hbmNlIGdvYWwgc2V0IGxhc3QgeWVhciBvZiBkZWxpdmVyaW5nIDIwMTUgcHJvZml0cyBhbW91bnRpbmcgdG8gMTAgcGVyY2VudCBvZiB0YW5naWJsZSBjb21tb24gZXF1aXR5IE9OZWlsbCBzYWlkIGhlIHN0aWxsIGJlbGlldmVzIHRoZSBjb21wYW55IGlzIGNhcGFibGUgb2YgdGhhdCBsZXZlbCBvZiByZXR1cm4gYnV0IGRpZCBub3Qgc2F5IHdoZW4gaXQgY291bGQgYmUgcmVhY2hlZCBJIGhhdmUgYSBsb3Qgb2YgY29uZmlkZW5jZSBpbiBNaWtlIGFuZCBoaXMgbWFuYWdlbWVudCB0ZWFtIE9OZWlsbCBzYWlkIGluIHRoZSBtZWV0aW5nIFRoZSBjaGFpcm1hbiB3YXMgdGhlIGtleSBmb3JjZSBvbiB0aGUgYm9hcmQgaW4gT2N0b2JlciAyMDEyIGluIHB1c2hpbmcgb3V0IHRoZW5DRU8gVmlrcmFtIFBhbmRpdCBhbmQgcmVwbGFjaW5nIGhpbSB3aXRoIENvcmJhdCBub3cgNTMgT05laWxsIHNhaWQgaG93ZXZlciBoZSBleHBlY3RzIGRpcmVjdG9ycyB3aWxsIGZhY3RvciBpbnRvIENvcmJhdHMgYW5kIG90aGVyIGV4ZWN1dGl2ZXMgcGF5IHRoaXMgeWVhciB0aGVpciBmYWlsdXJlIHRvIHdpbiBhcHByb3ZhbCBvZiB0aGUgY2FwaXRhbCBwbGFuIFRoZSBjb21wYW55IHNhaWQgODQ2IHBlcmNlbnQgb2Ygc2hhcmVob2xkZXJzIGhhZCBlbmRvcnNlZCB0aGUgY29tcGFueXMgZXhlY3V0aXZlIHBheSBmb3IgMjAxMyBieSBhIHByZWxpbWluYXJ5IGNvdW50IGRvd24gZnJvbSA5MiBwZXJjZW50IHNoYXJlaG9sZGVyIGFwcHJvdmFsIGEgeWVhciBhZ28gVGhlIGNvbXBlbnNhdGlvbiBwcm9jZXNzIHdhcyBvdmVyaGF1bGVkIGFmdGVyIGZhaWxpbmcgaW4gYSAyMDEyIHZvdGUgd2l0aCBvbmx5IDQ1IHBlcmNlbnQgYXBwcm92YWwgQ2l0aWdyb3VwcyBzaGFyZSBwcmljZSByb3NlIDE4IGNlbnRzIHRvIDQ4MDIgb24gVHVlc2RheWlucyBhbmQgTmljayBaaWVtaW5za2l0AARyb3dzdXEAfgAKAAAAAXQAATV0AAVzdGFydHVxAH4ACgAAAAF0AAEwdAACZmx1cQB+AAoAAAABdABvYXJ0aWNsZUlkLHRpdGxlLGNvbnRlbnQsZGF0ZSxzdG9ja0hpc3RvcnlJZCxzeW1ib2wsaGlzdG9yeURhdGUsb3BlbixoaWdoLGxvdyxjbG9zZSxhZGpDbG9zZSx2b2x1bWUsaWQsX3ZlcnNpb25fdAACZnF1cQB+AAoAAAABdAA6aGlzdG9yeURhdGU6WzIwMTMtMDMtMjdUMDA6MDA6MDBaIFRPIDIwMTMtMTItMDNUNTk6NTk6NTlaXXgAcA==</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTE1NTky</field><field name="title" class="java.lang.String">rO0ABXQAOUpQTW9yZ2FuIEludmVzdG9ycyBQb25kZXIgU3RyaXBwaW5nIERpbW9uIG9mIENoYWlybWFuc2hpcA==</field><field name="content" class="java.lang.String">rO0ABXQUPUF0IHRoZSBsYXJnZXN0IFUuUy4gYmFuaydzIGFubnVhbCBtZWV0aW5nIGluIHR3byB3ZWVrcywgc2hhcmVob2xkZXJzIHdpbGwgYmUgYWJsZSB0byB2b3RlIG9uIGEgbm9uLWJpbmRpbmcgcHJvcG9zYWwgdG8gc2VwYXJhdGUgdGhlIGNoYWlybWFuIGFuZCBDRU8gcm9sZXMuIFR3byBvZiB0aGUgYmFuaydzIHRvcCAxMCBzaGFyZWhvbGRlcnMgdG9sZCBSZXV0ZXJzIHRoZXkgYXJlIGNvbnNpZGVyaW5nIHZvdGluZyBpbiBmYXZvciBvZiB0aGUgcHJvcG9zYWwsIGEgcmV2ZXJzYWwgb2YgdGhlaXIgcG9zaXRpb24gbGFzdCB5ZWFyLCBiZWNhdXNlIG9mIHRoZSBkaXNhc3Ryb3VzIGJldHMgb24gY3JlZGl0IGRlcml2YXRpdmVzIHRoYXQgY29zdCB0aGUgYmFuayBtb3JlIHRoYW4gJDYgYmlsbGlvbiBsYXN0IHllYXIuIFRoZSBwcm9wb3NhbCBpcyBvbmx5IGEgbm9uLWJpbmRpbmcgcmVjb21tZW5kYXRpb24gYW5kIGl0IGlzIG5vdCBjbGVhciB3aGF0IHRoZSBib2FyZCB3aWxsIGRvIGlmIGl0IHBhc3Nlcy4gSVNTIFByb3h5IEFkdmlzb3J5IFNlcnZpY2VzLCB0aGUgbGVhZGluZyBwcm94eSBhZHZpc29yeSBmaXJtLCBvbiBGcmlkYXkgcmVjb21tZW5kZWQgaW52ZXN0b3JzIHN1cHBvcnQgdGhlIHByb3Bvc2FsIGFuZCBhbHNvIHNhaWQgdGhleSBzaG91bGQgdm90ZSBhZ2FpbnN0IHRoZSByZS1lbGVjdGlvbiBvZiB0aHJlZSBkaXJlY3RvcnMgd2hvIHRoZXkgc2FpZCBoYWQgZmFpbGVkIGluIHRoZWlyIG92ZXJzaWdodCBvZiB0aGUgYmFuay4gSlBNb3JnYW4gZGVjbGluZWQgdG8gY29tbWVudCBmb3IgdGhpcyBzdG9yeS4gVGhlIGJhbmsncyBib2FyZCBoYXMgc2FpZCBpdCBvcHBvc2VzIHRoZSBzaGFyZWhvbGRlciBwcm9wb3NhbCBhbmQgdGhhdCB0aGUgY29tcGFueSdzIGhhbmRsaW5nIG9mIHRoZSB0cmFkaW5nIGxvc3Mgc2hvd3MgaXRzIGN1cnJlbnQgZ292ZXJuYW5jZSB3b3Jrcy4gVGhlIGJhbmsncyBkaXJlY3RvcnMgYXJlIGxlYWRpbmcgYW4gYWdncmVzc2l2ZSBjYW1wYWlnbiB0byBwZXJzdWFkZSBzaGFyZWhvbGRlcnMgdG8gdm90ZSBhZ2FpbnN0IGl0LCBvbmUgb2YgdGhlIGludmVzdG9ycyBzYWlkLiBJdCBpcyBub3QgY2xlYXIgaG93IG11Y2ggaW52ZXN0b3Igc3VwcG9ydCB0aGVyZSBpcyBmb3IgdGhlIHByb3Bvc2FsLiBUaGUgdHdvIEpQTW9yZ2FuIGludmVzdG9ycywgd2hvIHdlcmUgbm90IGF1dGhvcml6ZWQgdG8gc3BlYWsgb24gdGhlIHJlY29yZCwgc2FpZCB0aGF0IGhvd2V2ZXIgdGhlIHZvdGUgc2hha2VzIG91dCwgdGhleSBwbGFuIHRvIGNvbnRpbnVlIHRvIHB1c2ggdGhlIGJhbmsncyBkaXJlY3RvcnMgYmVoaW5kIHRoZSBzY2VuZXMgdG8gdGFrZSBhdCBsZWFzdCBzb21lIHBvd2VyIGZyb20gRGltb24uIE9uZSBpbnZlc3RvciBzYWlkIHRoZXkgd2lsbCBsaWtlbHkgZW5jb3VyYWdlIHRoZSBiYW5rIHRvIGdpdmUgbW9yZSBhdXRob3JpdHkgdG8gaXRzIGxlYWQgaW5kZXBlbmRlbnQgZGlyZWN0b3IsIGZvcm1lciBFeHhvbk1vYmlsIENoaWVmIEV4ZWN1dGl2ZSBMZWUgUmF5bW9uZC4gQXQgSlBNb3JnYW4sIHRoZSBsZWFkIGRpcmVjdG9yIGlzIGN1cnJlbnRseSBrbm93biBhcyB0aGUgInByZXNpZGluZyBkaXJlY3RvciwiIGEgcm9sZSB0aGF0IGluY2x1ZGVzIGFwcHJvdmluZyBib2FyZCBhZ2VuZGFzIGFuZCBzY2hlZHVsZXMgYW5kIGxlYWRpbmcgbWVldGluZ3Mgb2YgaW5kZXBlbmRlbnQgZGlyZWN0b3JzLiBUaGUgc2Vjb25kIGludmVzdG9yIHNhaWQgdGhleSB3b3VsZCBub3QgYmUgc2F0aXNmaWVkIHdpdGggYW55dGhpbmcgbGVzcyB0aGFuIGEgc2VwYXJhdGlvbiBvZiB0aGUgdHdvIHJvbGVzIGJlY2F1c2UgYmVpbmcgYSBjaGFpcm1hbiBpcyBhIGZ1bGwtdGltZSBqb2IuIENvbXBsaWNhdGluZyB0aGUgdm90ZSBpcyBEaW1vbidzIHJlcHV0YXRpb24gYXMgdGhlIGJlc3QgbWFuYWdlciBvbiBXYWxsIFN0cmVldC4gVGhlIDU3LXllYXItb2xkIGV4ZWN1dGl2ZSBpcyBzdGlsbCB2aWV3ZWQgYnkgbWFueSBzaGFyZWhvbGRlcnMgYXMgYSBzaHJld2QgbGVhZGVyIGFuZCB0aGV5IHdhbnQgaGltIHRvIGNvbnRpbnVlIHRvIHJ1biB0aGUgYmFuaywgYWxiZWl0IHdpdGggc29tZSBvdmVyc2lnaHQuIFNvbWUgaW52ZXN0b3JzIGZlYXIgdGhhdCBEaW1vbiB3aWxsIGxlYXZlIGlmIGhlIGxvc2VzIHRoZSB2b3RlLiBEaW1vbidzIGRpZmZpY3VsdGllcyBiZWdhbiBsYXN0IHllYXIsIHdoZW4gbmV3cyBlbWVyZ2VkIG9mIHRoZSBMb25kb24gV2hhbGUgdHJhZGVzLiBUaGUgYmFuayBoYXMgc2luY2UgaGFkIGEgc2VyaWVzIG9mIHJ1bi1pbnMgd2l0aCByZWd1bGF0b3JzIG92ZXIgaXNzdWVzIHJhbmdpbmcgZnJvbSBtb25leSBsYXVuZGVyaW5nIGNvbnRyb2xzIHRvIGFsbGVnYXRpb25zIG9mIHBvd2VyIG1hcmtldCBtYW5pcHVsYXRpb24uIEpQTW9yZ2FuJ3MgZ3Jvd2luZyBhcnJheSBvZiBwcm9ibGVtcyBoYXMgb3ZlcnNoYWRvd2VkIGxhc3QgeWVhcidzIHJlY29yZCBwcm9maXRzIGluIHRoZSBtaW5kcyBvZiBtYW55IGludmVzdG9ycy4gIFJFR1VMQVRPUlkgUFJPQkxFTVMgQXMgaW52ZXN0b3JzIHBvbmRlciB3aGV0aGVyIERpbW9uIGNhbiBwcm92aWRlIGVub3VnaCBvdmVyc2lnaHQgdG8gYSBiYW5rIHdpdGggbmVhcmx5ICQyLjQgdHJpbGxpb24gb2YgYXNzZXRzLCB0aGVpciBkb3VidHMgY291bGQgZ2l2ZSBtb21lbnR1bSB0byBhbiBpZGVhIGhlbGQgYnkgYSBzbWFsbCBidXQgZ3Jvd2luZyBtaW5vcml0eSBvZiBVLlMuIGxhd21ha2VycyBhbmQgcmVndWxhdG9ycyB0aGF0IHRoZSBiaWdnZXN0IGJhbmtzIGFyZSB0b28gYmlnIHRvIG1hbmFnZS4gVGhlIHZvdGUgYWxzbyBjb21lcyBhbWlkIGEgYnJvYWRlciBkZWJhdGUgaW4gY29ycG9yYXRlIEFtZXJpY2Egb3ZlciB3aGV0aGVyIHRoZSBoZWFkIG9mIGEgY29tcGFueSBzaG91bGQgYWxzbyBsZWFkIHRoZSBkaXJlY3RvcnMgdGhhdCBvdmVyc2VlIHRoZSBjb21wYW55LiBJbiB0aGUgVW5pdGVkIEtpbmdkb20sIHRoZSB0d28gcm9sZXMgYXJlIHR5cGljYWxseSBzZXBhcmF0ZS4gIkluZGVwZW5kZW5jZSBpcyB0aGUgY29ybmVyc3RvbmUgb2YgYWNjb3VudGFiaWxpdHksIiBzYWlkIEpvZSBEZWFyLCBjaGllZiBpbnZlc3RtZW50IG9mZmljZXIgYXQgdGhlIENhbGlmb3JuaWEgUHVibGljIEVtcGxveWVlcycgUmV0aXJlbWVudCBTeXN0ZW0sIHdoaWNoIG93bnMgSlBNb3JnYW4gc2hhcmVzLiAiQXMgYSBwcmluY2lwbGUsIENhbFBFUlMgYmVsaWV2ZXMgYm9hcmRzIHNob3VsZCBiZSBjaGFpcmVkIGJ5IGFuIGluZGVwZW5kZW50IGRpcmVjdG9yLCBhbmQgd2Ugc3VwcG9ydCB0aGUgc2VwYXJhdGlvbiBvZiB0aGUgQ0VPIGFuZCBjaGFpciByb2xlcy4iIERlYXIgZGVjbGluZWQgdG8gY29tbWVudCBzcGVjaWZpY2FsbHkgb24gSlBNb3JnYW4uIFRoZSBzaGFyZWhvbGRlciBwcm9wb3NhbCB3YXMgc3BvbnNvcmVkIGJ5IHRoZSBBbWVyaWNhbiBGZWRlcmF0aW9uIG9mIFN0YXRlLCBDb3VudHkgJiBNdW5pY2lwYWwgRW1wbG95ZWVzLCBOZXcgWW9yayBDaXR5IGFuZCBzdGF0ZSBvZiBDb25uZWN0aWN1dCBlbXBsb3llZSByZXRpcmVtZW50IHBsYW5zIGFuZCB0aGUgVW5pdGVkIEtpbmdkb20ncyBIZXJtZXMgRnVuZCBNYW5hZ2Vycy4gQXQgbGFzdCB5ZWFyJ3MgbWVldGluZywgdGhlIEFGU0NNRSB3YXMgdGhlIHNvbGUgc3BvbnNvciBvZiB0aGUgcHJvcG9zYWwsIGFuZCBpdCB3b24gNDAgcGVyY2VudCBvZiBpbnZlc3RvcnMnIHZvdGVzLCByZWxhdGl2ZWx5IGhpZ2ggZm9yIGEgbWVhc3VyZSB0aGF0IHRoZSBib2FyZCBoYWQgb3Bwb3NlZC4gTGFzdCB5ZWFyJ3Mgdm90ZSBoYXBwZW5lZCBvbmx5IGZpdmUgZGF5cyBhZnRlciB0aGUgY29tcGFueSBmaXJzdCBhY2tub3dsZWRnZWQgaXRzIGJhZCBiZXRzIG9uIGNyZWRpdCBkZXJpdmF0aXZlcy4gU2luY2UgdGhlbiwgc2hhcmVob2xkZXJzIGhhdmUgbGVhcm5lZCBtdWNoIG1vcmUgYWJvdXQgdGhlIGNvbXBhbnkncyBmYWlsZWQgcmlzayBjb250cm9scyBhbmQgdGhlIHRyb3VibGUgaXQgaGFzIGhhZCB3aXRoIHJlZ3VsYXRvcnMuIElTUywgd2hpY2ggaXMgYWxzbyBrbm93biBhcyBJbnN0aXR1dGlvbmFsIFNoYXJlaG9sZGVyIFNlcnZpY2VzLCBoYWQgc3VwcG9ydGVkIGxhc3QgeWVhcidzIHByb3Bvc2FsLCBidXQgdGhpcyB5ZWFyIGFkZGVkIGEgdHdvLXBhZ2UgYW5hbHlzaXMgdGhhdCBjb25jbHVkZWQgdGhlIExvbmRvbiBXaGFsZSBsb3NzIGhhZCBkaXNwbGF5ZWQgdGhlIGJvYXJkJ3MgbGFjayBvZiBpbmRlcGVuZGVuY2UgZnJvbSBEaW1vbi4gQSBzZWNvbmQgcHJveHkgYWR2aXNvcnkgZmlybSwgR2xhc3MsIExld2lzICYgQ28sIGVuZG9yc2VkIGxhc3QgeWVhcidzIHByb3Bvc2FsIGJ1dCBoYXMgeWV0IHRvIGFubm91bmNlIGl0cyByZWNvbW1lbmRhdGlvbiBmb3IgdGhpcyB5ZWFyJ3Mgdm90ZS4gRGltb24gaGFzIGhhZCBvdGhlciBwcm9ibGVtcyByZWNlbnRseS4gVS5TLiBnb3Zlcm5tZW50IGludmVzdGlnYXRvcnMgaGF2ZSBmb3VuZCB0aGF0IGEgSlBNb3JnYW4gdW5pdCBtYW5pcHVsYXRlZCB0cmFkaW5nIGluIHRoZSBDYWxpZm9ybmlhIGFuZCBNaWNoaWdhbiBlbGVjdHJpY2l0eSBtYXJrZXRzLCB0aGUgTmV3IFlvcmsgVGltZXMgcmVwb3J0ZWQgb24gRnJpZGF5LiBUaGUgT2ZmaWNlIG9mIHRoZSBDb21wdHJvbGxlciBvZiB0aGUgQ3VycmVuY3ksIG9uZSBvZiB0aGUgYmFuaydzIG1haW4gcmVndWxhdG9ycywgaXMgYWxzbyBjb25zaWRlcmluZyBjZW5zdXJpbmcgdGhlIGJhbmsgZm9yIGZhaWxpbmcgdG8gY29uZHVjdCBhZGVxdWF0ZSBkdWUgZGlsaWdlbmNlIGFuZCByZXBvcnQgc3VzcGljaW9ucyBhYm91dCBQb256aS1zY2hlbWVyIEJlcm5hcmQgTWFkb2ZmLCBSZXV0ZXJzIGZpcnN0IHJlcG9ydGVkIGxhc3QgbW9udGguIEluIGhpcyBhbm51YWwgbGV0dGVyIHRvIHNoYXJlaG9sZGVycywgRGltb24gc2FpZCBleGVjdXRpdmVzIHRocm91Z2hvdXQgdGhlIGJhbmsgYXJlIHB1dHRpbmcgb3RoZXIgcHJvamVjdHMgb24gaG9sZCBvciBzY2FsaW5nIHRoZW0gYmFjaywgc28gdGhleSBjYW4gZm9jdXMgb24gdGhlIGJhbmsncyByZWd1bGF0b3J5IG9ibGlnYXRpb25zLiBEb3plbnMgb2YgdGhlc2UgcHJvamVjdHMgYXJlIG9uIHRoZSBiYWNrIGJ1cm5lciBub3csIGEgc291cmNlIGZhbWlsaWFyIHdpdGggdGhlIHNpdHVhdGlvbiBzYWlkLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT5zD5CAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI3MmFhNDdlMzBkNWYwMmU=</field><field name="symbol" class="java.lang.String">rO0ABXQABE1TQ0E=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT54NeyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5jMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5lwo9cKPX</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5jMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5lwo9cKPX</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA28KPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAfpA==</field><field name="id" class="java.lang.String">rO0ABXQAEDNmNWVjYTg2MzU5YjgxOGI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mK7/AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE1NjAy</field><field name="title" class="java.lang.String">rO0ABXQALUFJRyBCZWF0cyBFc3RpbWF0ZXMsIFByb3AvQ2FzIEJ1c2luZXNzIFNoaW5lcw==</field><field name="content" class="java.lang.String">rO0ABXQVDVRoZSBsb25nLWF3YWl0ZWQgdHVybmFyb3VuZCBpbiBBSUcncyBwcm9wZXJ0eSBhbmQgY2FzdWFsdHkgYnVzaW5lc3MgaGVscGVkIHRoZSBjb21wYW55IGJlYXQgYW5hbHlzdHMnIHF1YXJ0ZXJseSBwcm9maXQgZXhwZWN0YXRpb25zIG9uIFRodXJzZGF5LCBzZW5kaW5nIGl0cyBzaGFyZXMgdXAgMyBwZXJjZW50IGluIGFmdGVyLWhvdXJzIHRyYWRpbmcuIFRoZSB1bml0IHJlcG9ydGVkIGEgY29tYmluZWQgcmF0aW8gb2YgOTcuMyBwZXJjZW50IGxhc3QgcXVhcnRlciwgdGhlIGZpcnN0IHRpbWUgdGhhdCByYXRpbyBoYXMgZHJvcHBlZCBiZWxvdyAxMDAgc2luY2UgdGhlIHRoaXJkIHF1YXJ0ZXIgb2YgMjAxMC4gQSBjb21iaW5lZCByYXRpbyBiZWxvdyAxMDAgaW5kaWNhdGVzIGFuIHVuZGVyd3JpdGluZyBwcm9maXQsIG1lYW5pbmcgYW4gaW5zdXJlciBpcyByZWNlaXZpbmcgbW9yZSBpbiBwcmVtaXVtcyB0aGFuIGl0IGlzIHBheWluZyBvdXQgaW4gY2xhaW1zLiAiVGhlIGltcG9ydGFudCB0aGluZyBmb3IgdGhpcyBxdWFydGVyIGlzIHRoYXQgdGhlIGNvbWJpbmVkIHJhdGlvIGltcHJvdmVkLCIgc2FpZCBKb3NoIFN0aXJsaW5nLCBhbiBpbnN1cmFuY2UgYW5hbHlzdCB3aXRoIEJlcm5zdGVpbiBSZXNlYXJjaC4gIlRoYXQncyB0aGUgdGhpbmcgcGVvcGxlIHdpbGwgZm9jdXMgb246IHRoZXkgYWN0dWFsbHkgbWFkZSBtb25leS4iIEluc3VyZXJzIGhhdmUgaGFkIHRyb3VibGUgcmFpc2luZyBwcmljZXMgaW4gdGhlIHByb3BlcnR5IGFuZCBjYXN1YWx0eSBidXNpbmVzcyBmb3Igc29tZSB0aW1lLiBBSUcgaGFzIG5vdCByZXBvcnRlZCBhbiBhbm51YWwgdW5kZXJ3cml0aW5nIHByb2ZpdCB0aGVyZSBzaW5jZSAyMDA3LCBidXQgdGhlIGZpcnN0IHF1YXJ0ZXIgc2VlbXMgdG8gaGF2ZSBiZWVuIGEgdHVybmluZyBwb2ludC4gVHJhdmVsZXJzIENvbXBhbmllcyBJbmMgLCBDaHViYiBDb3JwIGFuZCBBQ0UgTHRkIGFsc28gYmVhdCBlYXJuaW5ncyBleHBlY3RhdGlvbnMgbGFzdCBtb250aCwgY2l0aW5nIGhpZ2hlciBwcmljaW5nLiBBSUcncyBwcm9wZXJ0eSBhbmQgY2FzdWFsdHkgdW5pdCByZXBvcnRlZCBvcGVyYXRpbmcgaW5jb21lIG9mICQxLjYgYmlsbGlvbiBpbiB0aGUgZmlyc3QgcXVhcnRlciwgdXAgZnJvbSAkMSBiaWxsaW9uIGEgeWVhciBlYXJsaWVyLiBJdHMgZmlyc3QtcXVhcnRlciwgcHJvcGVydHktYW5kLWNhc3VhbHR5IHVuZGVyd3JpdGluZyBpbmNvbWUgb2YgJDIzMSBtaWxsaW9uIGNvbXBhcmVzIHdpdGggYSAkMTgwIG1pbGxpb24gdW5kZXJ3cml0aW5nIGxvc3MgaW4gdGhlIHNhbWUgcGVyaW9kIGEgeWVhciBhZ28uIEFJRydzIGxpZmUgaW5zdXJhbmNlIGJ1c2luZXNzIGFsc28gcmVwb3J0ZWQgc29tZSBpbXByb3ZlbWVudCwgd2l0aCBoaWdoZXIgcmV0dXJucyBvbiBhbHRlcm5hdGl2ZSBhc3NldHMgYW5kIGdhaW5zIG9uIHRoZSB2YWx1ZSBvZiBzZWN1cml0aWVzIGhlbGQgaW4gaXRzIGludmVzdG1lbnQgcG9ydGZvbGlvLiBJdHMgb3BlcmF0aW5nIGluY29tZSByb3NlIHRvICQxLjQgYmlsbGlvbiBmcm9tICQxLjMgYmlsbGlvbiBhIHllYXIgYWdvLiBCdXQgbGlrZSBvdGhlciBsaWZlIGluc3VyZXJzLCB0aGUgYnVzaW5lc3MgaXMgc3RpbGwgbmF2aWdhdGluZyBhIGxvdyBpbnRlcmVzdC1yYXRlIGVudmlyb25tZW50IHRoYXQgaHVydHMgaW50ZXJlc3QgaW5jb21lIGZyb20gYm9uZHMgYW5kIG1ha2VzIGl0IGRpZmZpY3VsdCB0byBzZWxsIGZpeGVkIGFubnVpdGllcy4gT3ZlcmFsbCwgQUlHJ3MgcHJvZml0IGZlbGwgMzUgcGVyY2VudCB0byAkMS45OCBiaWxsaW9uLCBvciAkMS4zNCBwZXIgc2hhcmUsIGZyb20gJDMuMDUgYmlsbGlvbiwgb3IgJDEuNzEgcGVyIHNoYXJlIGEgeWVhciBlYXJsaWVyLiBPbiBhbiBvcGVyYXRpbmcgYmFzaXMsIEFJRyBlYXJuZWQgJDEuMzQgcGVyIHNoYXJlLCBjb21wYXJlZCB3aXRoIGFuIGF2ZXJhZ2UgYW5hbHlzdCBlc3RpbWF0ZSBvZiA4NyBjZW50cyBwZXIgc2hhcmUsIGFjY29yZGluZyB0byBUaG9tc29uIFJldXRlcnMgSS9CL0UvUy4gVGhlIHByb2ZpdCBkZWNsaW5lIHdhcyByZWxhdGVkIHRvIGxvd2VyIHByZW1pdW0gaW5jb21lIGJlY2F1c2Ugb2Ygc3BlY2lhbCBpdGVtcywgaW5jbHVkaW5nIGZvcmVpZ24gY3VycmVuY3kgZmx1Y3R1YXRpb25zLiBFeGNsdWRpbmcgdGhvc2UgZmFjdG9ycywgbmV0IHByZW1pdW1zIHJvc2UgNCBwZXJjZW50IGNvbXBhcmVkIHdpdGggdGhlIHllYXItYWdvIHBlcmlvZC4gQUlHIGFsc28gc3BlbnQgbW9yZSB0byB1cGdyYWRlIGluZnJhc3RydWN0dXJlLCB0ZWNobm9sb2d5IGFuZCBwZXJzb25uZWwsIGRyaXZpbmcgZXhwZW5zZXMgaGlnaGVyLiBJbiBhIG1lbW8gdG8gZW1wbG95ZWVzIG9idGFpbmVkIGJ5IFJldXRlcnMsIENoaWVmIEV4ZWN1dGl2ZSBSb2JlcnQgQmVubW9zY2hlIGNhbGxlZCBpdCBhICJzdHJvbmcgcXVhcnRlciwiIGJ1dCBzYWlkIGZ1cnRoZXIgaW1wcm92ZW1lbnQgd2FzIG5lZWRlZC4gIk91ciBwcmlvcml0eSB0aGlzIHllYXIgaXMgdG8gaW1wcm92ZSBvcGVyYXRpbmcgZnVuZGFtZW50YWxzIGFuZCByZWR1Y2UgY29zdHMsIiBoZSBzYWlkLiAiV2hldGhlciB0aGlzIG1lYW5zIGxvd2VyaW5nIHRoZSBjb3N0IG9mIGNhcGl0YWwsIHJlLWVuZ2luZWVyaW5nIG91ciBzeXN0ZW1zLCBvciBmb2N1c2luZyBvbiBidXNpbmVzcyBsaW5lcyBhbmQgZ2VvZ3JhcGhpY2FsIGxvY2F0aW9ucyB0aGF0IG1ha2Ugc3RyYXRlZ2ljIHNlbnNlIGZvciBvdXIgY29tcGFueSwgZWFjaCBvbmUgb2YgdXMgc2hvdWxkIGJlIGxvb2tpbmcgZm9yIHdheXMgdG8gaW1wcm92ZSBlZmZpY2llbmNpZXMgYW5kIGVsaW1pbmF0ZSBleHBlbnNlcy4iIFRoZSBNYXJjaCBxdWFydGVyIHdhcyBhbiBpbXBvcnRhbnQgYmVuY2htYXJrIGZvciBBSUcsIGJlY2F1c2UgaXQgd2FzIHRoZSBmaXJzdCBpbiB3aGljaCB0aGUgVS5TLiBnb3Zlcm5tZW50IGhhZCBmdWxseSBleGl0ZWQgYWxsIGl0cyBiYWlsb3V0LXJlbGF0ZWQgaG9sZGluZ3MuIFRoZSBGZWRlcmFsIFJlc2VydmUgYW5kIFRyZWFzdXJ5IERlcGFydG1lbnQgdG9nZXRoZXIgb2ZmZXJlZCAkMTgyIGJpbGxpb24gaW4gY29tYmluZWQgc3VwcG9ydCBmb3IgQUlHIHN0ZW1taW5nIGZyb20gdGhlIDIwMDggZmluYW5jaWFsIGNyaXNpcy4gQWZ0ZXIgeWVhcnMgb2YgcmVzdHJ1Y3R1cmluZywgc2VsbGluZyBhc3NldHMgYW5kIHJldHVybmluZyBpdHMgZ292ZXJubWVudC1vd25lZCBzdG9jayB0byB0aGUgcHVibGljLCBBSUcgZWxpbWluYXRlZCB0aGUgZ292ZXJubWVudCdzIGxhc3QgZmluYW5jaWFsIGludGVyZXN0IGluIE1hcmNoIHdoZW4gaXQgYm91Z2h0IGJhY2sgd2FycmFudHMgZnJvbSB0aGUgVHJlYXN1cnkgZm9yIGFib3V0ICQyNSBtaWxsaW9uLiAgRElWSURFTkQgUVVFU1RJT04gTElOR0VSUyBEZXNwaXRlIHRoYXQgcHJvZ3Jlc3MsIHRoZXJlIGFyZSBzdGlsbCBzb21lIHF1ZXN0aW9ucyBoYW5naW5nIG92ZXIgQUlHLCBpbmNsdWRpbmcgaG93IGl0IHdpbGwgYmUgdHJlYXRlZCB1bmRlciBpdHMgcHJlc3VtZWQgc3RhdHVzIGFzIGEgInN5c3RlbWljYWxseSBpbXBvcnRhbnQgZmluYW5jaWFsIGluc3RpdHV0aW9uLCIgb3IgU0lGSSwgd2hpY2ggdGhlIEZlZGVyYWwgUmVzZXJ2ZSBoYXMgbm90IHlldCBvZmZpY2lhbGx5IGRlc2lnbmF0ZWQsIGFuZCB3aGVuIGl0IHdpbGwgYmUgYWJsZSB0byByZXN1bWUgZGl2aWRlbmQgcGF5bWVudHMuIEFJRyBzaGFyZXMgaGF2ZSByaXNlbiAxOSBwZXJjZW50IHRoaXMgeWVhciwgY2xvc2luZyBhdCAkNDIuMTMgb24gVGh1cnNkYXkuIEJ1dCB0aGV5IHJlbWFpbiB3ZWxsIGJlbG93IHRoZSBjb21wYW55J3MgYm9vayB2YWx1ZSBvZiAkNTkuMzksIGV4Y2x1ZGluZyBtYXJrZXQgZ2FpbnMgYW5kIGxvc3Nlcy4gQW5hbHlzdHMgc2F5IGludmVzdG9ycyBhcmUgaGVzaXRhbnQgdG8gdmFsdWUgQUlHIGFzIHJpY2hseSBhcyBvdGhlciBpbnN1cmVycyBiZWNhdXNlIG9mIGl0cyBiYWlsb3V0LCBpdHMgdm9sYXRpbGUgZWFybmluZ3Mgc2luY2UgMjAwNyBhbmQgaXRzIG9uZ29pbmcgdHVybmFyb3VuZCBwbGFuLiBXaGlsZSBtYW5hZ2VtZW50IGlzIGludmVzdGluZyBpbiBzb21lIGxvbmctbmVnbGVjdGVkIGFyZWFzIG9mIEFJRywgb3ZlcmFsbCBpdCBpcyB0cnlpbmcgdG8gcmVkdWNlIGNvc3RzIGFuZCBzdGFmZi4gQmVubW9zY2hlIGFsc28gd2FudHMgQUlHJ3MgcHJvcGVydHkgYW5kIGNhc3VhbHR5IGJ1c2luZXNzIHRvIHByb2R1Y2UgYSByZXR1cm4tb24tZXF1aXR5IG9mIGF0IGxlYXN0IDEwIHBlcmNlbnQgYW5kIGEgY292ZXJhZ2UgcmF0aW8gb2YgOTAgdG8gOTUgYnkgMjAxNS4gU29tZSBpbnZlc3RvcnMgYXJlIGFsc28gd2FpdGluZyBmb3IgdGhlIGNvbXBhbnkgdG8gcmVpbnN0YXRlIGl0cyBkaXZpZGVuZCwgd2hpY2ggaGFzIGJlZW4gc3VzcGVuZGVkIHNpbmNlIDIwMDguIFRoZSBjb21wYW55IGhhcyBzbyBmYXIgb2ZmZXJlZCBjYXV0aW91cyBndWlkYW5jZSBvbiB0aGF0IHRvcGljLiBXaGlsZSByZXN1bWluZyBkaXZpZGVuZCBwYXltZW50cyBpcyBpbXBvcnRhbnQgdG8gbWFuYWdlbWVudCwgQUlHJ3MgZmlyc3QgcHJpb3JpdHkgaXMgZ2V0dGluZyByYXRpbmdzIGFnZW5jaWVzIGFuZCByZWd1bGF0b3JzIGNvbWZvcnRhYmxlIHdpdGggaXRzIGNhcGl0YWwgbGV2ZWxzLCBleGVjdXRpdmVzIGhhdmUgc2FpZC4gQUlHIGhhcyBhbHNvIGJlZW4gdXNpbmcgZXhjZXNzIGNhcGl0YWwgdG8gYnV5IGJhY2sgc29tZSBvZiBpdHMgbW9yZSBleHBlbnNpdmUgZGVidCBhbmQgaXRzIHN0b2NrLiBUaGUgY29tcGFueSBjYWxsZWQgJDEuMSBiaWxsaW9uIG9mIGp1bmlvciBzdWJvcmRpbmF0ZWQgbm90ZXMgYW5kIHNwZW50ICQxLjMgYmlsbGlvbiBidXlpbmcgYmFjayBkZWJ0IGR1cmluZyB0aGUgZmlyc3QgcXVhcnRlciwgd2hpY2ggd2lsbCByZWR1Y2UgaW50ZXJlc3QgcGF5bWVudHMgYnkgJDE2NSBtaWxsaW9uIGEgeWVhci4gQUlHIGlzIGFsc28gY29uc2lkZXJpbmcgY2FsbGluZyBhbm90aGVyICQ3NTAgbWlsbGlvbiBpbiBjYWxsYWJsZSBoeWJyaWRzIGluIHRoZSBzZWNvbmQgcXVhcnRlciwgd2hpY2ggd291bGQgc2F2ZSBpdCBhbm90aGVyICQ1MCBtaWxsaW9uIGluIGFubnVhbCBpbnRlcmVzdCBwYXltZW50cy4gIkkgd291bGQgbG92ZSB0byBiZSBhYmxlIHRvIHB1dCBhIGRpdmlkZW5kIG9uIHRoZSBzdG9jaywiICBCZW5tb3NjaGUgc2FpZCBpbiBhIGNvbmZlcmVuY2UgY2FsbCBpbiBGZWJydWFyeS4gQnV0IGhlIGFsc28gbm90ZWQgdGhhdCByYXRpbmdzIGFnZW5jaWVzICJ3YW50IG1vcmUgdGltZSB0byBzZWUgdXMgY29udGludWUgdG8gZXZvbHZlIHdpdGggdGhlIGdvb2QsIHNvbGlkIGVhcm5pbmdzIHRoYXQgeW91J3ZlIHNlZW4gc28gZmFyLiI=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT5jnHyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGEwY2YzYjVmMzEwZDY2MzE=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0FJRw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT5owtiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBF0KPXCj1x</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBGczMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBFw9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBGQo9cKPXD</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBF6j1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAmjDBA==</field><field name="id" class="java.lang.String">rO0ABXQAEGY5NGRlNTJlOGU5OTFiZTc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHauAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE0MTk2</field><field name="title" class="java.lang.String">rO0ABXQAL0pDIFBlbm5leSBCb2FyZCBDb21lcyBVbmRlciBGaXJlIGZvciBDRU8gU3dpdGNo</field><field name="content" class="java.lang.String">rO0ABXQSFkhvdXJzIGFmdGVyIHRoZSBzd2l0Y2ggd2FzIGFubm91bmNlZCBvbiBNb25kYXksIHRoZXJlIHdhcyBhdCBsZWFzdCBvbmUgY2FsbCBmb3IgdGhlIGVudGlyZSBib2FyZCB0byByZXNpZ24sIHdoaWxlIG90aGVycyBzdWdnZXN0ZWQgc2hhcmVob2xkZXJzIG1pZ2h0IHZvdGUgb3V0IGN1cnJlbnQgZGlyZWN0b3JzIGF0IHRoZSBjb21wYW55J3MgbmV4dCBhbm51YWwgbWVldGluZy4gIkl0IHdhcyB0aGUgd3JvbmcgdGhpbmcgZm9yIHRoZSBib2FyZCB0byBkbyB0byBnZXQgcmlkIG9mIEpvaG5zb24gaGVyZS4gV2l0aCB0aGUgYm9hcmQgZmlyaW5nIEpvaG5zb24gbm93LCBhdCB0aGlzIHN0YWdlIGluIHRoZSBnYW1lLCB0aGV5IHNob3VsZCB0ZW5kZXIgdGhlaXIgb3duIHJlc2lnbmF0aW9uIGFzIHdlbGwsIiBzYWlkIEJyaWFuIE1jR291Z2gsIG1hbmFnaW5nIGRpcmVjdG9yIGFuZCBoZWFkIG9mIHRoZSByZXRhaWwgZ3JvdXAgYXQgcmVzZWFyY2ggZmlybSBIZWRnZXllIFJpc2sgTWFuYWdlbWVudC4gVGhvdWdoIHRoZSBib2FyZCBtYXkgbm90IGZhY2Ugc2VyaW91cyBsZWdhbCBjaGFsbGVuZ2VzIHRvIHRoZSBkZWNpc2lvbiwgc2hhcmVob2xkZXJzIG1heSBxdWVzdGlvbiB3aGV0aGVyIHRoZSBtb3ZlIHRvIHJlcGxhY2UgSm9obnNvbiB3aXRoIFVsbG1hbiwgd2hvIEpvaG5zb24gaGltc2VsZiByZXBsYWNlZCBpbiBsYXRlIDIwMTEsIGlzIGdvb2QgZm9yIHRoZW0uIE1vcmUgdGhhbiAxNiBob3VycyBhZnRlciB0aGUgY2hhbmdlLCBQZW5uZXkncyB3ZWJzaXRlIHN0aWxsIGxpc3RlZCBKb2huc29uIGFzIENFTy4gSi5DLiBQZW5uZXkgc2hhcmVzIGxvc3QgaGFsZiB0aGVpciB2YWx1ZSBkdXJpbmcgSm9obnNvbidzIHRlbnVyZSBhZnRlciBoYXZpbmcgc2hlZCAxNSBwZXJjZW50IGR1cmluZyBVbGxtYW4ncyB0aW1lIGFzIENFTyBmcm9tIDIwMDQgdG8gMjAxMS4gVGhlIHN0b2NrIHNsaWQgZnVydGhlciBNb25kYXkgbmlnaHQgYWZ0ZXIgdGhlIHJldGFpbGVyIHNhaWQgVWxsbWFuIHdhcyByZXR1cm5pbmcsIGFzIGFuYWx5c3RzIGJsYW1lZCBoaW0gZm9yIGNyZWF0aW5nIHRoZSBwcm9ibGVtcyB0aGF0IEpvaG5zb24gd2FzIHN1cHBvc2VkIHRvIGZpeC4gU2hhcmVzIHR1bWJsZWQgMTAuMyBwZXJjZW50IGF0ICQxNC4yMyBpbiBlYXJseSBUdWVzZGF5IHRyYWRpbmcuIFdoZXRoZXIgVWxsbWFuIGlzIHRoZSByaWdodCBtYW4gZm9yIHRoZSBqb2Igb3Igbm90LCBzb21lIHNhaWQgdWx0aW1hdGUgcmVzcG9uc2liaWxpdHkgZm9yIHRoZSByZXRhaWxlcidzIGZ1dHVyZSBub3cgbGllcyB3aXRoIHRoZSByZW1haW5pbmcgMTAgbWVtYmVycyBvZiB0aGUgYm9hcmQgb2YgZGlyZWN0b3JzLCBmb3VyIG9mIHdob20gam9pbmVkIGluIHRoZSBsYXN0IGZpdmUgeWVhcnMuIExJTUlURUQgRVhQRVJJRU5DRSBUaGF0IGJvYXJkIHJlZmxlY3RzIHRoZSBjb21wYW55J3MgVGV4YXMgcm9vdHMgbW9yZSB0aGFuIGl0cyByZXRhaWwgb3BlcmF0aW9ucy4gRm91ciBkaXJlY3RvcnMgYXJlIG9yIHdlcmUgZXhlY3V0aXZlcyBvZiBUZXhhcy1iYXNlZCBpbnN0aXR1dGlvbnMuIEFzaWRlIGZyb20gVWxsbWFuLCBvbmx5IG9uZSBib2FyZCBtZW1iZXIgaGFzIGRpcmVjdCByZXRhaWwgZXhwZXJpZW5jZSDigJQgTGVvbmFyZCBSb2JlcnRzLCB0aGUgZm9ybWVyIENFTyBvZiBlbGVjdHJvbmljcyBjaGFpbiBSYWRpb1NoYWNrIENvcnAuIFRoZSByZXN0IGNvbWUgZnJvbSBjb25zdW1lciBwcm9kdWN0cywgYWlybGluZXMsIG1lZGlhIGFuZCBtYW51ZmFjdHVyaW5nIHNlY3RvcnMsIGFtb25nIG90aGVycy4gVGhlIGJvYXJkIHNhaWQgaW4gYSBzdGF0ZW1lbnQgaXQgcGlja2VkIFVsbG1hbiBiZWNhdXNlIGhlIHdhcyB3ZWxsLXBvc2l0aW9uZWQgdG8gbW92ZSBxdWlja2x5IGFuZCBpbXByb3ZlIHNhbGVzLCBidXQgVWxsbWFuIGhpbXNlbGYgY29uY2VkZWQgaW4gYW4gaW50ZXJ2aWV3IHRoYXQgdGhlIGNoYW5nZSB3YXMgc28gbmV3IGhlIGRpZCBub3QgeWV0IGhhdmUgYSBwbGFuLiBIZSBzYWlkIHRoZSBib2FyZCBvbmx5IGFwcHJvYWNoZWQgaGltIGxhc3Qgd2Vla2VuZC4gR292ZXJuYW5jZSBleHBlcnRzIHNhaWQgaXQgd2FzIHVubGlrZWx5IHRoZSBib2FyZCB3b3VsZCBmYWNlIGxlZ2FsIHJlcGVyY3Vzc2lvbnMgZm9yIHRoZSBjaGFuZ2UuICJUaGF0J3MgYSBjbGFzc2ljIGJvYXJkIGRlY2lzaW9uLCIgc2FpZCBDaGFybGVzIEVsc29uLCBhIHByb2Zlc3NvciBvZiBmaW5hbmNlIGF0IHRoZSBVbml2ZXJzaXR5IG9mIERlbGF3YXJlLiAiSXQncyBjYWxsZWQgYnVzaW5lc3MganVkZ21lbnQuIEl0J3MgdXAgdG8gdGhlbS4iIEouQy4gUGVubmV5IENoYWlybWFuIFRvbSBFbmdpYm91cyBzYWlkIGluIGEgc3RhdGVtZW50IHRoZSBjb21wYW55IGZlbHQgZm9ydHVuYXRlIHRvIGhhdmUgVWxsbWFuJ3MgaGVscC4gVGhyb3VnaCBhIGNvbXBhbnkgc3Bva2Vzd29tYW4sIHRoZSBib2FyZCBkZWNsaW5lZCBmdXJ0aGVyIGNvbW1lbnQuIEFCUlVQVCBBQk9VVC1GQUNFIEJvYXJkIG1lbWJlciBCaWxsIEFja21hbiwgdGhlIGhlZGdlIGZ1bmQgbWFuYWdlciB3aG9zZSBQZXJzaGluZyBTcXVhcmUgaXMgSi5DLiBQZW5uZXkncyBsYXJnZXN0IHNoYXJlaG9sZGVyLCBtaWdodCBhbHNvIHRha2UgaGVhdCBmb3IgaGlzIHJvbGUgaW4gdGhlIENFTyBkZWJhY2xlLiBBY2ttYW4gaGFuZHBpY2tlZCBKb2huc29uIHRvIHJlcGxhY2UgVWxsbWFuLCBhbmQgaW4gTWF5IDIwMTIgc2FpZCB0aGUgY29tcGFueSBoYWQgYmVlbiAiY2hyb25pY2FsbHkgbWlzbWFuYWdlZCIgZHVyaW5nIFVsbG1hbidzIHRlbnVyZS4gQWNrbWFuIGNvdWxkIG5vdCBiZSByZWFjaGVkIGZvciBjb21tZW50LCBidXQgc2FpZCBsYXN0IEZyaWRheSB0aGF0IGNyaXRpY2lzbSBvZiBKb2huc29uICJpcyBkZXNlcnZlZC4iIERhdmlkIFRhd2lsLCB3aG9zZSBoZWRnZSBmdW5kIE1hZ2xhbiBDYXBpdGFsIGhhZCBiZXQgdGhhdCBKLkMuIFBlbm5leSdzIHN0b2NrIHdvdWxkIGZhbGwgZnVydGhlciwgbGlrZW5lZCB0aGUgY2hhbmdlIGluIG1hbmFnZW1lbnQgdG8gYW4gYWJydXB0IGFib3V0LWZhY2UuICJUaGlzIGlzIGxpa2UgRWxvbiBNdXNrIGFubm91bmNpbmcgdGhhdCBUZXNsYSAodGhlIG1ha2VyIG9mIGVsZWN0cmljIGNhcnMpIGlzIGNoYW5naW5nIGdlYXJzIGFuZCB3aWxsIG5vdyBmb2N1cyBvbiBnYXMtcG93ZXJlZCB2ZWhpY2xlcywiIFRhd2lsIHNhaWQuIFdoZXRoZXIgdGhlIGJvYXJkIGdldHMgdG8gbWFrZSB0aGUgc2FtZSBtaXN0YWtlcyBhZ2FpbiB3aWxsIGJlIGVudGlyZWx5IHVwIHRvIHNoYXJlaG9sZGVycywgc2FpZCBQYXVsIEhvZGdzb24sIGFuIGluZGVwZW5kZW50IGNvcnBvcmF0ZSBnb3Zlcm5hbmNlIGFuYWx5c3QgaW4gQ2FtZGVuLCBNYWluZS4gIldoZW4geW91IGdldCBhIGJvYXJkIHRoYXQga2VlcHMgbWFraW5nIGVycm9ycyBsaWtlIHRoYXQsIHRoZW4geW91IHN0YXJ0IHRvIGxvc2UgZmFpdGggbm90IGp1c3QgaW4gdGhlIENFTywgYnV0IGluIHRoZSBib2FyZCBhcyB3ZWxsLCIgc2FpZCBIb2Rnc29uLiAiSSB0aGluayBhdCB0aGUgbmV4dCBhbm51YWwgbWVldGluZywgdGhlIHNoYXJlaG9sZGVycyB3aWxsIGJlIHJlZ2lzdGVyaW5nIHRoZWlyIGRpc3NhdGlzZmFjdGlvbiB3aXRoIHRoZSBib2FyZC4iIEFOQUxZU1RTIERJU0FQUE9JTlRFRCBPbmUgcXVlc3Rpb24gVWxsbWFuIGhhcyB0byBhZGRyZXNzIHF1aWNrbHkgaXMgdGhlIGNvbXBhbnkncyBjYXNoIHBvc2l0aW9uLiBQZW5uZXkgZW5kZWQgdGhlIGxhc3QgZmlzY2FsIHllYXIgd2l0aCBsZXNzIHRoYW4gJDEgYmlsbGlvbiBpbiBjYXNoLCBhbmQgdGhlcmUgaXMgYSBzZW5zZSB0aGF0IHRoZSByZXRhaWxlciBuZWVkcyB0byBkbyBzb21ldGhpbmcgdG8gYm9sc3RlciBjYXNoLiAiV2UgZXhwZWN0IGZpcnN0LXF1YXJ0ZXIgcGVyZm9ybWFuY2UgdG8gYmUgdmVyeSB3ZWFrLCBhbmQgdGhhdCBQZW5uZXkncyBmaW5hbmNpYWwgcmlzayBwcm9maWxlIHdpbGwgcmVtYWluICdoaWdobHkgbGV2ZXJhZ2VkLCciIFN0YW5kYXJkICYgUG9vcidzIFJhdGluZ3MgU2VydmljZXMgc2FpZCBvbiBUdWVzZGF5LiBXaGlsZSBTJlAgc2FpZCB0aGUgQ0VPIGNoYW5nZSB3b3VsZCBub3QgYWZmZWN0IHRoZSBjb21wYW55J3MgY3JlZGl0IHJhdGluZywgaXQgZGlkIG5vdGUgYW4gZXhwZWN0YXRpb24gdGhhdCBQZW5uZXkgd291bGQgc2VlayBtb3JlIGNhcGl0YWwuIFdoaWxlIG1hbnkgb24gV2FsbCBTdHJlZXQgd2VyZSBjbGFtb3JpbmcgZm9yIEpvaG5zb24ncyBvdXN0ZXIsIGFuYWx5c3RzIHdhcm5lZCBVbGxtYW4ncyByZXR1cm4gd2FzIG5vdCBhIGN1cmUtYWxsIGFzIGhlIHRyaWVzIHRvIHdpbiBiYWNrIHNob3BwZXJzLCBtb2xsaWZ5IHdvcnJpZWQgdmVuZG9ycyBhbmQgZGVjaWRlIHdoZXRoZXIgdG8gZm9yZ2UgYWhlYWQgd2l0aCBzb21lIGFzcGVjdHMgb2YgSm9obnNvbidzIHN0cmF0ZWd5LiAiVWxsbWFuIG1ha2VzIHNlbnNlIGluIHRoZSBpbnRlcmltIGdpdmVuIHRoZSB1cmdlbnQgY2FzaCBzaXR1YXRpb24uIFVsbG1hbiBpcyBhbHNvIGEga25vd24gcGFydG5lciB0byB0aGUgdmVuZG9ycywiIFVCUyBhbmFseXN0IE1pY2hhZWwgQmluZXR0aSB3cm90ZSBpbiBhIG5vdGUgb24gVHVlc2RheS4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT3tKjiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGI4ZjZhZThjY2NhMmYzNGY=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0NFTw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT3yUJSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBnBwo9cKPX</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBnP64UeuFI</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBm71wo9cKP</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBnO4UeuFHs</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBlco9cKPXD</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAF3AA==</field><field name="id" class="java.lang.String">rO0ABXQAEGRlZmE0NjZjMGNiYTlkMTM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGlQAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDMxNzE=</field><field name="title" class="java.lang.String">rO0ABXQALEZlZCBNYXkgVGFwZXIgd2l0aG91dCBDYXVzaW5nIE1hcmtldCBUYW50cnVt</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEf/VyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGE0MTMyYWI1NjU0OWI4YTI=</field><field name="symbol" class="java.lang.String">rO0ABXQABEFNVEQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUElI7iAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA78KPXCj1x</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA78KPXCj1x</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7TMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7nCj1wo9c</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6euFHrhR7</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAACZuSA==</field><field name="id" class="java.lang.String">rO0ABXQAEDZhY2M0NzA3OTUyNzIzMzE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJihAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwNTI=</field><field name="title" class="java.lang.String">rO0ABXQAMlRoZSBTZWNyZXQsIERpcnR5IENvc3Qgb2YgT2JhbWEncyBHcmVlbiBQb3dlciBQdXNo</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJK5SMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI3MTcyMzgzMzAxZTY3Yjg=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZBUk0=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJQC38AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyI9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABp3A==</field><field name="id" class="java.lang.String">rO0ABXQAEGIxNzhiNTk3MDYyZjcwYTE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGoqAAAA==</field></document></documents><date>2015-05-07T12:14:48-0500</date></cacheEntry>
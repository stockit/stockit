<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hMTkcgc3VwcGxpZXMgZnJvbSB0aGUgVW5pdGVkIFN0YXRlcyBjb3VsZCBoZWxwIHNvbWUgV2VzdGVybiBFdXJvcGVhbiBjb3VudHJpZXMgcmVhY3QgdG8gYW55IFJ1c3NpYW4gYWdncmVzc2lvbiBpbiBjb21pbmcgeWVhcnMgYnV0IHRoZSBhZGRlZCB0cmFuc3BvcnRhdGlvbiBjb3N0cyBjb3VsZCBtYWtlIHRoZSBmdWVsIHRvbyBleHBlbnNpdmUgZm9yIG90aGVycyBpbiBDZW50cmFsIEV1cm9wZSB3aG8gYXJlIGxpa2VseSB0byByZW1haW4gZGVwZW5kZW50IG9uIHRoZWlyIG5laWdoYm9ycyBlbmVyZ3kgZXhwZXJ0cyBzYWlkIEFzIFJ1c3NpYW4gUHJlc2lkZW50IFZsYWRpbWlyIFB1dGlucyBmb3JjZXMgdGlnaHRlbmVkIHRoZWlyIGdyaXAgb24gdGhlIENyaW1lYSBwZW5pbnN1bGEgaW4gdGhlIFVrcmFpbmUgb24gTW9uZGF5IHRoZSBtb3ZlcyBoZWlnaHRlbmVkIGNvbmNlcm5zIHRoYXQgdGhlIGNyaXNpcyBjb3VsZCB3b3JzZW4gYW5kIHRoYXQgUnVzc2lhIGNvdWxkIHNsYXNoIGl0cyBzaGlwbWVudHMgb2YgbmF0dXJhbCBnYXMgdG8gRXVyb3BlIGFib3V0IGhhbGYgb2Ygd2hpY2ggYXJlIHNlbnQgdGhyb3VnaCBVa3JhaW5lIHZpYSBwaXBlbGluZSBUaGUgVW5pdGVkIFN0YXRlcyBpcyB0aGUgd29ybGRzIHRvcCBuYXR1cmFsIGdhcyBwcm9kdWNlciBkdWUgaW4gcmVjZW50IHllYXJzIHRvIGh5ZHJhdWxpYyBmcmFjdHVyaW5nIGtub3duIGFzIGZyYWNraW5nIGFuZCBob3Jpem9udGFsIGRyaWxsaW5nIFN1cnBsdXMgVVMgZW5lcmd5IGNvdWxkIGdvIGEgbG9uZyB3YXkgdG8gcHJvdmlkaW5nIEV1cm9wZSBhbiBhbHRlcm5hdGl2ZSB0byBSdXNzaWFuIHN1cHBsaWVzIHN1cHBvcnRlcnMgc2F5IFJ1c3NpYW4gb2lsIGNvbXBhbmllcyBhbmQgdGhlIFJ1c3NpYW4gc3RhdGUgd291bGQgdmlldyBVUyBlbmVyZ3kgZXhwb3J0cyBhcyB0aGUgY2hpZWYgY29tcGV0aXRvciB0byBvbmUgb2YgdGhlaXIgdGFyZ2V0IGN1c3RvbWVycyAgdGhhdCBiZWluZyBFdXJvcGUgc2FpZCBKb2UgTWNNb25pZ2xlIHdobyB3YXMgY2hpZWYgb2Ygc3RhZmYgYXQgdGhlIERlcGFydG1lbnQgb2YgRW5lcmd5IHVuZGVyIGZvcm1lciBQcmVzaWRlbnQgR2VvcmdlIFcgQnVzaCBUaGUgdmlldyB0aGF0IFByZXNpZGVudCBCYXJhY2sgT2JhbWEgY291bGQgYnJhbmRpc2ggZW5lcmd5IGV4cG9ydHMgYXMgYSB0b29sIHRvIGRlZmxhdGUgUnVzc2lhbiBwb3dlciBvdmVyIEV1cm9wZSBpcyBvbmUgZXNwb3VzZWQgYnkgbWFueSBpbiBVUyBmb3JlaWduIHBvbGljeSBjaXJjbGVzIFRoZSBVUyBlbmVyZ3kgdHJhbnNmb3JtYXRpb24gb2YgcmVjZW50IHllYXJzIGdpdmVzIHVzIG9wdGlvbnMgd2UgZGlkbnQgaGF2ZSBzZXZlcmFsIHllYXJzIGFnbyBTbyB3ZSBvdWdodCB0byBleHBsb3JlIHVzaW5nIHRob3NlIG9wdGlvbnMgc2FpZCBSaWNoYXJkIEhhYXNzIHRoZSBwcmVzaWRlbnQgb2YgdGhlIENvdW5jaWwgb24gRm9yZWlnbiBSZWxhdGlvbnMgdGhpbmsgdGFuayBTaW5jZSAyMDExIHRoZSBVUyBEZXBhcnRtZW50IG9mIEVuZXJneSBoYXMgY29uZGl0aW9uYWxseSBhcHByb3ZlZCBzaXggcHJvcG9zYWxzIHRvIGV4cG9ydCBMTkcgdG8gY291bnRyaWVzIHdpdGggd2hpY2ggdGhlIFVuaXRlZCBTdGF0ZXMgZG9lcyBub3QgaGF2ZSBmcmVldHJhZGUgYWdyZWVtZW50cyBUaGUgYXBwcm92YWxzIHRvdGFsIHNvbWUgODUgYmlsbGlvbiBjdWJpYyBmZWV0IHBlciBkYXkgb2YgTE5HICBtb3JlIHRoYW4gdGhlIDYgYmNmIHBlciBkYXkgUnVzc2lhIGV4cG9ydHMgdGhyb3VnaCBwaXBlbGluZXMgdGhyb3VnaCB0aGUgVWtyYWluZSB0byBFdXJvcGUgTW9yZSB0aGFuIDIwIFVTIHByb2plY3RzIGF3YWl0IGFwcHJvdmFscyBCdXQgaXQgaXMgdW5jZXJ0YWluIGhvdyBtdWNoIG9mIHRoYXQgd291bGQgYmUgYXZhaWxhYmxlIHRvIEV1cm9wZSBhcyBjb3VudHJpZXMgaW4gQXNpYSBoYXZlIGVudGVyZWQgY29udHJhY3RzIHRvIGJ1eSBtdWNoIG9mIGl0IE1jTW9uaWdsZSBhbmQgb3RoZXIgc3VwcG9ydGVycyBvZiB1bmZldHRlcmVkIGV4cG9ydHMgaGF2ZSBjbGFzc2lmaWVkIHRoZSBET0VzIGFwcHJvdmFsIHJhdGUgYXMgYSBnb3Nsb3cgYXBwcm9hY2ggZXNwZWNpYWxseSBnaXZlbiB0aGUgbGVhZCB0aW1lIGJldHdlZW4gYXBwcm92YWwgYW5kIGFjdHVhbCBleHBvcnRzIFVTIExORyBleHBvcnRzIGFyZSBub3QgZXhwZWN0ZWQgdG8gYmVnaW4gaW4gZnVsbCB1bnRpbCBhdCBsZWFzdCAyMDE3IEluIHRoZSBtZWFudGltZSBzdXBwbGllcyBmcm9tIG90aGVyIGdsb2JhbCBleHBvcnRlcnMgaW5jbHVkaW5nIEF1c3RyYWxpYSBDYW5hZGEgYW5kIFFhdGFyIGNvdWxkIHJ1c2ggaW4gdG8gaGVscCBmaWxsIEV1cm9wZWFuIGRlbWFuZCBBbmQgbmV3IHN1cHBsaWVzIG9mIFVTIGxpZ2h0IHN3ZWV0IGNydWRlIG1heSBub3QgYmUgYW4gaWRlYWwgc3Vic3RpdHV0ZSBmb3IgUnVzc2lhcyBoZWF2eSBzb3VyIG9pbCBUbyBiZSBzdXJlIHRoZXJlIGlzIG5vIGV4cGVjdGF0aW9uIHRoYXQgdGhlIE9iYW1hIGFkbWluaXN0cmF0aW9uIHdpbGwgcXVpY2tseSB2b2lkIHRoZSA0MHllYXJvbGQgYmFuIG9uIG9pbCBleHBvcnRzIGJhc2VkIG9uIG9uZSBjcmlzaXMgU29tZSBVUyBsYXdtYWtlcnMgYXJlIGNvbmNlcm5lZCB0aGF0IGV4cG9ydGluZyBjcnVkZSBvaWwgd291bGQgdHJhbnNsYXRlIHRvIGhpZ2hlciBnYXNvbGluZSBwcmljZXMgYXQgaG9tZSBTdGlsbCBVUyBFbmVyZ3kgU2VjcmV0YXJ5IEVybmVzdCBNb25peiBjYXVzZWQgYSBzdGlyIGluIERlY2VtYmVyIGJ5IHNheWluZyB0aGUgYmFuIHdhcyBvdXRkYXRlZCBhdCBhIHRpbWUgdGhlIFVuaXRlZCBTdGF0ZXMgaGFzIGJlY29tZSBhbiBlbmVyZ3kgcHJvZHVjaW5nIHBvd2VyIExFR0lTTEFUSVZFIEVGRk9SVFMgVGhlIFVrcmFpbmlhbiBjb25mbGljdCBoYXMgYnJlYXRoZWQgbmV3IGxpZmUgaW50byBiaWxscyAgaW50cm9kdWNlZCBpbiB0aGUgU2VuYXRlIGFuZCBIb3VzZSBvZiBSZXByZXNlbnRhdGl2ZXMgaW4gZWFybHkgMjAxMyB0aGF0IHdvdWxkIGZvcmNlIHRoZSBET0UgdG8gc3BlZWQgdXAgaXRzIGFwcHJvdmFscyBmb3IgZXhwb3J0cyBvZiBsaXF1ZWZpZWQgbmF0dXJhbCBnYXMgdG8gSmFwYW4gYW5kIHRvIE5BVE8gYWxsaWVzIFRoZSBsZWdpc2xhdGlvbiBjYWxsZWQgdGhlIEV4cGVkaXRlZCBMTkcgZm9yIEFtZXJpY2FuIEFsbGllcyBBY3Qgd291bGQgYWxzbyBhbGxvdyB0aGUgU3RhdGUgRGVwYXJ0bWVudCB0byBpbnRlcnZlbmUgc3BlZWRpbmcgdXAgYXBwcm92YWxzIGlmIGl0IHdhcyBkZXRlcm1pbmVkIHRvIGJlIGluIHRoZSBuYXRpb25hbCBpbnRlcmVzdCBUaGUgU2VuYXRlIHZlcnNpb24gaXMgc3BvbnNvcmVkIGJ5IEpvaG4gQmFycmFzc28gYSBXeW9taW5nIFJlcHVibGljYW4gSXQgaGFzIDEzIFJlcHVibGljYW4gYW5kIHR3byBEZW1vY3JhdGljIGNvc3BvbnNvcnMgYnV0IHdvdWxkIG5lZWQgbW9yZSBzdXBwb3J0IGZyb20gRGVtb2NyYXRzIHdobyBsZWFkIHRoZSBTZW5hdGUgdG8gaGF2ZSBhIGNoYW5jZSBvZiBwYXNzYWdlIE1jTW9uaWdsZSBzYWlkIHRoYXQgaWYgdGhlIGNyaXNpcyBpbiB0aGUgVWtyYWluZSBkZWVwZW5zIGl0IGNvdWxkIGdpdmUgdGhlIGxlZ2lzbGF0aW9uIG1vcmUgc3VwcG9ydCBJbiB0aGUgUmVwdWJsaWNhbmxlZCBIb3VzZSBSZXByZXNlbnRhdGl2ZSBUaW0gUnlhbiBhbiBPaGlvIERlbW9jcmF0IHdobyBzdXBwb3J0cyB0aGUgbGVnaXNsYXRpb24gc2FpZCBvbiBNb25kYXkgdGhhdCB0aGUgZXZlbnRzIGluIHRoZSBVa3JhaW5lIHNob3cgdGhlIG5lZWQgdG8gYWN0IFRoaXMgY3Jpc2lzIGFsc28gcG9pbnRzIHRvIHRoZSBmYWN0IHRoYXQgdGhlIFVuaXRlZCBTdGF0ZXMgc2hvdWxkIGhlbHAgRWFzdGVybiBFdXJvcGUgZmluZCBhbHRlcm5hdGl2ZSBzb3VyY2VzIG9mIG5hdHVyYWwgZ2FzIFJ5YW4gc2FpZCBpbiBhIHJlbGVhc2UgVVMgUmVwcmVzZW50YXRpdmUgRnJlZCBVcHRvbiB0aGUgY2hhaXJtYW4gb2YgdGhlIEhvdXNlIEVuZXJneSBhbmQgQ29tbWVyY2UgQ29tbWl0dGVlIGhhcyByZWNlbnRseSBtZXQgd2l0aCBvZmZpY2lhbHMgZnJvbSBMaXRodWFuaWEgSHVuZ2FyeSBhbmQgUG9sYW5kIHdobyBhc2tlZCB3aGVuIFVTIExORyB3b3VsZCBiZSBhdmFpbGFibGUgTm93IGlzIHRoZSB0aW1lIHRvIHNlbmQgdGhlIHNpZ25hbCB0byBvdXIgZ2xvYmFsIGFsbGllcyB0aGF0IFVTIG5hdHVyYWwgZ2FzIHdpbGwgYmUgYW4gYXZhaWxhYmxlIGFuZCB2aWFibGUgYWx0ZXJuYXRpdmUgVXB0b24gc2FpZCBsYXRlIG9uIE1vbmRheSBhZGRpbmcgdGhhdCBoZSB3b3VsZCB3b3JrIHRvIGFkdmFuY2UgbGVnaXNsYXRpb24gVGhlIERPRXMgYXBwcm92YWwgcHJvY2VzcyBpcyB1bm5lY2Vzc2FyaWx5IHB1dHRpbmcgb3VyIGFsbGllcyBhdCB0aGUgbWVyY3kgb2YgVmxhZGltaXIgUHV0aW4gQUZGT1JEQUJJTElUWSBDb3VudHJpZXMgc3VjaCBhcyBHZXJtYW55IGFuZCBBdXN0cmlhIG1pZ2h0IGJlbmVmaXQgZnJvbSBkaXZlcnNpZnlpbmcgdG8gVVMgTE5HIHNoaXBtZW50cyBhcyBzdG9wZ2FwIG1lYXN1cmVzIGluIHRpbWVzIG9mIGNyaXNpcyBvciBzdXBwbHkgZGlzbG9jYXRpb24gQnV0IG90aGVycyBpbiBjZW50cmFsIGFuZCBzb3V0aGVybiBFdXJvcGUgc3VjaCBhcyBCdWxnYXJpYSBIdW5nYXJ5IGFuZCBHcmVlY2UgbWF5IHJlbWFpbiBtb3N0bHkgZGVwZW5kZW50IG9uIFJ1c3NpYSBhbiBleHBlcnQgc2FpZCBJdHMgbm90IGVub3VnaCB0byBqdXN0IGdldCB0aGUgZ2FzIHRoZXJlIGl0cyBnb3QgdG8gYmUgYXQgYSBwcmljZSB0aGF0IGdvdmVybm1lbnRzIGNhbiBhZmZvcmQgc2FpZCBCcmVuZGEgU2hhZmZlciBhbiBlbmVyZ3kgc2VjdXJpdHkgZXhwZXJ0IGFuZCB2aXNpdGluZyBwcm9mZXNzb3IgYXQgR2VvcmdldG93biBVbml2ZXJzaXR5IFNoZSBzYWlkIFVTIExORyBhZnRlciBsaXF1ZWZhY3Rpb24gIHJlZ2FzaWZpY2F0aW9uIGFuZCBzaGlwcGluZyBtYXkgYmUgdG9vIGV4cGVuc2l2ZSBmb3IgY291bnQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0wMy0yN1QwMDowMDowMFogVE8gMjAxMy0xMi0wM1Q1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDIxODI=</field><field name="title" class="java.lang.String">rO0ABXQANlVTIFNheXMgT2lsIE1hcmtldCBDYW4gQ29wZSB3aXRoIE1vcmUgSXJhbiBFeHBvcnQgQ3V0cw==</field><field name="content" class="java.lang.String">rO0ABXQPMlUuUy4gRW5lcmd5IFNlY3JldGFyeSBFcm5lc3QgTW9uaXogYWxzbyBzYWlkIGhlIGV4cGVjdGVkIGEgImZhaXIgYW1vdW50IG9mIGFjdGlvbiIgYnkgaGlzIGRlcGFydG1lbnQgaW4gMjAxMyBpbiBldmFsdWF0aW5nIGFwcGxpY2F0aW9ucyBieSBVLlMuIGZpcm1zIHRvIGV4cG9ydCBuYXR1cmFsIGdhcy4gQ29tcGFuaWVzIGhvcGluZyB0byBzaGlwIGdhcyBhYnJvYWQgaGF2ZSBiZWVuIGZydXN0cmF0ZWQgYnkgbGVuZ3RoeSBkZWxheXMgYW5kIHJ1bGUgY2hhbmdlcyBhcyB0aGV5IGF3YWl0IERlcGFydG1lbnQgb2YgRW5lcmd5IGFwcHJvdmFsIG9mIHRoZWlyIGFwcGxpY2F0aW9ucy4gIkknbSBwbGFubmluZyB0byBnbyB0aHJvdWdoIHRoZW0gYXMgcmFwaWRseSBhcyBJIGNhbiwiIE1vbml6IHNhaWQgaW4gYW4gaW50ZXJ2aWV3IGluIFZpZW5uYS4gQXMgZm9yIElyYW4sIFUuUy4gbGF3bWFrZXJzIGFyZSBlbWJhcmtpbmcgdGhpcyBzdW1tZXIgb24gYSBjYW1wYWlnbiB0byBkZWFsIGEgZGVlcGVyIGJsb3cgdG8gaXRzIGRpbWluaXNoaW5nIG9pbCBleHBvcnRzLCBhbmQgYW5hbHlzdHMgc2F5IHRoZSB1bHRpbWF0ZSBnb2FsIGNvdWxkIGJlIGEgbmVhciB0b3RhbCBjdXQtb2ZmLiBUaGlzIGNvdWxkIHJpc2sgYW50YWdvbml6aW5nIENoaW5hIGFuZCBJbmRpYSwgdGhlIGJpZ2dlc3QgcmVtYWluaW5nIGJ1eWVycyBvZiBJcmFuaWFuIGNydWRlLCBhbmQgY291bGQgcHVzaCBvaWwgcHJpY2VzIGhpZ2hlciBpbiBhIGhpdCB0byB0aGUgZ2xvYmFsIGVjb25vbXkuIE1vbml6IHNhaWQgSXJhbmlhbiBleHBvcnRzIHdlcmUgbm90IG5vdyBhICJkb21pbmFudCBwbGF5ZXIgaW4gdGhlIG1hcmtldCIsIGFuZCB3YXMgb2Zmc2V0IGJ5IGluY3JlYXNlZCBwcm9kdWN0aW9uIGluIHRoZSBVbml0ZWQgU3RhdGVzIGFuZCBpbiBJcmFxIGFzIHdlbGwgYXMgc3Vic3RhbnRpYWwgcmVzZXJ2ZSBjYXBhY2l0eSBpbiBzb21lIG9mIHRoZSBtYWpvciBPUEVDIHByb2R1Y2VycyBzdWNoIGFzIFNhdWRpIEFyYWJpYS4gIlNvIEkgd291bGQgdGhpbmsgdGhhdCB3aXRoIGZ1cnRoZXIgc2FuY3Rpb25zLCB0aGUgbWFya2V0cyBjb3VsZCBiZSBxdWl0ZSByZXNpbGllbnQgdG8gdGhhdCwiIHNhaWQgTW9uaXosIHdobyB0b29rIG9mZmljZSBsYXN0IG1vbnRoLiBGcm9tIGEgdGVjaG5pY2FsIHBvaW50IG9mIHZpZXcsICJ3ZSBjYW4gY2VydGFpbmx5IG1hbmFnZSBhIGZ1cnRoZXIgcmVkdWN0aW9uIG9mIElyYW5pYW4gZXhwb3J0cyIsIGhlIGFkZGVkLiBVLlMuIGFuZCBFdXJvcGVhbiBVbmlvbiBzYW5jdGlvbnMgYWltZWQgYXQgY2hva2luZyB0aGUgZmxvdyBvZiBvaWwgbW9uZXkgaW50byBJcmFuIGFuZCBmb3JjaW5nIFRlaHJhbiB0byBuZWdvdGlhdGUgY3VyYmluZyBpdHMgY29udHJvdmVyc2lhbCBudWNsZWFyIHByb2dyYW1tZSBzbGFzaGVkIGl0cyBjcnVkZSBleHBvcnRzICB0byA3MDAsMDAwIGJwZCBpbiBNYXksIHRoZSBsb3dlc3QgaW4gZGVjYWRlcywgYWNjb3JkaW5nIHRvIGluZHVzdHJ5IHNvdXJjZXMgYW5kIHRhbmtlci10cmFja2luZyBkYXRhLiBCdXQgY3J1ZGUgcHJpY2VzIGFyZSBzdGlsbCBsb3dlciB0aGFuIHRoZXkgd2VyZSBhIHllYXIgYWdvLiBJcmFuIHNheXMgaXRzIG51Y2xlYXIgcHJvZ3JhbW1lIGlzIGEgcGVhY2VmdWwgYmlkIHRvIGdlbmVyYXRlIGVsZWN0cmljaXR5LiBCdXQgV2FzaGluZ3RvbiBhbmQgaXRzIGFsbGllcyBzdXNwZWN0IFRlaHJhbiBpcyBzZWVraW5nIHRoZSBjYXBhYmlsaXR5IHRvIG1ha2UgbnVjbGVhciB3ZWFwb25zLiBCb3RoIHBhcnRpZXMgaW4gdGhlIFUuUy4gQ29uZ3Jlc3MgYXJlIHByZXNzaW5nIGZvciB0b3VnaGVyIHNhbmN0aW9ucywgYmV0dGluZyB0aGF0IGEgcmVzdXJnZW5jZSBpbiBVLlMuIG9pbCBvdXRwdXQgYW5kIHNpZ25zIG9mIGFtcGxlIGdsb2JhbCBzdXBwbHkgd2lsbCBwcmV2ZW50IHByaWNlcyBmcm9tIHJpc2luZy4gTW9uaXogc2FpZCB0aGVyZSB3YXMgInF1aXRlIGEgYml0IG9mIHBvdGVudGlhbCBmb3IgaW5jcmVhc2VkIHByb2R1Y3Rpb24gdG8gb2Zmc2V0IGFueSBmdXJ0aGVyIHJlZHVjdGlvbiIgb2YgSXJhbmlhbiBleHBvcnRzLiAnQUNUSU9OJyBPTiBHQVMgRVhQT1JUIEFQUExJQ0FUSU9OUyBMYXN0IHdlZWssIFUuUy4gUHJlc2lkZW50IEJhcmFjayBPYmFtYSBpbmNsdWRlZCBhIHJvYnVzdCBlbmRvcnNlbWVudCBvZiBuYXR1cmFsIGdhcyB1c2UgYXJvdW5kIHRoZSB3b3JsZCBhcyBoZSBzb3VnaHQgdG8gcmV2aXZlIGhpcyBzdGFsbGVkIGNsaW1hdGUgY2hhbmdlIGFnZW5kYS4gQnV0IGhvdyBtdWNoIHRoZSBVbml0ZWQgU3RhdGVzIHdpbGwgc3VwcGx5IHJlbWFpbmVkIHVuY2xlYXIgYXMgbW9yZSB0aGFuIGEgZG96ZW4gY29tcGFuaWVzIGF3YWl0IGFwcHJvdmFsIHRvIHNlbGwgZXhjZXNzIGdhcyB0byBjb3VudHJpZXMgc3VjaCBhcyBJbmRpYSBhbmQgSmFwYW4sIHdoZXJlIGl0IHdpbGwgZmV0Y2ggaGlnaGVyIHByaWNlcyB0aGFuIGluIHRoZSBkb21lc3RpYyBtYXJrZXQuIFRoZSBFbmVyZ3kgRGVwYXJ0bWVudCBoYXMgc28gZmFyIGFwcHJvdmVkIHR3byBwcm9qZWN0cyB0byBzaGlwIGxpcXVlZmllZCBuYXR1cmFsIGdhcyAoTE5HKS4gIkkndmUgY29tbWl0dGVkIHRvIHN0YXJ0IHRoYXQgcHJvY2VzcyBleHBlZGl0aW91c2x5LCBhbmQgSSBjZXJ0YWlubHkgZXhwZWN0IHRvIGhhdmUgc3Vic3RhbnRpYWwgbnVtYmVycyBvZiB0aGF0IChldmFsdWF0aW9uIG9mIGV4cG9ydCBsaWNlbnNlIGFwcGxpY2F0aW9ucykgdGhpcyB5ZWFyLCIgTW9uaXogc2FpZC4gVGhlIHN1cmdlIGluIHNoYWxlIGdhcyBwcm9kdWN0aW9uIGhhcyBoZWxwZWQgbWFrZSB0aGUgVW5pdGVkIFN0YXRlcyBhIGxlYWRpbmcgbmF0dXJhbCBnYXMgcHJvZHVjZXIgYW5kIHBvdGVudGlhbGx5IGEgbWFqb3IgZXhwb3J0ZXIuIEJ1dCBzb21lIG1hbnVmYWN0dXJlcnMgYW5kIGxhd21ha2VycyBoYXZlIHdhcm5lZCB0aGF0IGEgcmFwaWQgcHVzaCB0byBleHBvcnQgTE5HIGNvdWxkIGxlYWQgdG8gYSByaXNlIGluIFUuUy4gZ2FzIHByaWNlcyBhbmQgaGFybSBjb25zdW1lcnMgYW5kIGVuZXJneS1pbnRlbnNpdmUgaW5kdXN0cmllcy4gTW9uaXogc2FpZCBhcHBsaWNhdGlvbnMgd291bGQgYmUgaGFuZGxlZCBvbiBhIGNhc2UtYnktY2FzZSBiYXNpcyBhbmQgc3VnZ2VzdGVkIGhlIHdvdWxkIG5vdCBjaGFuZ2UgdGhlIG9yZGVyIGluIHdoaWNoIGhpcyBkZXBhcnRtZW50IHJ1bGVzIG9uIGFwcGxpY2F0aW9ucyAtIGEgcG9saWN5IG1hZGUgaW4gbWlkc3RyZWFtIHRoYXQgcHV0IHNvbWUgcGxheWVycyBhdCBhIGRpc2FkdmFudGFnZS4gIk15IGludGVudCBpcyB0byBtb3ZlIGZvcndhcmQgd2l0aCB0aGUgcXVldWUgYXMgaXQgaXMgc3BlbGxlZCBvdXQsIiBoZSBzYWlkLCBtYWtpbmcgY2xlYXIgaGUgZGlkIG5vdCBhZ3JlZSB3aXRoIGEgbWFqb3IgTE5HIHRyYWRlIGdyb3VwLCB3aGljaCBzYWlkIGl0IHdhcyB1bmxhd2Z1bC4gICJPdXIgbGF3eWVycyBmZWVsIGl0IGlzIGNlcnRhaW5seSBjb21wbGV0ZWx5IHJhdGlvbmFsLiIgSWYgdGhlIERlcGFydG1lbnQgb2YgRW5lcmd5IHdhaXRzIGFib3V0IHR3byBtb250aHMgYmV0d2VlbiBlYWNoIGV4cG9ydCBkZWNpc2lvbiwgYXMgQWN0aW5nIEFzc2lzdGFudCBTZWNyZXRhcnkgZm9yIEZvc3NpbCBFbmVyZ3kgQ2hyaXN0b3BoZXIgU21pdGggaGFzIHNpZ25hbGxlZCwgcHJvamVjdHMgbmVhciB0aGUgZW5kIG9mIHF1ZXVlIG1pZ2h0IG5vdCBnZXQgYSBET0UgcGVybWl0IGJlZm9yZSBsYXRlIDIwMTUuIEFza2VkIGlmIHRoaXMgd2FzIGEgcmVhbGlzdGljIHRpbWV0YWJsZSwgTW9uaXogc2FpZDogIkkgd291bGQgc2F5IGl0J3Mgbm90IHVucmVhbGlzdGljLiBCdXQgbWF5YmUgd2UgY2FuIGRvIGl0IGZhc3Rlci4i</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT+Tc7CAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGJkYzQyOGQ0NjM0NWEyMzQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNISVA=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT+YmgyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/31wo9cKPX</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/31wo9cKPX</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/1mZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/3MzMzMzMz</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/3MzMzMzMz</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAJYA==</field><field name="id" class="java.lang.String">rO0ABXQAEGU2NDFhNTE3YWQ5M2VhMDQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJy9AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwNTI=</field><field name="title" class="java.lang.String">rO0ABXQAMlRoZSBTZWNyZXQsIERpcnR5IENvc3Qgb2YgT2JhbWEncyBHcmVlbiBQb3dlciBQdXNo</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJK5SMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI3MTcyMzgzMzAxZTY3Yjg=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZBUk0=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJQC38AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyI9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABp3A==</field><field name="id" class="java.lang.String">rO0ABXQAEGIxNzhiNTk3MDYyZjcwYTE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGoqAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDcxMjQ=</field><field name="title" class="java.lang.String">rO0ABXQAPUVuZXJneSBCb29tIFN0cmVuZ3RoZW5zIFVTIENsb3V0IGluIFdvcmxkLCBPYmFtYSBBZHZpc29yIFNheXM=</field><field name="content" class="java.lang.String">rO0ABXQQ8lRoZSBib29tIGluIGRvbWVzdGljIG9pbCBhbmQgZ2FzIHByb2R1Y3Rpb24gaGFzIHN0cmVuZ3RoZW5lZCB0aGUgaGFuZCBvZiB0aGUgVW5pdGVkIFN0YXRlcyBpbiBnbG9iYWwgYWZmYWlycyBhbmQgaXMgaGF2aW5nIGEgcHJvZm91bmQgaW1wYWN0IG9uIFUuUy4gc2VjdXJpdHkgYW5kIGZvcmVpZ24gcG9saWN5LCBQcmVzaWRlbnQgQmFyYWNrIE9iYW1hJ3MgbmF0aW9uYWwgc2VjdXJpdHkgYWR2aXNlciBzYWlkLiBJbiBoaXMgZmlyc3QgbWFqb3Igc3BlZWNoIG9uIGVuZXJneSBwb2xpY3ksIFRvbSBEb25pbG9uIHNhaWQgdGhlIHVuZXhwZWN0ZWQgZ3Jvd3RoIGluIG9pbCBhbmQgZ2FzIHByb2R1Y3Rpb24gaGFzIGNyZWF0ZWQgam9icyBhbmQgbWFkZSB0aGUgVS5TLiBlY29ub215IHN0cm9uZ2VyLCBnaXZpbmcgdGhlIFUuUy4gbmV3IGxldmVyYWdlIGluIGl0cyBkZWFsaW5ncyB3aXRoIG90aGVyIGNvdW50cmllcy4gIk91ciBzdHJlbmd0aCBhdCBob21lIGlzIGNyaXRpY2FsIHRvIG91ciBzdHJlbmd0aCBpbiB0aGUgd29ybGQsIGFuZCBvdXIgZW5lcmd5IGJvb20gaGFzIHByb3ZlbiB0byBiZSBhbiBpbXBvcnRhbnQgZHJpdmVyIGZvciBvdXIgZWNvbm9taWMgcmVjb3ZlcnksIiBEb25pbG9uIHNhaWQgaW4gYSBzcGVlY2ggYXQgQ29sdW1iaWEgVW5pdmVyc2l0eSdzIG5ldyBDZW50ZXIgb24gR2xvYmFsIEVuZXJneSBQb2xpY3kuIElubm92YXRpdmUgdXNlIG9mIGh5ZHJhdWxpYyBmcmFjdHVyaW5nLCBvciAiZnJhY2tpbmcsIiBoYXMgZnJlZWQgbmV3IHN1cHBsaWVzIG9mIG9pbCBhbmQgZ2FzIHRyYXBwZWQgaW4gc2hhbGUgcm9jaywgcHV0dGluZyB0aGUgVW5pdGVkIFN0YXRlcyBpbiBsaW5lIHRvIGJlY29tZSB0aGUgd29ybGQncyBsYXJnZXN0IG9pbCBwcm9kdWNlciBieSAyMDE3LCBzdXJwYXNzaW5nIFNhdWRpIEFyYWJpYS4gQWZ0ZXIgNDAgeWVhcnMgb2YgYmVsaWV2aW5nIFUuUy4gZW5lcmd5IHN1cHBsaWVzIHdlcmUgaW5ldml0YWJseSBzaHJpbmtpbmcsIGxlYXZpbmcgdGhlIFVuaXRlZCBTdGF0ZXMgbW9yZSByZWxpYW50IG9uIGZvcmVpZ24gb2lsLCB0aGVyZSBoYXMgYmVlbiBhIGRyYW1hdGljIHNoaWZ0IGluIHRoZSAibWluZHNldCIgYWJvdXQgdGhlIGlzc3VlLCBEb25pbG9uIHNhaWQuICJXZSBhcmUganVzdCBiZWdpbm5pbmcgdG8gdW5kZXJzdGFuZCBhbmQgYXBwcmVjaWF0ZSB0aGUgZ2Vvc3RyYXRlZ2ljIGltcGFjdHMgb2YgdGhlc2UgY2hhbmdlcywiIHNhaWQgRG9uaWxvbiwgbm90aW5nIGhlIGRlYWxzIHdpdGggZW5lcmd5IHBvbGljeSBpc3N1ZXMgb24gYSBuZWFyLWRhaWx5IGJhc2lzLiBUaGUgZ3Jvd3RoIGluIFUuUy4gcHJvZHVjdGlvbiBoZWxwZWQgdGhlIFVuaXRlZCBTdGF0ZXMgbGVhZCBlZmZvcnRzIHRvIGFwcGx5IGVjb25vbWljIHNhbmN0aW9ucyBvbiBJcmFuIG92ZXIgaXRzIG51Y2xlYXIgcHJvZ3JhbS4gVGhlIHNhbmN0aW9ucyBzbGFzaGVkIElyYW4ncyBvaWwgZXhwb3J0cyBhbmQgaHVydCBpdHMgZWNvbm9teSB3aXRob3V0IGxlYWRpbmcgdG8gYW4gb2lsIHByaWNlIHNwaWtlIHRoYXQgY291bGQgaGF2ZSBodXJ0IHRoZSB3b3JsZCBlY29ub215LCBEb25pbG9uIHNhaWQuIERvbmlsb24gbWFkZSBpdCBjbGVhciB0aGF0IGV2ZW4gdGhvdWdoIHRoZSBVbml0ZWQgU3RhdGVzIG1pZ2h0IHJlbHkgbGVzcyBvbiBvaWwgZnJvbSB0aGUgTWlkZGxlIEVhc3QsIGl0IHdpbGwgbm90ICJkaXNlbmdhZ2UiIGZyb20gd29ya2luZyB3aXRoIGNvdW50cmllcyB0aGVyZSB0byBhZHZhbmNlIHBlYWNlIGFuZCBzdGFiaWxpdHkuICJXZSBoYXZlIGEgc2V0IG9mIGVuZHVyaW5nIG5hdGlvbmFsIHNlY3VyaXR5IGludGVyZXN0cyBpbiB0aGUgTWlkZGxlIEVhc3QsIiBoZSBzYWlkLiBUaGUgVW5pdGVkIFN0YXRlcyBhbHNvIGhvcGVzIHRvIHBsYXkgYSBkaXBsb21hdGljIHJvbGUgaW4gaGVscGluZyBlYXNlIHRlbnNpb25zIGluIHRoZSBTb3V0aCBhbmQgRWFzdCBDaGluYSBTZWFzIGJldHdlZW4gQ2hpbmEgYW5kIHNtYWxsZXIgQXNpYW4gbmF0aW9ucyB0aGF0IGFyZSBzdG9rZWQgYnkgcG90ZW50aWFsIG9mZnNob3JlIG9pbCByZXNvdXJjZXMsIERvbmlsb24gc2FpZCwgbm90aW5nIHRoZSBhZG1pbmlzdHJhdGlvbiAiZmlybWx5IG9wcG9zZXMgY29lcmNpb24gb3IgdGhlIHVzZSBvZiBmb3JjZSB0byBhZHZhbmNlIHRlcnJpdG9yaWFsIGNsYWltcy4iIFBFTkRJTkcgUE9MSUNZIERFQ0lTSU9OUyBEb25pbG9uIGRpZCBub3QgdGlwIHRoZSBhZG1pbmlzdHJhdGlvbidzIGhhbmQgb24gaG93IGl0IHZpZXdzIG1ham9yIHBlbmRpbmcgZW5lcmd5LXBvbGljeSBkZWNpc2lvbnMuIEFzaWFuIGFuZCBFdXJvcGVhbiBhbGxpZXMgaGF2ZSBzYWlkIHRoZXkgd291bGQgbGlrZSB0byBzZWUgbW9yZSBleHBvcnRzIG9mIFUuUy4gbmF0dXJhbCBnYXMsIHdoaWNoIGNvdWxkIG1vZGVyYXRlIHRoZWlyIGltcG9ydCBjb3N0cy4gV2hpbGUgRG9uaWxvbiBhY2tub3dsZWRnZWQgdGhhdCBVLlMuIG5hdHVyYWwgZ2FzIHByb2R1Y3Rpb24gY291bGQgaGVscCB3ZWFrZW4gbGV2ZXJhZ2Ugb2YgY291bnRyaWVzIHN1Y2ggYXMgUnVzc2lhIHRoYXQgdHJhZGl0aW9uYWxseSBkb21pbmF0ZSB0aGUgd29ybGQgZ2FzIG1hcmtldCwgaGUgZGlkIG5vdCBzYXkgd2hldGhlciB0aGUgYWRtaW5pc3RyYXRpb24gd291bGQgYWxsb3cgbW9yZSBleHBvcnRzIG9mIHRoZSBmdWVsIHRvIGEgYnJvYWRlciByYW5nZSBvZiBjb3VudHJpZXMuIFRoZSBFbmVyZ3kgRGVwYXJ0bWVudCBpcyByZXZpZXdpbmcgYXBwbGljYXRpb25zIGZyb20gIGNvbXBhbmllcyB0aGF0IHdhbnQgdG8gc2hpcCBuYXR1cmFsIGdhcyBvdmVyc2VhcyBidXQgaGFzIGJlZW4gbG9iYmllZCBoZWF2aWx5IGJ5IGRvbWVzdGljIG1hbnVmYWN0dXJlcnMgd2hvIGZlYXIgZ2FzIGV4cG9ydHMgd291bGQgaW5jcmVhc2UgdGhlaXIgY29zdHMgb2YgdGhlIGZ1ZWwgYW5kIHVsdGltYXRlbHkgcmFpc2UgdGhlIHByaWNlcyBvZiB0aGVpciBwcm9kdWN0cy4gRG9uaWxvbiBhbHNvIGRpZCBub3QgbWVudGlvbiB0aGUgS2V5c3RvbmUgWEwgcGlwZWxpbmUsIGEgcHJvamVjdCBkZXNpZ25lZCB0byBzaGlwIGNydWRlIGZyb20gQ2FuYWRhIGFuZCBOb3J0aCBEYWtvdGEgc291dGggdG8gcmVmaW5lcnMuIFRoZSBwcm9qZWN0LCB3aGljaCBuZWVkcyBhIHByZXNpZGVudGlhbCBwZXJtaXQgdG8gY3Jvc3MgdGhlIFUuUy4tQ2FuYWRhIGJvcmRlciwgaGFzIGJlZW4gc3RhbGxlZCBmb3IgeWVhcnMuIEVudmlyb25tZW50YWwgZ3JvdXBzIHdhbnQgdG8gc3RvcCBpdCBhbHRvZ2V0aGVyIGJlY2F1c2UgdGhleSBhcmd1ZSBDYW5hZGlhbiAgcHJvZHVjdGlvbiBhbmQgc2hpcG1lbnQgb2YgdGhpcyBraW5kIG9mIG9pbCB3aWxsIGhhc3RlbiBjbGltYXRlIGNoYW5nZS4gVGhlIGRlYmF0ZXMgb24gZXhwb3J0cyBhbmQgdGhlIHBpcGVsaW5lIGFyZSBleGFtcGxlcyBvZiBob3cgdGhlIFVuaXRlZCBTdGF0ZXMgaXMgZ3JhcHBsaW5nIHdpdGggaW5mcmFzdHJ1Y3R1cmUgYW5kIHJlZ3VsYXRpb25zIGRlc2lnbmVkIGZvciBhIHRpbWUgb2Ygb2lsIHNjYXJjaXR5IGFuZCByZWxpYW5jZSBvbiBpbXBvcnRzLCBzYWlkIEphc29uIEJvcmRvZmYsIGRpcmVjdG9yIG9mIENvbHVtYmlhJ3MgbmV3IGVuZXJneSBwb2xpY3kgY2VudGVyLiBUaGUgY2VudGVyLCB3aGljaCBvZmZpY2lhbGx5IG9wZW5lZCBvbiBXZWRuZXNkYXksIGlzIGFpbWVkIGF0IGZpbGxpbmcgYSBnYXAgaW4gaW5kZXBlbmRlbnQgYW5hbHlzaXMgb24gaXNzdWVzIGFzc29jaWF0ZWQgd2l0aCBlbmVyZ3kgYWJ1bmRhbmNlIGFuZCBjbGltYXRlIGNoYW5nZSwgc2FpZCBpdHMgZGlyZWN0b3IgSmFzb24gQm9yZG9mZiwgd2hvIHVudGlsIEphbnVhcnkgd2FzIGEgdG9wIGVuZXJneSBhZHZpc29yIGF0IHRoZSBXaGl0ZSBIb3VzZS4gIldoZW4gSSB3YXMgaW4gdGhhdCBqb2IsIHlvdSdkIGhhdmUgYSBwb2xpY3kgaXNzdWUga2luZCBvZiBoaXQgeW91ciBkZXNrLCBvZnRlbiBpdCB3b3VsZCBoaXQgeW91ciBkZXNrIGluIGEgbW9tZW50IG9mIGNyaXNpcyBvciBjaGFvcywgYW5kIHlvdSdkIGhhdmUgJ3RpbCB0aGUgZW5kIG9mIHRoZSBkYXkgdG8gZmlndXJlIG91dCBob3cgdG8gZXhwbGFpbiBpdCB0byB5b3VyIGJvc3NlcywiIEJvcmRvZmYgc2FpZCBpbiBhbiBpbnRlcnZpZXcuICJUaGUgd29ybGQgb2YgZW5lcmd5IGlzIGNoYW5naW5nIHNvIHF1aWNrbHksIGFuZCBpdCdzIHN1ZGRlbmx5IGNhbGxpbmcgaW50byBxdWVzdGlvbiBhIGhvc3Qgb2YgcG9saWN5IGlzc3VlcyB0aGF0IHBlb3BsZSBqdXN0IGhhZG4ndCBoYWQgdG8gdGhpbmsgYWJvdXQgYmVmb3JlLCIgQm9yZG9mZiBzYWlkLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT46aZyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDlhZmE1OGM5MmIzZGJmMmQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNISVA=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4/j/iAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/2ZmZmZmZm</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/3hR64UeuF</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/2ZmZmZmZm</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/3hR64UeuF</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/3hR64UeuF</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAImA==</field><field name="id" class="java.lang.String">rO0ABXQAEDlmMjk3NTM0NDJmZTk5YTQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMpDAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE3MDAw</field><field name="title" class="java.lang.String">rO0ABXQAP0ZyZW5jaCBBdXRvIENvbXBhbmllcywgT2lsIFNoaXBwZXJzIE1heSBQcm9maXQgRnJvbSBJcmFuIEFjY29yZA==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKN188AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDBkZjQ3NmJkMTY5ZTJhZWI=</field><field name="symbol" class="java.lang.String">rO0ABXQAAlJF</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKS/isAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBjsKPXCj1x</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBjw9cKPXCk</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBjmPXCj1wp</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBjm4UeuFHs</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBjB64UeuFI</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAbwkA==</field><field name="id" class="java.lang.String">rO0ABXQAEDczNjdhODQ5Nzc0MGZhYmM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJJdAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM1Njg=</field><field name="title" class="java.lang.String">rO0ABXQAPEJyaXRhaW4gUGF5aW5nIEFtb25nIFdvcmxkJ3MgSGlnaGVzdCBQcmljZXMgZm9yIEltcG9ydGVkIEdhcw==</field><field name="content" class="java.lang.String">rO0ABXQMalRoZSBEZXBhcnRtZW50IG9mIEVuZXJneSBhbmQgQ2xpbWF0ZSBDaGFuZ2UgaGFzIGJlZW4gcXVpY2sgdG8gcG9pbnQgb3V0IHRoZSBtYXJrZXQgaXMgb3BlcmF0aW5nIGFzIG5vcm1hbCwgd2hpY2ggaXMgZ29vZCBuZXdzIGZvciB0aG9zZSBzZWxsaW5nIGdhcywgYnV0IGNvbGQgY29tZm9ydCBmb3Igd2hvbGVzYWxlIGJ1eWVycyB3aG8gb24gTWFyY2ggMjIgZmFjZWQgcHJpY2VzIHVwIDUwIHBlcmNlbnQgZnJvbSBhIGRheSBlYXJsaWVyLiAiVGhlIFVLIGdhcyBtYXJrZXQgaXMgZnVuY3Rpb25pbmcgd2VsbCBhbmQgb3VyIGdhcyBuZWVkcyBhcmUgY29udGludWluZyB0byBiZSBtZXQsIiB3YXMgREVDQydzIHJlcGx5LiBZZXQgc3BvdCBwcmljZXMgYXJlIG1vcmUgdGhhbiA3MCBwZXJjZW50IGhpZ2hlciB0aGFuIG5vcm1hbCwgYXQgYXJvdW5kICQxNS42NiBwZXIgbWlsbGlvbiBCcml0aXNoIHRoZXJtYWwgdW5pdHMgKG1tQnR1KSB2ZXJzdXMgYSBsb25nLXRlcm0gYXZlcmFnZSBvZiBhcm91bmQgJDkgYXQgdGhlIE5hdGlvbmFsIEJhbGFuY2luZyBQb2ludCBnYXMgaHViLiBUaGF0IG1lYW5zIEJyaXRhaW4gaXMgcGF5aW5nIGFsbW9zdCBhcyBtdWNoIGFzIEphcGFuIHBheXMgZm9yIGltcG9ydHMgb2YgbGlxdWVmaWVkIG5hdHVyYWwgZ2FzIChMTkcpIHRvIHBvd2VyIGl0cyBoaWdobHkgaW5kdXN0cmlhbGlzZWQgZWNvbm9teS4gSXQgYWxzbyB1bmRlcnNjb3JlcyB0aGUgY29tcGV0aXRpdmUgZGlzYWR2YW50YWdlIGZhY2VkIGJ5IEJyaXRpc2ggZmlybXMgYXMgTm9ydGggQW1lcmljYW4gc3BvdCBnYXMgcHJpY2VzLCBoZWxwZWQgYnkgcGxlbnRpZnVsIHNoYWxlIGdhcywgbm93IHRyYWRlIGF0IGEgbWVyZSAkNCBwZXIgbW1CdHUuIEJyaXRpc2ggc3BvdCBwcmljZXMgYXJlIGNsb3NlIHRvIHRoZSB1c3VhbGx5IGhpZ2hlciBvaWwtbGlua2VkIGxvbmctdGVybSBkZWFscyB3aGljaCBjb250aW5lbnRhbCBidXllcnMgaGF2ZSB3aXRoIFJ1c3NpYSdzIEdhenByb20uIFBFUk1BTkVOVExZIFRFTVBPUkFSWT8gQnJpdGFpbiBpcyBzdWZmZXJpbmcgd2ludGVyIHByaWNlIHNwaWtlcyB3aGlsZSBBc2lhJ3Mgc3VzdGFpbmVkIGhpZ2ggcHJpY2VzIHJlZmxlY3QgdGhlIGRlbWFuZCBmcm9tIHRoZWlyIGdyb3dpbmcgZWNvbm9taWVzIGFuZCBKYXBhbidzIG5lZWQgdG8gb2Zmc2V0IG51Y2xlYXIgb3V0cHV0IGhhbHRlZCBzaW5jZSAyMDExJ3MgRnVrdXNoaW1hIGRpc2FzdGVyLiBZZXQgQnJpdGFpbidzICJ0ZW1wb3JhcnkiIHNwaWtlcyBoYXZlIG5vdyBoYXBwZW5lZCBmb3IgdHdvIHdpbnRlcnMgaW4gYSByb3cgYW5kIGFyZSB3b3JzZSB0aGFuIHRob3NlIG9uIHRoZSBjb250aW5lbnQgd2hlcmUgbW9yZSBnYXMgc3RvcmFnZSBhbmQgYWNjZXNzIHRvIFJ1c3NpYW4gaW1wb3J0cyBoYXZlIGhlbHBlZC4gTWFyY2ggZ2FzIHByaWNlcyBoYXZlIHN3dW5nIGJldHdlZW4gNjkgYW5kIDE1MCBwZW5jZSBwZXIgdGhlcm0gdmVyc3VzIGEgcmFuZ2Ugb2YgNTUgdG8gNjIgYSB5ZWFyIGVhcmxpZXIuIFdoZW5ldmVyIGNvbnRpbmVudGFsIHByaWNlcyByaXNlIGNsb3NlIHRvIDEwMCBwZW5jZSBwZXIgdGhlcm0sIG9yIGFyb3VuZCA0MCBldXJvcyBwZXIgbWVnYXdhdHQgaG91ciwgInBlb3BsZSBqdXN0IHR1cm4gYXdheSBmcm9tIHRoZSBzcG90IG1hcmtldCBhbmQgYXNrIGZvciBtb3JlIFJ1c3NpYW4gc3VwcGxpZXMsIHNvIGdhcyBwcmljZXMgdGhlcmUgYXJlIGVzc2VudGlhbGx5IGNhcHBlZCwiIG9uZSBnYXMgdHJhZGVyIHNhaWQuIERFQ0MgYm9zcyBFZCBEYXZleSBzYWlkIG9uIFR1ZXNkYXkgdGhlIGdvdmVybm1lbnQgd291bGQgY2F1dGlvbiBlbmVyZ3kgY29tcGFuaWVzIG9uIGJvb3N0aW5nIGVuZXJneSBiaWxscywgYWx0aG91Z2ggaGlzIGRlcGFydG1lbnQgYWNrbm93bGVkZ2VkIHNpZ25zIHBvaW50IHRvIGFuIDE4IHBlcmNlbnQgcmlzZSBmb3IgaG91c2Vob2xkcyBieSAyMDIwLiAiV2Ugd2lsbCBtYWtlIGl0IGNsZWFyIHRvIGVuZXJneSBzdXBwbGllcnMgdGhhdCB0aGlzIGlzIGp1c3QgYSBjb2xkLCB0ZW1wb3Jhcnkgc25hcCBhbmQgaXMgbm8gZXhjdXNlIGZvciBwdXR0aW5nIHVwIGVuZXJneSBiaWxscywiIERhdmV5IHNhaWQuIFRoZSBoaWdoIGdhcyBwcmljZXMgY29tZSBhcyB0aGUgZ292ZXJubWVudCBuZWdvdGlhdGVzIGEgZ3VhcmFudGVlZCBtaW5pbXVtIHByaWNlIGZvciBwb3dlciBnZW5lcmF0ZWQgYnkgdHdvIG5ldyBudWNsZWFyIHJlYWN0b3JzIHdoaWNoIEZyYW5jZSdzIEVERiBhaW1zIHRvIGJ1aWxkIGluIEJyaXRhaW4uIEJ1b3llZCBieSBoaWdoZXIgZ2FzIHByaWNlcywgcG93ZXIgcHJpY2VzIHRoaXMgbW9udGggaGF2ZSB0cmFkZWQgYmV0d2VlbiA0NSBhbmQgODEgcG91bmRzIHBlciBtZWdhd2F0dCBob3VyIHZlcnN1cyA0My00OCBwb3VuZHMgbGFzdCBNYXJjaC4gIlRoZSBVSyBnYXMgbWFya2V0IGhhcyB5ZXQgYWdhaW4gYmVlbiBleHBvc2VkIHRvIGl0cyBkZWVwLXJvb3RlZCBzdXBwbHkgcHJvYmxlbSwiIEJhbmsgb2YgQW1lcmljYSBNZXJyaWxsIEx5bmNoIGFuYWx5c3RzIHNhaWQgaW4gYSByZXNlYXJjaCBub3RlLiAiSGVhdnkgc3RvY2sgZHJhd3MgaGF2ZSBsZWZ0IHRoZSBVSyBnYXMgbWFya2V0IHN0cmV0Y2hlZCwgKGFuZCkgdGhlIFVLIGlzIGJlY29taW5nIGV2ZXIgbW9yZSByZWxpYW50IG9uIExORyBmbG93cyBidXQgZ2xvYmFsIHN1cHBsaWVzIHJlbWFpbiB0aWdodCBhbmQgaW1wb3J0cyBhcmUgc2NhcmNlLiIgVGhhdCB0aWdodG5lc3MgaXMgZHVlIHRvIEFzaWEncyBoZWZ0eSBMTkcgZGVtYW5kIGFzIHdlbGwgYXMgQnJpdGFpbidzIGxpbWl0ZWQgZ2FzIHN0b3JhZ2UgY2FwYWNpdHksIHdoaWNoIGlzIGEgZnJhY3Rpb24gb2YgdGhhdCBmb3VuZCBpbiBGcmFuY2UsIEdlcm1hbnkgb3IgdGhlIFUuUy4gSXRzIGdhcyBzdG9yYWdlIHJlc2VydmVzIGFyZSA5MCBwZXJjZW50IGVtcHR5IGFuZCBsZXZlbHMgYXJlIHN0aWxsIGZhbGxpbmcsIGRhdGEgc2hvd3MuIFRoZSBJbnRlcm5hdGlvbmFsIEVuZXJneSBBZ2VuY3kgKElFQSkgaGFzIHdhcm5lZCBzaW5jZSAyMDEwIHRoYXQgQnJpdGFpbidzIGNvbWJpbmF0aW9uIG9mIGZhbGxpbmcgZG9tZXN0aWMgcHJvZHVjdGlvbiBhbmQgbGltaXRlZCBzdG9yYWdlIGNvdWxkIGJlIHN0cmV0Y2hlZCBhdCB0aW1lcyBvZiBwZWFrIGRlbWFuZC4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT2vXeiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGJhMTQ4MGU2OThmMGE5ZGI=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0VELVVOLlY=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT20hESAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/IUeuFHrhS</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/IUeuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/IUeuFHrhS</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/IUeuFHrhS</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEALmZmZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGQ0Y2I1OGE4M2Y3YjlmNjU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJD7AAAA==</field></document></documents><date>2015-05-07T12:09:15-0500</date></cacheEntry>
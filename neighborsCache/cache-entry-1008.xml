<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hBbGliYWJhIEdyb3VwIEhvbGRpbmcgTHRkcyBwcm9wb3NhbCBmb3Igd2hhdCBjb3VsZCBiZSB0aGUgbGFyZ2VzdCBpbml0aWFsIHN0b2NrIG9mZmVyaW5nIGluIFVTIGhpc3RvcnkgaXMgc2FpbGluZyB0aHJvdWdoIFdhc2hpbmd0b24gd2l0aCBmZXcgYnVtcHMgV2hpbGUgYSBmZWRlcmFsIGNvbW1pc3Npb24gaGFzIHdhcm5lZCB0aGF0IHRoZSBvZmZlcmluZyBieSB0aGUgd29ybGRzIGJpZ2dlc3QgSW50ZXJuZXQgcmV0YWlsZXIgcG9zZXMgbWFqb3Igcmlza3MgZm9yIGludmVzdG9ycyB0aGUgcmVhY3Rpb24gZnJvbSBzZWN1cml0aWVzIHJlZ3VsYXRvcnMgQ29uZ3Jlc3MgY2FiaW5ldCBzZWNyZXRhcmllcyBhbmQgY29tcGV0aXRvcnMgaGFzIGJlZW4gYSBjb2xsZWN0aXZlIHNocnVnIEFsaWJhYmEgb3dlcyBpdHMgc3VjY2VzcyBuYXZpZ2F0aW5nIFdhc2hpbmd0b25zIHBvbGl0aWNhbCBzaG9hbHMgaW4gcGFydCB0byBhIGhhbmRmdWwgb2Yga2V5IGhpcmVzIG92ZXIgdGhlIHBhc3QgdGhyZWUgeWVhcnMgVGhlIEhhbmd6aG91IENoaW5hYmFzZWQgY29tcGFueSByZXRhaW5lZCBhIGxvYmJ5aW5nIGZpcm0gaGVhZGVkIGJ5IFJvbmFsZCBSZWFnYW5zIGxhc3QgY2hpZWYgb2Ygc3RhZmYgYSBmb3JtZXIgZ2VuZXJhbCBjb3Vuc2VsIGZyb20gdGhlIFVTIFRyYWRlIFJlcHJlc2VudGF0aXZlIE9mZmljZSBhbmQgYW4gZXhjaGllZiBvZiBzdGFmZiBhdCB0aGUgVHJlYXN1cnkgRGVwYXJ0bWVudCB0byBvdmVyc2VlIGludGVybmF0aW9uYWwgY29tbXVuaWNhdGlvbnMgYW5kIGdvdmVybm1lbnQgcmVsYXRpb25zIFRoZSBTZWN1cml0aWVzIGFuZCBFeGNoYW5nZSBDb21taXNzaW9uICB0aGUgcHJpbmNpcGFsIHJlZ3VsYXRvcnkgaHVyZGxlIEFsaWJhYmEgbXVzdCBjbGVhciBiZWZvcmUgcmFpc2luZyBwZXJoYXBzIDIwIGJpbGxpb24gIGhhcyBzaG93biBubyBzaWduIGl0IHdpbGwgZGVjbGluZSB0byBhcHByb3ZlIHRoZSBzdG9jayBzYWxlIHRoYXQgY291bGQgY29tZSBhcyBlYXJseSBhcyBuZXh0IG1vbnRoIFF1ZXN0aW9ucyBhYm91dCB0aGUgZmlybXMgY29ycG9yYXRlIHN0cnVjdHVyZSBhY2NvdW50aW5nIGFuZCBzYWxlIG9mIGNvdW50ZXJmZWl0IGdvb2RzIGhhdmUgZ29uZSB1bmV4cGxvcmVkIGJ5IHRoZSBhZG1pbmlzdHJhdGlvbiBvZiBQcmVzaWRlbnQgQmFyYWNrIE9iYW1hIG9yIGJ5IGNvbXBhbmllcyBBbGliYWJhIGR3YXJmcyBpbiBzYWxlcyBpbmNsdWRpbmcgQW1hem9uY29tIEluYyBhbmQgRUJheSBJbmMgVGhpcyBpcyBnb2luZyB0byBiZSBhIHdhdGVyc2hlZCBJUE8gc2FpZCBBbmFudCBTdW5kYXJhbSBhIGNvcnBvcmF0ZSBnb3Zlcm5hbmNlIGV4cGVydCBhdCBEYXJ0bW91dGhzIFR1Y2sgU2Nob29sIG9mIEJ1c2luZXNzIEhvdyBjb21lIG5vYm9keSBhdCB0aGUgVVMgVHJhZGUgUmVwcmVzZW50YXRpdmUgbm9ib2R5IGF0IHRoZSBEZXBhcnRtZW50IG9mIENvbW1lcmNlIG5vYm9keSBhdCBzb21lIGNvbmdyZXNzaW9uYWwgb3ZlcnNpZ2h0IGJvZHkgaXMgc2F5aW5nIEd1eXMgd2hhdCBpcyBnb2luZyBvbiBoZXJlIEl0IGp1c3QgcHV6emxlcyBtZSB0aGF0IG5vYm9keSBpcyBjb25jZXJuZWQgICAgICAgICAgICAgICAgICAgICAgICAgIENhc2V5IExldHRlciBTZW5hdG9yIFJvYmVydCBDYXNleSBhIFBlbm5zeWx2YW5pYSBEZW1vY3JhdCBvbiB0aGUgU2VuYXRlIEZpbmFuY2UgQ29tbWl0dGVlIHNvdW5kZWQgYSByYXJlIGRpc2NvcmRhbnQgbm90ZSB0aGlzIHdlZWsgYXNraW5nIHRoZSBTRUMgdG8gc2hvdyBob3cgaXRzIGFkZHJlc3Npbmcgcmlza3MgZm9yIGJ1eWVycyBvZiBzdG9jayBpbiBDaGluZXNlIG9mZmVyaW5ncyBzdHJ1Y3R1cmVkIGxpa2UgQWxpYmFiYXMgQW1lcmljYW4gaW52ZXN0b3JzIGluIENoaW5lc2UgY29tcGFuaWVzIG9mdGVuIGRvIG5vdCBlbmpveSB0aGUgc2FtZSBwcm90ZWN0aW9ucyBhbmQgbGVnYWwgZ3VhcmFudGVlcyB0aGF0IHRoZXkgYXJlIGFmZm9yZGVkIHdoZW4gdGhleSBpbnZlc3QgaW4gQW1lcmljYW4gZmlybXMgQ2FzZXkgd3JvdGUgaW4gYSBKdWx5IDggbGV0dGVyIHRvIHRoZSBhZ2VuY3kgQWxpYmFiYSBoYXMgZmxvd24gdW5kZXIgV2FzaGluZ3RvbnMgcmFkYXIgZm9yIHNldmVyYWwgcmVhc29ucyBUaGUgY29tcGFueSB3aXRoIGVtYnJ5b25pYyBVUyByZXRhaWwgb3BlcmF0aW9ucyBoYXMgYXZvaWRlZCBhdHRyYWN0aW5nIGNvbXBldGl0b3JzIGZpcmUgYnkgc3RyZXNzaW5nIGl0cyBmb2N1cyBvbiB0aGUgdW5kZXJkZXZlbG9wZWQgQ2hpbmVzZSBlY29tbWVyY2UgbWFya2V0IEl0cyBhbHNvIGRlZnVzZWQgVVMgZ292ZXJubWVudCBjcml0aWNpc20gYnkgaW50ZW5zaWZ5aW5nIGVmZm9ydHMgdG8gcHJldmVudCBwaXJhdGVkIGdvb2RzIGZyb20gYmVpbmcgc29sZCBvbiBpdHMgd2Vic2l0ZXMgVGhlIGNvbXBhbnlzIHZlcnNpb24gb2YgYSBtdWNoZGViYXRlZCBjb3Jwb3JhdGUgc3RydWN0dXJlIGhhcyBiZWVuIGRlc2lnbmVkIHRvIG1pbmltaXplIHBvdGVudGlhbCByaXNrcyB0byBpbnZlc3RvcnMgSW4gYW55IGNhc2UgQWxpYmFiYSBoYXMgbGl0dGxlIHJlYXNvbiB0byBleHBlY3QgcmVndWxhdG9yeSB0cm91YmxlIFRoZSBTRUMgaGFzIGFzc2VudGVkIHRvIHRoZSBzYW1lIGRldmljZSBpbiBkb3plbnMgb2YgcHVibGljIG9mZmVyaW5ncyBzaW5jZSAyMDAwICAgICAgICAgICAgICAgICAgICAgICAgICAgU3RhZmYgUmV2aWV3IFRoZSBTRUNzIGFudGljaXBhdGVkIGFwcHJvdmFsIG9mIHRoZSBvZmZlcmluZyBkb2N1bWVudHMgd2lsbCBmb2xsb3cgYSBzdGFmZiByZXZpZXcgYW5kIHdvbnQgYmUgdm90ZWQgb24gYnkgdGhlIGZ1bGwgZml2ZW1lbWJlciBjb21taXNzaW9uIFRoZSBwcm9jZXNzIGlzbnQgZGVzaWduZWQgdG8ganVkZ2UgdGhlIG9mZmVyaW5nIG9ubHkgdG8gZW5zdXJlIGludmVzdG9ycyBhcmUgYWxlcnRlZCB0byBhbGwgcmlza3MgVGhlIGZlZGVyYWwgc3lzdGVtIGlzIHZlcnkgbXVjaCBhIG5vbm1lcml0IGJhc2VkIHJlZ3VsYXRvcnkgc3lzdGVtIHNhaWQgRGF2aWQgTWFydGluIGEgZm9ybWVyIGhlYWQgb2YgdGhlIFNFQ3MgZGl2aXNpb24gb2YgY29ycG9yYXRpb24gZmluYW5jZSB3aG8gaXMgbm93IGEgcGFydG5lciBhdCB0aGUgQ292aW5ndG9uICBCdXJsaW5nIGxhdyBmaXJtIGluIFdhc2hpbmd0b24gSXQgZWZmZWN0aXZlbHkgdGFrZXMgdGhlIHBvc2l0aW9uIHRoYXQgeW91IGNhbiBzZWxsIGFueXRoaW5nIHlvdSB3YW50IGFzIGxvbmcgYXMgeW91IGRpc2Nsb3NlIGl0IGFjY3VyYXRlbHkgQXNobGV5IFphbmR5IGFuIEFsaWJhYmEgc3Bva2Vzd29tYW4gc2FpZCBzaGUgY291bGRudCBjb21tZW50IGJlY2F1c2UgdGhlIGNvbXBhbnkgaXMgaW4gYSBwcmVJUE8gcXVpZXQgcGVyaW9kIEFzIHJlcXVpcmVkIHRoZSBjb21wYW55IGhhcyBsaXN0ZWQgcmlza3MgdG8gaW52ZXN0b3JzIGluIGl0cyBTRUMgZmlsaW5ncyBpbmNsdWRpbmcgd2FybmluZ3MgYWJvdXQgdGhlIHRyYW5zcGFyZW5jeSBvZiBpdHMgYXVkaXRzIGFuZCB0aGUgY2hhbmNlIHRoYXQgQ2hpbmVzZSByZWd1bGF0b3JzIGNvdWxkIGNoYWxsZW5nZSB0aGUgbGVnYWxpdHkgb2YgaXRzIHN0cnVjdHVyZSAgICAgICAgICAgICAgICAgICAgICAgICBQb3JrIENvbnRyb3ZlcnN5IEFsaWJhYmFzIFdhc2hpbmd0b24gcmVjZXB0aW9uIGNvbnRyYXN0cyB3aXRoIHRoZSBzcG90bGlnaHQgdHJhaW5lZCBvbiBvdGhlciBDaGluYXJlbGF0ZWQgaXNzdWVzIGluIGEgdG93biB3aGVyZSBhIG1lcmUgd2hpZmYgb2YgY29udHJvdmVyc3kgY2FuIHNwYXduIGNvbmdyZXNzaW9uYWwgaGVhcmluZ3MgdGFsa3Nob3cgZGViYXRlcyBhbmQgZHVlbGluZyBhZHZvY2FjeSByZXBvcnRzIFRoZSBIb3VzZSBBcHByb3ByaWF0aW9ucyBDb21taXR0ZWUgbGFzdCBtb250aCBhcHByb3ZlZCBsZWdpc2xhdGlvbiByZW5hbWluZyB0aGUgc3RyZWV0IGluIGZyb250IG9mIHRoZSBDaGluZXNlIEVtYmFzc3kgaW4gV2FzaGluZ3RvbiBmb3IgaW1wcmlzb25lZCBkaXNzaWRlbnQgTGl1IFhpYW9ibyBJbiAyMDEzIGEgQ2hpbmVzZSBjb21wYW55cyBhY3F1aXNpdGlvbiBvZiBTbWl0aGZpZWxkIEZvb2RzIEluYyBhIHBvcmsgcHJvZHVjZXIgc3RpcnJlZCBjb25ncmVzc2lvbmFsIGNvbXBsYWludHMgYWJvdXQgYWxsZWdlZCB0aHJlYXRzIHRvIFVTIGZvb2Qgc2VjdXJpdHkgQ29udHJpYnV0aW5nIHRvIEFsaWJhYmFzIG1vbWVudHVtIGlzIGEgZnJvdGh5IG1hcmtldCAgdGhlIFN0YW5kYXJkICBQb29ycyA1MDAgaW5kZXggaGFzIGRvdWJsZWQgb3ZlciB0aGUgcGFzdCBmaXZlIHllYXJzICBjb3VwbGVkIHdpdGggZ3JlYXQgaW52ZXN0b3IgaW50ZXJlc3QgaW4gQ2hpbmVzZSBJbnRlcm5ldCBmaXJtcyBNaWNoYWVsIFdlc3NlbCBhIG1lbWJlciBvZiB0aGUgVVNDaGluYSBTZWN1cml0eSBSZXZpZXcgQ29tbWlzc2lvbiB0aGF0IGxhc3QgbW9udGggcmVsZWFzZWQgdGhlIHJlcG9ydCBjcml0aWNhbCBvZiBBbGliYWJhcyBwcm9wb3NhbCBzYWlkIHRoZSBtYXJrZXRzIGVudGh1c2lhc20gcmVtaW5kcyBoaW0gb2YgdGhlIDE5OTBzIEludGVybmV0IGJvb20gYmVmb3JlIG1hbnkgdGVjaG5vbG9neSBzdG9ja3MgcGx1bmdlZCBpbiB2YWx1ZSBBIGxvdCBvZiBwZW9wbGUgYXJlIGxvb2tpbmcgd2l0aCBnbGFzc3lleWVkIGVudGh1c2lhc20gYXQgc29tZSBvZiB0aGVzZSBjb21wYW5pZXMgV2Vzc2VsIHNhaWQgICAgICAgICAgICAgICAgICAgICAgICAgSW50cmljYXRlIFJ1c2UgVGhlIFVTQ2hpbmEgY29tbWlzc2lvbnMgc3RhZmYgcmV2aWV3IHRvb2sgcGFydGljdWxhciBpc3N1ZSB3aXRoIHRoZSBjb3Jwb3JhdGUgc3RydWN0dXJlIHRoYXQgQ2hpbmVzZSB0ZWNoIGNvbXBhbmllcyBvZnRlbiB1c2UgdG8gZ28gcHVibGljIGVxdWF0aW5nIGl0IHRvIGFuIGludHJpY2F0ZSBydXNlIHRoYXQgbGVhdmVzIGEgc21hbGwgY2FkcmUgb2YgZXhlY3V0aXZlcyBpbiBjb250cm9sIHdoaWxlIGdpdmluZyBBbWVyaWNhbiBzaGFyZWhvbGRlcnMgZmV3IHJpZ3QABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMC0wNi0xMVQwMDowMDowMFogVE8gMjAxMy0wNy0zMFQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQAAzcxNg==</field><field name="title" class="java.lang.String">rO0ABXQAL1JlZ3VsYXRvcnMgTG9vayBJbnRvIENoaW5hIEZpcm1zJyBMaXN0aW5nIFBsb3lz</field><field name="content" class="java.lang.String">rO0ABXQug0EgY29tbW9uIGNvcnBvcmF0ZSBzdHJ1Y3R1cmUgdGhhdCBoYXMgYWxsb3dlZCBkb3plbnMgb2YgQ2hpbmVzZSBjb21wYW5pZXMgdG8gZ2V0IGxpc3RlZCBvbiBVLlMuIGV4Y2hhbmdlcyBpcyBkcmF3aW5nIGluY3JlYXNlZCBzY3J1dGlueSBmcm9tIEFtZXJpY2FuIGF1ZGl0IHJlZ3VsYXRvcnMuIENoaW5lc2UgSW50ZXJuZXQgY29tcGFuaWVzIHN1Y2ggYXMgU2luYSBDb3JwLiBhbmQgQmFpZHUgSW5jLiBoYXZlIHVzZWQgc28tY2FsbGVkIHZhcmlhYmxlIGludGVyZXN0IGVudGl0aWVzLCBvciBWSUVzLCB0byB3b3JrIGFyb3VuZCBDaGluZXNlIHJlc3RyaWN0aW9ucyBhbmQgc2VlayBmb3JlaWduIGludmVzdG9ycyBzaW5jZSAyMDAwLiBOb3csIHRoZSBTZWN1cml0aWVzIGFuZCBFeGNoYW5nZSBDb21taXNzaW9uIGlzIGFsc28gYXNraW5nIHF1ZXN0aW9ucyBhYm91dCB0aGUgc3RydWN0dXJlLCBzYWlkIFBhdWwgQm9sdHosIGEgSG9uZyBLb25nLWJhc2VkIHBhcnRuZXIgYXQgUm9wZXMgJiBHcmF5IExMUCwgd2hvIGNpdGVkIGNvbW1lbnQgbGV0dGVycyB0aGUgYWdlbmN5IHNlbnQgdG8gc2l4IGNvbXBhbmllcyBzaW5jZSBEZWNlbWJlci4gSnVkaXRoIEJ1cm5zLCBhbiBTRUMgc3Bva2Vzd29tYW4sIGRlY2xpbmVkIHRvIGNvbW1lbnQuIFRoZSBoZWlnaHRlbmVkIGF0dGVudGlvbiBtYXkgYWRkIHRvIGludmVzdG9yc+KAmSBjYXV0aW9uIHJlZ2FyZGluZyBDaGluZXNlIHN0b2NrcyB0cmFkaW5nIGluIE5vcnRoIEFtZXJpY2EuIFNpbm8tRm9yZXN0IENvcnAuIGFtb25nIG90aGVyIGNvbXBhbmllcyBoYXMgYmVlbiBidWZmZXRlZCB0aGlzIHllYXIgYnkgYWxsZWdhdGlvbnMgb2YgYWNjb3VudGluZyBhYnVzZXMgYW5kIGZyYXVkLCBidXJuaW5nIGludmVzdG9ycyBpbmNsdWRpbmcgSm9obiBQYXVsc29uLCB0aGUgYmlsbGlvbmFpcmUgd2hvc2UgaGVkZ2UgZnVuZCBzYWlkIGluIEp1bmUgaXQgbG9zdCAkNDY4IG1pbGxpb24gb24gU2luby1Gb3Jlc3QuIFRoZSBjb21wYW55LCB3aGljaCBkb2VzbuKAmXQgdXNlIGEgVklFLCBoYXMgZGVuaWVkIHRoZSBhbGxlZ2F0aW9ucy4gVGhlIFZJRSBzdHJ1Y3R1cmUsIHdoaWNoIGFsbG93cyBmaXJtcyB0byBzZXQgdXAgY29udHJhY3R1YWwgcmVsYXRpb25zaGlwcyB0aGF0IG1pbWljIGVxdWl0eSBvd25lcnNoaXAsIG1heSBjYXJyeSBpdHMgb3duIHJpc2tzLCBhY2NvcmRpbmcgdG8gSm9zZXBoIFN0LiBEZW5pcywgZGlyZWN0b3Igb2YgcmVzZWFyY2ggYW5kIGFuYWx5c2lzIGF0IHRoZSBQdWJsaWMgQ29tcGFueSBBY2NvdW50aW5nIE92ZXJzaWdodCBCb2FyZC4gVGhlIFBDQU9CLCB3aGljaCBvdmVyc2VlcyBhdWRpdG9ycyBvZiBVLlMuIHB1YmxpYyBjb21wYW5pZXMsIGhhcyBiZWd1biB0byBsb29rIGF0IFZJRXPigJkgYXVkaXQgaW1wbGljYXRpb25zLiDigJxDaGluYSBoYXMgYmxvY2tlZCBvdXIgaW5zcGVjdGlvbnMgb2YgZmlybXMgaW4gdGhlaXIgcmVnaW9uLCBidXQgd2UgdGhpbmsgVklFcyBhcmUgYSByaXNrIGFyZWEs4oCdIFN0LiBEZW5pcyBzYWlkLiDigJxXZSBjYW7igJl0IGtub3csIHdpdGhvdXQgZ29pbmcgdG8gaW5zcGVjdCwgaG93IG11Y2ggcmlzayB0aGV5IHJlcHJlc2VudC7igJ0gWWFob2/igJlzIERpc3B1dGUgWWFob28hIEluYy4gc2hhcmVob2xkZXJzIGxlYXJuZWQgYWJvdXQgc29tZSBvZiB0aGUgVklFLSByZWxhdGVkIHJpc2tzIHRoaXMgeWVhci4gVGhlIFN1bm55dmFsZSwgQ2FsaWZvcm5pYS1iYXNlZCBJbnRlcm5ldCBtZWRpYSBjb21wYW55LCB3aGljaCBvd25zIG1vcmUgdGhhbiA0MCBwZXJjZW50IG9mIEhvbmcgS29uZy1iYXNlZCBBbGliYWJhIEdyb3VwIEhvbGRpbmcgTHRkLiwgZGlzY2xvc2VkIGluIE1heSB0aGF0IHRoZSBDaGluZXNlIGNvbXBhbnkgaGFkIHRyYW5zZmVycmVkIGl0cyBvbmxpbmUgcGF5bWVudCBidXNpbmVzcywgQWxpcGF5LCB0byBhIGNvbXBhbnkgY29udHJvbGxlZCBieSBBbGliYWJhIGZvdW5kZXIgSmFjayBNYS4gWWFob28sIHdoaWNoIHNhaWQgaW4gYSBuZXdzIHJlbGVhc2UgdGhhdCB0aGUgbW92ZSBoYWRu4oCZdCBiZWVuIGFwcHJvdmVkIGJ5IEFsaWJhYmHigJlzIGJvYXJkLCBkZWNsaW5lZCAxNSBwZXJjZW50IGluIGZvdXIgZGF5cyBhbWlkIGNvbmNlcm4gdGhhdCBpdHMgQWxpYmFiYSBzdGFrZSB3b3VsZCBsb3NlIHZhbHVlLiBBbGliYWJhIHJlc3BvbmRlZCB0aGF0IHRoZSBjaGFuZ2Ugd2FzIGluIHRoZSBiZXN0IGludGVyZXN0IG9mIHRoZSBjb21wYW55IGFuZCBpdHMgc2hhcmVob2xkZXJzIGFuZCBzYWlkIGl0cyBkaXJlY3RvcnMgd2VyZSB0b2xkIGFib3V0IHRoZSBjaGFuZ2UgaW4gSnVseSAyMDA5LiBUaGUgY29tcGFuaWVzIHNldHRsZWQgdGhlaXIgZGlzcHV0ZSBpbiBKdWx5LiBMYXN0IG1vbnRoLCB0aGUgQ2hpbmVzZSBnb3Zlcm5tZW50IHNpZ25hbGVkIGl0IG1heSBjcmVhdGUgbmV3IHJ1bGVzIGZvciBWSUVzLCB3aGljaCBoYXZlIGhlbHBlZCBlbmFibGUgdGhlIGJvb20gaW4gb3ZlcnNlYXMgbGlzdGluZ3Mgb2YgQ2hpbmVzZSBzdG9ja3MuIFJldmVyc2UgTWVyZ2VycyBQQ0FPQiBoYXMgYmVndW4gdG8gbG9vayBhdCB0aGUgYXVkaXQgaW1wbGljYXRpb25zIG9mIFZJRXMgYmVjYXVzZSBvZiB0aGVpciBjb21tb24gdXNlIGluIHJldmVyc2UgbWVyZ2Vycywgc29tZXRpbWVzIGNhbGxlZCByZXZlcnNlIHRha2VvdmVycyBvciBSVE9zLCBhY2NvcmRpbmcgdG8gU3QuIERlbmlzLiBNb3JlIHRoYW4gNDAwIENoaW5lc2UgYnVzaW5lc3NlcyBoYXZlIHVzZWQgdGhlIG1hbmV1dmVyIC0tIGJ1eWluZyBwdWJsaWMgc2hlbGwgY29tcGFuaWVzIHRvIGdhaW4gc3RvY2sgbWFya2V0IGxpc3RpbmdzIGluIE5vcnRoIEFtZXJpY2Egd2hpbGUgYXZvaWRpbmcgdGhlIHNjcnV0aW55IG9mIGFuIGluaXRpYWwgcHVibGljIG9mZmVyaW5nLiBUaGUgU0VDIGluIEp1bmUgY2F1dGlvbmVkIGludmVzdG9ycyBhYm91dCBidXlpbmcgc3Rha2VzIGluIHN1Y2ggY29tcGFuaWVzLCBzYXlpbmcgdGhleSBtYXkgYmUgcHJvbmUgdG8g4oCcZnJhdWQgYW5kIG90aGVyIGFidXNlcy7igJ0gVW5kZXIgYSBWSUUgYXJyYW5nZW1lbnQsIGEgQ2hpbmVzZSBjb21wYW55IHRoYXQgd2FudHMgdG8gc2VsbCBzaGFyZXMgaW4gdGhlIFUuUy4gdXN1YWxseSBzZXRzIHVwIGEgaG9sZGluZyBjb21wYW55LCBvZnRlbiBpbiB0aGUgQ2F5bWFuIElzbGFuZHMsIGZvciB0aGF0IHB1cnBvc2UuIFRoZW4sIHRocm91Z2ggYSB3aG9sbHkgb3duZWQgb25zaG9yZSBmaXJtIGluIENoaW5hLCB0aGUgbmV3IGNvbXBhbnkgY3JlYXRlcyBjb250cmFjdHMgd2l0aCBhIFZJRSBvd25lZCBieSB0aGUgZm91bmRlcnMgb3IgdGhlaXIgZGVzaWduZWVzLiBXaGlsZSB0aGUgaG9sZGluZyBjb21wYW55IGV4dHJhY3RzIHByb2ZpdCBmcm9tIHRoZSBWSUUgdGhyb3VnaCBhZ3JlZW1lbnRzIHRvIHByb3ZpZGUgc2VydmljZXMgc3VjaCBhcyBjb25zdWx0aW5nIGFuZCB0ZWNobmljYWwgc3VwcG9ydCwgaXRzIFUuUy4gc2hhcmVob2xkZXJzIGRvbuKAmXQgb3duIGFueSBwYXJ0IG9mIHRoZSBWSUUuIFRoZSBzdHJ1Y3R1cmUgYXZvaWRzIENoaW5lc2UgcmVzdHJpY3Rpb25zIG9uIGRpcmVjdCBpbnZlc3RtZW50IGJ5IGZvcmVpZ25lcnMgaW4gc2VjdG9ycyBpbmNsdWRpbmcgdGVsZWNvbW11bmljYXRpb25zLCBzdGVlbG1ha2luZywgZWR1Y2F0aW9uIGFuZCBhZ3JpY3VsdHVyZS4g4oCYVmFyaWFibGUgSW50ZXJlc3QgRW50aXR54oCZIFVuZGVyIFUuUy4gYWNjb3VudGluZyBydWxlcywgdGhlIGNvbXBhbnkgaW4gQ2hpbmEgaXMgY29uc2lkZXJlZCBhIOKAnHZhcmlhYmxlIGludGVyZXN0IGVudGl0eeKAnSBpbiB3aGljaCB0aGUgVS5TLi0gbGlzdGVkIGZpcm3igJlzIGludGVyZXN0IGRlcml2ZXMgZnJvbSB0aGUgY29udHJhY3R1YWwgcmVsYXRpb25zaGlwLCBub3Qgdm90aW5nIHJpZ2h0cy4gVGhlIHJpc2sgaW4gdGhlIHNldHVwIGlzIHR3b2ZvbGQgLS0gZmlyc3QsIFZJRSBzdHJ1Y3R1cmVzIGhhdmUgYmVlbiB0b2xlcmF0ZWQsIGJ1dCBuZXZlciBvcGVubHkgYXBwcm92ZWQgYnkgQ2hpbmVzZSBhdXRob3JpdGllcywgc2FpZCBQYXVsIEdpbGxpcywgYSB2aXNpdGluZyBwcm9mZXNzb3IgYXQgdGhlIEd1YW5naHVhIFNjaG9vbCBvZiBNYW5hZ2VtZW50IGF0IFBla2luZyBVbml2ZXJzaXR5IGluIEJlaWppbmcuIFNlY29uZCwgYSBWSUXigJlzIG93bmVyc2hpcCBkaWZmZXJzIGZyb20gdGhlIHB1YmxpY2x5IGxpc3RlZCBob2xkaW5nIGNvbXBhbnnigJlzLCBoZSBzYWlkLiBNb3N0IG9mdGVuLCBWSUVzIGFyZSBvd25lZCBieSB0aGUgZm91bmRlcnMgb2YgdGhlIENoaW5lc2UgY29tcGFueSwgYW5kIGluIG90aGVyIGluc3RhbmNlcyBieSBmYW1pbHkgbWVtYmVycyBvciBlbXBsb3llZXMsIGhlIHNhaWQuIOKAnFdpbGwgdGhlIHJlZ3VsYXRvcnMgc2h1dCB0aGVtIGRvd24/4oCdIHNheXMgR2lsbGlzLiDigJxXaWxsIHNoYXJlaG9sZGVycyBzdGVhbCB0aGVtPyBXZeKAmXZlIHNlZW4gY2FzZXMgb2YgYm90aC7igJ0gSGUgZXN0aW1hdGVzIHRoYXQgYXQgbGVhc3QgNDIgcGVyY2VudCBvZiBDaGluZXNlIGJ1c2luZXNzZXMgbGlzdGVkIG9uIHRoZSBOZXcgWW9yayBTdG9jayBFeGNoYW5nZSBvciBOYXNkYXEgYXMgb2YgMjAwOSB1c2VkIFZJRSBhcnJhbmdlbWVudHMuIEdpbGxpcyBzYWlkIGhlIG1hZGUgYSBwcmVzZW50YXRpb24gb24gdGhlIHN1YmplY3QgdG8gdGhlIFBDQU9CIGxhc3QgbW9udGguIE9wZXJhdGluZyBMaWNlbnNlcyBJbiBtYW55IEludGVybmV0IGJ1c2luZXNzZXMsIHRoZSBWSUUgaG9sZHMgb3BlcmF0aW5nIGxpY2Vuc2VzIGFuZCBvdGhlciBwYXJ0cyBvZiB0aGUgZmlybSB0aGF0IGNhbm5vdCBiZSBmb3JlaWduIG93bmVkLCBHaWxsaXMgc2FpZC4gRnVuY3Rpb25zIHN1Y2ggYXMgYWR2ZXJ0aXNpbmcsIHdhcmVob3VzaW5nIGFuZCBmdWxmaWxsbWVudCBvcGVyYXRpb25zIGNhbiBiZSBkb25lIGJ5IG90aGVyIHVuaXRzIG93bmVkIGJ5IHRoZSBob2xkaW5nIGNvbXBhbnkuIEluIG90aGVyIGNhc2VzLCB0aGUgZW50aXJlIENoaW5lc2Ugb3BlcmF0aW5nIGNvbXBhbnkgaXMgYSBWSUUsIGhlIHNhaWQuIOKAnFRoZSBsZXNzIHJpc2t5IG9uZXMgdHJ5IHRvIG1pbmltaXplIHdoYXTigJlzIGluIHRoZSBWSUUsIHRoZSByaXNraWVzdCBvbmVzIHB1dCB0aGUgZW50aXJlIGJ1c2luZXNzIGluIHRoZSBWSUUs4oCdIEdpbGxpcyBzYWlkLiBJbiBjb21tZW50IGxldHRlcnMgc2luY2UgRGVjZW1iZXIsIHRoZSBTRUMgYXNrZWQgZm9yIG1vcmUgZXhwbGFuYXRpb24gb2YgdGhlIFZJRSBzdHJ1Y3R1cmVzIGF0IFNoYW5kYSBJbnRlcmFjdGl2ZSBFbnRlcnRhaW5tZW50IEx0ZC4sIGEgZ2FtaW5nIGNvbXBhbnk7IEtvbmd6aG9uZyBDb3JwLiwgd2hpY2ggcHJvdmlkZXMgZ2FtZXMgYW5kIGNvbnRlbnQgZm9yIHdpcmVsZXNzIGRldmljZXM7IEZ1c2hpIENvcHBlcndlbGQgSW5jLiwgYSB3aXJlIG1ha2VyOyBhbmQgU2lubyBBc3N1cmFuY2UgSW5jLiwgYSBzZWxsZXIgb2YgcHJvamVjdCBndWFyYW50ZWVzLiBCb2x0eiBvZiBSb3BlcyAmIEdyYXkgc2FpZCBoaXMgZmlybSBpcyBoYW5kbGluZyB0d28gbW9yZSBzdWNoIHJlcXVlc3RzIHRvIENoaW5lc2UgZmlybXMgdGhhdCBoYXZlIG5vdCB5ZXQgYmVlbiBtYWRlIHB1YmxpYy4gVGFraW5nIE1vcmUgVGltZSBTaW5vIEFzc3VyYW5jZSBpcyBub3QgYXdhcmUgb2YgYW55IG91dHN0YW5kaW5nIHF1ZXN0aW9ucyBmcm9tIHRoZSBTRUMgcmVnYXJkaW5nIGl0cyBWSUUgc3RydWN0dXJlLCBhdHRvcm5leSBHYXJ5IEpvaW5lciBvZiBGcmFzY29uYSwgSm9pbmVyLCBHb29kbWFuICYgR3JlZW5zdGVpbiBQLkMuIHdyb3RlIGluIGFuIGUtIG1haWwuIExhd3llcnMgbGlzdGVkIGFzIGNvbnRhY3RzIG9uIHRoZSBTRUMgY29tbWVudCBsZXR0ZXJzIGZvciBTaGFuZGEgYW5kIEZ1c2hpIGRlY2xpbmVkIHRvIGNvbW1lbnQuIFRoZSBsYXd5ZXIgbGlzdGVkIGZvciBLb25nemhvbmcgZGlkIG5vdCByZXNwb25kIHRvIGFuIGUtbWFpbCBhbmQgYSB0ZWxlcGhvbmUgbWVzc2FnZSByZXF1ZXN0aW5nIGNvbW1lbnQuIFNFQyBhdHRlbnRpb24gbWF5IGluY3JlYXNlIHRoZSB0aW1lIGl0IHRha2VzIGZvciBjb21wYW5pZXMgdG8gZ2V0IFUuUy4gbGlzdGluZ3MsIGFjY29yZGluZyB0byBSb2NreSBMZWUsIEhvbmcgS29uZy1iYXNlZCBBc2lhIG1hbmFnaW5nIHBhcnRuZXIgZm9yIENhZHdhbGFkZXIgV2lja2Vyc2hhbSAmIFRhZnQgTExQLiDigJxUaGUgU0VDIGlzIG5vdyBtb3JlIGNvbmNlcm5lZCBhYm91dCBWSUUgc3RydWN0dXJlcyBhbmQgYXJlIGFza2luZyBtb3JlIHF1ZXN0aW9ucyzigJ0gc2FpZCBMZWUuIOKAnFRoaXMgY2FuIG1lYW4gdGhhdCB0aGUgVS5TLiBsaXN0aW5nIHByb2Nlc3Mgd2lsbCB0YWtlIG1vcmUgdGltZSwgc3ViamVjdCB0byBtb3JlIGV4dGVuc2l2ZSByZXZpZXcgZnJvbSB0aGUgU0VDLiBJdOKAmXMgcGxhdXNpYmxlIHRoYXQgZXhpc3RpbmcgbGlzdGVkIFZJRSBjb21wYW5pZXMgd2lsbCBiZSByZXF1aXJlZCB0byBwcm92aWRlIGZ1cnRoZXIgZGlzY2xvc3VyZS7igJ0gVGhlIGRpc3B1dGUgYmV0d2VlbiBBbGliYWJhIEdyb3VwIGFuZCBZYWhvbyByZWZsZWN0cyBzb21lIG9mIHRoZSB1bmNlcnRhaW50eSBzdXJyb3VuZGluZyBWSUVzLiBNYSwgQWxpYmFiYeKAmXMgZm91bmRlciwgc2FpZCB0aGUgY29tcGFueSBoYWQgdG8gcmVzdHJ1Y3R1cmUgaXRzIEFsaXBheSB1bml0IHRvIGdldCBhIG5lZWRlZCBwZXJtaXQgYW5kIENoaW5lc2UgcmVndWxhdG9ycyB3b3VsZCBub3QgYWNjZXB0IGZvcmVpZ24gb3duZXJzaGlwLCBhY2NvcmRpbmcgdG8gYW4gQXVnLiAxMCBtZW1vIHB1Ymxpc2hlZCBieSBDYWR3YWxhZGVyLiBTZXR0bGVkIERpZmZlcmVuY2VzIEFsaWJhYmEgYW5kIFlhaG9vIHNldHRsZWQgdGhlaXIgZGlmZmVyZW5jZXMgaW4gSnVseSwgd2l0aCBhbiBhZ3JlZW1lbnQgZ2l2aW5nIEFsaWJhYmEsIGFuZCBZYWhvbyB0aHJvdWdoIGl0cyBzdGFrZSwgYSBzaGFyZSBvZiBBbGlwYXkgcmV2ZW51ZSBhbmQgYXMgbXVjaCBhcyAkNiBiaWxsaW9uIGlmIEFsaXBheSBzZWxscyBzaGFyZXMgdG8gdGhlIHB1YmxpYy4gQXMgYSByZXN1bHQgb2YgdGhlIGVwaXNvZGUsIOKAnHRoZSB2YWxpZGl0eSBvZiB0aGUgdXNlIG9mIHRoZSBWSUUgc3RydWN0dXJlIGluIHRoZSBvbmxpbmUgcGF5bWVudCBzZWN0b3IgaGFzIGJlZW4gYnJvdWdodCBpbnRvIHF1ZXN0aW9uLOKAnSB0aGUgbWVtbyBzYWlkLiBGaW5hbmNpYWwgc29mdHdhcmUgbWFrZXIgTG9uZ3RvcCBGaW5hbmNpYWwgVGVjaG5vbG9naWVzIEx0ZC4sIHdoaWNoIGRpc2Nsb3NlZCB0aGF0IGl0IG1heSBmYWNlIFNFQyBjaXZpbCBjbGFpbXMgcmVsYXRlZCB0byBhY2NvdW50aW5nIGFidXNlcyBhbmQgd2hvc2UgVS5TLiBzaGFyZXMgaGF2ZSBsb3N0IG1vcmUgdGhhbiA5OSBwZXJjZW50IG9mIHRoZWlyIHZhbHVlIHRoaXMgeWVhciwgdXNlZCBhIFZJRSBzdHJ1Y3R1cmUuIFRoZSBjb21wYW55IGlzIGNvbmR1Y3RpbmcgYW4gaW5kZXBlbmRlbnQgaW52ZXN0aWdhdGlvbiBpbnRvIGFsbGVnYXRpb25zIG1hZGUgYnkgaXRzIGF1ZGl0b3IsIERlbG9pdHRlIFRvdWNoZSBUb2htYXRzdSBDUEEgTHRkLiBUaGUgYXVkaXRvciByZXNpZ25lZCBpbiBNYXksIHNheWluZyBMb25ndG9w4oCZcyBjaGFpcm1hbiBoYWQgYWRtaXR0ZWQgdGhlcmUgd2FzIGZha2UgcmV2ZW51ZSBhbmQgY2FzaCBvbiB0aGUgY29tcGFueeKAmXMgYm9va3MuIE90aGVyIFVzZXJzIENoaW5hIE1lZGlhRXhwcmVzcyBIb2xkaW5ncyBJbmMuLCBhIHByb3ZpZGVyIG9mIGFkdmVydGlzaW5nIG9uIGJ1c2VzIGluIENoaW5hIHRoYXQgaXMgYmVpbmcgc3VlZCBmb3IgZnJhdWQgYnkgU3RhcnIgSW50ZXJuYXRpb25hbCBDby4sIHVzZWQgdGhlIHN0cnVjdHVyZSBhcyB3ZWxsLiBUaGUgY29tcGFueSBoYXMgZGVuaWVkIGFsbGVnYXRpb25zIG9mIGZyYXVkLiBUaGUgc3RydWN0dXJlIGlzIGFsc28gdXNlZCBieSBSaW5vIEludGVybmF0aW9uYWwgQ29ycC4sIHdoaWNoIG1ha2VzIHBvbGx1dGlvbi1jb250cm9sIGVxdWlwbWVudCBhbmQgaW4gTm92ZW1iZXIgZGlzY2xvc2VkIHRoYXQgc29tZSBvZiBpdHMgcHJldmlvdXMgZmluYW5jaWFsIHN0YXRlbWVudHMg4oCcc2hvdWxkIG5vIGxvbmdlciBiZSByZWxpZWQgb24u4oCdIOKAnFUuUy4gbWFya2V0cyB3ZXJlIHNlZW4gYXMgdGhlIHBhcmFkaXNlIGZvciBWSUVzLCB0aGF0IHdhcyB0aGUgcGxhY2UgdG8gZ28gYmVjYXVzZSB0aGUgVS5TLiByZWd1bGF0b3JzIGRpZG7igJl0IHNjcnV0aW5pemUgdGhlIFZJRSB0b28gaGFyZCzigJ0gc2FpZCBCb2x0ei4g4oCcVGhlIGRyaXZlciBvZiB0aGUgU0VD4oCZcyBpbnRlcmVzdCBpcyBwZXJoYXBzIHRoZSBtZWx0ZG93bnMgdGhhdCBoYXZlIGhhcHBlbmVkIGluIHNvbWUgb2YgdGhlc2UgY29tcGFuaWVzLiBJdOKAmXMgZW1iYXJyYXNzaW5nIGZvciB0aGUgU0VDLCBzbyB0aGF0IG1ha2VzIHRoZW0gc2NhbiB0aGUgaG9yaXpvbiB0byBsb29rIGZvciB3aGVyZSBhcmUgdGhlIG90aGVyIHNlbnNpdGl2aXRpZXMu4oCdIEluIE1hcmNoLCBCdWRkaGEgU3RlZWwgSW5jLiwgYSBjb21wYW55IGluY29ycG9yYXRlZCBpbiBEZWxhd2FyZSwgd2l0aGRyZXcgYSBwdWJsaWMgb2ZmZXJpbmcgcmVnaXN0cmF0aW9uIGFmdGVyIG9mZmljaWFscyBpbiBIZWJlaSBwcm92aW5jZSBzYWlkIGl0cyBWSUUgc3RydWN0dXJlIGNvbmZsaWN0ZWQgd2l0aCBwb2xpY2llcyBvbiBmb3JlaWduLWludmVzdGVkIGVudGVycHJpc2VzLiBCYXR0bGluZyBmb3IgQ29udHJvbCBHaWdhTWVkaWEgTHRkLiwgd2hpY2ggbWFrZXMgb25saW5lIGdhbWluZyBzb2Z0d2FyZSwgaGFzIGJhdHRsZWQgZm9yIG1vcmUgdGhhbiBhIHllYXIgdG8gcmVnYWluIGNvbnRyb2wgb2YgYSBWSUUuIFdoZW4gR2lnYU1lZGlhIHRyaWVkIHRvIHJlcGxhY2UgaXRzIENoaW5hIGhlYWQgbGFzdCB5ZWFyLCBoZSByZWZ1c2VkIHRvIHN0ZXAgZG93biBvciB0dXJuIG92ZXIgdGhlIFZJRSBkb2N1bWVudHMgYW5kIGFzc2V0cyBuZWNlc3NhcnkgZm9yIEdpZ2FNZWRpYSB0byBydW4gaXRzIGJ1c2luZXNzIGluIENoaW5hLCBhY2NvcmRpbmcgdG8gU0VDIGZpbGluZ3MuIFBhcnRzIG9mIEdpZ2FNZWRpYeKAmXMgVklFIGFncmVlbWVudHMgd2VyZW7igJl0IHByb3Blcmx5IHJlZ2lzdGVyZWQgd2l0aCB0aGUgQ2hpbmVzZSBnb3Zlcm5tZW50LCBtYWtpbmcgaXQgdW5saWtlbHkgdGhlIGNvbXBhbnkgd2lsbCBiZSBhYmxlIHRvIGVuZm9yY2UgdGhlbSB0aHJvdWdoIGEgQ2hpbmVzZSBjb3VydCwgYWNjb3JkaW5nIHRvIENhZHdhbGFkZXLigJlzIEF1Z3VzdCBtZW1vLiBUaGUgVS5TLiBsaXN0aW5nIG9mIFR1ZG91IEhvbGRpbmdzIEx0ZC4sIGEgQ2hpbmVzZSBvbmxpbmUgdmlkZW8gY29tcGFueSwgd2FzIGRlbGF5ZWQgYnkgYSBkaXNwdXRlIG92ZXIgdGhlIG93bmVyc2hpcCBvZiB0aGUgVklFIHRoYXQgYWNjb3VudHMgZm9yIGFsbW9zdCBhbGwgaXRzIHJldmVudWUuIFRoZSBjb21wYW55IGZpbGVkIGEgcmVnaXN0cmF0aW9uIHN0YXRlbWVudCBpbiBOb3ZlbWJlci4gSW4gQXByaWwsIGl0IGRpc2Nsb3NlZCBhIGxhd3N1aXQgaW4gd2hpY2ggdGhlIGV4LXdpZmUgb2YgZm91bmRlciBHYXJ5IFdlaSBXYW5nIGNsYWltZWQgYSBzaGFyZSBpbiA3NiBwZXJjZW50IG9mIHRoZSBWSUXigJlzIGVxdWl0eS4g4oCYUGVyc29uYWwgRGlzcHV0ZXPigJkgSW4gSnVuZSwgVHVkb3Ugc2FpZCB0aGUgbGF3c3VpdCBoYWQgYmVlbiBzZXR0bGVkLiBUaGUgcHJvc3BlY3R1cyBmb3IgaXRzIEF1Z3VzdCBsaXN0aW5nIGNhdXRpb25lZCBwcm9zcGVjdGl2ZSBidXllcnMgdGhhdCDigJx0aGUgc2hhcmVob2xkZXJzIG9mIG91ciBWSUVzIG1heSBiZSBpbnZvbHZlZCBpbiBwZXJzb25hbCBkaXNwdXRlcyB3aXRoIHRoaXJkIHBhcnRpZXMgdGhhdCBtYXkgaGF2ZSBhbiBhZHZlcnNlIGVmZmVjdCBvbiB0aGVpciByZXNwZWN0aXZlIGVxdWl0eSBpbnRlcmVzdHMgaW4gdGhlIHJlbGV2YW50IFZJRSBhbmQgdGhlIHZhbGlkaXR5IG9yIGVuZm9yY2VhYmlsaXR5IG9mIG91ciBjb250cmFjdHVhbCBhcnJhbmdlbWVudHMgd2l0aCB0aGUgcmVsZXZhbnQgVklFIGFuZCBpdHMgc2hhcmVob2xkZXJzLuKAnSBXaGlsZSBjb21wYW5pZXMgYWxyZWFkeSBkaXNjbG9zZSByaXNrcyBhc3NvY2lhdGVkIHdpdGggVklFcyBpbiBTRUMgZmlsaW5ncywgQm9sdHogc2F5cyB0aGUgcmVjZW50IGNhc2VzIHNob3VsZCBtYWtlIGludmVzdG9ycyBhbmQgbGF3eWVycyB3cml0ZSBWSUUgY29udHJhY3RzIHdpdGggbW9yZSBkZXRhaWxzIHRvIGhhbmRsZSBzdWNoIHRoaW5ncyBhcyBmYW1pbHkgZGlzcHV0ZXMuIOKAnFRoZSBWSUUgc3RydWN0dXJlIGluIGZhY3QgZGVwZW5kcyBvbiBpbmRpdmlkdWFscywgc28gcmVhbC1saWZlIGlzc3VlcyB3aGljaCBoYXBwZW4gZXZlcnkgZGF5IC0tIGxpa2UgZGVhdGgsIGRpdm9yY2UsIGZhbWlseSBkaXNwdXRlcywgY2FuIGltcGFjdCBsaXN0ZWQgY29tcGFuaWVzIHdpdGggbGFyZ2UgbWFya2V0IGNhcHMs4oCdIGhlIHNhaWQuIOKAnEl04oCZcyBhIHJlbWluZGVyIHRvIHRoaW5rIGFoZWFkIHdoZW4gdXNpbmcgVklFcy7igJ0gSW4gYSBmbGF3ZWQgVklFIHN0cnVjdHVyZSwgdGhlIG93bmVyc+KAmSBpbnRlcmVzdHMgbWF5IG5vdCBiZSBhbGlnbmVkIHdpdGggdGhlIHNoYXJlaG9sZGVycyBvZiB0aGUgbGlzdGVkIGNvbXBhbnksIGFjY29yZGluZyB0byBMZWUuIExvdyBzaGFyZSB2YWx1YXRpb25zLCB3aGljaCBtZWFuIENoaW5lc2UgZW50cmVwcmVuZXVycyBhcmVu4oCZdCBnZXR0aW5nIG11Y2ggYmVuZWZpdCBmcm9tIHRoZWlyIFUuUy4gbGlzdGluZ3MsIGJyaW5nIHRoYXQgZGlmZmVyZW5jZSB0byB0aGUgZm9yZS4g4oCYVGVtcHRlZCB0byBXYWxr4oCZIOKAnE9uZSBjb25jZXJuIHNvbWUgb2YgdGhlIGxlZ2FsIHByYWN0aXRpb25lcnMgaGF2ZSBpcyB0aGF0IHdpdGggdmVyeSBsb3cgcHVibGljIGNvbXBhbnkgdmFsdWF0aW9uLCBlbnRyZXByZW5ldXJzIG1pZ2h0IGJlIHRlbXB0ZWQgdG8gd2FsayBhd2F5IGZyb20gdGhlIFZJRSBzdHJ1Y3R1cmUs4oCdIExlZSBzYWlkLiBDaGluYeKAmXMgTWluaXN0cnkgb2YgQ29tbWVyY2UsIG9yIE1vZmNvbSwgaXMgY29uc2lkZXJpbmcgbmV3IHJ1bGVzIGZvciBWSUVzLCBzcG9rZXNtYW4gU2hlbiBEYW55YW5nIHNhaWQgbGFzdCBtb250aC4g4oCcVGhlcmUgYXJlIGN1cnJlbnRseSBubyBsYXdzIG9yIHJlZ3VsYXRpb25zIHRvIHJlZ3VsYXRlIFZJRSzigJ0gaGUgc2FpZCBhdCBhIHJlZ3VsYXIgYnJpZWZpbmcgaW4gQmVpamluZyBvbiBTZXB0LiAyMC4g4oCcTW9mY29tIGFuZCBvdGhlciByZWxhdGVkIGdvdmVybm1lbnQgYWdlbmNpZXMgYXJlIHN0dWR5aW5nIHdheXMgdG8gcmVndWxhdGUgc3VjaCBpbnZlc3RtZW50LuKAnSBXaGlsZSBDaGluZXNlIHJlZ3VsYXRvcnMgYXJlIHVubGlrZWx5IHRvIGRpc3J1cHQgY29tcGFuaWVzIHRoYXQgaGF2ZSBhbHJlYWR5IG1hZGUgdGhlIGp1bXAgdG8gdGhlIFUuUy4sIHRoZSB1bmNlcnRhaW50eSBhZmZlY3RzIHRoZSBtYXJrZXQsIGFjY29yZGluZyB0byBMZXN0ZXIgUm9zcywgYSBCZWlqaW5nLWJhc2VkIHBhcnRuZXIgYXQgV2lsbWVyIEN1dGxlciBQaWNrZXJpbmcgSGFsZSAmIERvcnIgTExQLiDigJxVbmxlc3MgdGhlIGF1dGhvcml0aWVzIHRha2Ugc3RlcHMgdG8gZGlzYXZvdyB0aG9zZSB3aG8gd2FudCB0byBkbyBhd2F5IHdpdGggaXQsIHNrZXB0aWNpc20gaW4gdGhlIG1hcmtldCBhYm91dCBWSUUgc3RydWN0dXJlcyB3aWxsIGluY3JlYXNlLOKAnSBzYWlkIFJvc3MuIOKAnEluIG90aGVyIHdvcmRzLCB0aGUgbGVnYWwgZnJhZ2lsaXR5IG9mIHRoZSBzdHJ1Y3R1cmUgcmlza3MgaGFtcGVyaW5nIGNhcGl0YWwgZm9ybWF0aW9uLuKAnQ==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATLnDUiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDk1YmY2ZTYyODgxZWQ1NWE=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNJTk8=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATLsM6SAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/8zMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/+PXCj1wo9</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/8AAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/9mZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/9mZmZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABZdA==</field><field name="id" class="java.lang.String">rO0ABXQAEGMzODNkM2Y1ZThiNjliZDc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mK0sAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE1ODcx</field><field name="title" class="java.lang.String">rO0ABXQAQk1h4oCZcyBBbGliYWJhIFR1cm5zIHRvIFBvdGVudGlhbCBCaWRkZXIgRnJvbSBJbnZlc3RtZW50IGZvciBZYWhvbw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATLIJyCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGRlN2FhYTljN2MwOTU0NTE=</field><field name="symbol" class="java.lang.String">rO0ABXQABkpCWC5CRQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATLNTXyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAtKPXCj1wp</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAtKPXCj1wp</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAtKPXCj1wp</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAtKPXCj1wp</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAsuFHrhR64</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGUyMDdkYzIzMmExNDBkN2U=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHkcAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExNDI3</field><field name="title" class="java.lang.String">rO0ABXQAQUNoaW5hJ3MgQXBwZXRpdGUgZm9yIFBvcmsgU3B1cnMgJDQuNyBCaWxsaW9uIFNtaXRoZmllbGQgRm9vZHMgQnV5</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT7zzoyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI5MTYxNGEwNTI5MmUzMGM=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0NQSU4uSks=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT749OiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECzVgAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEC0HgAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECzVgAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECzVgAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECy7e4UeuFI</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAANUyIA==</field><field name="id" class="java.lang.String">rO0ABXQAEGE4YzM3MGYxOTJkZDMyNzM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGDkAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE1Mzc4</field><field name="title" class="java.lang.String">rO0ABXQAQUNoaW5hJ3MgQXBwZXRpdGUgZm9yIFBvcmsgU3B1cnMgJDQuNyBCaWxsaW9uIFNtaXRoZmllbGQgRm9vZHMgQnV5</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT7zzoyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI5MTYxNGEwNTI5MmUzMGM=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0NQSU4uSks=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT749OiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECzVgAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEC0HgAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECzVgAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECzVgAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECy7e4UeuFI</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAANUyIA==</field><field name="id" class="java.lang.String">rO0ABXQAEDE5ZjQ3ZmZlNzYxYzQ3ODU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKEyAAAQ==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQ4Nzg=</field><field name="title" class="java.lang.String">rO0ABXQAM1VTIE9mZmljaWFscyBQdXNoZWQgUHJvZHVjdHMgRGVlbWVkIFVuc2FmZSBieSBDaGluYQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAS6ZM08AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGE3YTY4ZjY5NjkwZmQxNWI=</field><field name="symbol" class="java.lang.String">rO0ABXQABEtJUks=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAS6eWasAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAuPXCj1wo9</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAueuFHrhR7</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAsTMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAsx64UeuFI</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAsx64UeuFI</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAnr2A==</field><field name="id" class="java.lang.String">rO0ABXQAEDI2NThiNTY4ZjNkNDU0OGU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEB8AAAA==</field></document></documents><date>2015-05-07T06:17:28-0500</date></cacheEntry>
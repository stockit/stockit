<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hBcyB0aGUgVW5pdGVkIFN0YXRlcyBhdHRlbXB0cyB0byBwdW5pc2ggUnVzc2lhIGZvciBpdHMgYWN0aW9ucyBpbiBVa3JhaW5lIHRoZSBUcmVhc3VyeSBEZXBhcnRtZW50IGlzIGRlcGxveWluZyBhbiBlY29ub21pYyB3ZWFwb24gdGhhdCBjb3VsZCBwcm92ZSBtb3JlIGNvc3RseSB0aGFuIHNhbmN0aW9ucyB0aGUgSW50ZXJuYWwgUmV2ZW51ZSBTZXJ2aWNlIFRoaXMgc3VtbWVyIHRoZSBVUyBwbGFucyB0byBzdGFydCB1c2luZyBhIG5ldyBsYXcgdGhhdCB3aWxsIG1ha2UgaXQgbW9yZSBleHBlbnNpdmUgZm9yIFJ1c3NpYW4gYmFua3MgdG8gZG8gYnVzaW5lc3MgaW4gQW1lcmljYSBJdHMgYSBodWdlIGRlYWwgc2F5cyBNYXJrIEUgTWF0dGhld3MgYSBmb3JtZXIgSVJTIGRlcHV0eSBjb21taXNzaW9uZXIgSXQgd291bGQgdGhyb3cgZW5vcm1vdXMgdW5jZXJ0YWludHkgaW50byB0aGUgUnVzc2lhbiBiYW5raW5nIGNvbW11bml0eSBMb25nIGJlZm9yZSB0aGUgVWtyYWluZSBjcmlzaXMgQ29uZ3Jlc3MgYXBwcm92ZWQgdGhlIGxhdyBpbiAyMDEwIHRvIGN1cmIgdGF4IGV2YXNpb24gdGhhdCByZWxpZXMgb24gb3ZlcnNlYXMgYWNjb3VudHMgTm93IGJlZ2lubmluZyBpbiBKdWx5IFVTIGJhbmtzIHdpbGwgYmUgcmVxdWlyZWQgdG8gc3RhcnQgd2l0aGhvbGRpbmcgYSAzMCBwZXJjZW50IHRheCBvbiBjZXJ0YWluIHBheW1lbnRzIHRvIGZpbmFuY2lhbCBpbnN0aXR1dGlvbnMgaW4gb3RoZXIgY291bnRyaWVzIHVubGVzcyB0aG9zZSBmb3JlaWduIGJhbmtzIGhhdmUgYWdyZWVtZW50cyBpbiBwbGFjZSB0byBzaGFyZSBpbmZvcm1hdGlvbiBhYm91dCBVUyBhY2NvdW50IGhvbGRlcnMgd2l0aCB0aGUgSVJTIFRoZSB3aXRoaG9sZGluZyBhcHBsaWVzIG1haW5seSB0byBpbnZlc3RtZW50IGluY29tZSBSdXNzaWEgYW5kIGRvemVucyBvZiBvdGhlciBjb3VudHJpZXMgaGF2ZSBiZWVuIG5lZ290aWF0aW5nIGluZm9ybWF0aW9uc2hhcmluZyBhZ3JlZW1lbnRzIHdpdGggdGhlIFVTIGluIGFuIGVmZm9ydCB0byBzcGFyZSB0aGVpciBiYW5rcyBmcm9tIHN1Y2ggaGFyc2ggcGVuYWx0aWVzIEJ1dCBhZnRlciBSdXNzaWEgYW5uZXhlZCBDcmltZWEgYW5kIHdhcyBzZWVuIGFzIHN0b2tpbmcgc2VwYXJhdGlzdCBtb3ZlbWVudHMgaW4gZWFzdGVybiBVa3JhaW5lIHRoZSBUcmVhc3VyeSBEZXBhcnRtZW50IHF1aWV0bHkgc3VzcGVuZGVkIG5lZ290aWF0aW9ucyBpbiBNYXJjaCBXaXRoIHRoZSBKdWx5IDEgZGVhZGxpbmUgYXBwcm9hY2hpbmcgUnVzc2lhbiBiYW5rcyBhcmUgbm93IGNvbmNlcm5lZCB0aGF0IHRoZSBwcmljZSBvZiBpbnZlc3RpbmcgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgaXMgYWJvdXQgdG8gZ28gdXAgVGhlIG5ldyBsYXcgbWVhbnMgdGhhdCBSdXNzaWFuIGJhbmtzIHRoYXQgYnV5IFVTIHNlY3VyaXRpZXMgYWZ0ZXIgSnVseSAxIHdpbGwgZm9yZmVpdCAzMCBwZXJjZW50IG9mIHRoZSBpbnRlcmVzdCBhbmQgZGl2aWRlbmQgcGF5bWVudHMgVGhlIHdpdGhob2xkaW5nIGFwcGxpZXMgdG8gc3RvY2tzIGFuZCBib25kcyBpbmNsdWRpbmcgVVMgVHJlYXN1cnlzIFNvbWUgcHJldmlvdXNseSBvd25lZCBzZWN1cml0aWVzIHdvdWxkIGJlIGV4ZW1wdCBmcm9tIHRoZSB3aXRoaG9sZGluZyBidXQgaW4gZ2VuZXJhbCBwcmV2aW91c2x5IG93bmVkIHN0b2NrcyB3b3VsZCBub3QgUHJpdmF0ZSBpbnZlc3RvcnMgd2hvIHVzZSBSdXNzaWFuIGZpbmFuY2lhbCBpbnN0aXR1dGlvbnMgdG8gZmFjaWxpdGF0ZSB0cmFkZXMgYWxzbyBmYWNlIHRoZSB3aXRoaG9sZGluZyBwZW5hbHR5IFRob3NlIHByaXZhdGUgaW52ZXN0b3JzIGNvdWxkIGxhdGVyIGFwcGx5IHRvIHRoZSBJUlMgZm9yIHJlZnVuZHMgYnV0IHRoZSBpbmNvbnZlbmllbmNlIHdvdWxkIGJlIGVub3Jtb3VzIEl0cyBhIGJpZyBwcm9ibGVtIGZvciB0aGVtIHNhaWQgTWF0dGhld3Mgd2hvIGlzIG5vdyBhIGxhd3llciBhdCBDYXBsaW4gIERyeXNkYWxlIGEgdGF4IGZpcm0gYmFzZWQgaW4gV2FzaGluZ3RvbiBJdCBkZWNyZWFzZXMgdGhlaXIgY29tcGV0aXRpdmVuZXNzIGFuZCB0aGV5IG1heSBoYXZlIGNhcGl0YWwgZmxpZ2h0IGVsc2V3aGVyZSBUaGUgVVMgYW5kIFJ1c3NpYSBhcmUgc2lnbmlmaWNhbnQgdHJhZGluZyBwYXJ0bmVycyB0aG91Z2ggbm90IGFsbCB0cmFuc2FjdGlvbnMgd291bGQgYmUgc3ViamVjdCB0byB3aXRoaG9sZGluZyBMYXN0IHllYXIgdGhlIFVTIGltcG9ydGVkIDI3IGJpbGxpb24gaW4gZ29vZHMgZnJvbSBSdXNzaWEgd2hpY2ggcmFua2VkIDE4dGggYW1vbmcgaW1wb3J0ZXJzIHRvIHRoZSBVUyBhY2NvcmRpbmcgdG8gdGhlIENlbnN1cyBCdXJlYXUgVGhlIFVTIGV4cG9ydGVkIDExIGJpbGxpb24gaW4gZ29vZHMgdG8gUnVzc2lhIFRoZSB3aXRoaG9sZGluZyB3b3VsZCBleHBhbmQgaW4gMjAxNyBpZiB0aGVyZSB3YXMgc3RpbGwgbm8gaW5mb3JtYXRpb25zaGFyaW5nIGFncmVlbWVudCBBdCB0aGF0IHBvaW50IGlmIGludmVzdG9ycyBzb2xkIHN0b2NrcyBvciBib25kcyBVUyBiYW5rcyB3b3VsZCBiZSByZXF1aXJlZCB0byB3aXRoaG9sZCBhIDMwIHBlcmNlbnQgdGF4IG9uIHRoZSBncm9zcyBwcm9jZWVkcyBmcm9tIHRob3NlIHNhbGVzIFRoZSBsYXcgd291bGQgYWxzbyBzbmFnIGJpZyBnbG9iYWwgYmFua3Mgd2l0aCBzdWJzaWRpYXJpZXMgdGhhdCBkb250IGhhdmUgYWdyZWVtZW50cyB3aXRoIHRoZSBJUlMgdG8gc2hhcmUgaW5mb3JtYXRpb24gQXQgZmlyc3QgdGhlIHdpdGhob2xkaW5nIGNvdWxkIGJlIGxpbWl0ZWQgdG8gdGhlIHN1YnNpZGlhcmllcyBCdXQgZXZlbnR1YWxseSBpZiBhbnkgcGFydCBvZiBhIGxhcmdlIGdsb2JhbCBiYW5rIHJlZnVzZWQgdG8gY29tcGx5IHdpdGggdGhlIGluZm9ybWF0aW9uc2hhcmluZyByZXF1aXJlbWVudHMgdGhlIGVudGlyZSBiYW5rIHdvdWxkIGJlIHBlbmFsaXplZCBUaGF0IGtlZXBzIGFuIGluc3RpdHV0aW9uIGZyb20gZGVjaWRpbmcgdGhhdCBpdHMgZ29pbmcgdG8gcmVnaXN0ZXIgaXRzIGVudGl0eSBpbiBHZXJtYW55IGJ1dCBub3QgcmVnaXN0ZXIgdGhlIGVudGl0eSBpdCBoYXMgaW4gU3dpdHplcmxhbmQgc2FpZCBEZW5pc2UgSGludHprZSBvZiBEZWxvaXR0ZSBUYXggSXQgd291bGQgYWxzbyBwcm92aWRlIGEgdHJlbWVuZG91cyBkaXNpbmNlbnRpdmUgZm9yIGxhcmdlIGdsb2JhbCBiYW5rcyB0byBkbyBidXNpbmVzcyBpbiBjb3VudHJpZXMgd2hlcmUgdGhleSBjYW50IHNoYXJlIGluZm9ybWF0aW9uIHdpdGggVVMgYXV0aG9yaXRpZXMgTW9yZSB0aGFuIDUwIGNvdW50cmllcyBoYXZlIHJlYWNoZWQgYWdyZWVtZW50cyB3aXRoIHRoZSBVUyB0byBzaGFyZSB0YXggaW5mb3JtYXRpb24gYWJvdXQgVVMgYWNjb3VudCBob2xkZXJzIFRoZSBsaXN0IGluY2x1ZGVzIGNvdW50cmllcyBmYW1vdXMgZm9yIGJhbmsgc2VjcmVjeSBzdWNoIGFzIFN3aXR6ZXJsYW5kIGFuZCB0aGUgQ2F5bWFuIElzbGFuZHMgRm9yIFJ1c3NpYSB0aGUgcGVuYWx0aWVzIGNvdWxkIGJlIG1vcmUgZGFtYWdpbmcgdG8gaXRzIGVjb25vbXkgdGhhbiBVUyBzYW5jdGlvbnMgc2FpZCBCcmlhbiBMIFppbWJsZXIgbWFuYWdpbmcgcGFydG5lciBvZiB0aGUgTW9zY293IG9mZmljZSBvZiBNb3JnYW4gTGV3aXMgYW4gaW50ZXJuYXRpb25hbCBsYXcgZmlybSBJZiBzYW5jdGlvbnMgYXJlIGdvaW5nIHRvIGJlIGxpbWl0ZWQgdG8gY2VydGFpbiB0YXJnZXRlZCBpbmRpdmlkdWFscyBhbmQgYmFua3Mgd2hlcmUgdGhpcyBhcHBsaWVzIHRvIGV2ZXJ5Ym9keSBpbiB0aGUgbWFya2V0IHllcyBJIHRoaW5rIHRoaXMgY291bGQgcG90ZW50aWFsbHkgYmUgd29yc2UgdGhhbiBzYW5jdGlvbnMgZm9yIHRoZSBSdXNzaWFucyBaaW1ibGVyIHNhaWQgVGhlIDIwMTAgbGF3IGlzIGtub3duIGFzIEZBVENBIHdoaWNoIHN0YW5kcyBmb3IgdGhlIEZvcmVpZ24gQWNjb3VudCBUYXggQ29tcGxpYW5jZSBBY3QgSXQgd2FzIGRlc2lnbmVkIHRvIGVuY291cmFnZSBzb21lIHNheSBmb3JjZSBmb3JlaWduIGJhbmtzIHRvIHNoYXJlIGluZm9ybWF0aW9uIGFib3V0IFVTIGFjY291bnQgaG9sZGVycyB3aXRoIHRoZSBJUlMgbWFraW5nIGl0IG1vcmUgZGlmZmljdWx0IGZvciBBbWVyaWNhbnMgdG8gdXNlIG92ZXJzZWFzIGFjY291bnRzIHRvIGV2YWRlIFVTIHRheGVzIFVuZGVyIHRoZSBsYXcgVVMgYmFua3MgdGhhdCBmYWlsIHRvIHdpdGhob2xkIHRoZSB0YXggd291bGQgYmUgbGlhYmxlIGZvciBpdCB0aGVtc2VsdmVzIGEgcG93ZXJmdWwgaW5jZW50aXZlIHRvIGNvbXBseSBPbiBGcmlkYXkgdGhlIFRyZWFzdXJ5IERlcGFydG1lbnQgaXNzdWVkIGd1aWRhbmNlIHNheWluZyBpdCB3aWxsIGdpdmUgVVMgYmFua3MgYSB0ZW1wb3JhcnkgcmVwcmlldmUgQXMgbG9uZyBhcyBVUyBiYW5rcyBtYWtlIGEgZ29vZGZhaXRoIGVmZm9ydCB0byB3aXRoaG9sZCB0aGUgcHJvcGVyIHRheCB0aGV5IHdvbnQgYmUgbGlhYmxlIGZvciBtaXN0YWtlcyB1bnRpbCAyMDE2IFRoZSBnb2FsIG9mIHRoZSBsYXcgd2FzIHRvIHNldCB1cCBhIHBlbmFsdHkgc28gaGFyc2ggdGhhdCBmb3JlaWduIGJhbmtzIHdvdWxkIGhhdmUgbGl0dGxlIGNob2ljZSBidXQgdG8gc2hhcmUgaW5mb3JtYXRpb24gd2l0aCBVUyBhdXRob3JpdGllcyBNYXR0aGV3cyBzYWlkIFdpdGhob2xkaW5nIGlzIGEgZmFpbHVyZSBvZiB0aGUgc3lzdGVtIE1hdHRoZXdzIHNhaWQgV2l0aGhvbGRpbmcgd2FzIGp1c3QgYSBiaWcgc3RpY2sgb3V0IHRoZXJlIE5vIG9uZSBob3BlZCB0aGF0IHdvdWxkIGhhcHBlbiBUaGUgVHJlYXN1cnkgRGVwYXJ0bWVudCBzYWlkIFJ1c3NpYW4gYmFua3MgY2FuIHN0aWxsIGFwcGx5IG9uIHRoZWlyIG93biB0byBzaGFyZSBpbmZvcm1hdGlvbiBhYm91dCBVUyBhY2NvdW50IGhvbGRlcnMgZGlyZWN0bHkgd2l0aCB0aGUgSVJTIEJ1dCB0aG9zZSBiYW5rcyBtYXkgcmlzayB2aW9sYXRpbmcgbG9jYWwgcHJpdmFjeSBsYXdzIGJ5IHNoYXJpbmcgc3VjaCBpbmZvcm1hdGlvbiB3aXRoIGEgZm9yZWlnbnQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AHVhcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLHNjb3JlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMC0wNi0xMVQwMDowMDowMFogVE8gMjAxMy0wNy0zMVQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTEyMzYx</field><field name="title" class="java.lang.String">rO0ABXQAMUJhbmtzIEZpZ2h0IEZlZCdzIFB1c2ggdG8gTWFrZSBUaGVtIExlc3MgRW50d2luZWQ=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATgiAriAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDVjM2YwNmQ5MGYxYTU2Yjc=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lDQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATgnKRSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyEeuFHrhS</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyEeuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAx/XCj1wo9</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyCj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwI9cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABsmA==</field><field name="id" class="java.lang.String">rO0ABXQAEDg1MjdhZjNlNWQxZGY5NGI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKU4AAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPy2D4g==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExMjk0</field><field name="title" class="java.lang.String">rO0ABXQAMUFwcGxlIENvbnRyb3ZlcnN5IExheXMgQmFyZSBDb21wbGV4IElyaXNoIFRheCBXZWI=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT/gsxSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDhhYzg2NDIwNWE4ZjdhZTU=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0JTWA==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT/l2XCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAjLhR64Ueu</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAjPXCj1wo9</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAi1wo9cKPX</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAi8KPXCj1x</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAi8KPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAGEhPA==</field><field name="id" class="java.lang.String">rO0ABXQAEGNhMGMyNGMwOWZmOWU3OTk=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mLvhAAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPyswig==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIxNDY2</field><field name="title" class="java.lang.String">rO0ABXQAOVN0YW5kYXJkIENoYXJ0ZXJlZOKAmXMgTlkgUHJvYmUgRW5kcyBhcyBVUyBJbnF1aXJpZXMgTG9vbQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATkopwyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDY4N2ZlNGU2YWZhMDEzYzY=</field><field name="symbol" class="java.lang.String">rO0ABXQABFdJUkU=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATktzWiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA8DMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA9Ao9cKPXD</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA8DMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA9AAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA82ZmZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAADhZA==</field><field name="id" class="java.lang.String">rO0ABXQAEDA4YWEwYWJmZDBmYmEzODA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mH/AAAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPySGDg==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM2NDE=</field><field name="title" class="java.lang.String">rO0ABXQALlJ1c3NpYW4gTW9uZXkgaW4gQ3lwcnVzIEhpdCBieSBTYXZpbmdzIFNlaXp1cmU=</field><field name="content" class="java.lang.String">rO0ABXQQQ0N5cHJ1cyBoYXMgZm9yIGRlY2FkZXMgYmVlbiBhIGZhdm9yaXRlIHBsYWNlIGZvciBSdXNzaWFuIGJ1c2luZXNzbWVuIHRvIHBsYWNlIHRoZWlyIHNhdmluZ3MgYW5kIGZvciBjb3JydXB0IFJ1c3NpYW4gb2ZmaWNpYWxzIHRvIHN0YXNoIGlsbC1nb3R0ZW4gZ2FpbnMuIExpa2UgYWxsIGRlcG9zaXRzIGluIEN5cHJ1cywgdGhhdCBtb25leSBpcyBleHBlY3RlZCB0byBiZSB0YXhlZCBhcyBwYXJ0IG9mIGEgYmFpbG91dCBkZWFsIHRoYXQgQ3lwcnVzIGlzIHJlY2VpdmluZyBmcm9tIGl0cyBmZWxsb3cgbWVtYmVycyBpbiB0aGUgZXVyb3pvbmUuIFJ1c3NpYW4gUHJlc2lkZW50IFZsYWRpbWlyIFB1dGluIG9uIE1vbmRheSBjcml0aWNpemVkIHRoZSBkZWNpc2lvbiBhcyAidW5qdXN0LCB1bnByb2Zlc3Npb25hbCBhbmQgZGFuZ2Vyb3VzLCIgYWNjb3JkaW5nIHRvIGhpcyBzcG9rZXNtYW4uIEhlcmUncyBhIGdsYW5jZSBhdCB3aHkgUnVzc2lhbnMga2VlcCBzbyBtdWNoIG1vbmV5IGluIEN5cHJpb3QgYmFua3MgYW5kIGhvdyBSdXNzaWEgY2FuIGJlIGFmZmVjdGVkIGJ5IHRoZSBpc2xhbmQgbmF0aW9uJ3MgY3Jpc2lzLiBIT1cgTVVDSCBNT05FWSBETyBSVVNTSUFOUyBLRUVQIElOIENZUFJVUz8gUnVzc2lhbnMga2VlcCBhYm91dCAkMTkgYmlsbGlvbiBpbiBkZXBvc2l0cyBpbiBDeXBydXMsIG1haW5seSB0aHJvdWdoIGNvbXBhbmllcyB0aGV5IHNldCB1cCB0aGVyZSwgYWNjb3JkaW5nIHRvIHRoZSBNb29keSdzIHJhdGluZ3MgYWdlbmN5LiBSdXNzaWFuIGJhbmtzIGFsc28gaGFkIGFyb3VuZCAkMTIgYmlsbGlvbiBwbGFjZWQgd2l0aCBDeXByaW90IGJhbmtzIGF0IHRoZSBlbmQgb2YgbGFzdCB5ZWFyIGFuZCBoYXZlIGxvYW5lZCBhYm91dCAkNDAgYmlsbGlvbiB0byBDeXByaW90IGNvbXBhbmllcyBvZiBSdXNzaWFuIG9yaWdpbi4gCgpXSFkgRE8gUlVTU0lBTlMgS0VFUCBTTyBNVUNIIE1PTkVZIElOIENZUFJVUz8gUnVzc2lhIGJvYXN0cyBzb21lIG9mIHRoZSB3b3JsZCdzIGxvd2VzdCBpbmNvbWUgYW5kIGNvcnBvcmF0ZSB0YXhlcyDigJQgYm90aCBmbGF0IGF0IDEzIHBlcmNlbnQuIEJ1dCBvdmVyIHRoZSBwYXN0IHR3byBkZWNhZGVzLCBSdXNzaWFuIGJ1c2luZXNzbWVuIGhhdmUgcHJlZmVycmVkIHRvIHBsYWNlIHRoZWlyIHNhdmluZ3MgaW4gb2Zmc2hvcmUsIHBhcnRseSB0byBlc2NhcGUgcG9saXRpY2FsIHVuY2VydGFpbnR5IGFuZCBjb3JydXB0aW9uIGluIFJ1c3NpYS4gQ3lwcnVzIG9mZmVycyBhIDEwIHBlcmNlbnQgY29ycG9yYXRlIHRheCByYXRlIGFuZCByZWxhdGl2ZWx5IHN0YWJsZSBwb2xpdGljYWwgc2l0dWF0aW9uLiBDeXBydXMgaXMgYWxzbyBiZWxpZXZlZCB0byBiZSBhIHRvcCBkZXN0aW5hdGlvbiBmb3IgbW9uZXktbGF1bmRlcmluZy4gSXQgaXMgbXVjaCBzYWZlciBmb3IgYSBjb3JydXB0IFJ1c3NpYW4gb2ZmaWNpYWwgdG8ga2VlcCBwcm9jZWVkcyBmcm9tIGlsbGVnYWwgYWN0aXZpdGllcyBhYnJvYWQsIGhpZGluZyBpbmZvcm1hdGlvbiBhYm91dCB0aGVpciBmb3J0dW5lcyBhbmQgaG9sZGluZ3MgYXdheSBmcm9tIHRoZSBwcnlpbmcgZXllcyBvZiBSdXNzaWFuIGJhbmtpbmcgcmVndWxhdG9ycy4gUnVzc2lhbiBvZmZpY2lhbHMgZXN0aW1hdGVkIHRoYXQgYWJvdXQgJDQ5IGJpbGxpb24sIHdoaWNoIGlzIGVxdWl2YWxlbnQgdG8gMi41IHBlcmNlbnQgb2YgUnVzc2lhJ3MgZ3Jvc3MgZG9tZXN0aWMgcHJvZHVjdCwgd2FzIHdpcmVkIHRvIGZvcmVpZ24gYWNjb3VudHMgaWxsZWdhbGx5IGxhc3QgeWVhci4gU2VyZ2VpIElnbmF0eWV2LCBvdXRnb2luZyBjaGllZiBvZiB0aGUgUnVzc2lhbiBDZW50cmFsIEJhbmssIGhhcyBzYWlkIHRoYXQgdGhlc2UgdHJhbnNmZXJzIG1pZ2h0IGJlIGxpbmtlZCB0byBkcnVnIHRyYWZmaWNraW5nIGFuZCBjb3JydXB0aW9uIGFjdGl2aXRpZXMuIERPIE9SRElOQVJZIFJVU1NJQU5TIEtFRVAgTU9ORVkgSU4gQ1lQUlVTPyBObywgbWlkZGxlLWNsYXNzIFJ1c3NpYW5zIG1haW5seSBrZWVwIHRoZWlyIHNhdmluZ3MgYW5kIGludmVzdG1lbnRzIGF0IGhvbWUuIEhPVyBDT1VMRCBERVZFTE9QTUVOVFMgSU4gQ1lQUlVTIEFGRkVDVCBSVVNTSUEnUyBFQ09OT01ZPyBUZW5zIG9mIGJpbGxpb25zIG9mIGRvbGxhcnMgaGF2ZSBsZWZ0IFJ1c3NpYSBpbiByZWNlbnQgeWVhcnMsIG1haW5seSBiZWNhdXNlIGJ1c2luZXNzbWVuIGFyZSBhbnhpb3VzIGFib3V0IFJ1c3NpYSdzIHBvbGl0aWNzIGFuZCBjb3JydXB0aW9uLCBhbmFseXN0cyBzYXkuIFJ1c3NpYW4gb2ZmaWNpYWxzLCBob3dldmVyLCBkbyBub3QgZXhwZWN0IHRyb3VibGVzIGluIEN5cHJ1cyB0byBicmluZyB0aGUgbW9uZXkgYmFjayBob21lLiBEZXB1dHkgRWNvbm9taWMgTWluaXN0ZXIgQW5kcmVpIEtsZXBhY2ggc2FpZCBNb25kYXkgdGhhdCBoZSBkb2VzIG5vdCB0aGluayB0aGF0IGRldmVsb3BtZW50cyBpbiBDeXBydXMgd2lsbCBhZmZlY3QgY2FwaXRhbCBmbG93cyBpbiBlaXRoZXIgZGlyZWN0aW9uLiBNb3JlIHRoYW4gJDU2IGJpbGxpb24gd2FzIHRyYW5zZmVycmVkIGZyb20gUnVzc2lhIHRvIG90aGVyIGNvdW50cmllcyBsYXN0IHllYXIuIFdIQVQgQVJFIFRIRSBEQU5HRVJTIEZPUiBSVVNTSUFOIEJBTktTPyBSdXNzaWFuIGJhbmtzIGhhdmUgZ2l2ZW4gbG9hbnMgd29ydGggYWJvdXQgJDQwIGJpbGxpb24gdG8gQ3lwcnVzLWJhc2VkIGNvbXBhbmllcyBvZiBSdXNzaWFuIG9yaWdpbiwgYWNjb3JkaW5nIHRvIE1vb2R5J3MuIElmIGludmVzdG9ycyBzdGFydCBwdWxsaW5nIGJpZyBzdW1zIG9mIG1vbmV5IG91dCBvZiBDeXBydXMsIHRoZSBnb3Zlcm5tZW50IHRoZXJlIGNvdWxkIGZyZWV6ZSBjYXBpdGFsIGZsb3dzLiBUaGF0IHdvdWxkIGJsb2NrIGxvYW4gcmVwYXltZW50cyB0byB0aGUgUnVzc2lhbiBiYW5rcy4gSXZhbiBUY2hha2Fyb3YsIGNoaWVmIGVjb25vbWlzdCBhdCB0aGUgTW9zY293LWJhc2VkIFJlbmFpc3NhbmNlIENhcGl0YWwgaW52ZXN0bWVudCBiYW5rLCBzYWlkIGluIGEgbW9ybmluZyBub3RlIHRvIGludmVzdG9ycyB0aGF0IGlmIEN5cHJ1cyB3ZXJlIHRvIGltcG9zZSBjYXBpdGFsIGNvbnRyb2xzLCAiUnVzc2lhbiBiYW5rcyBjb3VsZCBmYWNlIHNpZ25pZmljYW50IGxvc3NlcyBhbW91bnRpbmcgdG8gYWxtb3N0IDIgcGVyY2VudCBvZiB0aGUgR0RQLiIgQ0FOIFJVU1NJQSBIRUxQIEJBSUwgQ1lQUlVTIE9VVD8gUnVzc2lhIGhhcyBsb2FuZWQgQ3lwcnVzIG1vbmV5IGJlZm9yZS4gVGhlIGlzbGFuZCBuYXRpb24gaXMgbm93IGFueGlvdXMgdG8gZGVsYXkgcGF5bWVudHMgZm9yIGEgMjAxMSBsb2FuIG9mIDIuNSBiaWxsaW9uIGV1cm9zICgkMy4yIGJpbGxpb24pIGl0IHJlY2VpdmVkIGZyb20gTW9zY293LiBDeXBydXMgaXMgYWxzbyBzZWVraW5nIGEgbmV3IOKCrDIgYmlsbGlvbiBsb2FuIGZyb20gUnVzc2lhLiBQdXRpbiBoYXMgc2FpZCBSdXNzaWEgd291bGQgYmUgd2lsbGluZyB0byBoZWxwIEN5cHJ1cyBvbmNlIGEgRXVyb3BlYW4gcmVzY3VlIHBhY2thZ2UgaXMgaW4gcGxhY2UsIGJ1dCBtYW55IHNlbmlvciBjYWJpbmV0IG1pbmlzdGVycyBoYXZlIHNwb2tlbiBzdHJvbmdseSBhZ2FpbnN0IGxlbmRpbmcgbW9uZXkgdG8gQ3lwcnVzLiBGaW5hbmNlIE1pbmlzdGVyIEFudG9uIFNpbHVhbm92LCB3aG8gaXMgZXhwZWN0ZWQgdG8gaG9zdCBoaXMgQ3lwcmlvdCBjb3VudGVycGFydCBvbiBXZWRuZXNkYXkgZm9yIGxvYW4gdGFsa3MsIHNhaWQgbGFzdCB3ZWVrIHRoYXQgUnVzc2lhIG1heSBpbiBleGNoYW5nZSBhc2sgQ3lwcnVzIGZvciBpbmZvcm1hdGlvbiBvbiB0aGUgQ3lwcmlvdCBjb21wYW5pZXMgcmVnaXN0ZXJlZCBieSBSdXNzaWFucy4gU2lsdWFub3Ygb24gTW9uZGF5IGNvbXBsYWluZWQgdGhhdCBSdXNzaWEgaGFkIG5vdCBiZWVuIGluZm9ybWVkIG9mIHRoZSBkZWNpc2lvbiB0byBsZXZ5IGEgdGF4IG9uIGRlcG9zaXRzIGRlc3BpdGUgYW4gYWdyZWVtZW50IGZvciBSdXNzaWEgYW5kIHRoZSBFVSB0byBjb29yZGluYXRlIHRoZWlyIGVmZm9ydHMuIFNpbHVhbm92IHNhaWQgdGhhdCB0aGUgbWluaXN0cnkgd2lsbCBoYXZlIHRvIHJlY29uc2lkZXIgd2hldGhlciB0byBwcm92aWRlIEN5cHJ1cyB3aXRoIGZpbmFuY2lhbCBhaWQgImluIHRoZSBsaWdodCBvZiB0aGUgbmV3IHNpdHVhdGlvbi4i</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT173lCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGIzOTE1ZTdlMTEzNjk0M2U=</field><field name="symbol" class="java.lang.String">rO0ABXQABExPQU4=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT2BBKyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/2ZmZmZmZm</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/3hR64UeuF</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/0o9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/3Cj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/09cKPXCj2</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAgbA==</field><field name="id" class="java.lang.String">rO0ABXQAEGU1OTdkNjk0NmEyMjdhN2I=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGw2AAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPyD8Kw==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIwNDA2</field><field name="title" class="java.lang.String">rO0ABXQAP0dvb2dsZSBSZXZlbnVlcyBTaGVsdGVyZWQgaW4gTm8tVGF4IEJlcm11ZGEgU29hciB0byAkMTAgQmlsbGlvbg==</field><field name="content" class="java.lang.String">rO0ABXQZz0dvb2dsZSBJbmMuIGF2b2lkZWQgYWJvdXQgJDIgYmlsbGlvbiBpbiB3b3JsZHdpZGUgaW5jb21lIHRheGVzIGluIDIwMTEgYnkgc2hpZnRpbmcgJDkuOCBiaWxsaW9uIGluIHJldmVudWVzIGludG8gYSBCZXJtdWRhIHNoZWxsIGNvbXBhbnksIGFsbW9zdCBkb3VibGUgdGhlIHRvdGFsIGZyb20gdGhyZWUgeWVhcnMgYmVmb3JlLCBmaWxpbmdzIHNob3cuIEJ5IGxlZ2FsbHkgZnVubmVsaW5nIHByb2ZpdHMgZnJvbSBvdmVyc2VhcyBzdWJzaWRpYXJpZXMgaW50byBCZXJtdWRhLCB3aGljaCBkb2VzbuKAmXQgaGF2ZSBhIGNvcnBvcmF0ZSBpbmNvbWUgdGF4LCBHb29nbGUgY3V0IGl0cyBvdmVyYWxsIHRheCByYXRlIGFsbW9zdCBpbiBoYWxmLiBUaGUgYW1vdW50IG1vdmVkIHRvIEJlcm11ZGEgaXMgZXF1aXZhbGVudCB0byBhYm91dCA4MCBwZXJjZW50IG9mIEdvb2dsZeKAmXMgdG90YWwgcHJldGF4IHByb2ZpdCBpbiAyMDExLiBUaGUgaW5jcmVhc2UgaW4gR29vZ2xl4oCZcyByZXZlbnVlcyByb3V0ZWQgdG8gQmVybXVkYSwgZGlzY2xvc2VkIGluIGEgTm92LiAyMSBmaWxpbmcgYnkgYSBzdWJzaWRpYXJ5IGluIHRoZSBOZXRoZXJsYW5kcywgY291bGQgZnVlbCB0aGUgb3V0cmFnZSBzcHJlYWRpbmcgYWNyb3NzIEV1cm9wZSBhbmQgaW4gdGhlIFUuUy4gb3ZlciBjb3Jwb3JhdGUgdGF4IGRvZGdpbmcuIEdvdmVybm1lbnRzIGluIEZyYW5jZSwgdGhlIFUuSy4sIEl0YWx5IGFuZCBBdXN0cmFsaWEgYXJlIHByb2JpbmcgR29vZ2xl4oCZcyB0YXggYXZvaWRhbmNlIGFzIHRoZXkgc2VlayB0byBib29zdCByZXZlbnVlIGR1cmluZyBlY29ub21pYyBkb2xkcnVtcy4gTGFzdCB3ZWVrLCB0aGUgRXVyb3BlYW4gVW5pb27igJlzIGV4ZWN1dGl2ZSBib2R5LCB0aGUgRXVyb3BlYW4gQ29tbWlzc2lvbiwgYWR2aXNlZCBtZW1iZXIgc3RhdGVzIHRvIGNyZWF0ZSBibGFja2xpc3RzIG9mIHRheCBoYXZlbnMgYW5kIGFkb3B0IGFudGktYWJ1c2UgcnVsZXMuIFRheCBldmFzaW9uIGFuZCBhdm9pZGFuY2UsIHdoaWNoIGNvc3QgdGhlIEVVIDEgdHJpbGxpb24gZXVyb3MgKCQxLjMgdHJpbGxpb24pIGEgeWVhciwgYXJlIOKAnHNjYW5kYWxvdXPigJ0gYW5kIOKAnGFuIGF0dGFjayBvbiB0aGUgZnVuZGFtZW50YWwgcHJpbmNpcGxlIG9mIGZhaXJuZXNzLOKAnSBBbGdpcmRhcyBTZW1ldGEsIHRoZSBFQ+KAmXMgY29tbWlzc2lvbmVyIGZvciB0YXhhdGlvbiwgc2FpZCBhdCBhIHByZXNzIGNvbmZlcmVuY2UgaW4gQnJ1c3NlbHMuIOKAmERlZXAgRW1iYXJyYXNzbWVudOKAmSDigJxUaGUgdGF4IHN0cmF0ZWd5IG9mIEdvb2dsZSBhbmQgb3RoZXIgbXVsdGluYXRpb25hbHMgaXMgYSBkZWVwIGVtYmFycmFzc21lbnQgdG8gZ292ZXJubWVudHMgYXJvdW5kIEV1cm9wZSzigJ0gc2FpZCBSaWNoYXJkIE11cnBoeSwgYW4gYWNjb3VudGFudCBhbmQgZGlyZWN0b3Igb2YgVGF4IFJlc2VhcmNoIExMUCBpbiBOb3Jmb2xrLCBFbmdsYW5kLiDigJxUaGUgcG9saXRpY2FsIGF3YXJlbmVzcyBub3cgYmVpbmcgY3JlYXRlZCBpbiB0aGUgVS5LLiwgYW5kIHRvIGEgbGVzc2VyIGRlZ3JlZSBlbHNld2hlcmUgaW4gRXVyb3BlLCBpczogSXTigJlzIHVzIG9yIHRoZW0uIFBlb3BsZSB1bmRlcnN0YW5kIHRoYXQgaWYgR29vZ2xlIGRvZXNu4oCZdCBwYXksIHNvbWVib2R5IGVsc2UgaGFzIHRvIHBheSBvciBzZXJ2aWNlcyBnZXQgY3V0LuKAnSBHb29nbGUgc2FpZCBpdCBjb21wbGllcyB3aXRoIGFsbCB0YXggcnVsZXMsIGFuZCBpdHMgaW52ZXN0bWVudCBpbiB2YXJpb3VzIEV1cm9wZWFuIGNvdW50cmllcyBoZWxwcyB0aGVpciBlY29ub21pZXMuIEluIHRoZSBVLksuLCDigJx3ZSBhbHNvIGVtcGxveSBvdmVyIDIsMDAwIHBlb3BsZSwgaGVscCBodW5kcmVkcyBvZiB0aG91c2FuZHMgb2YgYnVzaW5lc3NlcyB0byBncm93IG9ubGluZSwgYW5kIGludmVzdCBtaWxsaW9ucyBzdXBwb3J0aW5nIG5ldyB0ZWNoIGJ1c2luZXNzZXMgaW4gRWFzdCBMb25kb24s4oCdIHRoZSBNb3VudGFpbiBWaWV3LCBDYWxpZm9ybmlhLWJhc2VkIGNvbXBhbnkgc2FpZCBpbiBhIHN0YXRlbWVudC4gVGhlIEludGVybmV0IHNlYXJjaCBnaWFudCBoYXMgYXZvaWRlZCBiaWxsaW9ucyBvZiBkb2xsYXJzIGluIGluY29tZSB0YXhlcyBhcm91bmQgdGhlIHdvcmxkIHVzaW5nIGEgcGFpciBvZiB0YXggc2hlbHRlciBzdHJhdGVnaWVzIGtub3duIGFzIHRoZSBEb3VibGUgSXJpc2ggYW5kIER1dGNoIFNhbmR3aWNoLCBCbG9vbWJlcmcgTmV3cyByZXBvcnRlZCBpbiAyMDEwLiBUaGUgdGFjdGljcywgcGVybWl0dGVkIHVuZGVyIHRheCBsYXcgaW4gdGhlIFUuUy4gYW5kIGVsc2V3aGVyZSwgbW92ZSByb3lhbHR5IHBheW1lbnRzIGZyb20gc3Vic2lkaWFyaWVzIGluIElyZWxhbmQgYW5kIHRoZSBOZXRoZXJsYW5kcyB0byBhIEJlcm11ZGEgdW5pdCBoZWFkcXVhcnRlcmVkIGluIGEgbG9jYWwgbGF3IGZpcm0uIExhc3QgeWVhciwgR29vZ2xlIHJlcG9ydGVkIGEgdGF4IHJhdGUgb2YganVzdCAzLjIgcGVyY2VudCBvbiB0aGUgcHJvZml0IGl0IHNhaWQgd2FzIGVhcm5lZCBvdmVyc2VhcywgZXZlbiBhcyBtb3N0IG9mIGl0cyBmb3JlaWduIHNhbGVzIHdlcmUgaW4gRXVyb3BlYW4gY291bnRyaWVzIHdpdGggY29ycG9yYXRlIGluY29tZSB0YXggcmF0ZXMgcmFuZ2luZyBmcm9tIDI2IHBlcmNlbnQgdG8gMzQgcGVyY2VudC4gRm9yZWlnbiBUYXhlcyBBdCBhIGhlYXJpbmcgbGFzdCBtb250aCBpbiB0aGUgVS5LLiwgbWVtYmVycyBvZiBQYXJsaWFtZW50IHByZXNzZWQgZXhlY3V0aXZlcyBmcm9tIEdvb2dsZSwgU2VhdHRsZS1iYXNlZCBBbWF6b24uY29tIEluYy4gYW5kIFN0YXJidWNrcyBDb3JwLiB0byBleHBsYWluIHdoeSB0aGV5IGRvbuKAmXQgcGF5IG1vcmUgdGF4ZXMgdGhlcmUuIFRoZSBVLksuLCBHb29nbGXigJlzIHNlY29uZC1iaWdnZXN0IG1hcmtldCwgd2FzIHJlc3BvbnNpYmxlIGZvciBhYm91dCAxMSBwZXJjZW50IG9mIGl0cyBzYWxlcywgb3IgYWxtb3N0ICQ0LjEgYmlsbGlvbiBsYXN0IHllYXIsIGFjY29yZGluZyB0byBjb21wYW55IGZpbGluZ3MuIEdvb2dsZSBwYWlkIDYgbWlsbGlvbiBwb3VuZHMgKCQ5LjYgbWlsbGlvbikgaW4gVS5LLiBpbmNvbWUgdGF4ZXMuIE1hdHQgQnJpdHRpbiwgR29vZ2xl4oCZcyB2aWNlIHByZXNpZGVudCBmb3IgTm9ydGhlcm4gYW5kIENlbnRyYWwgRXVyb3BlLCB0ZXN0aWZpZWQgdGhhdCB0aGUgY29tcGFueSBwYXlzIHRheGVzIHdoZXJlIGl0IGNyZWF0ZXMg4oCcZWNvbm9taWMgdmFsdWUs4oCdIHByaW1hcmlseSB0aGUgVS5TLiBTdGlsbCwgR29vZ2xlIGF0dHJpYnV0ZXMgc29tZSBwcm9maXQgYmFzZWQgb24gdGVjaG5vbG9neSBjcmVhdGVkIGluIHRoZSBVLlMuIHRvIG9mZnNob3JlIHN1YnNpZGlhcmllcywgbG93ZXJpbmcgaXRzIFUuUy4gdGF4ZXMsIGFjY29yZGluZyB0byBjb21wYW55IGZpbGluZ3MgYW5kIHBlb3BsZSBmYW1pbGlhciB3aXRoIGl0cyB0YXggcGxhbm5pbmcuIEdvb2dsZSBwYWlkICQxLjUgYmlsbGlvbiBpbiBpbmNvbWUgdGF4ZXMgd29ybGR3aWRlIGluIDIwMTEuIOKAmEZhaXIgU2hhcmXigJkgSW4gdGhlIHdha2Ugb2YgdGhlIHBhcmxpYW1lbnRhcnkgaGVhcmluZywgdGhlIEhvdXNlIG9mIENvbW1vbnMgaXNzdWVkIGEgcmVwb3J0IGxhc3Qgd2VlayBkZWNsYXJpbmcgdGhhdCBtdWx0aW5hdGlvbmFscyDigJxkbyBub3QgcGF5IHRoZWlyIGZhaXIgc2hhcmXigJ0gb2YgdGF4LiBUaGUgY29tbWl0dGVlIGFsc28gY3JpdGljaXplZCB0aGUgVS5LLuKAmXMgdGF4IGNvbGxlY3Rpb24gYWdlbmN5LCBIZXIgTWFqZXN0eeKAmXMgUmV2ZW51ZSAmIEN1c3RvbXMsIGZvciDigJxub3QgdGFraW5nIHN1ZmZpY2llbnRseSBhZ2dyZXNzaXZlIGFjdGlvbuKAnSBhbmQgY2FsbGVkIG9uIHRoZSBhZ2VuY3kgdG8g4oCcZ2V0IGEgZ3JpcOKAnSBvbiBjb3Jwb3JhdGUgdGF4IGF2b2lkYW5jZS4gQSBzcG9rZXNtYW4gZm9yIEhNUkMgc2FpZCB0aGUgYWdlbmN5IOKAnGVuc3VyZXMgdGhhdCBtdWx0aW5hdGlvbmFscyBwYXkgdGhlIHRheCBkdWUgaW4gYWNjb3JkYW5jZSB3aXRowqBVLksuwqB0YXggbGF3LuKAnSBUaGUgRnJlbmNoIHRheCBhdXRob3JpdHkgdGhpcyB5ZWFyIHByb3Bvc2VkIGluY3JlYXNpbmcgR29vZ2xl4oCZcyBpbmNvbWUgdGF4ZXMgYnkgYWJvdXQgJDEuMyBiaWxsaW9uLiBUaGUgYWdlbmN5IHNlYXJjaGVkIEdvb2dsZeKAmXMgUGFyaXMgb2ZmaWNlcyBpbiBKdW5lIDIwMTEgYW5kIHJlbW92ZWQgY29tcHV0ZXIgZmlsZXMgYXMgcGFydCBvZiBhbiBleGFtaW5hdGlvbiBmaXJzdCByZXBvcnRlZCBieSBCbG9vbWJlcmcgbGFzdCB5ZWFyLiBHb29nbGUgaXMgY29vcGVyYXRpbmcgd2l0aCBGcmVuY2ggYXV0aG9yaXRpZXMgYW5kIHdvcmtzIHdpdGggdGhlbSDigJx0byBhbnN3ZXIgYWxsIHRoZWlyIHF1ZXN0aW9ucyBvbiBHb29nbGUgRnJhbmNlIGFuZCBvdXIgc2VydmljZSzigJ0gdGhlIGNvbXBhbnkgc2FpZC4gSXRhbGlhbiBBdWRpdCBJbiBJdGFseSwgdGhlIFRheCBQb2xpY2UgYmVnYW4gYW4gYXVkaXQgb2YgR29vZ2xlIGxhc3QgbW9udGggYW5kIHJlY2VudGx5IHNlYXJjaGVkIHRoZSBjb21wYW554oCZcyBNaWxhbiBvZmZpY2VzLCBhcyB3ZWxsIGFzIHRoZSBvZmZpY2VzIG9mIEZhY2Vib29rIEluYy4sIGFjY29yZGluZyB0byBhIHBlcnNvbiBmYW1pbGlhciB3aXRoIHRoZSBtYXR0ZXIuIOKAnEl04oCZcyB2ZXJ5IGNvbW1vbiBmb3IgY29tcGFuaWVzIHRvIGJlIGF1ZGl0ZWQsIGFuZCB3ZSBoYXZlIGJlZW4gd29ya2luZyBjbG9zZWx5IHdpdGggdGhlIEl0YWxpYW4gYXV0aG9yaXRpZXMgZm9yIHNvbWUgdGltZSzigJ0gR29vZ2xlIHNhaWQuIOKAnFNvIGZhciB3ZSBoYXZlIG5vdCBoYWQgYW55IGRlbWFuZHMgZm9yIGFkZGl0aW9uYWwgdGF4IGluIEl0YWx5LuKAnSBGYWNlYm9vaywgYmFzZWQgaW4gTWVubG8gUGFyaywgQ2FsaWZvcm5pYSwgaXMgY29vcGVyYXRpbmcgd2l0aCB0aGUgSXRhbGlhbiB0YXggYXV0aG9yaXR5IGFuZCDigJx3ZSB0YWtlIG91ciBvYmxpZ2F0aW9ucyB1bmRlciB0aGUgSXRhbGlhbiB0YXggY29kZSB2ZXJ5IHNlcmlvdXNseSzigJ0gYSBjb21wYW55IHNwb2tlc3dvbWFuIHNhaWQuIEluIEF1c3RyYWxpYSwgdGhlIGNvdW50cnnigJlzIGFzc2lzdGFudCB0cmVhc3VyZXIgZ2F2ZSBhIHNwZWVjaCBsYXN0IG1vbnRoIG91dGxpbmluZyBHb29nbGXigJlzIHRheCBhdm9pZGFuY2Ugc3RyYXRlZ2llcy4gVGhlIHVzZSBvZiBvZmZzaG9yZSBzaGVsdGVycyB0byBhdm9pZCBjb3Jwb3JhdGUgdGF4ZXMgaGFzIHByb21wdGVkIGNhbGxzIGZvciByZWZvcm0gaW4gdGhlIFUuUy4gYXMgd2VsbC4gVGhlIFRyZWFzdXJ5IERlcGFydG1lbnQgaGFzIHJlcGVhdGVkbHkgcHJvcG9zZWQgc2luY2UgMjAwOSwgd2l0aCBsaXR0bGUgc3VjY2VzcywgdG8gbWFrZSBpdCBoYXJkZXIgZm9yIG11bHRpbmF0aW9uYWxzIHRvIGJ5cGFzcyB0YXhlcyBieSBzaGlmdGluZyBwcm9maXQgaW50byB0YXggaGF2ZW5zLiBUcmFuc2ZlciBQcmljaW5nIE11bHRpbmF0aW9uYWwgY29tcGFuaWVzIGN1dCB0aGVpciB0YXggYmlsbHMgdXNpbmcg4oCcdHJhbnNmZXIgcHJpY2luZyzigJ0gcGFwZXIgdHJhbnNhY3Rpb25zIGFtb25nIGNvcnBvcmF0ZSBzdWJzaWRpYXJpZXMgdGhhdCBhbGxvdyBmb3IgYWxsb2NhdGluZyBpbmNvbWUgdG8gdGF4IGhhdmVucyBhbmQgZXhwZW5zZXMgdG8gaGlnaGVyLXRheCBjb3VudHJpZXMuIEluIEdvb2dsZeKAmXMgY2FzZSwgYW4gSXJpc2ggc3Vic2lkaWFyeSBjb2xsZWN0cyByZXZlbnVlcyBmcm9tIGFkcyBzb2xkIGluIGNvdW50cmllcyBsaWtlIHRoZSBVLksuIGFuZCBGcmFuY2UuIFRoYXQgSXJpc2ggdW5pdCBpbiB0dXJuIHBheXMgcm95YWx0aWVzIHRvIGFub3RoZXIgSXJpc2ggc3Vic2lkaWFyeSwgd2hvc2UgbGVnYWwgcmVzaWRlbmNlIGZvciB0YXggcHVycG9zZXMgaXMgaW4gQmVybXVkYS4gVGhlIHBhaXIgb2YgSXJpc2ggdW5pdHMgZ2l2ZXMgcmlzZSB0byB0aGUgbmlja25hbWUg4oCcRG91YmxlIElyaXNoLuKAnSBUbyBhdm9pZCBhbiBJcmlzaCB3aXRoaG9sZGluZyB0YXgsIEdvb2dsZSBjaGFubmVsZWQgdGhlIHBheW1lbnRzIHRvIEJlcm11ZGEgdGhyb3VnaCBhIHN1YnNpZGlhcnkgaW4gdGhlIE5ldGhlcmxhbmRzIC0tIHRodXMgdGhlIOKAnER1dGNoIFNhbmR3aWNo4oCdIGxhYmVsLiBUaGUgTmV0aGVybGFuZHMgc3Vic2lkaWFyeSBoYXMgbm8gZW1wbG95ZWVzLiBUaGUgRHV0Y2ggdW5pdOKAmXMgcGF5bWVudHMgdG8gdGhlIEJlcm11ZGEgZW50aXR5IGxhc3QgeWVhciB3ZXJlIHVwIDgxIHBlcmNlbnQgdG8gJDkuOCBiaWxsaW9uIGZyb20gJDUuNCBiaWxsaW9uIGluIDIwMDguIEdvb2dsZeKAmXMgb3ZlcnNlYXMgc2FsZXMgaGF2ZSBpbmNyZWFzZWQgYXQgYWJvdXQgdGhlIHNhbWUgcmF0ZS4gR29vZ2xl4oCZcyBvdmVyYWxsIGVmZmVjdGl2ZSB0YXggcmF0ZSBkcm9wcGVkIHRvIDIxIHBlcmNlbnQgbGFzdCB5ZWFyIGZyb20gYWJvdXQgMjggcGVyY2VudCBpbiAyMDA4LiBUaGF0IGNvbXBhcmVzIHdpdGggdGhlIGF2ZXJhZ2UgY29tYmluZWQgVS5TLiBhbmQgc3RhdGUgc3RhdHV0b3J5IHJhdGUgb2YgYWJvdXQgMzkgcGVyY2VudC4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATuDZgcAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGM5NmMxNjY1ZWFlNTkwOGI=</field><field name="symbol" class="java.lang.String">rO0ABXQAA1RBWA==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATuIjGMAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArmZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAr3Cj1wo9c</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArZmZmZmZm</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAr3Cj1wo9c</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAr3Cj1wo9c</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAfQA==</field><field name="id" class="java.lang.String">rO0ABXQAEGI1MmE5OWY3OWRmNmM0OGE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mD64AAAQ==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPyAE7Q==</field></document></documents><date>2015-05-07T08:00:55-0500</date></cacheEntry>
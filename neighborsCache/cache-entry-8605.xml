<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hDb25jZXJucyB0aGF0IFBvcnR1Z2FscyBsYXJnZXN0IGxpc3RlZCBiYW5rIEJhbmNvIEVzcGlyaXRvIFNhbnRvIHdhcyBiYWRseSBleHBvc2VkIHRvIGl0cyBvd25lcnMgYWNjb3VudGluZyBwcm9ibGVtcyByYWlzZWQgZXllYnJvd3MgaW4gRXVyb3BlIGFuZCB0aGUgVVMgZ2V0dGluZyBpbnZlc3RvcnMgdG8gYXNrIHdoZXRoZXIgdGhlcmUgd2VyZSBtb3JlIHNob2VzIHRvIGRyb3AgaW4gRXVyb3BlYW4gYmFua2luZyBBbHNvIHNvbWUgZXhjZXNzIHNwZWN1bGF0aW9uIHRoYXQgaGFzIGJlZW4gYnVpbGRpbmcgdXAgaW4gdmFyaW91cyBjb3JuZXJzIGhhcyBidWJibGVkIG92ZXIgRXhhbXBsZXMgaW5jbHVkZWQgdGhlIGhhbHQgaW4gdHJhZGluZyBpbiB0aGUgc3RvY2sgb2YgYSBjb21wYW55IEN5bmsgVGVjaG5vbG9neSB3aXRoIG5vIGFzc2V0cyBvciByZXZlbnVlIHRoYXQgaGFkIHNvYXJlZCB0byBhIDY0IGJpbGxpb24gbWFya2V0IHZhbHVlIGFuZCB0aGUgc3VkZGVuIGNvbGxhcHNlIG9mIFNwYW5pc2ggd2lyZWxlc3MgcHJvdmlkZXIgR293ZXggYWZ0ZXIgYSBtYXNzaXZlIGFjY291bnRpbmcgZnJhdWQgQWRkIGluIHRoZSBiaWcgcmV2ZXJzYWwgaW4gZm9ydHVuZXMgZm9yIHNvbWUgY29tcGFuaWVzIHdobyByZWNlbnRseSBkaWQgVVMgSVBPcyBwbHVzIFB1ZXJ0byBSaWNvcyBpbmNyZWFzaW5nbHkgdHJvdWJsZWQgZGVidCBwaWN0dXJlIGFuZCBpdCB3YXMgdGVtcHRpbmcgdG8gcmVtZW1iZXIgV2FycmVuIEJ1ZmZldHRzIG9sZCBzYXlpbmcgT25seSB3aGVuIHRoZSB0aWRlIGdvZXMgb3V0IGRvIHlvdSBkaXNjb3ZlciB3aG9zIGJlZW4gc3dpbW1pbmcgbmFrZWQgQmlsbGlvbmFpcmUgaW52ZXN0b3IgQ2FybCBJY2FobiBzYWlkIGhlIGhhcyBiZWNvbWUgdmVyeSB3YXJ5IEluIG15IG1pbmQgaXQgaXMgdGltZSB0byBiZSBjYXV0aW91cyBhYm91dCB0aGUgVVMgc3RvY2sgbWFya2V0cyBoZSBzYWlkIGluIGEgdGVsZXBob25lIGludGVydmlldyBvbiBUaHVyc2RheSBXaGlsZSB3ZSBhcmUgaGF2aW5nIGEgZ3JlYXQgeWVhciBJIGFtIGJlaW5nIHZlcnkgc2VsZWN0aXZlIGFib3V0IHRoZSBjb21wYW5pZXMgSSBwdXJjaGFzZSBJdCBhbGwgY29tZXMgYWdhaW5zdCBhIGJhY2tkcm9wIG9mIGFueGlldHkgYWJvdXQgd2hldGhlciBnbG9iYWwgbWFya2V0cyBhbmQgZWNvbm9taWVzIGFyZSByZXNpbGllbnQgZW5vdWdoIHRvIGNvcGUgd2hlbiB0aGUgVVMgRmVkZXJhbCBSZXNlcnZlIHRha2VzIHRoZSBwdW5jaCBib3dsIGF3YXkgYnkgZW5kaW5nIGl0cyBib25kIGJ1eWluZyBwcm9ncmFtIGFuZCB0aGVuIHN0YXJ0cyB0byByYWlzZSBpbnRlcmVzdCByYXRlcyAgcHJvYmFibHkgbmV4dCB5ZWFyICBmb3IgdGhlIGZpcnN0IHRpbWUgc2luY2UgMjAwNiBUaGUgc2Vuc2Ugb2YgY29tcGxhY2VuY3kgdGhhdCBoYWQgc2V0IGluIGFtb25nIG1hbnkgaW52ZXN0b3JzIGhhcyBiZWd1biB0byBkaXNhcHBlYXIgU21hbGxjYXAgVVMgc3RvY2tzIGZlbGwgbW9yZSB0aGFuIDQgcGVyY2VudCBsYXN0IHdlZWsgdGhlaXIgd29yc3Qgb25ld2VlayBwZXJmb3JtYW5jZSBpbiBtb3JlIHRoYW4gdHdvIHllYXJzIHdoaWxlIFNwYWlucyBCYW5jbyBQb3B1bGFyIHBvc3Rwb25lZCBhIGJvbmQgb2ZmZXJpbmcgYW5kIEdyZWVjZSBjb3VsZCBvbmx5IHBsYWNlIGFib3V0IGhhbGYgb2Ygd2hhdCBpdCB3YW50ZWQgaW4gYSBkZWJ0IHNhbGUgV2hhdHMgdW5jbGVhciBpcyB3aGV0aGVyIHRoaXMgaXMgYWxsIGFib3V0IGEgc2hvcnRsaXZlZCBtb2Rlc3QgY29ycmVjdGlvbiBpbiBzb21lIGhpZ2hyaXNrIGFzc2V0cyB0aGF0IGhhZCBnb3R0ZW4gb3V0IG9mIGNvbnRyb2wgb3IgaWYgaXRzIGEgaGFyYmluZ2VyIG9mIHNvbWV0aGluZyBtb3JlIGRyYW1hdGljIHRvIGNvbWUgU29tZSBhcmUgY29uZmlkZW50IHRoZXJlIHdpbGwgYmUgYSBjb3JyZWN0aW9uIEkgZG9udCBjYXJlIGlmIGl0cyBQb3J0dWdhbCBVa3JhaW5lIFJ1c3NpYSBvciB0aGUgRmVkIG1hcmtldHMgYXJlIGR1ZSBmb3IgYXQgbGVhc3QgYSBwYXVzZSBvciBwb3RlbnRpYWxseSBhIDEwIHRvIDEyIHBlcmNlbnQgcHVsbGJhY2sgb24gYSB0cmFkaW5nIGJhc2lzIHNhaWQgSmVmZnJleSBTYXV0IGNoaWVmIGludmVzdG1lbnQgc3RyYXRlZ2lzdCBhdCBSYXltb25kIEphbWVzIEZpbmFuY2lhbCBpbiBTdCBQZXRlcnNidXJnIEZsb3JpZGEgQSBjb3JyZWN0aW9uIG9mIGFib3V0IDEwIHBlcmNlbnQgd291bGQgZ2VuZXJhbGx5IGJlIHdlbGNvbWVkIGJ5IGxhcmdlIGluc3RpdHV0aW9uYWwgbWFuYWdlcnMgYXMgdGhlIFNQIDUwMCBoYXMgbm90IGRyb3BwZWQgYnkgdGhhdCBhbW91bnQgaW4gYWJvdXQgdGhyZWUgeWVhcnMgSW4gcmVjZW50IHdlZWtzIGl0IGhhcyBjb21lIHdpdGhpbiByYW5nZSBvZiB0aGUgMjAwMCBtYXJrIGZvciB0aGUgZmlyc3QgdGltZSBldmVyIGhhdmluZyBuZWFybHkgdHJpcGxlZCBmcm9tIGl0cyBsb3dzIGluIDIwMDkgZHVyaW5nIHRoZSBmaW5hbmNpYWwgY3Jpc2lzIEZBUiBGUk9NIFBBTklDS0lORyBUaGUgY29uY2VybnMgYWJvdXQgQmFuY28gRXNwaXJpdG8gU2FudG8gbWF5IGhhdmUgY3J5c3RhbGxpemVkIGZlYXJzIHNvbWUgaW52ZXN0b3JzIGhhdmUgYWJvdXQgb3ZlcmhlYXRlZCBjcmVkaXQgbWFya2V0cyBidXQgcGFuaWMgaXMgZmFyIGZyb20gc2V0dGluZyBpbiBFdXJvcGVhbiBnb3Zlcm5tZW50IGRlYnQgaXMgc3RpbGwgdHJhZGluZyBhdCBsZXZlbHMgbm90IGZhciBmcm9tIFVTIGRlYnQgSXRhbHkgbGFzdCB3ZWVrIGNvbXBsZXRlZCBhIHNhbGUgb2YgNzUgYmlsbGlvbiBldXJvcyB3aXRoIHRoZSB0aHJlZXllYXIgYW5kIDE1eWVhciBkZWJ0IHNhbGVzIGhpdHRpbmcgdGhlaXIgbG93ZXN0IHlpZWxkcyBpbiB0aGUgZXVyb3MgbGlmZXRpbWUgQW5kIHdoaWxlIHNvbWUgb2YgdGhlIG9wdGltaXNtIGluIHRoZSBqdW5rIGRlYnQgbWFya2V0IGhhcyBzdGFydGVkIHRvIGZhZGUgdGhlIGJlYXJzIGFyZSBmYXIgZnJvbSB0YWtpbmcgb3ZlciBUaGUgc3ByZWFkIG9uIHRoZSByaXNraWVzdCBVUyBoaWdoeWllbGQgY29ycG9yYXRlIGJvbmRzIHRob3NlIHJhdGVkIHRyaXBsZUMgb3IgbGVzcyBoYXMgd2lkZW5lZCBieSBhYm91dCAwMzUgcGVyY2VudGFnZSBwb2ludCBhZ2FpbnN0IGJlbmNobWFyayBUcmVhc3VyaWVzIHNpbmNlIEp1bmUgMjMgYWNjb3JkaW5nIHRvIEJhbmsgb2YgQW1lcmljYU1lcnJpbGwgTHluY2ggZGF0YSBidXQgdGhlIGxldmVscyBhcmUgc3RpbGwgbm90IGZhciBmcm9tIHRoZWlyIHRpZ2h0ZXN0IHNpbmNlIDIwMDcgVGhpcyBjb3JyZWN0aW9uIG9ubHkgc2VydmVzIGFzIGEgcmVtaW5kZXIgdGhhdCBub3RoaW5nIGlzIHlldCBmaXhlZCBpbiB0aGUgZXVybyB6b25lIGFuZCB0aGF0IG5vIG1hdHRlciBob3cgbXVjaCBtb25leSB0aGUgRUNCIEV1cm9wZWFuIENlbnRyYWwgQmFuayBlbmRzIHVwIHByaW50aW5nIGl0IHdpbGwgbm90IGp1bXBzdGFydCB0aGUgZXVybyB6b25lcyBlY29ub21pZXMgc2FpZCBQaG9lYnVzIFRoZW9sb2dpdGVzIGNoaWVmIGludmVzdG1lbnQgb2ZmaWNlciBhdCBTdGVwcGVuV29sZiBDYXBpdGFsIGluIEx1Y2VybmUgU3dpdHplcmxhbmQgQnV0IHRoaXMgZG9lcyBub3QgbWVhbiB3ZSB3aWxsIGdldCBjb250YWdpb24gb3IgYSBjcmFzaCBoZSBhZGRlZCBMb3cgYm9ycm93aW5nIHJhdGVzIGFjcm9zcyB0aGUgZ2xvYmUgYmFsYW5jZSBzaGVldHMgdGhhdCBhcmUgaW4gZ2VuZXJhbGx5IGdvb2Qgc2hhcGUgZm9yIGRlYWwgbWFraW5nIG9yIHN0b2NrIGJ1eWJhY2tzIGFuZCBwcm9maXRzIHRoYXQgYXJlIGdyb3dpbmcgbW9kZXN0bHkgaW4gdGhlIFVTIGFuZCBiZXlvbmQgYXJlIGFsbCByZWFzb25zIG5vdCB0byBnZXQgdG9vIHNjYXJlZCBFdmVuIHZhbHVhdGlvbnMgYXJlbnQgdGhhdCBzdHJldGNoZWQgb24gc29tZSBoaXN0b3JpY2FsIG1lYXN1cmVtZW50cyBCcmlhbiBSZXlub2xkcyBjaGllZiBtYXJrZXQgc3RyYXRlZ2lzdCBhdCBSb3NlbmJsYXR0IFNlY3VyaXRpZXMgcG9pbnRlZCBvdXQgdGhhdCBwZW5zaW9uIGZ1bmRzIGFuZCBvdGhlcnMgaGF2ZSBiZWVuIHN0ZWFkaWx5IHBvdXJpbmcgbW9uZXkgaW50byBjb3Jwb3JhdGUgY3JlZGl0IGV2ZW4gaW4gd2hhdHMgdXN1YWxseSBhIHNsb3cgbW9udGggb2YgSnVseSBIaWdoeWllbGQgaXNzdWVyIEdlbmVyYWwgTW90b3JzIEZpbmFuY2lhbCBib3Jyb3dlZCAxNSBiaWxsaW9uIGxhc3Qgd2VlayB3aGlsZSBVUyBwb3dlciBjb21wYW55IENhbHBpbmUgQ29ycCByZWZpbmFuY2VkIDI4IGJpbGxpb24gaW4gaGlnaHlpZWxkIGJvbmRzIE92ZXJhbGwgMjAxNCBoYXMgc2VlbiBoaWdoIHlpZWxkIGlzc3VhbmNlIG9mIDE4MzYgYmlsbGlvbiBzbyBmYXIgb24gcGFjZSBmb3IgdGhlIGJ1c2llc3QgeWVhciBldmVyIGFjY29yZGluZyB0byBUaG9tc29uIFJldXRlcnMgQ3JlZGl0IGJvb21zIGFyZSBsaXR0ZXJlZCB3aXRoIGRlZmF1bHRzIFJleW5vbGRzIHNhaWQgaW4gcmVmZXJlbmNlIHRvIHNvbWUgcmVjZW50IHByb2JsZW1zIFNvIGl0cyBub3QgYSBiaWcgZGVhbCBCdXQgdGhlIGxhc3QgZml2ZSB5ZWFycyBoYXMgc2hvd24gdGhhdCBpZiBwZW9wbGUgd2FudCB0byBwYW5pYyBmb3IgYSBmZXcgd2Vla3MgdGhleSBtYXkgSGUgc2F5cyB0aGUgU1AgNTAwIGNvdWxkIHVuZG91YnRlZGx5IGNvcnJlY3QgaW4gY29taW5nIGRheXMgcHVsbGluZyBiYWNrIHRvIDE5NTAgb3IgZXZlbiAxOTAwIGJ1dCB0aGUgc3RlYWR5IGZsb3dzIGludG8gY29ycG9yYXRlIGNyZWRpdCB0aGF0IGhhcyBmdW5kZWQgc3RvY2sgYnV5YmFja3Mgc2hvdWxkIGtlZXAgdGhlIHN0b2NrbWFya2V0IHJhbGx5IGdvaW5nIGZvciBzZXZlcmFsIG1vcmUgeWVhcnMgRGF2aWQgSm95IGNoaWVmIG1hcmtldCBzdHJhdGVnaXN0IGF0IEFtZXJpcHJpc2UgRmluYW5jaWFsIGluIEJvc3RvbiB3aGVyZSBoZSBoZWxwcyBvdmVyc2VlIDc3MSBiaWxsaW9uIGluIGFzc2V0cyB1bmRlciBtYW5hZ2VtZW50IHNheXMgdGhlIGppdHRlcnMgZXQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0xMi0wM1QwMDowMDowMFogVE8gMjAxNC0wNy0xMFQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDU4NzM=</field><field name="title" class="java.lang.String">rO0ABXQANUFmdGVyIDUgWWVhcnMgb2YgR2FpbnMsIEJ1bGwgTWFya2V0IEJlZ2V0cyBKb3ksIFdvcnJ5</field><field name="content" class="java.lang.String">rO0ABXQTuU9uIE1hcmNoIDksIDIwMDksIHRoZSBTJlAgNTAwIGhpdCBpdHMgbmFkaXIsIGNsb3NpbmcgYXQgNjc2LjUzLiBUaGF0IGxvdyBtYXJrZWQgYSBjbGltYXggb2YgYSAxNi1tb250aCBzZWxsb2ZmIHRoYXQgdG9vayBtb3JlIHRoYW4gaGFsZiB0aGUgUyZQIDUwMCdzIHZhbHVlLiBTaW5jZSB0aGF0IGRheSwgdGhlIFN0YW5kYXJkICYgUG9vcidzIDUwMCBpbmRleCBoYXMgZ2FpbmVkIG1vcmUgdGhhbiAxNzcgcGVyY2VudCwgdGhlIGJlc3Qgcm9sbGluZyBmaXZlLXllYXIgcGVyZm9ybWFuY2Ugc2luY2UgdGhlIEp1bmUgMTk5NiB0byBKdW5lIDIwMDAgcGVyaW9kIHRoYXQgY292ZXJzIHRoZSBkb3QtY29tIGJ1YmJsZS4gTmF0dXJhbGx5LCBzb21lIGludmVzdG9ycyBhcmUgcXVlc3Rpb25pbmcgd2hldGhlciB0aGUgYnVsbCBydW4gaXMgbmVhcmluZyBhbiBlbmQuIEludmVzdG9ycyBjaXRlZCBhIG51bWJlciBvZiByZWFzb25zIHRvIGJlIG5lcnZvdXMuIFRob3VnaCBhIG51bWJlciBvZiB0aGVzZSBmYWN0b3JzIGhhdmUgYmVlbiBwcmVzZW50IGZvciBzb21lIHRpbWUsIHRoZSBmb2xsb3dpbmcgc3RhbmQgb3V0IGFzIGNvbmNlcm5zOiAgCgpWYWx1YXRpb25zOgoKUHJvZml0IGdyb3d0aCwgYW5kIGVzcGVjaWFsbHkgcmV2ZW51ZSBncm93dGgsIG1heSBub3QgYmUgc3Ryb25nIGVub3VnaCB0byBzdXBwb3J0IGN1cnJlbnQgcHJpY2UgbGV2ZWxzLiBQcm9maXQgZ3Jvd3RoIGhhcyBzbG93ZWQgY29uc2lkZXJhYmx5IGZyb20gdGhlIHBlYWtzIG9mIHRoaXMgZWFybmluZ3MgY3ljbGUuIFRoZXJlIGFyZSBjb25jZXJucyB0aGF0IHJldmVudWUgZ3Jvd3RoIHdpbGwgYmUgbGFja2x1c3RlciB3aGlsZSBlY29ub21pYyBncm93dGggcmVtYWlucyBtZWRpb2NyZS4gVGhlIFMmUCA1MDAncyBmb3J3YXJkIHByaWNlLXRvLWVhcm5pbmdzIHJhdGlvLCBhdCAxNS44LCBpcyBpdHMgaGlnaGVzdCBzaW5jZSB0aGUgZm91cnRoIHF1YXJ0ZXIgb2YgMjAwOCwgVGhvbXNvbiBSZXV0ZXJzIGRhdGEgc2hvd2VkLiBJdCBjb21lcyBhcyByZXZlbnVlIGdyb3d0aCBoYXMgc2xvd2VkLCBlYXRpbmcgaW50byBwcm9maXRzLCBhbmQgcHJvZHVjdGl2aXR5IGdyb3d0aCBkZWNsaW5lZCBpbiB0aGUgZmlyc3QgcXVhcnRlciwgc3VnZ2VzdGluZyBzbGltbWVyIG1hcmdpbnMgaW4gdGhlIG5leHQgZWFybmluZ3MgcGVyaW9kIGFzIHdlbGwuIFMmUCA1MDAgcmV2ZW51ZSBncm93dGggaGFzIGF2ZXJhZ2VkIGp1c3QgMy4yIHBlcmNlbnQgc2luY2UgTWFyY2ggMjAwOSwgd2hpbGUgZWFybmluZ3MgZ3Jvd3RoIGhhcyBhdmVyYWdlZCAxNi4yIHBlcmNlbnQsIFRob21zb24gUmV1dGVycyBkYXRhIHNob3dlZC4gRm9yIHRoZSBtb3N0IHJlY2VudCByZXBvcnRpbmcgcGVyaW9kLCByZXZlbnVlIGdyb3d0aCBpcyBlc3RpbWF0ZWQgYXQgMSBwZXJjZW50IHdoaWxlIHByb2ZpdCBncm93dGggaXMgZm9yZWNhc3QgYXQgOS44IHBlcmNlbnQuIFRoZSBzdG9jayBtYXJrZXQgaGFzIHNlZW4gaGlnaGVyIHByaWNlLXRvLWVhcm5pbmdzIHJhdGlvcyAtIG5vdGFibHkgZHVyaW5nIHRoZSB0ZWNobm9sb2d5IGJ1YmJsZSBhbmQgdGhlIGVuZCBvZiB0aGUgMjAwNy0yMDA4IHJ1biwgYnV0IHRvIHNvbWUsIHRoYXQncyBub3QgY29tZm9ydGluZy4gIkEgbG90IG9mIHBlb3BsZSBzYXkgdGhlIG11bHRpcGxlIGlzIG5vdCB0aGF0IGhpZ2gsIGNvbXBhcmVkIHRvIGhpc3RvcnksIGJ1dCBpbiBubyB0aW1lIGluIGhpc3RvcnksIGRpZCB5b3UgaGF2ZSB0aGVzZSB0eXBlcyBvZiB0YWlsd2luZHMgcHVzaGluZyBhc3NldCBwcmljZXMgZm9yIGZpdmUgeWVhcnMsIiBzYWlkIE1pY2hhZWwgTydSb3Vya2UsIGNoaWVmIG1hcmtldCBzdHJhdGVnaXN0IGF0IEpvbmVzVHJhZGluZyBpbiBHcmVlbndpY2gsIENvbm5lY3RpY3V0LiBTcGVha2luZyBvZiB3aGljaCAuLi4gVGhlIFB1bmNoIEJvd2w6IAoKVGhlIEZlZGVyYWwgUmVzZXJ2ZSBpcyBzdGVhZGlseSByZW1vdmluZyBpdHMgYm9uZC1idXlpbmcgYWNjb21tb2RhdGlvbiB0aGF0IHRvb2sgaXRzIGJhbGFuY2Ugc2hlZXQgZnJvbSBhYm91dCAkOTAwIGJpbGxpb24gdG8gbW9yZSB0aGFuICQ0IHRyaWxsaW9uIGluIHRoZSBsYXN0IHNldmVyYWwgeWVhcnMuIFRoZSBjZW50cmFsIGJhbmsgaGFkIGJlZW4gYnV5aW5nICQ4NSBiaWxsaW9uIG1vbnRobHkgaW4gVS5TLiBUcmVhc3VyaWVzIGFuZCBtb3J0Z2FnZS1iYWNrZWQgc2VjdXJpdGllcy4gQnV0IHRoZSBGZWQgYW5ub3VuY2VkIGluIERlY2VtYmVyIHRoYXQgaXQgd291bGQgYmVnaW4gcmVkdWNpbmcgdGhhdCBhbW91bnQuIEF0IGl0cyBjdXJyZW50IHBhY2UsIHB1cmNoYXNlcyB3aWxsIGVuZCBieSB5ZWFyLWVuZCwgcmVtb3Zpbmcgc3VwcG9ydCBmb3IgbG93ZXIgcmF0ZXMgdGhhdCBtYW55IHNheSBoYXZlIHB1c2hlZCBpbnZlc3RvcnMgaW50byByaXNraWVyIGFzc2V0cyBsaWtlIHN0b2Nrcy4gU2xvdyBqb2IgYW5kIGVjb25vbWljIGdyb3d0aCBzaW5jZSB0aGUgMjAwNy0yMDA5IHJlY2Vzc2lvbiAgaGFzIGxlZnQgaW52ZXN0b3JzIHdvcnJpZWQgYWJvdXQgd2hldGhlciB0aGUgZWNvbm9teSBhbmQgbWFya2V0IGNhbiBzdGFuZCBvbiB0aGVpciBvd24gd2l0aG91dCB0aGUgc3RpbXVsdXMuIEFuZCByaXNpbmcgcmF0ZXMgd291bGQgaGF2ZSBhIGRldHJpbWVudGFsIGVmZmVjdCBvbiBib3Jyb3dpbmcgY29zdHMsIHdoaWNoIGhhdmUgYmVlbiBhdCByZWNvcmQgbG93cyBmb3IgY29tcGFuaWVzLgoKTWFyZ2luIGRlYnQ6CgpUaGUgdmFsdWUgb2YgVS5TLiBlcXVpdGllcyBpbnZlc3RvcnMgYm91Z2h0IHdpdGggYm9ycm93ZWQgbW9uZXkgaGFzIGJlZW4gcmlzaW5nIHNpbmNlIEp1bmUuIE1hcmdpbiBkZWJ0IGFjY291bnRzIHRvdGFsZWQgYSByZWNvcmQgJDQ4Ny42IGJpbGxpb24gaW4gSmFudWFyeSwgZGF0YSBmcm9tIHRoZSBGaW5hbmNpYWwgSW5kdXN0cnkgUmVndWxhdG9yeSBBdXRob3JpdHkgc2hvd2VkLiBJdCBzaG93cyBoZWRnZSBmdW5kcyBhbmQgb3RoZXIgaW52ZXN0b3JzIGFyZSB0YWtpbmcgb24gbW9yZSByaXNrIGFuZCB1c2luZyBib3Jyb3dlZCBtb25leSB0byBlbmhhbmNlIHRoZWlyIHJldHVybnMuIEJvcnJvd2luZyBvbiBtYXJnaW4gYXQgdGhpcyBsZXZlbCBpcyBzZWVuIGFzIGEgc2lnbiBvZiBvdmVybHkgYnVsbGlzaCBzZW50aW1lbnQuICJUbyBtZSwgdGhpcyBpcyBhIHZlcnkgb3ZlcmNoYXJnZWQgZW52aXJvbm1lbnQsIiBzYWlkIEJyYWQgTGFtZW5zZG9yZiwgY28tbWFuYWdlciBvZiB0aGUgYWN0aXZlbHkgbWFuYWdlZCBzaG9ydCBvbmx5IFJhbmdlciBFcXVpdHkgQmVhciBFVEYuICJJdCBhZGRzIHVwIHRvIGEgdmVyeSBwb29yIHJpc2stcmV3YXJkIHJhdGlvIGZvciB0aGUgbWFya2V0cGxhY2UuIgoKSW5zaWRlciBzZWxsaW5nOgoKTGFtZW5zZG9yZiBzYWlkIGhpZ2ggbGV2ZWxzIG9mIGluc2lkZXIgc2VsbGluZyBzdXBwb3J0IHRoZSBpZGVhIHRoYXQgdGhlIG1hcmtldCBpcyBvdmVydmFsdWVkLCBhcyB0aG9zZSB3aXRoIG1vcmUga25vd2xlZGdlIGJlbGlldmUgaXQgaXMgdGltZSB0byBwdWxsIGJhY2sgb24gdGhlaXIgb3duIHN0b2Nrcy4gSGUgc2FpZCB0aGVyZSBhcmUgMTAgaW5zaWRlcnMgc2VsbGluZyB0aGUgY29tcGFueSdzIHN0b2NrIHRvIG9uZSBpbnNpZGVyIGJ1eWluZy4gVGhhdCBtYXkgYmUgc29tZXdoYXQgaW5jb25jbHVzaXZlLCB0aG91Z2guIEN1cnJlbnQgZGF0YSBzaG93cyB0aGUgc2VsbGluZyBiaWFzIGFtb25nIGluc2lkZXJzIGlzIHN0cm9uZywgdGhvdWdoIG5vdCBhdCBoaXN0b3JpYyBsZXZlbHMgaW4gdGVybXMgb2Ygdm9sdW1lLCBzYWlkIEJlbiBTaWx2ZXJtYW4sIGRpcmVjdG9yIG9mIHJlc2VhcmNoIGF0IEluc2lkZXJTY29yZS5jb20sIHdoaWNoIGRvZXMgbm90IHJlbGVhc2UgZGF0YSBmb3IgcHJvcHJpZXRhcnkgcmVhc29ucy4gSGUgZGlkIHNheSB0aGUgZmlyc3QgcXVhcnRlciBpcyB3aGVuIG1hbnkgY29tcGFuaWVzIGF3YXJkIHRoZWlyIHJlc3RyaWN0ZWQgc3RvY2sgYXMgcGFydCBvZiBjb21wZW5zYXRpb24sIHdoaWNoIHRlbmRzIHRvIGxlYWQgdG8gYSBsb3Qgb2Ygc2VsbGluZy4gV2hlcmUncyB0aGUgY29ycmVjdGlvbj86CgpUaGUgUyZQIDUwMCBoYXNuJ3Qgc2VlbiBhIDEwIHBlcmNlbnQgZGVjbGluZSBmb3IgbmVhcmx5IHR3by1hbmQtYS1oYWxmIHllYXJzLCB3aXRoIHRoZSBsYXN0IG9uZSBjb21pbmcgYmV0d2VlbiBKdW5lIGFuZCBPY3RvYmVyIG9mIDIwMTEsIGEgcGVyaW9kIHRoYXQgaW5jbHVkZWQgYSBidWRnZXQgZmFjZS1vZmYgdGhhdCByZXN1bHRlZCBpbiB0aGUgZmlyc3QtZXZlciBkb3duZ3JhZGUgb2YgdGhlIGNyZWRpdCByYXRpbmcgb2YgdGhlIFVuaXRlZCBTdGF0ZXMuIFN0b2NrcyBmZWxsIG1vcmUgdGhhbiAyMCBwZXJjZW50IGluIHRoYXQgdGltZSBwZXJpb2QsIGJ1dCBzaW5jZSB0aGVuLCB0aGVyZSBoYXNuJ3QgYmVlbiBhIDEwIHBlcmNlbnQgZHJvcCBvbiBhIGNsb3NpbmctbGV2ZWwgYmFzaXMuIChUaGVyZSB3YXMgYSBuYXJyb3cgbWlzcyBpbiBNYXkgMjAxMi4pIENvcnJlY3Rpb25zIGFyZSBnZW5lcmFsbHkgY29uc2lkZXJlZCBwb3NpdGl2ZSBiZWNhdXNlIHRoZXkgZm9yY2UgaW52ZXN0b3JzIHRvIGRlZmVuZCB0aGVpciBidWxsaXNoIHBvc2l0aW9ucywgYW5kIHdpdGhvdXQgdGhlbSwgY29uY2VybiBhYm91dCBjb21wbGFjZW5jeSByaXNlcy4gU2VudGltZW50OgoKQmlhbmNvIFJlc2VhcmNoIG5vdGVzIHRoYXQgdGhlIHdlZWtseSBJbnZlc3RvciBJbnRlbGxpZ2VuY2Ugc3VydmV5cyBzaG93IGp1c3QgMTUgcGVyY2VudCBvZiBuZXdzbGV0dGVyIHdyaXRlcnMgYXJlIGJlYXJpc2gsIGJlbG93IHRoZSBsZXZlbHMgc2VlbiBhdCB0aGUgaGVpZ2h0IG9mIHRoZSBtYXJrZXQgaW4gMjAwNy4gVGhlIHBlcmNlbnRhZ2Ugb2YgdGhvc2Ugd2hvIGFyZSBidWxsaXNoIHdhcyA2MSBwZXJjZW50IGF0IHRoZSBlbmQgb2YgdGhlIHllYXIsIGEgbGV2ZWwgbm90IHNlZW4gc2luY2UgMjAwNy4gVGhhdCBmaWd1cmUsIHRob3VnaCwgaGFzIGRpcHBlZCBhIGJpdCBzaW5jZSAyMDE0IGJlZ2FuLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUSlbS8AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDUyNDU1YTYxZTcxZmJjZjc=</field><field name="symbol" class="java.lang.String">rO0ABXQACVRSSS1QQi5UTw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUSqXJyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAx2ZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAx+uFHrhR7</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxzMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAx+uFHrhR7</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxVHrhR64U</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAALuA==</field><field name="id" class="java.lang.String">rO0ABXQAEDU1ZTZlYzNhNzdkZGM0OTE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mG+SAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDc1MDY=</field><field name="title" class="java.lang.String">rO0ABXQAM1B1ZXJ0byBSaWNvIEZhY2luZyBKdW5rIFRocmVhdCBSaXNlcyBNb3N0IFNpbmNlICcxMg==</field><field name="content" class="java.lang.String">rO0ABXQV/1B1ZXJ0byBSaWNvIGRlYnQgaXMgcmFsbHlpbmcgdGhlIG1vc3QgaW4gdHdvIHllYXJzLCBldmVuIHVuZGVyIHRoZSB0aHJlYXQgb2YgYSBjdXQgdG8ganVuaywgYXMgdGhlIGNvbW1vbndlYWx0aCBwcmVwYXJlcyB0byBzZWxsIGJvbmRzIGZvciB0aGUgZmlyc3QgdGltZSBzaW5jZSBBdWd1c3QuIFRoZSBkZWJ0IGhhcyByZXR1cm5lZCAzLjQgcGVyY2VudCBpbiBKYW51YXJ5LCBiZWF0aW5nIGFsbCBVLlMuIHN0YXRlcyBpbiBhIFN0YW5kYXJkICYgUG9vcuKAmXMgaW5kZXguIFRoZSBnYWluIGZvbGxvd3MgYSA0LjkgcGVyY2VudCB0dW1ibGUgaW4gRGVjZW1iZXIgYXMgeWllbGRzIHNvYXJlZCB0byByZWNvcmQgaGlnaHMsIGx1cmluZyBoZWRnZSBmdW5kcyBhbmQgZGlzdHJlc3NlZC1kZWJ0IGJ1eWVycy4gU2FsZXMtdGF4IGJvbmRzIHJhbmtlZCBmb3VyIHN0ZXBzIGJlbG93IEFBQSBhbmQgbWF0dXJpbmcgaW4gQXVndXN0IDIwMzcgdHJhZGVkIEphbi4gMjcgd2l0aCBhbiBhdmVyYWdlIHlpZWxkIGFib3V0IDEuNSBwZXJjZW50YWdlIHBvaW50cyBhYm92ZSBhbiBTJlAgaW5kZXggb2YganVuay1ncmFkZSBtdW5pcy4gRXZlbiBhZnRlciBsYXdtYWtlcnMgdHJpbW1lZCBwZW5zaW9uIGJlbmVmaXRzLCByYWlzZWQgdGF4ZXMgYW5kIHNocmFuayBidWRnZXQgZ2FwcywgdGhlIHRlcnJpdG9yeSBvZiAzLjYgbWlsbGlvbiByaXNrcyBsb3NpbmcgaXRzIGludmVzdG1lbnQtZ3JhZGUgcmFua2luZywgcG90ZW50aWFsbHkgY3VyYmluZyB0aGUgcG9vbCBvZiBidXllcnMgZm9yIGl0cyBkZWJ0LiBBYm91dCA3MCBwZXJjZW50IG9mIFUuUy4gbXV0dWFsIGZ1bmRzIHRoYXQgZm9jdXMgb24gY2l0eSBhbmQgc3RhdGUgYm9uZHMgb3duIFB1ZXJ0byBSaWNvIHNlY3VyaXRpZXMsIHdoaWNoIGFyZSB0YXgtZXhlbXB0IG5hdGlvbndpZGUsIGFjY29yZGluZyB0byBNb3JuaW5nc3RhciBJbmMuIOKAnFRpbWUgaXMgb2YgdGhlIGVzc2VuY2UgaGVyZSBiZWNhdXNlIHRoZSByYXRpbmcgYWdlbmNpZXMgaGF2ZSBnaXZlbiB0aGVtIGEgZGVhZGxpbmUgYW5kIHRoZXJl4oCZcyBvbmx5IHNvIG11Y2ggdGhleSBjYW4gZG8s4oCdIHNhaWQgUm9iZXJ0IEFtb2RlbywgaGVhZCBvZiBtdW5pcyBpbiBOZXcgWW9yayBhdCBXZXN0ZXJuIEFzc2V0IE1hbmFnZW1lbnQgQ28uLCB3aGljaCBtYW5hZ2VzICQyOCBiaWxsaW9uIGluIGxvY2FsIGRlYnQuIFJhdGluZ3MgV2FybmluZ3MgUyZQIHRocmVhdGVuZWQgbGFzdCB3ZWVrIHRvIGN1dCBQdWVydG8gUmljb+KAmXMgZGVidCB0byBqdW5rIHdpdGhpbiA5MCBkYXlzIGlmIGl04oCZcyB1bmFibGUgdG8gYWNjZXNzIGNhcGl0YWwgbWFya2V0cy4gTW9vZHnigJlzIEludmVzdG9ycyBTZXJ2aWNlIGlzc3VlZCBhIHNpbWlsYXIgd2FybmluZyBEZWMuIDExLiBQdWVydG8gUmljbyBhbmQgaXRzIGFnZW5jaWVzLCB3aXRoICQ3MCBiaWxsaW9uIG9mIGRlYnQsIGFuZCBvdGhlciBsb3dlci1yYXRlZCBpc3N1ZXJzIGFyZSBiZW5lZml0aW5nIGZyb20gcmlzaW5nIGRlbWFuZCB3aXRoIGludmVzdG9ycyBhZGRpbmcgdGhlIG1vc3QgbW9uZXkgdG8gaGlnaC15aWVsZCBtdW5pIG11dHVhbCBmdW5kcyB0aGlzIG1vbnRoIHNpbmNlIFNlcHRlbWJlciwgYWNjb3JkaW5nIHRvIFUuUy4gTGlwcGVyIEZ1bmQgRmxvd3MgZGF0YS4gQXZlcmFnZSB5aWVsZHMgb24gUHVlcnRvIFJpY28gZ2VuZXJhbCBvYmxpZ2F0aW9ucyBtYXR1cmluZyBKdWx5IDIwNDEgY2xpbWJlZCB0byBhIHJlY29yZCA5LjI5IHBlcmNlbnQgb24gRGVjLiAzMC4gVGhlIEphbnVhcnkgZ2FpbiBpbiBQdWVydG8gUmljbyBkZWJ0IGlzIHRoZSBtb3N0IHNpbmNlIGEgMy43IHBlcmNlbnQgcmFsbHkgaW4gSmFudWFyeSAyMDEyLCBTJlAgZGF0YSBzaG93LiBUaGUgJDMuNyB0cmlsbGlvbiBtYXJrZXQgZm9yIG11bmljaXBhbCBkZWJ0IGhhcyByZXR1cm5lZCAyLjMgcGVyY2VudCB0aGlzIG1vbnRoLiBUaGUgZ2FpbnMgZHJvdmUgYmVuY2htYXJrIDEwLXllYXIgeWllbGRzIHRvIDIuNiBwZXJjZW50IHllc3RlcmRheSwgdGhlIGxvd2VzdCBzaW5jZSBKdW5lLCBhY2NvcmRpbmcgdG8gZGF0YSBjb21waWxlZCBieSBCbG9vbWJlcmcuIE9mZmljaWFscyBwbGFuIHRvIHNlbGwgbG9uZy10ZXJtIGRlYnQgbmV4dCBtb250aCB0byBiYWxhbmNlIGJ1ZGdldHMgYWZ0ZXIgcmlzaW5nIGludGVyZXN0IHJhdGVzIGxhc3QgeWVhciBoaW5kZXJlZCB0aGUgaXNzdWFuY2Ugb2YgYm9uZHMgYmFja2VkIGJ5IHNhbGVzLXRheCByZXZlbnVlLiBUaG9zZSBzZWN1cml0aWVzIGhhdmUgdGhlIGhpZ2hlc3QgcmF0aW5nIGFtb25nIHRoZSBpc2xhbmTigJlzIGNyZWRpdHMuIFNlY29uZGFyeSBNYXJrZXQgVGhlIGxhc3QgY29tbW9ud2VhbHRoIGlzc3VlciB0byBzZWxsIGRlYnQgd2FzIHRoZSBQdWVydG8gUmljbyBFbGVjdHJpYyBQb3dlciBBdXRob3JpdHksIHdoaWNoIG9mZmVyZWQgJDY3MyBtaWxsaW9uIG9mIHJldmVudWUgYm9uZHMgaW4gQXVndXN0LiBSZXN1bHRzIG9mIHRoZSBwbGFubmVkIHNhbGUgbWF5IGluZmx1ZW5jZSBQdWVydG8gUmljb+KAmXMgcmF0aW5ncyBhbmQgaGVscCBpbnZlc3RvcnMgdmFsdWUgdGhlIGlzbGFuZOKAmXMgc2VjdXJpdGllcyBpbiB0aGUgc2Vjb25kYXJ5IG1hcmtldCwgc2FpZCBUcm95IFdpbGxpcywgc2VuaW9yIHBvcnRmb2xpbyBtYW5hZ2VyIGluIFJvY2hlc3RlciwgTmV3IFlvcmssIGF0IE9wcGVuaGVpbWVyRnVuZHMgSW5jLiwgd2hpY2ggb3ZlcnNlZXMgYWJvdXQgJDI4IGJpbGxpb24gb2YgbXVuaXMuIOKAnFRoYXTigJlzIGdvaW5nIHRvIGRpY3RhdGUgYSBsb3Qgb24gaG93IHRoZSBtYXJrZXQgYW5kIHJhdGluZyBhZ2VuY2llcyByZWFjdCzigJ0gaGUgc2FpZC4gVGhlIEdvdmVybm1lbnQgRGV2ZWxvcG1lbnQgQmFuaywgd2hpY2ggaGFuZGxlcyB0aGUgY29tbW9ud2VhbHRo4oCZcyBkZWJ0IHRyYW5zYWN0aW9ucywgZGVjbGluZWQgdG8gY29tbWVudCwgQWxpeCBBbmZhbmcsIGEgc3Bva2Vzd29tYW4gaW4gTmV3IFlvcmssIHNhaWQgaW4gYW4gZS1tYWlsLiBDb21tb253ZWFsdGggc2FsZXMtdGF4IGJvbmRzIHdpdGggYW4gQSsgZ3JhZGUgZnJvbSBTJlAgYW5kIG1hdHVyaW5nIGluIDIzIHllYXJzIHRyYWRlZCB5ZXN0ZXJkYXkgd2l0aCBhbiBhdmVyYWdlIHlpZWxkIG9mIGFib3V0IDguMSBwZXJjZW50LCBvciA0LjQgcGVyY2VudGFnZSBwb2ludHMgYWJvdmUgYmVuY2htYXJrIG11bmlzLCBCbG9vbWJlcmcgZGF0YSBzaG93LiBUaGUgZGVidCB5aWVsZGVkIDguNyBwZXJjZW50IGF0IHllYXItZW5kLCBmb3IgYSBzcHJlYWQgb2YgNC42IHBlcmNlbnRhZ2UgcG9pbnRzLiBUYXhlcyBSYWlzZWQgVGhlIHlpZWxkIHN0aWxsIGVjbGlwc2VzIGludGVyZXN0IHJhdGVzIG9uIGxvd2VyLXJhdGVkIG11bmlzLiBOb24tcmF0ZWQgb3Igc3BlY3VsYXRpdmUtZ3JhZGUgbXVuaXMgd2l0aCBhbiBhdmVyYWdlIG1hdHVyaXR5IG9mIDIwIHllYXJzIHlpZWxkZWQgYWJvdXQgNi42IHBlcmNlbnQgYXMgb2YgSmFuLiAyNywgYWNjb3JkaW5nIHRvIFMmUCBkYXRhLiBDb21tb253ZWFsdGggb2ZmaWNpYWxzIGhhdmUgcmFpc2VkIHRheGVzIGFuZCBmZWVzIGFuZCBsaW1pdGVkIHNwZW5kaW5nIHRvIHJlZHVjZSBkZWZpY2l0cyBhcyB0aGV5IHNlZWsgdG8gcmVhc3N1cmUgYm9uZGhvbGRlcnMgdGhleSB3aWxsIHJlcGF5IHRoZWlyIG9ibGlnYXRpb25zLCBzYWlkIFdpbGxpcyBhdCBPcHBlbmhlaW1lckZ1bmRzLiDigJxNb3N0IGNvcnBvcmF0ZSBib3Jyb3dlcnMgZG9u4oCZdCBoYXZlIHRoZSBhYmlsaXR5IHRvIGJvdGggaW5jcmVhc2UgcmV2ZW51ZXMgYW5kIGRlY3JlYXNlIGNvc3RzIGF0IHRoZSBzYW1lIHRpbWUs4oCdIFdpbGxpcyBzYWlkLiDigJxJIGRvbuKAmXQgbmVlZCBiaWcgZ3Jvd3RoIGluIG9yZGVyIGZvciB0aGVtIHRvIHBheSBvZmYgdGhlaXIgZGVidC4gSSBqdXN0IG5lZWQgc3RhYmlsaXphdGlvbiwgYW5kIEkgdGhpbmsgdGhleeKAmXZlIGJlZW4gYWJsZSB0byBhY2hpZXZlIHRoYXQgaW4gdGhlIGxhc3QgY291cGxlIG9mIHllYXJzLuKAnSBHb3Zlcm5vciBBbGVqYW5kcm8gR2FyY2lhIFBhZGlsbGEsIG9mIHRoZSBQb3B1bGFyIERlbW9jcmF0aWMgUGFydHksIHdobyB0b29rIG9mZmljZSBhIHllYXIgYWdvLCBoYXMgc2FpZCB0aGUgaXNsYW5kIHdpbGwgcmVwYXkgaXRzIGRlYnRzIG9uIHRpbWUgYW5kIGluIGZ1bGwuIExpbWl0ZWQgQmFzZSBQdWVydG8gUmljbyB3aWxsIG5lZWQgdG8gbWFya2V0IGl0cyBkZWJ0IHRvIGEgbW9yZSBsaW1pdGVkIGdyb3VwIG9mIGludmVzdG9ycyBiZWNhdXNlIGNyZWRpdCBjb25jZXJucyBhcmUgbGVhZGluZyBpbmRpdmlkdWFscyBhbmQgc29tZSBtdXR1YWwgZnVuZHMgdG8gaG9sZCBvZmYsIERhdmlkIEhpdGNoY29jaywgYW4gUyZQIGFuYWx5c3QsIHNhaWQgaW4gYW4gaW50ZXJ2aWV3LiBJbnZlc3RvcnMgc3VjaCBhcyBoZWRnZSBmdW5kcywgd2hpY2ggZG9u4oCZdCBidXkgUHVlcnRvIFJpY28gZGVidCBmb3IgaXRzIHRheCBiZW5lZml0cywgbWF5IHNob3cgaW50ZXJlc3QsIEhpdGNoY29jayBzYWlkLiBQdWVydG8gUmljbyBvZmZpY2lhbHMgd2VyZSBzZXQgdG8gbWVldCB3aXRoIHRoZSBtYWpvciBjcmVkaXQtcmF0aW5nIGZpcm1zIHRoaXMgd2VlayB0byBkaXNjdXNzIHRoZSBpc2xhbmTigJlzIGZpbmFuY2VzLCBNYXJpYSBRdWludGVybywgc3Bva2Vzd29tYW4gZm9yIFRyZWFzdXJ5IFNlY3JldGFyeSBNZWxiYSBBY29zdGEsIHNhaWQgaW4gYSBzdGF0ZW1lbnQuIElmIFB1ZXJ0byBSaWNvIHdlcmUgY3V0IHRvIHNwZWN1bGF0aXZlIGdyYWRlLCBpdCB3b3VsZCBoYXZlIHRvIHBheSBhcyBtdWNoIGFzICQxIGJpbGxpb24gZm9yIGNvbGxhdGVyYWwgYW5kIGFjY2VsZXJhdGVkIHBheW1lbnRzIG9uIHN3YXBzIGFuZCBvdGhlciBmaW5hbmNpbmdzLCBMaXNhIEhlbGxlciwgYSBNb29keeKAmXMgYW5hbHlzdCwgc2FpZCBpbiBhIERlYy4gMTEgcmVwb3J0LiBIaWdoLXlpZWxkLCBoaWdoLXJpc2sgYm9uZHMgYXJlIHJhdGVkIGJlbG93IEJhYTMgYnkgTW9vZHnigJlzIGFuZCBsb3dlciB0aGFuIEJCQi0gYXQgUyZQLiBJZiBvbmUgb3IgbW9yZSBvZiB0aGUgcmF0aW5nIGNvbXBhbmllcyBjdXRzIHRoZSBpc2xhbmQgdG8ganVuaywg4oCcd2Ugd2lsbCBhY3QgcmVzcG9uc2libHkgYW5kIHdl4oCZbGwgdGFrZSBhZGRpdGlvbmFsIGFjdGlvbnMs4oCdIEFjb3N0YSBzYWlkIEphbi4gMjQgaW4gYW4gaW50ZXJ2aWV3IG9uIENOQkMuIOKAnFdlIGFyZSBwcmVwYXJlZCBmb3IgYW4gZXZlbnQgbGlrZSB0aGF0LuKAnSBJc2xhbmQgZ292ZXJub3JzIGhhdmUgYmVlbiBib3Jyb3dpbmcgdG8gYmFsYW5jZSBidWRnZXRzIGFzIHRoZSBlY29ub215IGhhcyBzdHJ1Z2dsZWQgdG8gZ3JvdyBzaW5jZSAyMDA2LiBQdWVydG8gUmljb+KAmXMgMTUuNCBwZXJjZW50IERlY2VtYmVyIHVuZW1wbG95bWVudCByYXRlIHdhcyB0aGUgaGlnaGVzdCBpbiB0d28geWVhcnMuIOKAnEl0IHJlYWxseSBzaG91bGQgbm90IGNvbWUgYXMgYSBzdXJwcmlzZSBpZiB0aGV5IGFyZSBtYXJrZWQgdG8ganVuayzigJ0gQW1vZGVvIHNhaWQuIOKAnFRoZSBtYXJrZXRwbGFjZSBoYXMgcHJpY2VkIGluIG1vc3QsIGlmIG5vdCBhbGwsIG9mIHRoYXQgZG93bmdyYWRlLuKAnQ==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUPclSsAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDc5ODcxYjIyZWYzZTcyZTI=</field><field name="symbol" class="java.lang.String">rO0ABXQAAVA=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUPhu4cAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBBlwo9cKPX</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBC+ZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBBZmZmZmZm</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCQ9cKPXCk</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCQ9cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAMbHgA==</field><field name="id" class="java.lang.String">rO0ABXQAEDBiOGRhNTg0YjYwNTkzMjY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mLXVAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQzMjE=</field><field name="title" class="java.lang.String">rO0ABXQAQEJyaWRnZXMgQ3J1bWJsZSBhcyBNdW5pIEJvcnJvd2VycyBJZ25vcmUgTG93ZXN0IFJhdGVzIFNpbmNlICc2MHM=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbB8fyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGRjZWU5ODIzNjYzNDU0YWM=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lQQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbHGFiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6mZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6mZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6mZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6mZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA54UeuFHrh</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAABLA==</field><field name="id" class="java.lang.String">rO0ABXQAEGMyM2RkMjVmMTBjMjc2ZWI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mH7jAAAQ==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTI0ODI2</field><field name="title" class="java.lang.String">rO0ABXQANU1vcmdhbiBTdGFubGV5IEludmVzdG9ycyBBd2FpdCBGZWQncyBCdXliYWNrIEJsZXNzaW5n</field><field name="content" class="java.lang.String">rO0ABXQWm0J1dCBldmVuIGlmIHRoZSBXYWxsIFN0cmVldCBiYW5rIGdldHMgdGhlIEZlZCdzIGJsZXNzaW5nIHRvIGJ1eSBiYWNrIG1vcmUgc2hhcmVzIGFuZCBwb3RlbnRpYWxseSByYWlzZSBpdHMgZGl2aWRlbmQsIGl0IGlzIHVubGlrZWx5IHRvIGhpdCBhIHNoYXJlaG9sZGVyIHJldHVybiB0YXJnZXQgQ2hpZWYgRXhlY3V0aXZlIEphbWVzIEdvcm1hbiBzZXQgb3V0IGZvciB0aGlzIHllYXIsIGFuYWx5c3RzIGFuZCBpbnZlc3RvcnMgc2FpZC4gVGhlIHRhcmdldCwgY2FsbGVkIHJldHVybiBvbiBlcXVpdHkgKFJPRSksIG1lYXN1cmVzIGhvdyBtdWNoIHByb2ZpdCBhIGJhbmsgbWFrZXMgdXNpbmcgc2hhcmVob2xkZXIgZnVuZHMuIEFuIFJPRSBvZiBhdCBsZWFzdCAxMCBwZXJjZW50IHdvdWxkIHNob3cgdGhhdCBNb3JnYW4gU3RhbmxleSBjYW4gZWFybiBlbm91Z2ggdG8gcGF5IGZvciBuZXcgY2FwaXRhbCBhbmQgc2lnbmFsIHRoYXQgdGhlIGJhbmsgaXMgcGFzdCB0aGUgcmVzdHJ1Y3R1cmluZyBpdCBuZWVkZWQgdG8gbWFrZSBhZnRlciB0aGUgZmluYW5jaWFsIGNyaXNpcy4gTW9yZ2FuIFN0YW5sZXkncyBhbm51YWwgcmV0dXJuIG9uIGVxdWl0eSBoYXMgbGFuZ3Vpc2hlZCBiZWxvdyAxMCBwZXJjZW50IHNpbmNlIDIwMDYuIElmIHRoZSBiYW5rIGNhbm5vdCBqdW1wIHRoYXQgaHVyZGxlIGluIHRoZSBuZWFyIHRlcm0sIHdoaWNoIGNvdWxkIGJlIGRvbmUgYnkgYm9vc3RpbmcgcHJvZml0cywgYnV5aW5nIGJhY2sgc2hhcmVzLCBvciBib3RoLCBzaGFyZWhvbGRlcnMgbWF5IGdldCBpbXBhdGllbnQgYW5kIGRlbWFuZCB0aGF0IG1hbmFnZW1lbnQgb3V0bGluZSBhIGJvbGRlciBzdHJhdGVneSB0byBib29zdCBwcm9maXRzLiAiVGhleSBzaG91bGQgYmUgZ2VuZXJhdGluZyBkb3VibGUtZGlnaXQgUk9FcywgYW5kIGlmIHRoZXkgYXJlbid0LCB3aGF0IGFyZSB0aGV5IGdvaW5nIHRvIGRvIGFib3V0IGl0PyIgc2FpZCBNaWtlIE1heW8sIGEgbG9uZ3RpbWUgYmFuayBhbmFseXN0IGF0IENMU0EuIEhlIHJhaXNlZCBhIHNpbWlsYXIgcXVlc3Rpb24gYXQgTW9yZ2FuIFN0YW5sZXkncyBhbm51YWwgbWVldGluZyBsYXN0IHllYXIsIHByb21wdGluZyBHb3JtYW4gdG8gc2F5IHRoZSBiYW5rIHdvdWxkIG1lZXQgdGhlIDEwIHBlcmNlbnQgdGFyZ2V0IHNvbWUgdGltZSBpbiAyMDE0LiBTVFJFU1MgVEVTVCBQQVNTRUQgTGFzdCB3ZWVrLCB0aGUgRmVkIHNhaWQgTW9yZ2FuIFN0YW5sZXkgcGFzc2VkIGl0cyBhbm51YWwgc3RyZXNzIHRlc3QsIGEgcmVxdWlyZW1lbnQgb2YgdGhlIERvZGQtRnJhbmsgZmluYW5jaWFsIHJlZm9ybSBsZWdpc2xhdGlvbiB0aGF0IGV4YW1pbmVzIGhvdyB3ZWxsIGJpZyBiYW5rcycgYmFsYW5jZSBzaGVldHMgd291bGQgaG9sZCB1cCBpbiBoeXBvdGhldGljYWwgY3Jpc2VzLiBBcyBwYXJ0IG9mIHRoZSB0ZXN0LCBiYW5rcyBzdWJtaXR0ZWQgY2FwaXRhbCBwbGFucywgaW5jbHVkaW5nIGhvdyBtdWNoIHRoZXkgd291bGQgbGlrZSB0byBzcGVuZCBidXlpbmcgYmFjayBzdG9jayBhbmQgcGF5aW5nIG91dCBkaXZpZGVuZHMuIE9uIFdlZG5lc2RheSwgdGhlIEZlZCB3aWxsIHNheSB3aGV0aGVyIHRob3NlIHBsYW5zIGhhdmUgYmVlbiBhcHByb3ZlZCwgYW5kIGhvdyBtdWNoIGVhY2ggYmFuayBjYW4gc3BlbmQuIE1vcmdhbiBTdGFubGV5LCB0aGUgc2l4dGggbGFyZ2VzdCBVLlMuIGJhbmsgYnkgYXNzZXRzLCBoYXMgYmVlbiBwYXlpbmcgb25seSBhIG5vbWluYWwgZGl2aWRlbmQgc2luY2UgdGhlIGZpbmFuY2lhbCBjcmlzaXMgYW5kIGhhcyBub3QgaGFkIGEgbWVhbmluZ2Z1bCBzdG9jayBidXliYWNrIHByb2dyYW0gc2luY2UgMjAwNi4gR29ybWFuIHJlY2VudGx5IHJlZmVycmVkIHRvIE1vcmdhbiBTdGFubGV5J3MgNS1jZW50IHF1YXJ0ZXJseSBkaXZpZGVuZCBhcyAiZGlzdHJlc3NlZCwiIGV2ZW4gdGhvdWdoIGhlIHNhaWQgdGhlIGJhbmsgaXMgaW4gYSBwb3NpdGlvbiBvZiBmaW5hbmNpYWwgc3RyZW5ndGguIEJhbmsgb2YgQW1lcmljYSBDb3JwLiAgYW5kIENpdGlncm91cCBJbmMuIHBheSBsb3dlciBxdWFydGVybHkgZGl2aWRlbmRzIG9mIGEgcGVubnksIHdoaWxlIEdvbGRtYW4gU2FjaHMgR3JvdXAgSW5jLiBwYXlzIDU1IGNlbnRzLCBKUE1vcmdhbiBDaGFzZSAmIENvLiBwYXlzIDM4IGNlbnRzIGFuZCBXZWxscyBGYXJnbyAmIENvLiAgcGF5cyAzMCBjZW50cy4gQWxsIG9mIHRob3NlIGJhbmtzIGJvdWdodCBiYWNrIG1vcmUgc3RvY2sgdGhhbiBNb3JnYW4gU3RhbmxleSBsYXN0IHllYXIgaW4gZG9sbGFyIHRlcm1zLiBNb3JnYW4gU3RhbmxleSBoYXMgcGFpZCBsaXR0bGUgY2FzaCBiYWNrIHRvIGludmVzdG9ycyBiZWNhdXNlIGl0IGhhZCBhIGJpZ2dlciBwcmlvcml0eTogZnVuZGluZyBpdHMgcHVyY2hhc2Ugb2YgdGhlIFNtaXRoIEJhcm5leSBicm9rZXJhZ2UgYnVzaW5lc3MgZnJvbSBDaXRpZ3JvdXAsIGEgZGVhbCBleGVjdXRlZCBvdmVyIGZvdXIgYW5kIGEgaGFsZiB5ZWFycyB0aGF0IHdhcyBmaW5pc2hlZCBpbiBKdW5lIGFuZCB1bHRpbWF0ZWx5IGNvc3QgTW9yZ2FuIFN0YW5sZXkgJDExLjcgYmlsbGlvbi4gIldlIGhhdmUgYmVlbiwgZm9yIHRoZSBsYXN0IGNvdXBsZSBvZiB5ZWFycywgcXVpdGUgY29uc2VydmF0aXZlIGFuZCBkZWxpYmVyYXRlbHkgc28sIiBHb3JtYW4gc2FpZCBpbiBhIHJlY2VudCBpbnRlcnZpZXcgd2l0aCBGb3ggQnVzaW5lc3MgTmV0d29yay4gQnV0LCBoZSBhZGRlZCwgbm93IHRoYXQgdGhlIGJhbmsgaGFzIGNsZWFybHkgcmVjb3ZlcmVkIGZyb20gdGhlIGNyaXNpcywgaGUgd2FudHMgY2FwaXRhbCByZXR1cm5zIHRvIHJlZmxlY3QgdGhhdCBzdHJlbmd0aC4gTW9yZ2FuIFN0YW5sZXkgZGVjbGluZWQgdG8gY29tbWVudCBhYm91dCBpdHMgcHJvcG9zZWQgYnV5YmFjayBhbmQgZGl2aWRlbmQgcGxhbnMgb3IgdGhlIGltcGxpY2F0aW9ucyBmb3IgUk9FLiBEZXNwaXRlIHNvbWUgY29uY2VybnMgb2YgUk9FLCB0aGUgc3RvY2sgd2FzIGFtb25nIHRoZSBiZXN0IHBlcmZvcm1lcnMgaW4gdGhlIGZpbmFuY2lhbCBzZWN0b3IgbGFzdCB5ZWFyLCB1cCA2NCBwZXJjZW50IGluIDIwMTMsIGFuZCBzaGFyZXMgaGF2ZSBtb3JlIHRoYW4gZG91YmxlZCBzaW5jZSB0aGVpciBwb3N0LWNyaXNpcyBsb3cgb2YgJDEyLjM2IGluIDIwMTIuIFNoYXJlcyBhcmUgdXAgMy40IHBlcmNlbnQgeWVhci10by1kYXRlLCBjbG9zaW5nIGF0ICQzMi40NCBvbiBNb25kYXkuIFNvbWUgaW52ZXN0b3JzIGFuZCBhbmFseXN0cyBzYXkgaXQgaXMgbGVzcyBpbXBvcnRhbnQgdGhhdCBNb3JnYW4gU3RhbmxleSBoaXRzIEdvcm1hbidzIHJldHVybi1vbi1lcXVpdHkgZ29hbCB0aGlzIHllYXIgdGhhbiB0aGF0IGl0cyByZXR1cm5zIGFyZSBtb3ZpbmcgaW4gdGhlIHJpZ2h0IGRpcmVjdGlvbi4gIlRoZXkndmUgaGFkIHRvIGdldCB0aGVpciBiYWxhbmNlIHNoZWV0IGJhY2sgaW4gb3JkZXIsIGFuZCBub3cgaXQncyB0aW1lIHRvIHN0YXJ0IHNlbmRpbmcgc29tZSBvZiB0aGF0IG1vbmV5IHRvd2FyZCBzaGFyZWhvbGRlcnMsIiBzYWlkIE1pY2hhZWwgQ3VnZ2lubywgcHJlc2lkZW50IGFuZCBwb3J0Zm9saW8gbWFuYWdlciBvZiB0aGUgUGVybWFuZW50IFBvcnRmb2xpbyBGYW1pbHkgb2YgRnVuZHMsIHdoaWNoIG93bnMgTW9yZ2FuIFN0YW5sZXkgc2hhcmVzLiAiQnV0IHRoZXkgZG9uJ3QgaGF2ZSAxMDAgcGVyY2VudCBjb250cm9sIHdoZW4gaXQgY29tZXMgdG8gbWVldGluZyB0aGVpciBST0UgdGFyZ2V0cy4gSXQgZ2V0cyBiYWNrIHRvIHRoZSBxdWVzdGlvbiBvZiwgJ1doYXQgZG9lcyB0aGUgRmVkIGhhdmUgdG8gc2F5PyciIFdBSVRJTkcgRk9SIFRIRSBGRUQgSG93IG11Y2ggdGhlIEZlZCB3aWxsIGFsbG93IE1vcmdhbiBTdGFubGV5IHRvIHNwZW5kIG9uIGJ1eWJhY2tzIHdpbGwgYWZmZWN0IGhvdyBmYXN0IGl0IGNhbiBoaXQgdGhlIDEwIHBlcmNlbnQgdGFyZ2V0LCB3aGljaCB3b3VsZCBiZSBtb3JlIHRoYW4gZG91YmxlIHRoZSA0LjMgcGVyY2VudCBST0UgaXQgZGVsaXZlcmVkIGluIDIwMTMuIE1vcmdhbiBTdGFubGV5J3MgcmV0dXJucyB3ZXJlIHdlaWdoZWQgZG93biBieSBvbmUtdGltZSBsaXRpZ2F0aW9uIGNvc3RzLCBhbiBhY2NvdW50aW5nIGNoYXJnZSBhbmQgdGhlIGNvc3Qgb2YgdGhlIFNtaXRoIEJhcm5leSBwdXJjaGFzZS4gVGhpcyB5ZWFyJ3MgcHJvZml0cyBhcmUgZXhwZWN0ZWQgdG8gYmUgaGVscGVkIGJ5IGhpZ2hlciBlYXJuaW5ncyBmcm9tIHRoYXQgYnVzaW5lc3MgYXMgd2VsbCBhcyBhIHJlZHVjdGlvbiBvZiBmaXhlZC1pbmNvbWUgdHJhZGluZyBhc3NldHMgdGhhdCBhcmUgY29zdGx5IHVuZGVyIG5ldyByZWd1bGF0aW9ucy4gQWx0aG91Z2ggYW5hbHlzdHMgZXhwZWN0IE1vcmdhbiBTdGFubGV5J3MgcHJvZml0cyB0byBqdW1wIDYyIHBlcmNlbnQgdGhpcyB5ZWFyLCBtYW55IHN0aWxsIGRlc2NyaWJlIEdvcm1hbidzIDIwMTQgZ29hbCBhcyBhZ2dyZXNzaXZlLiBJdCB3b3VsZCByZXF1aXJlIE1vcmdhbiBTdGFubGV5IHRvIGV4Y2VlZCBhbmFseXN0cycgZWFybmluZ3MgZXhwZWN0YXRpb25zIGJ5IGEgc3Vic3RhbnRpYWwgYW1vdW50LCBvciBidXkgYmFjayBtb3JlIHN0b2NrIHRoYW4gYW5hbHlzdHMgZXhwZWN0IHRoZSBGZWQgdG8gYWxsb3cuIE1vcmdhbiBTdGFubGV5IHN0YXJ0ZWQgYnV5aW5nIGJhY2sgc3RvY2sgbGFzdCB5ZWFyIGZvciB0aGUgZmlyc3QgdGltZSBzaW5jZSAyMDA2LiBJdCBhbm5vdW5jZWQgYSAkNTAwIG1pbGxpb24gcmVwdXJjaGFzZSBwcm9ncmFtIGluIEp1bHksIGFuZCB1c2VkICQzNTAgbWlsbGlvbiB3b3J0aCBvZiB0aGF0IGF1dGhvcml6YXRpb24gYmVmb3JlIHllYXItZW5kLiBFdmVuIHdpdGggdGhvc2UgcmVwdXJjaGFzZXMsIE1vcmdhbiBTdGFubGV5J3Mgb3V0c3RhbmRpbmcgc2hhcmUgY291bnQgaW5jcmVhc2VkIGJ5IDIgcGVyY2VudCBsYXN0IHllYXIgYmVjYXVzZSBvZiBzaGFyZXMgaXNzdWVkIGFzIHBhcnQgb2YgY29tcGVuc2F0aW9uLiBCeSBjb21wYXJpc29uLCBpdHMgY2hpZWYgcml2YWwgR29sZG1hbiBTYWNocyBoYXMgc3BlbnQgJDIxIGJpbGxpb24gcmVwdXJjaGFzaW5nIHNoYXJlcyBzaW5jZSAyMDEwLCByZWR1Y2luZyBvdXRzdGFuZGluZyBzdG9jayBieSAxNSBwZXJjZW50LCBhbmQgaGFzIGluY3JlYXNlZCBpdHMgZGl2aWRlbmQgdHdpY2UuIEFuYWx5c3RzIGFyZSBlc3RpbWF0aW5nIHRoYXQgTW9yZ2FuIFN0YW5sZXkgd2lsbCBidXkgYmFjayBhYm91dCAkNzAwIG1pbGxpb24gd29ydGggb2Ygc3RvY2sgdGhpcyB5ZWFyIG9uIGEgbmV0IGJhc2lzLCBvbiBhdmVyYWdlLCBhY2NvcmRpbmcgdG8gSVNJIEdyb3VwLiBUaGUgYmFuayB3b3VsZCBuZWVkIHRvIGJ1eSBiYWNrIG5lYXJseSAyMCB0aW1lcyB0aGF0IGFtb3VudCB0byBoaXQgYSAxMCBwZXJjZW50IFJPRSB0YXJnZXQsIGJhc2VkIG9uIHRoZSBhdmVyYWdlIGFuYWx5c3QgZWFybmluZ3MgZXN0aW1hdGUuIEluc3RlYWQsIGFuYWx5c3RzIGFyZSBmb3JlY2FzdGluZyBhIHJldHVybi1vbi1lcXVpdHkgb2YgNy41IHBlcmNlbnQgdGhpcyB5ZWFyLCBvbiBhdmVyYWdlLCBhY2NvcmRpbmcgdG8gVGhvbXNvbiBSZXV0ZXJzIGRhdGEuIE5leHQgeWVhciwgYW5hbHlzdHMgZXN0aW1hdGUgTW9yZ2FuIFN0YW5sZXkgd2lsbCByZWFjaCBhbiBST0Ugb2YgOC42IHBlcmNlbnQsIG9uIGF2ZXJhZ2UuIEFuYWx5c3RzIGRvIG5vdCBleHBlY3QgdGhlIGJhbmsgdG8gaGl0IDEwIHBlcmNlbnQgb24gYSBxdWFydGVybHkgb3IgYW5udWFsIGJhc2lzIGluIGVpdGhlciB5ZWFyLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUT3nACAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDVhNGU2YjNmMGY3NDM4ZTk=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lDQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUT8wlyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxgo9cKPXD</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxjMzMzMzN</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxgAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxh64UeuFI</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAw3rhR64Uf</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAVfA==</field><field name="id" class="java.lang.String">rO0ABXQAEDA4MTgzZTU5Nzk2MmJlOGI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mG2WAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDU3NzM=</field><field name="title" class="java.lang.String">rO0ABXQAOUJvbmRzIFR1bWJsZSBXaXRoIFN0b2NrcyBhcyBZZWxsZW4gT3V0bGluZXMgU3RpbXVsdXMgRXhpdA==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUTYtdiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDhhNzlkZWYyMDVmNTAxZjA=</field><field name="symbol" class="java.lang.String">rO0ABXQABUJBTVhG</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUTd3DSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBeHrhR64Uf</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBeKZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBeDhR64Ueu</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBeDhR64Ueu</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBdLCj1wo9c</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAADhA==</field><field name="id" class="java.lang.String">rO0ABXQAEDYwYTM1Nzg0ZGViY2E3ZmQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHgDAAAA==</field></document></documents><date>2015-05-07T12:26:00-0500</date></cacheEntry>
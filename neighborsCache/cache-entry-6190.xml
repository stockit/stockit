<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hBbHRob3VnaCBmaWd1cmVzIGFyZSBzY2FyY2UgYW5hbHlzdHMgdGhpbmsgc2VsbGluZyBkYXRhIG9uIG1vYmlsZSB1c2VycyBsb2NhdGlvbnMgbW92ZW1lbnRzIGFuZCB3ZWIgYnJvd3NpbmcgaGFiaXRzIG1heSBncm93IGludG8gYSBtdWx0aSBiaWxsaW9uZG9sbGFyIG1hcmtldCBmb3IgdGhlIGJ1c2luZXNzIEJpZyBjYXJyaWVycyBsaWtlIFRlbGVmb25pY2EgVmVyaXpvbiBPcmFuZ2UgYW5kIFNpbmdhcG9yZXMgU3Rhcmh1YiB3YXJuIHRoYXQgdGhleSBhcmUgb25seSBqdXN0IHN0YXJ0aW5nIHRvIHRlc3QgdGhlIHdhdGVycyBhbmQgcGxlZGdlIHRvIG1hcmtldCBvbmx5IGFub255bW91cyBjcm93ZCBpbmZvcm1hdGlvbiB0byBwcm90ZWN0IGN1c3RvbWVycyBUaGV5IGFyZSBhbHNvIHByb21vdGluZyB0aGVpciBiaWcgZGF0YSBwcm9kdWN0cyBhcyBiZWluZyBoZWxwZnVsIHdlbGwgYmV5b25kIHRoZSByZWFsbXMgb2YgYWR2ZXJ0aXNpbmcgIGZvciBjcmVkaXQgY2FyZCBjb21wYW5pZXMgd2FudGluZyB0byBkZXRlY3QgZnJhdWQgZm9yIGFtYnVsYW5jZSBvcGVyYXRvcnMgcGxvdHRpbmcgcm91dGVzIHRvIGF2b2lkIHRyYWZmaWMgYW5kIGZvciBwdWJsaWMgaGVhbHRoIG9mZmljaWFscyByZXNwb25kaW5nIHRvIG91dGJyZWFrcyBvZiBmbHUgQnV0IHdoaWxlIHNvbWUgY2FycmllcnMgaGF2ZSBkZWNpZGVkIHRvIHByZXNzIG9uIHdpdGggZGV2ZWxvcGluZyB0aGVpciBkYXRhIGJ1c2luZXNzIHNpbmNlIGZvcm1lciBVUyBOYXRpb25hbCBTZWN1cml0eSBBZ2VuY3kgY29udHJhY3RvciBFZHdhcmQgU25vd2RlbnMgZGlzY2xvc3VyZXMgb3RoZXJzIGhhdmUgc3RhcnRlZCBwaXRjaGluZyB0aGVtc2VsdmVzIGFzIHRoZWlyIGN1c3RvbWVycyBiZXN0IGFsbGllcyBpbiBzZWVraW5nIHRvIGhpZGUgZnJvbSBhbnkgcHJ5aW5nIGV5ZXMgVmVyaXpvbnMgUHJlY2lzaW9uIE1hcmtldGluZyBJbnNpZ2h0cyBwcm9kdWN0IHdoaWNoIG9mZmVycyBidXNpbmVzc2VzIHN0YXRpc3RpY3MgYWJvdXQgbW9iaWxlIHVzZXJzIGluIGEgZ2l2ZW4gYXJlYSB3YXMgaW4gY29tbWVyY2lhbCB0cmlhbHMgd2l0aCBzcG9ydHMgdGVhbXMgYW5kIGJpbGxib2FyZCBvd25lcnMgd2hlbiB0aGUgU25vd2RlbiBhbGxlZ2F0aW9ucyBoaXQgQWZ0ZXIgZnJlc2ggZGViYXRlIGJ5IHRvcCBtYW5hZ2VtZW50IGFuZCB0aGUgYm9hcmQgb24gd2hldGhlciBzZWxsaW5nIGV2ZW4gYW5vbnltb3VzIGRhdGEgb24gY3VzdG9tZXJzIHdhcyBhIGdvb2QgbW92ZSB0aGUgY29tcGFueSBkZWNpZGVkIHRvIGdvIGFoZWFkIHdpdGggaXQgc2FpZCBDb2xzb24gSGlsbGllciBhIFZlcml6b24gZXhlY3V0aXZlIFByaXZhY3kgaXMgYSBob3QgYnV0dG9uIGlzc3VlIHJpZ2h0IG5vdyBidXQgd2UgdGhpbmsgd2UgY2FuIHRha2UgYSBsZWFkZXJzaGlwIHN0YW5jZSBIaWxsaWVyIHNhaWQgSXRzIG5vdCBhIHJlcHV0YXRpb25hbCByaXNrIGlmIHlvdSBkbyBpdCByaWdodCBhbmQgYXJlIHByb2FjdGl2ZSBpbiBjb21tdW5pY2F0aW9uIHdpdGggY29uc3VtZXJzIGFuZCBwb2xpY3kgbWFrZXJzIE90aGVyIHRlbGVjb20gY29tcGFuaWVzIHRvb2sgdGhlIG9wcG9zaXRlIHRhY2sgY2FzdGluZyB0aGVtc2VsdmVzIGFzIGJldHRlciBndWFyZGlhbnMgb2YgY3VzdG9tZXIgZGF0YSB0aGFuIGludGVybmV0IGNvbXBhbmllcyBsaWtlIEdvb2dsZSB3aGljaCB1c2UgaXQgdG8gdGFyZ2V0IGFkdmVydGlzaW5nIERldXRzY2hlIFRlbGVrb20gZm9yIGV4YW1wbGUgbGFzdCB5ZWFyIGxhdW5jaGVkIGFuIGVuY3J5cHRlZCBFbWFpbCBtYWRlIGluIEdlcm1hbnkgc2VydmljZSBhbmQgYSBzZWN1cmUgY29tbXVuaWNhdGlvbnMgbGluayBmb3Igc21hbGwgYnVzaW5lc3NlcyB0byB3YXJkIG9mZiBoYWNrZXJzIG9yIHNwb29rcyBQcm90ZWN0aW9uIG9mIHRoZSBwcml2YXRlIHNwaGVyZSBpcyBhIHZhbHVhYmxlIGNvbW1vZGl0eSBpdHMgQ0VPIHNhaWQgREFUQSBUUk9WRSBBcyB0aGV5IHNoaWZ0IHRvIHRyZWF0aW5nIGN1c3RvbWVyIGRhdGEgYXMgYW4gYXNzZXQgdG8gYmUgbWluZWQgaW5zdGVhZCBvZiBhIG1lcmUgaW5jaWRlbnRhbCB0byBydW5uaW5nIG5ldHdvcmtzIHRlbGVjb20gb3BlcmF0b3JzIG11c3QgdHJlYWQgY2FyZWZ1bGx5IFBlb3BsZSBhcmUgdXNlZCB0byBnaXZpbmcgRmFjZWJvb2sgYW5kIEdvb2dsZSB0aGVpciBwZXJzb25hbCBpbmZvcm1hdGlvbiBhbmQgZ2VuZXJhbGx5IGFjY2VwdCB0aGF0IHRoZSB0cmFkZW9mZiBmb3IgZnJlZSBzZXJ2aWNlcyBpcyB0aGF0IHRoZWlyIGRhdGEgaXMgdXNlZCB0byB0YXJnZXQgYWRzIEJ1dCBwZW9wbGUgY291bGQgYmUgaXJrZWQgaWYgdHJhY2tpbmcgZXh0ZW5kcyBpbnRvIHRoZSByZWFsIHdvcmxkIHNhaWQgYSB0ZWxlY29tcyBpbmR1c3RyeSBjb25zdWx0YW50IHdobyBkZWNsaW5lZCB0byBiZSBuYW1lZCBiZWNhdXNlIG9mIGNsaWVudCBzZW5zaXRpdml0aWVzIFN1cnZleXMgc2hvdyBwZW9wbGUgdHJ1c3QgdGVsZWNvbSBwcm92aWRlcnMgbW9yZSB0aGFuIGludGVybmV0IGNvbXBhbmllcyB0byBzYWZlZ3VhcmQgdGhlaXIgcGVyc29uYWwgZGF0YSBhbHRob3VnaCBvdmVyYWxsIGNvbmZpZGVuY2UgaW4gY29tcGFuaWVzIHdhcyB2ZXJ5IGxvdyBJbiBhIHBvbGwgY29tbWlzc2lvbmVkIGJ5IE9yYW5nZSA0MSBwZXJjZW50IG9mIHJlc3BvbmRlbnRzIHNhaWQgdGhleSB0cnVzdCBtb2JpbGUgY2FycmllcnMgdG8ga2VlcCB0aGVpciBpbmZvcm1hdGlvbiBzYWZlIGNvbXBhcmVkIHdpdGggMjAgcGVyY2VudCBmb3Igc29jaWFsIG5ldHdvcmtzIGxpa2UgRmFjZWJvb2sgb3IgVHdpdHRlciBBbGwgaXQgdGFrZXMgaXMgb25lIG1pc3N0ZXAgb24gZGF0YSBtb25ldGl6YXRpb24gZm9yIHNvbWUgY3VzdG9tZXJzIHRvIGRlY2lkZSB0aGV5IGRvbnQgd2FudCB0byBzdGF5IHdpdGggeW91IHRoZSBjb25zdWx0YW50IHNhaWQgVG8gY29sbGVjdCB0aGUgZGF0YSB0ZWxlY29tIG9wZXJhdG9ycyBwbGFjZSBwcm9iZXMgaW4gbW9iaWxlIG5ldHdvcmtzIHRvIGNhcHR1cmUgdGhlIG1pbGxpb25zIG9mIHJlY29yZHMgcGVyIGRheSBnZW5lcmF0ZWQgd2hlbiBwZW9wbGUgc2VuZCB0ZXh0cyBtYWtlIGNhbGxzIGFuZCBzdXJmIHRoZSB3ZWIgVGhlIGRhdGEgaXMgc3RyaXBwZWQgb2YgcGVyc29uYWwgaW5mb3JtYXRpb24gdGhlbiBwb29sZWQgc28gaXQgY2FuIGJlIGFuYWx5emVkIGZvciBwYXR0ZXJucyB1c2VmdWwgZm9yIGJ1c2luZXNzIG9yIGdvdmVybm1lbnRzIEl0IGlkZW50aWZpZXMgYSBwZXJzb25zIGxvY2F0aW9uIHRvIGFib3V0IDIwMCB0byAzMDAgbWV0ZXJzIFByaXZhY3kgYWR2b2NhdGVzIGFuZCByZWd1bGF0b3JzIHNheSB0aGF0IGlmIHRoZSBkYXRhIGlzIGFub255bW91cyBhbmQgYWJvdXQgZ3JvdXBzIG5vdCBpbmRpdmlkdWFscyBpdCBpcyBsZWdhbCBmb3IgdGVsZWNvbSBjb21wYW5pZXMgdG8gc2VsbCBpdCBNZWFud2hpbGUgY29tcGFuaWVzIGFyZSB0YWtpbmcgZGlmZmVyZW50IGFwcHJvYWNoZXMgdG8gdXNlciBjb25zZW50IE9yYW5nZSBjb2xsZWN0cyBkYXRhIGZvciBpdHMgRmx1eCBWaXNpb24gZGF0YSBwcm9kdWN0IGZyb20gRnJlbmNoIG1vYmlsZSB1c2VycyB3aXRob3V0IG9mZmVyaW5nIGEgd2F5IGZvciB0aGVtIHRvIG9wdG91dCBhcyBkb2VzIFRlbGVmb25pY2FzIGVxdWl2YWxlbnQgc2VydmljZSBWZXJpem9uIHRvbGQgY3VzdG9tZXJzIGluIDIwMTEgaXQgY291bGQgdXNlIHRoZWlyIGRhdGEgYW5kIG5vdyBpbmNsdWRlcyAxMDAgbWlsbGlvbiByZXRhaWwgbW9iaWxlIGN1c3RvbWVycyBieSBkZWZhdWx0IHRob3VnaCB0aGV5IGNhbiBvcHQgb3V0IG9ubGluZSBNb3JlIGludHJ1c2l2ZSBwcm9ncmFtcyB0aGF0IGRyaXZlIGxvY2F0aW9uYmFzZWQgYWR2ZXJ0aXNpbmcgdG8gcGVvcGxlcyBtb2JpbGVzIHVzdWFsbHkgcmVxdWlyZSB1c2VycyB0byBhZ3JlZSBhbmQgc29tZSBjb21wYW5pZXMgb2ZmZXIgcmV3YXJkcyBpbiBsb3lhbHR5IHNjaGVtZXMgaW4gZXhjaGFuZ2UgRklORElORyBUSEUgTUFSS0VUIEluIG9uZSBwcm9qZWN0IFRlbGVmb25pY2Egd29ya2VkIHdpdGggTW9ycmlzb25zIEJyaXRhaW5zIGZvdXJ0aGxhcmdlc3Qgc3VwZXJtYXJrZXQgY2hhaW4gdG8gc3R1ZHkgd2hlcmUgcmVzaWRlbnRzIG9mIGFuIGFyZWEgaW4gc291dGh3ZXN0IEVuZ2xhbmQgZGlkIHRoZWlyIGZvb2QgSXQgcGFyc2VkIGRhdGEgb24gd2hlcmUgc2hvcHBlcnMgYXQgTW9ycmlzb25zIHN0b3JlcyBjYW1lIGZyb20gYW5kIGRpZCB0aGUgc2FtZSBmb3IgbmVhcmJ5IHJpdmFsIHN0b3JlcyBzbyBhcyB0byBpZGVudGlmeSB3aGljaCBob3VzZWhvbGRzIHNob3VsZCBiZSB0YXJnZXRlZCBmb3IgcHJvbW90aW9ucyBPdXQgb2YgMTEgbWlsbGlvbiBob3VzZWhvbGRzIGluIHRoZSBhcmVhIFRlbGVmb25pY2EgYWR2aXNlZCBNb3JyaXNvbnMgdG8gc2VuZCBjb3Vwb25zIHRvIDQwMDAwMCBvZiB0aGVtIGxlYWRpbmcgdG8gYSAxNTAgcGVyY2VudCByaXNlIGluIHN0b3JlIHZpc2l0cyB3aXRob3V0IGEgcmV2ZW51ZSBkcm9wb2ZmIHRoYXQgYWNjb21wYW5pZXMgc29tZSBkaXNjb3VudCBzY2hlbWVzIFdlIHNwb3R0ZWQgcG9zdGFsIHNlY3RvcnMgd2hlcmUgdGhlcmUgd2FzIGEgZ2VudWluZSBiYXR0bGUgZ3JvdW5kIGJldHdlZW4gTW9ycmlzb25zIHN0b3JlcyBhbmQgdGhlaXIgY29tcGV0aXRvcnMgc2FpZCBQaGlsIERvdXR5IHdobyBydW5zIFRlbGVmb25pY2FzIFNtYXJ0IFN0ZXBzIFRoaXMgd2FzIHRoZSBtb3N0IGZlcnRpbGUgZ3JvdW5kIGZvciB0aGVpciBtYXJrZXRpbmcgZWZmb3J0cyBTbWFydCBTdGVwcyBoYXMgZG96ZW5zIG9mIGNsaWVudHMgaW4gQnJpdGFpbiBzYWlkIERvdXR5IGFuZCB0aGUgZmlybSB3aWxsIHN0YXJ0IHBpbG90cyBpbiBCcmF6aWwgdGhpcyB5ZWFyIFRlbGVmb25pY2Egc3BlYWtzIHRvIHJlZ3VsYXRvcnMgZWFybHkgc28gYXMgdG8gYXZvaWQgYSByZXBlYXQgb2YgYSBmbGFwIGluIEdlcm1hbnkgbGFzdCB5ZWFyIGluIHdoaXQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0wMy0yN1QwMDowMDowMFogVE8gMjAxMy0xMi0wM1Q1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTEzNzg5</field><field name="title" class="java.lang.String">rO0ABXQAKkZhY2Vib29rIEJyb2FkZW5zIEVmZm9ydCB0byBTaG93IEFkIFBheW9mZg==</field><field name="content" class="java.lang.String">rO0ABXQKoEZhY2Vib29rIEluYy4gaXMgZXhwYW5kaW5nIGEgc2VydmljZSB0aGF0IGxldHMgYSBncm91cCBvZiBtYWpvciBtYXJrZXRlcnMgbWVhc3VyZSB0aGUgZWZmZWN0aXZlbmVzcyBvZiB0aGVpciBhZHMsIGluIHRoZSBjb21wYW55J3MgbGF0ZXN0IG1vdmUgdG8gcHJvdmUgdGhhdCBhZHZlcnRpc2luZyBvbiB0aGUgd29ybGQncyBsYXJnZXN0IHNvY2lhbCBuZXR3b3JrIGxlYWRzIHRvIHJlYWwgd29ybGQgc2FsZXMuIFRoZSBzZXJ2aWNlLCB3aGljaCBGYWNlYm9vayBxdWlldGx5IHJvbGxlZCBvdXQgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgZHVyaW5nIHRoZSBwYXN0IHllYXIsIGFuYWx5emVzIGl0cyB1c2VycycgbW9iaWxlIHBob25lcyBhbmQgd2lyZWxlc3MgcHJvdmlkZXJzIHRvIHNlZSB3aG8gaGFzIHN3aXRjaGVkIGhhbmRzZXRzIG9yIGNhcnJpZXJzIGFmdGVyIGxvb2tpbmcgYXQgYW4gYWQuIEZhY2Vib29rLCB3aGljaCBzYXlzIHVzZXJzJyBwZXJzb25hbCBkYXRhIGFyZSBoaWRkZW4gZnJvbSBhZHZlcnRpc2Vycywgd2lsbCBiZWdpbiBvZmZlcmluZyB0aGUgc2VydmljZSB0byB0ZWxlY29tIGluZHVzdHJ5IGFkdmVydGlzZXJzIGluIG5pbmUgb3RoZXIgY291bnRyaWVzIHRoaXMgd2Vlaywgd2l0aCBhIHRhcmdldCBvZiAyNSBjb3VudHJpZXMgYnkgeWVhcidzIGVuZC4gV2l0aCAxLjE1IGJpbGxpb24gbWVtYmVycywgRmFjZWJvb2sgaGFzIHN0ZXBwZWQgdXAgZWZmb3J0cyBvdmVyIHRoZSBwYXN0IHllYXIgdG8gZm9yZ2Ugc3Ryb25nZXIgdGllcyB3aXRoIGFkdmVydGlzZXJzIGFjcm9zcyBkaWZmZXJlbnQgaW5kdXN0cmllcyBhbmQgcHV0IHRvIHJlc3QgYW55IHNrZXB0aWNpc20gYWJvdXQgdGhlIHBheW9mZiB0aGF0IGFkcyBvbiBpdHMgc29jaWFsIG5ldHdvcmsgY2FuIGRlbGl2ZXIuIEluIE9jdG9iZXIsIEZhY2Vib29rIHBhcnRuZXJlZCB3aXRoIERhdGFsb2dpeCwgYSBkYXRhIG1pbmluZyBmaXJtLCB0byBoZWxwIHNob3cgbWFya2V0ZXJzIG9mIGNvbnN1bWVyIHBhY2thZ2VkIGdvb2RzIGhvdyB0aGVpciBGYWNlYm9vayBjYW1wYWlnbnMgbGVkIHRvIGluLXN0b3JlIHJldGFpbCBzYWxlcy4gVGVsZWNvbSBpcyB0aGUgdGhpcmQgbGFyZ2VzdCBjYXRlZ29yeSBvZiBkaWdpdGFsIGJyYW5kIGFkdmVydGlzaW5nIGluIHRoZSBVbml0ZWQgU3RhdGVzLCBiZWhpbmQgcmV0YWlsIGFuZCBjb25zdW1lciBwYWNrYWdlZCBnb29kcywgYWNjb3JkaW5nIHRvIGluZHVzdHJ5IHJlc2VhcmNoIGZpcm0gZU1hcmtldGVyLiBGYWNlYm9vaydzIG1vYmlsZSBhcHBzIGF1dG9tYXRpY2FsbHkgZGV0ZWN0IGEgdXNlcidzIHBob25lIG1vZGVsIGFuZCB3aXJlbGVzcyBwcm92aWRlciB0byBvcHRpbWl6ZSBpdHMgb25saW5lIHNlcnZpY2UgZm9yIHRoZW0uIFRoYXQgZGF0YSBhbHNvIHByb3ZpZGVzIHZhbHVhYmxlIGluc2lnaHRzLiAiV2UgaGF2ZSB0aGUgYWJpbGl0eSB0byB1bmRlcnN0YW5kIGhvdyB0aGUgYWRzIGFjdHVhbGx5IGluZmx1ZW5jZWQgdGhlIGRldmljZSB0aGF0IHNvbWVib2R5IGhhZCwgYW5kIGFsbCB0aGF0IGRhdGEgc2l0cyB3aXRoaW4gRmFjZWJvb2ssIiBzYWlkIEJyYWQgU21hbGx3b29kLCB3aG8gb3ZlcnNlZXMgRmFjZWJvb2sncyBtZWFzdXJlbWVudHMgYW5kIGluc2lnaHRzIGdyb3VwLiBGYWNlYm9vayBzYWlkIHRocmVlIG91dCBvZiB0aGUgZm91ciB0b3AgVS5TLiB3aXJlbGVzcyBjYXJyaWVycyBhcmUgdXNpbmcgdGhlIGFkIG1lYXN1cmVtZW50IHNlcnZpY2UsIGluY2x1ZGluZyBBVCZUIE1vYmlsaXR5LiBTaGFyZXMgb2YgRmFjZWJvb2sgaGF2ZSBjbGltYmVkIG1vcmUgdGhhbiA3MCBwZXJjZW50IGluIHJlY2VudCBtb250aHMgYXMgdGhlIGNvbXBhbnkncyByZXZlbnVlIGdyb3d0aCBoYXMgYWNjZWxlcmF0ZWQsIHRoYW5rcyBpbiBsYXJnZSBwYXJ0IHRvIHRoZSBwb3B1bGFyaXR5IG9mIG5ldyBtb2JpbGUgYWRzIHRoYXQgYXBwZWFyIGluIHVzZXJzJyBuZXdzZmVlZHMuIE1vYmlsZSBhZHMgZm9yIHRlbGVjb20gaW5kdXN0cnkgbWFya2V0ZXJzIGFyZSBzZXZlbiB0aW1lcyBtb3JlIGVmZmVjdGl2ZSB0aGFuIHRoZSBhZHMgRmFjZWJvb2sgZGlzcGxheXMgb24gcGVyc29uYWwgY29tcHV0ZXJzLCB0aGUgY29tcGFueSBzYWlkLiBTZXJ2aWNlcyBhbmQgc3R1ZGllcyB0aGF0IGRlbW9uc3RyYXRlIGEgbWFya2V0ZXIncyByZXR1cm4gb24gaW52ZXN0bWVudCByZWZsZWN0IHRoZSAibWF0dXJpbmciIG9mIEZhY2Vib29rJ3MgYWR2ZXJ0aXNpbmcgc2FsZXMgb3BlcmF0aW9ucywgc2FpZCBQaXZvdGFsIFJlc2VhcmNoIEdyb3VwIGFuYWx5c3QgQnJpYW4gV2llc2VyLiAiSGF2aW5nIG1vcmUgYW5hbHlzZXMgYW5kIGNhc2Ugc3R1ZGllcyBpcyBoZWxwZnVsIGluIHRoZSBzYWxlcyBwcm9jZXNzLCIgaGUgc2FpZC4gIlRoZSBhdmVyYWdlIGFkdmVydGlzZXIgd2FudHMgdG8gc3BlbmQgbW9uZXkgb24gRmFjZWJvb2s7IHRoZXkganVzdCBoYXZlIHRvIGp1c3RpZnkgaXQuIiBBIHJlY2VudCBzdXJ2ZXkgYnkgaW5kdXN0cnkgbWFnYXppbmUgQWR2ZXJ0aXNpbmcgQWdlIGFuZCBSQkMgQ2FwaXRhbCBNYXJrZXRzIGZvdW5kIHRoYXQgNDMgcGVyY2VudCBvZiByZXNwb25kZW50cyBiZWxpZXZlZCB0aGVpciByZXR1cm4gb24gaW52ZXN0bWVudCBmcm9tIEZhY2Vib29rIGFkcyBoYWQgImRyYW1hdGljYWxseSIgb3IgInNvbWV3aGF0IiBpbXByb3ZlZCBvdmVyIHRoZSBsYXN0IHNpeCBtb250aHMu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUE0lsyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDY4NTVmMWUxY2UzNjlhMTE=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0FEUw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUE5vSiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBqUj1wo9cK</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBrgKPXCj1x</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBqG9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBqOAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBqOAAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAdlXA==</field><field name="id" class="java.lang.String">rO0ABXQAEGQ1ZTc2MjU0MWYwN2IxODM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mD7eAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE1NDc0</field><field name="title" class="java.lang.String">rO0ABXQAL0dvb2dsZSdzIFdlYXJhYmxlIEdsYXNzIEdhZGdldDogQ29vbCBvciBDcmVlcHk/</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT7ATvSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDllNzlkOTczNmRkMWEzMTc=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNMQUI=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT7FdVCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBFaPXCj1wp</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBF1HrhR64U</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBFR64UeuFI</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBFoUeuFHrh</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBFoUeuFHrh</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAZZyA==</field><field name="id" class="java.lang.String">rO0ABXQAEGI3NjE5MGY1ZTdkY2Y4NzA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMVRAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE3MjQy</field><field name="title" class="java.lang.String">rO0ABXQANUZhY2Vib29rIE1heSBTZWxsIFRWLVN0eWxlIEFkcyBmb3IgJDIuNSBNaWxsaW9uIGEgRGF5</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUAt8niAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGY5ZmZiN2QzMzE5NTE2OTY=</field><field name="symbol" class="java.lang.String">rO0ABXQABVBHUEVG</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUAzGNSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBT4AAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBULMzMzMzN</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBT4AAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBULMzMzMzN</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBT0zMzMzMz</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABi1A==</field><field name="id" class="java.lang.String">rO0ABXQAEDAzZGM0MmY5MTEyM2M3Zjk=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMJ4AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDMyMjQ=</field><field name="title" class="java.lang.String">rO0ABXQANlRheCBMYXcgRnVlbHMsIFRoZW4gS2lsbHMsIGEgRGlzY291bnQtVG9iYWNjbyBJbmR1c3RyeQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEBFzSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGUzOTY1NDdiNTJkZmZkYWE=</field><field name="symbol" class="java.lang.String">rO0ABXQABFJPTEw=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEGPZCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOOZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOtwo9cKPX</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOOZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOp64UeuFI</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBNrMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAC6VA==</field><field name="id" class="java.lang.String">rO0ABXQAEDdkMmZmMzdiYmUxMThlMzc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKMBAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIxMTgx</field><field name="title" class="java.lang.String">rO0ABXQAKUdvb2dsZSBMYXVuY2hlcyBJbnRlcm5ldC1iZWFtaW5nIEJhbGxvb25z</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT9LWqiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDA4ODcxZjlhNGU3ZDEwMWI=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0ZMWQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT9QgQSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwgAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAw6PXCj1wp</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAweuFHrhR7</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwgo9cKPXD</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAtR64UeuFI</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAMcGA==</field><field name="id" class="java.lang.String">rO0ABXQAEDZmNTlkMGQ0ZjZmZDVlMzQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHRFAAAA==</field></document></documents><date>2015-05-07T12:11:59-0500</date></cacheEntry>
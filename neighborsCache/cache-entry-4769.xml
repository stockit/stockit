<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0BbpTbyB5b3UgbWF5IGZpbmQgaXQgaW50ZXJlc3RpbmcgdG8gbGVhcm4gdGhhdCAgaW4gMTggb2YgdGhlIGxhc3QgMjAgeWVhcnMgd2hlbiB0aGUgU1AgNTAwIGluZGV4IGhhcyByaXNlbiAgbW9kZXJhdGVseWxlc3MgdGhhbiAxNSBwZXJjZW50ICB1cCB0byBUaGFua3NnaXZpbmcgaXQgaGFzIGNsaW1iZWQgIGZ1cnRoZXIgdW50aWwgeWVhcmVuZCBKYXNvbiBHb2VwZmVydCBDRU8gb2YgU3VuZGlhbCBDYXBpdGFsICBSZXNlYXJjaCB0b2xkIENOQkMgV2hlbiBpdCB0aGUgU1AgNTAwIGRvZXMgZGVjbGluZSB0eXBpY2FsbHkgIGl0cyB2ZXJ5IHZlcnkgc21hbGwgaGUgc2FpZCBUaGlzIHllYXIgdGhlIFNQIDUwMCBoYXMgcmV0dXJuZWQgMTE5NiBwZXJjZW50IHRocm91Z2ggTW9uZGF5IEJ1dCBiZWZvcmUgeW91IGdldCB0b28gZXhjaXRlZCBub3RlIHRoYXQgIHNpbmNlIDE5NTAgaW4gdGhlIDI4IHllYXJzIHdoaWNoIHRoZSBTUCByb3NlIDEwIHBlcmNlbnQgb3IgbW9yZSBieSAgVGhhbmtzZ2l2aW5nIHRoZSByZXN1bHRzIHdlcmVudCBxdWl0ZSBhcyBzdHJvbmcgSW4gNjggcGVyY2VudCBvZiAgdGhvc2UgY2FzZXMgdGhlIG1hcmtldCBjb250aW51ZWQgdG8gYWR2YW5jZSBhZnRlciBUaGFua3NnaXZpbmcgIGFjY29yZGluZyB0byBHb2VwZmVydCBUaGF0IHN1Z2dlc3RzIGJ1eWluZyBwcmVzc3VyZSBlYXJsaWVyIGluIHRoZSB5ZWFyIGV4aGF1c3RlZCBzb21lIG9mIHRoZSBwb3N0aG9saWRheSBlbnRodXNpYXNtIGhlIHNhaWQgTWVhbndoaWxlIFdhbGwgU3RyZWV0IEpvdXJuYWwgY29sdW1uaXN0IEVTICBCcm93bmluZyBzYXlzIHRoZSBmYWN0IHRoYXQgZXF1aXR5IHN0cmF0ZWdpc3RzIGFyZW50IHByZWRpY3RpbmcgbGFyZ2UgIGFkdmFuY2VzIGZvciB0aGUgbWFya2V0IG5leHQgeWVhciBtYXkgYWN0dWFsbHkgYmUgYSBidWxsaXNoIHNpZ24gTWFueSAgc3RyYXRlZ2lzdHMgZm9yZWNhc3QgZ2FpbnMgb2YgNSBwZXJjZW50IG9yICBsZXNzIEl0IGlzIGFub3RoZXIgc2lnbiB0aGF0IGludmVzdG9ycyBhcmVudCB5ZXQgIHNsaXBwaW5nIGludG8gdGhlIGV4Y2VzcyBvcHRpbWlzbSB0aGF0IHB1c2hlZCBzdG9ja3MgdG8gdW5zdXN0YWluYWJsZSAgbGV2ZWxzIGJlZm9yZSB0aGUgY29sbGFwc2VzIG9mIDIwMDAgYW5kIDIwMDggQnJvd25pbmcgd3JpdGVzIFNvbWUgb3RoZXJzIGFncmVlIElmIHBlb3BsZSBoYXZlIGV4cGVjdGF0aW9ucyB0aGF0IGFyZSBzZW5zaWJsZSAgdGhleSBhcmVudCBhcyBsaWtlbHkgdG8gYnVpbGQgaW52ZXN0bWVudCBwbGFucyB0aGF0IGFyZSBpbmZlYXNpYmxlICBTZXRoIE1hc3RlcnMgY2hpZWYgaW52ZXN0bWVudCBvZmZpY2VyIGF0IEJlcm5zdGVpbiBHbG9iYWwgV2VhbHRoICBNYW5hZ2VtZW50IHRvbGQgQnJvd25pbmcgTWFzdGVycyBmb3JlY2FzdHMgYSB0b3RhbCAgcmV0dXJuIG9mIGFib3V0IDcgcGVyY2VudCBuZXh0IHllYXIgUmVsYXRlZCBBcnRpY2xlc3QABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMC0wNi0xMVQwMDowMDowMFogVE8gMjAxMy0wNy0zMVQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTExOTI0</field><field name="title" class="java.lang.String">rO0ABXQAQFMmUCA1MDAgaW4gQ2hlYXBlc3QgQnVsbCBNYXJrZXQgU2luY2UgUmVhZ2FuIFRyYWRlIDI2JSBGcm9tIFBlYWs=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATsXQHsAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGRlYzg3ZWRjMDk2NzRhNTI=</field><field name="symbol" class="java.lang.String">rO0ABXQAA05PVg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATscZtcAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSNwo9cKPX</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSOPXCj1wp</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBRy4UeuFHs</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBR6FHrhR64</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBO4AAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAD2dDA==</field><field name="id" class="java.lang.String">rO0ABXQAEDgwNmIwZTNjNTBiMWExYjY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mIgxAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExNTQ5</field><field name="title" class="java.lang.String">rO0ABXQAP1dhbGwgU3RyZWV0J3MgUmFsbHkgTWF0Y2hlcyAxOTkwcyDigJMgd2l0aCBWYWx1YXRpb25zIDI4JSBMb3dlcg==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6XHBSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGNlODRhMmIwNTMyMGI2MDQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAAk1O</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6cQnCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAysKPXCj1x</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzZmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAysKPXCj1x</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzT1wo9cKP</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxz1wo9cKP</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAGUTA==</field><field name="id" class="java.lang.String">rO0ABXQAEDJkZjgwZDJjYzNiZGY3MTA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFC9AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQAAzI4Nw==</field><field name="title" class="java.lang.String">rO0ABXQAMVNrZXB0aWNzIFBva2UgSG9sZXMgaW4gJ0dyZWF0IFJvdGF0aW9uJyBOYXJyYXRpdmU=</field><field name="content" class="java.lang.String">rO0ABXQVhFRoYXQgc291bmRzIGdvb2QsIGJ1dCB0aGVyZSBpcyBhIHNuYWc6IFRoZSBldmlkZW5jZSBmb3IgdGhpcyBpcyBhIGZldyB3ZWVrcyBvZiBidWxsaXNoIGZ1bmQgZmxvd3MgdGhhdCBhcmUgaGFyZGx5IHVudXN1YWwgZm9yIEphbnVhcnkuIExhdGUtc3RhZ2UgYnVsbCBtYXJrZXRzIGFyZSB0eXBpY2FsbHkgbWFya2VkIGJ5IGFuIGluZmx1eCBvZiBzbWFsbCBpbnZlc3RvcnMgY29taW5nIGxhdGUgdG8gdGhlIHBhcnR5IC0gc3VjaCBhcyB3aGVuIHlvdXIgd2FpdGVyIHN0YXJ0cyBnaXZpbmcgeW91IHN0b2NrIHRpcHMuIEZvciB0aGF0IHRvIGhhcHBlbiB5b3UgbmVlZCBhIGdvb2Qgc3RvcnkuIFRoZSAiZ3JlYXQgcm90YXRpb24sIiB3aXRoIGl0cyBtb251bWVudGFsIHRvbmUsIGlzIHRoZSBwZXJmZWN0IG5hcnJhdGl2ZSB0byBtYWtlIHlvdSBmZWVsIGxpa2UgeW91J3JlIG1pc3Npbmcgb3V0LiBFdmVuIGlmIHNvbWV0aGluZyBhcHByb2FjaGluZyBhICJncmVhdCByb3RhdGlvbiIgaGFzIGJlZ3VuLCBpdCBpcyBub3QgbmVjZXNzYXJpbHkgYnVsbGlzaCBmb3IgbWFya2V0cy4gVGhvc2Ugd2hvIHRoaW5rIHRoZXkgYXJlIGVhcmx5IHRvIHRoZSBwYXJ0eSBtYXkgYWN0dWFsbHkgYmUgYXJyaXZpbmcgbGF0ZS4gSW52ZXN0b3JzIHB1bXBlZCAkMjAuNyBiaWxsaW9uIGludG8gc3RvY2tzIGluIHRoZSBmaXJzdCBmb3VyIHdlZWtzIG9mIHRoZSB5ZWFyLCB0aGUgc3Ryb25nZXN0IGZvdXItd2VlayBydW4gc2luY2UgQXByaWwgMjAwMCwgYWNjb3JkaW5nIHRvIExpcHBlci4gQnV0IHRoYXQgcGFsZXMgaW4gY29tcGFyaXNvbiB3aXRoIHRoZSAkNDEwIGJpbGxpb24geWFua2VkIGZyb20gdGhvc2UgZnVuZHMgc2luY2UgdGhlIHN0YXJ0IG9mIDIwMDguICJJJ20gbm90IHN1cmUgeW91IHdhbnQgdG8gdGFrZSBhIGNvdXBsZSBvZiB3ZWVrcyBhbmQgZXh0cmFwb2xhdGUgaXQgaW50byB3aGF0ZXZlciB0cmVuZCB5b3Ugd2FudCwiIHNhaWQgVG9iaWFzIExldmtvdmljaCwgY2hpZWYgVS5TLiBlcXVpdHkgc3RyYXRlZ2lzdCBhdCBDaXRpZ3JvdXAuICJXZSBoYXZlIGhhZCBpbnN0YW5jZXMgd2hlcmUgZXF1aXR5IGZsb3dzIGhhdmUgcGlja2VkIHVwIGluIHRoZSBsYXN0IHR3bywgdGhyZWUsIGZvdXIgeWVhcnMgd2hlbiBtYXJrZXRzIGhhdmUgcGlja2VkIHVwLiBUaGV5J3ZlIGdlbmVyYWxseSBub3QgYmVlbiBzaWduYWxzIG9mIGEgY29udGludWF0aW9uIG9mIHRoYXQgdHJlbmQuIiBUaGUgUyZQIDUwMCByb3NlIDUgcGVyY2VudCBpbiBKYW51YXJ5LCBpdHMgYmVzdCBtb250aCBzaW5jZSBPY3RvYmVyIDIwMTEgYW5kIGl0cyBiZXN0IEphbnVhcnkgc2luY2UgMTk5NywgZHJpdmluZyBzcGVjdWxhdGlvbiB0aGF0IHJldGFpbCBpbnZlc3RvcnMgd2VyZSBmbG9vZGluZyBiYWNrIGludG8gdGhlIHN0b2NrIG1hcmtldC4gSGVhZGluZyBpbnRvIGFub3RoZXIgYnVzeSB3ZWVrIG9mIGVhcm5pbmdzLCB0aGUgZXF1aXR5IG1hcmtldCBpcyBrbm9ja2luZyBvbiB0aGUgZG9vciBvZiBhbGwtdGltZSBoaWdocyBkdWUgdG8gcG9zaXRpdmUgc2VudGltZW50IGluIHN0b2NrcywgYW5kIHRoYXQgY2Fubm90IGJlIGlnbm9yZWQgZW50aXJlbHkuIFRoZSBTdGFuZGFyZCAmIFBvb3IncyA1MDAgSW5kZXggZW5kZWQgdGhlIHdlZWsgYWJvdXQgNCBwZXJjZW50IGZyb20gYW4gYWxsLXRpbWUgaGlnaCB0b3VjaGVkIGluIE9jdG9iZXIgMjAwNy4gVGhpcyB3ZWVrIHdpbGwgYnJpbmcgcmVzdWx0cyBmcm9tIGluc3VyZXJzIEFsbHN0YXRlICBhbmQgVGhlIEhhcnRmb3JkLCBhcyB3ZWxsIGFzIGZyb20gV2FsdCBEaXNuZXksIENvY2EtQ29sYSBFbnRlcnByaXNlcyBhbmQgVmlzYS4gQnV0IGEgY29tcGFyaXNvbiBvZiBmbG93cyBpbiBKYW51YXJ5LCBhIHNlYXNvbmFsIHN0cm9uZyBtb250aCBmb3IgdGhlIHN0b2NrIG1hcmtldCwgc2hvd3MgdGhhdCB0aGlzIEphbnVhcnksIHdoaWxlIHN0cm9uZywgaXMgbm90IHRoYXQgdW51c3VhbC4gSW4gSmFudWFyeSAyMDExLCBpbnZlc3RvcnMgbW92ZWQgJDIzLjkgYmlsbGlvbiBpbnRvIHN0b2NrIGZ1bmRzIGFuZCAkMjguNiBiaWxsaW9uIGluIDIwMDYsIGJ1dCBuZWl0aGVyIGZvcmVzaGFkb3dlZCBtYXNzaXZlIGluZmxvd3MgdGhlIHJlc3Qgb2YgdGhhdCB5ZWFyLiBGdXJ0aGVybW9yZSwgaW4gMjAwNiB0aGUgbWFya2V0IGdhaW5lZCBtb3JlIHRoYW4gMTMgcGVyY2VudCB3aGlsZSBpbiAyMDExIGl0IHdhcyBmbGF0LiBTdHJvbmcgaW5mbG93cyBpbiBKYW51YXJ5IGNhbiBvY2N1ciBmb3IgYSBudW1iZXIgb2YgcmVhc29ucy4gVGhlcmUgd2VyZSBhIGxvdCBvZiBzcGVjaWFsIGRpdmlkZW5kcyBpc3N1ZWQgaW4gRGVjZW1iZXIgdGhhdCBuZWVkIHJlaW52ZXN0aW5nLCBhbmQgc29tZSBvZiB0aGUgZnVuZHMgcmFpc2VkIGluIERlY2VtYmVyIHRheC1zZWxsaW5nIGFsc28gZmluZCB0aGVpciB3YXkgYmFjayBpbnRvIHRoZSBtYXJrZXQuIER1cmluZyB0aGUgaGVpZ2h0IG9mIHRoZSB0ZWNoIGJ1YmJsZSBpbiAyMDAwLCB3aGVuIHJldGFpbCBpbnZlc3RvcnMgd2VyZSByZWFsbHkgZW1icmFjaW5nIHN0b2NrcywgYSBzdGFnZ2VyaW5nICQ0Mi43IGJpbGxpb24gZmxvd2VkIGludG8gZXF1aXRpZXMgaW4gSmFudWFyeSBvZiB0aGF0IHllYXIsIGRvdWJsZSB0aGUgYW1vdW50IHRoYXQgZmxvd2VkIGluIHRoaXMgSmFudWFyeS4gVGhhdCBkaWRuJ3QgZW5kIHdlbGwsIGFzIHN0b2NrcyBwZWFrZWQgaW4gTWFyY2ggb2YgdGhhdCB5ZWFyIGJlZm9yZSBkcm9wcGluZyBvdmVyIHRoZSBuZXh0IHR3by1wbHVzIHllYXJzLiBNT00gQU5EIFBPUCBTVElMTCBXQVJZIEFyZ3VpbmcgYWdhaW5zdCBhICJncmVhdCByb3RhdGlvbiIgaXMgbm90IG5lY2Vzc2FyaWx5IGEgYmVhcmlzaCBhcmd1bWVudCBhZ2FpbnN0IHN0b2Nrcy4gVGhlIHN0b2NrIG1hcmtldCBoYXMgZG9uZSB3ZWxsIHNpbmNlIHRoZSBjcmlzaXMuIERlc3BpdGUgdGhlIGh1Z2Ugb3V0Zmxvd3MsIHRoZSBTJlAgNTAwIGhhcyByaXNlbiBtb3JlIHRoYW4gMTIwIHBlcmNlbnQgc2luY2UgTWFyY2ggMjAwOSBvbiBhIHNsb3dseSBpbXByb3ZpbmcgZWNvbm9teSBhbmQgY29ycG9yYXRlIGVhcm5pbmdzLiBUaGlzIGVhcm5pbmdzIHNlYXNvbiwgYSBtYWpvcml0eSBvZiBTJlAgNTAwIGNvbXBhbmllcyBhcmUgYmVhdGluZyBlYXJuaW5ncyBmb3JlY2FzdC4gVGhhdCdzIGFsc28gdGhlIGNhc2UgZm9yIHJldmVudWUsIHdoaWNoIGlzIGEgZGVwYXJ0dXJlIGZyb20gdGhlIHByZXZpb3VzIHR3byByZXBvcnRpbmcgcGVyaW9kcyB3aGVyZSBsZXNzIHRoYW4gNTAgcGVyY2VudCBvZiBjb21wYW5pZXMgYmVhdCByZXZlbnVlIGV4cGVjdGF0aW9ucywgYWNjb3JkaW5nIHRvIFRob21zb24gUmV1dGVycyBkYXRhLiBNZWFud2hpbGUsIHRob3NlIG9uIHRoZSBmcm9udCBsaW5lcyBzYXkgbW9tIGFuZCBwb3AgaW52ZXN0b3JzIGFyZSBzdGlsbCB3YXJ5IG9mIGVxdWl0aWVzIGFmdGVyIHRoZSBmaW5hbmNpYWwgY3Jpc2lzLiAiQSBsb3Qgb2YgcGVvcGxlIEkgdGFsayB0byBhcmUgdmVyeSByZWx1Y3RhbnQgdG8gbWFrZSBhbiBlbW90aW9uYWwgY29tbWl0bWVudCB0byB0aGUgc3RvY2sgbWFya2V0IGFuZCByZWdhcmRsZXNzIG9mIGluY29tZSBhY3Rpdml0eSBpbiBKYW51YXJ5LCBJIHRoaW5rIHRoYXQncyBzdGlsbCB0aGUgY2FzZSwiIHNhaWQgRGF2aWQgSm95LCBjaGllZiBtYXJrZXQgc3RyYXRlZ2lzdCBhdCBDb2x1bWJpYSBNYW5hZ2VtZW50IEFkdmlzb3JzIGluIEJvc3Rvbiwgd2hlcmUgaGUgaGVscHMgb3ZlcnNlZSAkNTcxIGJpbGxpb24uIEpveSwgc3BlYWtpbmcgZnJvbSBhIGNvbmZlcmVuY2UgaW4gUGhvZW5peCwgc2F5cyBtb3N0IG9mIHRoZSBwZW9wbGUgYXNraW5nIGhpbSBhYm91dCB0aGUgImdyZWF0IHJvdGF0aW9uIiBhcmUgZnVuZCBtYW5hZ2VtZW50IGluZHVzdHJ5IGluc2lkZXJzIHdobyBhcmUgaW50ZXJlc3RlZCBpbiB0aGUgZXh0cmEgYnVzaW5lc3MgYSBmbG9vZCBvZiBzdG9jayBpbnZlc3RvcnMgd291bGQgYnJpbmcuIEhlIGFsc28gcG9pbnRlZCBvdXQgdGhhdCBmbG93cyBpbnRvIGJvbmQgZnVuZHMgd2VyZSBwb3NpdGl2ZSBpbiB0aGUgbW9udGggb2YgSmFudWFyeSwgaGFyZGx5IGFuIGluZGljYXRpb24gb2YgYSByb3RhdGlvbi4gQ2l0aSdzIExldmtvdmljaCBhbHNvIGFyZ3VlcyB0aGF0IGJvbmQgaW52ZXN0b3JzIGFyZSB1bmxpa2VseSB0byBnaXZlIHVwIGEgMzAteWVhciByYWxseSBpbiBib25kcyBzbyBxdWlja2x5LiBIZSBzYWlkIHN0b2NrcyBvbmx5IGJlZ2FuIHRvIHNlZSBjb25zaXN0ZW50IG91dGZsb3dzIDI2IG1vbnRocyBhZnRlciB0aGUgdGVjaCBidWJibGUgYnVyc3QgaW4gTWFyY2ggMjAwMC4gQnkgdGhhdCByZWFkaW5nIGl0IGNvdWxkIGJlIGFub3RoZXIgeWVhciBiZWZvcmUgYSBzZXJpb3VzIHJvdGF0aW9uIGJlZ2lucy4gT24gdG9wIG9mIHRoYXQsIHN1YnN0YW50aWFsIGZsb3dzIGNvbnRpbnVlIHRvIG1ha2UgdGhlaXIgd2F5IGludG8gYm9uZHMsIGV2ZW4gaWYgaXQgaXNuJ3QgbG93LXlpZWxkaW5nIGdvdmVybm1lbnQgZGVidC4gSmFudWFyeSAyMDEzIHdhcyB0aGUgc2Vjb25kIGJlc3QgSmFudWFyeSBvbiByZWNvcmQgZm9yIHRoZSBpc3N1YW5jZSBvZiBVLlMgaGlnaC1ncmFkZSBkZWJ0LCB3aXRoICQxMTEuNzI1IGJpbGxpb24gaXNzdWVkIGR1cmluZyB0aGUgbW9udGgsIGFjY29yZGluZyB0byBJbnRlcm5hdGlvbmFsIEZpbmFuY2UgUmV2aWV3LiBCaWxsIEdyb3NzLCB3aG8gcnVucyB0aGUgJDI4NSBiaWxsaW9uIFBpbWNvIFRvdGFsIFJldHVybiBGdW5kLCB0aGUgd29ybGQncyBsYXJnZXN0IGJvbmQgZnVuZCwgY29tbWVudGVkIG9uIFR3aXR0ZXIgb24gVGh1cnNkYXkgdGhhdCAiSmFudWFyeSBmbG93cyBhdCBQaW1jbyBzaG93IGZldyBzaWducyBvZiBib25kL3N0b2NrIHJvdGF0aW9uLCIgYWRkaW5nIHRoYXQgY2FzaCBhbmQgbW9uZXkgbWFya2V0cyBtYXkgYmUgdGhlIHNvdXJjZSBvZiBpbmZsb3dzIGludG8gc3RvY2tzLiBJbmRlZWQsIHRoZSBldmlkZW5jZSBzdWdnZXN0cyBzb21lIG9mIHRoZSBtb25leSB0aGF0IHdlbnQgaW50byBzdG9jayBmdW5kcyBpbiBKYW51YXJ5IGNhbWUgZnJvbSBtb25leSBtYXJrZXRzIGFmdGVyIGEgcGVyaW9kIGluIERlY2VtYmVyIHdoZW4gaW52ZXN0b3JzLCB3b3JyaWVkIGFib3V0IHRoZSBidWRnZXQgdW5jZXJ0YWludHkgaW4gV2FzaGluZ3Rvbiwgc3RhcnRlZCBwYXJraW5nIG1vbmV5IGluIGxhdGUgMjAxMi4gRGF0YSBmcm9tIGlNb25leU5ldCBzaG93cyBpbnZlc3RvcnMgcGxhY2VkICQxMjMgYmlsbGlvbiBpbiBtb25leSBtYXJrZXQgZnVuZHMgaW4gdGhlIGxhc3QgdHdvIG1vbnRocyBvZiB0aGUgeWVhci4gSW4gdHdvIHdlZWtzIGluIEphbnVhcnksIGludmVzdG9ycyB3aXRoZHJldyAkMzEuNDUgYmlsbGlvbiBvZiB0aGF0LCB0aGUgbW9zdCBzaW5jZSBNYXJjaCAyMDEyLiBCdXQgbGF0ZXIgaW4gdGhlIG1vbnRoIG1vbmV5IGFjdHVhbGx5IHN0YXJ0ZWQgZmxvd2luZyBiYWNrLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATyeo8sAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDkzY2ZkNGVmNzQ1Y2JlNDA=</field><field name="symbol" class="java.lang.String">rO0ABXQABkRJUy5NWA==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATyjyicAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECFd9cKPXCk</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECFd9cKPXCk</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECFd9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECFd9cKPXCk</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECFbgAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGY1YTI2ZTFiMjMwZTVkNjc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMtbAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDIzNzU=</field><field name="title" class="java.lang.String">rO0ABXQAMUdvbGQgVHJhZGVycyBNb3N0IEJ1bGxpc2ggU2luY2UgQmVhciBNYXJrZXQgQmVnYW4=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8X2xCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDQzMGNhNDhmY2Y3MWRlYzE=</field><field name="symbol" class="java.lang.String">rO0ABXQAA1BUWQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8dAWyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAy8KPXCj1x</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzKPXCj1wp</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAy1HrhR64U</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAsAAAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAbk2A==</field><field name="id" class="java.lang.String">rO0ABXQAEDNjYjk2ZmE5M2JlMzQ4ZDQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKFLAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTEyMDUz</field><field name="title" class="java.lang.String">rO0ABXQAP0JhcmNsYXlz4oCZIEVuZXJneSBUcmFkaW5nIERyYXdzIFJlY29yZCAkNDcwIE1pbGxpb24gVVMgUGVuYWx0eQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATq6VxSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGYwOWNmMjQ4ZTc1ODNmMmM=</field><field name="symbol" class="java.lang.String">rO0ABXQAAk5Q</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATq/fXCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA64UeuFHrh</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA64UeuFHrh</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5h64UeuFI</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5lwo9cKPX</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4Vwo9cKPX</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAADv2A==</field><field name="id" class="java.lang.String">rO0ABXQAEGUwNDQ3N2ZlZGM2NDU4ZWI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKviAAAA==</field></document></documents><date>2015-05-07T06:51:17-0500</date></cacheEntry>
<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0CcNDYWxpZm9ybmlhIHJlZ3VsYXRvcnkganVkZ2VzIGlzc3VlZCBhIDE0IGJpbGxpb24gcGVuYWx0eSBvbiBUdWVzZGF5IGFnYWluc3QgdGhlIHN0YXRlcyBsYXJnZXN0IHV0aWxpdHkgZm9yIGEgMjAxMCBnYXMgcGlwZWxpbmUgZXhwbG9zaW9uIHRoYXQgZW5ndWxmZWQgYSBzdWJ1cmJhbiBTYW4gRnJhbmNpc2NvIG5laWdoYm9yaG9vZCBpbiBmaXJlIGtpbGxpbmcgZWlnaHQgcGVvcGxlIGFuZCBwcm9tcHRpbmcgbmF0aW9uYWwgYWxlcnRzIGFib3V0IGFnaW5nIHBpcGVsaW5lcyBUaGUgQ2FsaWZvcm5pYSBQdWJsaWMgVXRpbGl0aWVzIENvbW1pc3Npb24gc2FpZCB0aGUgZmlndXJlIHJlYWNoZWQgYnkgdHdvIGFkbWluaXN0cmF0aXZlIGxhdyBqdWRnZXMgYWdhaW5zdCBQYWNpZmljIEdhcyAgRWxlY3RyaWMgQ28gd291bGQgYmUgdGhlIGxhcmdlc3Qgc2FmZXR5cmVsYXRlZCBwZW5hbHR5IGl0IGhhZCBldmVyIGltcG9zZWQgUEdFIGNhbiBhcHBlYWwgdGhlIGZpbmUgQW4gZW1haWwgdG8gYSBjb21wYW55IHJlcHJlc2VudGF0aXZlIGZvciBjb21tZW50IHdhcyBub3QgaW1tZWRpYXRlbHkgcmV0dXJuZWQgQnV0IFBHRSBzYWlkIGluIGEgc3RhdGVtZW50IGl0IGZ1bGx5IGFjY2VwdHMgdGhhdCBhIHBlbmFsdHkgaXMgYXBwcm9wcmlhdGUgV2UgaGF2ZSByZXNwZWN0ZnVsbHkgYXNrZWQgdGhhdCB0aGUgY29tbWlzc2lvbiBlbnN1cmUgdGhhdCB0aGUgcGVuYWx0eSBpcyByZWFzb25hYmxlIGFuZCBwcm9wb3J0aW9uYXRlIGFuZCB0YWtlcyBpbnRvIGNvbnNpZGVyYXRpb24gdGhlIGNvbXBhbnlzIGludmVzdG1lbnRzIGFuZCBhY3Rpb25zIHRvIHByb21vdGUgc2FmZXR5IFBHRSBzYWlkIFRoZSBjb21taXNzaW9uIHByZXZpb3VzbHkgb3JkZXJlZCBQR0UgdG8gcGF5IDYzNSBtaWxsaW9uIGZvciBwaXBlbGluZSBtb2Rlcm5pemF0aW9uIGluIHRoZSB3YWtlIG9mIHRoZSBTZXB0IDkgMjAxMCBibGFzdCBpbiB0aGUgc3VidXJiYW4gU2FuIEZyYW5jaXNjbyBjb21tdW5pdHkgb2YgU2FuIEJydW5vIEl0IHdhcyBDYWxpZm9ybmlhcyBkZWFkbGllc3QgdXRpbGl0eSBkaXNhc3RlciBpbiBkZWNhZGVzIEEgMzBpbmNoIG5hdHVyYWxnYXMgdHJhbnNtaXNzaW9uIGxpbmUgaW5zdGFsbGVkIGluIDE5NTYgcnVwdHVyZWQgZGVzdHJveWluZyBtb3JlIHRoYW4gdGhyZWUgZG96ZW4gaG9tZXMgQXQgdGhlIHRpbWUgc3Vydml2b3JzIGRlc2NyaWJlZCB0aGUgaGVhdCBvZiB0aGUgYmxhc3QgYnVybmluZyB0aGUgYmFjayBvZiB0aGVpciBuZWNrcyBsaWtlIGEgYmxvd3RvcmNoIGFzIHRoZXkgcmFuIGF3YXkgQSAyMDExIGludmVzdGlnYXRpb24gYnkgdGhlIE5hdGlvbmFsIFRyYW5zcG9ydGF0aW9uIFNhZmV0eSBCb2FyZCBjb25jbHVkZWQgdGhhdCB0aGUgcnVwdHVyZSBvY2N1cnJlZCBpbiBhIHdlYWsgd2VsZCBpbiBhIHBpcGVsaW5lIHRoYXQgUEdFIHJlY29yZHMgaGFkIHNob3duIGFzIGJlaW5nIHNtb290aCBhbmQgdW53ZWxkZWQgUEdFIG5lZ2xlY3RlZCB0byBzaHV0IG9mZiBuYXR1cmFsIGdhcyBmZWVkaW5nIHRoZSBmaXJlIHVudGlsIDk1IG1pbnV0ZXMgYWZ0ZXIgdGhlIGJsYXN0IHRoZSBmZWRlcmFsIGludmVzdGlnYXRvcnMgc2FpZCBUaGUgMjAxMSBwcm9iZSBmb3VuZCBQR0VzIHNhZmV0eSBtYW5hZ2VtZW50IG9mIGl0cyBwaXBlbGluZXMgb3ZlcmFsbCBkZWZpY2llbnQgYW5kIGluZWZmZWN0aXZlIEF0IHRoZSBzYW1lIHRpbWUgdGhlIGZlZGVyYWwgYm9hcmQgYWxzbyBmYXVsdGVkIHdoYXQgaXQgY2FsbGVkIHRoZSBpbmVmZmVjdGl2ZW5lc3Mgb2YgQ2FsaWZvcm5pYXMgUHVibGljIFV0aWxpdGllcyBDb21taXNzaW9uIGluIHJlZ3VsYXRpbmcgdGhlIHBvd2VyIHV0aWxpdHkgd2hvc2Ugc2VydmljZSBhcmVhIGNvdmVycyBhbGwgYnV0IHRoZSBzb3V0aGVybiBvbmV0aGlyZCBvZiBDYWxpZm9ybmlhIFRoaXMgeWVhciBmZWRlcmFsIHByb3NlY3V0b3JzIHNlcGFyYXRlbHkgaW5kaWN0ZWQgUEdFIG9uIDI3IGNvdW50cyBhbGxlZ2luZyB0aGUgdXRpbGl0eSB2aW9sYXRlZCBwaXBlbGluZXNhZmV0eSByZXF1aXJlbWVudHMgQW5vdGhlciBmZWRlcmFsIGNvdW50IGFsbGVnZXMgUEdFIGxpZWQgdG8gdGhlIE5hdGlvbmFsIFRyYW5zcG9ydGF0aW9uIFNhZmV0eSBCb2FyZCBpbiB0aGF0IGFnZW5jeXMgaW52ZXN0aWdhdGlvbiBvZiB0aGUgU2FuIEJydW5vIGJsYXN0IFBHRSBmYWNlcyBhZGRpdGlvbmFsIGZpbmVzIG9mIG1vcmUgdGhhbiAxIGJpbGxpb24gaWYgY29udmljdGVkIG9mIHRoZSBmZWRlcmFsIGNoYXJnZXMgd2hpY2ggYXJlIHNlcGFyYXRlIGZyb20gdGhlIGZpbmFuY2lhbCBwZW5hbHRpZXMgdGhhdCB0aGUgQ2FsaWZvcm5pYSBzdGF0ZSBhZG1pbmlzdHJhdGl2ZSBqdWRnZXMgd2VpZ2hlZCBQR0UgcGxlYWRlZCBub3RndWlsdHkgdG8gdGhlIGZlZGVyYWwgY291bnRzIGVhcmxpZXIgaW4gQXVndXN0CgpQR0Ugc2hhcmVzIHJvc2UgMTcgcGVyY2VudCB0byBjbG9zZSBUdWVzZGF5IGF0IDQ3MjkgaW4gTmV3IFlvcmt0AARyb3dzdXEAfgAKAAAAAXQAATV0AAVzdGFydHVxAH4ACgAAAAF0AAEwdAACZmx1cQB+AAoAAAABdABvYXJ0aWNsZUlkLHRpdGxlLGNvbnRlbnQsZGF0ZSxzdG9ja0hpc3RvcnlJZCxzeW1ib2wsaGlzdG9yeURhdGUsb3BlbixoaWdoLGxvdyxjbG9zZSxhZGpDbG9zZSx2b2x1bWUsaWQsX3ZlcnNpb25fdAACZnF1cQB+AAoAAAABdAA6aGlzdG9yeURhdGU6WzIwMTMtMTItMDNUMDA6MDA6MDBaIFRPIDIwMTQtMDctMTBUNTk6NTk6NTlaXXgAcA==</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTI0ODY3</field><field name="title" class="java.lang.String">rO0ABXQANEh1Z2UgRmluZSBBZ2FpbnN0IFRveW90YSBDb3VsZCBCZSBGb3Jld2FybmluZyBmb3IgR00=</field><field name="content" class="java.lang.String">rO0ABXQZTUdlbmVyYWwgTW90b3JzLCBiZXdhcmUuIFdlZG5lc2RheSdzIGFubm91bmNlbWVudCB0aGF0IFRveW90YSB3aWxsIHBheSAkMS4yIGJpbGxpb24gdG8gYXZvaWQgY3JpbWluYWwgcHJvc2VjdXRpb24gZm9yIGhpZGluZyBpbmZvcm1hdGlvbiBpbiBhIHJlY2FsbCBjYXNlIGNvdWxkIGJlIGEgZ2xpbXBzZSBpbnRvIHlvdXIgZnV0dXJlLiBJdCdzIGFsc28gYSB3YXJuaW5nIHRvIGFueW9uZSBzZWxsaW5nIGNhcnMgaW4gdGhlIFUuUy46IEFsdGhvdWdoIHRoZSBmZWRlcmFsIGdvdmVybm1lbnQncyByb2FkLXNhZmV0eSB3YXRjaGRvZyBkb2Vzbid0IGhhdmUgYmlnIGZhbmdzLCB0aGUgSnVzdGljZSBEZXBhcnRtZW50IGRvZXMuIFRoZSBOYXRpb25hbCBIaWdod2F5IFRyYWZmaWMgU2FmZXR5IEFkbWluaXN0cmF0aW9uJ3MgbWF4aW11bSBmaW5lIGZvciBoaWRpbmcgaW5mb3JtYXRpb24gaXMgJDM1IG1pbGxpb24sIGEgcGl0dGFuY2UgdG8gYXV0b21ha2Vycy4gQnV0IHRoZSBKdXN0aWNlIERlcGFydG1lbnQgY2FuIHJlYWNoIGRlZXBlciBpbnRvIHlvdXIgd2FsbGV0IGFuZCBodXJ0IHlvdXIgcmVwdXRhdGlvbiB3aXRoIGRhbW5pbmcgcHVibGljIHN0YXRlbWVudHMuIFNob3J0bHkgYWZ0ZXIgdGhlIGFubm91bmNlbWVudCwgQXR0b3JuZXkgR2VuZXJhbCBFcmljIEhvbGRlciBpc3N1ZWQgYW4gYXBwYXJlbnQgd2FybmluZyB0byBHTSBhbmQgb3RoZXIgYXV0b21ha2Vycywgc2F5aW5nIHRoZSBUb3lvdGEgZGVhbCB3YXMgIm5vdCBuZWNlc3NhcmlseSB0aGUgb25seSB0aW1lIHdlIHdpbGwgdXNlIHRoaXMgYXBwcm9hY2guIiBHZW5lcmFsIE1vdG9ycyBDby4sIHdoaWNoIGlzIGZhY2luZyBhIGZlZGVyYWwgY3JpbWluYWwgcHJvYmUgb3ZlciBkZWxheXMgaW4gcmVjYWxsaW5nIHNtYWxsIGNhcnMgd2l0aCBhIGRlYWRseSBpZ25pdGlvbiBzd2l0Y2ggcHJvYmxlbSwgaGFzIG1hbnkgcGFyYWxsZWxzIHRvIHRoZSBUb3lvdGEgY2FzZS4gVG95b3RhIGdvdCBpbnRvIHRyb3VibGUgZm9yIHdpdGhob2xkaW5nIGluZm9ybWF0aW9uIGZyb20gTkhUU0EgYWJvdXQgZmxvb3IgbWF0cyB0aGF0IGNhbiB0cmFwIGdhcyBwZWRhbHMgYW5kIG1ha2UgY2FycyBhY2NlbGVyYXRlIHdpbGRseSwgYW5kIGZvciBjb25jZWFsaW5nIGEgcHJvYmxlbSB3aXRoIHN0aWNreSBnYXMgcGVkYWxzIHRoYXQgY2FuIGNhdXNlIHVud2FudGVkIGFjY2VsZXJhdGlvbi4gQWNjb3JkaW5nIHRvIGNvdXJ0IHJlY29yZHMsIHRoZSBjb21wYW55IHJlY2FsbGVkIHNvbWUgbW9kZWxzIGZvciB0aGUgZmxvb3IgbWF0cyB3aGlsZSBrbm93aW5nIHRoYXQgb3RoZXJzIGhhZCB0aGUgc2FtZSBwcm9ibGVtLiBBdCBHTSwgdGhlIGNvbXBhbnkgaGFzIGFkbWl0dGVkIGtub3dpbmcgYWJvdXQgdGhlIGlnbml0aW9uLXN3aXRjaCBwcm9ibGVtIGZvciBtb3JlIHRoYW4gYSBkZWNhZGUsIHlldCBpdCBmYWlsZWQgdG8gcmVjYWxsIDEuNiBtaWxsaW9uIHNtYWxsIGNhcnMgdW50aWwgbGFzdCBtb250aC4gRHVyaW5nIHRoZSB3YWl0LCBhdCBsZWFzdCBhIGRvemVuIHBlb3BsZSBkaWVkIGluIGNyYXNoZXMgYmVjYXVzZSB0aGUgZmF1bHR5IHN3aXRjaGVzIG1vdmVkIG91dCBvZiB0aGUgcnVuIHBvc2l0aW9uLCBkaXNhYmxpbmcgcG93ZXIgc3RlZXJpbmcgYW5kIGJyYWtlcy4gQWlyIGJhZ3MgYWxzbyBkaWRuJ3QgaW5mbGF0ZS4gIldlIG5vdyBzZWUgd2hhdCBHTSBtYXkgYmUgZmFjaW5nLCIgc2FpZCBQZXRlciBIZW5uaW5nLCBhIGxhdyBwcm9mZXNzb3IgYXQgV2F5bmUgU3RhdGUgVW5pdmVyc2l0eSBpbiBEZXRyb2l0IGFuZCBhIGZvcm1lciBKdXN0aWNlIERlcGFydG1lbnQgcHJvc2VjdXRvci4gIklmIHlvdSBoYXZlIGNvbXBhcmFibGUgY29uZHVjdCBpbnNpZGUgdGhlIGNvbXBhbnksIHRoZSBnb3Zlcm5tZW50IGlzIGdvaW5nIHRvIGNvbWUgZG93biBoYXJkLiIgVGhlIFRveW90YSBwYXltZW50IGNoYW5nZXMgdGhlIG1vZGVsIGZvciByZWd1bGF0aW5nIGF1dG8gc2FmZXR5IGluIHRoZSBVLlMuIEJlZm9yZSBXZWRuZXNkYXksIHNhZmV0eSBpc3N1ZXMgaGFkIGJlZW4gYWxtb3N0IHRoZSBleGNsdXNpdmUgZG9tYWluIG9mIE5IVFNBLiBOb3csIHRoZSBnb3Zlcm5tZW50IGhhcyByYWlzZWQgdGhlIHN0YWtlcyB3aXRoIGNyaW1pbmFsIGFjdGlvbnMsIEhlbm5pbmcgc2FpZC4gIkdNIGhhcyB0byBiZSBjb25jZXJuZWQgd2hhdCBraW5kIG9mIGEgaGl0IHRoZXJlIGlzIGdvaW5nIHRvIGJlIHRvIHRoZSBib3R0b20gbGluZSwiIHNhaWQgSGVubmluZywgd2hvIHByZWRpY3RlZCB0aGF0IEdNJ3MgcGVuYWx0eSBjb3VsZCByaXNlIHRvd2FyZCAkMiBiaWxsaW9uIGJlY2F1c2UgaXRzIHJlY2FsbCBkZWxheXMgbGFzdGVkIGxvbmdlciB0aGFuIFRveW90YSdzLiBUaGUgVG95b3RhIHBlbmFsdHkgaXMgYSAiZ2FtZSBjaGFuZ2VyIiB0aGF0IHdpbGwgZm9yY2UgYXV0b21ha2VycyB0byB0YWtlIG5vdGljZSwgc2FpZCBDbGFyZW5jZSBEaXRsb3csIGV4ZWN1dGl2ZSBkaXJlY3RvciBvZiB0aGUgbm9ucHJvZml0IENlbnRlciBmb3IgQXV0byBTYWZldHkuICJVbnRpbCB0b2RheSwgYXV0b21ha2VycyBmYWNlZCBpbnNpZ25pZmljYW50IGZpbmVzIGFuZCBubyBjcmltaW5hbCBwZW5hbHRpZXMsIiBoZSBzYWlkLiBFdmVuIHdpdGggYSAkMS4yIGJpbGxpb24gcGVuYWx0eSwgdGhlIGJpZ2dlciBpc3N1ZSBmb3IgYm90aCBHTSBhbmQgVG95b3RhIGlzIGRhbWFnZSB0byByZXB1dGF0aW9ucy4gQmVmb3JlIGEgaGlnaGx5IHB1YmxpY2l6ZWQgMjAwOSB1bmludGVuZGVkIGFjY2VsZXJhdGlvbiBjcmFzaCB0aGF0IGtpbGxlZCBhIENhbGlmb3JuaWEgSGlnaHdheSBQYXRyb2wgb2ZmaWNlciBhbmQgdGhyZWUgZmFtaWx5IG1lbWJlcnMsIFRveW90YSB3YXMga25vd24gYnkgYWxsIGZvciByZWxpYWJpbGl0eSwgYW5kIGl0IHdhcyBnb2JibGluZyB1cCBzYWxlcyBhbmQgbWFya2V0IHNoYXJlIGluIHRoZSBVLlMuIFRoZSBjcmFzaCB0cmlnZ2VyZWQgdGhlIHJlY2FsbCBvZiBtb3JlIHRoYW4gMTAgbWlsbGlvbiB2ZWhpY2xlcyBhbmQgcmFpc2VkIHN1c3BpY2lvbnMgYWJvdXQgVG95b3RhJ3Mgc2FmZXR5LiBGcm9tIDIwMTAgdGhyb3VnaCAyMDEyLCBOSFRTQSBmaW5lZCB0aGUgY29tcGFueSBhIHRvdGFsIG9mICQ2NiBtaWxsaW9uIGZvciBzYWZldHktcmVsYXRlZCB2aW9sYXRpb25zLCBmdXJ0aGVyIGhhcm1pbmcgaXRzIHJlcHV0YXRpb24uIFNpbmNlIHRoZSBDYWxpZm9ybmlhIGNyYXNoLCBUb3lvdGEncyBVLlMuIG1hcmtldCBzaGFyZSBoYXMgZHJvcHBlZCBtb3JlIHRoYW4gZm91ciBwZXJjZW50YWdlIHBvaW50cywgdG8gMTMuMyBwZXJjZW50IGxhc3QgbW9udGguIFRvZGF5LCBhIHNpbmdsZSBwb2ludCBvZiBtYXJrZXQgc2hhcmUgZXF1YWxzIG1vcmUgdGhhbiAxNTAsMDAwIGNhcnMgYW5kIHRydWNrcywgdGhlIGVxdWl2YWxlbnQgb2YgbWlsbGlvbnMgaW4gcHJvZml0cyBldmVyeSB5ZWFyLiBBbmQgV2VkbmVzZGF5J3Mgc3RhdGVtZW50cyBmcm9tIHRoZSBKdXN0aWNlIERlcGFydG1lbnQgbGlrZWx5IHdpbGwgcmFpc2UgZnVydGhlciBzdXNwaWNpb25zIGFib3V0IFRveW90YS4gSW4gY291cnQgZG9jdW1lbnRzLCBwcm9zZWN1dG9ycyBzYWlkIFRveW90YSBtaXNsZWQgY3VzdG9tZXJzIGJ5IGFzc3VyaW5nIHRoZW0gdGhhdCBpdCBoYWQgYWRkcmVzc2VkIHRoZSByb290IGNhdXNlIG9mIHRoZSBhY2NlbGVyYXRpb24gcHJvYmxlbXMsIHdoaWxlIGtub3dpbmcgdGhhdCBjYXJzIG91dHNpZGUgdGhlIHJlY2FsbCBoYWQgdGhlIHNhbWUgcHJvYmxlbXMuIFRveW90YSBkaWQgdGhpcyB0byBkZWZlbmQgaXRzIGJyYW5kIGltYWdlIGFmdGVyIHRoZSBDYWxpZm9ybmlhIGNyYXNoLCB0aGUgZG9jdW1lbnRzIHNhaWQuICJJbiBvdGhlciB3b3JkcywgVG95b3RhIGNvbmZyb250ZWQgYSBwdWJsaWMtc2FmZXR5IGVtZXJnZW5jeSBhcyBpdCBpZiB3ZXJlIGEgc2ltcGxlIHB1YmxpYy1yZWxhdGlvbnMgcHJvYmxlbSwiIEhvbGRlciBzYWlkIFdlZG5lc2RheSBhdCBhIG5ld3MgY29uZmVyZW5jZS4gVG95b3RhIHNheXMgaXQgaGFzIHB1dCByZWZvcm1zIGluIHBsYWNlIHRvIG1ha2Ugc3VyZSB0aGlzIGRvZXNuJ3QgaGFwcGVuIGFnYWluLiBCdXQgc3RhdGVtZW50cyBsaWtlIEhvbGRlcidzIG11c3QgaGF2ZSBHTSB3b3JyaWVkIGFib3V0IGRhbWFnZSB0byBpdHMgYnJhbmQgaW1hZ2UgYW5kIGEgaGl0IHRvIGl0cyBzdG9jayBwcmljZS4gVGhlIGNvbXBhbnkgaGFzIHRyaWVkIHRvIHBvcnRyYXkgaXRzZWxmIGFzIHRyYW5zcGFyZW50LCBzdWJtaXR0aW5nIHRvIE5IVFNBIHR3byBjaHJvbm9sb2dpZXMgYWRtaXR0aW5nIG1pc3Rha2VzLiBJdHMgbmV3IENFTyBoYXMgYXBvbG9naXplZCBzZXZlcmFsIHRpbWVzIHRvIGZhbWlsaWVzIG9mIHRob3NlIGluanVyZWQgb3Iga2lsbGVkIGluIGNyYXNoZXMuIFRoZSBjb21wYW55IGhhcyBhbHNvIHBsYWNlZCBzYWZldHkgaW4gdGhlIGhhbmRzIG9mIGEgc2luZ2xlIGV4ZWN1dGl2ZSBhbmQgaGlyZWQgb3V0c2lkZSBsZWdhbCBjb3Vuc2VsIHRvIGludmVzdGlnYXRlIGl0cyBjb25kdWN0LiBTdGlsbCwgaW4ganVzdCBvbmUgZGF5IGxhc3Qgd2VlaywgR00ncyBzdG9jayB2YWx1ZSBmZWxsIDUgcGVyY2VudCwgcmVkdWNpbmcgdGhlIHRvdGFsIHZhbHVlIG9mIHRoZSBjb21wYW55IGJ5ICQzLjIgYmlsbGlvbiwgYWNjb3JkaW5nIHRvIEJhcmNsYXlzIGFuYWx5c3QgQnJpYW4gSm9obnNvbi4gSXRheSBNaWNoZWxpLCBhbiBhbmFseXN0IGZvciBDaXRpIFJlc2VhcmNoLCB3cm90ZSB0aGF0IG9ubHkgYWJvdXQgb25lIHBlcmNlbnRhZ2UgcG9pbnQgb2YgVG95b3RhJ3MgbWFya2V0IHNoYXJlIHNsaWRlIGNhbWUgZnJvbSB0aGUgcmVjYWxsIGNyaXNpcy4gVG95b3RhIGJsYW1lcyB0aGUgZHJvcCBvbiBhbiBhcnRpZmljaWFsbHkgaGlnaCBtYXJrZXQgc2hhcmUgaW4gMjAwOSBkdWUgdG8gaGlnaCBnYXMgcHJpY2VzIHRoYXQgYm9vc3RlZCBzYWxlcyBvZiBpdHMgZnVlbC1lZmZpY2llbnQgbW9kZWxzLiAiVGhlIEdNIHNpdHVhdGlvbiBpcyBmYXIgZnJvbSBhbiBlYXN5IGNhbGwsIGJ1dCB3ZSB0aGluayB0aGUgcmlzayBvZiBUb3lvdGEtbGlrZSBzaGFyZSBsb3NzZXMgd291bGQgb25seSBjb21lIGludG8gcGxheSBpZiB0aGUgaGVhZGxpbmUgc2l0dWF0aW9uIG1hdGVyaWFsbHkgd29yc2VucywiIE1pY2hlbGkgd3JvdGUuIEdNJ3MgYnJhbmRzIGFsc28gYXJlbid0IGFzIHN0cm9uZyBhcyBUb3lvdGEncyB3ZXJlIGF0IHRoZSB0aW1lIG9mIHRoZSByZWNhbGxzLiBCZWZvcmUgYmFua3J1cHRjeSwgR00gY2FycyBoYWQgYSByZXB1dGF0aW9uIGZvciBwb29yIHJlbGlhYmlsaXR5LCBhbHRob3VnaCB0aGUgY29tcGFueSBoYXMgbWFkZSBncmVhdCBzdHJpZGVzIHRvd2FyZCBlcmFzaW5nIHRoYXQuIEdNJ3MgcmVjYWxscywgYXQgMS42IG1pbGxpb24gd29ybGR3aWRlLCBhcmUgZmFyIHNtYWxsZXIgdGhhbiBUb3lvdGEncywgc28gdGhlIGNvc3QgdG8gdGhlIGNvbXBhbnkgd2lsbCBiZSBmYXIgbGVzcy4gR00gc2FpZCBXZWRuZXNkYXkgaXQgd291bGQgdGFrZSBhICQzMDAgbWlsbGlvbiBjaGFyZ2UgdGhpcyBxdWFydGVyIGZvciB0aGUgc21hbGwtY2FyIHJlY2FsbCBhbmQgc2V2ZXJhbCBvdGhlcnMuIEFsc28sIFRveW90YSBoYWQgdG8gcmVjYWxsIG1vZGVscyB0aGF0IHdlcmUgb24gc2FsZSBhdCB0aGUgdGltZS4gR00gaGFzIHRyaWVkIHRvIGRpc3RhbmNlIGl0c2VsZiBmcm9tIHRoZSByZWNhbGxlZCBjYXJzLCBzYXlpbmcgdGhleSB3ZXJlIG1hZGUgeWVhcnMgYWdvIGJ5IHRoZSBvbGQgR00sIHRoZSBvbmUgdGhhdCB3ZW50IGludG8gYmFua3J1cHRjeSBwcm90ZWN0aW9uLiBFdmVuIHdpdGggdGhlIHNldHRsZW1lbnQsIHRoZSBvcmRlYWwgaXNuJ3Qgb3ZlciBmb3IgVG95b3RhLCBhbmQgaXQncyBqdXN0IHN0YXJ0aW5nIGZvciBHTS4gQm90aCBjb21wYW5pZXMgc3RpbGwgZmFjZSBsYXdzdWl0cyBvdmVyIHRoZSByZWNhbGxzLCBhbmQgdGhleSB3aWxsIHNlZSBiYWQgcHVibGljaXR5IGV2ZXJ5IHRpbWUgdGhlcmUncyBhIHZlcmRpY3QuIEdNLCB0aG91Z2gsIGlzIG5vdCBsaWFibGUgZm9yIGxlZ2FsIGNsYWltcyBmcm9tIGNyYXNoZXMgdGhhdCBvY2N1cnJlZCBiZWZvcmUgaXQgbGVmdCBiYW5rcnVwdGN5IGluIEp1bHkgMjAwOS4gU3VjaCBjbGFpbXMgd291bGQgZ28gdG8gYSB0cnVzdCBmb3JtZWQgdG8gc2V0dGxlIGNsYWltcyBhZ2FpbnN0IHRoZSBwcmUtYmFua3J1cHRjeSBjb21wYW55LiBIb3dldmVyLCBsYXd5ZXJzIGFyZSByZXNlYXJjaGluZyB3aGV0aGVyIHRoZXkgY2FuIHByb3ZlIHRoYXQgR00ga25ldyBhYm91dCB0aGUgaWduaXRpb24tc3dpdGNoIHByb2JsZW0gZHVyaW5nIHRoZSBiYW5rcnVwdGN5IGJ1dCBkaWQgbm90IGRpc2Nsb3NlIGl0IHRvIHRoZSBqdWRnZS4gSW4gdGhhdCBjYXNlLCB0aGUgbmV3IEdNIG1pZ2h0IGJlIGxpYWJsZSBmb3Igb2xkZXIgY2xhaW1zLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUTYtdiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDFjNmQ5N2Q5ZmY2NDExMTI=</field><field name="symbol" class="java.lang.String">rO0ABXQAAkdN</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUTd3DSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBBZR64UeuF</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBBoo9cKPXD</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBBMzMzMzMz</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBBoUeuFHrh</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBBCj1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAANyVJA==</field><field name="id" class="java.lang.String">rO0ABXQAEDdlYWQ3N2ZkYzI2M2RmMzk=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mI9zAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQyOTU=</field><field name="title" class="java.lang.String">rO0ABXQARENydW1ibGluZyBVUyBFbmVyZ3kgR3JpZCBHZXRzIEpvbHQgQ3JlYXRpbmcgU21hcnRlciBQb3dlciBpbiBIb3VzdG9u</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbRZRCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDkxNTAxOGJiODRkMDliMjE=</field><field name="symbol" class="java.lang.String">rO0ABXQABEdSSUQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbWi2yAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCqj1wo9cK</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCqj1wo9cK</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCqj1wo9cK</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCqj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCnXCj1wo9</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDI3NjFiMjdmYjU4MDhmZDE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mLWHAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIzMDQ1</field><field name="title" class="java.lang.String">rO0ABXQAP1VTIHRvIFVudmVpbCBOZWFyICQ5IEJpbGxpb24gRmluZSBmb3IgRnJhbmNlJ3MgQk5QLCBTb3VyY2VzIFNheQ==</field><field name="content" class="java.lang.String">rO0ABXQPiVRoZSBwZW5hbHRpZXMsIHdoaWNoIHRoZSBzb3VyY2VzIHNhaWQgbWF5IGFsc28gaW5jbHVkZSBhIHRlbXBvcmFyeSBiYW4gb24gc29tZSBkb2xsYXItY2xlYXJpbmcgYnVzaW5lc3MsIGNvdWxkIGhpdCBCTlAncyBkaXZpZGVuZCBwYXlvdXQsIHJlZ3VsYXRvcnkgY2FwaXRhbCByYXRpb3MgYW5kIGl0cyBpbnZlc3RtZW50IGJhbmtpbmcgdGFyZ2V0cywgYW5hbHlzdHMgc2F5LiBCTlAgaXMgZXhwZWN0ZWQgdG8gcGxlYWQgZ3VpbHR5IHRvIGEgY3JpbWluYWwgY2hhcmdlIGluIE1hbmhhdHRhbiBGZWRlcmFsIENvdXJ0IG9uIE1vbmRheSBhbmQgdGhlIFUuUy4gSnVzdGljZSBEZXBhcnRtZW50IGlzIHBsYW5uaW5nIGEgbmV3cyBjb25mZXJlbmNlIGluIFdhc2hpbmd0b24gdG8gYW5ub3VuY2UgYSBkZWFsIHRoZSBzYW1lIGRheSwgc291cmNlcyBzYWlkLiBIb3dldmVyIHRoZSBsZW5kZXIgaXMgZXhwZWN0ZWQgdG8gcmV0YWluIGl0cyBiYW5raW5nIGxpY2Vuc2UgZnJvbSB0aGUgTmV3IFlvcmsgc3RhdGUgYmFua2luZyByZWd1bGF0b3IsIGFmdGVyIG5lZ290aWF0aW9ucyB3aGljaCwgYWNjb3JkaW5nIHRvIHNvdXJjZXMgY2xvc2UgdG8gdGhlIG1hdHRlciwgYXQgb25lIHBvaW50IHJhaXNlZCB0aGUgcHJvc3BlY3Qgb2YgYW4gZXZlbiBiaWdnZXIgZmluZSB1cCB0byAkMTYgYmlsbGlvbi4gIkkgd2FudCB0byBzYXkgaXQgY2xlYXJseSBoZXJlOiB3ZSB3aWxsIHJlY2VpdmUgYSBoZWF2eSBwZW5hbHR5LCIgQk5QIENoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyIEplYW4tTGF1cmVudCBCb25uYWZlIHRvbGQgc3RhZmYgaW4gYW4gaW50ZXJuYWwgbWVzc2FnZSBzZW50IG9uIEp1bmUgMjcgYW5kIHNlZW4gYnkgUmV1dGVycy4gIkhvd2V2ZXIsIHRoZSBkaWZmaWN1bHRpZXMgdGhhdCB3ZSBhcmUgY3VycmVudGx5IGV4cGVyaWVuY2luZyBtdXN0IG5vdCBhZmZlY3Qgb3VyIHBsYW5zIGZvciB0aGUgZnV0dXJlLiIgVGhlIGJhbmsgaGFzIG5vdCBjb21tZW50ZWQgcHVibGljbHkgb24gdGhlIGNhc2Ugc2luY2UgaXQgd2FybmVkIHNoYXJlaG9sZGVycyBvbiBNYXkgMTQgdGhhdCB0aGUgZmluZSBjb3VsZCBiZSBzdGlmZmVyIHRoYW4gdGhlICQxLjEgYmlsbGlvbiBmb3Igd2hpY2ggaXQgb3JpZ2luYWxseSBwcm92aXNpb25lZC4gQSBCTlAgc3Bva2Vzd29tYW4gZGVjbGluZWQgdG8gY29tbWVudC4gVS5TLiBhdXRob3JpdGllcyBhcmUgZXhhbWluaW5nIHdoZXRoZXIgQk5QIGV2YWRlZCBVLlMuIHNhbmN0aW9ucyByZWxhdGluZyBwcmltYXJpbHkgdG8gU3VkYW4gYmV0d2VlbiAyMDAyIGFuZCAyMDA5LCBzb3VyY2VzIGhhdmUgc2FpZC4gQSAkOSBiaWxsaW9uIGZpbmUsIG5vdCBmYXIgc2hvcnQgb2YgQk5QJ3MgZW50aXJlIDIwMTMgcHJldGF4IGluY29tZSBvZiBhYm91dCA4LjIgYmlsbGlvbiBldXJvcyAoJDExLjIgYmlsbGlvbiksIHdvdWxkIGJlIHRoZSBsYXJnZXN0IHBlbmFsdHkgcGFpZCBieSBhIEV1cm9wZWFuIGJhbmsgdG8gZGF0ZSBmb3IgdmlvbGF0aW9ucyBvZiBzYW5jdGlvbnMgaW1wb3NlZCBieSB0aGUgT2ZmaWNlIG9mIEZvcmVpZ24gQXNzZXRzIENvbnRyb2wsIE1vcmdhbiBTdGFubGV5IGFuYWx5c3RzIHNhaWQuIEJOUCBoYXMgb25seSBzYWlkIHB1YmxpY2x5IHRoYXQgaXQgaXMgaW4gZGlzY3Vzc2lvbnMgd2l0aCBVLlMuIGF1dGhvcml0aWVzIGFib3V0ICJjZXJ0YWluIFUuUy4gZG9sbGFyIHBheW1lbnRzIGludm9sdmluZyBjb3VudHJpZXMsIHBlcnNvbnMgYW5kIGVudGl0aWVzIHRoYXQgY291bGQgaGF2ZSBiZWVuIHN1YmplY3QgdG8gZWNvbm9taWMgc2FuY3Rpb25zLiIgTGFzdCBtb250aCBpdCBzYWlkIGl0IGhhZCBpbXByb3ZlZCBjb250cm9sIHByb2Nlc3NlcyB0byBlbnN1cmUgbWlzdGFrZXMgZGlkIG5vdCBvY2N1ciBhZ2Fpbi4gRkFJUiBBTkQgUFJPUE9SVElPTkFURSBGcmVuY2ggUHJlc2lkZW50IEZyYW5jb2lzIEhvbGxhbmRlIGhhcyBhcHBlYWxlZCB0byBoaXMgY291bnRlcnBhcnQgQmFyYWNrIE9iYW1hIHRvIGVuc3VyZSBhbnkgcGVuYWx0eSBpcyBmYWlyIGFuZCBkb2VzIG5vdCBoYXZlIHJlcGVyY3Vzc2lvbnMgZm9yIEV1cm9wZSdzIGVjb25vbXkuIE9iYW1hIGhhcyByZXBsaWVkIHRoYXQgaXQgaXMgcHVyZWx5IGEgbWF0dGVyIGZvciB0aGUganVkaWNpYXJ5LiBFdXJvcGVhbiBVbmlvbiBpbnRlcm5hbCBtYXJrZXQgY29tbWlzc2lvbmVyIE1pY2hlbCBCYXJuaWVyIHNhaWQgaXQgd2FzIG5vcm1hbCB0aGF0IGFueSBicmVhY2ggb2YgcnVsZXMgYmUgcHVuaXNoZWQuICJUaGF0J3MgZXhhY3RseSB3aGF0IHdlIGRvIG92ZXIgaGVyZSBpZiBhIFUuUy4gY29tcGFueSBkb2VzIG5vdCByZXNwZWN0IEV1cm9wZWFuIHJ1bGVzLCIgQmFybmllciwgYSBGcmVuY2ggbmF0aW9uYWwsIHRvbGQgRnJhbmNlIEluZm8gcmFkaW8sIG5vdGluZyAyMDEzIHBlbmFsdGllcyBpbXBvc2VkIGJ5IEVVIGFudGl0cnVzdCByZWd1bGF0b3JzIG9uIE1pY3Jvc29mdCBmb3IgYnJlYWtpbmcgY29tcGV0aXRpb24gcnVsZXMuIFRoZSBpbnZlc3RpZ2F0aW9uIG9mIEJOUCBvcGVyYXRpb25zIGhhcyB0dXJuZWQgdXAgYmlsbGlvbnMgb2YgZG9sbGFycyBvZiB0cmFuc2ZlcnMgaW52b2x2aW5nIHRoZSBiYW5rIHRoYXQgc3BlY2lmaWNhbGx5IHZpb2xhdGVkIFUuUy4gc2FuY3Rpb25zLCBvbmUgc291cmNlIGhhcyBzYWlkLiBCb25uYWZlIGluaGVyaXRlZCBhIGJhbmsgdGhhdCBlbWVyZ2VkIHJlbGF0aXZlbHkgdW5zY2F0aGVkIGZyb20gdGhlIGVjb25vbWljIGNyaXNpcyBhbmQgc291Z2h0IHRvIHJhaXNlIHJldmVudWUgb3V0c2lkZSBpdHMgdHJhZGl0aW9uYWwgRXVyb3BlYW4gbWFya2V0cywganVzdCBhcyB0b3VnaGVyIGZpbmFuY2lhbCByZWd1bGF0aW9uIG1hZGUgYmFua2luZyBhIGxlc3MgcHJvZml0YWJsZSBidXNpbmVzcy4gVGhlIE5ldyBZb3JrIFN0YXRlIERlcGFydG1lbnQgb2YgRmluYW5jaWFsIFNlcnZpY2VzLCBoZWFkZWQgYnkgQmVuamFtaW4gTGF3c2t5LCBwcm9wb3NlZCB0aGUgc3VzcGVuc2lvbiBvZiBkb2xsYXItY2xlYXJpbmcgb3BlcmF0aW9ucyBhcyBvbmUgY29uZGl0aW9uIGZvciBub3QgcmV2b2tpbmcgdGhlIGxpY2Vuc2UsIFJldXRlcnMgcmVwb3J0ZWQgbGFzdCBtb250aC4gQk5QIGlzIGxpa2VseSB0byBiZSBzdXNwZW5kZWQgZnJvbSBjb252ZXJ0aW5nIGZvcmVpZ24gY3VycmVuY2llcyB0byBkb2xsYXJzIG9uIGJlaGFsZiBvZiBjbGllbnRzIGZvciBzb21lIGJ1c2luZXNzZXMgZm9yIGFzIGxvbmcgYXMgYSB5ZWFyLCBzb3VyY2VzIGhhdmUgdG9sZCBSZXV0ZXJzLiBBIHNvdXJjZSBmYW1pbGlhciB3aXRoIHRoZSBtYXR0ZXIgc2FpZCBvbiBTdW5kYXkgdGhpcyB3b3VsZCBtYWlubHkgaW52b2x2ZSBvaWwgYW5kIGdhcyBmaW5hbmNpbmcuIFR3byBzb3VyY2VzIHNhaWQgb24gU3VuZGF5IHRoZSBiYW4gd291bGQgbm90IGdvIGludG8gZWZmZWN0IGZvciBhbm90aGVyIHNpeCBtb250aHMgaW4gb3JkZXIgdG8gbGV0IHRoZSBiYW5rIGFuZCBjbGllbnRzIGFycmFuZ2Ugb3RoZXIgcGxhbnMuIE9uZSBzb3VyY2Ugc2FpZCB0aGUgc2V0dGxlbWVudCB3b3VsZCBpbmNsdWRlIGFib3V0IGEgZG96ZW4gZW1wbG95ZWVzIGxlYXZpbmcgdGhlIGJhbmsgYW5kIGRpc2NpcGxpbmFyeSBhY3Rpb24gZm9yIG90aGVycy4gU2hhcmVzIGluIEJOUCBoYXZlIGZhbGxlbiAxNyBwZXJjZW50IHNpbmNlIGl0IGZpcnN0IHNhaWQgaXQgd291bGQgbWFrZSBwcm92aXNpb25zIGZvciB0aGUgZmluZSBpbiBtaWQtRmVicnVhcnksIG9uIGNvbmNlcm5zIHRoZSBwZW5hbHRpZXMgY291bGQgYmUgYmlnIGVub3VnaCB0byByZXN0cmljdCBpdHMgZGl2aWRlbmRzIGFuZCBkcmFnIGl0cyBjYXBpdGFsIHJhdGlvIHRvIGJlbG93IDEwIHBlcmNlbnQg4oCUIGEgbGV2ZWwgc2VlbiBhcyBrZXkgdG8gc3RheWluZyBvdXQgb2YgdGhlIGRhbmdlciB6b25lIHVuZGVyIHRpZ2h0ZXIgcG9zdC1maW5hbmNpYWwgY3Jpc2lzIGd1aWRlbGluZXMu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbrJNyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDY1ZTYxMTVlMGIwMTM2Yjk=</field><field name="symbol" class="java.lang.String">rO0ABXQABElORk8=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbwSziAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+UeuFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+UeuFHrhR7</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+UeuFHrhR7</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+UeuFHrhR7</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+UeuFHrhR7</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDkyNjk0MTYwZjAyMzRkMDY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJgwAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDgxNDU=</field><field name="title" class="java.lang.String">rO0ABXQANlRyYWluIEFjY2lkZW50cyBTdGlyIFdvcnJpZXMgYWJvdXQgQ3J1ZGUtT2lsIFRyYW5zcG9ydA==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUQ+bf8AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDkxNTZlODlkNjQzZTk3NzM=</field><field name="symbol" class="java.lang.String">rO0ABXQABFJBSUw=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAURDlFsAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4QAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4wo9cKPXD</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA39cKPXCj2</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4bhR64Ueu</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4IUeuFHrh</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAKgqA==</field><field name="id" class="java.lang.String">rO0ABXQAEGRkODg5MjM4ZmMyYzA3YmM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFhIAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE5NDA0</field><field name="title" class="java.lang.String">rO0ABXQAOkV4LUJQIEVuZ2luZWVyIEJlZ2lucyBGaXJzdCBDcmltaW5hbCBUcmlhbCBGcm9tIDIwMTAgU3BpbGw=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKx5FMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDhiNmVlOGRhODcyY2UyYjU=</field><field name="symbol" class="java.lang.String">rO0ABXQAAkJQ</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUK3Cq8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBHPXCj1wo9</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBHVcKPXCj2</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBHLMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBHSj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBF1cKPXCj2</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAEbvxA==</field><field name="id" class="java.lang.String">rO0ABXQAEDEwMTdiNWY0YmY4NjhhNmU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKkvAAAA==</field></document></documents><date>2015-05-07T12:28:19-0500</date></cacheEntry>
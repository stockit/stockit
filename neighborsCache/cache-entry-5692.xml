<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0DDZJbmRlcGVuZGVudCBicm9rZXJhZ2UgZmlybSBBbWVyaXByaXNlIEZpbmFuY2lhbCBoYXMgcmFtcGVkIHVwIGVmZm9ydHMgdG8gd2luIHRvcCBmaW5hbmNpYWwgYWR2aXNlcnMgYnkgbWF0Y2hpbmcgdGhlIHNpZ25pbmcgYm9udXNlcyBvZmZlcmVkIGJ5IHRoZSBuYXRpb25zIGJpZ2dlc3QgYnJva2VyYWdlIGZpcm1zCgpUaGUgc3RyYXRlZ3kgY29taW5nIGF0IGEgdGltZSB3aGVuIGl0cyBlZmZvcnRzIHRvIHJlY3J1aXQgaGlnaGVuZCBicm9rZXJzIGhhdmUgbGFnZ2VkIGNvbXBldGl0b3JzIHdhcyBhbm5vdW5jZWQgb24gYSByZWNlbnQgY2FsbCB3aXRoIGFuYWx5c3RzIGFuZCByZWNydWl0ZXJzIEl0IHJhaXNlcyBzaWduaW5nIGJvbnVzZXMgdG8gMTUwIHBlcmNlbnQgb2YgYW4gYWR2aXNlcnMgbGFzdCAxMiBtb250aHMgb2YgcmV2ZW51ZSBmcm9tIDEyMCBwZXJjZW50IGZvciB0aG9zZSB0aGF0IGJyaW5nIGluIDgzMDAwMCBvciBtb3JlIEl0IHdvdWxkIGFsc28gb2ZmZXIgc2lnbmluZyBib251c2VzIG9mIDE1MCBwZXJjZW50IGZvciBzb2NhbGxlZCBzZWNvbmQgcXVpbnRpbGUgYnJva2VycyB3aG8gYnJpbmcgaW4gNTg1MDAwIGluIHJldmVudWUgU2luY2UgT2N0IDMxIEFtZXJpcHJpc2UgaGFzIGRyYXduIGp1c3QgZWlnaHQgYnJva2VycyB3aG8gaGFkIG1vcmUgdGhhbiAxMDAgbWlsbGlvbiBpbiBhc3NldHMgdW5kZXIgbWFuYWdlbWVudCBpbiB0aGUgdHJhaWxpbmcgMTIgbW9udGhzIGFjY29yZGluZyB0byB0aGUgZmlybXMgb3duIGFubm91bmNlbWVudHMgdHJhY2tlZCBieSBSZXV0ZXJzIER1cmluZyB0aGF0IHNhbWUgcGVyaW9kIHJlZ2lvbmFsIGluZGVwZW5kZW50IGZpcm0gUmF5bW9uZCBKYW1lcyBoaXJlZCAzMiBuZXcgYnJva2VycyB3aXRoIGF0IGxlYXN0IDMyIGJpbGxpb24gaW4gY2xpZW50IGFzc2V0cyB1bmRlciBtYW5hZ2VtZW50IGluIHRoYXQgdGltZSBhY2NvcmRpbmcgdG8gdGhlIFJldXRlcnMgZGF0YWJhc2UgQnkgcmFpc2luZyBtaW5pbXVtIHNpZ25pbmcgYm9udXNlcyBpbiB0aGUgdG9wIGdyb3VwIHRvIG5lYXJseSAxMjUgbWlsbGlvbiBmcm9tIGFyb3VuZCAxIG1pbGxpb24gQW1lcmlwcmlzZSBpcyBlbnRlcmluZyBpbnRvIHRoZSBzYW1lIHJlY3J1aXRpbmcgYXJlbmEgYXMgVUJTIEFHIEFtZXJpY2EgTW9yZ2FuIFN0YW5sZXkgQmFuayBvZiBBbWVyaWNhcyBNZXJyaWxsIEx5bmNoIGFuZCBXZWxscyBGYXJnbyBBbWVyaXByaXNlIGlzIHZlcnkgY29tcGV0aXRpdmUgd2l0aCB0aGUgYmlnIGJyb2tlcmFnZXMgc2FpZCBUb20gTGV3aXMgYSBsYXd5ZXIgYXQgU3RldmVucyAgTGVlIHdobyBhZHZpc2VzIG1vdmluZyBicm9rZXJzIEJvbnVzZXMgYXJlIG9uZSBwYXJ0IG9mIHRoZSBlbnRpcmUgcmVjcnVpdG1lbnQgcGFja2FnZSBhbmQgQW1lcmlwcmlzZSBkaWQgbm90IGltbWVkaWF0ZWx5IGRpc2Nsb3NlIG90aGVyIGRldGFpbHMgc3VjaCBhcyB3aGF0IGl0IHdpbGwgcGF5IG5ldyBoaXJlcyB3aG8gYnJpbmcgYXQgbGVhc3QgODAgcGVyY2VudCBvZiB0aGVpciBjbGllbnQgYXNzZXRzIHdpdGggdGhlbSBBbWVyaXByaXNlIGhhcyB3b3JrZWQgZm9yIHNldmVyYWwgbW9udGhzIHRvIHJlY3J1aXQgdG9wIGFkdmlzZXJzIHRvIGltcHJvdmUgaXRzIGluZHVzdHJ5IGNhY2hlIExld2lzIHNhaWQgVGhlIGZpcm0gaGFzIGFsc28gYmVlbiBtYWlsaW5nIHJlY3J1aXRtZW50IGxldHRlcnMgZGlyZWN0bHkgdG8gYWR2aXNlcnMgYXQgb3RoZXIgZmlybXMgaGludGluZyB0aGF0IGlmIHRoZXkgbW92ZSBxdWlja2x5IHRoZXkgY291bGQganVtcCBhaGVhZCBvZiBhIHJ1bGUgcmVxdWlyaW5nIHRoZW0gdG8gZGlzY2xvc2UgdGhlaXIgc2lnbmluZyBib251c2VzIHRvIHRoZWlyIGNsaWVudHMgVGhlIHNvY2FsbGVkIGRpc2Nsb3N1cmUgcnVsZSBmcm9tIHRoZSBicm9rZXJhZ2UgaW5kdXN0cnlzIHNlbGZyZWd1bGF0b3IgdGhlIEZpbmFuY2lhbCBJbmR1c3RyeSBSZWd1bGF0b3J5IEF1dGhvcml0eSBtdXN0IGJlIGFwcHJvdmVkIGJ5IHRoZSBTZWN1cml0aWVzIGFuZCBFeGNoYW5nZSBDb21taXNzaW9uIEFtZXJpcHJpc2VzIGxldHRlciBzdWdnZXN0ZWQgYnJva2VycyBtb3ZlIHdoaWxlIGRlYWxzIGFyZSBzdGlsbCBwcml2YXRlIEFtZXJpcHJpc2UgaXMgbG9va2luZyB0byBnZXQgYWR2aXNlcnMgZnJvbSBzb21lIG9mIHRoZSBpbmRlcGVuZGVudHMgbGlrZSBMUEwgRmluYW5jaWFsIEhvbGRpbmdzIGFuZCBSYXltb25kIEphbWVzIEZpbmFuY2lhbCBidXQgYWxzbyB0aGUgd2lyZWhvdXNlcyBzYWlkIE5pZ2VsIERhbGx5IG1hbmFnaW5nIGRpcmVjdG9yIGF0IE1vcmdhbiBTdGFubGV5IExQTCBhbmQgUmF5bW9uZCBKYW1lcyB0eXBpY2FsbHkgaGF2ZSBmcmFuY2hpc2VsaWtlIGFycmFuZ2VtZW50cyB3aXRoIGJyb2tlcnMgd2hvIHJlbWFpbiBpbmRlcGVuZGVudGx5IGVtcGxveWVkIHRoZSBiaWcgc29jYWxsZWQgd2lyZWhvdXNlIGZpcm1zIHRlbmQgdG8gZW1wbG95IGJyb2tlcnMgYXMgZW1wbG95ZWVzIEFuIEFtZXJpcHJpc2Ugc3Bva2VzbWFuIGRlY2xpbmVkIHRvIGNvbW1lbnQgb24gdGhlIGZpcm1zIHJlY3J1aXRpbmcgZWZmb3J0cyBSYXltb25kIEphbWVzIGRlY2xpbmVkIHRvIGNvbW1lbnQgYWJvdXQgaXRzIHJlY3J1aXRtZW50IGVmZm9ydHMgVGhlIG9mZmVycyBhcmUgYmVpbmcgbWFkZSBmb3IgaGlyZXMgdG8gQW1lcmlwcmlzZXMgYWR2aWNlIGFuZCB3ZWFsdGggbWFuYWdlbWVudCBkaXZpc2lvbiB3aGljaCBjb25zaXN0cyBvZiBicm9rZXJzIGluIGJvdGggdGhlIGZpcm1zIGluZGVwZW5kZW50IGFuZCBlbXBsb3llZSBkaXZpc2lvbnMgYW5kIHNlcnZlcyBjbGllbnRzIHdpdGggbW9yZSB0aGFuIDEgbWlsbGlvbiBpbiBpbnZlc3RhYmxlIGFzc2V0cyBTaW5jZSB0aGUgY3Jpc2lzIGZpcm1zIGFyZSB0cnlpbmcgdG8gd29yayBtb3JlIHdpdGggdG9wIHByb2R1Y2VycyBiZWNhdXNlIHRoZXkgYXJlIG1vcmUgcHJvZml0YWJsZSBzYWlkIEFsb2lzIFBpcmtlciByZXNlYXJjaCBkaXJlY3RvciBhdCBBaXRlIEdyb3VwIFRoZSBoaXJpbmcgc3RyYXRlZ2llcyBhcmUgdmVyeSBtdWNoIGRpcmVjdGVkIGF0IHRoZSB1cHBlciBlbmQgYW5kIEFtZXJpcHJpc2Ugc2VlbXMgdG8gYmUgaW4gbGluZSB3aXRoIHRoYXR0AARyb3dzdXEAfgAKAAAAAXQAATV0AAVzdGFydHVxAH4ACgAAAAF0AAEwdAACZmx1cQB+AAoAAAABdABvYXJ0aWNsZUlkLHRpdGxlLGNvbnRlbnQsZGF0ZSxzdG9ja0hpc3RvcnlJZCxzeW1ib2wsaGlzdG9yeURhdGUsb3BlbixoaWdoLGxvdyxjbG9zZSxhZGpDbG9zZSx2b2x1bWUsaWQsX3ZlcnNpb25fdAACZnF1cQB+AAoAAAABdAA6aGlzdG9yeURhdGU6WzIwMTMtMDMtMjdUMDA6MDA6MDBaIFRPIDIwMTMtMTItMDNUNTk6NTk6NTlaXXgAcA==</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDIzNTk=</field><field name="title" class="java.lang.String">rO0ABXQAOERpc2NvdW50IEJyb2tlcnMnIFNoYXJlcyBTdXJnZSBhcyBTbWFsbCBJbnZlc3RvcnMgUmV0dXJu</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8nTiSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDcyMzY1MDU5NjlhODJlZmU=</field><field name="symbol" class="java.lang.String">rO0ABXQABEFNVEQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8sdICAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4LhR64Ueu</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4MzMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3z1wo9cKP</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA38zMzMzMz</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA249cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAE4sgA==</field><field name="id" class="java.lang.String">rO0ABXQAEDdlNjk4YzYyNDVjODQ0YTE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEStAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM0Nzc=</field><field name="title" class="java.lang.String">rO0ABXQAQUNvbW1vZGl0eSBQcmljZXMgV3JvbmcgYXMgT2Z0ZW4gYXMgMjcgUGVyY2VudCBvZiBUaW1lIGZvciBUcmFkZXJz</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGblfyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGE1ZmZiZjg1OTM3MTk0ZTI=</field><field name="symbol" class="java.lang.String">rO0ABXQACEdMQ05GLlBL</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGgvFiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAUzMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAU4UeuFHrh</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAUwo9cKPXD</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAU4UeuFHrh</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAUR64UeuFI</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAKKA==</field><field name="id" class="java.lang.String">rO0ABXQAEDYyODg1MzdkNzAwOTFhOTI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHfPAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDcwOTg=</field><field name="title" class="java.lang.String">rO0ABXQALUZlZCdzIE1lZXRpbmcgTWF5IEJ1Y2sgVXAgSW52ZXN0b3JzIFRoaXMgV2Vlaw==</field><field name="content" class="java.lang.String">rO0ABXQT+FRoZSBGZWRlcmFsIFJlc2VydmUgd2lsbCBtZWV0IG9uIFR1ZXNkYXkgYW5kIFdlZG5lc2RheSwgYW5kIHRoZSByZXBvcnQgb2Ygd2Vha2VyLXRoYW4tZXhwZWN0ZWQgZmlyc3QtcXVhcnRlciBncm93dGggY291bGQgcmVpbmZvcmNlIGV4cGVjdGF0aW9ucyB0aGUgRmVkIHdpbGwga2VlcCBwdXJjaGFzaW5nIGJvbmRzIGF0IGEgcGFjZSBvZiAkODUgYmlsbGlvbiBhIG1vbnRoLiBMb3cgaW50ZXJlc3QgcmF0ZXMgYW5kIGFtcGxlIGxpcXVpZGl0eSBwcm92aWRlZCBieSB0aGUgRmVkIGFuZCBvdGhlciBjZW50cmFsIGJhbmtzIGhhdmUgYnVveWVkIGdsb2JhbCBlcXVpdHkgbWFya2V0cyBiZWNhdXNlIGxvdyBib3Jyb3dpbmcgY29zdHMgZm9yIGJ1c2luZXNzZXMgYW5kIGNvbnN1bWVycyBsZWFkIHRvIHJpY2hlciBjb3Jwb3JhdGUgcHJvZml0cy4gTWFqb3IgVS5TLiBzdG9jayBpbmRleGVzIGhpdCByZWNvcmQgaGlnaHMgZWFybGllciB0aGlzIG1vbnRoLgoKRWRpdG9y4oCZcyBOb3RlOiBQdXQgdGhlIFdvcmxk4oCZcyBUb3AgRmluYW5jaWFsIE1pbmRzIHRvIFdvcmsgZm9yIFlvdSAiQXMgbG9uZyBhcyBpdCBsb29rcyBsaWtlIGNlbnRyYWwgYmFua3MgYXJlIG9uIHlvdXIgc2lkZSBhbmQgb24gaW52ZXN0b3JzJyBzaWRlIGFzIGZhciBhcyBwcm92aWRpbmcgbW9yZSBsaXF1aWRpdHksIHRoYXQncyBnb2luZyB0byBoZWxwIGltcHJvdmUgc2VudGltZW50LCIgc2FpZCBCcmlhbiBKYWNvYnNlbiwgY2hpZWYgcG9ydGZvbGlvIHN0cmF0ZWdpc3QgYXQgV2VsbHMgRmFyZ28gRnVuZHMgTWFuYWdlbWVudCBpbiBNZW5vbW9uZWUgRmFsbHMsIFdpc2NvbnNpbi4gIkkgZG9uJ3QgdGhpbmsgKEZlZCBvZmZpY2lhbHMpIGhhdmUgZ290IGVub3VnaCBkYXRhIHNpbmNlIHRoZSBsYXN0IG1lZXRpbmcgdG8gcmVhbGx5IGp1c3RpZnkgY2hhbmdpbmcgcG9saWN5LiBJIHJlYWxseSBkb24ndCB0aGluayB0aGV5J3JlIGdvaW5nIHRvIGxvb2sgYXQgc2xvd2luZyB0aGUgcGFjZSBvZiBwdXJjaGFzZXMgdW50aWwgcHJvYmFibHkgU2VwdGVtYmVyLiIgQSBzdHJvbmcgY29tbWl0bWVudCBmcm9tIHRoZSBGZWQgdG8gY29udGludWUgaXRzIHN0aW11bGF0aXZlIHBvbGljeSwgY291cGxlZCB3aXRoIGNvcnBvcmF0ZSBlYXJuaW5ncyB0aGF0IGhhdmUgbW9zdGx5IGV4Y2VlZGVkIGxvd2VyZWQgZm9yZWNhc3RzLCBjb3VsZCBoZWxwIFdhbGwgU3RyZWV0IGV4dGVuZCBhIHJhbGx5IGRlc3BpdGUgc2lnbnMgdGhhdCB0aGUgVS5TLiBlY29ub21pYyByZWNvdmVyeSBpcyBsb3NpbmcgbW9tZW50dW0uIEV2ZW4gdGhvdWdoIHRoZSBtYXJrZXQgZW5kZWQgZmxhdCBvbiBGcmlkYXksIGl0cyBwZXJmb3JtYW5jZSBsYXN0IHdlZWsgd2FzIHBvc2l0aXZlLiBUaGUgU3RhbmRhcmQgJiBQb29yJ3MgNTAwIHJvc2UgMS43IHBlcmNlbnQsIHRoZSBEb3cgSm9uZXMgSW5kdXN0cmlhbCBBdmVyYWdlIHdhcyB1cCAxLjEgcGVyY2VudCBhbmQgTmFzZGFxIENvbXBvc2l0ZSBJbmRleCBnYWluZWQgMi4zIHBlcmNlbnQuIFRoZSBlY29ub215IGV4cGFuZGVkIGF0IGEgMi41IHBlcmNlbnQgYW5udWFsIHJhdGUgaW4gdGhlIGZpcnN0IHF1YXJ0ZXIsIHRoZSBDb21tZXJjZSBEZXBhcnRtZW50IHNhaWQgb24gRnJpZGF5LCBzaG9ydCBvZiBleHBlY3RhdGlvbnMgb2YgMy4wIHBlcmNlbnQgYW5kIHNldHRpbmcgYSBjYXV0aW91cyB0b25lLiBBIGZ1bGwgc2xhdGUgb2Yga2V5IGVjb25vbWljIGluZGljYXRvcnMgd2lsbCBiZSByZWxlYXNlZCB0aGlzIHdlZWssIGluY2x1ZGluZyBwZXJzb25hbCBpbmNvbWUgYW5kIHNwZW5kaW5nLCB0aGUgSW5zdGl0dXRlIGZvciBTdXBwbHkgTWFuYWdlbWVudCdzIG1hbnVmYWN0dXJpbmcgYW5kIHNlcnZpY2VzIGFjdGl2aXR5IGluZGV4ZXMsIHBlbmRpbmcgaG9tZSBzYWxlcywgdGhlIENoaWNhZ28gcHVyY2hhc2luZyBtYW5hZ2VycycgaW5kZXggYW5kIGNvbnN1bWVyIGNvbmZpZGVuY2UgZnJvbSB0aGUgQ29uZmVyZW5jZSBCb2FyZC4gVGhlIGhpZ2hsaWdodCBvZiB0aGUgd2VlayB3aWxsIGNvbWUgb24gRnJpZGF5IHdoZW4gdGhlICBMYWJvciBEZXBhcnRtZW50IHJlbGVhc2VzIGl0cyBlbXBsb3ltZW50IHJlcG9ydCBmb3IgQXByaWwuIEVjb25vbWlzdHMgcG9sbGVkIGJ5IFJldXRlcnMgYXJlIGxvb2tpbmcgZm9yIGpvYiBncm93dGggb2YgMTUwLDAwMCwgdXAgZnJvbSA4OCwwMDAgaW4gTWFyY2guIFRoZSB1bmVtcGxveW1lbnQgcmF0ZSBpcyBsaWtlbHkgdG8gcmVtYWluIHVuY2hhbmdlZCBhdCA3LjYgcGVyY2VudC4gVGhlIEdEUCBkYXRhICJzdWdnZXN0cyBtYXliZSB0aGUgbW9tZW50dW0gaXMgbXVjaCB3ZWFrZXIgdGhhdCB3aGF0IHdhcyBwcmljZWQgaW4sIiBzYWlkIEpvaG4gUHJhdmVlbiwgY2hpZWYgaW52ZXN0bWVudCBzdHJhdGVnaXN0IGF0IFBydWRlbnRpYWwgSW50ZXJuYXRpb25hbCBJbnZlc3RtZW50cyBBZHZpc2VycyBpbiBOZXdhcmssIE5ldyBKZXJzZXkuICJXZSBoYXZlIGhhZCBhIHZlcnkgc3Ryb25nIHJhbGx5LCBzbyBwZW9wbGUgYXJlIGxvb2tpbmcgZm9yIGFueSB0cmlnZ2VyIGZvciBwcm9maXQtdGFraW5nLCIgaGUgc2FpZC4gUHJhdmVlbiBzYWlkIHRoZSBtYXJrZXQgY291bGQgc2VlIGEgNSBwZXJjZW50IHB1bGxiYWNrIGluIHRoZSBtb250aHMgYWhlYWQgc2hvdWxkIHVwY29taW5nIGRhdGEgcHJvdmUgdG8gYmUgd2Vha2VyIHRoYW4gZXhwZWN0ZWQuIFN0b2NrcyBoYWQgYSB3aWxkIHJ1biBsYXN0IHdlZWsgYWZ0ZXIgaGFja2VycyBhdHRhY2tlZCB0aGUgd2Vic2l0ZSBvZiBzdG9jayBicm9rZXIgQ2hhcmxlcyBTY2h3YWIgQ29ycCBhbmQgYSBmYWxzZSByZXBvcnQgb24gdGhlIEFzc29jaWF0ZWQgUHJlc3MnIFR3aXR0ZXIgYWNjb3VudCBhYm91dCBleHBsb3Npb25zIGF0IHRoZSBXaGl0ZSBIb3VzZSBzZW50IHRoZSBtYXJrZXQgaW50byBhIGJyaWVmIHRhaWxzcGluLiBPbiBUaHVyc2RheSwgYSBzb2Z0d2FyZSBnbGl0Y2ggc2h1dCBkb3duIHRoZSBDaGljYWdvIEJvYXJkIE9wdGlvbnMgRXhjaGFuZ2UgZm9yIGhhbGYgdGhlIGRheSwgcHJldmVudGluZyB0cmFkaW5nIGluIG9wdGlvbnMgb24gdHdvIG9mIHRoZSBzdG9jayBtYXJrZXQncyBtb3N0IGNsb3NlbHkgd2F0Y2hlZCBpbmRleGVzIGFuZCBkZWxpdmVyaW5nIHRoZSBsYXRlc3QgYmxvdyB0byBjb25maWRlbmNlIGluIHRoZSB3YXkgVS5TLiBmaW5hbmNpYWwgbWFya2V0cyBvcGVyYXRlLiAgRVVST1BFLCBFQVJOSU5HUyBUaGUgRXVyb3BlYW4gQ2VudHJhbCBCYW5rIHdpbGwgbWVldCBvbiBUaHVyc2RheSBhbmQgaW52ZXN0b3JzIHdpbGwgd2F0Y2ggdG8gc2VlIGlmIGl0IGRlbGl2ZXJzIGFuIGludGVyZXN0LXJhdGUgY3V0IGFzIHRoZSBldXJvem9uZSBlY29ub215IGRldGVyaW9yYXRlcyBmdXJ0aGVyLiBGdXJ0aGVyIG1vbmV0YXJ5IGVhc2luZyB3b3VsZCBlbmNvdXJhZ2UgaW52ZXN0b3JzIHRvIGJ1eSByaXNraWVyIGFzc2V0cyBhbmQgYm9vc3Qgc3RvY2tzLiAiVGhlIG1hcmtldCBoYXMgYmVlbiByYWxseWluZyBvbiB0aGUgZmFjdCB0aGUgRUNCIG1pZ2h0IGFjdHVhbGx5IHN0YXJ0IHRvIGRvIHNvbWV0aGluZzsgaWYgdGhlIFUuUy4gbWFya2V0IHJlYWN0cyBpbiB0aGUgc2FtZSB3YXksIHRoYXQgbWlnaHQgZ2V0IHRoZSBtYXJrZXQgcmFsbHlpbmcsIiBzYWlkIEpvaG4gQ2FuYWxseSwgYW4gaW52ZXN0bWVudCBzdHJhdGVnaXN0IGFuZCBlY29ub21pc3QgZm9yIExQTCBGaW5hbmNpYWwgaW4gQm9zdG9uLiBXaXRoIGVhcm5pbmdzIHJlcG9ydGluZyBub3cgaGFsZiBvdmVyLCBpbnZlc3RvcnMgd2lsbCBsb29rIHRvIHNlZSBpZiBjb21wYW5pZXMgY2FuIGNvbnRpbnVlIHRvIGV4Y2VlZCBwcm9maXQgZXN0aW1hdGVzIGRlc3BpdGUgbGFja2x1c3RlciByZXZlbnVlLiBBY2NvcmRpbmcgdG8gVGhvbXNvbiBSZXV0ZXJzIGRhdGEsIG9mIHRoZSAyNzEgY29tcGFuaWVzIGluIHRoZSBTJlAgNTAwIHRoYXQgaGF2ZSByZXBvcnRlZCBlYXJuaW5ncyBmb3IgdGhlIGZpcnN0IHF1YXJ0ZXIsIDY5IHBlcmNlbnQgaGF2ZSBiZWF0ZW4gYW5hbHlzdHMnIGV4cGVjdGF0aW9ucywgYWJvdmUgdGhlIDYzIHBlcmNlbnQgYXZlcmFnZSBzaW5jZSAxOTk0LiBIb3dldmVyLCBvbmx5IDQzLjkgcGVyY2VudCBoYXZlIHRvcHBlZCBhbmFseXN0cycgcmV2ZW51ZSBmb3JlY2FzdHMsIHdlbGwgYmVsb3cgdGhlIDYyIHBlcmNlbnQgYXZlcmFnZSBzaW5jZSAyMDAyIGFuZCB0aGUgNTIgcGVyY2VudCByYXRlIGZvciB0aGUgbGFzdCBmb3VyIHF1YXJ0ZXJzLiBBbmFseXN0cyBub3cgc2VlIGVhcm5pbmdzIGdyb3d0aCBvZiAzLjggcGVyY2VudCB0aGlzIHF1YXJ0ZXIsIHVwIGZyb20gZXhwZWN0YXRpb25zIG9mIDEuNSBwZXJjZW50IG9uIEFwcmlsIDEuIFRoaXMgd2VlayBEb3cgY29tcG9uZW50cyByZXBvcnRpbmcgcmVzdWx0cyB3aWxsIGJlIFBmaXplciAgYW5kIE1lcmNrLiBPdGhlciBjb21wYW5pZXMgc2NoZWR1bGVkIHRvIHJlcG9ydCBpbmNsdWRlIExvZXdzIENvcnAuLCBBZXRuYSBJbmMsIENoZXNhcGVha2UgRW5lcmd5LCBWaXNhIEluYy4sIFZpYWNvbSBJbmMuIGFuZCBLcmFmdCBGb29kcyBHcm91cCBJbmMuIERhdmlkIEpveSwgY2hpZWYgbWFya2V0IHN0cmF0ZWdpc3QgYXQgQW1lcmlwcmlzZSBGaW5hbmNpYWwgYmFzZWQgaW4gQm9zdG9uIHdoZXJlIGhlIGhlbHBzIG92ZXJzZWUgYWJvdXQgJDcwMCBiaWxsaW9uIGluIGFzc2V0cywgc2FpZCB0aGUgbGFja2x1c3RlciBmaWd1cmVzIHN1Z2dlc3QgdGhlIHNlY29uZCBxdWFydGVyIG1heSBub3QgYmUgYXMgcm9idXN0IGFzIGhvcGVkLiAiUmlnaHQgbm93LCBtYXJrZXRzIGFyZSBnb2luZyB0aHJvdWdoIGFuIGFkanVzdG1lbnQgcHJvY2VzcywgdHJ5aW5nIHRvIGZpZ3VyZSBvdXQganVzdCBob3cgcm9idXN0IHRoZSBlY29ub215IGlzIGhlcmUgYW5kIG92ZXJzZWFzIGFzIHdlbGwsIiBKb3kgc2FpZC4gIllvdSBoYXZlIGludmVzdG9ycyBzb3J0IG9mIGJpZGluZyB0aGVpciB0aW1lLiBUaGV5IGFyZSBpbnZlc3RlZCwgYnV0IG5vdCB3aXRoIGNvbXBsZXRlIGNvbnZpY3Rpb24uIgoKRWRpdG9y4oCZcyBOb3RlOiBQdXQgdGhlIFdvcmxk4oCZcyBUb3AgRmluYW5jaWFsIE1pbmRzIHRvIFdvcmsgZm9yIFlvdQ==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT5PAwyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGU2Yjk1YmI1MDE1MTFlZGM=</field><field name="symbol" class="java.lang.String">rO0ABXQAB1dJTEQuUEs=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT5UKWiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/XCj1wo9cK</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/XCj1wo9cK</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/XCj1wo9cK</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/XCj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/XCj1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAF3A==</field><field name="id" class="java.lang.String">rO0ABXQAEDdkZTFjNWU1ZGExZmJkMjg=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGT8AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExNDI3</field><field name="title" class="java.lang.String">rO0ABXQAQUNoaW5hJ3MgQXBwZXRpdGUgZm9yIFBvcmsgU3B1cnMgJDQuNyBCaWxsaW9uIFNtaXRoZmllbGQgRm9vZHMgQnV5</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT7zzoyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI5MTYxNGEwNTI5MmUzMGM=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0NQSU4uSks=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT749OiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECzVgAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEC0HgAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECzVgAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECzVgAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECy7e4UeuFI</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAANUyIA==</field><field name="id" class="java.lang.String">rO0ABXQAEGE4YzM3MGYxOTJkZDMyNzM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGDkAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE1Mzc4</field><field name="title" class="java.lang.String">rO0ABXQAQUNoaW5hJ3MgQXBwZXRpdGUgZm9yIFBvcmsgU3B1cnMgJDQuNyBCaWxsaW9uIFNtaXRoZmllbGQgRm9vZHMgQnV5</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT7zzoyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI5MTYxNGEwNTI5MmUzMGM=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0NQSU4uSks=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT749OiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECzVgAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEC0HgAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECzVgAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECzVgAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECy7e4UeuFI</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAANUyIA==</field><field name="id" class="java.lang.String">rO0ABXQAEDE5ZjQ3ZmZlNzYxYzQ3ODU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKEyAAAQ==</field></document></documents><date>2015-05-07T12:09:20-0500</date></cacheEntry>
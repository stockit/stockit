<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0CfpUaGUgbW92ZSBmb2xsb3dzIHRoZSByZWplY3Rpb24gb2YgbW9yZSB0aGFuIGhhbGYgYSBtaWxsaW9uIHRvbm5lcyBvZiBVUyBjb3JuIGFmdGVyIGF1dGhvcml0aWVzIGRldGVjdGVkIHRoZSBwcmVzZW5jZSBvZiBNSVIgMTYyIGEgR01PIHZhcmlldHkgZGV2ZWxvcGVkIGJ5IFN5bmdlbnRhIEFHIGFuZCBub3QgYXBwcm92ZWQgZm9yIGltcG9ydCBieSBDaGluYXMgYWdyaWN1bHR1cmUgbWluaXN0cnkgVGhlIGNvbnRhaW5lcnMgd2hpY2ggd2VyZSBzZWFsZWQgZm9yIGEgd2hpbGUgaGF2ZSBiZWVuIHJlamVjdGVkIGF0IGEgcG9ydCBpbiBTaGFuZ2hhaSBzYWlkIG9uZSB0cmFkZXIgd2l0aCBhIGRvbWVzdGljIHRyYWRpbmcgaG91c2UgQW5vdGhlciBpbmR1c3RyeSBzb3VyY2UgY29uZmlybWVkIHRoZSB2b2x1bWUgUXVhcmFudGluZSBhdXRob3JpdGllcyBpbiBTaGFuZ2hhaSBkZWNsaW5lZCBpbW1lZGlhdGUgY29tbWVudCBUcmFkZXJzIGhhZCBiZWVuIGZyZXR0aW5nIGFib3V0IHBvc3NpYmxlIERERyByZWplY3Rpb25zIGFmdGVyIGVhcmxpZXIgc2F5aW5nIHRoYXQgdGhlIHN0cmFpbiBhbHJlYWR5IGFwcHJvdmVkIGJ5IGRlc3RpbmF0aW9ucyBzdWNoIGFzIEphcGFuIFNvdXRoIEtvcmVhIGFuZCB0aGUgRXVyb3BlYW4gVW5pb24gaGFkIGJlZW4gZm91bmQgaW4gc2hpcG1lbnRzIG9mIHRoZSBwcm90ZWlucmljaCBwcm9kdWN0IG9mIGNvcm4gZXRoYW5vbCBDaGluYSB0aGUgd29ybGRzIHRvcCBidXllciBvZiBVUyBEREdzIGFjY291bnRlZCBmb3IgYWJvdXQgNDAgcGVyY2VudCBvZiBVUyBleHBvcnRzIGR1cmluZyB0aGUgMjAxMjEzIG1hcmtldGluZyBzZWFzb24gV29ycmllcyBvdmVyIHBvc3NpYmxlIHJlamVjdGlvbnMgaGF2ZSBwcmVzc3VyZWQgQ2hpY2FnbyBCb2FyZCBvZiBUcmFkZSBjb3JuIHByaWNlcyBUcmFkZXJzIGFyZSBjb25jZXJuZWQgdGhhdCBjYXJnb2VzIHdpbGwgYmUgZGlmZmljdWx0IHRvIHN3aXRjaCB0byBvdGhlciBkZXN0aW5hdGlvbnMgYXMgdGhlIHN1YnN0aXR1dGUgZm9yIGNvcm4gYW5kIG1lYWwgaW4gYW5pbWFsIGZlZWQgaXMgbm90IHdpZGVseSB1c2VkIGluIHRoZSByZXN0IG9mIEFzaWEgVGhleSBzYWlkIG1vcmUgcmVqZWN0aW9ucyB3ZXJlIGxpa2VseSBhZnRlciB0aGUgR2VuZXJhbCBBZG1pbmlzdHJhdGlvbiBvZiBRdWFsaXR5IFN1cGVydmlzaW9uIEluc3BlY3Rpb24gYW5kIFF1YXJhbnRpbmUgQ0lRIHRoaXMgd2VlayBpc3N1ZWQgYSBub3RpY2UgdG8gbG9jYWwgYXV0aG9yaXRpZXMgYXNraW5nIHRoZW0gdG8gc3RlcCB1cCBjaGVja3MgZm9yIE1JUiAxNjIgaW4gRERHIGNhcmdvZXMgUXVhcmFudGluZSBhdXRob3JpdGllcyBhdCBtYWpvciBwb3J0cyBoYXZlIGJlZW4gbm90aWZpZWQgYW5kIHdpbGwgYmUgc3RyaWN0IGluIHRlc3Rpbmcgc2FpZCBhbm90aGVyIHRyYWRlciB3aXRoIGEgbWFqb3Igc3RhdGVvd25lZCB0cmFkaW5nIGhvdXNlIEJlZm9yZSBhdXRob3JpdGllcyB3ZXJlIGp1c3QgY2hlY2tpbmcgb24gc2VsZWN0aXZlIHNoaXBtZW50cyBidXQgbm93IGFsbCBzaGlwbWVudHMgd2lsbCBoYXZlIHRvIGJlIHRlc3RlZCBhbmQgYSBsYXJnZSB2b2x1bWUgbWF5IGJlIHR1cm5lZCBhd2F5IFRoZSB0cmFkZXJzIHNhaWQgdGhleSBoYWQgYXNrZWQgdGhlaXIgVVMgc3VwcGxpZXJzIHRvIGhhbHQgc2hpcG1lbnRzIEl0IGNvbWVzIGF0IHNob3J0IG5vdGljZSBUaGUgc2hpcG1lbnRzIGFscmVhZHkgZGVsaXZlcmVkIG1heSBub3QgYmUgZWFzaWx5IHJlc29sZCB0byBvdGhlciBjb3VudHJpZXMgc2FpZCB0aGUgdHJhZGVyIENoaW5lc2UgaW1wb3J0cyBvZiBEREdzIHdlcmUgZXhwZWN0ZWQgdG8gaGl0IGEgcmVjb3JkIGhpZ2ggb2YgbW9yZSB0aGFuIDQgbWlsbGlvbiB0b25uZXMgaW4gMjAxMzE0IGR1ZSB0byBjaGVhcCBVUyBwcmljZXMgYW5kIHN0cm9uZyBkb21lc3RpYyBkZW1hbmQgTW9udGhseSBpbXBvcnRzIGluIERlY2VtYmVyIGFuZCBKYW51YXJ5IHdlcmUgZXN0aW1hdGVkIGF0IGJldHdlZW4gNDUwMDAwIHRvbm5lcyB0byA1MDAwMDAgdG9ubmVzIENoaW5hcyBpbXBvcnRzIGluIE5vdmVtYmVyIHJvc2UgMjUzIHBlcmNlbnQgb24gdGhlIHllYXIgdG8gNTM4NDk4IHRvbm5lcyBhbG1vc3QgYWxsIG9mIHdoaWNoIGNhbWUgZnJvbSB0aGUgVVMgVGhlIHJlamVjdGlvbiBzdXBwb3J0ZWQgZG9tZXN0aWMgZnV0dXJlcyBwcmljZXMgZm9yIHNveW1lYWwgYW5kIHJhcGVzZWVkIG1lYWwgb24gVGh1cnNkYXkgVGhlIG1vc3RhY3RpdmUgTWF5IDIwMTQgcmFwZXNlZWQgbWVhbCBjb250cmFjdCB3YXMgdHJhZGluZyB1cCAxMyBwZXJjZW50IGF0IGl0cyBoaWdoZXN0IGluIG1vcmUgdGhhbiB0d28gbW9udGhzIFN0cmljdCB0ZXN0aW5nIGZvciBNSVIgMTYyIGNvbWVzIGFzIEJlaWppbmcgc2Vla3MgdG8gY3VyYiBjaGVhcCBjb3JuIGltcG9ydHMgYW5kIHN1cHBvcnQgZG9tZXN0aWMgcHJpY2VzIGZvciB0aGUgZ3JhaW4gaW5kdXN0cnkgc291cmNlcyBoYXZlIHNhaWQgVGhlIFVTIGhhcyB1cmdlZCBDaGluYSB0byBhY3QgcHJvbXB0bHkgdG8gYXBwcm92ZSB0aGUgc3RyYWludAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAb2FydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2UsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEzLTAzLTI3VDAwOjAwOjAwWiBUTyAyMDEzLTEyLTAzVDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwMjQ=</field><field name="title" class="java.lang.String">rO0ABXQAO0NoaW5hIFNlZW4gV2VsbCBBaGVhZCBvZiBJbmRpYSBhcyBXb3JsZCdzIFRvcCBHb2xkIENvbnN1bWVy</field><field name="content" class="java.lang.String">rO0ABXQOhVRoZSBpbmR1c3RyeSBib2R5IGN1dCBpdHMgb3V0bG9vayBmb3IgSW5kaWFuIGRlbWFuZCBpbiAyMDEzIHRvIGFyb3VuZCA5MDAgdG9ubmVzIGZyb20gdGhlIDEsMDAwIHRvbm5lcyBwcmVkaWN0ZWQgcHJldmlvdXNseSwgd2hpbGUga2VlcGluZyBpdHMgZm9yZWNhc3QgZm9yIENoaW5hIHVuY2hhbmdlZCBhdCAxLDAwMCB0b25uZXMuIFBsdW1tZXRpbmcgZGVtYW5kIGZyb20gSW5kaWEgY291bGQgZnVydGhlciBwcmVzc3VyZSBnbG9iYWwgcHJpY2VzIHRoYXQgaGF2ZSBkcm9wcGVkIGFyb3VuZCAyNCBwZXJjZW50IHRoaXMgeWVhciBvbiBmZWFycyB0aGUgVS5TLiBGZWRlcmFsIFJlc2VydmUgd291bGQgY3V0IGl0cyBlY29ub21pYyBzdGltdWx1cy4KCkVkaXRvcidzIE5vdGU6IEdldCBUb20gTHVvbmdvJ3MgR29sZCBTdG9jayBBZHZpc2VyIOKAlCBDbGljayBIZXJlIE5vdyEgIlRoZSBhZG1pbmlzdHJhdGl2ZSBtZWFzdXJlcyB0aGF0IHRoZSBJbmRpYW4gZ292ZXJubWVudCBoYXMgaW1wb3NlZCBvbiB0aGUgbWFya2V0IGhhdmUgcHJvdmVuIHRvIGJlIHF1aXRlIGVmZmVjdGl2ZSBhbmQgaW1wb3J0cyBoYXZlIHNsb3dlZCBkb3duLCIgQWxiZXJ0IENoZW5nLCB0aGUgV0dDJ3MgbWFuYWdpbmcgZGlyZWN0b3IgZm9yIHRoZSBGYXIgRWFzdCB0b2xkIFJldXRlcnMuICJJdCB3b3VsZCBiZSBkaWZmaWN1bHQgdG8gZ2V0IHRvIDEsMDAwIHRvbm5lcywiIGhlIHNhaWQsIGFkZGluZyB0aGF0IGRlbWFuZCB3b3VsZCBub3QgZ28gZmFyIGJleW9uZCB0aGUgODY0IHRvbm5lcyByZWNvcmRlZCBsYXN0IHllYXIuICJJZiBub3QgZm9yIGFkbWluaXN0cmF0aXZlIG1lYXN1cmVzLCBJbmRpYSB3b3VsZCBoYXZlIHNlZW4gZ3Jvd3RoIGxpa2UgQ2hpbmEuIiBBY2NvcmRpbmcgdG8gdGhlIFdHQydzIHRoaXJkLXF1YXJ0ZXIgcmVwb3J0LCBkZW1hbmQgZnJvbSBJbmRpYSBzbyBmYXIgdGhpcyB5ZWFyIGhhcyByZWFjaGVkIDcxNC43IHRvbm5lcywgbG93ZXIgdGhhbiBtYWlubGFuZCBDaGluYSdzIDc3OS42IHRvbm5lcy4gQ2hpbmVzZSBkZW1hbmQgaW4gdGhlIGZpcnN0IHRocmVlIHF1YXJ0ZXJzIG9mIHRoZSB5ZWFyIGlzIGFscmVhZHkgYWJvdmUgYWxsIG9mIDIwMTIuIEluZGlhLCBncmFwcGxpbmcgd2l0aCBhIGhpZ2ggdHJhZGUgZGVmaWNpdCBhbmQgYSB3ZWFrIHJ1cGVlLCBpbXBvc2VkIGEgc2VyaWVzIG9mIG1lYXN1cmVzIHRoaXMgeWVhciB0byBjcmltcCBkZW1hbmQgZm9yIHRoZSBwcmVjaW91cyBtZXRhbCAtIHRoZSBzZWNvbmQgbW9zdCBleHBlbnNpdmUgaXRlbSBvbiBpdHMgaW1wb3J0IGJpbGwgYWZ0ZXIgb2lsLiBJdCBpbnRyb2R1Y2VkIGEgcmVjb3JkIDEwLXBlcmNlbnQgZHV0eSBvbiBnb2xkIGltcG9ydHMgYW5kIHRpZWQgdGhlIHZvbHVtZSBvZiBpbXBvcnRzIHRvIGV4cG9ydHMsIG1ha2luZyBpdCBtb3JlIGRpZmZpY3VsdCBhbmQgZXhwZW5zaXZlIGZvciBnb2xkIHRvIGJlIHNvbGQgdG8gZG9tZXN0aWMgbWFya2V0cy4gSW1wb3J0cyBwbHVuZ2VkIHRvIDI0IHRvbm5lcyBpbiBPY3RvYmVyIGZyb20gYSByZWNvcmQgMTYyIHRvbm5lcyBpbiBNYXkuIEJ1dCB0aGUgV0dDIHdhcm5lZCB0aGF0IGdvbGQgd2FzIGZpbmRpbmcgaXRzIHdheSBpbnRvIEluZGlhIHRocm91Z2ggdW5vZmZpY2lhbCBjaGFubmVscy4gSXQgZGlkIG5vdCBnaXZlIGFuIGVzdGltYXRlIG9uIHN1cHBseSB0aHJvdWdoIHNtdWdnbGluZy4gIkdvbGQgZW50ZXJpbmcgdGhlIGNvdW50cnkgdW5vZmZpY2lhbGx5IHRocm91Z2ggSW5kaWEncyBwb3JvdXMgYm9yZGVycyBoZWxwZWQgdG8gbWVldCBwZW50LXVwIGxvY2FsIGRlbWFuZCwgdG9nZXRoZXIgd2l0aCBhbiBpbmZsdXggb2YgcmVjeWNsZWQgZ29sZCB0aGF0IHdhcyBkcmF3biBvdXQgYnkgaGlnaGVyIHByaWNlcyBhbmQgcHJvbW90aW9ucyBvZmZlcmVkIGJ5IHJldGFpbGVycywiIHRoZSBXR0Mgc2FpZCBpbiBpdHMgcXVhcnRlcmx5IHJlcG9ydC4gIkl0IGlzIGxpa2VseSB0aGF0IHVub2ZmaWNpYWwgZ29sZCB3aWxsIGNvbnRpbnVlIHRvIGZpbmQgaXRzIHdheSBpbnRvIHRoZSBjb3VudHJ5IHRvIHNhdGlzZnkgZGVtYW5kLiIgR29sZCBmb3JtcyBhIGtleSBwYXJ0IG9mIGEgYnJpZGUncyBkb3dyeSBpbiBJbmRpYSBhbmQgaXMgY29uc2lkZXJlZCBhdXNwaWNpb3VzIGFzIGEgZ2lmdCBvciBvZmZlcmluZyBhdCByZWxpZ2lvdXMgZmVzdGl2YWxzLiBMb2NhbCBwcmVtaXVtcyBoaXQgYSByZWNvcmQgJDEzMCBhbiBvdW5jZSBlYXJsaWVyIHRoaXMgbW9udGggYXMgc3VwcGxpZXMgd2VyZSBzY2FyY2UgaW4gdGhlIGJ1aWxkIHVwIHRvIHRoZSBwZWFrIGdvbGQgYnV5aW5nIHNlYXNvbiBvZiBEaGFudGVyYXMgYW5kIERpd2FsaS4gSG93ZXZlciwgZGVtYW5kIGZhaWxlZCB0byBtYXRjaCBsYXN0IHllYXIncyBhcHBldGl0ZSBhbmQgcHJlbWl1bXMgaGF2ZSBzaW5jZSBlYXNlZC4gIlRoaXMgcXVhcnRlciB0aGVyZSB3YXNuJ3QgcnVuYXdheSBkZW1hbmQgYXMgd2UgaGFkIGVzdGltYXRlZCwiIHNhaWQgU29tYXN1bmRhcmFtIFBSLCBXR0MncyBtYW5hZ2luZyBkaXJlY3RvciBmb3IgSW5kaWEsIGNvbW1lbnRpbmcgb24gZm91cnRoLXF1YXJ0ZXIgYXBwZXRpdGUuICJJdCBpcyBnb2luZyB0byBiZSBsb3dlciB0aGFuIGxhc3QgeWVhci4iIENISU5BIFNUSUxMIFNUUk9ORyBHbG9iYWwgYXBwZXRpdGUgZm9yIGdvbGQgZmVsbCAyMSBwZXJjZW50IGluIHRoZSB0aGlyZCBxdWFydGVyIGR1ZSB0byBvdXRmbG93cyBmcm9tIHBoeXNpY2FsIGJ1bGxpb24gZnVuZHMgYW5kIHRoZSBkcm9wIGluIGJ1eWluZyBmcm9tIEluZGlhLCBhY2NvcmRpbmcgdG8gdGhlIFdHQy4gQnV0IG1haW5sYW5kIENoaW5lc2UgZGVtYW5kIHJlbWFpbmVkIHN0cm9uZyBldmVuIGR1cmluZyB0aGUgc2Vhc29uYWxseSBzbG93IHRoaXJkIHF1YXJ0ZXIsIGdhaW5pbmcgMTggcGVyY2VudCB3aGlsZSBJbmRpYW4gZGVtYW5kIGRyb3BwZWQgMzIgcGVyY2VudC4gRGVtYW5kIGZyb20gQ2hpbmEgaGFzIGp1bXBlZCBuZWFybHkgNDAgcGVyY2VudCB0aGlzIHllYXIgYXMgdGhlIGFwcGV0aXRlIGZvciBqZXdlbHJ5LCBiYXJzIGFuZCBjb2lucyBpbmNyZWFzZWQgc2hhcnBseSBkdWUgdG8gdGhlIHNoYXJwIGRyb3AgaW4gZ29sZCBwcmljZXMuIENoaW5lc2UgZGVtYW5kIGhhcyB0byBhbiBleHRlbnQgYmVlbiBhYmxlIHRvIHN0ZW0gdGhlIGRyb3AgaW4gZ2xvYmFsIGdvbGQgcHJpY2VzLCBjb25zdW1pbmcgYSBiaWcgcGFydCBvZiBmbG93cyB0aGF0IHdlcmUgbG9zdCBkdWUgdG8gdGhlIHN0cmljdCBydWxlcyBpbiBJbmRpYSBhbmQgdGhlIG91dGZsb3dzIGZyb20gZXhjaGFuZ2UtdHJhZGVkIGZ1bmRzLiAiVGhlIGZsb3cgb2YgZ29sZCBmcm9tIHRoZSB3ZXN0IHRvIGVhc3QgaXMgY29udGludWluZywiIHNhaWQgV0dDJ3MgQ2hlbmcuICJXZXN0ZXJuIGludmVzdG9ycyBkbyBub3Qgc2VlIHRoZSBvcHBvcnR1bml0eSBpbiBnb2xkIGJ1dCBBc2lhbnMgYXJlIHBpY2tpbmcgaXQgdXAsIG1vcmUgc28gaW4gQ2hpbmEgdGhhbiBJbmRpYS4iIEZvdXJ0aC1xdWFydGVyIGRlbWFuZCB3aWxsIGFsc28gcmVtYWluIHN0cm9uZyBhcyBidXlpbmcgcGlja3MgdXAgYWhlYWQgb2YgdGhlIENoaW5lc2UgTmV3IFllYXIgYXQgdGhlIGVuZCBvZiBKYW51YXJ5LCBoZSBzYWlkLgoKRWRpdG9yJ3MgTm90ZTogR2V0IFRvbSBMdW9uZ28ncyBHb2xkIFN0b2NrIEFkdmlzZXIg4oCUIENsaWNrIEhlcmUgTm93IQ==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJVMdsAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDExNjg2NGVlZjk4MjEwOGU=</field><field name="symbol" class="java.lang.String">rO0ABXQABEdPTEQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJaWDcAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSmj1wo9cK</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSrCj1wo9c</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSIAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSUeuFHrhS</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSDMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAC1X0A==</field><field name="id" class="java.lang.String">rO0ABXQAEDEzYzQ3ZWE4NTMxYmQ0ZTg=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mERiAAAQ==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDIzNzU=</field><field name="title" class="java.lang.String">rO0ABXQAMUdvbGQgVHJhZGVycyBNb3N0IEJ1bGxpc2ggU2luY2UgQmVhciBNYXJrZXQgQmVnYW4=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8X2xCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDQzMGNhNDhmY2Y3MWRlYzE=</field><field name="symbol" class="java.lang.String">rO0ABXQAA1BUWQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8dAWyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAy8KPXCj1x</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzKPXCj1wp</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAy1HrhR64U</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAsAAAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAbk2A==</field><field name="id" class="java.lang.String">rO0ABXQAEDNjYjk2ZmE5M2JlMzQ4ZDQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKFLAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDg2ODk=</field><field name="title" class="java.lang.String">rO0ABXQAQEJ1bGxpb24gU211Z2dsaW5nIE91dHN0cmlwcyBOYXJjb3RpY3MgdG8gRmVlZCBJbmRpYSdzIEdvbGQgSGFiaXQ=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUK8MQsAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDQ4MDJmZDc1NWRmYzdhMjQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAA1NSSQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAULBV2cAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAo0euFHrhS</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAo5mZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAogAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAomZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAomZmZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAGdrA==</field><field name="id" class="java.lang.String">rO0ABXQAEGZlYTMxMmExYTU0NmFkYTQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEr6AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwNTI=</field><field name="title" class="java.lang.String">rO0ABXQAMlRoZSBTZWNyZXQsIERpcnR5IENvc3Qgb2YgT2JhbWEncyBHcmVlbiBQb3dlciBQdXNo</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJK5SMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI3MTcyMzgzMzAxZTY3Yjg=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZBUk0=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJQC38AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyI9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABp3A==</field><field name="id" class="java.lang.String">rO0ABXQAEGIxNzhiNTk3MDYyZjcwYTE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGoqAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExMTUz</field><field name="title" class="java.lang.String">rO0ABXQANUNvbGxhcHNlIG9mIFBvdGFzaCBDYXJ0ZWwgU2VuZHMgU2hvY2sgV2F2ZXMgV29ybGR3aWRl</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUAt8niAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGM0MGY0NDgyODRiNzlkYzc=</field><field name="symbol" class="java.lang.String">rO0ABXQABkJIUC5BWA==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUAzGNSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBBZR64UeuF</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBBfXCj1wo9</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBBUeuFHrhS</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBBUeuFHrhS</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA+7hR64Ueu</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAGU7oA==</field><field name="id" class="java.lang.String">rO0ABXQAEDJiNzdjOWYxODdhOTRmOGQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJBvAAAA==</field></document></documents><date>2015-05-07T04:47:22-0500</date></cacheEntry>
<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0CiBDYXBpdGFsIG91dGZsb3dzIGFyZSBhIHRocmVhdCBmYWNpbmcgZW1lcmdpbmcgbWFya2V0cyBhcyB0aGUgcHJvc3BlY3Qgb2YgdGhlIEZlZGVyYWwgUmVzZXJ2ZSBsaWZ0aW5nIHJhdGVzIGx1cmVzIGZ1bmRzIEJhc3JpIHNhaWQgaW4gYW4gaW50ZXJ2aWV3IGluIENhaXJucyBBdXN0cmFsaWEgd2hlcmUgR3JvdXAgb2YgMjAgZmluYW5jZSBjaGllZnMgbWV0IEluIEluZG9uZXNpYSB3aGVyZSB0aGUgYmVuY2htYXJrIHJhdGUgaXMgYWxyZWFkeSBhdCBpdHMgaGlnaGVzdCBzaW5jZSAyMDA5IHBvbGljeSBtYWtlcnMgbWF5IGhhdmUgdG8gdGlnaHRlbiBmdXJ0aGVyIHRvIHByZXNlcnZlIHRoZSBuYXRpb25zIHJlbGF0aXZlIGFwcGVhbCB0byBpbnZlc3RvcnMgaGUgc2FpZCBJbiB0aGUgc2hvcnQgdGVybSBzb21lIGVtZXJnaW5nIG1hcmtldHMgbWF5IGhhdmUgdG8gY2hvb3NlIHN0YWJpbGl6YXRpb24gb3ZlciBncm93dGggQmFzcmkgc2FpZCBZb3UgY2Fubm90IHByb21vdGUgZWNvbm9taWMgZ3Jvd3RoIHdoZW4gZGVhbGluZyB3aXRoIHRoaXMgaXNzdWUgSXQgd2lsbCBleGFjZXJiYXRlIHRoZSBzaXR1YXRpb24gVGhlIFVTIGRvbGxhciBoYXMgYXBwcmVjaWF0ZWQgYXMgdGhlIEZlZCBlZGdlcyBjbG9zZXIgdG8gaXRzIGZpcnN0IHJhdGUgaW5jcmVhc2Ugc2luY2UgMjAwNiB3aGlsZSBJbmRvbmVzaWFzIHJ1cGlhaCBoYXMgZHJvcHBlZCBmb3IgZml2ZSBzdHJhaWdodCB3ZWVrcyBhbWlkIGdsb2JhbCBmdW5kcyBwdWxsaW5nIG1vbmV5IGZyb20gbG9jYWwgc3RvY2tzIGluIGFudGljaXBhdGlvbiBvZiBoaWdoZXIgVVMgYm9ycm93aW5nIGNvc3RzIEFzIHNvbWUgb2YgdGhlIHdvcmxkcyBmYXN0ZXN0Z3Jvd2luZyBlY29ub21pZXMgYWRhcHQgdG8gY2hhbmdpbmcgcG9saWN5IGF0IHRoZSBGZWQgdGhlaXIgY29udHJpYnV0aW9uIHRvIGdsb2JhbCBleHBhbnNpb24gbWlnaHQgd2Vha2VuIEJhc3JpIHNhaWQgQmFzcmlzIGNvbmNlcm4gaGlnaGxpZ2h0cyB0aGUgdGFzayBmYWNpbmcgRzIwIGZpbmFuY2UgY2hpZWZzIGFzIHRoZXkgYXR0ZW1wdCB0byBsaWZ0IGNvbGxlY3RpdmUgZWNvbm9taWMgZ3Jvd3RoIGJ5IGFuIGFkZGl0aW9uYWwgMiBwZXJjZW50IG9yIG1vcmUgb3ZlciBmaXZlIHllYXJzIE9mZmljaWFscyBhZ3JlZWQgbW9uZXRhcnkgcG9saWN5IHNob3VsZCBjb250aW51ZSB0byBzdXBwb3J0IHRoZSByZWNvdmVyeSBhbmQgcGFydGljdWxhcmx5IGFkZHJlc3MgZGVmbGF0aW9uYXJ5IHByZXNzdXJlcyB3aGVyZSBldmlkZW50IEF1c3RyYWxpYW4gVHJlYXN1cmVyIEpvZSBIb2NrZXkgc2FpZCBpbiBDYWlybnMgQmlnZ2VzdCBDaGFsbGVuZ2UgVGhlIHByb3NwZWN0IG9mIGhpZ2hlciByYXRlcyBpbiB0aGUgVVMgaXMgdGhlIHNpbmdsZSBiaWdnZXN0IGNoYWxsZW5nZSBmYWNpbmcgSW5kb25lc2lhcyBuZXcgZ292ZXJubWVudCBCYXNyaSBzYWlkIEluZG9uZXNpYXMgUHJlc2lkZW50ZWxlY3QgSm9rbyBXaWRvZG8gIGtub3duIGFzIEpva293aSAgd2lsbCBpbmhlcml0IGFuIGVjb25vbXkgZ3Jvd2luZyBhdCB0aGUgc2xvd2VzdCBzaW5jZSAyMDA5IGFuZCBhIHBlcnNpc3RlbnQgY3VycmVudGFjY291bnQgZ2FwIHRoYXQgaXMgd2VpZ2hpbmcgb24gdGhlIHJ1cGlhaCBCYXNyaSBpcyB0aGUgdG9wIGNhbmRpZGF0ZSB0byBrZWVwIGhpcyBmaW5hbmNlIGpvYiB1bmRlciBKb2tvd2kgd2hvIHRha2VzIG9mZmljZSBuZXh0IG1vbnRoIGFjY29yZGluZyB0byBhIEJsb29tYmVyZyBzdXJ2ZXkgb2YgMTEgSW5kb25lc2lhbiBhbmFseXN0cyBhbmQgYWNhZGVtaWNzIEJhc3JpIGhhcyBjYWxsZWQgZm9yIHRoZSBpbmNvbWluZyBnb3Zlcm5tZW50IHRvIGZvY3VzIG9uIG5hcnJvd2luZyB0aGUgYnVkZ2V0IGRlZmljaXQgcmFpc2luZyBmdWVsIHByaWNlcyBhbmQgbHVyaW5nIGZvcmVpZ24gaW52ZXN0bWVudCBJbiBJbmRvbmVzaWEgd2hlcmUgdGhlIGtleSByYXRlIGlzIGF0IDc1IHBlcmNlbnQgcG9saWN5IG1ha2VycyBtYXkgaGF2ZSB0byBob2xkIGZpcm0gdG8gcHJldmVudCBmdW5kcyBmcm9tIGZsb3dpbmcgb3V0IG9mIHRoZSBjb3VudHJ5IEJhc3JpIHNhaWQgTWF5YmUgdGhlIHRpZ2h0ZW5pbmcgY3ljbGUgd2lsbCBjb250aW51ZSBmcm9tIGJvdGggdGhlIGZpc2NhbCBhbmQgdGhlIG1vbmV0YXJ5IHNpZGUgaGUgc2FpZCBTdWNoIGEgc3RlcCBpcyBub3QgcmVhbGx5IGNvbmR1Y2l2ZSB0byBwcm9tb3RpbmcgZWNvbm9taWMgZ3Jvd3RoIEJhc3JpIHNhaWQgVG8gbWl0aWdhdGUgdGhlIHJpc2sgb2YgbG9zaW5nIGZ1bmRzIHRvIHRoZSBVUyBJbmRvbmVzaWEgYWxzbyBuZWVkcyB0byBkaXZlcnNpZnkgaXRzIGJhc2Ugb2YgaW52ZXN0b3JzIHRoZSBmaW5hbmNlIG1pbmlzdGVyIHNhaWQgUmVseWluZyBtb3JlIG9uIGRvbWVzdGljIGJvbmQgYnV5ZXJzIHdvdWxkIGhlbHAgaGUgc2FpZCBJZiBnbG9iYWwgbGlxdWlkaXR5IGJlY29tZXMgdGlnaHRlciBiZWNhdXNlIG9mIHRoaXMgdGlnaHRlbmluZyBwb2xpY3kgYXQgdGhlIEZlZCBpdCB3aWxsIGJlIG1vcmUgZGlmZmljdWx0IGZvciBhIGNvdW50cnkgbGlrZSBJbmRvbmVzaWEgdG8gZ2V0IGZvcmVpZ24gZmluYW5jaW5nIGhlIHNhaWR0AARyb3dzdXEAfgAKAAAAAXQAATV0AAVzdGFydHVxAH4ACgAAAAF0AAEwdAACZmx1cQB+AAoAAAABdABvYXJ0aWNsZUlkLHRpdGxlLGNvbnRlbnQsZGF0ZSxzdG9ja0hpc3RvcnlJZCxzeW1ib2wsaGlzdG9yeURhdGUsb3BlbixoaWdoLGxvdyxjbG9zZSxhZGpDbG9zZSx2b2x1bWUsaWQsX3ZlcnNpb25fdAACZnF1cQB+AAoAAAABdAA6aGlzdG9yeURhdGU6WzIwMTMtMTItMDNUMDA6MDA6MDBaIFRPIDIwMTQtMDctMTBUNTk6NTk6NTlaXXgAcA==</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDgxMDE=</field><field name="title" class="java.lang.String">rO0ABXQALkludmVzdG9ycyBFYWdlciB0byBIZWFyIFllbGxlbiBEaXNjdXNzIFdlYXRoZXI=</field><field name="content" class="java.lang.String">rO0ABXQWe1llbGxlbiB3aWxsIHNwZWFrIHRvIHRoZSBTZW5hdGUgcGFuZWwgb24gVGh1cnNkYXksIHdoZW4gc2hlIHdpbGwgZ2l2ZSB0aGUgc2Vjb25kIHBhcnQgb2YgaGVyIGNvbW1lbnRzIG9uIG1vbmV0YXJ5IHBvbGljeS4gU2hlIGhhZCBhbHJlYWR5IHJlYXNzdXJlZCBXYWxsIFN0cmVldCB3aXRoIGhlciB0ZXN0aW1vbnkgb24gRmViLiAxMSB0byB0aGUgSG91c2UgRmluYW5jaWFsIFNlcnZpY2VzIENvbW1pdHRlZSB0aGF0IHRoZSBGZWQgd291bGQgbm90IG1ha2UgYW55IGNoYW5nZXMgdG8gaXRzIHNjaGVkdWxlIGZvciB0cmltbWluZyBpdHMgc3RpbXVsdXMuIEhlciBpbml0aWFsIGFwcGVhcmFuY2UgYmVmb3JlIHRoZSBTZW5hdGUgQmFua2luZyBDb21taXR0ZWUgaGFkIGJlZW4gc2V0IGZvciBGZWIuIDEzLCB3aGVuIFdhc2hpbmd0b24sIEQuQy4sIHdhcyB3YWxsb3BlZCB3aXRoIHRoZSBoZWF2aWVzdCBzbm93ZmFsbCBvZiB0aGUgc2Vhc29uIGFuZCB0aGUgaGVhcmluZyBoYWQgdG8gYmUgcG9zdHBvbmVkLiBTbm93c3Rvcm1zIGFuZCBpY2UgaGF2ZSByZXBlYXRlZGx5IHNsb3dlZCB0cmF2ZWwgYW5kIGNvbW1lcmNlIHRoaXMgd2ludGVyIGluIHRoZSBOb3J0aGVhc3QsIHRoZSBTb3V0aCBhbmQgdGhlIE1pZHdlc3QsIHdpdGggdGhlIGltcGFjdCByaXBwbGluZyB0aHJvdWdoIHJlY2VudCBlY29ub21pYyBkYXRhIGFuZCBjb21wYW5pZXMnIGZpcnN0LXF1YXJ0ZXIgcHJvZml0IHdhcm5pbmdzLiBZZWxlbmEgU2h1bHlhdHlldmEsIGFuIGVjb25vbWlzdCBhdCBCTlAgUGFyaWJhcyBpbiBOZXcgWW9yaywgc2FpZCBpbnZlc3RvcnMgYW5kIGVjb25vbWlzdHMgd2lsbCBwYXkgYXR0ZW50aW9uIHRvIFllbGxlbidzIGFuc3dlcnMgb24gInF1ZXN0aW9ucyBhYm91dCB0aGUgd2VhdGhlciwgaG93IG11Y2ggZG9lcyBzaGUgdGhpbmsgdGhlIHdlYXRoZXIgaXMgaW1wYWN0aW5nIGVjb25vbWljIGFjdGl2aXR5IGFuZCBob3cgbXVjaCB3aWxsICh0aGUgRmVkKSBwYXkgYXR0ZW50aW9uIHRvIHRoYXQuIiBNYXJrZXQgcGFydGljaXBhbnRzIHdpbGwgYWxzbyBtb25pdG9yIFllbGxlbidzIHN0YXRlbWVudHMgb24gVGh1cnNkYXkgZm9yIGFueSBzaWducyByZWdhcmRpbmcgdGhlIFUuUy4gY2VudHJhbCBiYW5rJ3MgcGxhbnMgYXMgaXQgdGFwZXJzIGl0cyBzdGltdWx1cyBtZWFzdXJlcy4gQXMgdGhlIFUuUy4gdW5lbXBsb3ltZW50IHJhdGUgbmVhcnMgdGhlIEZlZCdzIDYuNSBwZXJjZW50IHRhcmdldCwgdGhlIGRlYmF0ZSBoYXMgZ3Jvd24gb3ZlciB3aGV0aGVyIGludGVyZXN0IHJhdGVzIHNob3VsZCBiZSByYWlzZWQuIEphbWVzIEJ1bGxhcmQsIHByZXNpZGVudCBvZiB0aGUgRmVkZXJhbCBSZXNlcnZlIEJhbmsgb2YgU3QuIExvdWlzLCBzYWlkIG9uIEZyaWRheSB0aGF0IHRoZSBVLlMuIGVjb25vbXkgaXMgaGVhZGVkIGZvciBhIGdvb2QgeWVhciBvZiBncm93dGguIEhlIGFkZGVkIHRoYXQgaGUgZXhwZWN0cyB0aGUgY2VudHJhbCBiYW5rIHRvIGtlZXAgdHJpbW1pbmcgaXRzIG1hc3NpdmUgYm9uZC1idXlpbmcgc3RpbXVsdXMuIFRoZSBHcm91cCBvZiAyMCBjZW50cmFsIGJhbmtlcnMgYW5kIGZpbmFuY2UgbWluaXN0ZXJzLCBpbiB0aGVpciB0d28tZGF5IG1lZXRpbmcgb3ZlciB0aGUgd2Vla2VuZCwgYWNrbm93bGVkZ2VkIHRoZSBjb25jZXJucyBvZiBlbWVyZ2luZyBuYXRpb25zIHRoYXQgdGhlIEZlZGVyYWwgUmVzZXJ2ZSBzaG91bGQgY29uc2lkZXIgdGhlIGltcGFjdCBvZiB0YXBlcmluZyBpdHMgYm9uZCBwdXJjaGFzZXMsIHdoaWNoIGhhcyBsZWQgdG8gY2FwaXRhbCBmbGlnaHQgZnJvbSBzb21lIG9mIHRoZSBtb3JlIHZ1bG5lcmFibGUgbWFya2V0cy4gQXVzdHJhbGlhbiBUcmVhc3VyZXIgSm9lIEhvY2tleSwgd2hvIGhvc3RlZCB0aGUgbWVldGluZywgc2FpZCBZZWxsZW4sIGluIGhlciBmaXJzdCBHMjAgbWVldGluZyBzaW5jZSBiZWNvbWluZyB0aGUgRmVkJ3MgY2hhaXIsIHdhcyAiaHVnZWx5IGltcHJlc3NpdmUiIGluIGRlYWxpbmcgd2l0aCBtZW1iZXJzIGFib3V0IHRoZSBpbXBhY3Qgb2YgdGhlIFUuUy4gY2VudHJhbCBiYW5rJ3MgdGFwZXJpbmcgb2YgaXRzIHN0aW11bHVzLiBBbGwgdG9sZCwgdGhlIFUuUy4gc3RvY2sgbWFya2V0IGNvdWxkIGJlIHJvaWxlZCBhZ2FpbiBieSBwb2xpdGljYWwgdHVybW9pbCB0aGlzIHdlZWsgYXMgaW52ZXN0b3JzIG1vbml0b3IgdW5yZXN0IGluIFZlbmV6dWVsYSBhbmQgVWtyYWluZS4gV2hpbGUgdGhvc2UgY291bnRyaWVzIHJlcHJlc2VudCBhIHNtYWxsIHBvcnRpb24gb2YgdGhlIGdsb2JhbCBlY29ub215LCBmdXJ0aGVyIGRldGVyaW9yYXRpb24gY291bGQgZGVudCBzZW50aW1lbnQuIMKgIFMmUCA1MDAgRkFDRVMgUkVTSVNUQU5DRSBBVCAxLDg1MCBTdG9ja3MgbWF5IGZpbmQgdG91Z2hlciBzbGVkZGluZyBpbiB0aGUgd2VlayBhaGVhZCBhcyBpbnZlc3RvcnMgbWF5IGJlIHVud2lsbGluZyB0byBwdXNoIHRoZSBTdGFuZGFyZCAmIFBvb3IncyA1MDAgSW5kZXggdG8gYSByZWNvcmQgcGFzdCB0aGUgYWxsLXRpbWUgaW50cmFkYXkgaGlnaCBvZiAxLDg1MC44NCBzZXQgb24gSmFuLiAxNS4gVGhhdCBsZXZlbCBoYXMgc2VydmVkIGFzIHJlc2lzdGFuY2UgaW4gcmVjZW50IHNlc3Npb25zLiBPdmVyIHRoZSBwYXN0IHRocmVlIHdlZWtzLCB0aGUgUyZQIDUwMCBjbGltYmVkIDMgcGVyY2VudCB3aGlsZSBpbnZlc3RvcnMgbGFyZ2VseSBmb3JnYXZlIGEgZmx1cnJ5IG9mIHNvZnQgZWNvbm9taWMgZGF0YSBibGFtZWQgb24gdGhlIGhhcnNoIHdpbnRlci4gV2l0aCB0aGUgVS5TLiBzdG9jayBtYXJrZXQncyBzbGlnaHQgZG93bnR1cm4gb24gRnJpZGF5LCB0aGUgUyZQIDUwMCBicm9rZSBhIHR3by13ZWVrIHJhbGx5IGFmdGVyIGZsaXJ0aW5nIHdpdGggaXRzIHJlY29yZCBoaWdocyByZWFjaGVkIGxhc3QgbW9udGguICIxLDg1MCBzZWVtcyB0byBiZSBhIGxldmVsIHdoZXJlIGVub3VnaCBuYXR1cmFsIHNlbGxpbmcgY29tZXMgb3V0IGFuZCBpdCBkb2Vzbid0IGhhdmUgdGhlICdvb21waCcgdG8gdGFrZSBpdCB1cCBhbmQgdGhyb3VnaCwgYW5kIGV2ZXJ5IHRpbWUgdGhhdCBoYXBwZW5zLCBpdCBzZWVtcyB0byBiYWNrIG9mZiBhIGxpdHRsZSBiaXQsIiBzYWlkIEtlbiBQb2xjYXJpLCBkaXJlY3RvciBvZiB0aGUgTllTRSBmbG9vciBkaXZpc2lvbiBhdCBPJ05laWwgU2VjdXJpdGllcyBpbiBOZXcgWW9yay4gIklmIHRoZSBtYXJrZXQgYnJlYWtzIGRvd24sIChpbnZlc3RvcnMpIGFyZSBoYXBweSB0byBqdW1wIGluIGFuZCBzdXBwb3J0LiBCdXQgaWYgdGhlIG1hcmtldCB0cmllcyB0byBicmVhayBvdXQsIHRoZXJlIGFyZSBwbGVudHkgb2YgcGVvcGxlIHdpbGxpbmcgdG8gdGFrZSBhIGxpdHRsZSBvZmYgdGhlIHRhYmxlIGJlY2F1c2UgdGhleSBhcmUgc3RpbGwgbG9va2luZyBmb3IgdGhlIG1hcmtldCBvdmVyIHRoZSBuZXh0IGNvdXBsZSBvZiBtb250aHMgdG8gYmUgdm9sYXRpbGUgdG8gdGhlIGRvd25zaWRlLiIgT25lIHBvdGVudGlhbCBodXJkbGUgdG8gY29udGludWVkIGdhaW5zIHdpbGwgY29tZSBvbiBGcmlkYXksIHRoZSBkYXkgYWZ0ZXIgWWVsbGVuJ3MgdGVzdGltb255LCB3aXRoIGEgcHJlbGltaW5hcnkgcmVhZGluZyBvbiBncm9zcyBkb21lc3RpYyBwcm9kdWN0IGZvciB0aGUgZmluYWwgdGhyZWUgbW9udGhzIG9mIDIwMTMuIFRoZSBkYXRhIGlzIGV4cGVjdGVkIHRvIHNob3cgVS5TLiBlY29ub21pYyBncm93dGggYXQgYW4gYW5udWFsaXplZCByYXRlIG9mIDIuNSBwZXJjZW50IGluIHRoZSBmb3VydGggcXVhcnRlciwgZG93biBmcm9tIGEgcHJldmlvdXMgcmVhZGluZyBvZiAzLjIgcGVyY2VudC4gIlRoZSBHRFAgcmV2aXNpb25zLCB0aGF0IHdpbGwgYmUgYmlnLCIgc2FpZCBKZWZmcmV5IENsZXZlbGFuZCwgY2hpZWYgZWNvbm9taXN0IGF0IFBheWRlbiAmIFJ5Z2VsIGluIExvcyBBbmdlbGVzLiAiWW91IGNvdWxkIGFyZ3VlIHRoYXQgc29tZSBvZiB0aGF0IGlzIHByaWNlZCBpbiwgb3IgYSBsb3Qgb2YgaXQgaXMgcHJpY2VkIGluLCBidXQgdGhlIHN0aWNrZXIgc2hvY2sgd2lsbCBiZSBpbnRlcmVzdGluZywgZXNwZWNpYWxseSBnaXZlbiAodGhhdCkgdGhlIGZpcnN0IHF1YXJ0ZXIgaXMgdHJhY2tpbmcgYmVsb3cgdGhlIGZvdXJ0aCBxdWFydGVyLiIgVEhFIENPTlNVTUVSIENPTkZJREVOQ0UgR0FNRSBUaGlzIHdlZWsncyBlY29ub21pYyBjYWxlbmRhciBpbmNsdWRlcyBjb25zdW1lciBjb25maWRlbmNlLCBuZXcgaG9tZSBzYWxlcyBhbmQgc2V2ZXJhbCBvdGhlciByZXBvcnRzIG9uIHRoZSBob3VzaW5nIG1hcmtldCwgZHVyYWJsZSBnb29kcyBvcmRlcnMsIGFzIHdlbGwgYXMgdGhlIHByZWxpbWluYXJ5IEdEUCBkYXRhIGFuZCB0aGUgZmluYWwgRmVicnVhcnkgcmVhZGluZyBvbiBjb25zdW1lciBzZW50aW1lbnQgZnJvbSBUaG9tc29uIFJldXRlcnMgYW5kIHRoZSBVbml2ZXJzaXR5IG9mIE1pY2hpZ2FuLiBXaGlsZSB0aGUgaG91c2luZyBkYXRhIGlzIGxpa2VseSB0byBiZSBkaXNjb3VudGVkIGFzIGEgcmVzdWx0IG9mIHRoZSB3ZWF0aGVyLCB0aGUgY29uc3VtZXIgY29uZmlkZW5jZSByZWFkaW5nIG1heSBzdGlsbCBnaXZlIGludmVzdG9ycyBzb21lIGluc2lnaHQgaW50byB3aGV0aGVyIGVjb25vbWljIGdyb3d0aCByZW1haW5zIG9uIHRyYWNrLiAiSWYgeW91IGxvb2sgYXQgY29uc3VtZXIgY29uZmlkZW5jZSwgbG9va2luZyBwYXN0IHRoZSB3ZWF0aGVyIGN5Y2xlIG9mIGluZGljYXRvcnMsIHdlIGZpbmQgdGhlIGVjb25vbWljIG91dGxvb2sgb2YgY29uc3VtZXJzIGhhcyBub3QgY2hhbmdlZCBtYXRlcmlhbGx5IGRlc3BpdGUgYWxsIHRoZSBvdGhlciBpbmRpY2F0b3JzIHRoYXQgbWF5IHN1Z2dlc3Qgb3RoZXJ3aXNlLCIgc2FpZCBBbmFzdGFzaWEgQW1vcm9zbywgZ2xvYmFsIG1hcmtldCBzdHJhdGVnaXN0IGF0IEouUC4gTW9yZ2FuIEZ1bmRzIGluIE5ldyBZb3JrLiAiU28gaWYgY29uc3VtZXIgY29uZmlkZW5jZSBjb21lcyBpbiBhcyB0aGUgcHJlbGltaW5hcnkgcmVhZGluZyBkaWQsIHRoYXQgc3VnZ2VzdHMgdGhlIGVuZC11c2VyIGRlbWFuZCBmb3IgZ29vZHMgYW5kIHNlcnZpY2VzIGRpZCBub3QgZmFsbCBvZmYgYSBjbGlmZiwgYnV0IHJhdGhlciBoYXMgYmVlbiBkZWZlcnJlZCBkdWUgdG8gd2VhdGhlci4iIEVhcm5pbmdzIHNlYXNvbiB3aWxsIGFsc28gd2luZCBkb3duLCB3aXRoIHJldGFpbGVycyBpbiBmb2N1cyBhcyB0aGUgd2VhdGhlciBoYXMgYWRkZWQgdG8gdGhlIHNlY3RvcidzIG1hbnkgb3RoZXIgY2hhbGxlbmdlcy4gUmV0YWlsZXJzIHNldCB0byByZXBvcnQgZWFybmluZ3MgdGhpcyB3ZWVrIGluY2x1ZGUgSG9tZSBEZXBvdCBJbmMsIExvd2UncyBDb21wYW5pZXMgSW5jLCBUYXJnZXQgQ29ycCAsIE1hY3kncyBJbmMsIFRKWCBDb21wYW5pZXMsIEpDIFBlbm5leSBDb21wYW55IEluYywgQmVzdCBCdXkgQ28gSW5jIGFuZCBHYXAgSW5jIC4gVGhvbXNvbiBSZXV0ZXJzIGRhdGEgc2hvd2VkIHRoYXQgb2YgdGhlIDQ0MSBjb21wYW5pZXMgaW4gdGhlIFMmUCA1MDAgdGhhdCBoYWQgcmVwb3J0ZWQgcmVzdWx0cyB0aHJvdWdoIEZyaWRheSwgNjUuMyBwZXJjZW50IGhhZCBwb3N0ZWQgZWFybmluZ3MgYWJvdmUgYW5hbHlzdHMnIGV4cGVjdGF0aW9ucy4gVGhhdCB3YXMgc2xpZ2h0bHkgYmVsb3cgdGhlIDY3IHBlcmNlbnQgcmF0ZSBmb3IgdGhlIHBhc3QgZm91ciBxdWFydGVycywgYnV0IGFib3ZlIHRoZSA2MyBwZXJjZW50IGF2ZXJhZ2Ugc2luY2UgMTk5NC4gwqAgwqA=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAURdVCcAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGI1Yzc0YWM3ZTU5MzM3ZjA=</field><field name="symbol" class="java.lang.String">rO0ABXQABkpDUC5CRQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAURieoMAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAQPXCj1wo9</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAQPXCj1wo9</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAQPXCj1wo9</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAQPXCj1wo9</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAQPXCj1wo9</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDkwMzgzYjRjZWU5ZDZmZjg=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKwPAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDE1Njc=</field><field name="title" class="java.lang.String">rO0ABXQAN1RyZWFzdXJ5IFlpZWxkcyBGYWxsIHRvIDYtTW9udGggTG93OyBFdXJvcGUgRWFzaW5nIFNlZW4=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUX5GfiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDViYTYzN2FlYzA3YjMyM2Q=</field><field name="symbol" class="java.lang.String">rO0ABXQACUNSVC1VTi5UTw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUX+QFSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAm4UeuFHrh</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAm64UeuFHs</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAmrhR64Ueu</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAm0euFHrhS</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlszMzMzMz</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAClPA==</field><field name="id" class="java.lang.String">rO0ABXQAEDFhMzQyYWM1ZTlhNGM2OTQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKSSAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDE2MjQ=</field><field name="title" class="java.lang.String">rO0ABXQAO0NoaW5hJ3MgRGVmbGF0aW5nIFByb3BlcnR5IE1hcmtldCBTZWVuIFJhaXNpbmcgRGVidCBEYW5nZXJz</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUXVDXSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDM4MDRhZmU3ZGYyZjE0YzM=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNIRU4=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUXaM9CAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7vXCj1wo9</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA8FHrhR64U</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5lHrhR64U</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA50euFHrhS</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5aPXCj1wp</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAFZtA==</field><field name="id" class="java.lang.String">rO0ABXQAEDE0ZGU5NGFiNTE0NWRhNTQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKdaAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDgyMDc=</field><field name="title" class="java.lang.String">rO0ABXQAMUNoaW5hJ3MgQ2VudHJhbCBCYW5rIFNpZ25hbHMgTW9yZSBSYXRlIFZvbGF0aWxpdHk=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUQVOx8AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGU4ZDM2MzEzNGNhMWQ5NDE=</field><field name="symbol" class="java.lang.String">rO0ABXQABVNDR0xZ</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUQaYXsAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAoBR64UeuF</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAoFHrhR64U</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAn4UeuFHrh</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAn9cKPXCj2</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAnYUeuFHrh</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAXQrA==</field><field name="id" class="java.lang.String">rO0ABXQAEDZiNjE3YTdhNGFmMzg2ODk=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mK0WAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDc1MTk=</field><field name="title" class="java.lang.String">rO0ABXQARUJldHMgU3RheSBvbiBDaGluYSB0byBCYWxhbmNlIFJlZm9ybSBhbmQgR3Jvd3RoIERlc3BpdGUgTWFya2V0IEZyaWdodA==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUPXbs8AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGZlZGVlNjZhNmQ0ZjliYTY=</field><field name="symbol" class="java.lang.String">rO0ABXQABFJBSUw=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUPclSsAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3yj1wo9cK</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4NcKPXCj2</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3JmZmZmZm</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3TMzMzMzN</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3BR64UeuF</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAADW2A==</field><field name="id" class="java.lang.String">rO0ABXQAEDc0MGQ4MTZmYWU2Yjg4ZGM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHY0AAAA==</field></document></documents><date>2015-05-07T12:18:25-0500</date></cacheEntry>
<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4haaGFuZyBYaXVsaSBzYXlzIHNoZSBrbm93cyBub3RoaW5nIGFib3V0IHRoZSBuaW5lIENoaW5lc2UgY29tcGFuaWVzIHRoYXQgaGVsZCBpbml0aWFsIHB1YmxpYyBvZmZlcmluZ3MgbGFzdCBtb250aCBOb3QgYSBwcm9ibGVtIFpoYW5nIDM3IHRyaWVkIHRvIGJ1eSBzaGFyZXMgaW4gZWFjaCBhbmQgZXZlcnkgb25lIGNvbmZpZGVudCB0aGF0IHNoZSBrbmV3IHdoYXQgd2FzIGNvbWluZyBuZXh0IGFuIGltbWVkaWF0ZSBzdXJnZSBpbiBwcmljZSB0aGF0IGhhcyByZXdhcmRlZCBpbnZlc3RvcnMgaW4gQ2hpbmVzZSBJUE9zIHdpdGggYW4gYXZlcmFnZSBmaXJzdGRheSBnYWluIG9mIDQzIHBlcmNlbnQgdGhpcyB5ZWFyIEhlciBvcmRlcnMgd2VyZSBhbW9uZyA2NTUgYmlsbGlvbiB5dWFuIDEwNiBiaWxsaW9uIG9mIGJpZHMgZm9yIDMyIGJpbGxpb24geXVhbiBvZiBuZXcgc2hhcmVzIGFuIG92ZXJzdWJzY3JpcHRpb24gcmF0ZSAyOCB0aW1lcyBiaWdnZXIgdGhhbiB0aGF0IG9mIEFncmljdWx0dXJhbCBCYW5rIG9mIENoaW5hIEx0ZHMgbGlzdGluZyBhdCB0aGUgaGVpZ2h0IG9mIHRoZSBuYXRpb25zIElQTyBib29tIGluIDIwMTAgTmV3IHN0b2NrcyBoYXZlIHJlZ2FpbmVkIHRoZWlyIHJlcHV0YXRpb24gYXMgY2FudGxvc2UgYmV0cyBpbiBDaGluYSBqdXN0IGZvdXIgeWVhcnMgYWZ0ZXIgdGhhdCBsYXN0IGZyZW56eSBlbmRlZCBiYWRseSAgYSBtYWpvcml0eSBvZiBJUE9zIGluIHRoZSBzZWNvbmQgaGFsZiBvZiAyMDEwIHNhZGRsZWQgaW52ZXN0b3JzIHdpdGggbG9zc2VzIHdpdGhpbiBhIHllYXIgVGhlIHNvYXJpbmcgZGVtYW5kIHNob3dzIGhvdyByZWd1bGF0b3J5IGVmZm9ydHMgdG8gZW5zdXJlIGRlYWxzIGFyZW50IG92ZXJ2YWx1ZWQgaGF2ZSBsZWQgc3BlY3VsYXRvcnMgdG8gcmFtcCB1cCBiZXRzIHdpdGggYm9ycm93ZWQgbW9uZXkgYW5kIGh1cnQgcGxhbnMgdG8gbGV0IHRoZSBtYXJrZXQgcmF0aGVyIHRoYW4gdGhlIGdvdmVybm1lbnQgc2V0IHByaWNlcyBpbiB0aGUgYmlnZ2VzdCBlbWVyZ2luZyBlY29ub215IHNhaWQgRGluZyBZdWFuIG9mIHRoZSBDaGluYSBFdXJvcGUgSW50ZXJuYXRpb25hbCBCdXNpbmVzcyBTY2hvb2wgVGhlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIGRlbWFuZCBhbmQgc3VwcGx5IGlzIGRpc3RvcnRlZCBEaW5nIGFuIGFjY291bnRpbmcgcHJvZmVzc29yIGF0IENFSUJTIGluIFNoYW5naGFpIHNhaWQgYnkgcGhvbmUgRnVuZGFtZW50YWwgYW5hbHlzaXMgaXMgbWVhbmluZ2xlc3MgYmVjYXVzZSBwcmljZXMgYXJlIGtlcHQgbG93IFRoZSBJUE9zIHVuZGVybGluZSB0aGUgY2hhbGxlbmdlcyBmYWNpbmcgQ2hpbmFzIHJ1bGluZyBDb21tdW5pc3QgUGFydHkgYWZ0ZXIgUHJlc2lkZW50IFhpIEppbnBpbmcgcGxlZGdlZCBpbiBOb3ZlbWJlciB0byBnaXZlIG1hcmtldHMgYSBkZWNpc2l2ZSByb2xlIGluIHRoZSA5IHRyaWxsaW9uIGVjb25vbXkgYXMgcGFydCBvZiB0aGUgbW9zdCBzd2VlcGluZyBzZXQgb2YgcmVmb3JtcyBzaW5jZSB0aGUgMTk5MHMgICAgICAgICAgICAgICAgICAgICAgICAgICAgQWxpYmFiYSBJUE8gQXQgc3Rha2UgaXMgdGhlIGNvdW50cnlzIGFiaWxpdHkgdG8ga2VlcCBob21lZ3Jvd24gY29tcGFuaWVzIHN1Y2ggYXMgQWxpYmFiYSBHcm91cCBIb2xkaW5nIEx0ZCB0aGUgZWNvbW1lcmNlIGNvbXBhbnkgcHJlcGFyaW5nIGEgVVMgbGlzdGluZyBvbiBsb2NhbCBib3Vyc2VzIGFuZCBpbmNyZWFzZSB0aGUgcGFydGljaXBhdGlvbiBvZiBmb3JlaWduIGluc3RpdHV0aW9uYWwgaW52ZXN0b3JzIGluIGEgbWFya2V0IHdoZXJlIGluZGl2aWR1YWxzIGFjY291bnQgZm9yIGFib3V0IDgwIHBlcmNlbnQgb2YgdHJhZGluZyBUaGUgQ2hpbmEgU2VjdXJpdGllcyBSZWd1bGF0b3J5IENvbW1pc3Npb24gZGlkbnQgcmVzcG9uZCB0byBhIGZheGVkIHJlcXVlc3QgZm9yIGNvbW1lbnQgVGhlIHBlcmNlcHRpb24gdGhhdCBJUE9zIGFyZSByaXNrbGVzcyBoYXMgZW5jb3VyYWdlZCBzb21lIGludmVzdG9ycyB0byB1c2UgYm9ycm93ZWQgbW9uZXkgZXhwb3NpbmcgdGhlbSB0byBkZWVwZXIgbG9zc2VzIG9uY2UgcHJpY2VzIHN0b3AgY2xpbWJpbmcgYWNjb3JkaW5nIHRvIExpbiBKaW4gYSBzZW5pb3IgYW5hbHlzdCBhdCBTaGVueWluICBXYW5ndW8gU2VjdXJpdGllcyBDbyBpbiBTaGFuZ2hhaSBDaGluYXMgYmVuY2htYXJrIG1vbmV5bWFya2V0IHJhdGUgcm9zZSB0aGUgbW9zdCBpbiB0aHJlZSB3ZWVrcyBvbiBKdWx5IDIzIGFzIG9yZGVycyBmb3IgZml2ZSBJUE9zIHNwdXJyZWQgYW4gaW5jcmVhc2UgaW4gZGVtYW5kIGZvciBib3Jyb3dlZCBmdW5kcyBUaGUgY2VudHJhbCBiYW5rIHNhaWQgeWVzdGVyZGF5IHRoYXQgdGhlIGRlYWxzIGhlbHBlZCBmdWVsIGEgcmVjb3JkIGRyb3AgaW4gbG9jYWxjdXJyZW5jeSBiYW5rIGRlcG9zaXRzIGxhc3QgbW9udGggYXMgY3VzdG9tZXJzIHNoaWZ0ZWQgZnVuZHMgdG8gdGhlaXIgYnJva2VyYWdlIGFjY291bnRzICAgICAgICAgICAgICAgICAgICAgICAgICAgQmlnZ2VzdCBSaXNrIFRoZSBtYWluIHJpc2sgaXMgd2hldGhlciBib3Jyb3dpbmcgY29zdHMgY2FuIGJlIGNvdmVyZWQgTGluIHNhaWQgQXMgbmV3IHNoYXJlIHNhbGVzIGJlY29tZSB0aGUgbm9ybSB0aGUgZWZmZWN0IHdpbGwgdGFwZXIgb2ZmIGFuZCByZXR1cm5zIHdpbGwgZGVjcmVhc2UgSW52ZXN0b3JzIHJ1c2ggaW50byBDaGluZXNlIElQT3Mgd2hpY2ggaGF2ZSByYWxsaWVkIGFuIGF2ZXJhZ2UgOTQgcGVyY2VudCBmcm9tIHRoZWlyIGlzc3VlIHByaWNlIHRoaXMgeWVhciBvciBzZXZlbiB0aW1lcyBtb3JlIHRoYW4gdGhlIGdsb2JhbCBhdmVyYWdlIGNvbnRyYXN0cyB3aXRoIGxhY2tsdXN0ZXIgZGVtYW5kIGFtb25nIGxvY2FsIGludmVzdG9ycyB0byBwYXJ0aWNpcGF0ZSBpbiB0aGUgYnJvYWRlciBzdG9jayBtYXJrZXQgVHJhZGVycyBoYXZlIGxpcXVpZGF0ZWQgYWJvdXQgMTMgbWlsbGlvbiBtYWlubGFuZCBlcXVpdHkgYWNjb3VudHMgc2luY2UgdGhlIGVuZCBvZiBNYXJjaCBsZWF2aW5nIHRoZSBudW1iZXIgb2YgZnVuZGVkIGFjY291bnRzIGF0IGEgZm91cnllYXIgbG93IG9mIDUyNTUgbWlsbGlvbiBUaGUgYmVuY2htYXJrIFNoYW5naGFpIENvbXBvc2l0ZSBJbmRleCBoYXMgZ2FpbmVkIGFib3V0IDUgcGVyY2VudCB0aGlzIHllYXIgdmVyc3VzIGEgNjggcGVyY2VudCBpbmNyZWFzZSBpbiB0aGUgTVNDSSBFbWVyZ2luZyBNYXJrZXRzIEluZGV4IFRoZSBtYWlubGFuZCBnYXVnZSBoYXMgZHJvcHBlZCAyOSBwZXJjZW50IGR1cmluZyB0aGUgcGFzdCBmaXZlIHllYXJzIGNvbXBhcmVkIHdpdGggYSAyNSBwZXJjZW50IGFkdmFuY2UgZm9yIHRoZSBNU0NJIG1lYXN1cmUgQWxsIG5pbmUgY29tcGFuaWVzIHRoYXQgaGFkIElQT3MgbGFzdCBtb250aCBzb2xkIHNoYXJlcyBhdCBwcmljZXRvZWFybmluZ3MgcmF0aW9zIGJlbG93IHRoZSBpbmR1c3RyeSBhdmVyYWdlIGFjY29yZGluZyB0byBkYXRhIGNvbXBpbGVkIGJ5IEJsb29tYmVyZyBUaGUgcmVndWxhdG9yIHJlcXVpcmVzIGFueSBmaXJtIHByaWNpbmcgc3RvY2sgYXQgbGV2ZWxzIGFib3ZlIHRoZWlyIHBlZXJzIHRvIHBvc3Rwb25lIHRoZSBvZmZlcmluZyBieSB0aHJlZSB3ZWVrcyBhbmQgaXNzdWUgcmlzayB3YXJuaW5ncyB0byBpbnZlc3RvcnMgICAgICAgICAgICAgICAgICAgICAgICAgICAgRGFpbHkgTGltaXQgR3Vhbmdkb25nIFRhaWNoZW5nIFBoYXJtYWNldXRpY2FsIENvIGEgdHJhZGl0aW9uYWwgQ2hpbmVzZSBtZWRpY2luZSBjb21wYW55IGJhc2VkIGluIHRoZSBzb3V0aGVybiBwcm92aW5jZSBvZiB0aGUgc2FtZSBuYW1lIGF0dHJhY3RlZCBiaWRzIHdvcnRoIDMzNyB0aW1lcyB0aGUgMzUwIG1pbGxpb24geXVhbiBvZiBzaGFyZXMgZm9yIHNhbGUgYWZ0ZXIgcHJpY2luZyB0aGUgSVBPIGF0IDE3NSB0aW1lcyBlYXJuaW5ncyBhYm91dCBoYWxmIHRoZSBhdmVyYWdlIGxldmVsIG9mIGxpc3RlZCByaXZhbHMgVGhlIHN0b2NrIGhhcyBtb3JlIHRoYW4gZG91YmxlZCBzaW5jZSBpdCBiZWdhbiB0cmFkaW5nIEp1bHkgMzEgVGhlIENoaW5lc2UgbWFya2V0IGlzIGFib3V0IHNwZWN1bGF0aW9uIHNhaWQgVGVuZyBCaW5nc2hlbmcgYXNzb2NpYXRlIGRlYW4gYXQgdGhlIENoZXVuZyBLb25nIEdyYWR1YXRlIFNjaG9vbCBvZiBCdXNpbmVzcyBpbiBCZWlqaW5nIFRoYXRzIHdoeSB2ZXJ5IHNtYWxsIGNvbXBhbmllcyBjYW4gYmUgcHVzaGVkIHVwIGV2ZW4gd2l0aCBzbWFsbCBhbW91bnRzIG9mIG1vbmV5IFR3byBtb3JlIENoaW5lc2UgSVBPcyBzdGFydCB0YWtpbmcgb3JkZXJzIHRoaXMgd2VlayBDaGFuZ2JhaSBNb3VudGFpbiBUb3VyaXNtIENvIHBsYW5zIHRvIHJhaXNlIDMwMjcgbWlsbGlvbiB5dWFuIHdoaWxlIEt1YWlqaXNoYW4gU2hhb3hpbmcgUmljZSBXaW5lIENvIGlzIG9mZmVyaW5nIDQ0MyBtaWxsaW9uIHl1YW4gb2Ygc2hhcmVzIFRoZSBDU1JDIGhhcyBzYWlkIGl0cyBwcmVwYXJpbmcgdG8gbW92ZSB0b3dhcmQgYW4gQW1lcmljYW5zdHlsZSBJUE8gcmVnaXN0cmF0aW9uIHN5c3RlbSBhbmQgbWF5IGFubm91bmNlIGEgcGxhbiBieSB0aGUgZW5kIG9mIHRoZSB5ZWFyIFRoZSBuZXcgZnJhbWV3b3JrIHdvdWxkIGVuc3VyZSBpc3N1ZXJzIG1lZXQgZGlzY2xvc3VyZSByZXF1aXJlbWVudHMgbGVhdmluZyBpbnZlc3RvcnMgdG8ganVkZ2UgaWYgY29tcGFuaWVzIGFyZSBmYWlybHkgcHJpY2VkICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5ld2F5IFZhbHZlIExpbmcgSmlvbmcgYSAzMnllYXJvbGQgaGVhbHRoY2FyZSBpbmR1c3RyeSB3b3JrZXIgaW4gU2hhbmdoYWkgbWFrZXMgc3VyZSB0byByZWFkIHRocm91Z2ggSVBPIHByb3NwZWN0dXNlcyBhbmQgYW5hbHl6ZSBjb21wYW55IGZ1bmRhbWVudGFscyBiZWZvcmUgYmlkZGluZyBTaGUgc3RpbGwgc2F5cyBpbnZlc3RvcnMgc2hvdWxkIHNlbGwgd2l0aGluIHRoZSBmaXJzdCBmZXcgZGF5cyBvZiB0cmFkaW5nIElmIEkgYW0gbHVja3kgdG8gd2luIElQTyBzaHQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0xMi0wM1QwMDowMDowMFogVE8gMjAxNC0wNy0xMFQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDQzMjM=</field><field name="title" class="java.lang.String">rO0ABXQAQEJ1cm5lZCBieSBCaXRjb2luIGFuZCBQcm9wZXJ0eSwgQ2hpbmVzZSBTcGVjdWxhdG9ycyBFbWJyYWNlIElQT3M=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbB8fyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDMwNDI1NGE0NTZjMzM3YjE=</field><field name="symbol" class="java.lang.String">rO0ABXQABE5JTkU=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbHGFiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/71wo9cKPX</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/71wo9cKPX</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/71wo9cKPX</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/71wo9cKPX</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/6uFHrhR64</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDI2YzVlMGMyODRiOTAyYTY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFCiAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDE1NzU=</field><field name="title" class="java.lang.String">rO0ABXQAPEdvbGRtYW4gdG8gQ2l0aWdyb3VwIE1pc3MgV29ybGQncyBXb3JzdCBSb3V0IGluIENoaW5hIFN0b2Nrcw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUX5GfiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGNhOTkwYmM2MzM0NWM1ZTE=</field><field name="symbol" class="java.lang.String">rO0ABXQABUhTTkdZ</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUX+QFSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwTMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwTMzMzMzN</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwK4UeuFHs</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwK4UeuFHs</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAvAAAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAuGA==</field><field name="id" class="java.lang.String">rO0ABXQAEDk2OTVmMGNmNjc1MDk2Yjk=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mM5oAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDU3NzM=</field><field name="title" class="java.lang.String">rO0ABXQAOUJvbmRzIFR1bWJsZSBXaXRoIFN0b2NrcyBhcyBZZWxsZW4gT3V0bGluZXMgU3RpbXVsdXMgRXhpdA==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUTYtdiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDhhNzlkZWYyMDVmNTAxZjA=</field><field name="symbol" class="java.lang.String">rO0ABXQABUJBTVhG</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUTd3DSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBeHrhR64Uf</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBeKZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBeDhR64Ueu</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBeDhR64Ueu</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBdLCj1wo9c</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAADhA==</field><field name="id" class="java.lang.String">rO0ABXQAEDYwYTM1Nzg0ZGViY2E3ZmQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHgDAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM5NzY=</field><field name="title" class="java.lang.String">rO0ABXQAPldhc2hpbmd0b24sIFJlZ3VsYXRvcnMgU2hydWcgYXQgQWxpYmFiYSdzIFBsYW4gZm9yIE1hc3NpdmUgSVBP</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcepHSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDA3MjRkOGEzODdhYzY5Y2Y=</field><field name="symbol" class="java.lang.String">rO0ABXQABFBFUlk=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcjytCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxKPXCj1wp</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxUeuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxD1wo9cKP</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxTMzMzMzN</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxTMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAF6hA==</field><field name="id" class="java.lang.String">rO0ABXQAEGVlMDVmOTQ5N2ViNWY4OWU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE6aAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDU2NzU=</field><field name="title" class="java.lang.String">rO0ABXQAL0F1dGhvciBNaWNoYWVsIExld2lzOiBVUyBTdG9jayBNYXJrZXQgSXMgUmlnZ2Vk</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUURW8yAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDE3OWM0OWVkNzM5NWQ1ODM=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNDSFc=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUUWgiiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7bhR64Ueu</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7fXCj1wo9</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7JmZmZmZm</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7VHrhR64U</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7Fwo9cKPX</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAG2w3A==</field><field name="id" class="java.lang.String">rO0ABXQAEDFjMzJjZmY3NTJmMTdlZDg=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFqNAAAA==</field></document></documents><date>2015-05-07T12:29:01-0500</date></cacheEntry>
<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0BlZTbyBjYW4gVVMgY29tcGFuaWVzIGNvbnRpbnVlIHRvIHByb3NwZXIgIHdoaWxlIG92ZXJzZWFzIGVjb25vbWllcyBzdHJ1Z2dsZSBTZXRoIE1hc3RlcnMgY2hpZWYgaW52ZXN0bWVudCAgb2ZmaWNlciBhdCBBbGxpYW5jZUJlcm5zdGVpbiBhc2tzIGluIGEgY29tbWVudGFyeSBUaGUgYW5zd2VyIGNvdWxkIGJlIHllcyBoZSB3cml0ZXMgVGhlICBVUyBpcyBzdGlsbCBpbiB0aGUgZWFybHkgc3RhZ2VzIG9mIGEgY3ljbGljYWwgZXhwYW5zaW9uIGFuZCB3ZSB0aGluayAgdGhlIG92ZXJhbGwgZ3Jvd3RoIHJhdGUgd2lsbCBiZSBzdXBwb3J0ZWQgYnkga2V5IHRyZW5kcyBhbW9uZyBjb25zdW1lcnMgIGdvdmVybm1lbnRzIGFuZCBjb21wYW5pZXMgQ29uc3VtZXJzIGFuZCBnb3Zlcm5tZW50cyBhdCBhbGwgbGV2ZWxzIGFyZSAgdHJpbW1pbmcgdGhlaXIgZGVidHMgaGUgc2F5cyBNZWFud2hpbGUgY29tcGFuaWVzIGFyZSBnYWluaW5nIG1hcmtldCAgc2hhcmUgZ2xvYmFsbHkgYW5kIFVTIG1hbnVmYWN0dXJpbmcgaXMgbm93IHVuZGVyZ29pbmcgc29tZXRoaW5nIG9mIGEgIHJlbmFpc3NhbmNlIE1hc3RlcnMgc2F5cyBXZSB0aGluayB0aGF0IHRoZXNlIHRyZW5kcyBjb3VsZCBjb250aW51ZSBmb3IgIGEgd2hpbGUgYW5kIHRoYXQgdGhleSBhcmUgcG9zaXRpdmUgZm9yIFVTIHN0b2NraG9sZGVycyBUaGF0IGRvZXNudCAgbWFrZSB0aGUgc3RvY2sgbWFya2V0IGludnVsbmVyYWJsZSBoZSBzYXlzIGJ1dCBkb2VzIHNob3cgaXRzICByZXNpbGllbmN5IEFzIGZvciBmb3JlaWduIHN0b2NrcyBqdXN0IGJlY2F1c2UgdGhlIFVTICBoYXMgb3V0cGVyZm9ybWVkIG1hbnkgb3ZlcnNlYXMgbWFya2V0cyBvdmVyIHRoZSBwYXN0IHR3byB5ZWFycyB0aGF0ICBkb2VzbnQgbGVzc2VuIHRoZSBkaXZlcnNpZmljYXRpb24gYmVuZWZpdCBvZiBpbnZlc3RpbmcgYWJyb2FkIE1hc3RlcnMgIHNheXMgTWVhbndoaWxlIERhbiBDaHVuZyBjaGllZiBpbnZlc3RtZW50IG9mZmljZXIgIGF0IEFsZ2VyIHRoaW5rcyB0aGUgTmFzZGFxIENvbXBvc2l0ZSBpbmRleCB3aWxsIGJyZWFrIHRocm91Z2ggaXRzICBNYXJjaCAyMDAwIHBlYWsgb2YgNTEzMjUyIG5leHQgeWVhciBUaGUgTmFzZGFxIGNsb3NlZCBhdCA0NzA4MTUgVGh1cnNkYXkgODMgcGVyY2VudCBiZWxvdyBpdHMgemVuaXRoIEkgYW0gdmVyeSBjb25maWRlbnQgdGhhdCB0aGUgTmFzZGFxIHdpbGwgIHJlYWNoIG5ldyBoaWdocyBzZW5kaW5nIGEgdmVyeSBwb3NpdGl2ZSBwb3dlcmZ1bCBtZXNzYWdlIHRvICBpbnZlc3RvcnMgQ2h1bmcgdG9sZCBVU0EgVG9kYXkgVGhlIE5hc2RhcSBpcyBhIHdob2xlIGRpZmZlcmVudCBhbmltYWwgdGhhbiAxNSAgeWVhcnMgYWdvIGhlIG5vdGVzIEl0cyBsZXNzIHRlY2hub2xvZ3ljZW50cmljIHdpdGggbW9yZSAgaGVhbHRoY2FyZSBiaW90ZWNobm9sb2d5IGFuZCBjb25zdW1lciBjb21wYW5pZXMgSW4gYWRkaXRpb24gdGhlIHZhbHVhdGlvbnMgdG9kYXkgYXJlIG11Y2ggIGxvd2VyIHdpdGggdGhlIE5hc2RhcXMgcHJpY2V0b2Vhcm5pbmdzIHJhdGlvIGJhc2VkIG9uIG5leHQgeWVhcnMgIGVhcm5pbmdzIGVzdGltYXRlcyBpbiB0aGUgaGlnaHRlZW5zIENodW5nIHNheXMgUmVsYXRlZCBBcnRpY2xlc3QABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0xMi0wM1QwMDowMDowMFogVE8gMjAxNC0wNy0xMFQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDQzMjI=</field><field name="title" class="java.lang.String">rO0ABXQAQFJlY29yZCBKYXBhbiBCdXliYWNrcyBTYWx2YWdlIFN0b2NrcyBMZWZ0IE91dCBvZiBXb3JsZHdpZGUgUmFsbHk=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbB8fyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDg3Nzk0OGFhOTZhMDQyNmI=</field><field name="symbol" class="java.lang.String">rO0ABXQABk1DTi5CRQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbHGFiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEApBR64UeuF</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEApBR64UeuF</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEApBR64UeuF</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEApBR64UeuF</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEApBR64UeuF</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDA3NmYyN2U0YjcxNmExN2I=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJ+dAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDU2NzU=</field><field name="title" class="java.lang.String">rO0ABXQAL0F1dGhvciBNaWNoYWVsIExld2lzOiBVUyBTdG9jayBNYXJrZXQgSXMgUmlnZ2Vk</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUURW8yAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDE3OWM0OWVkNzM5NWQ1ODM=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNDSFc=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUUWgiiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7bhR64Ueu</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7fXCj1wo9</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7JmZmZmZm</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7VHrhR64U</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7Fwo9cKPX</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAG2w3A==</field><field name="id" class="java.lang.String">rO0ABXQAEDFjMzJjZmY3NTJmMTdlZDg=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFqNAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDU4NzQ=</field><field name="title" class="java.lang.String">rO0ABXQANkZlYnJ1YXJ5J3MgSm9icyBEYXRhIE1heSBTdXBwb3J0IE1vcmUgR2FpbnMgZm9yIFN0b2Nrcw==</field><field name="content" class="java.lang.String">rO0ABXQRikZlYnJ1YXJ5J3Mgam9icyByZXBvcnQgZm9sbG93ZWQgdHdvIHN0cmFpZ2h0IG1vbnRocyBvZiBwYXlyb2xscyByZXBvcnRzIHRoYXQgd2VyZSBzaGFycGx5IGJlbG93IGV4cGVjdGF0aW9ucywgYW5kIHRoZSByZWJvdW5kIHJlaW5mb3JjZWQgdGhlIHRoZW9yeSB0aGF0IHRoZSB3ZWFrbmVzcyBpbiBEZWNlbWJlciBhbmQgSmFudWFyeSBoYWQgYmVlbiB0ZW1wb3JhcnksIHJlbGF0ZWQgdG8gd2VhdGhlciBhcyBvcHBvc2VkIHRvIHdvcnNlbmluZyBmdW5kYW1lbnRhbHMuIFRoYXQgYmV0IGhhcyBoZWxwZWQgZXF1aXRpZXMgc2hydWcgb2ZmIGJlYXJpc2ggZGF0YSBhbmQgZ2VvcG9saXRpY2FsIHVuY2VydGFpbnRpZXMgaW4gVWtyYWluZSwgdGFraW5nIHRoZSBTJlAgNTAwIHRvIGEgc2VyaWVzIG9mIHJlY29yZCBoaWdocy4gSG93ZXZlciwgaXQgYWxzbyByYWlzZWQgY29uY2VybnMgdGhhdCB0aGUgbWFya2V0IG1heSBiZSB2dWxuZXJhYmxlIHRvIHB1bGxiYWNrcyBvbiBhbnkgaW5kaWNhdGlvbiB0aGF0IGNvbmRpdGlvbnMgaGF2ZSBnb3R0ZW4gd29yc2UuICJXZSdyZSBob3BpbmcgdGhlIHBheXJvbGwgcmVwb3J0IG1lYW5zIHdlJ3JlIG9uIGEgc3Ryb25nZXIgZm9vdGluZyBnb2luZyBhaGVhZCBhbmQgdGhhdCB3ZSBjYW4gZ2V0IG1vcmUgcm9idXN0IGdyb3d0aCBnb2luZyBmb3J3YXJkLCIgc2FpZCBNaWNoYWVsIE11bGxhbmV5LCBjaGllZiBpbnZlc3RtZW50IG9mZmljZXIgb2YgRmlkdWNpYXJ5IFRydXN0IENvIGluIEJvc3Rvbi4gIk5vdyB3ZSdyZSB0cmFkaW5nIG9uIGZ1bmRhbWVudGFscywgd2hpY2ggd2UgdGhpbmsgYXJlIGZpbmUuIFdlJ3JlIGNvbWZvcnRhYmxlIHN0aWxsIGJlaW5nIGxvbmcgb24gdGhlIG1hcmtldC4iIEluIGEgc2lnbiBvZiBwb3NpdGl2ZSB0cmFkaW5nIG1vbWVudHVtLCB0aGUgUyZQIDUwMCBpcyAxLjMgcGVyY2VudCBhYm92ZSBpdHMgMTQtZGF5IG1vdmluZyBhdmVyYWdlLCBhIGxldmVsIHRoYXQgY291bGQgc2VydmUgYXMgc3VwcG9ydCBpbiBhIG1hcmtldCBkZWNsaW5lLiBGb3IgdGhlIHdlZWssIHRoZSBEb3cgcm9zZSAwLjggcGVyY2VudCwgdGhlIFMmUCA1MDAgY2xpbWJlZCAxIHBlcmNlbnQgYW5kIHRoZSBOYXNkYXEgZ2FpbmVkIDAuNyBwZXJjZW50LiBUaGUgRG93IGFuZCB0aGUgUyZQIDUwMCByb3NlIGZvciB0aGVpciBzZWNvbmQgc3RyYWlnaHQgd2VlayBvZiBnYWlucy4gVGhlIE5hc2RhcSBhZHZhbmNlZCBmb3IgYSBmaWZ0aCBzdHJhaWdodCB3ZWVrLCB1cCA1LjcgcGVyY2VudCBvdmVyIHRoYXQgcGVyaW9kLiBPbiBGcmlkYXksIHRoZSBTJlAgNTAwIGVuZGVkIGF0IGEgcmVjb3JkIGhpZ2ggb2YgMSw4NzguMDQuIFRoZSBtaWxlc3RvbmUgbWFya2VkIGl0cyBmaWZ0aCByZWNvcmQgY2xvc2luZyBoaWdoIGluIHRoZSBwYXN0IHNldmVuIHNlc3Npb25zLiBXYWxsIFN0cmVldCBoYXMgbWFyY2hlZCBzdGVhZGlseSBoaWdoZXIgdGhpcyB5ZWFyLCBzYXZlIGZvciBhIHB1bGxiYWNrIGluIGxhdGUgSmFudWFyeSB0aGF0IGNhbWUgb24gY29uY2VybnMgYWJvdXQgZW1lcmdpbmcgbWFya2V0cy4gVGhvc2Ugd29ycmllcyB3aWxsIHJlbWFpbiBwcm9taW5lbnQgYWZ0ZXIgUnVzc2lhbiBQcmVzaWRlbnQgVmxhZGltaXIgUHV0aW4gcmVidWZmZWQgYSB3YXJuaW5nIGZyb20gVS5TLiBQcmVzaWRlbnQgQmFyYWNrIE9iYW1hIG92ZXIgTW9zY293J3MgbWlsaXRhcnkgaW50ZXJ2ZW50aW9uIGluIFVrcmFpbmUncyBDcmltZWEgcmVnaW9uLiBPYmFtYSBoYXMgb3JkZXJlZCBzYW5jdGlvbnMgYWdhaW5zdCBSdXNzaWEgaW4gdGhlIG1vc3Qgc2VyaW91cyBjb25mcm9udGF0aW9uIHNpbmNlIHRoZSBDb2xkIFdhci4gIldlZWtlbmRzIGFyZSBub3RvcmlvdXMgZm9yIGdlb3BvbGl0aWNhbCBkZXZlbG9wbWVudHMsIHNvIHdlIG1pZ2h0IGJlIHZ1bG5lcmFibGUgdG8gc29tZSBraW5kIG9mIHNob2NrLCIgc2FpZCBUZXJyeSBEdUZyZW5lLCBpbnZlc3RtZW50IHNwZWNpYWxpc3QgYXQgSlBNb3JnYW4gUHJpdmF0ZSBCYW5rIGluIE5ldyBPcmxlYW5zLCB3aGljaCBoYXMgJDk3NyBiaWxsaW9uIGluIGFzc2V0cyB1bmRlciBtYW5hZ2VtZW50LiBNYWNybyBpc3N1ZXMgbWF5IGhhdmUgYSBsYXJnZSBpbmZsdWVuY2Ugb24gdHJhZGluZyB0aGlzIHdlZWssIHdpdGggbGl0dGxlIGVsc2UgdGhhdCBjb3VsZCBzZXJ2ZSBhcyBjYXRhbHlzdHMuIE9ubHkgdHdvIFMmUCA1MDAgY29tcG9uZW50cywgVXJiYW4gT3V0Zml0dGVycyBhbmQgRG9sbGFyIEdlbmVyYWwgLCBhcmUgc2NoZWR1bGVkIHRvIHJlcG9ydCBxdWFydGVybHkgcmVzdWx0cy4gRWNvbm9taWMgaW5kaWNhdG9ycyBvbiB0YXAgaW5jbHVkZSBGZWJydWFyeSByZXRhaWwgc2FsZXMsIHNlZW4gcmlzaW5nIDAuMiBwZXJjZW50LCBhbmQgYSBwcmVsaW1pbmFyeSByZWFkIG9uIE1hcmNoIGNvbnN1bWVyIHNlbnRpbWVudCBmcm9tIHRoZSBUaG9tc29uIFJldXRlcnMvVW5pdmVyc2l0eSBvZiBNaWNoaWdhbiBTdXJ2ZXlzIG9mIENvbnN1bWVycywgd2hpY2ggaXMgZXhwZWN0ZWQgdG8gZWRnZSB1cCBmcm9tIEZlYnJ1YXJ5LiBXaGlsZSBhbnkgZGV2ZWxvcG1lbnQgaW4gVWtyYWluZSBjb3VsZCBvdmVyc2hhZG93IHRoZSBkYXRhLCB0aGUgY29uZmxpY3QgaXMgbm90IGV4cGVjdGVkIHRvIGRyYXN0aWNhbGx5IGNoYW5nZSB0aGUgbWFya2V0J3MgZnVuZGFtZW50YWxzLiAiV2UncmUgbm90IGFzIHN1c2NlcHRpYmxlIHRvIGEgZGlzcnVwdGlvbiBmcm9tIHRoYXQgcGFydCBvZiB0aGUgZ2xvYmUgYXMgd2Ugd291bGQgYmUgdG8gYSBmbGFyZS11cCBpbiB0aGUgTWlkZGxlIEVhc3QsIiBEdUZyZW5lIHNhaWQuICJUaGF0IGdpdmVzIHVzIHNvbWUgYnJlYXRoaW5nIHJvb20sIGFuZCB0aG91Z2ggdGhlcmUgd2lsbCBiZSBmZWFycyBvZiBjb250YWdpb24sIHRoZSBtYXJrZXQgc2hvdWxkIGJlIGFibGUgdG8gY29udGludWUgdGFraW5nIHRoaW5ncyBpbiBzdHJpZGUuIiDCoCBGQVZPUklORyBMQVJHRS1DQVAgU1RPQ0tTIEVxdWl0aWVzIGluIHRvdGFsIG1heSBiZSBoYXJkLXByZXNzZWQgdG8gcG9zdCBkcmFtYXRpYyBnYWlucyBmcm9tIHJlY29yZCBsZXZlbHMsIGJ1dCBhbmFseXN0cyBzZWUgb3Bwb3J0dW5pdHkgaW4gc3BlY2lmaWMgYXJlYXMgb2YgdGhlIG1hcmtldC4gRmlkdWNpYXJ5IFRydXN0J3MgTXVsbGFuZXksIHdobyBvdmVyc2VlcyBhYm91dCAkMTEuMyBiaWxsaW9uIGluIGFzc2V0cywgc2FpZCBoZSB3YXMgb3ZlcndlaWdodCBsYXJnZS1jYXAgc3RvY2tzIGFuZCB1bmRlcndlaWdodCBzbWFsbC1jYXBzLCB3aGljaCBvdXRwZXJmb3JtZWQgdGhlIFMmUCA1MDAgZm9yIHRoZSBwYXN0IHR3byB5ZWFycywgYXMgd2VsbCBhcyBzbyBmYXIgaW4gMjAxNC4gIldoaWxlIG11bHRpbmF0aW9uYWxzIHdpdGggYSBsb3Qgb2YgZW1lcmdpbmcgbWFya2V0IGV4cG9zdXJlIGNvdWxkIGJlIGhpdCBieSBkZXZlbG9wbWVudHMgaW4gVWtyYWluZSwgd2UgZG9uJ3QgdGhpbmsgdGhlIHBhaW4gd2lsbCBiZSB0aGF0IG91dHNpemVkLCBjb21wYXJlZCB0byBvdGhlciBwYXJ0cyBvZiB0aGUgbWFya2V0LCBhbmQgaW4gdGhlIG1lYW50aW1lLCBzbWFsbC1jYXBzIGFyZSBub3QgZmF2b3JlZCBieSB0aGVpciB2YWx1YXRpb24uIiBUaGUgZm9yd2FyZCBwcmljZS10by1lYXJuaW5ncyByYXRpbyBvZiB0aGUgc21hbGwtY2FwIFMmUCA2MDAgIGlzIDIwLjEsIHdoaWxlIHRoZSBSdXNzZWxsIDIwMDAncywgd2hpY2ggaW5jbHVkZXMgbW9yZSBzbWFsbCBuYW1lcywgaXMgMjQuNS4gVG8gY29tcGFyZSwgdGhlIFMmUCAxMDAsIHdoaWNoIGhhcyBhIGhpZ2hlciBjb25jZW50cmF0aW9uIG9mIGxhcmdlLWNhcCBuYW1lcywgaGFzIGEgUC9FIHJhdGlvIG9mIDE0LjMsIHdoaWxlIHRoZSBiZW5jaG1hcmsgUyZQIDUwMCdzIGlzIDE1LjguIE1vcmdhbiBTdGFubGV5IGFuYWx5c3RzIHdyb3RlIHRoYXQgaXQgaGFkIGJlZW4gImRpc21pc3NpdmUiIG9mIHRoZSBpZGVhIHRoYXQgZW1lcmdpbmcgbWFya2V0IGNvbnRhZ2lvbiB3b3VsZCBpbXBhY3QgVS5TLiBlcXVpdGllcywgImFzIHdoYXQgcmVhbGx5IG1hdHRlcnMgaXMgdGhhdCB0aGUgZHJlYW0gb2YgZ3Jvd3RoIGlzIHN0aWxsIGFsaXZlLCIgd2l0aCBjb3Jwb3JhdGUgZWFybmluZ3Mgbm90IHNsb3dpbmcuICJJbiB0aGlzIGVudmlyb25tZW50LCIgdGhlIGZpcm0gYWRkZWQgaW4gYSBub3RlIHRvIGNsaWVudHMsICJzdG9jayBwaWNrZXJzIHdvdWxkIGJlbmVmaXQgZnJvbSBleHBvc3VyZSB0byB0ZWNobm9sb2d5IGFzIGl0cyBoaXN0b3JpY2FsIGFscGhhIHJhbmtzIGZpcnN0IG92ZXIgYWxsIG90aGVyIHNlY3RvcnMuIiBTdW5kYXkgbWFya3MgdGhlIGZpdmUteWVhciBhbm5pdmVyc2FyeSBvZiB0aGUgY2xvc2luZyBsb3cgdGhhdCB0aGUgUyZQIDUwMCByZWFjaGVkIGR1cmluZyB0aGUgZmluYW5jaWFsIGNyaXNpcy4gVGhlIGJlbmNobWFyayBpbmRleCBoYXMgc29hcmVkIGFsbW9zdCAxODAgcGVyY2VudCBmcm9tIHRoYXQgbGV2ZWwu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUSlbS8AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGU0NWM0ZTYxYzU2ZDdkYjU=</field><field name="symbol" class="java.lang.String">rO0ABXQABFVSQk4=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUSqXJyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBC8zMzMzMz</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBC+FHrhR64</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCjhR64Ueu</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCwUeuFHrh</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCwUeuFHrh</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAC0NmA==</field><field name="id" class="java.lang.String">rO0ABXQAEDcxYTViYjA5NTJhNGY5MTU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE5IAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDU2Njc=</field><field name="title" class="java.lang.String">rO0ABXQAP1N0b2NrIFRyYWRlciBTcGVlZCBDcmF6ZSBUaHJlYXRlbnMgU3RhYmlsaXR5LCBTY2huZWlkZXJtYW4gU2F5cw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUUWgiiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGM2NjJiNmY3NTE3MmI1MmM=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNDSFc=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUUbqISAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7a4UeuFHs</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7uFHrhR64</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7aPXCj1wp</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7czMzMzMz</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7NcKPXCj2</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAIxI5A==</field><field name="id" class="java.lang.String">rO0ABXQAEDMzZTcyMzhlNGVmZDUyMGI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEXtAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDU4NjA=</field><field name="title" class="java.lang.String">rO0ABXQAKVN0b2NrcyBFZGdlIExvd2VyIG9uIENoaW5hIEdyb3d0aCBXb3JyaWVz</field><field name="content" class="java.lang.String">rO0ABXQTHlN0b2NrcyBkcmlmdGVkIHRvIGEgc2xpZ2h0bHkgbG93ZXIgZmluaXNoIE1vbmRheSBhcyBpbnZlc3RvcnMgc2lmdGVkIHRocm91Z2ggYSBibGVuZCBvZiBkaXNjb3VyYWdpbmcgZWNvbm9taWMgZGF0YSBmcm9tIENoaW5hIGFuZCBKYXBhbiBhcyB3ZWxsIGFzIG9uZ29pbmcgdW5jZXJ0YWludHkgb3ZlciBSdXNzaWEncyBpbmN1cnNpb24gaW50byBVa3JhaW5lLiBNYWpvciBtYXJrZXQgaW5kZXhlcyBwYXJlZCB0aGVpciBsb3NzZXMgYXMgdGhlIGRheSBkcmV3IHRvIGEgY2xvc2UsIGFpZGVkIGJ5IHNvbWUgaGlnaC1mbHlpbmcgc3RvY2tzLCBpbmNsdWRpbmcgQWxleGlvbiBQaGFybWFjZXV0aWNhbHMsIENoaXF1aXRhIEJyYW5kcyBJbnRlcm5hdGlvbmFsIGFuZCBTb3V0aHdlc3QgQWlybGluZXMuIEluIHRoZSBhYnNlbmNlIG9mIFUuUy4gZWNvbm9taWMgZGF0YSwgaW52ZXN0b3JzIGZvY3VzZWQgb24gbmV3cyB0aGF0IENoaW5hJ3MgZXhwb3J0cyBzbHVtcGVkIDE4IHBlcmNlbnQgaW4gRmVicnVhcnkuIFRoZSByZXBvcnQgcmVpbmZvcmNlZCBmZWFycyBhYm91dCB0aGUgb3V0bG9vayBmb3IgdGhlIHdvcmxkJ3Mgc2Vjb25kLWxhcmdlc3QgZWNvbm9teS4gSW4gYWRkaXRpb24sIEphcGFuIHJlcG9ydGVkIGEgcmVjb3JkIGN1cnJlbnQgYWNjb3VudCBkZWZpY2l0IGZvciBKYW51YXJ5IGFuZCBsb3dlcmVkIGl0cyBlY29ub21pYyBncm93dGggZXN0aW1hdGUgZm9yIHRoZSBPY3RvYmVyLURlY2VtYmVyIHF1YXJ0ZXIgdG8gMC43IHBlcmNlbnQgZnJvbSAxIHBlcmNlbnQuIFRoZSByZXBvcnRzIG1hZGUgZm9yIGEgZG93bmJlYXQgc3RhcnQgZm9yIHRoZSBtYXJrZXQgYXMgaW52ZXN0b3JzIHNlaXplZCB0aGUgbW9tZW50IHRvIHJlY2FsaWJyYXRlIHRoZWlyIHN0b2NrIGhvbGRpbmdzLiAiSXQgd2FzIGEgbGl0dGxlIGJpdCBvZiBhbiBleGN1c2UgdG8gdGFrZSBzb21lIG1vbmV5IG9mZiB0aGUgdGFibGUsIiBzYWlkIFJvbiBGbG9yYW5jZSwgZGVwdXR5IGNoaWVmIGludmVzdG1lbnQgb2ZmaWNlciBhdCBXZWxscyBGYXJnbyBQcml2YXRlIEJhbmsuICJXZSBoYXZlIGdlb3BvbGl0aWNhbCB1bmNlcnRhaW50eSwgc28gKGl0J3MpIGEgZ29vZCBleGN1c2UgdG8gcmUtZXZhbHVhdGUgeW91ciByaXNrIGV4cG9zdXJlLiBJdCdzIGdvaW5nIHRvIGJlIHBhciBmb3IgdGhlIGNvdXJzZSBmb3IgdGhpcyB5ZWFyLiIgVGhlIFN0YW5kYXJkICYgUG9vcidzIDUwMCBpbmRleCBlZGdlZCBkb3duIDAuODcgb2YgYSBwb2ludCB0byBjbG9zZSBhdCAxLDg3Ny4xNy4gSXQgaGFkIGJlZW4gZG93biAxMSBwb2ludHMgZWFybGllci4gVGhlIERvdyBKb25lcyBpbmR1c3RyaWFsIGF2ZXJhZ2UgbG9zdCAzNC4wNCBwb2ludHMsIG9yIDAuMiBwZXJjZW50LCB0byAxNiw0MTguNjguIFRoZSBOYXNkYXEgY29tcG9zaXRlIGZlbGwgMS43NyBwb2ludHMsIG9yIGxlc3MgdGhhbiAwLjEgcGVyY2VudCwgdG8gNCwzMzQuNDUuIFRoZSB0aHJlZSBtYWpvciBVLlMuIGluZGV4ZXMgYXJlIHN0aWxsIHVwIGZvciB0aGUgbW9udGgsIGFuZCBvbmx5IHRoZSBEb3cgaXMgZG93biBmb3IgdGhlIHllYXIuIFRoZSBTJlAgNTAwIGVuZGVkIE1vbmRheSB1cCAxLjYgcGVyY2VudCBmb3IgdGhlIHllYXIsIHdoaWxlIHRoZSBOYXNkYXEgZmluaXNoZWQgdXAgMy44IHBlcmNlbnQuIFRoZSBkb3duYmVhdCBlY29ub21pYyByZXBvcnQgZnJvbSBDaGluYSBodXJ0IHNldmVyYWwgaW5kdXN0cnkgc2VjdG9ycyBoZWF2aWx5IHJlbGlhbnQgb24gQ2hpbmVzZSBlY29ub21pYyBncm93dGgsIGluIHBhcnRpY3VsYXIsIG1hdGVyaWFscywgZW5lcmd5IGFuZCBpbmR1c3RyaWFscy4gU2l4IG9mIHRoZSAxMCBzZWN0b3JzIG9mIHRoZSBTJlAgNTAwIGluZGV4IGVuZGVkIGxvd2VyLCBsZWQgYnkgaW5kdXN0cmlhbHMuIE1pbmluZyBjb21wYW55IENsaWZmcyBOYXR1cmFsIFJlc291cmNlcyB3YXMgYW1vbmcgdGhlIGJpZ2dlc3QgZGVjbGluZXJzIGluIHRoZSBTJlAgNTAwLCBzaGVkZGluZyA3MCBjZW50cywgb3IgMy44IHBlcmNlbnQgdG8gJDE3Ljk1LiAiVGhlIG1hcmtldCBpcyBncm93aW5nIG1vcmUgcGVzc2ltaXN0aWMgYXJvdW5kIGdyb3d0aCBpbiBDaGluYSwiIHNhaWQgRGF2aWQgQ2hhbHVwbmlrLCBoZWFkIG9mIGVxdWl0aWVzIGZvciBOdXZlZW4gQXNzZXQgTWFuYWdlbWVudC4gIkV4cGVjdGF0aW9ucyBoYXZlIGJlZW4gY29taW5nIGRvd24sIGJ1dCB0aGUgbnVtYmVycyBoYXZlIGJlZW4gZGlzYXBwb2ludGluZyBldmVuIHRob3NlIHJlZHVjZWQgZXhwZWN0YXRpb25zLiIgRGVzcGl0ZSB0aGUgZGlzYXBwb2ludGluZyBkYXRhIGZyb20gQ2hpbmEsIHNvbWUgbWFya2V0IHdhdGNoZXJzIGFudGljaXBhdGUgdGhhdCBsYXN0IHdlZWsncyBnYWlucyB3aWxsIGNvbnRpbnVlLiBUaGUgUyZQIDUwMCBpbmRleCBub3RjaGVkIHJlY29yZCBoaWdocyB0aHJlZSB0aW1lcyBsYXN0IHdlZWsgYXMgaW52ZXN0b3JzIGdyZXcgbW9yZSBjb25maWRlbnQgdGhhdCB3ZWFrIFUuUy4gZWNvbm9taWMgcmVwb3J0cyBpbiByZWNlbnQgd2Vla3Mgd2VyZSBhIHJlZmxlY3Rpb24gb2YgdW51c3VhbGx5IHNldmVyZSB3aW50ZXIgd2VhdGhlciwgbm90IGEgYnJvYWQgZWNvbm9taWMgc2xvd2Rvd24uIEJldHRlci10aGFuLWV4cGVjdGVkIHBheXJvbGwgbnVtYmVycyBsYXN0IHdlZWsgYWxzbyBoZWxwZWQgZW5jb3VyYWdlIGludmVzdG9ycy4gIkluIGdlbmVyYWwsIEkgdGhpbmsgdGhlIG1hcmtldCB3aWxsIG1vdmUgcGFzdCB0aGUgcG9vciBDaGluYSBleHBvcnQgbnVtYmVycyBmYWlybHkgcXVpY2tseSwiIHNhaWQgSmFtZXMgTGl1LCBnbG9iYWwgbWFya2V0IHN0cmF0ZWdpc3QgYXQgSi5QLiBNb3JnYW4gRnVuZHMuICJUaGVyZSdzIHN0aWxsIGEgbG90IG9mIGZ1bmRhbWVudGFsIHN1cHBvcnQgZm9yIHRoZSBTJlAgYXQgdGhpcyBwYXJ0aWN1bGFyIHJhbmdlLiIgQ2hhbHVwbmlrIGFsc28gYW50aWNpcGF0ZXMgTW9uZGF5J3MgZGVjbGluZSBpc24ndCB0ZWxsaW5nIG9mIHRoZSBtYXJrZXQncyB0cmFqZWN0b3J5IGZvciB0aGUgd2VlayBhaGVhZCwgYmFycmluZyBtb3JlIGZhbGxvdXQgZnJvbSBSdXNzaWEncyBkZXBsb3ltZW50IG9mIHRyb29wcyBpbiBVa3JhaW5lLiAiTXkgZ3Vlc3MgaXMgdGhlIG1hcmtldCBtb3ZlcyBldmVyIHNvIHNsaWdodGx5IGhpZ2hlciB0aGlzIHdlZWssIiBoZSBzYWlkLiAiVGhlIHRyZW5kIGlzIHN0aWxsIHVwLiBXZSByZWFsbHkgaGF2ZW4ndCBzZWVuIGFueXRoaW5nIHRvIGJyZWFrIHRoYXQgdHJlbmQuIiBNb25kYXkgbWFya2VkIHRoZSBmaWZ0aCBhbm5pdmVyc2FyeSBvZiB0aGUgY3VycmVudCBidWxsIG1hcmtldCBpbiBzdG9ja3MuIFRoZSBTJlAgNTAwIGluZGV4IGJvdHRvbWVkIG91dCBvbiBNYXJjaCA5LCAyMDA5LCBhbmQgaXMgdXAgYWJvdXQgMTc3IHBlcmNlbnQgc2luY2UgdGhlbi4gVGhlIHJ1bi11cCBvdmVyIHRoZSBwYXN0IGZpdmUgeWVhcnMgaGFzIGJlZW4gaGVscGVkIGJ5IHN0aW11bHVzIGZyb20gdGhlIEZlZGVyYWwgUmVzZXJ2ZSwgcmVjb3JkIGNvcnBvcmF0ZSBwcm9maXRzLCB0aGUgZWNvbm9taWMgcmVjb3ZlcnkgYW5kIGNvbXBhbmllcyByZXB1cmNoYXNpbmcgdGhlaXIgb3duIHN0b2NrLiBUaGlzIGlzIGEgbGlnaHQgd2VlayBmb3IgbWFya2V0LW1vdmluZyBlY29ub21pYyBkYXRhIGFuZCBjb3Jwb3JhdGUgZWFybmluZ3MuIEJ1dCBpbnZlc3RvcnMgd2lsbCBiZSB3YXRjaGluZyB0aGUgbGF0ZXN0IGRhdGEgb24gcmV0YWlsIHNhbGVzLCBkdWUgb3V0IFRodXJzZGF5LCBhbmQgYSBnYXVnZSBvZiBjb25zdW1lciBjb25maWRlbmNlIGR1ZSBvdXQgRnJpZGF5LiAiVGhvc2UgdHdvIHNldHMgb2YgbnVtYmVycyB3aWxsIHJlYWxseSB0ZWxsIHVzIHdoZXJlIHRoZSBjb25zdW1lciBpcyBhbmQgd2hldGhlciBvciBub3QgdGhlIGNvbnN1bWVyIHdpbGwgaGVhZCBvdXQgYW5kIHNwZW5kIHdoZW4gdGhlIHdlYXRoZXIgd2FybXMgdXAsIiBMaXUgc2FpZC4gQW1vbmcgdGhlIHN0b2NrcyBidWNraW5nIHRoZSBzbGlnaHQgZG93bndhcmQgdHVybiBNb25kYXkgd2FzIEFsZXhpb24gUGhhcm1hY2V1dGljYWxzLiBUaGUgY29tcGFueSBjbGltYmVkIHRoZSBtb3N0IG9mIGFueSBzdG9jayBpbiB0aGUgUyZQIDUwMCBpbmRleCwgdmF1bHRpbmcgJDExLjk1LCBvciA3LjEgcGVyY2VudCwgdG8gJDE4MC4gVGhlIGNvbXBhbnkgcmFpc2VkIGl0cyAyMDE0IGVhcm5pbmdzIGZvcmVjYXN0LCBzYXlpbmcgdGhlIG5hdGlvbmFsIGhlYWx0aCBhZ2VuY3kgb2YgRnJhbmNlIHdpbGwgcmVpbWJ1cnNlIGl0IGZvciBwYXN0IHNhbGVzIG9mIGl0cyBkcnVnIFNvbGlyaXMuIENoaXF1aXRhIHdhcyBhbm90aGVyIGdhaW5lci4gSXQgYWdyZWVkIHRvIGNvbWJpbmUgd2l0aCBEdWJsaW4tYmFzZWQgRnlmZmVzIHRvIGJlY29tZSB0aGUgd29ybGQncyB0b3AgYmFuYW5hIGNvbXBhbnkuIFRoZSBzdG9jay1mb3Itc3RvY2sgdHJhbnNhY3Rpb24gYW5ub3VuY2VkIE1vbmRheSBjcmVhdGVzIGEgZ2xvYmFsIGJhbmFuYSBhbmQgZnJlc2ggcHJvZHVjZSBjb21wYW55IHdpdGggJDQuNiBiaWxsaW9uIGluIGFubnVhbCByZXZlbnVlLiBDaGlxdWl0YSByb3NlICQxLjE2LCBvciAxMC43IHBlcmNlbnQsIHRvICQxMi4gU291dGh3ZXN0IEFpcmxpbmVzJyBzdG9jayB0b3VjaGVkIGEgNTItd2VlayBoaWdoIG9mICQyMy42NyBlYXJseSBpbiB0aGUgZGF5IGJlZm9yZSBlbmRpbmcgdXAgNTAgY2VudHMsIG9yIDIuMiBwZXJjZW50LCB0byAkMjMuNjAuIFRoZSBjYXJyaWVyIGdvdCBhIGJvb3N0IGFmdGVyIGl0IHJlcG9ydGVkIHRoYXQgcGFzc2VuZ2VycyBhcmUgZmx5aW5nIG1vcmUgbWlsZXMsIGEgdHJlbmQgdGhhdCBoZWxwZWQgc2VuZCBhIGtleSByZXZlbnVlIGZpZ3VyZSBoaWdoZXIgbGFzdCBtb250aC4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUSqXJyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGI5ZDJhMjZkZDRlNzQ2N2M=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0xVVg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUSvgviAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3mZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4B64UeuFI</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3a4UeuFHs</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3x64UeuFI</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3nCj1wo9c</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAHGx3A==</field><field name="id" class="java.lang.String">rO0ABXQAEDMyMWEyZjViZTg2Mjg4N2Y=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mK7OAAAA==</field></document></documents><date>2015-05-07T12:22:15-0500</date></cacheEntry>
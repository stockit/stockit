<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0EnBHb29nbGUgcGxhbnMgdG8gYnVpbGQgYW5kIGxhdW5jaCBvbnRvIGNpdHkgc3RyZWV0cyBhIHNtYWxsIGZsZWV0IG9mIHN1YmNvbXBhY3QgY2FycyB0aGF0IGNvdWxkIG9wZXJhdGUgd2l0aG91dCBhIHBlcnNvbiBhdCB0aGUgd2hlZWwgQWN0dWFsbHkgdGhlIGNhcnMgd291bGRudCBldmVuIGhhdmUgYSB3aGVlbCBPciBnYXMgYW5kIGJyYWtlIHBlZGFscyBUaGUgY29tcGFueSBzYXlzIHRoZSB2ZWhpY2xlcyB3aWxsIHVzZSBzZW5zb3JzIGFuZCBjb21wdXRpbmcgcG93ZXIgd2l0aCBubyBodW1hbiBuZWVkZWQgR29vZ2xlIEluYyBob3BlcyB0aGF0IGJ5IHRoaXMgdGltZSBuZXh0IHllYXIgMTAwIG9mIHRoZSB0d29zZWF0ZXJzIHdpbGwgYmUgb24gcHVibGljIHJvYWRzIGZvbGxvd2luZyBleHRlbnNpdmUgdGVzdGluZyBUaGUgY2FycyB3b3VsZCBub3QgYmUgZm9yIHNhbGUgYW5kIGluc3RlYWQgd291bGQgYmUgcHJvdmlkZWQgdG8gc2VsZWN0IG9wZXJhdG9ycyBmb3IgZnVydGhlciB0d2Vha2luZyBhbmQgaGF2ZSBsaW1pdGF0aW9ucyBzdWNoIGFzIGEgMjUgbXBoIHRvcCBzcGVlZCBUaGUgYW5ub3VuY2VtZW50IHByZXNlbnRzIGEgY2hhbGxlbmdlIHRvIGF1dG9tYWtlcnMgdGhhdCBoYXZlIGJlZW4gbW9yZSBjYXV0aW91cyBhYm91dCBpbnRyb2R1Y2luZyBmdWxseSBhdXRvbWF0ZWQgZHJpdmluZyBhbmQgdG8gZ292ZXJubWVudCByZWd1bGF0b3JzIHdobyBhcmUgc2NyYW1ibGluZyB0byBhY2NvbW1vZGF0ZSBzZWxmZHJpdmluZyBjYXJzIG9uIHB1YmxpYyByb2FkcyBPdGhlciBjb21wYW5pZXMgYXJlIHdvcmtpbmcgb24gdGhlIHRlY2hub2xvZ3kgYnV0IG5vbmUgYXMgbGFyZ2UgYXMgR29vZ2xlIGhhcyBzYWlkIGl0IGludGVuZHMgdG8gcHV0IHN1Y2ggY2FycyBpbiB0aGUgaGFuZHMgb2YgdGhlIHB1YmxpYyBzbyBzb29uIFRvIGRhdGUgR29vZ2xlIGhhcyBkcml2ZW4gaHVuZHJlZHMgb2YgdGhvdXNhbmRzIG9mIG1pbGVzIG9uIHB1YmxpYyByb2FkcyBhbmQgZnJlZXdheXMgaW4gTGV4dXMgU1VWcyBhbmQgVG95b3RhIFByaXVzZXMgb3V0Zml0dGVkIHdpdGggc3BlY2lhbCBzZW5zb3JzIGFuZCBjYW1lcmFzIEJ1dCB3aXRoIGEgc2FmZXR5IGRyaXZlciBpbiB0aGUgZnJvbnQgc2VhdCB0aG9zZSB2ZWhpY2xlcyB3ZXJlIG5vdCB0cnVseSBzZWxmZHJpdmluZyBJbnN0ZWFkIG9mIHRoZSBzdGFuZGFyZCBjb250cm9scyB0aGUgcHJvdG90eXBlcyB3b3VsZCBoYXZlIGJ1dHRvbnMgdG8gYmVnaW4gYW5kIGVuZCB0aGUgZHJpdmUgUGFzc2VuZ2VycyB3b3VsZCBzZXQgYSBkZXN0aW5hdGlvbiBUaGUgY2FyIHdvdWxkIHRoZW4gbWFrZSB0dXJucyBhbmQgcmVhY3QgdG8gb3RoZXIgdmVoaWNsZXMgYW5kIHBlZGVzdHJpYW5zIGJhc2VkIG9uIGNvbXB1dGVyIHByb2dyYW1zIHRoYXQgcHJlZGljdCB3aGF0IG90aGVycyBtaWdodCBkbyBhbmQgZGF0YSBmcm9tIHNlbnNvcnMgaW5jbHVkaW5nIHJhZGFyIGFuZCBjYW1lcmFzIHRoYXQgcmVhZCBpbiByZWFsIHRpbWUgd2hhdCBvdGhlciBvYmplY3RzIGFyZSBhY3R1YWxseSBkb2luZyBUaGUgcm91dGUgbWlnaHQgYmUgc2V0IGJ5IHR5cGluZyBhIGRlc3RpbmF0aW9uIGludG8gYSBtYXAgb3IgdXNpbmcgc3Bva2VuIGNvbW1hbmRzIENocmlzIFVybXNvbiB0aGUgbGVhZGVyIG9mIEdvb2dsZXMgc2VsZmRyaXZpbmcgY2FyIHRlYW0gdG9sZCByZXBvcnRlcnMgV2VkbmVzZGF5IFRoZSBjYXIgd2lsbCBiZSBwb3dlcmVkIGJ5IGVsZWN0cmljaXR5IGFuZCBjb3VsZCBnbyBhYm91dCAxMDAgbWlsZXMgYmVmb3JlIGNoYXJnaW5nIEl0cyBzaGFwZSBzdWdnZXN0cyBhIHJvdW5kZWRvdXQgVm9sa3N3YWdlbiBCZWV0bGUgIHNvbWV0aGluZyB0aGF0IG1pZ2h0IG1vdmUgcGVvcGxlIGFyb3VuZCBhIGNvcnBvcmF0ZSBjYW1wdXMgb3IgY29uZ2VzdGVkIGRvd250b3duICB3aXRoIGhlYWRsaWdodHMgYW5kIHNlbnNvcnMgYXJyYXllZCB0byByZXNlbWJsZSBhIGZyaWVuZGx5IGZhY2UgTWFyayBSZXVzcyBnbG9iYWwgcHJvZHVjdCBkZXZlbG9wbWVudCBjaGllZiBvZiBHZW5lcmFsIE1vdG9ycyBDbyBwb2tlZCBmdW4gYXQgdGhlIGNhcnMgbG9vayBidXQgYWNrbm93bGVkZ2VkIEdvb2dsZSBjb3VsZCBiZWNvbWUgYSBmb3JjZSBpbiB0aGUgbWFya2V0cGxhY2UgSSBjb3VsZCB3ZWFyIGl0IGFzIGEgaGF0IFJldXNzIGpva2VkIGF0IGFuIGF1dG9tb3RpdmUgdGVjaG5vbG9neSBmb3J1bSBpbiBEZXRyb2l0IEl0cyBjb29sIEl0cyBsaWtlIGFkdmFuY2VkIExpa2UgYW4gb2xkIFZXIFJldXNzIGFkZGVkIHRob3VnaCB0aGF0IEdvb2dsZSBjb3VsZCBiZWNvbWUgYSByZWFsIGNvbXBldGl0b3IgdG8gR00gd2hpY2ggaXMgcHVyc3VpbmcgZHJpdmVybGVzcyB0ZWNobm9sb2d5IElmIHRoZXkgc2V0IHRoZWlyIG1pbmQgdG8gaXQgSSBoYXZlIG5vIGRvdWJ0IHRoYXRzIGEgdmVyeSBzZXJpb3VzIGNvbXBldGl0aXZlIHRocmVhdCBoZSBzYWlkIE1ham9yIGF1dG9tYWtlcnMgaGF2ZSBzdGVhZGlseSBpbnRyb2R1Y2VkIHRlY2hub2xvZ3kgdGhhdCBoZWxwcyBjYXJzIHN0YXkgaW4gdGhlaXIgbGFuZXMgYW5kIGF2b2lkIGFjY2lkZW50cyBIb3dldmVyIGFsbCB0aG9zZSB2ZWhpY2xlcyBjb21lIHdpdGggYSBzdGVlcmluZyB3aGVlbCBhbmQgcGVkYWxzICBhbmQgdGhlIGV4cGVjdGF0aW9uIHRoYXQgYSBkcml2ZXIgd2lsbCBqdW1wIGluIHNob3VsZCB0cm91YmxlIGFyaXNlIFNldmVyYWwgY29tcGFuaWVzIGhhdmUgc2FpZCB0aGV5IGV4cGVjdCBieSAyMDIwIHRvIG1hcmtldCB2ZWhpY2xlcyB0aGF0IGNhbiBkcml2ZSB0aGVtc2VsdmVzIHVuZGVyIGNlcnRhaW4gY29uZGl0aW9ucyBOb3RoaW5nIGlzIGdvaW5nIHRvIGNoYW5nZSBvdmVybmlnaHQgYnV0IEdvb2dsZXMgYW5ub3VuY2VtZW50IGlzIGFub3RoZXIgc2lnbiBvZiB0aGUgZHJhc3RpYyBzaGlmdHMgaW4gYXV0b21vdGl2ZSB0ZWNobm9sb2d5IGJ1c2luZXNzIHByYWN0aWNlcyBhbmQgcmV0YWlsaW5nIHdlcmUgZ29pbmcgdG8gd2l0bmVzcyBzYWlkIEthcmwgQnJhdWVyIGEgc2VuaW9yIGFuYWx5c3QgYXQgS2VsbGV5IEJsdWUgQm9va3MgS0JCY29tIEEgRnJlbmNoIGNvbXBhbnkgSW5kdWN0IFRlY2hub2xvZ3kgaGFzIHByb2R1Y2VkIGEgZHJpdmVybGVzcyBzaHV0dGxlIHdoaWNoIGluIEZlYnJ1YXJ5IGRyb3ZlIHBlb3BsZSBhcm91bmQgYSBob3NwaXRhbCBjYW1wdXMgaW4gU291dGggQ2Fyb2xpbmEgQnV0IGluIHRlcm1zIG9mIGEgdHJ1bHkgc2VsZmRyaXZpbmcgY2FyIGZyb20gYSBtYWpvciBjb21wYW55IEdvb2dsZSBsb29rcyB0byBiZSBmaXJzdCBUaGUgdGVjaCB0aXRhbiBiZWdhbiBkZXZlbG9waW5nIHRoZSBwcm90b3R5cGUgbW9yZSB0aGFuIGEgeWVhciBhZ28gYWZ0ZXIgaXQgbG9hbmVkIHNvbWUgZW1wbG95ZWVzIGl0cyByZXRyb2ZpdHRlZCBMZXh1c2VzIGFuZCBzYXcgdGhhdCBzb21lIHdvdWxkIGJhc2ljYWxseSB0cnVzdCB0aGUgdGVjaG5vbG9neSBtb3JlIHRoYW4gaXQgd2FzIHJlYWR5IHRvIGJlIHRydXN0ZWQgVXJtc29uIHNhaWQgTWFraW5nIGEgY2FyIHRoYXQgZHJpdmVzIGl0c2VsZiBzZWVtZWQgbW9yZSBwcmFjdGljYWwgdGhhbiBzb21laG93IGVuc3VyaW5nIHRoYXQgcGVvcGxlIHpvbmluZyBvdXQgYmVoaW5kIHRoZSB3aGVlbCBjb3VsZCB0YWtlIG92ZXIgYXQgYSBtb21lbnRzIG5vdGljZSBUaGUgZmlyc3QgMTAwIHByb3RvdHlwZXMgd2lsbCBiZSBidWlsdCBpbiB0aGUgRGV0cm9pdCBhcmVhIHdpdGggdGhlIGhlbHAgb2YgZmlybXMgdGhhdCBzcGVjaWFsaXplIGluIGF1dG9zIEdvb2dsZSBzYWlkIEl0IHdvdWxkIG5vdCBpZGVudGlmeSB0aG9zZSBmaXJtcyBvciBkaXNjdXNzIHRoZSBjb3N0IG9mIGVhY2ggcHJvdG90eXBlIFRoaXMgc3VtbWVyIEdvb2dsZSBwbGFucyB0byBzZW5kIHRlc3QgcHJvdG90eXBlcyBvbiBjbG9zZWQgY291cnNlcyB0aGVuIGxhdGVyIHRoaXMgeWVhciBvbiBwdWJsaWMgc3RyZWV0cyBUaG9zZSB0ZXN0IGNhcnMgd2lsbCBoYXZlIGEgd2hlZWwgYW5kIHBlZGFscyBiZWNhdXNlIHVuZGVyIENhbGlmb3JuaWEgbGF3IGEgdGVzdCBkcml2ZXIgbXVzdCBiZSBhYmxlIHRvIHRha2UgaW1tZWRpYXRlIGNvbnRyb2wgQnkgc3VtbWVyIDIwMTUgaG93ZXZlciBDYWxpZm9ybmlhcyBEZXBhcnRtZW50IG9mIE1vdG9yIFZlaGljbGVzIG11c3QgcHVibGlzaCByZWd1bGF0aW9ucyBhbGxvd2luZyB0aGUgcHVibGljIHRvIHVzZSB0cnVseSBkcml2ZXJsZXNzIGNhcnMgQmlnIHF1ZXN0aW9ucyB0aGUgRE1WIGlzIHdyZXN0bGluZyB3aXRoIGluY2x1ZGUgd2hvIGlzIGxpYWJsZSBpZiBhIGRyaXZlcmxlc3MgY2FyIGNyYXNoZXMgYW5kIGhvdyB0aGUgc3RhdGUgY2FuIGJlIGNvbmZpZGVudCB0aGF0IGFuIGF1dG9tYXRlZCBjYXIgZHJpdmVzIGF0IGxlYXN0IGFzIHNhZmVseSBhcyBhIHBlcnNvbiBUaGF0IGNoYW5nZSBpbiB0aGUgbGF3IHdvdWxkIGFsbG93IHRoZSAxMDAgcHJvdG90eXBlcyB0aGF0IHdvdWxkIGJlIGludGVuZGVkIGZvciBhIHB1YmxpYyBwaWxvdCBwcm9qZWN0IGRldGFpbHMgdG8gYmUgZGV0ZXJtaW5lZCAgdG8gbm90IGhhdmUgYSBzdGVlcmluZyB3aGVlbCBvciBwZWRhbHMgVGhvdWdoIG5leHQgeWVhciBpcyB0aGUgZ29hbCBmb3IgdGhlIHBpbG90IHByb2plY3QgcHVibGljIGFjY2VzcyB3b250IGhhcHBlbiB1bnRpbCB3ZXJlIGNvbmZpZGVudCBpbiB0aGUgc2FmZXR5IFVybXNvbiBzYWlkdAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAb2FydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2UsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEwLTA2LTExVDAwOjAwOjAwWiBUTyAyMDEzLTA3LTMxVDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTIxMTgx</field><field name="title" class="java.lang.String">rO0ABXQAKUdvb2dsZSBMYXVuY2hlcyBJbnRlcm5ldC1iZWFtaW5nIEJhbGxvb25z</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT9LWqiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDA4ODcxZjlhNGU3ZDEwMWI=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0ZMWQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT9QgQSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwgAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAw6PXCj1wp</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAweuFHrhR7</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwgo9cKPXD</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAtR64UeuFI</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAMcGA==</field><field name="id" class="java.lang.String">rO0ABXQAEDZmNTlkMGQ0ZjZmZDVlMzQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHRFAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE1OTMx</field><field name="title" class="java.lang.String">rO0ABXQAK0dNIE9mZmVycyBCaWcgRGlzY291bnRzIHRvIEJvb3N0IFZvbHQgU2FsZXM=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATnxfxCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGEyOGVhMzgzNDhmODU0NDY=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0NBUg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATn2pWyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwq4UeuFHs</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwwAAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwD1wo9cKP</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwHrhR64Uf</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwHrhR64Uf</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAA25rA==</field><field name="id" class="java.lang.String">rO0ABXQAEDQ2NGMzYzIxZDVhOGM2NGU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE1WAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQ4MTQ=</field><field name="title" class="java.lang.String">rO0ABXQAK05ldy1DYXIgU2hvcnRhZ2VzIExvb20gQW1pZCBKYXBhbiBTaHV0ZG93bnM=</field><field name="content" class="java.lang.String">rO0ABXQeqFRoZSBhdXRvIGluZHVzdHJ5IGRpc3J1cHRpb25zIHRyaWdnZXJlZCBieSBKYXBhbidzIGVhcnRocXVha2UgYW5kIHRzdW5hbWkgYXJlIGFib3V0IHRvIGdldCB3b3JzZS4gSW4gdGhlIHdlZWtzIGFoZWFkLCBjYXIgYnV5ZXJzIHdpbGwgaGF2ZSBkaWZmaWN1bHR5IGZpbmRpbmcgdGhlIG1vZGVsIHRoZXkgd2FudCBpbiBjZXJ0YWluIGNvbG9ycywgdGhvdXNhbmRzIG9mIGF1dG8gcGxhbnQgd29ya2VycyB3aWxsIGxpa2VseSBiZSB0b2xkIHRvIHN0YXkgaG9tZSwgYW5kIGNvbXBhbmllcyBzdWNoIGFzIFRveW90YSwgSG9uZGEgYW5kIG90aGVycyB3aWxsIGxvc2UgYmlsbGlvbnMgb2YgZG9sbGFycyBpbiByZXZlbnVlLiBNb3JlIHRoYW4gdHdvIHdlZWtzIGFmdGVyIHRoZSBuYXR1cmFsIGRpc2FzdGVyLCBpbnZlbnRvcmllcyBvZiBjcnVjaWFsIGNhciBzdXBwbGllcyDigJQgZnJvbSBjb21wdXRlciBjaGlwcyB0byBwYWludCBwaWdtZW50cyDigJQgYXJlIGR3aW5kbGluZyBmYXN0IGFzIEphcGFuZXNlIGZhY3RvcmllcyB0aGF0IG1ha2UgdGhlbSBzdHJ1Z2dsZSB0byByZXN0YXJ0LiBCZWNhdXNlIHBhcnRzIGFuZCBzdXBwbGllcyBhcmUgc2hpcHBlZCBieSBzbG93LW1vdmluZyBib2F0cywgdGhlIHJlYWwgZHJvcC1vZmYgaGFzIHlldCB0byBiZSBmZWx0IGJ5IGZhY3RvcmllcyBpbiB0aGUgVS5TLiwgRXVyb3BlIGFuZCBBc2lhLiBUaGF0IHdpbGwgY29tZSBieSB0aGUgbWlkZGxlIG9mIEFwcmlsLiAiVGhpcyBpcyB0aGUgYmlnZ2VzdCBpbXBhY3QgZXZlciBpbiB0aGUgaGlzdG9yeSBvZiB0aGUgYXV0b21vYmlsZSBpbmR1c3RyeSwiIHNheXMgS29qaSBFbmRvLCBtYW5hZ2luZyBkaXJlY3RvciBhdCBBZHZhbmNlZCBSZXNlYXJjaCBKYXBhbiBpbiBUb2t5by4gTXVjaCBvZiBKYXBhbidzIGF1dG8gaW5kdXN0cnkg4oCUIHRoZSBzZWNvbmQgbGFyZ2VzdCBzdXBwbGllciBvZiBjYXJzIGluIHRoZSB3b3JsZCDigJQgcmVtYWlucyBpZGxlLiBGZXcgcGxhbnRzIHdlcmUgc2VyaW91c2x5IGRhbWFnZWQgYnkgdGhlIHF1YWtlLCBidXQgd2l0aCBzdXBwbGllcyBvZiB3YXRlciBhbmQgZWxlY3RyaWNpdHkgZmxlZXRpbmcsIG5vIG9uZSBjYW4gc2F5IHdoZW4gZmFjdG9yaWVzIHdpbGwgY3JhbmsgdXAuIFNvbWUgYXV0byBhbmFseXN0cyBzYXkgaXQgY291bGQgYmUgYXMgbGF0ZSBhcyB0aGlzIHN1bW1lci4gSGl0YWNoaSBBdXRvbW90aXZlIFN5c3RlbXMsIHdoaWNoIG1ha2VzIHBhcnRzIHN1Y2ggYXMgYWlyZmxvdyBzZW5zb3JzIGFuZCBkcml2ZSBjb250cm9sIHN5c3RlbXMsIGlzIHdhaXRpbmcgZm9yIGl0cyBzdXBwbGllcnMgdG8gcmVzdGFydCB3aGlsZSBkZWFsaW5nIHdpdGggaXRzIG93biBwcm9ibGVtcy4gSXRzIHBsYW50cyBhcmUgd2l0aG91dCB3YXRlciBhbmQgZ2FzLCBhbmQgaGF2ZSByb2xsaW5nIGVsZWN0cmljaXR5IGJsYWNrb3V0cy4gV29ya2VycyBhcmUgcmVwYWlyaW5nIGNydW1wbGVkIGNlaWxpbmdzLCBmYWxsZW4gd2FsbHMgYW5kIGNsZWFuaW5nIHVwIHNoYXR0ZXJlZCBnbGFzcy4gQSBzcG9rZXNtYW4gc2F5cyBoZSBkb2Vzbid0IGtub3cgd2hlbiBpdHMgcGxhbnRzIHdpbGwgcmVvcGVuLiBUaGUgdW5jZXJ0YWlubHkgaGFzIHN1cHBsaWVycywgYXV0b21ha2VycyBhbmQgZGVhbGVycyBzY3JhbWJsaW5nLiBBbmQgaXQgZXhwb3NlcyB0aGUgdnVsbmVyYWJpbGl0eSBvZiB0aGUgd29ybGQncyBtb3N0IGNvbXBsZXggc3VwcGx5IGNoYWluLCB3aGVyZSAzLDAwMCBwYXJ0cyBnbyBpbnRvIHNpbmdsZSBjYXIgb3IgdHJ1Y2suIEVhY2ggb25lIG9mIHRob3NlIHBhcnRzIGlzIG1hZGUgdXAgb2YgaHVuZHJlZHMgb2Ygb3RoZXIgcGllY2VzIHN1cHBsaWVkIGJ5IG11bHRpcGxlIGNvbXBhbmllcy4gQWxsIGl0IHRha2VzIGlzIG9uZSBwYXJ0IHRvIGdvIG1pc3Npbmcgb3IgYXJyaXZlIGxhdGUsIGFuZCBhIHZlaGljbGUgY2FuJ3QgYmUgYnVpbHQuIFdoZW4gR2VuZXJhbCBNb3RvcnMgYnJpZWZseSBzaHV0IGEgcGlja3VwIHBsYW50IGluIFNocmV2ZXBvcnQsIExhLiwgZHVlIHRvIGEgbGFjayBvZiBwYXJ0cywgaXQgY2F1c2VkIHRoZSBwYXJ0aWFsIGNsb3Npbmcgb2YgYSBOZXcgWW9yayBmYWN0b3J5IHRoYXQgc3VwcGxpZXMgZW5naW5lcyBmb3IgdGhvc2UgdHJ1Y2tzLiAgU3dlZGVuJ3MgVm9sdm8gaGFzIHdhcm5lZCB0aGF0IGl0cyBwcm9kdWN0aW9uIGNvdWxkIGJlIGRpc3J1cHRlZCBiZWNhdXNlIGl0IGlzIGRvd24gdG8gYSB3ZWVrJ3Mgd29ydGggb2Ygc29tZSBwYXJ0cy4gQ2FyIGJ1eWVycyB3aWxsIHNvb24gc2VlIGhpZ2hlciBwcmljZXMgYW5kIGZld2VyIGNob2ljZXMuIFNvbWUgY2FyIGNvbG9ycyB3aWxsIGJlIGhhcmRlciB0byBnZXQgYmVjYXVzZSBhIHBhaW50IHBpZ21lbnQgZmFjdG9yeSBpbiBKYXBhbiB3YXMgZGFtYWdlZCBhbmQgc2h1dCBwcm9kdWN0aW9uLiBBcyBhIHJlc3VsdCwgRm9yZCBpcyB0ZWxsaW5nIGRlYWxlcnMgdG8gc3RvcCBvcmRlcmluZyAidHV4ZWRvIGJsYWNrIiBtb2RlbHMgb2YgaXRzIEYtMTUwIHBpY2t1cCBhbmQgRXhwZWRpdGlvbiBhbmQgTmF2aWdhdG9yIFNVVnMuIEl0J3MgYWxzbyBzaGlmdGluZyBhd2F5IGZyb20gc29tZSByZWRzLiBUaGUgbW92ZXMgYXJlIHByZWNhdXRpb25hcnksIEZvcmQgc2F5cy4gQ2hyeXNsZXIgdG9sZCBkZWFsZXJzIGl0IHdhcyB0ZW1wb3JhcmlseSByZXN0cmljdGluZyBvcmRlcnMgb2YgdmVoaWNsZXMgaW4gMTAgY29sb3JzLiBUaGF0IHdvcnJpZXMgc29tZSBkZWFsZXJzLCBlc3BlY2lhbGx5IHdoZW4gcG9wdWxhciBjb2xvcnMgbGlrZSBibGFjayBjb3VsZCBiZSBpbiBzaG9ydCBzdXBwbHkgIkl0J3MgaGFyZCBlbm91Z2ggdG8gc2VsbCBhICQ2MCwwMDAgTmF2aWdhdG9yIGluIHRoaXMgZWNvbm9teSwiIHNheXMgRm9ydHVuZXMgTydOZWFsLCBnZW5lcmFsIG1hbmFnZXIgYXQgUGFyayBDaXRpZXMgRm9yZCBpbiBEYWxsYXMuICAiV2UgZG9uJ3Qgd2FudCB0byBoYXZlIHRvIHRlbGwgY3VzdG9tZXJzLCAnWW91J3ZlIGdvdCB0byBwaWNrIGFub3RoZXIgY29sb3IuJyIgQ3VzdG9tZXJzIGFsc28gZmFjZSByaXNpbmcgcHJpY2VzIGZvciBtb2RlbHMgbGlrZSBUb3lvdGEncyBQcml1cywgd2hpY2ggaXMgbWFkZSBvbmx5IGluIEphcGFuLiBGZWFycyBvZiBmYWxsaW5nIHN1cHBseSBoYXZlIHNvbWUgZGVhbGVycyBkcml2aW5nIGEgaGFyZCBiYXJnYWluIHdpdGggY3VzdG9tZXJzIHdobyB3YW50IHRoZSBmdWVsLWVmZmljaWVudCBoeWJyaWQgYXMgZ2Fzb2xpbmUgcHJpY2VzIHJpc2UuIFJlY2VudCBkaXNjb3VudHMgb2YgNSB0byAxMCBwZXJjZW50IG9uIHRoYXQgY2FyIGFyZSBkaXNhcHBlYXJpbmcuIEphcGFuZXNlIGNhcm1ha2Vycywgd2hvIGhhdmUgc2h1dCBtb3N0IG9mIHRoZWlyIGRvbWVzdGljIHBsYW50cywgYXJlIHdhcm5pbmcgdGhhdCBzb21lIG9mIHRoZWlyIG92ZXJzZWFzIGZhY3RvcmllcyB3aWxsIHN0b3AgcnVubmluZywgdG9vLCBpbiBhbiBlZmZvcnQgdG8gY29uc2VydmUgc3VwcGxpZXMuIFRveW90YSBhbmQgSG9uZGEgZXhwZWN0IHNodXRkb3ducyBhdCBOb3J0aCBBbWVyaWNhbiBwbGFudHMuIEhvbmRhIHNheXMgcHJvZHVjdGlvbiBjb3VsZCBiZSBpbnRlcnJ1cHRlZCBhZnRlciBBcHJpbCAxLiBFdmVuIHRob3VnaCBtb3N0IG9mIGl0cyBwYXJ0cyBhcmUgc291cmNlZCBpbiB0aGUgcmVnaW9uLCBhIGZldyBjcml0aWNhbCBvbmVzIHN0aWxsIGNvbWUgZnJvbSBKYXBhbi4gR29sZG1hbiBTYWNocyBlc3RpbWF0ZXMgdGhlIHNodXRkb3ducyBhcmUgY29zdGluZyB0aGUgSmFwYW4gYXV0b21ha2VycyAkMjAwIG1pbGxpb24gYSBkYXksIHdoaWNoIGFkZHMgdXAgdG8gJDIuOCBiaWxsaW9uIGZvciBqdXN0IHRoZSBwYXN0IHR3byB3ZWVrcy4gRWFjaCB3ZWVrIG9mIGNvbnRpbnVlZCBzaHV0ZG93bnMgY29zdHMgJDEuNCBiaWxsaW9uLiBCeSBjb21wYXJpc29uLCBUb3lvdGEgbWFkZSAkMi4zIGJpbGxpb24gaW4gYWxsIG9mIDIwMTAsIGFuZCBpdHMgc3VkZGVuIGFjY2VsZXJhdGlvbiByZWNhbGxzIGNvc3QgJDIgYmlsbGlvbi4gVGhlIGNvc3Qgb2YgZGFtYWdlIGZyb20gSmFwYW4ncyBuYXR1cmFsIGRpc2FzdGVyIGNvdWxkIGR3YXJmIHRoYXQgcmVjYWxsLCB3aGljaCB3YXMgY29uc2lkZXJlZCBUb3lvdGEncyBiaWdnZXN0IGNyaXNpcyBldmVyLiBNdWNoIGRlcGVuZHMgb24gaG93IG1hbnkgc3BhcmUgY29tcG9uZW50cyBhdXRvbWFrZXJzIGhhdmUgaW4gc3RvY2sgLS0gd2hpY2ggaXMgcHJvYmFibHkgdmVyeSBmZXcuIEphcGFuJ3MgYXV0b21ha2VycyBzcGVhcmhlYWRlZCBsZWFuIG1hbnVmYWN0dXJpbmcsIHVuZGVyIHdoaWNoIHBhcnRzIGFyZSBkZWxpdmVyZWQgdG8gcGxhbnRzIHRoZSBzYW1lIGRheSB0aGV5IGFyZSB1c2VkLiBBdXRvbWFrZXJzIGFyZSBzdGlsbCByZWNlaXZpbmcgcGFydHMgdGhhdCB3ZXJlIHB1dCBvbiBzaGlwcyB3ZWVrcyBhZ28sIGJ1dCB0aG9zZSBzdXBwbGllcyB3aWxsIGR3aW5kbGUuIEFmdGVyIHRoZSBlYXJ0aHF1YWtlIGhpdCwgY2FyIGNvbXBhbmllcyBiZWdhbiB0aGUgbG9uZyBwcm9jZXNzIG9mIGZpZ3VyaW5nIG91dCB3aGljaCBwYXJ0cyBhcmUgaW4gZGFuZ2VyIG9mIHJ1bm5pbmcgb3V0LiBUaGF0IG1lYW5zIGZpZ3VyaW5nIG91dCB3aGVyZSBldmVyeSBwaWVjZSBpbiBldmVyeSBwYXJ0IGNvbWVzIGZyb20uICJFdmVyeW9uZSBpcyBwdXR0aW5nIG9uIHRoZSBicmFrZXMgYSBsaXR0bGUgYml0IGFuZCB0YWtpbmcgYSBsb29rIHRvIHNlZSB3aGVyZSB0aGV5IGFyZSBhZmZlY3RlZCwiIHNheXMgUGF1bCBOZXd0b24sIGFuIGFuYWx5c3Qgd2l0aCBJSFMgQXV0b21vdGl2ZS4gQ29tcGFuaWVzIHdpbGwgc2h1dCBkb3duIHBsYW50cyBhcyBzb29uIGFzIHNvbWUgcGFydHMgc3RhcnQgcnVubmluZyBvdXQsIHdoaWNoIGNvdWxkIHN0YXJ0IGhhcHBlbmluZyBpbiB0aGUgbmV4dCBmb3VyIHRvIHNpeCB3ZWVrcywgaGUgc2F5cy4gIllvdSB3aWxsIHNlZSBpdCBoYXBwZW4gYWxtb3N0IGRhaWx5LiIgSUhTIEF1dG9tb3RpdmUgcHJlZGljdHMgdGhhdCBvbmUtdGhpcmQgb2YgZGFpbHkgZ2xvYmFsIGF1dG9tb3RpdmUgcHJvZHVjdGlvbiB3aWxsIGJlIGN1dCBiZWNhdXNlIG9mIHN1cHBseSBjaGFpbiBkaXNydXB0aW9ucy4gVGhhdCBtZWFucyBhYm91dCA1IG1pbGxpb24gdmVoaWNsZXMgd29ybGR3aWRlIHdvbid0IGJlIGJ1aWx0LCBvdXQgb2YgdGhlIDcyIG1pbGxpb24gdmVoaWNsZXMgcGxhbm5lZCBmb3IgcHJvZHVjdGlvbiBpbiAyMDExLiBUbyBnZXQgYSBmZWVsIGZvciB0aGUgc3VwcGx5IGNoYWluLCBjb25zaWRlciBhIGNhciByYWRpby4gSXQncyBtYWRlIHVwIG9mIGh1bmRyZWRzIG9mIHBpZWNlcyBmcm9tIGFsbCBvdmVyIHRoZSB3b3JsZC4gVGhlIGRpc3BsYXkgbWF5IGNvbWUgZnJvbSBhIHN1cHBsaWVyIGluIEphcGFuLCB3aGlsZSB0aGUgd2lyaW5nIGFuZCBjaXJjdWl0cnkgb3JpZ2luYXRlIGluIEtvcmVhLiBUaGUgcGxhc3RpYyBrbm9icyBjb3VsZCBjb21lIGZyb20gYSBjb21wYW55IGluIENoaW5hLCBhbmQgdGhlIG1ldGFsIHN0cnVjdHVyZSB0aGF0IGhvbGRzIGl0IGFsbCB0b2dldGhlciBpcyBzaGlwcGVkIGZyb20gSW5kaWEuIEFsbCB0aG9zZSBwYXJ0cyBjb21lIHRvZ2V0aGVyIGF0IGRpZmZlcmVudCB0aW1lczogVGhlIHdpcmluZyBhbmQgZWxlY3Ryb25pYyBjb21wb25lbnRzIGFyZSBpbnN0YWxsZWQgaW50byB0aGUgbWV0YWwgZnJhbWUuIFRoZW4gdGhhdCBwaWVjZSBpcyBzaGlwcGVkIHRvIGFub3RoZXIgc3VwcGxpZXIsIHdobyBzbmFwcyBvbiB0aGUgcGxhc3RpYyBmYWNlIGFuZCBrbm9icy4gVGhlIHJhZGlvIGNvdWxkIHBhc3MgdGhyb3VnaCB0aHJlZSBvciBmb3VyIHN1cHBsaWVycyBiZWZvcmUgYmVpbmcgcHV0IG9uIGEgc2hpcCwgd2hlcmUgaXQgd2lsbCBzcGVuZCB3ZWVrcyBhdCBzZWEgaGVhZGluZyB0byBpdHMgZmluYWwgZGVzdGluYXRpb246IFRoZSBhc3NlbWJseSBwbGFudC4gIlRoaXMgaXNuJ3QganVzdCBhcyBzdHJhaWdodGZvcndhcmQgYXMgYXNzZW1ibGluZyB0aGUgaVBhZCAyLCIgc2F5cyBCcmlhbiBKb2huc29uLCBhbiBhdXRvcyBhbmFseXN0IHdpdGggQmFyY2xheXMgQ2FwaXRhbC4gQW4gZXhhbXBsZSBvZiBKYXBhbidzIGltcG9ydGFuY2UgaW4gYXV0byBwYXJ0czogaXRzIHN1cHBsaWVycyBtYWtlIG1hbnkgb2YgdGhlIGVsZWN0cm9uaWMgY29tcG9uZW50cyB0aGF0IGNvbnRyb2wgbXVzaWMgc3lzdGVtcyBhbmQgdGhlIHNlbnNvcnMgdGhhdCBtb25pdG9yIGZ1ZWwgbGV2ZWxzIGFuZCBhaXJiYWdzLiBBbHRob3VnaCBtb3N0IEphcGFuZXNlIGF1dG8gcGFydHMgbWFrZXJzIGFyZSBub3QgbG9jYXRlZCBpbiB0aGUgYXJlYXMgdGhhdCB3ZXJlIGludW5kYXRlZCBieSB0aGUgdHN1bmFtaSwgYmV0d2VlbiBxdWFrZSBkYW1hZ2UsIGVsZWN0cmljaXR5IG91dGFnZXMgYW5kIHdhdGVyIGN1dG9mZnMsIG1hbnkgZmFjdG9yaWVzIGluIHRoZSByZWdpb24gaGF2ZSByZW1haW5lZCBwYXJhbHl6ZWQgZXZlciBzaW5jZS4gU3VwcGxpZXJzIGNvdWxkIGJlIHVwIGFuZCBydW5uaW5nIGFnYWluIGluIEFwcmlsLCBidXQgaXQgY291bGQgdGFrZSB1bnRpbCBNYXkgb3IgSnVuZSBmb3IgdGhlIGVudGlyZSBzdXBwbHkgYmFzZSB0byBiZSBiYWNrLiBTb21lIGNhciBtYW51ZmFjdHVyZXJzLCBtZWFud2hpbGUsIGFyZSBjb25zaWRlcmluZyBzaGlmdGluZyBvcGVyYXRpb25zIHRvIGRlYWwgd2l0aCB0aGUgY3Jpc2lzLiBOaXNzYW4sIGZvciBleGFtcGxlLCBpcyB0aGlua2luZyBvZiBtb3Zpbmcgc29tZSBvZiBpdHMgZW5naW5lIHByb2R1Y3Rpb24gdG8gVGVubmVzc2VlIGZyb20gSmFwYW4uIEJ1dCB0aG9zZSBzaGlmdHMgd29uJ3QgYmUgZWFzeS4gRmlyc3QsIGxlYW4gaW52ZW50b3JpZXMgbWFrZSBpdCBoYXJkIGZvciBhdXRvbWFrZXJzIHRvIHN1ZGRlbmx5IGNoYW5nZSBzb3VyY2VzIG9mIHN1cHBseS4gQW5kIHBsYW50cyB0aGF0IGJ1aWxkIGNhciBlbGVjdHJvbmljcywgZm9yIGV4YW1wbGUsIGhhdmUgc3RyaW5nZW50IHNhZmV0eSByZXF1aXJlbWVudHMgYW5kIGV4YWN0aW5nIGhpZ2gtdGVjaCBzcGVjaWZpY2F0aW9ucyB0aGF0IGxpbWl0IGEgY29tcGFueSdzIGZsZXhpYmlsaXR5LCBzYXlzIENocmlzdG9waGVyIFJpY2h0ZXIsIGFuIGluZHVzdHJ5IGFuYWx5c3QgYXQgQ0xTQSBBc2lhIENhcGl0YWwgTWFya2V0cy4gIEEgc3VwcGxpZXIgZm9yIHRoZSBjb21wdXRlciBjaGlwIHRoYXQgdHJpZ2dlcnMgYW4gYWlyIGJhZywgZm9yIGV4YW1wbGUsIGNhbid0IGJlIHN3aXRjaGVkIHF1aWNrbHkuIEJ1dCBjYXIgZXhlY3V0aXZlcyBjYW4ga2VlcCB0aGlzIGZyb20gYmVjb21pbmcgYSB0b3RhbCBkaXNhc3RlcjogVGhleSBjYW4gYWxsb2NhdGUgc2NhcmNlIHBhcnRzIHRvIHRoZWlyIG1vcmUgcG9wdWxhciBvciBwcm9maXRhYmxlIHZlaGljbGVzLCBrZWVwaW5nIHRob3NlIGFzc2VtYmx5IGxpbmVzIHJ1bm5pbmcgd2hpbGUgc2xvd2luZyBkb3duIHRoZSBsZXNzIHByb2ZpdGFibGUgb25lcy4gVGhhdCdzIHdoYXQgbWFueSBwZW9wbGUgYmVsaWV2ZSBHTSBkaWQgd2hlbiBpdCBkZWNpZGVkIHRvIGNsb3NlIHRoZSBTaHJldmVwb3J0IHBsYW50LCBiZWNhdXNlIGRlYWxlcnMgaGF2ZSBhbXBsZSBpbnZlbnRvcnkgb2YgYm90aCB0cnVja3MgbWFkZSB0aGVyZSwgbW9yZSB0aGFuIHR3byBtb250aHMnIHdvcnRoLiBOZXd0b24gc2F5cyBjYXIgY29tcGFuaWVzIHdpbGwgZG8gdGhlaXIgYmVzdCB0byBrZWVwIHByb2R1Y2luZyB0aGUgY2FycyBwZW9wbGUgd2FudC4gIkl0J3MgcXVpdGUgYSBsb3QgdG8gcHJpb3JpdGl6ZSwgYnV0IHRoZXknbGwgZG8gaXQsIiBoZSBzYXlzLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAS71rtiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGQ4ZTU0YWM0M2FmNzAyNTU=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0NBUg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAS761TSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyKPXCj1wp</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyXrhR64Uf</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAx49cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyQo9cKPXD</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyQo9cKPXD</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAABRktA==</field><field name="id" class="java.lang.String">rO0ABXQAEGY5YjhmYTU1NGVmYWJiM2I=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEK3AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE1NDEw</field><field name="title" class="java.lang.String">rO0ABXQAMlRyYWlsYmxhemluZyBJc3JhZWxpIEVsZWN0cmljIENhciBDb21wYW55IHRvIENsb3Nl</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT7kW3iAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDdmMzk1NjY5YTg2MmYzNTM=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZJTkw=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT7pgdSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1euFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1uuFHrhR7</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1RR64UeuF</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1XCj1wo9c</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA01wo9cKPX</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAXUlA==</field><field name="id" class="java.lang.String">rO0ABXQAEDUyYzMxYTE2ZjQzMDcwYzU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHdhAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDY3ODg=</field><field name="title" class="java.lang.String">rO0ABXQAMU5vIERlYWw6IEJ1eWVycyBXaWxsIFNlZSBGZXdlciBEaXNjb3VudHMgZm9yIENhcnM=</field><field name="content" class="java.lang.String">rO0ABXQXOEZvciB5ZWFycywgQW1lcmljYW5zIHNob3BwaW5nIGZvciBjYXJzIHdlcmUgdHJlYXRlZCB0byBhbGwgc29ydHMgb2YgZGVhbHMgYW5kIGluY2VudGl2ZXMsIGVzcGVjaWFsbHkgYXQgdGhlIGVuZCBvZiBzdW1tZXIuIFRoaW5rIENhc2ggZm9yIENsdW5rZXJzLCB3aGljaCBwYWlkIHVwIHRvICQ0LDUwMCwgb3IgcHJvbW90aW9ucyB0aGF0IG9mZmVyZWQgZW1wbG95ZWUgZGlzY291bnRzIHRvIGV2ZXJ5b25lLiBUaG9zZSBkYXlzIGFyZSBvdmVyLiBEZWFscyBhcmUgZ2V0dGluZyBtb3JlIHNjYXJjZSBiZWNhdXNlIGF1dG9tYWtlcnMsIG5ld2x5IGxlYW4gYW5kIHByb2ZpdGFibGUsIGFyZSBob2xkaW5nIHRoZSBsaW5lIG9uIHRob3NlIHByb2ZpdC1lYXRpbmcgcHJvbW90aW9ucy4gSW4gSnVseSwgdGhleSBvZmZlcmVkICQxLDAwMCBsZXNzIGluIGluY2VudGl2ZXMgcGVyIGNhciB0aGFuIGEgeWVhciBlYXJsaWVyLCBhY2NvcmRpbmcgdG8gRWRtdW5kcy5jb20uIEFuZCB3aXRoIG5vIG9uZSBleHBlY3RpbmcgdGhlIGdvdmVybm1lbnQgdG8gb2ZmZXIgYSByZXBlYXQgb2YgdGhlIENsdW5rZXJzIHByb2dyYW0sIGdldCByZWFkeSBmb3IgZmV3ZXIgZGlzY291bnRzIG9uIHlvdXIgbmV4dCBjYXIuICJUaGlzIG1heSBiZSBhcyBnb29kIGFzIGl0IGdldHMsIGFuZCBnZXQgdXNlZCB0byBpdCwiIHNheXMgSmVmZiBTY2h1c3RlciwgdGhlIGV4ZWN1dGl2ZSBkaXJlY3RvciBvZiBmb3JlY2FzdGluZyBmb3IgSi5ELiBQb3dlciBhbmQgQXNzb2NpYXRlcy4gQXMgYSByZXN1bHQsIFUuUy4gYXV0byBzYWxlcyBhcmUgYXQgYSBzdGFuZHN0aWxsLCB3aXRoIHBvdGVudGlhbCBidXllcnMgd2FpdGluZyBmb3IgbW9yZSBkZWFscyBidXQgYXV0b21ha2VycyByZXNpc3RpbmcuIFRoZSBpbmR1c3RyeSBleHBlY3RzIHRoaXMgdG8gYmUgdGhlIHdvcnN0IEF1Z3VzdCBpbiAxOCB5ZWFycywgd2l0aCBzYWxlcyBiYXJlbHkgb3ZlciAxIG1pbGxpb24gY2FycyBhbmQgdHJ1Y2tzLiBTYWxlcyBhcmUgZXhwZWN0ZWQgdG8gZmFsbCAzIHBlcmNlbnQgZnJvbSBKdWx5LCBhY2NvcmRpbmcgdG8gY2FyLXByaWNpbmcgd2Vic2l0ZSBUcnVlY2FyLmNvbS4gQXVndXN0IHVzdWFsbHkgc2VlcyBzdHJvbmcgc2FsZXMgYXMgYXV0b21ha2VycyBvZmZlciBkZWFscyB0byBjbGVhciBvdXQgdGhlIGxvdHMgZm9yIG5ldyBtb2RlbHMuIEluIEF1Z3VzdCAyMDA3LCBiZWZvcmUgdGhlIHJlY2Vzc2lvbiwgYXV0b21ha2VycyBzb2xkIG5lYXJseSAxLjUgbWlsbGlvbiBuZXcgY2FycyBhbmQgdHJ1Y2tzLiBMYXN0IEF1Z3VzdCwgd2hlbiBzYWxlcyB3ZXJlIGF0IGEgMzAteWVhciBsb3csIHRoZSBnb3Zlcm5tZW50IGNhbWUgdG8gdGhlIHJlc2N1ZS4gQ2FzaCBmb3IgQ2x1bmtlcnMsIHdoaWNoIHBhaWQgYnV5ZXJzIHVwIHRvICQ0LDUwMCBwZXIgdmVoaWNsZSwgYm9vc3RlZCBzYWxlcyBieSBhYm91dCBhIHRoaXJkIHRvIDEuMiBtaWxsaW9uLiBCdXQgdGhpcyB5ZWFyLCB0aGUgZ292ZXJubWVudCBpcyBvbiB0aGUgc2lkZWxpbmVzLCBhbmQgc28gYXJlIG1hbnkgYnV5ZXJzLiBUaGUgc3RhbmRvZmYgYmV0d2VlbiBidXllcnMgYW5kIGNhciBtYWtlcnMgY291bGQgY29udGludWUgdGhyb3VnaCB0aGUgcmVzdCBvZiB0aGUgeWVhciB1bmxlc3MgY29tcGFuaWVzIHN3ZWV0ZW4gZGVhbHMgb3IgdGhlcmUncyBzb21lIHNvcnQgb2YgZ292ZXJubWVudCBpbnRlcnZlbnRpb24sIHNheXMgSmVzc2UgVG9wcmFrLCBUcnVlQ2FyJ3MgdmljZSBwcmVzaWRlbnQgb2YgaW5kdXN0cnkgdHJlbmRzIGFuZCBhbmFseXNpcy4gIldlIHJlYWxseSBuZWVkIHNvbWUgc29ydCBvZiBjYXRhbHlzdCB0byB0YWtlIHVzIHVwIHRvIGEgaGlnaGVyIGxldmVsLCIgaGUgc2F5cy4gQ2FyIHNhbGVzIGFyZSBzdGlsbCBmYXIgYmVsb3cgbm9ybWFsIGxldmVscyBiZWNhdXNlLCB3aXRoIHVuZW1wbG95bWVudCBzdGlsbCBoaWdoIGFuZCBob21lIHZhbHVlcyBzaGFycGx5IGxvd2VyLCBjb25zdW1lcnMganVzdCBkb24ndCBmZWVsIGNvbmZpZGVudCBlbm91Z2ggdG8gYnV5LiBPdGhlcnMgc2F5IGEgaGVhbHRoaWVyIGVjb25vbXkg4oCUIG5vdCBpbmNlbnRpdmVzIOKAlCBpcyB0aGUgb25seSByZWFsIGRyaXZlciBmb3IgaGlnaGVyIHNhbGVzLiAiSnVzdCBsb3dlcmluZyBwcmljZXMgaXMgbm90IGdvaW5nIHRvIHNvbHZlIHRoZSBwcm9ibGVtLCIgc2F5cyBHZW9yZ2UgUGlwYXMsIEZvcmQncyB0b3AgVS5TLiBzYWxlcyBhbmFseXN0LiAiVGhlIGtleSBpcyBhbiBpbXByb3ZlZCBjb25zdW1lciBvdXRsb29rLiIgQXV0b21ha2VycyBoYXZlIGJlZW4gdm93aW5nIHRvIGN1dCBiYWNrIG9uIGluY2VudGl2ZXMgZm9yIHllYXJzLiBCdXQgdGhpcyB0aW1lLCB0aGV5IG1lYW4gaXQuIEluIHRoZSBsYXN0IGZldyB5ZWFycywgRGV0cm9pdCBhdXRvbWFrZXJzIOKAlCBhbmQsIHRvIGEgbGVzc2VyIGV4dGVudCwgdGhlaXIgZm9yZWlnbiByaXZhbHMg4oCUIGhhdmUgY2xvc2VkIHBsYW50cywgY3V0IHRlbnMgb2YgdGhvdXNhbmRzIG9mIHdvcmtlcnMgYW5kIGFsaWduZWQgcHJvZHVjdGlvbiB3aXRoIGRlbWFuZC4gQmVjYXVzZSB0aGV5J3JlIHByb2R1Y2luZyBmZXdlciB2ZWhpY2xlcywgdGhleSBkb24ndCBuZWVkIHRvIG9mZmVyIGRpc2NvdW50cyB0byBnZXQgcmlkIG9mIGV4Y2VzcyBjYXJzIGFuZCB0cnVja3MuIFNpbmNlIDIwMDQsIGF1dG9tYWtlcnMgaGF2ZSBjdXQgdGhlaXIgTm9ydGggQW1lcmljYW4gcHJvZHVjdGlvbiBjYXBhY2l0eSBieSAxOCBwbGFudHMgYW5kIDIgbWlsbGlvbiB2ZWhpY2xlcywgQ2l0aSBJbnZlc3RtZW50IFJlc2VhcmNoIGF1dG8gYW5hbHlzdCBJdGF5IE1pY2hhZWxpIHNheXMuIEF0IHRoZSBlbmQgb2YgSnVseSwgYXV0b21ha2VycyBoYWQgNTIgZGF5cycgc3VwcGx5IG9mIHZlaGljbGVzIHRvIHNlbGwsIGRvd24gZnJvbSA2OSBkYXlzJyBpbiBKdWx5IDIwMDgsIGFjY29yZGluZyB0byBKLkQuIFBvd2VyIGFuZCBBc3NvY2lhdGVzLiBBdXRvbWFrZXJzIG5lZWQgYSBjZXJ0YWluIGFtb3VudCBvZiBjdXNoaW9uIHRvIGFzc3VyZSB0aGF0IHRoZXJlIGFyZSBlbm91Z2ggY2FycyBhbmQgdHJ1Y2tzIGF2YWlsYWJsZSwgYnV0IGFueXRoaW5nIGFib3ZlIGEgNjAtZGF5IHN1cHBseSBpcyBnZW5lcmFsbHkgY29uc2lkZXJlZCB0b28gaGlnaC4gV2l0aG91dCB0aG9zZSBjYXBhY2l0eSBjdXRzLCB0aGUgY3VycmVudCBkZXByZXNzZWQgbWFya2V0IHdvdWxkIGhhdmUgYmVlbiBhIGRpc2FzdGVyIGZvciBEZXRyb2l0IGF1dG9tYWtlcnMsIHNpbmNlIHRoZXkgd291bGQgYmUgcHJvZHVjaW5nIGZhciB0b28gbWFueSB2ZWhpY2xlcy4gQnV0IEdlbmVyYWwgTW90b3JzIENvLiBhbmQgRm9yZCBNb3RvciBDby4gaGF2ZSBiZWVuIHByb2ZpdGFibGUgdGhpcyB5ZWFyIGFuZCBzdGFuZCB0byBtYWtlIGV2ZW4gbW9yZSBtb25leSB3aGVuIHRoZSBtYXJrZXQgcmVjb3ZlcnMuIEFuYWx5c3RzIGJlbGlldmUgdGhhdCAxNCBtaWxsaW9uIHZlaGljbGVzIGlzIGEgbmF0dXJhbCBsZXZlbCBmb3IgYW5udWFsIFUuUy4gc2FsZXMsIGJhc2VkIG9uIHBvcHVsYXRpb24sIHRoZSByYXRlIHBlb3BsZSBzY3JhcCB1c2VkIGNhcnMgYW5kIG90aGVyIGZhY3RvcnMuIEouRC4gUG93ZXIgZXhwZWN0cyBzYWxlcyB0aGlzIHllYXIgdG8gYmUgYXJvdW5kIDExLjYgbWlsbGlvbiwgdXAgZnJvbSAxMC40IG1pbGxpb24gbGFzdCB5ZWFyLiBCZWZvcmUgdGhlIHJlY2Vzc2lvbiBhbmQgYmFua3J1cHRjaWVzLCBhdXRvIHNhbGVzIGhpdCBhYm91dCAxNyBtaWxsaW9uLCBidXQgdGhhdCB3YXMgcGFydGx5IGJlY2F1c2UgdGhleSB3ZXJlIGp1aWNlZCBieSBvdmVycHJvZHVjdGlvbiBhbmQgZ2VuZXJvdXMgaW5jZW50aXZlcy4gU29tZSBhbmFseXN0cyB0aGluayBhdXRvbWFrZXJzIHNob3VsZCBzcGVlZCB0aGUgcmVjb3Zlcnkgd2l0aCBhbiBleWUtcG9wcGluZyDigJQgYnV0IG5vdCBwcm9maXQtYnVzdGluZyDigJQgZGVhbC4gTWljaGFlbGkgc2F5cyB0aGUgYmlnZ2VzdCBmYWN0b3IgaG9sZGluZyBiYWNrIHNhbGVzIGlzIGNvbnN1bWVycycgZmVhciBvZiBsYXlvZmZzLCBzbyBoZSB0aGlua3MgYXV0b21ha2VycyBzaG91bGQgb2ZmZXIgdG8gYnV5IGJhY2sgY2FycyBpZiBwZW9wbGUgbG9zZSB0aGVpciBqb2JzLiBIeXVuZGFpIHdvbiBjdXN0b21lcnMgbGFzdCB5ZWFyIGJ5IGxhdW5jaGluZyBhIGJvbGQgcHJvZ3JhbSB0aGF0IGRpZCBqdXN0IHRoYXQuIFRoZSBTb3V0aCBLb3JlYW4gYXV0b21ha2VyJ3MgbWFya2V0IHNoYXJlIGlzIHVwIDM4IHBlcmNlbnQgc2luY2UgaXQgYmVnYW4gIkh5dW5kYWkgQXNzdXJhbmNlIiBpbiBKYW51YXJ5IDIwMDkuIFRoYXQncyBwcm9vZiBzdWNoIHByb2dyYW1zIGNhbiB3b3JrLCBNaWNoYWVsaSBzYXlzLiBUb3ByYWsgdGhpbmtzIHRoZSBnb3Zlcm5tZW50IHNob3VsZCBndWFyYW50ZWUgY2FyIGxvYW5zLCBjaGFyZ2luZyBidXllcnMgYSBzbWFsbCBwcmVtaXVtIHRvIGNvdmVyIHRoZSBjb3N0IG9mIGFueSBkZWZhdWx0cy4gQnV0IHNvIGZhciwgdGhlcmUncyBiZWVuIG5vIGRpc2N1c3Npb24gb2Ygc3VjaCBhIHBsYW4sIG9yIG9mIGEgcmVwZWF0IG9mIHRoZSAkMi44OCBiaWxsaW9uIENhc2ggZm9yIENsdW5rZXJzIHByb2dyYW0uIFVuZGVyIHRoYXQgcHJvZ3JhbSwgZGVhbGVycyBvZmZlcmVkIGN1c3RvbWVycyBnb3Zlcm5tZW50LWZ1bmRlZCByZWJhdGVzIG9mICQzLDUwMCB0byAkNCw1MDAgdG8gdHJhZGUgaW4gb2xkZXIgbW9kZWxzIGZvciBuZXcgb25lcyB0aGF0IGdvdCBiZXR0ZXIgZ2FzIG1pbGVhZ2UuIERlYWxzIGFyZSBzdGlsbCBvdXQgdGhlcmUgb24gc29tZSBtb2RlbHMsIGFuZCBpbmNlbnRpdmUgc3BlbmRpbmcgZm9yIEFzaWFuIGF1dG9tYWtlcnMgY3JlcHQgdXAgdGhpcyB5ZWFyIGFmdGVyIFRveW90YSBNb3RvciBDb3JwLidzIHNhZmV0eSByZWNhbGxzLiBCdXQgZ2VuZXJhbGx5LCBhdXRvbWFrZXJzIGFyZSBub3QgYm9vc3RpbmcgaW5jZW50aXZlcy4gSW4gQXVndXN0IDIwMDgsIEdNIG9mZmVyZWQgYW4gYXZlcmFnZSBvZiAkNCwwNTMgcGVyIHZlaGljbGUgaW4gaW5jZW50aXZlczsgdGhpcyBBdWd1c3QsIGl0J3MgZXhwZWN0ZWQgdG8gc3BlbmQgJDMwMCBsZXNzIHRoYW4gdGhhdCwgYWNjb3JkaW5nIHRvIFRydWVDYXIuIFRoYXQgbGVhdmVzIG1hbnkgYnV5ZXJzIGluIGxpbWJvLiBMb3JpIFBpZXRyeWdhIG9mIEFubiBBcmJvciwgTWljaC4sIGhhcyBhIDIwMDcgSG9uZGEgQ1ItViB3aXRoIDEwIG1vbnRocyBsZWZ0IG9uIGEgZm91ci15ZWFyIGxlYXNlLiBTaGUncyBjb25zaWRlcmluZyBidXlpbmcgYSBuZXcgQ1ItViwgYnV0IG9ubHkgaWYgdGhlIHByaWNlIGlzIHJpZ2h0LiBQaWV0cnlnYSwgNTEsIGEgbWVkaWNhbCBlcXVpcG1lbnQgc2FsZXN3b21hbiwgcGF5cyAkNDUwIHBlciBtb250aC4gSWYgc2hlIGNhbiBnZXQgYSBkZWFsZXIgdG8gYnV5IG91dCBoZXIgbGVhc2UgYW5kIGdpdmUgaGVyIGEgQ1ItViBmb3IgdGhlIHNhbWUgcGF5bWVudCBvciBsZXNzLCBzaGUgbWlnaHQgc2lnbiB0aGUgcGFwZXJzLiBCdXQgd2l0aCBvbmx5IDQwLDAwMCBtaWxlcyBvbiBoZXIgY3VycmVudCBDUi1WLCBzaGUncyBhYmxlIHRvIHdhaXQgaWYgdGhlIGRlYWxlcnMgZG9uJ3QgY29vcGVyYXRlLiAiSWYgaXQncyBub3QgYSBkZWFsLCBJIGRvbid0IG5lZWQgdG8gZG8gaXQsIiBzaGUgc2F5cy4gUGlldHJ5Z2EgcGxhbnMgdG8gcGxheSBkZWFsZXJzIGFnYWluc3QgZWFjaCBvdGhlciB0byB0cnkgdG8gZ2V0IGEgYmV0dGVyIGRlYWwuIFNjaHVzdGVyIHNheXMgZXZlbnR1YWxseSBjYXJzIHdpbGwgd2VhciBvdXQgYW5kIHBlb3BsZSB3aWxsIGhhdmUgdG8gYnV5LCByZWdhcmRsZXNzIG9mIHRoZSBpbmNlbnRpdmVzLiBCdXQgaW4gdGhlIG1lYW50aW1lLCBoZSBzYXlzLCAiaXQgdGFrZXMgYSB3aGlsZSB0byBnZXQgb2ZmIHRoZSBkcnVnLiI=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAASrGhBiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDk0NmRlYmM2YTA5MTljNGI=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0NBUg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAASrLqnSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAizMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAjj1wo9cKP</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAiij1wo9cK</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAjgAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAjgAAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAACSd1A==</field><field name="id" class="java.lang.String">rO0ABXQAEDEzMjZiMGNmODc2ZjQwNWE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMzTAAAA==</field></document></documents><date>2015-05-07T06:39:52-0500</date></cacheEntry>
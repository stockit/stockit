<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hJdCB3YXMgb25jZSBzdWNoIGEgc2V4eSBwcm9mZXNzaW9uIGluc3BpcmluZyB0aGUgcmVhbG0gb2YgU2hlcm1hbiBNY0NveSBpbiB0aGUgbm92ZWwgVGhlIEJvbmZpcmUgb2YgdGhlIFZhbml0aWVzIEluIHRoZSAxOTgwcyB0aGUgZXhjaXRlbWVudCBpbiB0aGUgdHJhZGluZyByb29tIHdpdGggaHVuZHJlZHMgb2YgcGVvcGxlIHRhbGtpbmcgb24gdGhlIHBob25lIHdhcyBwYWxwYWJsZSBsaWtlIGEgc3BvcnRpbmcgZXZlbnQgc2FpZCBLZXJyeSBTdGVpbiBoZWFkIG9mIGNyZWRpdCB0cmFkaW5nIGF0IExsb3lkcyBTZWN1cml0aWVzIEluYyBUaG9zZSBkYXlzIGFyZSBnb25lIEl0cyBzdXJwcmlzaW5nIGhvdyBxdWlldCBhIHBsYWNlIGNvdWxkIGJlIGNvbXBhcmVkIHRvIHdoYXQgSSBoYWQga25vd24gc2FpZCBTdGVpbiB3aG8gYmVnYW4gdHJhZGluZyBoaWdoeWllbGQgYm9uZHMgaW4gMTk4NSBhdCBEcmV4ZWwgQnVybmhhbSBMYW1iZXJ0IEluYyB0aGUgaG91c2Ugb2YgTWljaGFlbCBNaWxrZW4gd2hvIHdhcyBuaWNrbmFtZWQgdGhlIGp1bmtib25kIGtpbmcgQXMgYm9uZHRyYWRpbmcgdm9sdW1lcyBoYXZlIHNocnVuayBzbyBoYXZlIHRoZSBudW1iZXIgb2Ygam9icyBsZWF2aW5nIGV2ZW4gc29tZSBvZiB0aGUgbW9zdCBzZW5pb3IgdHJhZGVycyBhbmQgc2FsZXNtZW4gbW92aW5nIGZyb20gZmlybSB0byBmaXJtIFRoZXJlcyBhIHdhdmUgb2Ygam91cm5leW1lbiBpbiBhbiBpbmR1c3RyeSB0aGF0IHVzZWQgdG8gYXR0cmFjdCB0aGUgeW91bmcgaW4gdGhyb25ncyBsdXJlZCBieSBtb25leSBhbmQgcHJlc3RpZ2UgYWNjb3JkaW5nIHRvIE1pY2hhZWwgTWFsb25leSBwcmVzaWRlbnQgb2YgZml4ZWRpbmNvbWUgcmVjcnVpdGluZyBmaXJtIE1pY2hhZWwgUCBNYWxvbmV5IEluYyBUaGUgYnVzaW5lc3MgbW9kZWwgaXMgYnJva2VuIGFuZCA1MCBwZXJjZW50IG9mIHRoZSBwZW9wbGUgaW4gb3VyIHdvcmxkIHdobyBhcmUgaW4gdHJhZGluZyBhcmUgc3R1Y2sgcmlnaHQgbm93IE1hbG9uZXkgc2FpZCBpbiBhbiBpbnRlcnZpZXcgaW4gaGlzIE5ldyBZb3JrIG9mZmljZSBGb3IgZXZlcnkgMTAgb2YgdGhlbSB0aGVyZXMgZ29pbmcgdG8gYmUgdGhyZWUgb3IgZm91ciBsZWZ0IGhlIHNhaWQgV2hhdHMgdGhlIHRpbWVmcmFtZSBXZWxsIGV2ZXJ5Ym9keSBJIGtub3cgaXMgbG9va2luZyBmb3IgYSBqb2IgIG5vdCBsb29raW5nIGZvciBhIGpvYiBsb29raW5nIGZvciBhIGNhcmVlciBUcmFkaW5nIFNsdW1wIFdoaWxlIHRoZSBzaXplIG9mIHRoZSBVUyBib25kIG1hcmtldCBiYWxsb29uZWQgYnkgbW9yZSB0aGFuIDUgdHJpbGxpb24gc2luY2UgMjAwOCB0byAzNzggdHJpbGxpb24gYXQgeWVhcmVuZCB0cmFkaW5nIGluIHRoZSBkZWJ0IGhhcyBzbHVtcGVkIGFjY29yZGluZyB0byBkYXRhIGZyb20gdGhlIFNlY3VyaXRpZXMgSW5kdXN0cnkgIEZpbmFuY2lhbCBNYXJrZXRzIEFzc29jaWF0aW9uIEF2ZXJhZ2UgZGFpbHkgdHVybm92ZXIgZmVsbCB0byA4MDkgYmlsbGlvbiBsYXN0IHllYXIgZnJvbSAxMDQgdHJpbGxpb24gaW4gMjAwOCBUaGF0cyBwYXJ0bHkgYmVjYXVzZSBiYW5rcyBoYXZlIHB1bGxlZCBiYWNrIGZyb20gbWFraW5nIG1hcmtldHMgaW4gYm9uZHMgYXMgaGlnaGVyIGNhcGl0YWwgcmVxdWlyZW1lbnRzIG1ha2UgaXQgbGVzcyBwcm9maXRhYmxlIFRoZSBidXNpbmVzcyB3aGVyZSBidXllcnMgYW5kIHNlbGxlcnMgYXJlIHByaW1hcmlseSBtYXRjaGVkIG92ZXIgdGhlIHRlbGVwaG9uZSBvciB0aHJvdWdoIGVtYWlscyBoYXMgYWxzbyBzdWZmZXJlZCBzaHJpbmtpbmcgbWFyZ2lucyBiZWNhdXNlIG9mIHJlZ3VsYXRvcm1hbmRhdGVkIHByaWNlIHRyYW5zcGFyZW5jeSBhbmQgdGhlIHJpc2Ugb2YgZWxlY3Ryb25pYyB0cmFkaW5nIFRyYW5zYWN0aW9uIGNvc3RzIGRlY2xpbmVkIGFmdGVyIHRoZSBGaW5hbmNpYWwgSW5kdXN0cnkgUmVndWxhdG9yeSBBdXRob3JpdHkgaW50cm9kdWNlZCBpdHMgYm9uZHByaWNlIHJlcG9ydGluZyBzeXN0ZW0gY2FsbGVkIFRyYWNlIGluIDIwMDIgV2FsbCBTdHJlZXQgYm9uZCB0cmFkZXJzIGxvc3QgYWJvdXQgMSBiaWxsaW9uIGluIGZlZXMgaW4gdGhlIG5leHQgeWVhciBvciBhYm91dCAyMDAwIGEgdHJhZGUgYWNjb3JkaW5nIHRvIGEgc3R1ZHkgaW4gdGhlIEpvdXJuYWwgb2YgRmluYW5jaWFsIEVjb25vbWljcyBUaGUgc3lzdGVtIGlzIGludGVuZGVkIHRvIHByb3ZpZGUgdHJhbnNwYXJlbmN5IGluIGFuIG9wYXF1ZSBtYXJrZXQgYW5kIGhlbHAgcHJldmVudCBpbnZlc3RvcnMgZnJvbSBiZWluZyBmbGVlY2VkIERlY2xpbmluZyBQYXkgRGVzcGl0ZSBhdHRlbXB0cyB0byBnZXQgaXQgdG8gYmUgZWxlY3Ryb25pYyBpdHMgc3RpbGwgYSB2b2ljZSBtYXJrZXQgTWFyayBQaWJsIGhlYWQgb2YgcmVzZWFyY2ggYW5kIGZpeGVkIGluY29tZSBzdHJhdGVneSBhdCBDYW5hY2NvcmQgR2VudWl0eSBzYWlkIGluIGEgdGVsZXBob25lIGludGVydmlldyBPbiB0aGUgZXF1aXR5IHNpZGUgdGhlcmVzIGp1c3Qgb25lIHNlY3VyaXR5IHdoZXJlYXMgb24gdGhlIGJvbmRzIG9mIGFuIGlzc3VlciB0aGVyZSBjb3VsZCBiZSBmaXZlIG9yIHNpeCBvciBtb3JlIHRoZXJlIGNvdWxkIGJlIGRpZmZlcmVudCBzdWJvcmRpbmF0ZWQgaXNzdWVzIFRvIGEgbGFyZ2UgZGVncmVlIHRoYXQgY29tcGxleGl0eSB3aXRoaW4gdGhlIGNhcGl0YWwgc3RydWN0dXJlIGRvZXNudCBhbGxvdyBpdHNlbGYgdG8gZWFzaWx5IGJlIGF1dG9tYXRlZCBTaW5jZSB0aGUgY3JlZGl0IGNyaXNpcyBqb2JzIGFuZCBjb21wZW5zYXRpb24gaGF2ZSBkZWNsaW5lZCBhcyBXYWxsIFN0cmVldCByZXRyZW5jaGVkIFRvdGFsIHBheSBhdCB0aGUgYmlnZ2VzdCBiYW5rcyBoYXMgZmFsbGVuIGFzIG11Y2ggYXMgNTAgcGVyY2VudCBmb3IgaGlnaHlpZWxkIGFuZCBpbnZlc3RtZW50Z3JhZGUgdHJhZGVycyBhbmQgdXAgdG8gMjUgcGVyY2VudCBmb3IgZGlzdHJlc3NlZGRlYnQgdHJhZGVycyBzaW5jZSAyMDEwIGFjY29yZGluZyB0byBOZXcgWW9ya2Jhc2VkIHJlY3J1aXRtZW50IGZpcm0gT3B0aW9ucyBHcm91cCBUaGUgbnVtYmVyIG9mIGNyZWRpdCB0cmFkZXJzIHdvcmtpbmcgZm9yIHRoZSBmaXJtcyBwbHVuZ2VkIDMwIHBlcmNlbnQgdG8gYWJvdXQgMzAwIG92ZXIgdGhlIHNhbWUgcGVyaW9kIGV2ZW4gYXMgY29tcGFuaWVzIGlzc3VlZCByZWNvcmQgYW1vdW50cyBvZiBib25kcyBpbiB0aGUgVVMgdG8gdGFrZSBhZHZhbnRhZ2Ugb2YgaGlzdG9yaWNhbGx5IGxvdyBpbnRlcmVzdCByYXRlcyBhY2NvcmRpbmcgdG8gT3B0aW9ucyBHcm91cCBhbmQgZGF0YSBjb21waWxlZCBieSBCbG9vbWJlcmcgTGlxdWlkaXR5IERyb3AgVGhlIGRlY2xpbmUgb2YgdGhlIHByb2Zlc3Npb24gbWF0dGVycyBiZWNhdXNlIGl0cyBiZWNvbWUgaGFyZGVyIGZvciBldmVyeW9uZSB0byBidXkgYW5kIHNlbGwgZGVidCBhcyBiYW5rcyBjdXQgdGhlIGFtb3VudCBvZiBjYXBpdGFsIHRoZXlyZSBkZXZvdGluZyB0byB0cmFkaW5nIFByaW1hcnkgZGVhbGVycyBzbGFzaGVkIHRoZSBhbW91bnQgb2YgYm9uZHMgdGhleSBob2xkIGJ5IDc2IHBlcmNlbnQgZnJvbSBhIHJlY29yZCBoaWdoIGluIE9jdG9iZXIgMjAwNyB0byA1NiBiaWxsaW9uIGluIE1hcmNoIDIwMTMgd2hlbiB0aGUgRmVkZXJhbCBSZXNlcnZlIGNoYW5nZWQgdGhlIHdheSBpdCByZXBvcnRlZCB0aGUgZGF0YSBUdXJub3ZlciBpbiBpbnZlc3RtZW50Z3JhZGUgY29ycG9yYXRlIGJvbmRzIGZlbGwgdG8gYSA3MiBwZXJjZW50IGFubnVhbGl6ZWQgcmF0ZSBkdXJpbmcgdGhlIGZpcnN0IGhhbGYgb2YgdGhpcyB5ZWFyIHRoZSBsZWFzdCBpbiB0aGUgcGFzdCBkZWNhZGUgYWNjb3JkaW5nIHRvIGEgU2VwdCAxMiBCYXJjbGF5cyBQbGMgcmVwb3J0IExpcXVpZGl0eSBtYXkgb25seSBnZXQgd29yc2Ugd2hlbiBib25kIHByaWNlcyBzdGFydCBmYWxsaW5nIGFzIHRoZSBGZWQgd2l0aGRyYXdzIGl0cyByZWNvcmQgc3RpbXVsdXMgd2hpY2ggbWF5IG1ha2UgdGhlIG1hcmtldHMgc3dpbmdzIG1vcmUgZHJhbWF0aWMgYWNjb3JkaW5nIHRvIFBldGVyIFRjaGlyIGhlYWQgb2YgbWFjcm8gc3RyYXRlZ3kgYXQgQnJlYW4gQ2FwaXRhbCBMTEMgaW4gTmV3IFlvcmsgQmFua3MgYXJlIGxlc3MgYWJsZSB0byBhbmQgd2lsbGluZyB0byB0YWtlIHJpc2tzIFRjaGlyIHNhaWQgVGhlIHJlYWwgcmlzayB3aGVuIHJhdGVzIHJpc2UgaXMgdGhhdCB5b3UgZ2V0IGhlaWdodGVuZWQgdm9sYXRpbGl0eSBiZWNhdXNlIHRoZSBuYXR1cmUgb2YgdGhpcyBidXNpbmVzcyBoYXMgY2hhbmdlZCBTYWxvbW9uIEJyb3RoZXJzIFRoZSBjaGFuZ2VzIHRvIHRoZSBib25kIGJ1c2luZXNzIGhhdmUgYWZmZWN0ZWQgc29tZSBvZiB0aGUgaW5kdXN0cnlzIG1vc3Qgc2Vhc29uZWQgdmV0ZXJhbnMgSm9uIEJhc3Mgc2F0IGp1c3QgZml2ZSBkZXNrcyBmcm9tIGNoaWVmIGV4ZWN1dGl2ZSBvZmZpY2VyIEpvaG4gR3V0ZnJldW5kIGF0IFNhbG9tb24gQnJvdGhlcnMgSW5jIHRoZSBmaXJtIHRoYXQgaW5zcGlyZWQgVG9tIFdvbGZlcyBUaGUgQm9uZmlyZSBvZiB0aGUgVmFuaXRpZXMgSGUgd2VudCBvbiB0byBoZWxwIHJ1biBVQlMgQUdzIGZpeGVkaW5jb21lIGJ1c2luZXNzIGJlZm9yZSBsZWF2aW5nIHRoZSBTd2lzcyBiYW5rIGluIDIwMDkgYWZ0ZXIgbmluZSB5ZWFycyBOb3cgdGhlIDUyeWVhcm9sZCBCYXNzIGlzIG9uIGhpcyBmaWZ0aCBqb2IgaW4gYXMgbWFueSB5ZWFycyBqb2luaW5nIEplZmZlcmllcyBMTEMgaW4gYSBzZW5pb3Igc2FsZXMgcm9sZSBhZnRlciBsZXNzIHRoYW4gdHdvIHllYXJzIGF0IEJOUCBQYXJpYmFzIFNBIGFzIGRlcHV0eSBoZWFkIG9mIGZpeGVkIGluY29tZSBIaXMgcmVjZW50IHBvc2l0aW9ucyBpbmNsdWRlZCBmaXZlIG1vbnRocyBhdCBNaXp1aG8gU2VjdXJpdGllcyBVU0EgSW5jIGEgeWVhciBhdCBub3diYW5rcnVwdCBNRiBHbG9iYWwgSG9sZGluZ3MgTHRkIGFuZCBsZXNzIHRoYW4gdHdvIHllYXJzIGF0IEJUSUcgTExDIGFjY29yZHQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0xMi0wM1QwMDowMDowMFogVE8gMjAxNC0wNy0xMFQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDU2NzU=</field><field name="title" class="java.lang.String">rO0ABXQAL0F1dGhvciBNaWNoYWVsIExld2lzOiBVUyBTdG9jayBNYXJrZXQgSXMgUmlnZ2Vk</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUURW8yAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDE3OWM0OWVkNzM5NWQ1ODM=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNDSFc=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUUWgiiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7bhR64Ueu</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7fXCj1wo9</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7JmZmZmZm</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7VHrhR64U</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7Fwo9cKPX</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAG2w3A==</field><field name="id" class="java.lang.String">rO0ABXQAEDFjMzJjZmY3NTJmMTdlZDg=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFqNAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDU2Njc=</field><field name="title" class="java.lang.String">rO0ABXQAP1N0b2NrIFRyYWRlciBTcGVlZCBDcmF6ZSBUaHJlYXRlbnMgU3RhYmlsaXR5LCBTY2huZWlkZXJtYW4gU2F5cw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUUWgiiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGM2NjJiNmY3NTE3MmI1MmM=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNDSFc=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUUbqISAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7a4UeuFHs</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7uFHrhR64</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7aPXCj1wp</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7czMzMzMz</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7NcKPXCj2</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAIxI5A==</field><field name="id" class="java.lang.String">rO0ABXQAEDMzZTcyMzhlNGVmZDUyMGI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEXtAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDI2NjM=</field><field name="title" class="java.lang.String">rO0ABXQAPidEYXJrIE1hcmtldHMnIE1heSBQb3NlIEdyZWF0ZXIgVGhyZWF0IHRoYW4gSGlnaC1TcGVlZCBUcmFkaW5n</field><field name="content" class="java.lang.String">rO0ABXQe01NvbWUgZm9ybWVyIHJlZ3VsYXRvcnMgYW5kIGFjYWRlbWljcyBzYXkgc28gbXVjaCB0cmFkaW5nIGlzIG5vdyBoYXBwZW5pbmcgYXdheSBmcm9tIGV4Y2hhbmdlcyB0aGF0IHB1YmxpY2x5IHF1b3RlZCBwcmljZXMgZm9yIHN0b2NrcyBvbiBleGNoYW5nZXMgbWF5IG5vIGxvbmdlciBwcm9wZXJseSByZWZsZWN0IHdoZXJlIHRoZSBtYXJrZXQgaXMuIEFuZCB0aGlzIHByb2JsZW0gY291bGQgY29zdCBpbnZlc3RvcnMgZmFyIG1vcmUgbW9uZXkgdGhhbiBhbnkgc2hlbmFuaWdhbnMgcmVsYXRlZCB0byBoaWdoIGZyZXF1ZW5jeSB0cmFkaW5nLiBXaGVuIHRoZSBhdmVyYWdlIGludmVzdG9yLCBvciBldmVuIGEgYmlnIHBvcnRmb2xpbyBtYW5hZ2VyLCB0cmllcyB0byBidXkgb3Igc2VsbCBzaGFyZXMgbm93LCB0aGUgdHJhZGUgaXMgb2Z0ZW4gbWF0Y2hlZCB1cCB3aXRoIGFub3RoZXIgb3JkZXIgYnkgYSBkZWFsZXIgaW4gYSBzby1jYWxsZWQgImRhcmsgcG9vbCwiIG9yIGFub3RoZXIgYWx0ZXJuYXRpdmUgdG8gZXhjaGFuZ2VzLiBUaG9zZSB3aG9zZSB0cmFkZSBuZXZlciBtYWtlcyBpdCB0byBhbiBleGNoYW5nZSBjYW4gYmVuZWZpdCBhcyB0aGUgYnJva2VyIGF2b2lkcyBwYXlpbmcgYW4gZXhjaGFuZ2UgdHJhZGluZyBmZWUsIHRha2luZyBjb3N0IG91dCBvZiB0aGUgcHJvY2Vzcy4gSW52ZXN0b3JzIHdpdGggbGFyZ2Ugb3JkZXJzIGNhbiBhbHNvIG1vcmUgZWFzaWx5IGRpc2d1aXNlIHdoYXQgdGhleSBhcmUgZG9pbmcsIHJlZHVjaW5nIHRoZSBkYW5nZXIgdGhhdCBvdGhlcnMgd2lsbCBoZWFyIHdoYXQgdGhleSBhcmUgZG9pbmcgYW5kIHRha2UgYWR2YW50YWdlIG9mIHRoZW0uIEJ1dCB0aGUgcmlzZSBvZiAib2ZmLWV4Y2hhbmdlIHRyYWRpbmciIGlzIHRlcnJpYmxlIGZvciB0aGUgYnJvYWRlciBtYXJrZXQgYmVjYXVzZSBpdCByZWR1Y2VzIHByaWNlIHRyYW5zcGFyZW5jeSBhIGxvdCwgY3JpdGljcyBvZiB0aGUgc3lzdGVtIHNheS4gVGhlIHByb2JsZW0gaXMgdGhlc2UgdmVudWVzIHByaWNlIHRoZWlyIHRyYW5zYWN0aW9ucyBvZmYgb2YgdGhlIHB1Ymxpc2hlZCBwcmljZXMgb24gdGhlIGV4Y2hhbmdlcyAtIGFuZCBpZiB0aG9zZSBwcmljZXMgbGFjayBpbnRlZ3JpdHkgdGhlbiAiZGFyayBwb29sIiBwcmljaW5nIHdpbGwgaXRzZWxmIGJlIHNrZXdlZC4gQXJvdW5kIDQwIHBlcmNlbnQgb2YgYWxsIFUuUy4gc3RvY2sgdHJhZGVzLCBpbmNsdWRpbmcgYWxtb3N0IGFsbCBvcmRlcnMgZnJvbSAibW9tIGFuZCBwb3AiIGludmVzdG9ycywgbm93IGhhcHBlbiAib2ZmIGV4Y2hhbmdlLCIgdXAgZnJvbSBhcm91bmQgMTYgcGVyY2VudCBzaXggeWVhcnMgYWdvLiBUaGlzIHRyZW5kIGlzICJhIHJlYWwgY29uY2VybiwiIEpvaG4gUmFtc2F5LCBmb3JtZXIgaGVhZCBvZiB0aGUgVS5TLiBTZWN1cml0aWVzIGFuZCBFeGNoYW5nZSBDb21taXNzaW9uJ3MgVHJhZGluZyBhbmQgTWFya2V0cyBkaXZpc2lvbiwgc2FpZCBvbiB0aGUgc2lkZWxpbmVzIG9mIGEgY29uZmVyZW5jZSBpbiAgRmVicnVhcnkuICJXZSBoYXZlIGFjYWRlbWljIGRhdGEgbm93IHRoYXQgc3VnZ2VzdHMgdGhhdCwgeWVzLCBpbiBmYWN0IHRoZXJlIGlzIGEgcG9pbnQgYmV5b25kIHdoaWNoIHRoZSBsZXZlbCBvZiBkYXJrIHRyYWRpbmcgZm9yIHBhcnRpY3VsYXIgc2VjdXJpdGllcyBjYW4gcmVhbGx5IGVyb2RlIG1hcmtldCBxdWFsaXR5LiIgR2l2ZW4gdGhlICQyMS40IHRyaWxsaW9uIHdvcnRoIG9mIFUuUy4gc3RvY2tzIHRoYXQgd2VyZSB0cmFkZWQgaW4gMjAxMiwgZXZlbiBhIHNtYWxsIG1pc3ByaWNpbmcgY2FuIG1vdmUgdGhlIG5lZWRsZSBieSB0ZW5zIG9mICBiaWxsaW9ucyBvZiBkb2xsYXJzLiBMZXdpcycgbmV3IGJvb2ssICJGbGFzaCBCb3lzOiBBIFdhbGwgU3RyZWV0IFJldm9sdCwiIHNheXMgdGhhdCBoaWdoIHNwZWVkIHRyYWRlcnMgYmlsayB0aGF0IGtpbmQgb2YgbW9uZXkgZnJvbSBpbnZlc3RvcnMgZXZlcnkgeWVhci4gSGUgZm9jdXNlcyBvbiBob3cgaGlnaC1mcmVxdWVuY3kgdHJhZGluZyBmaXJtcyB1c2UgdWx0cmEtIGZhc3QgdGVsZWNvbSBsaW5rcywgbWljcm93YXZlIHRvd2VycyBhbmQgc3BlY2lhbCBhY2Nlc3MgdG8gZXhjaGFuZ2VzIHRvIGdhaW4gYW4gZWRnZSBvdmVyIG90aGVyIHRyYWRlcnMuIFRoZSBVLlMuIEp1c3RpY2UgRGVwYXJ0bWVudCBpcyBpbnZlc3RpZ2F0aW5nIGhpZ2gtc3BlZWQgdHJhZGluZyBmb3IgcG9zc2libGUgaW5zaWRlciB0cmFkaW5nLCBBdHRvcm5leSBHZW5lcmFsIEVyaWMgSG9sZGVyIHRvbGQgbGF3bWFrZXJzIG9uIEZyaWRheS4gT3RoZXIgcmVndWxhdG9ycyBhbmQgdGhlIEZCSSBoYXZlIGFsc28gY29uZmlybWVkIHRoZXkgYXJlIGxvb2tpbmcgaW50byBwb3RlbnRpYWwgd3Jvbmdkb2luZyBieSBoaWdoLWZyZXF1ZW5jeSBzdG9jayB0cmFkZXJzLiBCdXQgd2hldGhlciBvciBub3QgaGlnaC1zcGVlZCB0cmFkaW5nIGlzIHNpbmlzdGVyLCByZXZlbnVlcyBmb3IgdGhlc2UgZmlybXMgaGF2ZSBiZWVuIGRlY2xpbmluZyBmb3IgeWVhcnM6IGluIDIwMTMsIHRoZXkgd2VyZSBhYm91dCAkMSBiaWxsaW9uLCBhZnRlciBwZWFraW5nIGF0IGFyb3VuZCAkNSBiaWxsaW9uIGluIDIwMDksIGFjY29yZGluZyB0byBlc3RpbWF0ZXMgYnkgUm9zZW5ibGF0dCBTZWN1cml0aWVzLiBJZiwgYXMgTGV3aXMgc2F5cywgdGhlc2UgdHJhZGVycyBhcmUgZG9pbmcgbm90aGluZyBtb3JlIHRoYW4gcmlwcGluZyBvZmYgdGhlIHJlc3Qgb2YgdGhlIG1hcmtldCwgaXQncyBhIHNocmlua2luZyBwcm9ibGVtLiBNZWFud2hpbGUsIGFzIHRoZSByZXZlbnVlIGZyb20gaGlnaCBmcmVxdWVuY3kgdHJhZGluZyBoYXMgd2FuZWQsIHRyYWRpbmcgb3V0c2lkZSBvZiBwdWJsaWMgZXhjaGFuZ2VzIGhhcyBiZWVuIG9uIHRoZSByaXNlLCB0aHJlYXRlbmluZyB0byByb2xsIGJhY2sgZGVjYWRlcyBvZiBwcm9ncmVzcyB0b3dhcmRzIG1vcmUgdHJhbnNwYXJlbnQgbWFya2V0cy4gRVhDSEFOR0VTIEFSRSBMQVNUIFJFU09SVCBBIGJyb2tlcmFnZSBoYXMgc2V2ZXJhbCB3YXlzIHRvIGZpbGwgY3VzdG9tZXJzJyBvcmRlcnMuIEl0IGNhbiBtYXRjaCBidXkgYW5kIHNlbGwgb3JkZXJzIGZyb20gaXRzIG93biBjdXN0b21lcnMsIGtub3duIGFzICJpbnRlcm5hbGl6aW5nLCIgb3Igc2VsbCBpdHMgb3JkZXJzIHRvIGFub3RoZXIgYnJva2VyIHRoYXQgY2FuIGRvIHRoZSBzYW1lLiBCcm9rZXJzIGFsc28gc2VuZCB0cmFkZXMgdG8gImRhcmsgcG9vbHMsIiB3aGljaCBhcmUgc2ltaWxhciB0byBleGNoYW5nZXMsIGV4Y2VwdCB0aGUgZmVlcyBhcmUgbG93ZXIgYW5kIHRoZXkgYXJlIGFub255bW91cywgd2l0aCBvcmRlcnMgZ29pbmcgdW5yZXBvcnRlZCB1bnRpbCBhZnRlciB0aGV5IGhhdmUgYmVlbiBleGVjdXRlZC4gQW5kIGZpbmFsbHksIHRoZXkgY2FuIHNlbmQgdHJhZGVzIHRvIGV4Y2hhbmdlcywgd2hlcmUgdGhleSB3aWxsIGhhdmUgdG8gcGF5IGhpZ2hlciBmZWVzLiAiVGhlIGV4Y2hhbmdlcyBoYXZlIGJhc2ljYWxseSBiZWNvbWUgdGhlIGxpcXVpZGl0eSB2ZW51ZSBvZiBsYXN0IHJlc29ydCwiIHNhaWQgTWFub2ogTmFyYW5nLCBjaGllZiBleGVjdXRpdmUgb2YgSEZUIGZpcm0gYW5kIHRlY2hub2xvZ3kgdmVuZG9yIFRyYWRld29yeC4gQXJvdW5kIDQ1IGRhcmsgcG9vbHMgYW5kIGFzIG1hbnkgYXMgMjAwIGludGVybmFsaXplcnMgY29tcGV0ZSB3aXRoIDEzIHB1YmxpYyBleGNoYW5nZXMgaW4gdGhlIFUuUy4gVG9wIGludGVybmFsaXplcnMgaW5jbHVkZSB1bml0cyBvZiBLQ0cgSG9sZGluZ3MsIENpdGFkZWwsIFVCUywgYW5kIENpdGlncm91cC4gRGFyayBwb29sIG9wZXJhdG9ycyBpbmNsdWRlIENyZWRpdCBTdWlzc2UgYW5kIE1vcmdhbiBTdGFubGV5LiBBbGwgb2YgdGhlIGZpcm1zIGRlY2xpbmVkIHRvIGNvbW1lbnQsIG9yIGRpZCBub3QgcmVzcG9uZCB0byByZXF1ZXN0cyBmb3IgY29tbWVudCBmb3IgdGhpcyBzdG9yeS4gV2l0aCB0aGUgaW5jZW50aXZlIHRvIHVzZSB0aGUgcHVibGljIG1hcmtldCBlcm9kaW5nLCBtYW55IHRyYWRlcnMgaW5jcmVhc2luZ2x5IHNlZSBleGNoYW5nZXMsIHdoaWNoIGFyZSBvZnRlbiBkZXNjcmliZWQgYXMgImxpdCIgbWFya2V0cyBiZWNhdXNlIG9mIHRoZSBwcmljaW5nIHRyYW5zcGFyZW5jeSwgYXMgYmF0dGxlZ3JvdW5kcyBmb3IgaGlnaCBmcmVxdWVuY3kgdHJhZGVycywgc2FpZCBSaG9kcmkgUGllcmNlLCBvZiB0aGUgQ0ZBIGluc3RpdHV0ZS4gVGhlIHJlc3VsdCBpcyBhbiBpbmNyZWFzaW5nbHkgc3BsaW50ZXJlZCBtYXJrZXQuICJTbyBtdWNoIG9mIHRoZSBVLlMuIGVxdWl0eSBvcmRlciBmbG93IGlzIGluIG5vdyBpbiB0aGUgZGFyaywgb3Igc2lwaG9uZWQgb2ZmLCB0aGF0IGl0IG5ldmVyIGhpdHMgdGhlIGxpdCBleGNoYW5nZXMsIGFuZCB0aGVyZSBpcyBqdXN0IGEgbG90IGxlc3MgaW4gdGhlIHdheSBvZiB0cmFkaW5nIG9wcG9ydHVuaXRpZXMsIiBzYWlkIE1hcmsgR29ydG9uLCBDRU8gb2YgaGlnaCBmcmVxdWVuY3kgdHJhZGluZyBmaXJtIFRvd2VyIFJlc2VhcmNoIENhcGl0YWwgTExDLiBJbiBhbiBhdHRlbXB0IHRvIHdpbiBiYWNrIHNvbWUgb2YgdGhlIHJldGFpbCBvcmRlcnMsIGV4Y2hhbmdlcyBzdWNoIGFzIEludGVyY29udGluZW50YWxFeGNoYW5nZSBHcm91cCdzIE5ldyBZb3JrIFN0b2NrIEV4Y2hhbmdlLCBOYXNkYXEgT01YIEdyb3VwLCBhbmQgQkFUUyBHbG9iYWwgTWFya2V0cywgaGF2ZSBhbGxvd2VkIGJyb2tlcmFnZXMgdG8gcGxhY2UgZGFyayBwb29sLXN0eWxlIG9yZGVycyBvbiB0aGVpciBwbGF0Zm9ybXMsIHdpdGggdGhlIHRyYWRlIGhpZGRlbiB1bnRpbCBhZnRlciBpdCBpcyBleGVjdXRlZC4gTllTRSwgTmFzZGFxLCBhbmQgQkFUUyBkZWNsaW5lZCB0byBjb21tZW50LiBUaGVyZSBpcyBubyBkb3VidCB0aGF0IHRyYWRpbmcgY29zdHMgb24gVS5TLiBtYXJrZXRzIGFyZSBsb3csIGFuZCB0aGF0IHJldGFpbCBpbnZlc3RvcnMgZ2V0IGEgYmV0dGVyIGRlYWwgdGhhbiB0aGV5IGRpZCB0d28gZGVjYWRlcyBhZ28uIEJ1dCBVLlMuIGFuZCBnbG9iYWwgdHJhZGluZyB0cmFuc2FjdGlvbiBjb3N0cyBoYXZlIGFjdHVhbGx5IGJlZW4gcmlzaW5nIGZvciB0aGUgcGFzdCB0d28geWVhcnMsIGFjY29yZGluZyB0byBhIENyZWRpdCBTdWlzc2UgcmVwb3J0IG9uIEZlYi4gMjAuIFRoYXQgbWF5IHN1Z2dlc3QgdGhlIGJlbmVmaXRzIGZyb20gb2ZmLWV4Y2hhbmdlIHRyYWRpbmcgYXJlIG5vIGxvbmdlciBhY2NydWluZyB0byBpbnZlc3RvcnMgYXMgbXVjaCBhcyB0aGV5IHByZXZpb3VzbHkgZGlkLiBUUkFERSBTRUNSRUNZIEEgbWFqb3IgY29uY2VybiB3aXRoIG9mZi1leGNoYW5nZSB0cmFkaW5nIGlzIHRoYXQgYnJva2VycyB3aG8gaW50ZXJuYWxpemUgdHJhZGVzIGFuZCBvZmZlciBkYXJrIHBvb2xzIGRvIG5vdCBwcm92aWRlIGFueSBkYXRhIHRvIHRoZSBtYXJrZXQgYmVmb3JlIHRoZSB0cmFkZSBpcyBleGVjdXRlZC4gT24gYSBzdG9jayBleGNoYW5nZSwgd2hlbiBhbiBvcmRlciBpcyBzZW50IGluLCB0aGUgcHJpY2Ugb2YgdGhlIHN0b2NrIGlzIGFkanVzdGVkIGFuZCBldmVyeW9uZSB3aXRoIGEgZGF0YSBmZWVkIHNlZXMgaXQuIERhcmsgcG9vbHMgb25seSByZXBvcnQgZGF0YSBhZnRlciBhIHRyYWRlIGhhcyBvY2N1cnJlZC4gQXQgdGhhdCBzdGFnZSwgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHRyYWRlIGhhcyBsaXR0bGUgaW5mbHVlbmNlIG9uIHRoZSBwcmljZS4gVGhlIHBvb2xzIHdlcmUgb3JpZ2luYWxseSBjcmVhdGVkIGZvciBpbnN0aXR1dGlvbnMgdG8gdHJhZGUgbGFyZ2UgYmxvY2tzIG9mIHN0b2NrIHdpdGhvdXQgY3JlYXRpbmcgYSBsYXJnZSBpbXBhY3QgaW4gdGhlIG1hcmtldC4gSWYgYW4gb3JkZXIgb2YgMSBtaWxsaW9uIHNoYXJlcyB3YXMgdHJhY2tlZCwgcGVvcGxlIG9uIHRoZSBvdGhlciBzaWRlIG9mIHRoZSB0cmFkZSBjb3VsZCBxdWlja2x5IGphY2sgdXAgcHJpY2VzIGFuZCB0aGUgb3JpZ2luYWwgaW52ZXN0b3IgY291bGQgZWFzaWx5IHBheSBtb3JlIHRoYW4gZXhwZWN0ZWQuICBFZGl0b3LigJlzIE5vdGU6ICBSZXRpcmUgMTAgWWVhcnMgRWFybGllciBXaXRoIFRoZXNlIDQgU3RvY2tzIAoKQnV0IG11Y2ggb2YgdGhlIHRyYWRpbmcgaXNuJ3QgbGlrZSB0aGF0IG5vdyAtIHRoZSBhdmVyYWdlIHNpemUgb2Ygb3JkZXJzIGluIGRhcmsgcG9vbHMgaGFzIHNocnVuayB0byBhcm91bmQgMjAwIHNoYXJlcywgc2ltaWxhciB0byBsZXZlbHMgb24gcHVibGljIGV4Y2hhbmdlcy4gIlRoZXJlIGFyZSBwb3RlbnRpYWwgY29zdHMgZnJvbSB0aGlzIHRyZW5kIG9mIGhhdmluZyBtb3JlIGFuZCBtb3JlIHRyYWRpbmcgYmVpbmcgdHJhZGVkIGF3YXkgZnJvbSBleGNoYW5nZXMsIiBzYWlkIHRoZSBDRkEncyBQaWVyY2UuIElFWCwgYSBuZXcgdHJhZGluZyBwbGF0Zm9ybSBoZXJhbGRlZCBpbiBMZXdpcydzICJGbGFzaCBCb3lzIiBhcyBhIGZhaXJlciBwbGFjZSB0byB0cmFkZSwgYWltcyB0byBiZWNvbWUgYW4gZXhjaGFuZ2Ugb25jZSBpdCBnYWlucyBtb3JlIHZvbHVtZSwgYnV0IGlzIGN1cnJlbnRseSBhIGRhcmsgcG9vbC4gSXRzIGF2ZXJhZ2Ugb3JkZXIgc2l6ZSBpcyBhcm91bmQgNzUwIHNoYXJlcy4gIklmIHRoZSBzaGlmdCBiZWNvbWVzIHRvbyBlZ3JlZ2lvdXMgdG8gb2ZmLWV4Y2hhbmdlIG1hcmtldHMsIHRoZW4gdGhlcmUgYXJlIG5vIGxpdCBleGNoYW5nZXMgdG8gcHJpY2UgYWdhaW5zdCwiIHNhaWQgQnJhZCBLYXRzdXlhbWEsIENFTyBvZiBJRVguICJJIGRvbid0IGtub3cgaWYgd2UgYXJlIG5lY2Vzc2FyaWx5IGF0IHRoZSBpbWJhbGFuY2UgeWV0LCIgaGUgc2FpZC4gUGllcmNlIHJlbGVhc2VkIGEgc3R1ZHkgb24gb2ZmLWV4Y2hhbmdlIHRyYWRpbmcgaW4gTm92ZW1iZXIgdGhhdCBzaG93ZWQgdGhhdCBvbmNlIG1vcmUgdGhhbiBoYWxmIG9mIHRoZSB0cmFkaW5nIHZvbHVtZSBpbiBhIHBhcnRpY3VsYXIgc2VjdXJpdHkgaXMgZG9uZSBvbiBkYXJrIHZlbnVlcywgdGhlIGFiaWxpdHkgdG8gcHJvcGVybHkgcHJpY2UgdGhhdCBzZWN1cml0eSBiZWNvbWVzIGRpZmZpY3VsdC4gVGhlIHByaWNlIGRpc2NvdmVyeSBwcm9jZXNzIGNhbiBiZWdpbiB0byBlcm9kZSB3aGVuIG9mZi1leGNoYW5nZSB0cmFkaW5nIGluIGEgc2VjdXJpdHkgc3VycGFzc2VzIGFzIGxpdHRsZSBhcyAxMCBwZXJjZW50LCBhY2NvcmRpbmcgdG8gYSBzdHVkeSBieSBDYXJvbGUgQ29tZXJ0b24tRm9yZGUgYW5kIFRhbGlzIFB1dG5pbnMgb2YgdGhlIFVuaXZlcnNpdHkgb2YgTWVsYm91cm5lLiBSZWd1bGF0b3JzIGluIENhbmFkYSBhbmQgQXVzdHJhbGlhIGhhdmUgdGFrZW4gc3RlcHMgdG8gY3VyYiB0aGUgZ3Jvd3RoIG9mIGRhcmsgdHJhZGluZyBpbiByZWNlbnQgeWVhcnMgYnkgcmVxdWlyaW5nLCBmb3IgaW5zdGFuY2UsIHRoYXQgb2ZmLWV4Y2hhbmdlIHRyYWRlcyBiZSBvZiBhIG1pbmltdW0gc2l6ZSBvciBoYXZlIGEgc2lnbmlmaWNhbnRseSBiZXR0ZXIgcHJpY2UgdGhhbiBjYW4gYmUgZm91bmQgb24gYW4gZXhjaGFuZ2UuIEF1dGhvcml0aWVzIGluIEV1cm9wZSBhbmQgSG9uZyBLb25nIGFyZSBleWluZyBzaW1pbGFyIHJ1bGVzLiAiT2JzZXJ2aW5nIHNvbWUgb2YgdGhlIHRyZW5kcyBpbiBVLlMuIG1hcmtldHMgYW5kIGVsc2V3aGVyZSBhbmQgc2VlaW5nIHRoYXQgZGFyayB0cmFkaW5nIGFjdGl2aXR5IGluIENhbmFkYSB3YXMgc2xvd2x5IGdyb3dpbmcgd2UgZmVsdCB0aGF0IHdlIHdhbnRlZCB0byBwdXQgc29tZSB2ZXJ5IGltcG9ydGFudCBwcmluY2lwbGVzIGluIHBsYWNlLCIgc2FpZCBXZW5keSBSdWRkLCBoZWFkIG9mIG1hcmtldCByZWd1bGF0aW9uIGF0IHRoZSBJbnZlc3RtZW50IEluZHVzdHJ5IFJlZ3VsYXRvcnkgT3JnYW5pemF0aW9uIG9mIENhbmFkYS4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUU1aFCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDYwZmQ3YTRhMzUzNjZjMmI=</field><field name="symbol" class="java.lang.String">rO0ABXQABE5EQVE=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUU6jqyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCJmZmZmZm</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCMzMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBB0euFHrhS</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBB5R64UeuF</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBBpmZmZmZm</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAD7D+A==</field><field name="id" class="java.lang.String">rO0ABXQAEGE0NjQ4YTQyYmE2MzNlZDQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHgbAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE0NDgy</field><field name="title" class="java.lang.String">rO0ABXQALVRveXMgJ1InIFVzIExldmVyYWdlZCBMaWtlICcwNSBhcyBMb3NzIE1vdW50cw==</field><field name="content" class="java.lang.String">rO0ABXQW4FRveXMg4oCcUuKAnSBVc+KAmXMgZGVidCByYXRpb3MgcmV0dXJuZWQgdG8gbGV2ZWxzIGxhc3Qgc2VlbiBmb2xsb3dpbmcgaXRzICQ2LjYgYmlsbGlvbiBsZXZlcmFnZWQgYnV5b3V0IGluIDIwMDUsIHVuZGVyc2NvcmluZyBoZWlnaHRlbmVkIGNvbmNlcm4gYW1vbmcgaW52ZXN0b3JzIHRoYXQgdGhlIHJldGFpbGVyIG1heSBub3QgYmUgYWJsZSB0byByZWNvdmVyIGZyb20gaXRzIGJpZ2dlc3QgbG9zcyBpbiBuZWFybHkgdGhyZWUgZGVjYWRlcy4g4oCcSXTigJlzIGFsd2F5cyB0aGVyZSwgeW91IG5ldmVyIGdldCBhd2F5IGZyb20gaXQs4oCdIFNlYW4gTWNHb3dhbiwgYW4gZXF1aXR5IGFuYWx5c3Qgd2hvIGZvY3VzZXMgb24gdGhlIHRveSBpbmR1c3RyeSBhdCBOZWVkaGFtICYgQ28uIGluIE5ldyBZb3JrLCBzYWlkIGFib3V0IHRoZSBjb21wYW554oCZcyBkZWJ0IGxvYWQuIOKAnFNvbWV0aGluZ+KAmXMgZ290IHRvIGNoYW5nZSwgdGhhdOKAmXMgZm9yIHN1cmUu4oCdIERlYnQgYXQgdGhlIFdheW5lLCBOZXcgSmVyc2V5LWJhc2VkIGNvbXBhbnkgaGFzIGNsaW1iZWQgdG8gbW9yZSB0aGFuIDggdGltZXMgaXRzIGNhc2ggZmxvdywgdGhlIHNhbWUgYXMgd2hlbiBpdCB3YXMgYm91Z2h0IG5pbmUgeWVhcnMgYWdvIGJ5IEtLUiAmIENvLiwgQmFpbiBDYXBpdGFsIExMQyBhbmQgVm9ybmFkbyBSZWFsdHkgVHJ1c3QsIGFjY29yZGluZyB0byBNb29keeKAmXMgSW52ZXN0b3JzIFNlcnZpY2UuIFRoZSByYXRpbyBpcyB1cCBmcm9tIDUuNSB0aW1lcyBhIHllYXIgYWdvIGFuZCBjb21wYXJlcyB3aXRoIGFuIGluZHVzdHJ5IGF2ZXJhZ2Ugb2YgYWJvdXQgMywgYWNjb3JkaW5nIHRvIGRhdGEgY29tcGlsZWQgYnkgQmxvb21iZXJnLiBBIGNhbmRpZGF0ZSBmb3IgYW4gaW5pdGlhbCBwdWJsaWMgb2ZmZXJpbmcgYXMgcmVjZW50bHkgYXMgMjAxMCwgdGhlIHRveSBzZWxsZXIgaXMgbm93IHN0cnVnZ2xpbmcgdG8gcmV2ZXJzZSBhIGJpbGxpb24tZG9sbGFyIGxvc3MgbGFzdCB5ZWFyIGluIGFuIGVudmlyb25tZW50IHdoZXJlIHRocmVlIHNwZWNpYWx0eSByZXRhaWxlcnMgaGF2ZSBzb3VnaHQgYmFua3J1cHRjeSBwcm90ZWN0aW9uIHNpbmNlIERlY2VtYmVyIGFtaWQgc2x1Z2dpc2ggY29uc3VtZXIgc3BlbmRpbmcuIE1vcmUgdGhhbiAkODUwIG1pbGxpb24gb2YgaXRzIGJvbmRzIHRyYWRlIGF0IGRpc3RyZXNzZWQgbGV2ZWxzLCBhbmQgTW9vZHnigJlzIGN1dCB0aGUgY29tcGFueeKAmXMgY3JlZGl0IHJhdGluZyB0aGlzIG1vbnRoIHRvIHNpeCBsZXZlbHMgYmVsb3cgaW52ZXN0bWVudCBncmFkZS4gS2F0aGxlZW4gV2F1Z2gsIGEgc3Bva2VzbWFuIGZvciBUb3lzIOKAnFLigJ0gVXMsIHdhc27igJl0IGF2YWlsYWJsZSB0byBjb21tZW50IG9uIHRoZSBjb21wYW554oCZcyBsZXZlcmFnZSBvciByZWNlbnQgZWFybmluZ3MuIEJvbmRzIFBsdW5nZSBUaGUgcmV0YWlsZXLigJlzICQ0NTAgbWlsbGlvbiBvZiAxMC4zNzUgcGVyY2VudCBib25kcyBkdWUgaW4gQXVndXN0IDIwMTcsIHRyYWRlZCBhdCA4MSBjZW50cyBvbiB0aGUgZG9sbGFyIEFwcmlsIDExLCBkb3duIGZyb20gMTEwLjUgY2VudHMgaW4gTWF5LCBhY2NvcmRpbmcgdG8gVHJhY2UsIHRoZSBib25kLXByaWNlIHJlcG9ydGluZyBzZXJ2aWNlIG9mIHRoZSBGaW5hbmNpYWwgSW5kdXN0cnkgUmVndWxhdG9yeSBBdXRob3JpdHkuIFRoZXkgeWllbGRlZCAxNy41IHBlcmNlbnRhZ2UgcG9pbnRzIG1vcmUgdGhhbiBzaW1pbGFyLW1hdHVyaXR5IFRyZWFzdXJ5cy4gVGhvc2UgZGViZW50dXJlcyBhbG9uZyB3aXRoICQ0MDAgbWlsbGlvbiBvZiA3LjM3NSBwZXJjZW50IG5vdGVzIGR1ZSBPY3RvYmVyIDIwMTggYXJlIGFtb25nIHRoZSAxNDggc2VjdXJpdGllcyBjb25zaWRlcmVkIGRpc3RyZXNzZWQsIEJsb29tYmVyZyBkYXRhIHNob3cuIFRoZSBtZWFzdXJlIHRyYWNrcyBib25kcyB0aGF0IHlpZWxkIGF0IGxlYXN0IDEwIHBlcmNlbnRhZ2UgcG9pbnRzIG1vcmUgdGhhbiBjb21wYXJhYmxlIGdvdmVybm1lbnQgZGVidC4gTGFzdCBtb250aCwgVG95cyDigJxS4oCdIFVzIGFubm91bmNlZCBhICQxIGJpbGxpb24gbG9zcyBmb3IgZmlzY2FsIDIwMTMsIGl0cyB3b3JzdCBwZXJmb3JtYW5jZSBzaW5jZSBhdCBsZWFzdCAxOTg3LCBCbG9vbWJlcmcgZGF0YSBzaG93LiBTYWxlcyBhdCBzdG9yZXMgb3BlbiBhdCBsZWFzdCBhIHllYXIgZmVsbCA1IHBlcmNlbnQgYXQgVS5TLiBsb2NhdGlvbnMgYW5kIGRyb3BwZWQgMy4zIHBlcmNlbnQgaW50ZXJuYXRpb25hbGx5LiDigJxUaGV5IHdlcmUgb3V0IG9mIHN0b2NrLCBhbmQgdGhhdCBtYXkgYmUgcmVsYXRlZCB0byBtYW5hZ2luZyBjYXNoIHRvbyB0aWdodGx5LCBidXQgaXTigJlzIGluZXhjdXNhYmxlIGZvciBUb3lzIOKAmOKAmFLigJnigJkgVXMgdG8gYmUgb3V0IG9mIHN0b2NrLOKAnSBNY0dvd2FuIHNhaWQuIFJldGFpbCBDb21wZXRpdGlvbiBUaGUgcmV0YWlsZXIgY29tcGV0ZXMgd2l0aCBnaWFudHMgc3VjaCBhcyBXYWwtTWFydCBTdG9yZXMgSW5jLiBhbmQgVGFyZ2V0IENvcnAuIHRoYXQgYXR0cmFjdCBhIHN0ZWFkeSBzdHJlYW0gb2YgY3VzdG9tZXJzIHdpdGggZ3JvY2VyaWVzIGFuZCBvdGhlciBiYXNpY3MuIEFuZCB0aGUgb25lIGFyZWEgd2hlcmUgVG95cyDigJxS4oCdIFVzIGhhZCBkaXN0aW5ndWlzaGVkIGl0c2VsZiBpbiB0aGUgcGFzdCwgdGhlIGJyZWFkdGggb2Ygc2VsZWN0aW9uLCBpcyBub3cgY2hhbGxlbmdlZCBieSBBbWF6b24uY29tIEluYy4sIE1jR293YW4gc2FpZC4g4oCcV2hhdCBXYWwtTWFydCwgVGFyZ2V0IGFuZCBBbWF6b24gY2FuIGRvIGlzIHRoZXkgY2FuIHVzZSB0b3lzIHRvIGRyaXZlIHRyYWZmaWMgdG8gc3RvcmVzIG9yIG9ubGluZSwgYW5kIGlmIG5vdCB0b3lzIHRoZW4gdGhleSBjYW4gc2VsbCBvdGhlciBzdHVmZizigJ0gQ2hhcmxlcyBP4oCZU2hlYSwgYW4gYW5hbHlzdCBhdCBNb29keeKAmXMsIHNhaWQgaW4gYSB0ZWxlcGhvbmUgaW50ZXJ2aWV3LiBPbiBBcHJpbCA0LCBNb29keeKAmXMgY3V0IHRoZSBjb21wYW554oCZcyBjb3Jwb3JhdGUgZmFtaWx5IHJhdGluZyBvbmUgbGV2ZWwgdG8gQjMsIHNpeCBsZXZlbHMgYmVsb3cgaW52ZXN0bWVudCBncmFkZS4gU3RhbmRhcmQgJiBQb29y4oCZcyBoYXMgYW4gZXF1aXZhbGVudCBCLSByYXRpbmcgb24gdGhlIGRlYnQuIE1vb2R54oCZcyBhbmFseXN0cyBjaXRlZCB0aGUgdG95IHNlbGxlcuKAmXMgaW5hYmlsaXR5IHRvIGNhcGl0YWxpemUgb24gaXRzIHZpZGVvIGJ1c2luZXNzLCBhbiBhcmVhIHRoYXQgaGFzIGJlZW4gYmVuZWZpY2lhbCB0byBjb21wZXRpdG9ycy4gTGV2ZXJhZ2UgU3VyZ2VzIFRveXMg4oCcUuKAnSBVcyBsZXZlcmFnZSwgYWZ0ZXIgaGF2aW5nIGltcHJvdmVkIGluIHRoZSBsYXN0IGZldyB5ZWFycywgaXMgYmFjayB0byBwb3N0LWJ1eW91dCBjb25kaXRpb25zIGFmdGVyIOKAnG9uZSBiYWQgeWVhcizigJ0gaGUgc2FpZC4g4oCcSXQganVzdCBzaG93cyBob3cgZnJhZ2lsZSB0aGUgY29tcGFueeKAmXMgY3JlZGl0IG1ldHJpY3MgdHVybmVkIG91dCB0byBiZSBnaXZlbiB0aGUgaGlnaGx5IGxldmVyYWdlZCBjYXBpdGFsIHN0cnVjdHVyZS7igJ0gVG95cyDigJxS4oCdIFVz4oCZcyB0b3RhbCBkZWJ0IG9mICQ1IGJpbGxpb24gY29tcGFyZXMgd2l0aCBhZGp1c3RlZCBlYXJuaW5ncyBiZWZvcmUgaW50ZXJlc3QsIHRheGVzLCBkZXByZWNpYXRpb24gYW5kIGFtb3J0aXphdGlvbiBvZiAkNTg4IG1pbGxpb24gZm9yIHRoZSB5ZWFyIGVuZGVkIEZlYi4gMSwgYWNjb3JkaW5nIHRvIGEgTWFyY2ggMzEgcmVndWxhdG9yeSBmaWxpbmcuIFRoZSBhdmVyYWdlIGxldmVyYWdlLCBvciB0aGUgcmF0aW8gb2YgZGVidCB0byBFYml0ZGEgZm9yIHB1YmxpY2x5IHRyYWRlZCBVLlMuIGNvbnN1bWVyIGRpc2NyZXRpb25hcnkgY29tcGFuaWVzIHdpdGggYXQgbGVhc3QgJDUwMCBtaWxsaW9uIGluIG9ibGlnYXRpb25zIGlzIDMgdGltZXMsIEJsb29tYmVyZyBkYXRhIHNob3cuIFRoZSBjb21wYW554oCZcyBvd25lcnMgaGFkIGxvb2tlZCB0byB0aGUgZXF1aXR5IG1hcmtldHMgdG8gaGVscCBpdCBjdXQgZGVidCwgZmlsaW5nIGZvciBhbiAkODAwIG1pbGxpb24gaW5pdGlhbCBwdWJsaWMgb2ZmZXJpbmcgaW4gTWF5IDIwMTAuIEl0IHNoZWx2ZWQgdGhlIHBsYW4gYWxtb3N0IHRocmVlIHllYXJzIGxhdGVyLCBjaXRpbmcgcG9vciBtYXJrZXQgY29uZGl0aW9ucyBhbmQgYSBwZW5kaW5nIGxlYWRlcnNoaXAgY2hhbmdlLiBUb3lzIOKAnFLigJ0gVXMgbmFtZWQgQW50b25pbyBVcmNlbGF5LCB3aG8gc2VydmVkIGFzIGludGVyaW0gY2hpZWYgZXhlY3V0aXZlIG9mZmljZXIgYWZ0ZXIgbGVhZGluZyB0aGUgRXVyb3BlYW4gZGl2aXNpb24sIGFzIHBlcm1hbmVudCBoZWFkIGluIE9jdG9iZXIuIEF0IHRoZSBzYW1lIHRpbWUsIGl0IGFubm91bmNlZCBIYW5rIE11bGxhbnksIGEgZm9ybWVyIGV4ZWN1dGl2ZSBhdCBXYWwtTWFydCwgYXMgcHJlc2lkZW50IG9mIGl0cyBVLlMuIGJ1c2luZXNzLiBNYXR1cml0eSBXYWxsIFRoZSBjb21wYW55IGNvbXBldGVzIGZvciBhIHNoYXJlIG9mIHRoZSBnbG9iYWwgdG95IG1hcmtldCwgd2hpY2ggaGFzIGJlZW4gZmxhdCBhdCBhYm91dCAkODQgYmlsbGlvbiBvdmVyIHRoZSBwYXN0IGZvdXIgeWVhcnMsIGFjY29yZGluZyB0byBhIEphbi4gMjggRml0Y2ggUmF0aW5ncyByZXBvcnQuIFRyYWRpdGlvbmFsIHByb2R1Y3QgY2F0ZWdvcmllcyBoYXZlIGZhY2VkIGluY3JlYXNpbmcgaGVhZHdpbmRzIHdpdGggY2hpbGRyZW4gZXhwcmVzc2luZyBhIHByZWZlcmVuY2UgZm9yIGRpZ2l0YWwgZ2FtZXMsIHRoZSByZXBvcnQgc2FpZC4gSXQgZmFjZXMgbW9yZSB0aGFuICQxIGJpbGxpb24gb2YgZGVidCBjb21pbmcgZHVlIGluIDIwMTYgZXZlbiBhcyBjYXBpdGFsIGV4cGVuZGl0dXJlcyB3aWxsIGV4Y2VlZCBjYXNoIGZyb20gb3BlcmF0aW5nIGFjdGl2aXRpZXMgYnkgYXMgbXVjaCBhcyAkMjUwIG1pbGxpb24gb3ZlciB0aGUgbmV4dCB0d28geWVhcnMsIEZpdGNoIGFuYWx5c3QgSXNhYmVsIEh1IHNhaWQuIENvbGR3YXRlciBDcmVlayBJbmMuLCBhIHdvbWVu4oCZcyBjbG90aGluZyByZXRhaWxlciwgZmlsZWQgZm9yIGJhbmtydXB0Y3kgcHJvdGVjdGlvbiBsYXN0IHdlZWssIGZvbGxvd2luZyBEb3RzIExMQyBhbmQgTG9laG1hbm7igJlzIEluYy4sIGFzIGNvbnN1bWVyIHNwZW5kaW5nIHJlbWFpbnMgc2hha3kuIOKAnFRoZXJlIGlzIGluY3JlYXNpbmcgYnVzaW5lc3MgcmlzayBhcyB3ZWxsIGFzIGxpcXVpZGl0eSBwcmVzc3VyZSzigJ0gSHUgc2FpZCBpbiBhIHRlbGVwaG9uZSBpbnRlcnZpZXcuIFdoaWxlIHJldml2aW5nIGFuIElQTyBtaWdodCBiZSBhIGJlc3QtY2FzZSBvcHRpb24gaW4gdHdvIG9yIHRocmVlIHllYXJzLCB0aGUga2V5IGZvciB0aGUgbW9tZW50IGlzIHRvIHN0YWJpbGl6ZSBvcGVyYXRpb25zIGFuZCB0aGVuIHRyeSB0byBwdXNoIG91dCBkZWJ0IG1hdHVyaXRpZXMsIFN0ZXZlbiBBemFyYmFkLCBjby1mb3VuZGVyIG9mIE1hZ2xhbiBDYXBpdGFsIExQLCBhIE5ldyBZb3JrLWJhc2VkIGhlZGdlIGZ1bmQgc3BlY2lhbGl6aW5nIGluIGRpc3RyZXNzZWQgc2VjdXJpdGllcywgc2FpZCBpbiBhIHRlbGVwaG9uZSBpbnRlcnZpZXcuIOKAnEkgdGhpbmsgZXZlcnlvbmUgaXMganVzdCByZWFsbHkgbG9va2luZyBhdCB0aGlzIHJpZ2h0IG5vdyBhcyBhIHNob3ctbWUgc3Rvcnks4oCdIEF6YXJiYWQgc2FpZC4gVGhlIG93bmVycyDigJxkZWZpbml0ZWx5IHdhbnQgdG8gYnV5IHRoZW1zZWx2ZXMgbW9yZSB0aW1lLiBDbGVhcmx5IGEgbmVhci10ZXJtIGV4aXQgb24gdGhpcyBpbnZlc3RtZW50IGlzIG5vdCBpbiB0aGUgb2ZmaW5nLuKAnQ==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUVemzCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDg1MmMyZTdlN2Y1MGU5NDU=</field><field name="symbol" class="java.lang.String">rO0ABXQAAVI=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUVjwYyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBT1cKPXCj2</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBT/Cj1wo9c</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBTkAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBTw9cKPXCk</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBTceuFHrhS</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAunNA==</field><field name="id" class="java.lang.String">rO0ABXQAEGY1MmUyZjg5MTA1NmU3MTM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFdgAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQzNDE=</field><field name="title" class="java.lang.String">rO0ABXQAM05ldyBTaWx2ZXIgQmVuY2htYXJrIFNlZW4gSGVyYWxkaW5nIEdvbGQgRml4IFJldmFtcA==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUayfuiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGY2ZjdlNWY3ZDU5MzYxOWI=</field><field name="symbol" class="java.lang.String">rO0ABXQACUJOUy1QTi5UTw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUa3pUSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6IUeuFHrh</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6MKPXCj1x</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6IUeuFHrh</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6LhR64Ueu</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5NcKPXCj2</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAETA==</field><field name="id" class="java.lang.String">rO0ABXQAEGM4NzVjZTAxYmZhODE5NmU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mM3tAAAA==</field></document></documents><date>2015-05-07T12:25:25-0500</date></cacheEntry>
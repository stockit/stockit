<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0DQZBIHByb21pbmVudCBzZW5pb3IgcGFydG5lciBhdCBhIFNpbGljb24gVmFsbGV5IHZlbnR1cmUgY2FwaXRhbCBmaXJtIHRlc3RpZmllZCBXZWRuZXNkYXkgdGhhdCBoZSB3YXMgYSBsb3lhbCBzdXBwb3J0ZXIgb2YgYSB3b21hbiB3aG8gaXMgbm93IHN1aW5nIHRoZSBjb21wYW55IGZvciBzZXggZGlzY3JpbWluYXRpb24gQmlsbGlvbmFpcmUgSm9obiBEb2VyciB0b29rIHRoZSB3aXRuZXNzIHN0YW5kIGZvciBhIHNlY29uZCBkYXkgaW4gdGhlIGxhd3N1aXQgYWxsZWdpbmcgd29tZW4gd2VyZSBkZW5pZWQgY2hhbmNlcyB0byBhZHZhbmNlIGF0IEtsZWluZXIgUGVya2lucyBDYXVmaWVsZCAgQnllcnMgYW5kIHRyZWF0ZWQgYXMgc2Vjb25kY2xhc3MgY2l0aXplbnMgVGhlIGxhd3N1aXQgd2FzIGZpbGVkIGJ5IEVsbGVuIFBhbyB3aG8gc2F5cyBzaGUgd2FzIGRlbmllZCBhIGNoYW5jZSB0byBhZHZhbmNlIGJlY2F1c2Ugc2hlIGlzIGEgd29tYW4gYW5kIHdhcyBmaXJlZCBpbiAyMDEyIGFmdGVyIHNoZSBjb21wbGFpbmVkIFRoZSBjYXNlIGhhcyBzcGFya2VkIGRlYmF0ZSBvdmVyIHRoZSB0cmVhdG1lbnQgb2Ygd29tZW4gaW4gdGhlIGhpZ2h0ZWNoIGFuZCB2ZW50dXJlIGNhcGl0YWwgZmllbGRzIHdoaWNoIGFyZSBkb21pbmF0ZWQgYnkgbWVuIEluIHJlc3BvbnNlIHRvIHF1ZXN0aW9ucyBmcm9tIGp1cm9ycyBEb2VyciBkZXNjcmliZWQgdGhlIHZlbnR1cmUgY2FwaXRhbCBjb21tdW5pdHkgYXMgYSBjb21wZXRpdGl2ZSBtYWxlZG9taW5hdGVkIGZpZWxkIGJ1dCBzYWlkIGl0IGRpZG50IGV4cGxpY2l0bHkgcHVzaCB3b21lbiBhd2F5IEhlIHNhaWQgaGUgaGFzIHdvcmtlZCBoYXJkIHRvIGluY3JlYXNlIHRoZSBudW1iZXIgb2Ygd29tZW4gaW4gdmVudHVyZSBjYXBpdGFsIGFuZCB0ZWNobm9sb2d5IGJlY2F1c2UgZGl2ZXJzaXR5IGxlYWRzIHRvIGJldHRlciBkZWNpc2lvbnMgSSBkb250IGFkdm9jYXRlIGZvciB3b21lbiBvdXQgb2YgYSBzZW5zZSBvZiBzb2NpYWwganVzdGljZSBoZSBzYWlkIFBhb3MgYXR0b3JuZXkgQWxhbiBFeGVscm9kIGhhcyBhcmd1ZWQgdGhhdCBLbGVpbmVyIFBlcmtpbnMgaGFkIGEgbWFsZWRvbWluYXRlZCBjdWx0dXJlIFRoZSBsYXd5ZXIgcGxheWVkIGEgcmVjb3JkaW5nIGluIGNvdXJ0IFdlZG5lc2RheSBvZiBEb2VyciBzcGVha2luZyBhdCBhIHZlbnR1cmUgY2FwaXRhbCBhc3NvY2lhdGlvbiBtZWV0aW5nIGFuZCBzYXlpbmcgYWxsIGdyZWF0IEludGVybmV0IGNvbXBhbmllcyBzZWVtIHRvIGJlIGZvdW5kZWQgYnkgd2hpdGUgbWFsZSBuZXJkcyB3aG8gZHJvcHBlZCBvdXQgb2YgSGFydmFyZCBvciBTdGFuZm9yZCBhbmQgaGF2ZSBubyBzb2NpYWwgbGlmZSBMYXRlciB1bmRlciBxdWVzdGlvbmluZyBieSBLbGVpbmVyIFBlcmtpbnMgYXR0b3JuZXkgTHlubmUgSGVybWxlIERvZXJyIHNhaWQgb25seSB0d28gb2YgdGhlIDgwIG9yIHNvIGNvbXBhbmllcyBoZSBoYXMgaW52ZXN0ZWQgaW4gd2VyZSBsZWQgYnkgd2hpdGUgbWFsZXMgd2hvIGhhZCBkcm9wcGVkIG91dCBvZiBIYXJ2YXJkIG9yIFN0YW5mb3JkIGFuZCBoYWQgZGVncmVlcyBpbiBjb21wdXRlciBzY2llbmNlIERvZXJyIGEgbWVtYmVyIG9mIHRoZSBLbGVpbmVyIFBlcmtpbnMgIG1hbmFnZW1lbnQgdGVhbSBhbHNvIHRlc3RpZmllZCB0aGF0IGhlIGZvdWdodCBmb3IgUGFvIHRvIHN0YXkgd2l0aCB0aGUgY29tcGFueSBhbmQgb2JqZWN0ZWQgd2hlbiBvdGhlciBwYXJ0bmVycyB3YW50ZWQgdG8gbGV0IGhlciBnbyBpbiAyMDExIEVsbGVuIGlzIHZlcnkgdGFsZW50ZWQgaGUgc2FpZCBJIGZlbHQgdGhhdCBzaGUgb3VnaHQgdG8gaGF2ZSBhbm90aGVyIHNob3QgRG9lcnIgc2FpZCBoZSBwcm92aWRlZCBQYW8gd2l0aCB0d28gY29hY2hlcyBpbmNsdWRpbmcgYSBzcGVlY2ggY29hY2ggdG8gaGVscCBpbXByb3ZlIGhlciBza2lsbHMgYnV0IHNoZSBjb250aW51ZWQgdG8gaGF2ZSBwcm9ibGVtcyBJbiBhIGpvYiByZXZpZXcgcHJldmlvdXNseSBwcmVzZW50ZWQgaW4gY291cnQgRG9lcnIgc2FpZCBQYW8gbmVlZGVkIHRvIGltcHJvdmUgaGVyIGludGVycGVyc29uYWwgc2tpbGxzIGFuZCBub3QgYmUgZGlzbWlzc2l2ZSBvZiBwZWVycyB3aG8gZG9udCBtZWV0IGhlciBleHBlY3RhdGlvbnMgdGhvdWdoIGhlIG90aGVyd2lzZSBwcmFpc2VkIGhlciBwZXJmb3JtYW5jZSBpbiBoZXIgZmlyc3QgeWVhciBhcyBoaXMgY2hpZWYgb2Ygc3RhZmYgSW4gdGhhdCBwb3NpdGlvbiBQYW8gd3JvdGUgbGV0dGVycyBhbmQgc3BlZWNoZXMgYW1vbmcgb3RoZXIgZHV0aWVzIGZvciBEb2VyciBiZWZvcmUgYmVjb21pbmcgYSBqdW5pb3IgcGFydG5lciBpbiAyMDEwIHdpdGggZnVsbHRpbWUgaW52ZXN0bWVudCBkdXRpZXMgVGhlIGZpcm0gaGFzIGRlbmllZCB3cm9uZ2RvaW5nIGFuZCBzYXlzIFBhbyA0NSBkaWRudCBnZXQgYWxvbmcgd2l0aCBoZXIgY29sbGVhZ3VlcyAgYSByZXF1aXJlbWVudCBmb3IgdGhlIGp1bmlvciBwYXJ0bmVyIHBvc2l0aW9uICBhbmQgcGVyZm9ybWVkIHBvb3JseSBpbiB0aGF0IHJvbGUgRG9lcnIgaXMgYW1vbmcgdGhlIG1vc3QgcHJvbWluZW50IHZlbnR1cmUgY2FwaXRhbGlzdHMgaW4gU2lsaWNvbiBWYWxsZXkgaW4gcGFydCBmb3IgaGVscGluZyBkaXJlY3QgZWFybHkgaW52ZXN0bWVudHMgaW4gQW1hem9uIGFuZCBHb29nbGUgYWZ0ZXIgam9pbmluZyBLbGVpbmVyIFBlcmtpbnMgaW4gMTk4MCBIZSBzaXRzIG9uIEdvb2dsZXMgYm9hcmQgYW5kIHNlcnZlZCBvbiBib2FyZHMgdGhhdCBhZHZpc2VkIFByZXNpZGVudCBCYXJhY2sgT2JhbWEgYWJvdXQgZWNvbm9taWMgcG9saWN5IEhpcyBuZXQgd29ydGggaXMgZXN0aW1hdGVkIGF0IDM1IGJpbGxpb24gYnkgRm9yYmVzIEEgc3R1ZHkgcmVsZWFzZWQgbGFzdCB5ZWFyIGJ5IEJhYnNvbiBDb2xsZWdlIGluIE1hc3NhY2h1c2V0dHMgZm91bmQgdGhhdCB3b21lbiBmaWxsZWQganVzdCA2IHBlcmNlbnQgb2YgdGhlIHBhcnRuZXJsZXZlbCBwb3NpdGlvbnMgYXQgMTM5IHZlbnR1cmUgY2FwaXRhbCBmaXJtcyBpbiAyMDEzIGRvd24gZnJvbSAxMCBwZXJjZW50IGluIDE5OTkgRG9lcnIgc2FpZCAyMCBwZXJjZW50IG9mIHBhcnRuZXJzIGF0IEtsZWluZXIgUGVya2lucyBhcmUgd29tZW4gUGFvIGlzIHNlZWtpbmcgMTYgbWlsbGlvbiBpbiBkYW1hZ2VzIFRoZSBmaXJtIGlzIHNlZWtpbmcgdG8gbGltaXQgYW55IHBvc3NpYmxlIGRhbWFnZXMgYnkgYXJndWluZyB0aGF0IFBhbyBpcyB3ZWxsY29tcGVuc2F0ZWQgaW4gaGVyIGN1cnJlbnQgcG9zaXRpb24gYXMgaW50ZXJpbSBDRU8gb2YgdGhlIHBvcHVsYXIgc29jaWFsIG1lZGlhIGNvbXBhbnkgUmVkZGl0dAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAb2FydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2UsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEzLTEyLTAzVDAwOjAwOjAwWiBUTyAyMDE0LTA3LTEwVDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTE2MjY4</field><field name="title" class="java.lang.String">rO0ABXQAKEdvb2dsZSB0byBCdXkgTmVzdCBMYWJzIGZvciAkMy4yIEJpbGxpb24=</field><field name="content" class="java.lang.String">rO0ABXQHeE5lc3QsIHdoaWNoIHdhcyBjby1mb3VuZGVkIGJ5IG9uZSBvZiB0aGUgY3JlYXRvcnMgb2YgQXBwbGUgSW5jLidzIGljb25pYyBpUG9kIG11c2ljIHBsYXllciwgd2lsbCBjb250aW51ZSB0byBvcGVyYXRlIGFzIGl0cyBvd24gZGlzdGluY3QgYnJhbmQgYWZ0ZXIgdGhlIGFsbC1jYXNoIGRlYWwgY2xvc2VzLCBHb29nbGUgc2FpZC4gVGhlIGRlYWwgaXMgdGhlIHNlY29uZC1sYXJnZXN0IGluIEdvb2dsZSdzIGhpc3RvcnksIGFmdGVyIHRoZSAkMTIuNSBiaWxsaW9uIGFjcXVpc2l0aW9uIG9mIG1vYmlsZSBwaG9uZSBtYWtlciBNb3Rvcm9sYS4gIk5lc3QgTGFicyBhcHBlYXJzIHRvIGJlIGZvY3VzZWQgb24gdGhlcm1vc3RhdHMgYW5kIHNtb2tlIGFsYXJtcywgYnV0IGl0J3Mgbm90IGZhci1mZXRjaGVkIHRvIHNlZSBHb29nbGUgZXhwYW5kaW5nIHRoaXMgdGVjaG5vbG9neSBpbnRvIG90aGVyIGRldmljZXMgb3ZlciB0aW1lLCIgc2FpZCBTaHlhbSBQYXRpbCwgYW4gYW5hbHlzdCBhdCBXZWRidXNoLiAiSG9tZSBhdXRvbWF0aW9uIGlzIG9uZSBvZiB0aGUgYmlnZ2VyIG9wcG9ydHVuaXRpZXMgd2hlbiB5b3UgdGFsayBhYm91dCB0aGUgSW50ZXJuZXQgb2YgZXZlcnl0aGluZyBhbmQgY29ubmVjdGluZyBldmVyeXRoaW5nLiBUaGlzIGFjcXVpc2l0aW9uIGZ1cnRoZXJzIHRoZWlyIHN0cmF0ZWd5IGFyb3VuZCB0aGF0LCIgaGUgc2FpZC4gU2hhcmVzIG9mIEdvb2dsZSB3ZXJlIHVwIDAuNSBwZXJjZW50IGF0ICQxLDEyOC40OSBpbiBleHRlbmRlZCB0cmFkaW5nIG9uIE1vbmRheS4gTmVzdCB3aWxsIGNvbnRpbnVlIHRvIG9wZXJhdGUgdW5kZXIgdGhlIGxlYWRlcnNoaXAgb2YgQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXIgVG9ueSBGYWRlbGwgLSBhIGZvcm1lciBBcHBsZSBleGVjdXRpdmUgd2hvIGlzIHJlZmVycmVkIHRvIGFzIHRoZSAiZ29kZmF0aGVyIiBvZiB0aGUgaVBvZCAtIHdpdGggaXRzIG93biBkaXN0aW5jdCBicmFuZCBpZGVudGl0eSwgR29vZ2xlIHNhaWQgTmVzdCwgd2hpY2ggY291bnRzIEtsZWluZXIgUGVya2lucywgTGlnaHRzcGVlZCBWZW50dXJlIFBhcnRuZXJzLCBHb29nbGUgVmVudHVyZXMgYW5kIFNoYXN0YSBWZW50dXJlcyBhbW9uZyBpdHMgaW52ZXN0b3JzLCBlbXBsb3lzIGEgbGFyZ2UgbnVtYmVyIG9mIGRlc2lnbmVycyBhbmQgZW5naW5lZXJzIGZyb20gU2lsaWNvbiBWYWxsZXkgZmlybXMgbGlrZSBBcHBsZSBhbmQgR29vZ2xlLiBJdCBnYWluZWQgYSBsYXJnZSBmb2xsb3dpbmcgd2l0aCBpdHMgZmlyc3QgdGhlcm1vc3RhdCAtIGEgcm91bmQsIGJydXNoZWQtbWV0YWwgZGV2aWNlIHdpdGggYSBjb252ZXggZ2xhc3Mgc2NyZWVuIHRoYXQgZGlzcGxheXMgdGVtcGVyYXR1cmUgYW5kIGNoYW5nZXMgaHVlIHRvIG1hdGNoIHRoZSBjb2xvciBvZiB0aGUgd2FsbCBpdCBhdHRhY2hlcyB0by4gSXQgYWxzbyB0cmFja3MgdXNhZ2UgYW5kIGVtcGxveXMgdGhhdCBkYXRhIHRvIGF1dG9tYXRpY2FsbHkgc2V0IGhlYXRpbmcgYW5kIGNvb2xpbmcgdGVtcGVyYXR1cmVzLiBUaGUgUGFsbyBBbHRvLCBDYWxpZm9ybmlhLWJhc2VkLCBjb21wYW55IGVtcGxveWVkIGFib3V0IDI4MCBwZW9wbGUgYXMgb2YgT2N0b2Jlci4gR29vZ2xlIENFTyBMYXJyeSBQYWdlIHByYWlzZWQgTmVzdCdzIGN1cnJlbnQgcHJvZHVjdHMgYW5kIGl0cyBmb3VuZGVycycgdGFsZW50cyBpbiBhIHN0YXRlbWVudCBhbmQgc2FpZCB0aGF0IEdvb2dsZSB3YXMgImV4Y2l0ZWQgdG8gYnJpbmcgZ3JlYXQgZXhwZXJpZW5jZXMgdG8gbW9yZSBob21lcyBpbiBtb3JlIGNvdW50cmllcyBhbmQgZnVsZmlsbCB0aGVpciBkcmVhbXMuIiBHb29nbGUgc2FpZCB0aGUgZGVhbCBpcyBleHBlY3RlZCB0byBjbG9zZSBpbiB0aGUgbmV4dCBmZXcgbW9udGhzIHBlbmRpbmcgcmVndWxhdG9yeSBhcHByb3ZhbC4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUOKL2sAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI0YjZjODA4MzRlMWZjMzY=</field><field name="symbol" class="java.lang.String">rO0ABXQABFBBTlc=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUOPVccAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBNmZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOVcKPXCj2</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBNmZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOT1wo9cKP</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOT1wo9cKP</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAA6AgA==</field><field name="id" class="java.lang.String">rO0ABXQAEDlmYjQ3NTJhY2I1YTEwZTg=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGgXAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIzMTAz</field><field name="title" class="java.lang.String">rO0ABXQAOUFtZXJpY2FuIEFwcGFyZWwgSW52ZXN0b3IgTm90IFBsYW5uaW5nIHRvIFN1cHBvcnQgQ2hhcm5leQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbHGFiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDAyMzgzNTUzNzYyNTRjZGQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABFJPVEg=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbMPrSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAHUwA==</field><field name="id" class="java.lang.String">rO0ABXQAEGNhN2ZiMmEzNjdjMjVhMDU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKv9AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE5OTc5</field><field name="title" class="java.lang.String">rO0ABXQANUlCTSBXaXRoaG9sZHMgSm9iIEN1dHMgRGF0YSwgTWFraW5nIEFnZSBDbGFpbXMgSGFyZGVy</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUXuzUCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDA4NTNmMzJhOTQ1Yjg1OGE=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lCTQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUXz85yAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBoGUeuFHrh</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBoIPXCj1wp</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBn+FHrhR64</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBoBhR64Ueu</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBnjhR64Ueu</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAACH5qA==</field><field name="id" class="java.lang.String">rO0ABXQAEDM5MGI5ODg3ZDJlNGQ2N2U=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFhtAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM5NzY=</field><field name="title" class="java.lang.String">rO0ABXQAPldhc2hpbmd0b24sIFJlZ3VsYXRvcnMgU2hydWcgYXQgQWxpYmFiYSdzIFBsYW4gZm9yIE1hc3NpdmUgSVBP</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcepHSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDA3MjRkOGEzODdhYzY5Y2Y=</field><field name="symbol" class="java.lang.String">rO0ABXQABFBFUlk=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcjytCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxKPXCj1wp</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxUeuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxD1wo9cKP</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxTMzMzMzN</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxTMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAF6hA==</field><field name="id" class="java.lang.String">rO0ABXQAEGVlMDVmOTQ5N2ViNWY4OWU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE6aAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTI1NzIw</field><field name="title" class="java.lang.String">rO0ABXQAN1N0ZXJsaW5nICdQbG95JyBNYXkgRGVsYXkgQ2xpcHBlcnMgVGVhbSBTYWxlIHRvIEJhbGxtZXI=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcPMWCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGZhYzZmZGIzNmY2N2IzMDU=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNBTEU=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcUV7yAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5B64UeuFI</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5JmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA2x64UeuFI</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3Ao9cKPXD</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3Ao9cKPXD</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAB9CWA==</field><field name="id" class="java.lang.String">rO0ABXQAEDY0Nzg5MGMzNjYzZmFhYTc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEtmAAAQ==</field></document></documents><date>2015-05-07T12:27:28-0500</date></cacheEntry>
<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0C3dUaGUgdG9iYWNjbyBpbmR1c3RyeSBzaG93ZWQgaW50ZXJlc3QgaW4gcG90IGFzIGVhcmx5ICBhcyB0aGUgbGF0ZSAxOTYwcyBhY2NvcmRpbmcgdG8gYXJjaGl2ZWQgbWF0ZXJpYWwgdW52ZWlsZWQgaW4gdGhlICBNaWxiYW5rIFF1YXJ0ZXJseSBhIGhlYWx0aCBwb2xpY3kgam91cm5hbCBBbW9uZyB0aGUgZG9jdW1lbnRzIGlzIGEgaGFuZHdyaXR0ZW4gbGV0dGVyIGZyb20gIFBoaWxpcCBNb3JyaXMgcHJlc2lkZW50IEdlb3JnZSBXZWlzc21hbiByZXBvcnRzIFRpbWUgSW4gaXQgaGUgc2FpZCBwb3QgIG1heSBsZWdhbGl6ZWQgaW4gdGhlIG5lYXIgZnV0dXJlIGFuZCB0aGUgY29tcGFueSBzaG91bGQgYmUgaW4gYSAgcG9zaXRpb24gdG8gZXhhbWluZSBhIHBvdGVudGlhbCBjb21wZXRpdGlvbiBhbmQgIGEgcG9zc2libGUgcHJvZHVjdCAgRWRpdG9ycyBOb3RlIFBhc3RvciBFeHBsYWlucyBIaXMgQmlibGljYWwgTW9uZXkgQ29kZSBmb3IgSW52ZXN0aW5nCgpXZSBhcmUgaW4gdGhlIGJ1c2luZXNzIG9mIHJlbGF4aW5nIHBlb3BsZSB3aG8gYXJlICB0ZW5zZSBhbmQgcHJvdmlkaW5nIGEgcGlja3VwIGZvciBwZW9wbGUgd2hvIGFyZSBib3JlZCBvciBkZXByZXNzZWQgVGhlICBodW1hbiBuZWVkcyB0aGF0IG91ciBwcm9kdWN0IGZpbGxzIHdpbGwgbm90IGdvIGF3YXkgVGh1cyB0aGUgb25seSAgcmVhbCB0aHJlYXQgdG8gb3VyIGJ1c2luZXNzIGlzIHRoYXQgc29jaWV0eSB3aWxsICBmaW5kIG90aGVyIG1lYW5zIG9mIHNhdGlzZnlpbmcgdGhlc2UgbmVlZHMgc2F5cyBhIFBoaWxpcCBNb3JyaXMgbWVtbyBPdGhlciBkb2N1bWVudHMgc2hvdyBQaGlsaXAgTW9ycmlzIGFwcHJvYWNoZWQgdGhlICBEZXBhcnRtZW50IG9mIEp1c3RpY2UgaW4gMTk2OSBhc2tpbmcgZm9yIG1hcmlqdWFuYSBmb3Igc2VjcmV0IHJlc2VhcmNoICBhbmQgaW4gZXhjaGFuZ2Ugb2ZmZXJlZCB0byBwcm92aWRlIHRoZSByZXN1bHRzIG9uIGEgY29uZmlkZW50aWFsICBiYXNpcyBCcml0aXNoIEFtZXJpY2FuIFRvYmFjY28gYWxzbyBjb25kdWN0ZWQgY29uZmlkZW50aWFsICByZXNlYXJjaCBpbiBCcml0YWluIHdoaWNoIHdhcyBjYWxsZWQgUG90IFByb2plY3Qgc2F5cyB0aGUgTG9zIEFuZ2VsZXMgIFRpbWVzIERvY3VtZW50cyBzaG93IHRoZSBjb21wYW55IHdhcyBhaW1pbmcgdG8gcHJvZHVjZSBjYW5uYWJpc2xvYWRlZCAgY2lnYXJldHRlcyBJbiBhIDE5NzAgZG9jdW1lbnQgQnJpdGlzaCBBbWVyaWNhbiBUb2JhY2NvcyAgc2NpZW5jZSBhZHZpc2VyIGV4cGxhaW5lZCB0aGF0IHN1Y2ggYSBwcm9kdWN0IHdhcyBhIG5hdHVyYWwgZXhwYW5zaW9uICBvZiBjdXJyZW50IHNtb2tpbmcgaGFiaXRzIGFuZCBpZiBwb3QgYmVjYW1lIGxlZ2FsIHRoZSBjaWdhcmV0dGVzIHdvdWxkICBiZSBhIGNoYW5nZSBpbiBoYWJpdCBtdWNoIGxpa2UgbW92aW5nIHRvIGNpZ2FycyBUaGUgc3RhcnRpbmcgcG9pbnQgbXVzdCBiZSB0byBsZWFybiBob3cgdG8gcHJvZHVjZSAgaW4gcXVhbnRpdHkgY2lnYXJldHRlcyBsb2FkZWQgdW5pZm9ybWx5IHdpdGggYSBrbm93biBhbW91bnQgb2YgZWl0aGVyICBncm91bmQgY2FubmFiaXMgb3IgZHJpZWQgYW5kIGN1dCBjYW5uYWJpcyByYWcgVGltZSBzYXlzIHRoZSBhZHZpc2VyICBub3RlZCBMZWdhbGl6YXRpb24gd2FzIGluIHRoZSBhaXIgaW4gdGhlIDE5NzBzIGFuZCAxMSAgc3RhdGVzIGRlY3JpbWluYWxpemVkIHBvdCBiZXR3ZWVuIDE5NzMgYW5kIDE5NzcgQnV0IGJpZyB0b2JhY2NvIGZpcm1zICBsb3N0IGludGVyZXN0IGluIG1hcmlqdWFuYSBkdXJpbmcgdGhlIDE5ODBzIHllYXJzIHdoZW4gUHJlc2lkZW50IFJlYWdhbiAgb3ZlcnNhdyBhIGhhcnNoIGFudGlkcnVnIGNydXNhZGUgSG93ZXZlciBkb2N1bWVudHMgc2hvdyBpbiB0aGUgMTk5MHMgUkogUmV5bm9sZHMgIGludGVyZXN0IHdhcyBwZWFrZWQgZHVlIHRvIGZhbHNlIGJlbGllZnMgdGhhdCBhIEZyZW5jaCBjb21wZXRpdG9yIHdhcyAgcHJvZHVjaW5nIGNpZ2FyZXR0ZXMgd2l0aCBtYXJpanVhbmEgUkogUmV5bm9sZHMgcmVzcG9uZGVkIGJ5IGxhdW5jaGluZyBhIG1hcmlqdWFuYSAgcmVzZWFyY2ggcHJvZ3JhbSBUaGUgY29tcGFueSBiZWxpZXZlZCBpdCBzaG91bGQgZ2V0IGJldHRlciBhY3F1YWludGVkICB3aXRoIHBvdCBpbiB2aWV3IG9mIHRoZSBwb3NzaWJpbGl0eSBvZiBpdHMgZnV0dXJlIG1vcmUgZnJlcXVlbnQgdXNlIGluICBjZXJ0YWluIEV1cm9wZWFuIGNvdW50cmllcyB0aGUgTEEgVGltZXMgc2F5cyBhbiAgaW50ZXJuYWwgbWVtbyByZXZlYWxzIEFtaWQgdGhlIGN1cnJlbnQgcHVzaCBmb3IgbGVnYWxpemF0aW9uIHRvYmFjY28gIGNvbXBhbmllcyBhcmUgYWN0aW5nIGFzIGlmIHRoZXkgaGF2ZSBubyBpbnRlcmVzdCBpbiBqb2luaW5nIHRoZSAgbWFyaWp1YW5hIHRyYWRlIEJ1dCB0aGUgTEEgVGltZXMgcG9pbnRzIG91dCBjb21wYW5pZXMgcG9ydHJheWVkIHNpbWlsYXIgIGF0dGl0dWRlcyBpbiB0aGUgcGFzdCBldmVuIGFzIHRoZXkgd2VyZSBjb25kdWN0aW5nIHJlc2VhcmNoIFRoZSB0b2JhY2NvIGNvbXBhbmllcyBtYXkgZGVueSBldmVuIHRoaW5raW5nIGFib3V0ICBpdCBidXQgdGhleSBoYXZlIHRvIHRoaW5rIGFib3V0IGl0IEl0IGlzIGFuIG9wcG9ydHVuaXR5IHRvIGRpdmVyc2lmeSAgdGhlaXIgYnVzaW5lc3MgYW5kIGhlbHAgYmVuZWZpdCBzaGFyZWhvbGRlcnMgR2VycnkgU3VsbGl2YW4gcG9ydGZvbGlvICBtYW5hZ2VyIG9mIHRoZSBWaWNlIEZ1bmQgdG9sZCB0aGUgTEEgVGltZXMgVGhhdCBpcyB3aGF0IG1hbmFnZW1lbnQgaXMgbW9zdCBsaWtlbHkgcHVyc3VpbmcgaW4gdGhlIGRhcmsgY29ybmVycyBvZiBzb21lIHJlc2VhcmNoIGxhYiBpbiBWaXJnaW5pYSBoZSBhZGRlZCAgRWRpdG9ycyBOb3RlIFBhc3RvciBFeHBsYWlucyBIaXMgQmlibGljYWwgTW9uZXkgQ29kZSBmb3IgSW52ZXN0aW5ndAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAb2FydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2UsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEzLTAzLTI3VDAwOjAwOjAwWiBUTyAyMDEzLTEyLTAzVDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDMyMjQ=</field><field name="title" class="java.lang.String">rO0ABXQANlRheCBMYXcgRnVlbHMsIFRoZW4gS2lsbHMsIGEgRGlzY291bnQtVG9iYWNjbyBJbmR1c3RyeQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEBFzSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGUzOTY1NDdiNTJkZmZkYWE=</field><field name="symbol" class="java.lang.String">rO0ABXQABFJPTEw=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEGPZCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOOZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOtwo9cKPX</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOOZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOp64UeuFI</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBNrMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAC6VA==</field><field name="id" class="java.lang.String">rO0ABXQAEDdkMmZmMzdiYmUxMThlMzc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKMBAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIxMjI1</field><field name="title" class="java.lang.String">rO0ABXQAL01hcmxib3JvIE1ha2VyIEFsdHJpYSBKdW1waW5nIEludG8gRS1jaWdhcmV0dGVz</field><field name="content" class="java.lang.String">rO0ABXQTalRvYmFjY28gY29tcGFueSBBbHRyaWEgR3JvdXAgSW5jLiBpcyBsYXVuY2hpbmcgaXRzIGZpcnN0IGVsZWN0cm9uaWMgY2lnYXJldHRlIHVuZGVyIHRoZSBNYXJrVGVuIGJyYW5kIGluIEluZGlhbmEgc3RhcnRpbmcgaW4gQXVndXN0IGFuZCBleHBhbmRpbmcgaXRzIHNtb2tlbGVzcyBwcm9kdWN0IG9mZmVyaW5ncy4gVGhlIG93bmVyIG9mIHRoZSBuYXRpb24ncyBiaWdnZXN0IGNpZ2FyZXR0ZSBtYWtlciwgUGhpbGlwIE1vcnJpcyBVU0EsIGFubm91bmNlZCB0aGUgZGV0YWlscyBvZiBpdHMgTnVNYXJrIHN1YnNpZGlhcnkncyBmb3JheSBpbnRvIHRoZSBmYXN0LWdyb3dpbmcgYnVzaW5lc3MgVHVlc2RheS4gSXQncyB0aGUgbGFzdCBvZiB0aGUgbmF0aW9uJ3MgbWFqb3IgdG9iYWNjbyBjb21wYW5pZXMgdG8gbWFya2V0IGFuIGVsZWN0cm9uaWMgY2lnYXJldHRlIGluIGFuIGluZHVzdHJ5d2lkZSBwdXNoIHRvIGRpdmVyc2lmeSBiZXlvbmQgdGhlIHRyYWRpdGlvbmFsIGNpZ2FyZXR0ZSBidXNpbmVzcywgd2hpY2ggaGFzIGJlY29tZSB0b3VnaGVyIGluIHRoZSBmYWNlIG9mIHRheCBoaWtlcywgc21va2luZyBiYW5zLCBoZWFsdGggY29uY2VybnMgYW5kIHNvY2lhbCBzdGlnbWEuIFRoZSBSaWNobW9uZCwgVmEuLWJhc2VkIGNvbXBhbnkgZGVjbGluZWQgdG8gc2F5IHdoZXRoZXIgaXQgcGxhbnMgdG8gZXhwYW5kIGJleW9uZCB0aGUgaW5pdGlhbCBzdGF0ZXdpZGUgdGVzdCBtYXJrZXQgb3Igd2hldGhlciBpdCBwbGFucyB0byBhZHZlcnRpc2Ugb24gVFYg4oCUIGEgcGxhY2UgdG9iYWNjbyBjb21wYW5pZXMgaGF2ZSBsb25nIGJlZW4gcHJvaGliaXRlZCBmcm9tIG1hcmtldGluZyB0cmFkaXRpb25hbCBjaWdhcmV0dGVzLiBEdXJpbmcgYW4gaW52ZXN0b3IgcHJlc2VudGF0aW9uIG9uIFR1ZXNkYXksIENFTyBNYXJ0eSBCYXJyaW5ndG9uIHNhaWQgdGhlIGNvbXBhbnkgaGFzICJzcGVudCBhIGdvb2QgZGVhbCBvZiB0aW1lIHN0dWR5aW5nIHRoZSBjYXRlZ29yeSBhbmQgdGhlIGJ1c2luZXNzIG9wcG9ydHVuaXR5LiIgIlRoZSBjYXRlZ29yeSBpcyBpbiBpdHMgZWFybHkgc3RhZ2VzIGFuZCB0aW1lIHdpbGwgdGVsbCBob3cgaXQgd2lsbCBldm9sdmUsIiBCYXJyaW5ndG9uIHNhaWQuIEVsZWN0cm9uaWMgY2lnYXJldHRlcyBhcmUgYmF0dGVyeS1wb3dlcmVkIGRldmljZXMgdGhhdCBoZWF0IGEgbGlxdWlkIG5pY290aW5lIHNvbHV0aW9uLCBjcmVhdGluZyB2YXBvciB0aGF0IHVzZXJzIGluaGFsZS4gRGV2b3RlZXMgc2F5IGUtY2lnYXJldHRlcyBhZGRyZXNzIGJvdGggdGhlIGFkZGljdGl2ZSBhbmQgYmVoYXZpb3JhbCBhc3BlY3RzIG9mIHNtb2tpbmcuIFNtb2tlcnMgZ2V0IHRoZWlyIG5pY290aW5lIHdpdGhvdXQgdGhlIG1vcmUgdGhhbiA0LDAwMCBjaGVtaWNhbHMgZm91bmQgaW4gcmVndWxhciBjaWdhcmV0dGVzLiBBbmQgdGhleSBnZXQgdG8gaG9sZCBzb21ldGhpbmcgc2hhcGVkIGxpa2UgYSBjaWdhcmV0dGUsIHdoaWxlIHB1ZmZpbmcgYW5kIGV4aGFsaW5nIHNvbWV0aGluZyB0aGF0IGxvb2tzIGxpa2Ugc21va2UuIE1vcmUgdGhhbiA0NSBtaWxsaW9uIEFtZXJpY2FucyBzbW9rZSBjaWdhcmV0dGVzLCBhbmQgYWJvdXQgaGFsZiBvZiBzbW9rZXJzIHRyeSB0byBxdWl0IGVhY2ggeWVhciwgYWNjb3JkaW5nIHRvIHRoZSBDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24uIE1hcmtUZW4gaXMgYSBkaXNwb3NhYmxlIGUtY2lnYXJldHRlIGJ1dCBjYW4gYmUgcmV1c2VkIGJ5IGJ1eWluZyBhIHNlcGFyYXRlIGJhdHRlcnkgcmVjaGFyZ2luZyBraXQgYW5kIGFkZGl0aW9uYWwgY2FydHJpZGdlcyBpbiBib3RoIHRvYmFjY28gYW5kIG1lbnRob2wgZmxhdm9ycy4gVGhlIGNvbXBhbnkgc2FpZCB0aGUgZS1jaWdhcmV0dGUncyAiRm91ciBEcmF3IiB0ZWNobm9sb2d5IGlzIGRlc2lnbmVkIHRvIGdpdmUgdXNlcnMgYSAibW9yZSBjb25zaXN0ZW50IGV4cGVyaWVuY2UiIHRoYXQgY2xvc2VseSByZXNlbWJsZXMgdGhlIGRyYXcgb2YgYSB0cmFkaXRpb25hbCBjaWdhcmV0dGUuIFRoZSBlLWNpZ2FyZXR0ZSwgbWFkZSBpbiBDaGluYSBieSBhIGNvbnRyYWN0IG1hbnVmYWN0dXJlciwgaXMgZXhwZWN0ZWQgdG8gc2VsbCBmb3IgYWJvdXQgJDkuNTAuIFByaWNlcyBmb3IgYWRkaXRpb25hbCBjYXJ0cmlkZ2VzIGFuZCByZWNoYXJnaW5nIGtpdCB3ZXJlIG5vdCBhdmFpbGFibGUuIFRoZSBsaXF1aWQgZm9yIHRoZSBjYXJ0cmlkZ2VzIGlzIGJlaW5nIHByb2R1Y2VkIGluIHRoZSBVLlMuIExhc3Qgd2VlaywgUmV5bm9sZHMgQW1lcmljYW4gSW5jLiwgb3duZXIgb2YgdGhlIG5hdGlvbidzIHNlY29uZC1iaWdnZXN0IHRvYmFjY28gY29tcGFueSwgYW5ub3VuY2VkIHRoYXQgaXQgaXMgbGF1bmNoaW5nIGEgcmV2YW1wZWQgdmVyc2lvbiBvZiBpdHMgVnVzZSBicmFuZCBlbGVjdHJvbmljIGNpZ2FyZXR0ZSBpbiBDb2xvcmFkbyBpbiBKdWx5LCB3aXRoIGl0cyBzaWdodHMgc2V0IG9uIGV4cGFuZGluZyBuYXRpb25hbGx5LiBMb3JpbGxhcmQgSW5jLiwgdGhlIG5hdGlvbidzIHRoaXJkLWJpZ2dlc3QgdG9iYWNjbyBjb21wYW55LCBhY3F1aXJlZCBlLWNpZ2FyZXR0ZSBtYWtlciBCbHUgRWNpZ3MgaW4gQXByaWwgMjAxMiBhbmQgaGFzIGV4cGFuZGVkIHRvIG1vcmUgdGhhbiA4MCwwMDAgcmV0YWlsIG91dGxldHMuIFRoZSBtYXJrZXQgZm9yIGUtY2lnYXJldHRlcywgd2hpY2ggaW5jbHVkZXMgbW9yZSB0aGFuIDI1MCBicmFuZHMsIGhhcyBncm93biBmcm9tIHRoZSB0aG91c2FuZHMgb2YgdXNlcnMgaW4gMjAwNiB0byBzZXZlcmFsIG1pbGxpb24gd29ybGR3aWRlLiBBbmFseXN0cyBlc3RpbWF0ZSBzYWxlcyBjb3VsZCBkb3VibGUgdGhpcyB5ZWFyIHRvICQxIGJpbGxpb24uIFNvbWUgZ28gYXMgZmFyIGFzIHNheWluZyBjb25zdW1wdGlvbiBvZiBlLWNpZ3MgY291bGQgc3VycGFzcyBjb25zdW1wdGlvbiBvZiB0cmFkaXRpb25hbCBjaWdhcmV0dGVzIGluIHRoZSBuZXh0IGRlY2FkZS4gVG9iYWNjbyBjb21wYW55IGV4ZWN1dGl2ZXMgZXZlbiBub3RlZCB0aGF0IGUtY2lnYXJldHRlcyBkcm92ZSB0b3RhbCBpbmR1c3RyeSBjaWdhcmV0dGUgdm9sdW1lcyBkb3duIGFib3V0IDYwMCBtaWxsaW9uIGNpZ2FyZXR0ZXMsIG9yIGFib3V0IDEgcGVyY2VudCwgZHVyaW5nIHRoZSBmaXJzdCBxdWFydGVyLCBleGNsdWRpbmcgSW50ZXJuZXQgc2FsZXMg4oCUIGEgbWFqb3IgYXZlbnVlIGZvciBlLWNpZyBwdXJjaGFzZXMuIFRoZSBGb29kIGFuZCBEcnVnIEFkbWluaXN0cmF0aW9uIHBsYW5zIHRvIGFzc2VydCByZWd1bGF0b3J5IGF1dGhvcml0eSBvdmVyIGUtY2lnYXJldHRlcyBpbiB0aGUgbmVhciBmdXR1cmUuIFB1YmxpYyBoZWFsdGggb2ZmaWNpYWxzIHNheSB0aGUgc2FmZXR5IG9mIGUtY2lnYXJldHRlcyBhbmQgdGhlaXIgZWZmZWN0aXZlbmVzcyBpbiBoZWxwaW5nIHBlb3BsZSBxdWl0IHJlZ3VsYXIgc21va2VzIGhhdmVuJ3QgYmVlbiBmdWxseSBzdHVkaWVkLiBEZXNwaXRlIHRoZSByZWd1bGF0b3J5IHVuY2VydGFpbnRpZXMsIGVsZWN0cm9uaWMgY2lnYXJldHRlcyBoYXZlIGF0dHJhY3RlZCB0aGUgYXR0ZW50aW9uIG9mIGludmVzdG9ycy4gRWxlY3Ryb25pYyBjaWdhcmV0dGUgbWFrZXIgTmpveSBJbmMuIHNhaWQgTW9uZGF5IGl0IGhhcyByYWlzZWQgJDc1IG1pbGxpb24gaW4gZmluYW5jaW5nIGZyb20gaW52ZXN0b3JzIGluY2x1ZGluZyBOYXBzdGVyIGZvdW5kZXIgYW5kIGVudHJlcHJlbmV1ciBTZWFuIFBhcmtlciBhbmQgSG9tZXdvb2QgQ2FwaXRhbCBwcmluY2lwYWwgRG91Z2xhcyBUZWl0ZWxiYXVtIHRvIGJlIHVzZWQgZm9yIG1hcmtldGluZywgY2xpbmljYWwgdHJpYWxzLCByZXNlYXJjaCBhbmQgZGV2ZWxvcG1lbnQsIGFuZCBpbnRlcm5hdGlvbmFsIGV4cGFuc2lvbi4gTXVzaWNpYW4gQnJ1bm8gTWFycyBhbHNvIGhhcyBpbnZlc3RlZCB0aGUgY29tcGFueSB3aG9zZSBOam95IEtpbmcgZGlzcG9zYWJsZSBlLWNpZ2FyZXR0ZXMgYXJlIGF2YWlsYWJsZSBpbiBtb3JlIHRoYW4gNjAsMDAwIHJldGFpbCBzdG9yZXMuIExpa2Ugb3RoZXIgdG9iYWNjbyBjb21wYW5pZXMsIEFsdHJpYSBhbHNvIGlzIGZvY3VzaW5nIG9uIGNpZ2FyZXR0ZSBhbHRlcm5hdGl2ZXMgZm9yIGZ1dHVyZSBzYWxlcyBncm93dGggYmVjYXVzZSB0aGUgZGVjbGluZSBpbiBjaWdhcmV0dGUgc21va2luZyBpcyBleHBlY3RlZCB0byBjb250aW51ZS4gVGhlIGNvbXBhbnkgc2FpZCBUdWVzZGF5IGl0IGlzIGV4cGFuZGluZyBpdHMgVmVydmUgY2hld2FibGUsIGRpc3Bvc2FibGUgbmljb3RpbmUgZGlzY3MgZnJvbSA2MCBzdG9yZXMgdG8gYWJvdXQgMSwyMDAgdGhyb3VnaG91dCBWaXJnaW5pYSBpbiB0aGUgc2Vjb25kIGhhbGYgb2YgdGhlIHllYXIuIEl0IGFsc28gcGxhbnMgdG8gZGVidXQgYSBndW0gY29udGFpbmluZyB0b2JhY2NvIGluIERlbm1hcmsgdGhpcyBzdW1tZXIgdW5kZXIgdGhlIFRqdSAocHJvbm91bmNlZCBsaWtlICJjaGV3IikgdGhyb3VnaCBhIHByZXZpb3VzbHkgYW5ub3VuY2VkIGpvaW50IHZlbnR1cmUgd2l0aCBhbiBhZmZpbGlhdGUgb2YgRmVydGluIFBoYXJtYSBBL1MgdG8gZGV2ZWxvcCBub24tY29tYnVzdGlibGUgbmljb3RpbmUtY29udGFpbmluZyBwcm9kdWN0cy4gQWx0cmlhLCB3aG9zZSBicmFuZHMgaW5jbHVkZSB0b3Atc2VsbGluZyBNYXJsYm9ybyBjaWdhcmV0dGVzLCBTa29hbCBzbW9rZWxlc3MgdG9iYWNjbyBhbmQgQmxhY2sgJiBNaWxkIGNpZ2FycywgYWxzbyBvbiBUdWVzZGF5IHJlYWZmaXJtZWQgaXRzIDIwMTMgZnVsbC15ZWFyIGFkanVzdGVkIGVhcm5pbmdzIGZvcmVjYXN0IG9mIGJldHdlZW4gJDIuMzUgYW5kICQyLjQxIHBlciBzaGFyZS4gIFRoZSBjb21wYW55IGFsc28gb3ducyBhIHdpbmUgYnVzaW5lc3MsIGhvbGRzIGEgdm90aW5nIHN0YWtlIGluIGJyZXdlciBTQUJNaWxsZXIsIGFuZCBoYXMgYSBmaW5hbmNpYWwgc2VydmljZXMgZGl2aXNpb24u</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8xmtyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDJmZWFiOTFhMTFiYzJmMGU=</field><field name="symbol" class="java.lang.String">rO0ABXQABEVDSUc=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT82wTiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/iPXCj1wo9</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/iPXCj1wo9</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/iPXCj1wo9</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/iPXCj1wo9</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/iPXCj1wo9</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDJmODVkMDFiZGZlODZiYTY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGsNAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwMjE=</field><field name="title" class="java.lang.String">rO0ABXQAP0dvbGQgTWFraW5nIFBlb3BsZSBDcmF6eSBpbiBQZXJpbG91cyBTZWFyY2ggZm9yIFN1bmtlbiBUcmVhc3VyZQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJVMdsAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI1YTgyYjNiNDFlNjliZjc=</field><field name="symbol" class="java.lang.String">rO0ABXQABFdPT0Q=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJaWDcAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJeFHrhR64</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJeFHrhR64</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJQ9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJYAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBIzMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAnEA==</field><field name="id" class="java.lang.String">rO0ABXQAEGJhZTdmMDc3OWE4ZmI3MjE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mIU4AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM0OTA=</field><field name="title" class="java.lang.String">rO0ABXQALkVVIFBhcmxpYW1lbnQgQXBwcm92ZXMgVG91Z2ggTmV3IFRvYmFjY28gUnVsZXM=</field><field name="content" class="java.lang.String">rO0ABXQLskV1cm9wZWFuIGxhd21ha2VycyBhcHByb3ZlZCBzd2VlcGluZyBuZXcgcmVndWxhdGlvbnMgZ292ZXJuaW5nIHRoZSBtdWx0aS1iaWxsaW9uIGRvbGxhciB0b2JhY2NvIG1hcmtldCBvbiBUdWVzZGF5LCBpbmNsdWRpbmcgbGltaXRzIG9uIGVsZWN0cm9uaWMgY2lnYXJldHRlcywgYmlnZ2VyIHdhcm5pbmdzIG9uIGNpZ2FyZXR0ZSBwYWNrcyBhbmQgYSBiYW4gb24gbWVudGhvbCBhbmQgb3RoZXIgZmxhdm9yaW5ncyBpbiBhIGJpZCB0byBmdXJ0aGVyIGN1cmIgc21va2luZy4gVGhlIEV1cm9wZWFuIFBhcmxpYW1lbnQgdm90ZSBpbiBTdHJhc2JvdXJnIGNhbWUgYWZ0ZXIgbW9udGhzIG9mIGJpdHRlciBkZWJhdGUgYW5kIGFuIHVudXN1YWxseSBzdHJvbmcgbG9iYnlpbmcgY2FtcGFpZ24gYnkgdGhlIHRvYmFjY28gaW5kdXN0cnksIHdoaWNoIGRlY3JpZXMgdGhlIHJlZ3VsYXRpb25zIGFzIGRpc3Byb3BvcnRpb25hdGUgYW5kIGxpbWl0aW5nIGNvbnN1bWVyIGZyZWVkb20uICBUaGUgUGFybGlhbWVudCBkaXNtaXNzZWQgbWFueSBvZiB0aGUgaW5kdXN0cnkncyBhcmd1bWVudHMsIGJ1dCBhZ3JlZWQgb24gd2F0ZXJlZC1kb3duIHZlcnNpb25zIG9mIHNvbWUgb2YgdGhlIG1vc3Qgc2Vuc2l0aXZlIGxlZ2lzbGF0aW9uLiBUaGUgbGVnaXNsYXR1cmUgc3RpbGwgbXVzdCByZWFjaCBhIGNvbXByb21pc2Ugd2l0aCB0aGUgMjggRVUgZ292ZXJubWVudHMgb24gY2VydGFpbiBwb2ludHMgYmVmb3JlIHRoZSBydWxlcyBjYW4gZW50ZXIgaW50byBmb3JjZS4gRGlwbG9tYXRzIHNheSBhIGRlYWwgY291bGQgYmUgc3RydWNrIGJ5IHRoZSBlbmQgb2YgdGhlIHllYXIuIFRoZSBsYXdtYWtlcnMgdm90ZWQgdG8gaW1wb3NlIHdhcm5pbmcgbGFiZWxzIOKAlCB3aXRoIHRoZSBpbmNsdXNpb24gb2YgZ3J1ZXNvbWUgcGljdG9yaWFscywgZm9yIGV4YW1wbGUgc2hvd2luZyBjYW5jZXItaW5mZXN0ZWQgbHVuZ3Mg4oCUIGNvdmVyaW5nIDY1IHBlcmNlbnQgb2YgY2lnYXJldHRlIHBhY2tzLCByZWplY3RpbmcgYSBtZWFzdXJlIGZvciBibGFuayBwYWNrYWdpbmcgaW5zdGVhZC4gTGVnaXNsYXRvcnMgYWxzbyB2b3RlZCBmb3IgbmV3IGxpbWl0cyBvbiBhZHZlcnRpc2luZyBmb3IgZWxlY3Ryb25pYyBjaWdhcmV0dGVzLCBidXQgcmVqZWN0ZWQgYSBtZWFzdXJlIHRoYXQgd291bGQgaGF2ZSByZXN0cmljdGVkIHRoZW0gdG8gbWVkaWNhbCB1c2Ugb25seS4gVGhlIGJhdHRlcnktb3BlcmF0ZWQgcHJvZHVjdHMgdHVybiBuaWNvdGluZSBpbnRvIGEgdmFwb3IgaW5oYWxlZCBieSB0aGUgdXNlciBhbmQgYXJlIG9mdGVuIG1hcmtldGVkIGFzIGEgbGVzcyBoYXJtZnVsIGFsdGVybmF0aXZlIHRvIHRvYmFjY28uIE1hbnkgaGVhbHRoIGV4cGVydHMgc2F5IGUtY2lnYXJldHRlcyBhcmUgdXNlZnVsIGZvciBwZW9wbGUgdHJ5aW5nIHRvIHF1aXQgb3IgY3V0IGRvd24gb24gbmljb3RpbmUuIFRoZSBQYXJsaWFtZW50IGFsc28gdm90ZWQgdG8gYmFuIG1lbnRob2wg4oCUIHRob3VnaCBub3QgdW50aWwgMjAyMiDigJQgYW5kIHNvbWUgb3RoZXIgZmxhdm9yaW5ncy4gVGhleSByZWplY3RlZCBhIGJhbiBvbiBzbGltIGNpZ2FyZXR0ZXMuIEVVIG9mZmljaWFscyBwbGVhZGVkIHBhc3Npb25hdGVseSBmb3IgdG91Z2ggYW50aS10b2JhY2NvIG1lYXN1cmVzLCBhcmd1aW5nIGl0J3MgYSBjcnVjaWFsIHF1ZXN0aW9uIG9mIHB1YmxpYyBoZWFsdGguIFRoZXkgYWxzbyB3YW50IHRvIHN0b3AgeW91bmdzdGVycyBmcm9tIGJlaW5nIHN3YXllZCBpbnRvIHNtb2tpbmcgYnkgbmV3LCBmYW5jeSBwYWNrYWdpbmcsIGUtY2lnYXJldHRlcywgb3IgY2lnYXJldHRlcyBmZWF0dXJpbmcgZmxhdm9ycyBzdWNoIGFzIGZydWl0IGFyb21hcy4gU21va2luZyBiYW5zIGluIHB1YmxpYywgbGltaXRzIG9uIHRvYmFjY28gZmlybXMnIGFkdmVydGlzaW5nLCBhbmQgb3RoZXIgbWVhc3VyZXMgb3ZlciB0aGUgcGFzdCBkZWNhZGUgaGF2ZSBzZWVuIHRoZSBudW1iZXIgb2Ygc21va2VycyBmYWxsIGZyb20gYW4gZXN0aW1hdGVkIDQwIHBlcmNlbnQgb2YgdGhlIEVVJ3MgNTAwIG1pbGxpb24gY2l0aXplbnMgdG8gMjggcGVyY2VudCBub3cuIFN0aWxsLCB0cmVhdG1lbnQgb2Ygc21va2UtcmVsYXRlZCBkaXNlYXNlcyBjb3N0cyBhYm91dCAyNSBiaWxsaW9uIGV1cm9zICgkMzQgYmlsbGlvbikgYSB5ZWFyLCBhbmQgdGhlIGJsb2MgZXN0aW1hdGVzIHRoZXJlIGFyZSBhcm91bmQgNzAwLDAwMCBzbW9raW5nLXJlbGF0ZWQgZGVhdGhzIHBlciBhbm51bSBhY3Jvc3MgdGhlIDI4LW5hdGlvbiBibG9jLiBQcmltZSBNaW5pc3RlciBFbmRhIEtlbm55IG9mIElyZWxhbmQgb24gTW9uZGF5IHdyb3RlIGEgZmVydmVudCBhcHBlYWwgdG8gbGF3bWFrZXJzLCBzYXlpbmc6ICJFdmVyeSB5ZWFyLCBtb3JlIEV1cm9wZWFucyBkaWUgZnJvbSBzbW9raW5nIHRoYW4gZnJvbSB0aGUgY29tYmluZWQgdG90YWwgb2YgY2FyIGFjY2lkZW50cywgZmlyZXMsIGhlcm9pbiwgY29jYWluZSwgbXVyZGVyIGFuZCBzdWljaWRlLiIgTG9iYnlpbmcgYWdhaW5zdCB0aGUgbWVhc3VyZSB3YXMgbGVkIGJ5IFBoaWxpcCBNb3JyaXMgSW50ZXJuYXRpb25hbCBJbmMuLCB3aGljaCBvd25zIHNldmVyYWwgYnJhbmRzIHN1Y2ggYXMgTWFybGJvcm8gYW5kIGNhbGxlZCB0aGUgbmV3IGxlZ2lzbGF0aW9uICJkZWVwbHkgZmxhd2VkLiIgVGhlIGNvbXBhbnkgbWFpbnRhaW5zIHRoYXQsIGFtb25nIG90aGVyIHRoaW5ncywgYmFubmluZyBtZW50aG9sLCBzbGltIGNpZ2FyZXR0ZXMgb3Igc21hbGwgcGFja2FnZXMgd291bGQgdmlvbGF0ZSBFVSBydWxlcy4gUGhpbGlwIE1vcnJpcywgd2l0aCAkOC41IGJpbGxpb24gb2Ygc2FsZXMgYW5kIDEyLDUwMCBlbXBsb3llZXMgaW4gRXVyb3BlLCBhbHNvIGNsYWltZWQgdGhlIHJlZ3VsYXRpb24gY291bGQgcmVzdWx0IGluIHVwIHRvIDE3NSwwMDAgam9iIGxvc3NlcyBhbmQgbG9zdCB0YXggcmV2ZW51ZXMgb2YgNSBiaWxsaW9uIGV1cm9zIHBlciB5ZWFyLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGWb6CAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDViMzRkZTUxNGExMDllMzE=</field><field name="symbol" class="java.lang.String">rO0ABXQABEVDSUc=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGblfyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA0AAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA0AAAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA0AAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA0AAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA0AAAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAZA==</field><field name="id" class="java.lang.String">rO0ABXQAEGE4NjExYjMxZDg3MTMwMjI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKWEAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDcxNTA=</field><field name="title" class="java.lang.String">rO0ABXQAMUp1c3RpY2VzIERlY2xpbmUgdG8gSGVhciBDaGFsbGVuZ2UgdG8gVG9iYWNjbyBMYXc=</field><field name="content" class="java.lang.String">rO0ABXQG4FRoZSBVLlMuIFN1cHJlbWUgQ291cnQgb24gTW9uZGF5IGRlY2xpbmVkIHRvIGhlYXIgYSB0b2JhY2NvIGluZHVzdHJ5IGNoYWxsZW5nZSB0byBhIGZlZGVyYWwgbGF3IHRoYXQgZXhwYW5kZWQgcmVzdHJpY3Rpb25zIG9uIHRoZSBhZHZlcnRpc2luZyBhbmQgbWFya2V0aW5nIG9mIGNpZ2FyZXR0ZXMuIFRoZSBwcm92aXNpb25zIG9mIHRoZSAyMDA5IEZhbWlseSBTbW9raW5nIFByZXZlbnRpb24gYW5kIFRvYmFjY28gQ29udHJvbCBBY3QgdW5kZXIgYXR0YWNrIGluY2x1ZGVkIG9uZSByZXF1aXJpbmcgdGhlIGRpc3BsYXkgb2YgYSBsYXJnZSBoZWFsdGggd2FybmluZyBvbiBwYWNrYWdpbmcgYW5kIGFub3RoZXIgYmFubmluZyB0aGUgc3BvbnNvcnNoaXAgb2YgcHVibGljIGV2ZW50cy4gVGhlIGxhdyBhbHNvIHJlcXVpcmVzIHRoYXQgYmVmb3JlIGEgdG9iYWNjbyBwcm9kdWN0IGNhbiBiZSBtYXJrZXRlZCwgdGhlIG1hbnVmYWN0dXJlciBtdXN0IHByb3ZlIHRvIHRoZSBVLlMuIEZvb2QgYW5kIERydWcgQWRtaW5pc3RyYXRpb24gdGhhdCBpdCBpcyBsZXNzIGRhbmdlcm91cyB0aGFuIG90aGVyIHRvYmFjY28gcHJvZHVjdHMuIFRoaXMgcHJvdmlzaW9uIGlzIGFpbWVkIGF0IGRlc2NyaXB0aXZlIG1hcmtldGluZyB0ZXJtcyBzdWNoIGFzICJsaWdodCIgYW5kICJtaWxkLiIgVGhvc2UgY2hhbGxlbmdpbmcgdGhlIHByb3Zpc2lvbnMgb2YgdGhlIGxhdyBpbmNsdWRlZCBjb21wYW5pZXMgb3duZWQgaW4gcGFydCBvciBpbiBmdWxsIGJ5IFJleW5vbGRzIEFtZXJpY2FuIEluYyAsIEJyaXRpc2ggQW1lcmljYW4gVG9iYWNjbyBQbGMsIEltcGVyaWFsIFRvYmFjY28gR3JvdXAgUGxjIGFuZCBMb3JpbGxhcmQgSW5jLiBUaGUgY29tcGFuaWVzIGNsYWltZWQgdGhlIGxhdyB2aW9sYXRlcyB0aGUgRmlyc3QgQW1lbmRtZW50J3MgZ3VhcmFudGVlIG9mIGZyZWVkb20gb2Ygc3BlZWNoLCAgaW1wb3NpbmcgIm15cmlhZCByZXN0cmljdGlvbnMgb24gdHJ1dGhmdWwsIG5vbi1taXNsZWFkaW5nIHNwZWVjaCB0byBhZHVsdCB0b2JhY2NvIGNvbnN1bWVycy4iIEluIHJlc3BvbnNlLCB0aGUgT2JhbWEgYWRtaW5pc3RyYXRpb24gbm90ZWQgaW4gY291cnQgcGFwZXJzIHRoYXQgdGhlIGxhdyB3YXMgc3BlY2lmaWNhbGx5IGRyYWZ0ZWQgdG8gYmF0dGxlIGEgcmVjb2duaXplZCBwdWJsaWMgaGVhbHRoIHByb2JsZW0uIENvbmdyZXNzIHdhcyBwYXJ0aWN1bGFybHkgaW50ZXJlc3RlZCBpbiByZXN0cmljdGluZyB0aGUgbWFya2V0aW5nIG9mIGNpZ2FyZXR0ZXMgdG8geW91bmcgcGVvcGxlLCBnb3Zlcm5tZW50IGxhd3llcnMgd3JvdGUuIFRoZSBDaW5jaW5uYXRpLWJhc2VkIDZ0aCBVLlMuIENpcmN1aXQgQ291cnQgb2YgQXBwZWFscyB1cGhlbGQgdGhlIGxhdyBpbiBmdWxsLCBzYXlpbmcgdGhlIHdhcm5pbmdzICJhcmUgcmVhc29uYWJseSByZWxhdGVkIHRvIHRoZSBnb3Zlcm5tZW50J3MgaW50ZXJlc3QgaW4gcHJldmVudGluZyBjb25zdW1lciBkZWNlcHRpb24uIiBUaGUgY2FzZSBpcyBkaXN0aW5jdCBmcm9tIGEgc2VwYXJhdGUgaW5kdXN0cnkgY2hhbGxlbmdlIHRvIHJlZ3VsYXRpb25zIHRoZSBGREEgaXNzdWVkIHRvIGltcGxlbWVudCB0aGUgZ3JhcGhpYyB3YXJuaW5nIHJlcXVpcmVtZW50LiBUaGUgVS5TLiBDb3VydCBvZiBBcHBlYWxzIGZvciB0aGUgRGlzdHJpY3Qgb2YgQ29sdW1iaWEgQ2lyY3VpdCB0b3NzZWQgb3V0IHRoZSByZWd1bGF0aW9uLiBUaGUgRkRBIGlzIGN1cnJlbnRseSBkcmFmdGluZyBhIG5ldyBvbmUu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4wHOSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDc2ZDZlMTdhNTdjOTVkZjY=</field><field name="symbol" class="java.lang.String">rO0ABXQABUlUWUJZ</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT41Q0CAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBRWuFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBRfMzMzMzN</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBRWZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBReZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBPqPXCj1wp</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAMAwA==</field><field name="id" class="java.lang.String">rO0ABXQAEDc3ZWYzYWRlYTMxZDhmNWY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mG2GAAAA==</field></document></documents><date>2015-05-07T12:11:42-0500</date></cacheEntry>
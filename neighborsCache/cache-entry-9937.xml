<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0EO1GZWJydWFyeXMgam9icyByZXBvcnQgZm9sbG93ZWQgdHdvIHN0cmFpZ2h0IG1vbnRocyBvZiBwYXlyb2xscyByZXBvcnRzIHRoYXQgd2VyZSBzaGFycGx5IGJlbG93IGV4cGVjdGF0aW9ucyBhbmQgdGhlIHJlYm91bmQgcmVpbmZvcmNlZCB0aGUgdGhlb3J5IHRoYXQgdGhlIHdlYWtuZXNzIGluIERlY2VtYmVyIGFuZCBKYW51YXJ5IGhhZCBiZWVuIHRlbXBvcmFyeSByZWxhdGVkIHRvIHdlYXRoZXIgYXMgb3Bwb3NlZCB0byB3b3JzZW5pbmcgZnVuZGFtZW50YWxzIFRoYXQgYmV0IGhhcyBoZWxwZWQgZXF1aXRpZXMgc2hydWcgb2ZmIGJlYXJpc2ggZGF0YSBhbmQgZ2VvcG9saXRpY2FsIHVuY2VydGFpbnRpZXMgaW4gVWtyYWluZSB0YWtpbmcgdGhlIFNQIDUwMCB0byBhIHNlcmllcyBvZiByZWNvcmQgaGlnaHMgSG93ZXZlciBpdCBhbHNvIHJhaXNlZCBjb25jZXJucyB0aGF0IHRoZSBtYXJrZXQgbWF5IGJlIHZ1bG5lcmFibGUgdG8gcHVsbGJhY2tzIG9uIGFueSBpbmRpY2F0aW9uIHRoYXQgY29uZGl0aW9ucyBoYXZlIGdvdHRlbiB3b3JzZSBXZXJlIGhvcGluZyB0aGUgcGF5cm9sbCByZXBvcnQgbWVhbnMgd2VyZSBvbiBhIHN0cm9uZ2VyIGZvb3RpbmcgZ29pbmcgYWhlYWQgYW5kIHRoYXQgd2UgY2FuIGdldCBtb3JlIHJvYnVzdCBncm93dGggZ29pbmcgZm9yd2FyZCBzYWlkIE1pY2hhZWwgTXVsbGFuZXkgY2hpZWYgaW52ZXN0bWVudCBvZmZpY2VyIG9mIEZpZHVjaWFyeSBUcnVzdCBDbyBpbiBCb3N0b24gTm93IHdlcmUgdHJhZGluZyBvbiBmdW5kYW1lbnRhbHMgd2hpY2ggd2UgdGhpbmsgYXJlIGZpbmUgV2VyZSBjb21mb3J0YWJsZSBzdGlsbCBiZWluZyBsb25nIG9uIHRoZSBtYXJrZXQgSW4gYSBzaWduIG9mIHBvc2l0aXZlIHRyYWRpbmcgbW9tZW50dW0gdGhlIFNQIDUwMCBpcyAxMyBwZXJjZW50IGFib3ZlIGl0cyAxNGRheSBtb3ZpbmcgYXZlcmFnZSBhIGxldmVsIHRoYXQgY291bGQgc2VydmUgYXMgc3VwcG9ydCBpbiBhIG1hcmtldCBkZWNsaW5lIEZvciB0aGUgd2VlayB0aGUgRG93IHJvc2UgMDggcGVyY2VudCB0aGUgU1AgNTAwIGNsaW1iZWQgMSBwZXJjZW50IGFuZCB0aGUgTmFzZGFxIGdhaW5lZCAwNyBwZXJjZW50IFRoZSBEb3cgYW5kIHRoZSBTUCA1MDAgcm9zZSBmb3IgdGhlaXIgc2Vjb25kIHN0cmFpZ2h0IHdlZWsgb2YgZ2FpbnMgVGhlIE5hc2RhcSBhZHZhbmNlZCBmb3IgYSBmaWZ0aCBzdHJhaWdodCB3ZWVrIHVwIDU3IHBlcmNlbnQgb3ZlciB0aGF0IHBlcmlvZCBPbiBGcmlkYXkgdGhlIFNQIDUwMCBlbmRlZCBhdCBhIHJlY29yZCBoaWdoIG9mIDE4NzgwNCBUaGUgbWlsZXN0b25lIG1hcmtlZCBpdHMgZmlmdGggcmVjb3JkIGNsb3NpbmcgaGlnaCBpbiB0aGUgcGFzdCBzZXZlbiBzZXNzaW9ucyBXYWxsIFN0cmVldCBoYXMgbWFyY2hlZCBzdGVhZGlseSBoaWdoZXIgdGhpcyB5ZWFyIHNhdmUgZm9yIGEgcHVsbGJhY2sgaW4gbGF0ZSBKYW51YXJ5IHRoYXQgY2FtZSBvbiBjb25jZXJucyBhYm91dCBlbWVyZ2luZyBtYXJrZXRzIFRob3NlIHdvcnJpZXMgd2lsbCByZW1haW4gcHJvbWluZW50IGFmdGVyIFJ1c3NpYW4gUHJlc2lkZW50IFZsYWRpbWlyIFB1dGluIHJlYnVmZmVkIGEgd2FybmluZyBmcm9tIFVTIFByZXNpZGVudCBCYXJhY2sgT2JhbWEgb3ZlciBNb3Njb3dzIG1pbGl0YXJ5IGludGVydmVudGlvbiBpbiBVa3JhaW5lcyBDcmltZWEgcmVnaW9uIE9iYW1hIGhhcyBvcmRlcmVkIHNhbmN0aW9ucyBhZ2FpbnN0IFJ1c3NpYSBpbiB0aGUgbW9zdCBzZXJpb3VzIGNvbmZyb250YXRpb24gc2luY2UgdGhlIENvbGQgV2FyIFdlZWtlbmRzIGFyZSBub3RvcmlvdXMgZm9yIGdlb3BvbGl0aWNhbCBkZXZlbG9wbWVudHMgc28gd2UgbWlnaHQgYmUgdnVsbmVyYWJsZSB0byBzb21lIGtpbmQgb2Ygc2hvY2sgc2FpZCBUZXJyeSBEdUZyZW5lIGludmVzdG1lbnQgc3BlY2lhbGlzdCBhdCBKUE1vcmdhbiBQcml2YXRlIEJhbmsgaW4gTmV3IE9ybGVhbnMgd2hpY2ggaGFzIDk3NyBiaWxsaW9uIGluIGFzc2V0cyB1bmRlciBtYW5hZ2VtZW50IE1hY3JvIGlzc3VlcyBtYXkgaGF2ZSBhIGxhcmdlIGluZmx1ZW5jZSBvbiB0cmFkaW5nIHRoaXMgd2VlayB3aXRoIGxpdHRsZSBlbHNlIHRoYXQgY291bGQgc2VydmUgYXMgY2F0YWx5c3RzIE9ubHkgdHdvIFNQIDUwMCBjb21wb25lbnRzIFVyYmFuIE91dGZpdHRlcnMgYW5kIERvbGxhciBHZW5lcmFsICBhcmUgc2NoZWR1bGVkIHRvIHJlcG9ydCBxdWFydGVybHkgcmVzdWx0cyBFY29ub21pYyBpbmRpY2F0b3JzIG9uIHRhcCBpbmNsdWRlIEZlYnJ1YXJ5IHJldGFpbCBzYWxlcyBzZWVuIHJpc2luZyAwMiBwZXJjZW50IGFuZCBhIHByZWxpbWluYXJ5IHJlYWQgb24gTWFyY2ggY29uc3VtZXIgc2VudGltZW50IGZyb20gdGhlIFRob21zb24gUmV1dGVyc1VuaXZlcnNpdHkgb2YgTWljaGlnYW4gU3VydmV5cyBvZiBDb25zdW1lcnMgd2hpY2ggaXMgZXhwZWN0ZWQgdG8gZWRnZSB1cCBmcm9tIEZlYnJ1YXJ5IFdoaWxlIGFueSBkZXZlbG9wbWVudCBpbiBVa3JhaW5lIGNvdWxkIG92ZXJzaGFkb3cgdGhlIGRhdGEgdGhlIGNvbmZsaWN0IGlzIG5vdCBleHBlY3RlZCB0byBkcmFzdGljYWxseSBjaGFuZ2UgdGhlIG1hcmtldHMgZnVuZGFtZW50YWxzIFdlcmUgbm90IGFzIHN1c2NlcHRpYmxlIHRvIGEgZGlzcnVwdGlvbiBmcm9tIHRoYXQgcGFydCBvZiB0aGUgZ2xvYmUgYXMgd2Ugd291bGQgYmUgdG8gYSBmbGFyZXVwIGluIHRoZSBNaWRkbGUgRWFzdCBEdUZyZW5lIHNhaWQgVGhhdCBnaXZlcyB1cyBzb21lIGJyZWF0aGluZyByb29tIGFuZCB0aG91Z2ggdGhlcmUgd2lsbCBiZSBmZWFycyBvZiBjb250YWdpb24gdGhlIG1hcmtldCBzaG91bGQgYmUgYWJsZSB0byBjb250aW51ZSB0YWtpbmcgdGhpbmdzIGluIHN0cmlkZSAgRkFWT1JJTkcgTEFSR0VDQVAgU1RPQ0tTIEVxdWl0aWVzIGluIHRvdGFsIG1heSBiZSBoYXJkcHJlc3NlZCB0byBwb3N0IGRyYW1hdGljIGdhaW5zIGZyb20gcmVjb3JkIGxldmVscyBidXQgYW5hbHlzdHMgc2VlIG9wcG9ydHVuaXR5IGluIHNwZWNpZmljIGFyZWFzIG9mIHRoZSBtYXJrZXQgRmlkdWNpYXJ5IFRydXN0cyBNdWxsYW5leSB3aG8gb3ZlcnNlZXMgYWJvdXQgMTEzIGJpbGxpb24gaW4gYXNzZXRzIHNhaWQgaGUgd2FzIG92ZXJ3ZWlnaHQgbGFyZ2VjYXAgc3RvY2tzIGFuZCB1bmRlcndlaWdodCBzbWFsbGNhcHMgd2hpY2ggb3V0cGVyZm9ybWVkIHRoZSBTUCA1MDAgZm9yIHRoZSBwYXN0IHR3byB5ZWFycyBhcyB3ZWxsIGFzIHNvIGZhciBpbiAyMDE0IFdoaWxlIG11bHRpbmF0aW9uYWxzIHdpdGggYSBsb3Qgb2YgZW1lcmdpbmcgbWFya2V0IGV4cG9zdXJlIGNvdWxkIGJlIGhpdCBieSBkZXZlbG9wbWVudHMgaW4gVWtyYWluZSB3ZSBkb250IHRoaW5rIHRoZSBwYWluIHdpbGwgYmUgdGhhdCBvdXRzaXplZCBjb21wYXJlZCB0byBvdGhlciBwYXJ0cyBvZiB0aGUgbWFya2V0IGFuZCBpbiB0aGUgbWVhbnRpbWUgc21hbGxjYXBzIGFyZSBub3QgZmF2b3JlZCBieSB0aGVpciB2YWx1YXRpb24gVGhlIGZvcndhcmQgcHJpY2V0b2Vhcm5pbmdzIHJhdGlvIG9mIHRoZSBzbWFsbGNhcCBTUCA2MDAgIGlzIDIwMSB3aGlsZSB0aGUgUnVzc2VsbCAyMDAwcyB3aGljaCBpbmNsdWRlcyBtb3JlIHNtYWxsIG5hbWVzIGlzIDI0NSBUbyBjb21wYXJlIHRoZSBTUCAxMDAgd2hpY2ggaGFzIGEgaGlnaGVyIGNvbmNlbnRyYXRpb24gb2YgbGFyZ2VjYXAgbmFtZXMgaGFzIGEgUEUgcmF0aW8gb2YgMTQzIHdoaWxlIHRoZSBiZW5jaG1hcmsgU1AgNTAwcyBpcyAxNTggTW9yZ2FuIFN0YW5sZXkgYW5hbHlzdHMgd3JvdGUgdGhhdCBpdCBoYWQgYmVlbiBkaXNtaXNzaXZlIG9mIHRoZSBpZGVhIHRoYXQgZW1lcmdpbmcgbWFya2V0IGNvbnRhZ2lvbiB3b3VsZCBpbXBhY3QgVVMgZXF1aXRpZXMgYXMgd2hhdCByZWFsbHkgbWF0dGVycyBpcyB0aGF0IHRoZSBkcmVhbSBvZiBncm93dGggaXMgc3RpbGwgYWxpdmUgd2l0aCBjb3Jwb3JhdGUgZWFybmluZ3Mgbm90IHNsb3dpbmcgSW4gdGhpcyBlbnZpcm9ubWVudCB0aGUgZmlybSBhZGRlZCBpbiBhIG5vdGUgdG8gY2xpZW50cyBzdG9jayBwaWNrZXJzIHdvdWxkIGJlbmVmaXQgZnJvbSBleHBvc3VyZSB0byB0ZWNobm9sb2d5IGFzIGl0cyBoaXN0b3JpY2FsIGFscGhhIHJhbmtzIGZpcnN0IG92ZXIgYWxsIG90aGVyIHNlY3RvcnMgU3VuZGF5IG1hcmtzIHRoZSBmaXZleWVhciBhbm5pdmVyc2FyeSBvZiB0aGUgY2xvc2luZyBsb3cgdGhhdCB0aGUgU1AgNTAwIHJlYWNoZWQgZHVyaW5nIHRoZSBmaW5hbmNpYWwgY3Jpc2lzIFRoZSBiZW5jaG1hcmsgaW5kZXggaGFzIHNvYXJlZCBhbG1vc3QgMTgwIHBlcmNlbnQgZnJvbSB0aGF0IGxldmVsdAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAb2FydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2UsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEzLTAzLTI3VDAwOjAwOjAwWiBUTyAyMDEzLTEyLTI3VDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDMxNzE=</field><field name="title" class="java.lang.String">rO0ABXQALEZlZCBNYXkgVGFwZXIgd2l0aG91dCBDYXVzaW5nIE1hcmtldCBUYW50cnVt</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEf/VyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGE0MTMyYWI1NjU0OWI4YTI=</field><field name="symbol" class="java.lang.String">rO0ABXQABEFNVEQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUElI7iAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA78KPXCj1x</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA78KPXCj1x</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7TMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7nCj1wo9c</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6euFHrhR7</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAACZuSA==</field><field name="id" class="java.lang.String">rO0ABXQAEDZhY2M0NzA3OTUyNzIzMzE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJihAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDIzNjA=</field><field name="title" class="java.lang.String">rO0ABXQAOkFmdGVyICdKdXN0IFJpZ2h0JyBKb2JzIERhdGEsIFdhbGwgU3RyZWV0IEFza3MgV2hhdCdzIE5leHQ=</field><field name="content" class="java.lang.String">rO0ABXQTQlRoZSBlcXVpdHkgbWFya2V0IGlzIG9uIG5lYnVsb3VzIG1pZGRsZSBncm91bmQuIFRoZSBTJlAgNTAwIGlzIGp1c3QgMS41IHBlcmNlbnQgYXdheSBmcm9tIGl0cyBhbGwtdGltZSBjbG9zaW5nIGhpZ2gsIGJ1dCBvdGhlciB0aGFuIEZyaWRheSdzIHJhbGx5IG9uIHRoZSBqb2JzIGRhdGEsIGl0IGhhcyBiZWVuIHN0dWNrIGluIGEgcGVyaW9kIG9mIHVuY2VydGFpbnR5LiBUaGUgTGFib3IgRGVwYXJ0bWVudCBhZGRlZCAxNzUsMDAwIGpvYnMgaW4gTWF5LCBzbGlnaHRseSBoaWdoZXIgdGhhbiBleHBlY3RlZCwgYnV0IGF0IGEgbGV2ZWwgdGhhdCBpbmRpY2F0ZXMgdGhlIHN0YXR1cyBxdW8gc2hvdWxkIGhvbGQgZm9yIHRoZSBGZWRlcmFsIFJlc2VydmUncyBzdGltdWx1cyBwcm9ncmFtLiBTb21lIGhhZCB3b3JyaWVkIHRoYXQgaWYgam9iIGdyb3d0aCBmYXIgZXhjZWVkZWQgZXhwZWN0YXRpb25zLCB0aGUgRmVkIHdvdWxkIHJlZHVjZSBib25kLWJ1eWluZyBzb29uZXIgdGhhbiBleHBlY3RlZCwgd2hpbGUgb3RoZXJzIHdlcmUgY29uY2VybmVkIHRoYXQgYW4gZXhjZXB0aW9uYWxseSB3ZWFrIG51bWJlciB3b3VsZCByZXZlYWwgYSBmdW5kYW1lbnRhbGx5IHNvZnQgbGFib3IgbWFya2V0LiBUaGUgZGF0YSdzIGFiaWxpdHkgdG8gcmVsaWV2ZSBib3RoIGZlYXJzIG1heSBiZW5lZml0IHN0b2Nrcy4gIlRoZSBudW1iZXIgaGFkIGEgbGl0dGxlIHNvbWV0aGluZyBpbiBpdCBmb3IgZXZlcnlib2R5LCBpbiB0ZXJtcyBvZiB0aG9zZSB3aG8gc3VzcGVjdCB0YXBlcmluZyBtaWdodCBiZWdpbiBzb29uZXIgYW5kIHRob3NlIHdobyB0aGluayBpdCBtaWdodCBzdGFydCBsYXRlciwiIE1hcmsgTHVzY2hpbmksIGNoaWVmIGludmVzdG1lbnQgc3RyYXRlZ2lzdCBvZiBKYW5uZXkgTW9udGdvbWVyeSBTY290dCBpbiBQaGlsYWRlbHBoaWEgc2FpZCwgYWRkaW5nIHRoYXQgdGhlIE1heSBwYXlyb2xscyBmaWd1cmUgY291bGQgInByaW1lIG1hcmtldCBwYXJ0aWNpcGFudHMgdG8gYmUgbW9yZSBwb3NpdGl2ZSB0b3dhcmQgZXF1aXRpZXMgbGVhZGluZyBpbnRvIiB0aGlzIHdlZWsncyB0cmFkaW5nLiBUaGUgRmVkJ3Mgc3RpbXVsdXMgcHJvZ3JhbSBpcyB3aWRlbHkgY2l0ZWQgYXMgYSBtYWpvciBjb250cmlidXRvciB0byB0aGUgUyZQIDUwMCdzIHN1cmdlIG9mIDE1LjIgcGVyY2VudCBpbiAyMDEzLCB3aGVuIGl0IGhhcyBoaXQgYSByZXBlYXRlZCBzZXJpZXMgb2YgcmVjb3JkIGhpZ2hzLiBXYWxsIFN0cmVldCdzIHBlcmZvcm1hbmNlIGhhcyBiZWVuIGNsb3NlbHkgdGV0aGVyZWQgdG8gdGhlIEZlZCdzIHN0aW11bHVzIG1lYXN1cmVzLCBiZW5lZml0aW5nIGZyb20gdGhlIGJlbGllZiB0aGF0IHRoZSBlY29ub215IGlzIGp1c3Qgd2VhayBlbm91Z2ggdG8ga2VlcCB0aGUgRmVkIGJ1eWluZyBib25kcy4gV2hlbiBGZWQgQ2hpZWYgQmVuIEJlcm5hbmtlIHNhaWQgb24gTWF5IDIyIHRoYXQgdGhlIGNlbnRyYWwgYmFuayBtYXkgZGVjaWRlIHRvIHJlZHVjZSBwdXJjaGFzZXMgaWYgdGhlIGVjb25vbXkgc2hvd3Mgc2lnbnMgb2Ygc2lnbmlmaWNhbnQgaW1wcm92ZW1lbnQsIHN0b2NrcyBmZWxsIGFuZCBib25kIHlpZWxkcyBzdXJnZWQuIFRIRSBEQU5DRSBPRiBVTkNFUlRBSU5UWSBUaGUgdW5jZXJ0YWludHkgaGFzIGFsc28gaW5jcmVhc2VkIHZvbGF0aWxpdHksIHdpdGggdGhlIFMmUCA1MDAgZnJlcXVlbnRseSBtYWtpbmcgZGFpbHkgbW92ZXMgb2YgMSBwZXJjZW50IG9yIHN0YWdpbmcgZHJhbWF0aWMgbWlkZGF5IHJldmVyc2Fscy4gVGhlIENCT0UgVm9sYXRpbGl0eSBJbmRleCBoYXMgcmlzZW4gbW9yZSB0aGFuIDIwIHBlcmNlbnQgb3ZlciB0aGUgcGFzdCB0aHJlZSB3ZWVrcywgYWx0aG91Z2ggYXQgRnJpZGF5J3MgY2xvc2Ugb2YgMTUuMTQsIHRoZSBWSVggaXMgc3RpbGwgYXQgYSBsZXZlbCBhc3NvY2lhdGVkIHdpdGggYSByZWxhdGl2ZWx5IGNhbG0gZW52aXJvbm1lbnQuICJFcXVpdHkgbWFya2V0cyBhcmUgaW4gYSBwZXJpb2Qgb2YgYWRqdXN0bWVudCwiIHNhaWQgQW5hc3Rhc2lhIEFtb3Jvc28sIGdsb2JhbCBtYXJrZXQgc3RyYXRlZ2lzdCBhdCBKLlAuIE1vcmdhbiBGdW5kcyBpbiBOZXcgWW9yaywgd2hpY2ggaGFzIGFib3V0ICQ0MDAgYmlsbGlvbiBpbiBhc3NldHMuICJJZiB0aGVyZSdzIGFuIHVuYW5ub3VuY2VkIGNoYW5nZSBpbiBwb2xpY3ksIHRoYXQgY291bGQgYmUgYSBzaG9jayB0byB0aGUgZG93bnNpZGUuIiBUaGF0IGFkanVzdG1lbnQgaXMgbGlrZWx5IHRvIGtlZXAgdHJhZGluZyBpbiBhIG5hcnJvdyByYW5nZS4gT24gVGh1cnNkYXksIHRoZSBTJlAgNTAwIGJyaWVmbHkgZmVsbCB1bmRlciBpdHMgNTAtZGF5IG1vdmluZyBhdmVyYWdlIG9mIDEsNjA0LCBhcyB3ZWxsIGFzIGJlbG93IHRoZSBwc3ljaG9sb2dpY2FsbHkgaW1wb3J0YW50IGxldmVsIG9mIDEsNjAwLCBiZWZvcmUgcmVib3VuZGluZy4gSG93ZXZlciwgdGhlIGJlbmNobWFyayBpbmRleCByZW1haW5zIGJlbG93IGl0cyAxNC1kYXkgbW92aW5nIGF2ZXJhZ2Ugb2YgMSw2NDUuMDguIFRoaXMgeWVhcidzIGdhaW5zIGhhdmUgYmVlbiBicm9hZCwgd2l0aCBhbGwgMTAgUyZQIDUwMCBzZWN0b3JzIHNoYXJwbHkgaGlnaGVyLCBzbyBpdCBpcyBkaWZmaWN1bHQgdG8gZGV0ZXJtaW5lIHdoaWNoIHNlY3RvcnMgbWF5IGJlIHRoZSBtb3N0IHZ1bG5lcmFibGUgdG8gYSBtYXJrZXQgcHVsbGJhY2suIFRoZSBiZXN0LXBlcmZvcm1pbmcgc2VjdG9yIG9mIHRoZSB5ZWFyIC0gaGVhbHRoIGNhcmUsIHVwIDIwIHBlcmNlbnQgLSBpcyBhIGRlZmVuc2l2ZSBncm91cCwgYXMgaXMgdGVsZWNvbW11bmljYXRpb25zICwgb25lIG9mIHRoZSB5ZWFyJ3Mgd2Vha2VyIHBlcmZvcm1lcnMsIHdpdGggYSAyMDEzIGdhaW4gb2YgOC42IHBlcmNlbnQuIEN5Y2xpY2FsIHNlY3RvcnMsIHdoaWNoIGFyZSB0aWVkIHRvIHRoZSBwYWNlIG9mIGVjb25vbWljIGdyb3d0aCBhbmQgaGF2ZSBiZWVuIGVzcGVjaWFsbHkgc2Vuc2l0aXZlIHRvIGFueSBpbmRpY2F0aW9uIHRoYXQgRmVkIHBvbGljeSBtYXkgYmUgY2hhbmdpbmcsIGhhdmUgYWxzbyBvdXRwZXJmb3JtZWQgdGhlIGJyb2FkIG1hcmtldCB0aGlzIHllYXIuIERlc3BpdGUgdGhvc2UgZ2FpbnMgYW5kIHRoZSB1bmNlcnRhaW50eSBhYm91dCB0aGUgRmVkJ3MgbmV4dCBtb3ZlLCB0aGVzZSBzZWN0b3JzIG1heSBub3QgYmUgd2VhayBnb2luZyBmb3J3YXJkLiBUaGUgc2hha2llciBzZWN0b3JzIGhhdmUgYmVlbiB0aGUgYmlnIGRpdmlkZW5kIHBheWVycyBiZWNhdXNlIGhpZ2hlciB5aWVsZHMgb24gc2FmZSBnb3Zlcm5tZW50IGRlYnQgd291bGQgbWFrZSB0aG9zZSBzaGFyZXMgbGVzcyBhdHRyYWN0aXZlLiAiSW52ZXN0b3JzIGhhdmVuJ3Qgc2ltcGx5IGJlZW4gJ3NlbGxpbmcgdGhlIHdpbm5lcnMsJyIgQmVzcG9rZSBJbnZlc3RtZW50IEdyb3VwIHdyb3RlIGluIGEgbm90ZSB0byBjbGllbnRzIHRoaXMgd2Vlay4gIldoYXQgaW52ZXN0b3JzIGhhdmUgYmVlbiBzZWxsaW5nIGFyZSB0aGUgaGlnaCBkaXZpZGVuZCBwYXllcnMsIHdoaWNoIGlzIG5vdCB1c3VhbGx5IHdoYXQgaGFwcGVucyBvbiBwdWxsYmFja3MuIEluIGZhY3QsIHRoZSBvcHBvc2l0ZSB1c3VhbGx5IG9jY3VycywgYXMgaW52ZXN0b3JzIGZsb2NrIHRvICdzYWZlcicgcGxheXMuIiBGb3IgdGhlIHBhc3Qgd2VlaywgdGhlIERvdyBKb25lcyBJbmR1c3RyaWFsIEF2ZXJhZ2UgIHJvc2UgMC45IHBlcmNlbnQsIHRoZSBTJlAgNTAwIGFkZGVkIDAuOCBwZXJjZW50IGFuZCB0aGUgTmFzZGFxICBhZHZhbmNlZCAwLjQgcGVyY2VudC4gVGhpcyB3ZWVrLCB0aGVyZSBhcHBlYXIgdG8gYmUgZmV3IG9idmlvdXMgY2F0YWx5c3RzIHRvIGNoYW5nZSB0aGUgZXF1YXRpb24uIE9ubHkgdHdvIFMmUCA1MDAgY29tcGFuaWVzIOKAkyBIJlIgQmxvY2sgIGFuZCBQVkggQ29ycC4g4oCTIGFyZSBzY2hlZHVsZWQgdG8gcmVwb3J0IHJlc3VsdHMuIFRoZSBlY29ub21pYyBkYXRhIGNhbGVuZGFyIGlzIGxpZ2h0LCB0aG91Z2ggTWF5IHJldGFpbCBzYWxlcyBvbiBUaHVyc2RheSBhbmQgdGhlIHByZWxpbWluYXJ5IHJlYWRpbmcgb24gSnVuZSBjb25zdW1lciBzZW50aW1lbnQgZnJvbSBUaG9tc29uIFJldXRlcnMvVW5pdmVyc2l0eSBvZiBNaWNoaWdhbiBvbiBGcmlkYXkgd2lsbCBiZSBjbG9zZWx5IHdhdGNoZWQuIEluZmxhdGlvbiBkYXRhIHdpbGwgYWxzbyBiZSBvbiB0aGUgYWdlbmRhLiBUaGUgVS5TLiBQcm9kdWNlciBQcmljZSBJbmRleCwgc2V0IGZvciByZWxlYXNlIG9uIEZyaWRheSwgaXMgZm9yZWNhc3QgdG8gcmlzZSBqdXN0IDAuMSBwZXJjZW50IGluIE1heSwgYWNjb3JkaW5nIHRvIGVjb25vbWlzdHMgcG9sbGVkIGJ5IFJldXRlcnMsIGFmdGVyIGEgZHJvcCBvZiAwLjcgcGVyY2VudCBpbiBBcHJpbC4gT24gYSB5ZWFyLW92ZXIteWVhciBiYXNpcywgb3ZlcmFsbCBQUEkgaXMgZXhwZWN0ZWQgdG8gcmlzZSAxLjQgcGVyY2VudCBpbiBNYXksIHRoZSBSZXV0ZXJzIFBvbGwgc2hvd2VkLiAiSXQgbG9va3MgbGlrZSB3ZSdyZSBzaGFwaW5nIHVwIGZvciBhIHRyYWRpdGlvbmFsIHN1bW1lciB3aGVyZSB3ZSdsbCBidWlsZCBhIGJhc2UgYW5kIHBlcmhhcHMgZW50ZXIgaW50byB0aGUgZG9sZHJ1bXMgb2Ygc3VtbWVyIHRyYWRpbmcsIiBzYWlkIEZyYW5rIERhdmlzLCBkaXJlY3RvciBvZiB0cmFkaW5nIGF0IExFSyBTZWN1cml0aWVzIGluIE5ldyBZb3JrLiBXaXRoIHRoZSBleGNlcHRpb24gb2YgY29uc3VtZXIgc3RvY2tzLCB3aGljaCBjb3VsZCBiZSBhZmZlY3RlZCBieSB0aGUgcmV0YWlsIHNhbGVzIGRhdGEsIERhdmlzIGFkZGVkLCAiSSdtIG5vdCBhbnRpY2lwYXRpbmcgYW55IG1lYW5pbmdmdWwgZm9sbG93LXRocm91Z2ggdG8iIHRoaXMgd2Vlay4gIkJ1dCBJJ20gbm90IGFudGljaXBhdGluZyBhbnkgbWVhc3VyYWJsZSBwdWxsZG93biwgZWl0aGVyLiI=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8nTiSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDBhMTg3NzUxNTdhOTBlNDc=</field><field name="symbol" class="java.lang.String">rO0ABXQAAVA=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8sdICAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAtmZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAvhR64UeuF</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAs3Cj1wo9c</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAu+uFHrhR7</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAu+uFHrhR7</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAOfC3A==</field><field name="id" class="java.lang.String">rO0ABXQAEDVlOWNiYmJhZjg5N2ZiOGY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mF5wAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExNTUw</field><field name="title" class="java.lang.String">rO0ABXQAL01hcmtldCBPcHRpbWlzdHMgU2VlIE1vcmUgR2FpbnMgZm9yIFdhbGwgU3RyZWV0</field><field name="content" class="java.lang.String">rO0ABXQTO0Nsb3Npbmcgb3V0IHRoZSBzZWNvbmQgd2VlayBvZiBNYXksIHRoZSBTJlAgNTAwIGlzIHVwIDIuMyBwZXJjZW50IGZvciB0aGUgbW9udGguIEZvciB0aGUgeWVhciwgdGhlIGJlbmNobWFyayBpbmRleCBnYWluZWQgYSBzdHVubmluZyAxNC42IHBlcmNlbnQuIFNvbWUgYW5hbHlzdHMgc2F5IHRoYXQgd2hlbiB0aGUgbWFya2V0IHN0YXJ0cyBvZmYgdGhpcyBzdHJvbmcsIGl0IHRlbmRzIHRvIGtlZXAgdGhlIHVwd2FyZCBtb21lbnR1bSBnb2luZyB1bnRpbCB0aGUgZW5kIG9mIHRoZSB5ZWFyLiAiSW5zdGVhZCBvZiAnU2VsbCBpbiBNYXkgYW5kIEdvIEF3YXksJyB3ZSBtYXkgYmUgc2V0dGluZyB1cCBmb3IgYSBzdXJwcmlzZSBNYXkgcmFsbHksIiBzYWlkIFJ5YW4gRGV0cmljaywgc2VuaW9yIHRlY2huaWNhbCBhbmFseXN0IGF0IFNjaGFlZmZlcidzIEludmVzdG1lbnQgUmVzZWFyY2ggaW4gQ2luY2lubmF0aSwgT2hpby4gIldoYXQncyBlbmNvdXJhZ2luZyBpcyB0aGF0IHNtYWxsLWNhcCBzdG9ja3MgaGF2ZSBiZWVuIG91dHBlcmZvcm1pbmcgdGhlIG1hcmtldCByZWNlbnRseS4gSXQncyBhIHNpZ24gdGhhdCB0aGUgbWFya2V0IGlzIGdvaW5nIGZvciBldmVuIHRoZSByaXNraWVzdCBzZWN0b3JzLiIgQm90aCB0aGUgRG93IGluZHVzdHJpYWxzIGFuZCB0aGUgUyZQIDUwMCB0b3BwZWQgbWFqb3IgbWlsZXN0b25lcyBmb3IgdGhlIGZpcnN0IHRpbWUgaW4gZWFybHkgTWF5LCB3aXRoIHRoZSBEb3cgSm9uZXMgaW5kdXN0cmlhbCBhdmVyYWdlIHN1cnBhc3NpbmcgMTUsMDAwIGFuZCB0aGUgUyZQIDUwMCAgYnJlYWtpbmcgdGhyb3VnaCB0aGUgMSw2MDAgbWFyay4gU2luY2UgdGhlbiwgdGhlIGluZGV4ZXMgaGF2ZSBiZWVuIHN0ZWFkaWx5IGhvbGRpbmcgYWJvdmUgdGhlIGxhbmRtYXJrIGxldmVscy4gVGhlIE5hc2RhcSBDb21wb3NpdGUgSW5kZXggaGFzIGNsaW1iZWQgdG8gdGhlIGhpZ2hlc3QgY2xvc2luZyBsZXZlbHMgaW4gMTItMS8yIHllYXJzLiBJbiBhIHNpZ24gb2YgdGhlIHJhbGx5J3MgYnJlYWR0aCwgdGhlIFJ1c3NlbGwgMjAwMCBpbmRleCAgb2YgbWlkLSBhbmQgc21hbGwtY2FwIHN0b2NrcyBhbHNvIGhpdCBhbGwtdGltZSBoaWdocyByZWNlbnRseS4gVGVjaG5pY2FsIGFuYWx5c3RzIHNheSB0aGUgbmV4dCBsZXZlbCB0byB3YXRjaCB3b3VsZCBiZSAxLDY2MCBvbiB0aGUgUyZQIDUwMC4gIlRoZSBtYWluIHF1ZXN0aW9uIGlzIHdoZXRoZXIgdGhlIGJ1bGxzIGNhbiBtYWludGFpbiB0aGUgMSw2MDAgbGV2ZWwgb24gdGhlIFMmUCA1MDAgZm9yIGFub3RoZXIgd2VlaywiIHNhaWQgQXJpIFdhbGQsIGEgdGVjaG5pY2FsIGFuYWx5c3QgYXQgUHJpbmNlUmlkZ2UgR3JvdXAsIGEgTmV3IFlvcmstYmFzZWQgaW52ZXN0bWVudCBiYW5rLiAiSWYgaXQgZG9lcywgdGhlIG5leHQgbGV2ZWwgaXMgMSw2NjAuIEJ1dCB3aXRoIG1hcmtldHMgYWxyZWFkeSB0aGlzIGhpZ2gsIGl0IHdvbid0IGJlIGVhc3kuIiBEZXNwaXRlIGxpbmdlcmluZyBjb25jZXJucyBhYm91dCBhIHRlY2huaWNhbCBwdWxsYmFjaywgdGhlIG1hcmtldCdzIHN0cm9uZyBwZXJmb3JtYW5jZSBzbyBmYXIgdGhpcyB5ZWFyIGhhcyBhbHNvIGluY3JlYXNlZCB0aGUgY2hhbmNlcyBvZiBlcXVpdGllcyByYWxseWluZyB0aHJvdWdob3V0IHRoZSB5ZWFyLCBhY2NvcmRpbmcgdG8gc29tZSBhbmFseXN0cy4gIldpdGggdGhlIG1hcmtldCB1cCBzbyBtdWNoLCBjYW4gaXQgY29udGludWUgdG8gbWFrZSBnYWlucyBvdmVyIHRoZSBuZXh0IHNldmVuIG1vbnRocyB0aHJvdWdoIHllYXIgZW5kPyBBdCBsZWFzdCBiYXNlZCBvbiBoaXN0b3J5LCBpdCBoYXMgYSBiZXR0ZXIgY2hhbmNlIG9mIGNvbnRpbnVpbmcgaGlnaGVyIGR1cmluZyBzdHJvbmcgeWVhcnMgdGhhbiB3aGVuIGl0IGlzIG5vdCB1cCBzaWduaWZpY2FudGx5LCIgQmVzcG9rZSBJbnZlc3RtZW50IEdyb3VwIGFuYWx5c3RzIHdyb3RlIGluIGEgbm90ZSB0byBjbGllbnRzLiBCZXNwb2tlIG5vdGVkIHRoYXQgdGhpcyB5ZWFyIGlzIG9ubHkgdGhlIDExdGgtYmVzdCBzdGFydCB0byBhIHllYXIgc2luY2UgMTk5MSwgd2hlbiB0aGUgaW5kZXggZ2FpbmVkIGFub3RoZXIgOS43IHBlcmNlbnQgZm9yIHRoZSByZXN0IG9mIHRoZSB5ZWFyLiBJZiAyMDEzIHBsYXlzIG91dCBsaWtlIHRoYXQgLSB3aXRoIGFub3RoZXIgOS43IHBlcmNlbnQgZ2FpbiBpbiBzdG9yZSBmb3IgdGhlIFMmUCA1MDAgLSB0aGUgYnJvYWQgaW5kZXggd291bGQgZmluaXNoIHRoZSB5ZWFyIHVwIGEgd2hvcHBpbmcgMjQuMyBwZXJjZW50LiAgTEFHR0FSRFMgUExBWSBDQVRDSC1VUCBBbW9uZyByZWNlbnQgZ2FpbmVycywgc2VjdG9ycyBjbG9zZWx5IHRpZWQgdG8gZWNvbm9taWMgZ3Jvd3RoIHN1Y2ggYXMgdGVjaG5vbG9neSBhbmQgZmluYW5jaWFsIHN0b2NrcyBoYXZlIGJlZW4gY2F0Y2hpbmcgdXAgYWZ0ZXIgbGFnZ2luZyBmb3IgbW9zdCBvZiB0aGUgeWVhci4gIldlIGFyZSBzZWVpbmcgdGhlIG9uY2UgYmVhdGVuLWRvd24gc3RvY2tzIG1ha2luZyBhIGNvbWViYWNrLCIgV2FsZCBzYWlkLiAiSXQncyBiZWVuIHNvcnQgb2YgYSByb3RhdGlvbiBvZiBsZWFkZXJzaGlwIHRoYXQgaGFzIGJlZW4gdGFraW5nIHBsYWNlIGZvciBhIG1vbnRoIG9yIHNvLiBJdCB3aWxsIGJlIGludGVyZXN0aW5nIHRvIHNlZSBpZiB0aGlzIGNhbiBsYXN0IiBpbnRvIG5leHQgd2Vlay4gVGhlIFMmUCBmaW5hbmNpYWwgc2VjdG9yIGluZGV4IGlzIHVwIGFib3V0IDIgcGVyY2VudCBmb3IgdGhlIG1vbnRoLCB3aGlsZSB0aGUgUyZQIGluZm9ybWF0aW9uIHRlY2hub2xvZ3kgc2VjdG9yICBpcyB1cCBhYm91dCAzIHBlcmNlbnQuIEZvciBzb21lIHBlcnNwZWN0aXZlLCB0aGUgdGVjaCBzZWN0b3IgaGFzIGEgd2F5IHRvIGdvLCB3aGVuIGNvbXBhcmVkIHdpdGggZGVmZW5zaXZlIHNlY3RvcnMgbGlrZSB1dGlsaXRpZXMuIFRoZSBTJlAgdXRpbGl0eSBzZWN0b3IgaW5kZXggaXMgdXAgbW9yZSB0aGFuIDEzIHBlcmNlbnQgZm9yIHRoZSB5ZWFyLCB3aGlsZSB0aGUgUyZQIGluZm8gdGVjaCBzZWN0b3IgaW5kZXggcm9zZSBsZXNzIHRoYW4gOCBwZXJjZW50LiDCoCAgQ09OU1VNRVIgSU4gVEhFIERSSVZFUidTIFNFQVQgVGhlIEFtZXJpY2FuIGNvbnN1bWVyIHdpbGwgZ2V0IFdhbGwgU3RyZWV0J3MgYXR0ZW50aW9uIHRoaXMgd2VlayB3aGVuIGEgcmFmdCBvZiBlY29ub21pYyBkYXRhIGFuZCByZXRhaWxlcnMnIGVhcm5pbmdzIGNvdWxkIHNoZWQgc29tZSBsaWdodCBvbiB3aGV0aGVyIHRoZXkgc2hvcHBlZCBmb3IgbW9yZSB0aGFuIGp1c3QgdGhlIGJhcmUgbmVjZXNzaXRpZXMuIFJldGFpbCBzYWxlcyBmb3IgQXByaWwgd2lsbCBiZSByZWxlYXNlZCBvbiBNb25kYXkgYnkgdGhlIFUuUy4gQ29tbWVyY2UgRGVwYXJ0bWVudC4gIkl0IChyZXRhaWwgc2FsZXMpIHdpbGwgYmUgYSBjaGFuY2UgdG8gbG9vayBhdCB0aGUgcmVhbCBwaWN0dXJlIGFmdGVyIHdlYWsgbnVtYmVycyBsYXN0IG1vbnRoIG9uIHNlcXVlc3RyYXRpb24gYW5kIG90aGVyIChleHRlcm5hbCkgZmFjdG9ycywiIHNhaWQgS2FyeW4gQ2F2YW5hdWdoLCBhIG1hcmtldCBzdHJhdGVnaXN0IGF0IElORyBVLlMuIEludmVzdG1lbnQgTWFuYWdlbWVudCBpbiBOZXcgWW9yay4gIlRoZSBtYXJrZXQgaXMgZHJpdmVuIGJ5IGdvb2QgZnVuZGFtZW50YWxzIGZyb20gY29ycG9yYXRlIGVhcm5pbmdzLCBidXQgaXQncyByZWFsbHkgdGhlIGNvbnN1bWVycyB0aGF0IHRha2UgdXAgNzAgcGVyY2VudCBvZiBvdXIgZWNvbm9teS4gVGhleSBhcmUgYSByZWFsIGdhbWUgY2hhbmdlci4iIE90aGVyIGVjb25vbWljIGRhdGEgb24gdGFwIGluY2x1ZGVzIEFwcmlsIGltcG9ydCBhbmQgZXhwb3J0IHByaWNlcyBvbiBUdWVzZGF5LCBmb2xsb3dlZCBvbiBXZWRuZXNkYXkgYnkgdGhlIFUuUy4gUHJvZHVjZXIgUHJpY2UgSW5kZXggZm9yIEFwcmlsLCB0aGUgRW1waXJlIFN0YXRlIEluZGV4IGZvciBNYXksIGluZHVzdHJpYWwgcHJvZHVjdGlvbiBhbmQgY2FwYWNpdHkgdXRpbGl6YXRpb24gZm9yIEFwcmlsLCBhbmQgdGhlIE5hdGlvbmFsIEFzc29jaWF0aW9uIG9mIEhvbWUgQnVpbGRlcnMgSW5kZXggZm9yIE1heS4gT24gVGh1cnNkYXksIHRoZSBlY29ub21pYyBhZ2VuZGEgaW5jbHVkZXMgdGhlIFUuUy4gQ29uc3VtZXIgUHJpY2UgaW5kZXggZm9yIEFwcmlsLCBob3VzaW5nIHN0YXJ0cyBmb3IgQXByaWwsIHdlZWtseSBqb2JsZXNzIGNsYWltcyBhbmQgdGhlIFBoaWxhZGVscGhpYSBGZWQncyBzdXJ2ZXkgZm9yIE1heS4gV2FsbCBTdHJlZXQgd2lsbCBnZXQgYSBsb29rIGF0IGNvbnN1bWVyIHNlbnRpbWVudCBvbiBGcmlkYXksIHdoZW4gdGhlIFRob21zb24gUmV1dGVycy9Vbml2ZXJzaXR5IG9mIE1pY2hpZ2FuIFN1cnZleXMgb2YgQ29uc3VtZXJzIHdpbGwgcmVsZWFzZSBpdHMgcHJlbGltaW5hcnkgcmVhZGluZyBmb3IgTWF5LiBPbiB0aGUgZWFybmluZ3MgZnJvbnQsIGEgbnVtYmVyIG9mIHJldGFpbGVycyBhcmUgc2NoZWR1bGVkIHRvIHJlcG9ydCByZXN1bHRzLCBpbmNsdWRpbmcgTWFjeSdzIEluYyBvbiBXZWRuZXNkYXkuIFJlc3VsdHMgZnJvbSBKLkMuIFBlbm5leSBDbyBJbmMsIE5vcmRzdHJvbSBJbmMsIEtvaGwncyBDb3JwIGFuZCBXYWwtTWFydCBhcmUgZXhwZWN0ZWQgb24gVGh1cnNkYXkuIFdpdGggODkgcGVyY2VudCBvZiB0aGUgUyZQIDUwMCBjb21wYW5pZXMgaGF2aW5nIHJlcG9ydGVkIGVhcm5pbmdzIHNvIGZhciwgNjYuNyBwZXJjZW50IGhhdmUgdG9wcGVkIHByb2ZpdCBleHBlY3RhdGlvbnMsIGFib3ZlIHRoZSBhdmVyYWdlIG9mIDYzIHBlcmNlbnQgc2luY2UgMTk5NC4gSG93ZXZlciwgb25seSA0Ni40IHBlcmNlbnQgaGF2ZSBiZWF0ZW4gcmV2ZW51ZSBleHBlY3RhdGlvbnMsIHdlbGwgdW5kZXIgdGhlIGF2ZXJhZ2Ugb2YgNjIgcGVyY2VudCBzaW5jZSAyMDAyLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6XHBSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDFmNDczY2IyYzdhNGRiMWY=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lTRg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6cQnCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5jMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5keuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5eFHrhR64</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5jMzMzMzN</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA2eFHrhR64</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAACcpA==</field><field name="id" class="java.lang.String">rO0ABXQAEDc1NWMzMzI4MjE3ZDAzN2U=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGu0AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDIzNzU=</field><field name="title" class="java.lang.String">rO0ABXQAMUdvbGQgVHJhZGVycyBNb3N0IEJ1bGxpc2ggU2luY2UgQmVhciBNYXJrZXQgQmVnYW4=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8X2xCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDQzMGNhNDhmY2Y3MWRlYzE=</field><field name="symbol" class="java.lang.String">rO0ABXQAA1BUWQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8dAWyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAy8KPXCj1x</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzKPXCj1wp</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAy1HrhR64U</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAsAAAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAbk2A==</field><field name="id" class="java.lang.String">rO0ABXQAEDNjYjk2ZmE5M2JlMzQ4ZDQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKFLAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDMzMzk=</field><field name="title" class="java.lang.String">rO0ABXQALldhbGwgU3RyZWV0IEZvY3VzZXMgb24gRmFjZWJvb2ssIEFwcGxlIGFuZCBGZWQ=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUH4SHSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGViNDNkMjg4ODU4OTYxNWI=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZVRUw=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUH9btCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBPYAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBPYAAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBNQAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBNa4UeuFHs</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBNa4UeuFHs</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAG9tA==</field><field name="id" class="java.lang.String">rO0ABXQAEDc5ODIwOTFkMWU1OGM3MmQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMTDAAAA==</field></document></documents><date>2015-05-07T05:38:52-0500</date></cacheEntry>
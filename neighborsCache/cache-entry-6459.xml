<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0EgVDaGluYSBpcyB3b3JraW5nIG9uIGhvdyB0byBjYXAgaXRzIGdyZWVuaG91c2UgZ2FzIGZvciB0aGUgZmlyc3QgdGltZSBUaGUgd29ybGRzIGJpZ2dlc3QgcHJvZHVjZXIgb2YgZm9zc2lsIGZ1ZWwgZW1pc3Npb25zIGhhcyBiZWVuIHN0dWR5aW5nIGZvciBtb3JlIHRoYW4gYSB5ZWFyIGhvdyBhbmQgd2hlbiBpdCBtaWdodCBiZSBhYmxlIHRvIG1ha2UgaXRzIHBvbGx1dGlvbiBsZXZlbHMgcGVhayBhbmQgaG9wZXMgdG8gYWN0IGFzIHNvb24gYXMgcG9zc2libGUgc2FpZCBYaWUgWmhlbmh1YSBDaGluYXMgbGVhZCBlbnZveSB0byB0aGUgVW5pdGVkIE5hdGlvbnMgZ2xvYmFsIHdhcm1pbmcgdGFsa3MgQ2hpbmEgd2lsbCBiZWhhdmUgaW4gYSB2ZXJ5IHJlc3BvbnNpYmxlIHdheSBmb3IgQ2hpbmVzZSBwZW9wbGUgYW5kIHRoZSB3b3JsZCBhbmQgd2Ugd2lsbCB0cnkgb3VyIHV0bW9zdCB0byBwZWFrIGFzIGVhcmx5IGFzIHBvc3NpYmxlIFhpZSBzYWlkIGluIGFuIGludGVydmlldyBhdCB0aGUgdGFsa3MgaW4gQm9ubiB3aXRoIEJsb29tYmVyZyBhbmQgb3RoZXIgbmV3cyBvcmdhbml6YXRpb25zIFdlIGFyZSB3b3JraW5nIHZlcnkgaGFyZCBhbmQgdHJ5aW5nIHRvIGZpbmQgYSBiYWxhbmNlZCBlcXVpbGlicml1bSBiZXR3ZWVuIGVudmlyb25tZW50YWwgcHJvdGVjdGlvbiBhbmQgZWNvbm9taWMgZGV2ZWxvcG1lbnQgVGhlIGNvbW1lbnRzIGFyZSB0aGUgY2xlYXJlc3QgaW5kaWNhdGlvbiB5ZXQgb2YgQ2hpbmFzIHdpbGxpbmduZXNzIHRvIGpvaW4gYSBnbG9iYWwgYWdyZWVtZW50IHRoYXQgd291bGQgZm9yIHRoZSBmaXJzdCB0aW1lIGxpbWl0IGVtaXNzaW9ucyBpbiBhbGwgbmF0aW9ucyBib3RoIHJpY2ggYW5kIHBvb3IgYWxpa2UgQ2hpbmEgYWxvbmcgd2l0aCBvdGhlciBjb3VudHJpZXMgY2xhc3NlZCBhcyBkZXZlbG9waW5nIGVjb25vbWllcyB3ZXJlIGV4ZW1wdGVkIGZyb20gcmVzdHJpY3Rpb25zIHVuZGVyIHRoZSAxOTk3IEt5b3RvIFByb3RvY29sIHRoZSBvbmx5IHBhY3Qgb2YgaXRzIGtpbmQgY3VyYmluZyB0aGUgcG9sbHV0aW9uIGJsYW1lZCBmb3IgY2F1c2luZyBnbG9iYWwgd2FybWluZyBYaWVzIHJlbWFya3MgYXJlIHRoZSBmaXJzdCByZXNwb25zZSBDaGluYSBoYXMgbWFkZSB0byBQcmVzaWRlbnQgQmFyYWNrIE9iYW1hcyBkZWNpc2lvbiBvbiBKdW5lIDIgdG8gcmVzdHJpY3QgZW1pc3Npb25zIGZyb20gZXhpc3RpbmcgcG93ZXIgcGxhbnRzIGluIHRoZSBVUyBUaG9zZSBtZWFzdXJlcyBjYWxsIGZvciBhIDMwIHBlcmNlbnQgY3V0IGluIGNhcmJvbiBlbWlzc2lvbnMgZnJvbSBleGlzdGluZyBwb3dlciBwbGFudHMgYnkgMjAzMCBhbmQgd291bGQgcmVkdWNlIHRoZSByb2xlIG9mIGNvYWwgaW4gZ2VuZXJhdGluZyBlbGVjdHJpY2l0eSBHcm93aW5nIFBvbGx1dGlvbiBDaGluYXMgZW1pc3Npb25zIHdpbGwgY29udGludWUgdG8gZ3JvdyBpbiB0aGUgbmV4dCBmZXcgeWVhcnMgWGllIHNhaWQgbm90aW5nIHRoYXQgZXhwZXJ0cyBhbmQgc2NpZW50aXN0cyBjb252ZW5lZCBieSB0aGUgZ292ZXJubWVudCBkaWZmZXIgcXVpdGUgYSBsb3QgaW4gdGhlaXIgZ3VpZGFuY2UgYWJvdXQgaG93IHF1aWNrbHkgdGhlIGdvdmVybm1lbnQgY2FuIGFjdCBUaGVyZSBhcmUgc3RpbGwgcXVpdGUgYSBsb3Qgb2YgZGlmZmljdWx0aWVzIHRvIG92ZXJjb21lIGJ1dCB3ZSBhcmUgZGV0ZXJtaW5lZCB0byBkbyBvdXIgYmVzdCBYaWUgc2FpZCB0aHJvdWdoIGFuIGludGVycHJldGVyIFlvdSBoYXZlIHRvIHJlYWxpemUgdGhhdCBDaGluYSBpcyBpbiB0aGUgcHJvY2VzcyBvZiByZWFsaXppbmcgYSBtb2Rlcm5pemF0aW9uIFRoZSB0b3RhbCBhbW91bnQgb2YgQ08yIGVtaXNzaW9ucyB3aWxsIGJlIGluY3JlYXNpbmcgaW4gdGhlIGZ1dHVyZSBDaGluYXMgcGFydGljaXBhdGlvbiBpbiB0aGUgVU4gcGxhbiBpcyBlc3NlbnRpYWwgdG8gZHJhdyBpbiBzdXBwb3J0IGZyb20gdGhlIFVTIHdoaWNoIHJlZnVzZWQgdG8gcmF0aWZ5IHRoZSBLeW90byBwYWN0IGJlY2F1c2Ugb25seSB0aGUgcmljaGVyIGNvdW50cmllcyB3ZXJlIHJlcXVpcmVkIHRvIG1ha2UgY29tbWl0bWVudHMgQ2hpbmEgYW5kIHRoZSBVUyBhY2NvdW50IGZvciBtb3JlIHRoYW4gdHdvZmlmdGhzIG9mIGdyZWVuaG91c2UgZ2FzIGVtaXNzaW9ucyBhbmQgdGhlIGFjdGlvbnMgdGhleSB0YWtlIHdpbGwgaW5mbHVlbmNlIGhvdyBtdWNoIGFtYml0aW9uIG90aGVyIGNvdW50cmllcyBzaG93IFBhcmlzIE1lZXRpbmcgVGhlIHRhbGtzIGluIEJvbm4gYXJlIGludGVuZGVkIHRvIHBhdmUgdGhlIHdheSB0b3dhcmQgYSBnbG9iYWwgYWdyZWVtZW50IG9uIGNsaW1hdGUgY2hhbmdlIEVudm95cyB3aG8gYXJlIG1vc3RseSBlbmVyZ3kgYW5kIGVudmlyb25tZW50IG1pbmlzdGVycyBtZWV0IGFnYWluIGluIERlY2VtYmVyIGluIFBlcnUgYW5kIGludGVuZCB0byBzZWFsIHRoZSBkZWFsIGluIFBhcmlzIGluIDIwMTUgRXZlcnl0aGluZyByZXZvbHZlcyBhcm91bmQgQ2hpbmEgYW5kIHRoZSBVbml0ZWQgU3RhdGVzIFl2byBkZSBCb2VyIHdobyBzdGV3YXJkZWQgdGhlIHRhbGtzIHVudGlsIDIwMTAgYXMgZXhlY3V0aXZlIHNlY3JldGFyeSBvZiB0aGUgVU4gRnJhbWV3b3JrIENvbnZlbnRpb24gb24gQ2xpbWF0ZSBDaGFuZ2Ugc2FpZCBsYXN0IHdlZWsgaW4gYW4gaW50ZXJ2aWV3IE11Y2ggb2Ygd2hhdCBpcyBhZ3JlZWQgaW4gUGFyaXMgd2lsbCBmbG93IGZyb20gYSBVU1Npbm8gd2lsbGluZ25lc3MgdG8gZW5nYWdlIHdpbGxpbmduZXNzIHRvIHNob3cgYW1iaXRpb24gYW5kIHRvIGxlYWQgdGhlIHdheSBUaGUgaW50ZW50aW9uIGlzIHRvIGtlZXAgdGhlIHRlbXBlcmF0dXJlIHJpc2Ugc2luY2UgdGhlIGluZHVzdHJpYWwgcmV2b2x1dGlvbiB0byAyIGRlZ3JlZXMgQ2Vsc2l1cyAzNiBkZWdyZWVzIEZhaHJlbmhlaXQgVGhlIFVOIHByb2plY3RzIHRoZSBwbGFuZXQgd2lsbCB3YXJtIGJ5IGF0IGxlYXN0IDM3IGRlZ3JlZXMgdGhpcyBjZW50dXJ5IHdpdGhvdXQgbW9yZSBhY3Rpb24gdG8gcmVpbiBpbiBydW5hd2F5IGVtaXNzaW9ucyBhIHF1aWNrZXIgcmF0ZSBvZiBjaGFuZ2UgdGhhbiB0aGUgcGxhbmV0IGV4cGVyaWVuY2VkIGF0IHRoZSBlbmQgb2YgdGhlIGxhc3QgaWNlIGFnZSBtb3JlIHRoYW4gMTAwMDAgeWVhcnMgYWdvIElzbGFuZCBuYXRpb25zIGNvbmNlcm5lZCB0aGF0IHRoZXlsbCBiZSBzd2FtcGVkIGJ5IHJpc2luZyBzZWEgbGV2ZWxzIGNhdXNlZCBieSBtZWx0aW5nIGdsYWNpZXJzIGFuZCBpY2UgY2FwcyBhcmUgYW54aW91cyBmb3IgcXVpY2tlciBhY3Rpb24gZnJvbSBib3RoIENoaW5hIGFuZCB0aGUgVVMgSXNsYW5kIFZpZXcgV2UgYXJlIGhhcHB5IHRoYXQgdGhleSB3YW50IHRvIGNhcCB0aGVpciBlbWlzc2lvbnMgbGV2ZWwgYnV0IHByZXNlbnRseSB3aGVyZSB0aGUgd29ybGQgaXMgYXMgaXQgcmVsYXRlcyB0byBnbG9iYWwgd2FybWluZyB3ZSBuZWVkIG1vcmUgdGhhbiBqdXN0IGEgY2FwcGluZyBvZiB5b3VyIHByZXNlbnQgbGV2ZWxzIG9mIGVtaXNzaW9ucyBSb2xhbmQgQmhvbGEgYSBtaW5pc3RlciBmcm9tIEdyZW5hZGEgc2FpZCB0b2RheSBpbiBhbiBpbnRlcnZpZXcgaW4gQm9ubiBXZSBhY3R1YWxseSBuZWVkIGEgcmVkdWN0aW9uIGFuZCB3ZSBuZWVkIGl0IHF1aWNrbHkgQ2hpbmEgb3ZlcnRvb2sgdGhlIFVTIGluIDIwMDYgdG8gYmVjb21lIHRoZSB3b3JsZHMgYmlnZ2VzdCBwcm9kdWNlciBvZiBncmVlbmhvdXNlIGdhc2VzIEV2ZW4gc28gaXRzIGJlZW4gY3V0dGluZyB0aGUgc29jYWxsZWQgZW1pc3Npb25zIGludGVuc2l0eSBvZiBpdHMgZWNvbm9teSBUaGF0cyBhIG1lYXN1cmUgb2YgY2FyYm9uIGRpb3hpZGUgZW1pc3Npb25zIHBlciBkb2xsYXIgb2YgZWNvbm9taWMgb3V0cHV0IEJldHdlZW4gMjAwNSBhbmQgdGhlIGVuZCBvZiBsYXN0IHllYXIgQ2hpbmEgcmVkdWNlZCBpdHMgZW1pc3Npb25zIGludGVuc2l0eSBieSBtb3JlIHRoYW4gMjggcGVyY2VudCBYaWUgc2FpZCBUaGF0IGNvbXBhcmVzIHdpdGggaXRzIHRhcmdldCB0byBjdXQgZW1pc3Npb25zIGludGVuc2l0eSBieSA0MCBwZXJjZW50IHRvIDQ1IHBlcmNlbnQgZnJvbSAyMDA1IGxldmVscyBpbiAyMDIwIFhpZSBzYWlkIHRoYXQgVVMgU3BlY2lhbCBFbnZveSBmb3IgQ2xpbWF0ZSBDaGFuZ2UgVG9kZCBTdGVybiBjYWxsZWQgaGltIHBlcnNvbmFsbHkgb24gSnVuZSAyIHRvIHRlbGwgaGltIGFib3V0IHRoZSBuZXcgcG93ZXIgcGxhbnQgc3RhbmRhcmRzIE9iYW1hIGlzIHByb3Bvc2luZyBDaGluYSBhbmQgdGhlIFVTIGFyZSBpbiBkaWZmZXJlbnQgZGV2ZWxvcG1lbnQgcGhhc2VzIFhpZSBzYWlkIE9uZSBpcyB0aGUgYmlnZ2VzdCBkZXZlbG9wZWQgY291bnRyeSBhbmQgb25lIGlzIHRoZSBiaWdnZXN0IGRldmVsb3BpbmcgY291bnRyeSBXZSBoYXZlIGRpZmZlcmVudCBoaXN0b3JpYyByZXNwb25zaWJpbGl0aWVzIGFuZCBkaWZmZXJlbnQgZGV2ZWxvcG1lbnQgbGV2ZWxzIFdlIGhhdmUgZGlmZmVyZW50IGNhcGFjaXR5IGZvciBhZGRyZXNzaW5nIGNsaW1hdGUgY2hhbmdlIE9uZSB0aGluZyBpbiBjb21tb24gaXMgd2UgYXJlIGJvdGggd29ya2luZyB2ZXJ5IGhhcmQgdG8gYWRkcmVzcyBjbGltYXRlIGNoYW5nZXQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0wMy0yN1QwMDowMDowMFogVE8gMjAxMy0xMi0wM1Q1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDQ5NzI=</field><field name="title" class="java.lang.String">rO0ABXQAPldvcmxkIEZhY2VzIEFkZGVkIFdhcm1pbmcgYnkgMjEwMCBvbiBKYXBhbidzIFdlYWtlciBDTzIgVGFyZ2V0</field><field name="content" class="java.lang.String">rO0ABXQHIUphcGFu4oCZcyB3YXRlcmVkLWRvd24gZ3JlZW5ob3VzZS1nYXMgcGxlZGdlIGhhcyBsZWZ0IHRoZSBFYXJ0aCBmYWNpbmcgbW9yZSB3YXJtaW5nIHRoYW4gZm91ciB5ZWFycyBhZ28sIGFjY29yZGluZyB0byBhIGdyb3VwIG9mIHNjaWVudGlzdHMgYW5kIGNsaW1hdGUgYW5hbHlzdHMuIEVtaXNzaW9ucyBwbGVkZ2VzIGJ5IGFsbCBuYXRpb25zIGNoYXJ0IGEgcGF0aCBmb3IgdGhlIHBsYW5ldCB0byB3YXJtIGJ5IDMuNyBkZWdyZWVzIENlbHNpdXMgKDYuNyBkZWdyZWVzIEZhaHJlbmhlaXQpIGJ5IDIxMDAsIHRoZSBDbGltYXRlIEFjdGlvbiBUcmFja2VyIHNhaWQgaW4gYSBzdHVkeSByZWxlYXNlZCBkdXJpbmcgVW5pdGVkIE5hdGlvbnMgY2xpbWF0ZSB0YWxrcyBpbiBXYXJzYXcuIFRoYXTigJlzIDAuNiBkZWdyZWVzIG1vcmUgd2FybWluZyB0aGFuIHByb2plY3RlZCBmb3VyIHllYXJzIGFnbywgd2hlbiBjb3VudHJpZXMgaW5jbHVkaW5nIEphcGFuIHNldCB0YXJnZXRzIGZvciBlbWlzc2lvbnMuIFdpdGggdGhlIFVOIGVudm95cyBzZWVraW5nIHRvIGxpbWl0IHdhcm1pbmcgc2luY2UgdGhlIHByZS1pbmR1c3RyaWFsIGVyYSB0byAyIGRlZ3JlZXMgQ2Vsc2l1cyB0byBjb250YWluIHRoZSB3b3JzdCBlZmZlY3RzIG9mIGNsaW1hdGUgY2hhbmdlLCBpbmNsdWRpbmcgbG9uZ2VyIGRyb3VnaHRzLCByaXNpbmcgc2VhcyBhbmQgc3Ryb25nZXIgc3Rvcm1zLCBiYWNrdHJhY2tpbmcgYnkgSmFwYW4gYW5kIEF1c3RyYWxpYSBpcyBtYWtpbmcgdGhhdCBnb2FsIGhhcmRlciB0byByZWFjaCwgYWNjb3JkaW5nIHRvIHRoZSByZXBvcnQuIOKAnFdlIGFyZSBzZWVpbmcgYSBtYWpvciByaXNrIG9mIGEgZnVydGhlciBkb3dud2FyZCBzcGlyYWwgaW4gYW1iaXRpb24sIGEgcmV0cmVhdCBmcm9tIGFjdGlvbiwgYW5kIGEgcmUtY2FyYm9uaXphdGlvbiBvZiB0aGUgZW5lcmd5IHN5c3RlbSBsZWQgYnkgdGhlIHVzZSBvZiBjb2FsLOKAnSBzYWlkIEJpbGwgSGFyZSwgZGlyZWN0b3Igb2YgQ2xpbWF0ZSBBbmFseXRpY3MsIG9uZSBvZiB0aHJlZSBvcmdhbml6YXRpb25zIHRoYXQgcnVuIHRoZSBDbGltYXRlIEFjdGlvbiBUcmFja2VyIHByb2dyYW0uIEphcGFu4oCZcyBuZXcgdGFyZ2V0LCBhbm5vdW5jZWQgb24gTm92LiAxNSwgcmV2ZXJzZXMgY291cnNlIGJ5IGFsbG93aW5nIGEgMy4xIHBlcmNlbnQgaW5jcmVhc2UgaW4gZW1pc3Npb25zIGZyb20gMTk5MCBsZXZlbHMgYnkgMjAyMCwgcmF0aGVyIHRoYW4gc2Vla2luZyBhIDI1IHBlcmNlbnQgY3V0LCBhcyBwcm9taXNlZCBmb3VyIHllYXJzIGFnby4gUG9saWN5IGNoYW5nZXMgaW4gQXVzdHJhbGlhLCB3aGVyZSBQcmltZSBNaW5pc3RlciBUb255IEFiYm90dCBpcyBkZWxpdmVyaW5nIG9uIGEgY2FtcGFpZ24gcHJvbWlzZSB0byBhYm9saXNoIGEgY2FyYm9uIHRheCwgcmlzayBleGFjZXJiYXRpbmcgY2xpbWF0ZSBjaGFuZ2UsIENsaW1hdGUgQWN0aW9uIFRyYWNrZXIgc2FpZC4gVGhlcmUgYXJlIOKAnHNvbWUgcG9zaXRpdmUgc2lnbmFsc+KAnSBmcm9tIHRoZSBVLlMuIGFuZCBDaGluYSwgdGhlIHdvcmxk4oCZcyBiaWdnZXN0IGVtaXR0ZXJzLCB0aGUgb3JnYW5pemF0aW9uIHNhaWQuIEFzaWRlIGZyb20gQ2xpbWF0ZSBBbmFseXRpY3MgaW4gUG90c2RhbSwgR2VybWFueSwgdGhlIHRyYWNrZXIgaXMgcnVuIGJ5IHRoZSBQb3RzZGFtIEluc3RpdHV0ZSBmb3IgQ2xpbWF0ZSBJbXBhY3QgUmVzZWFyY2ggYW5kIEVjb2Z5cywgYW4gZW5lcmd5IGNvbnN1bHRhbnQgd2l0aCBvZmZpY2VzIGluIHRoZSBVLlMuLCBDaGluYSwgR2VybWFueSwgdGhlIFUuSy4gYW5kIHRoZSBOZXRoZXJsYW5kcy4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJ0GAMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDJkZjU2ZmUyN2RjMDNmY2M=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0FHTw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJ5Pl8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3a4UeuFHs</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3wAAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3ZmZmZmZm</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3fXCj1wo9</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA29cKPXCj2</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAA1xzA==</field><field name="id" class="java.lang.String">rO0ABXQAEGJlNGJiODQ3OTRjMTZhYTc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGQoAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDMzOTA=</field><field name="title" class="java.lang.String">rO0ABXQANidXYXIgb24gQ29hbCcgTWF5IGJlIEdvb2QgRmlnaHQgZm9yIFNvbWUgTWFudWZhY3R1cmVycw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUHZYkyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDMyMDg4NWFkOTljOWExNzI=</field><field name="symbol" class="java.lang.String">rO0ABXQABUpQWVlM</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUHeiKiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECNHrhR64Uf</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECNHrhR64Uf</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECMXAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECMmAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECLzzMzMzMz</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAKKA==</field><field name="id" class="java.lang.String">rO0ABXQAEGJjZWI2ODhjYjhhM2FlNTA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGr/AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwNTI=</field><field name="title" class="java.lang.String">rO0ABXQAMlRoZSBTZWNyZXQsIERpcnR5IENvc3Qgb2YgT2JhbWEncyBHcmVlbiBQb3dlciBQdXNo</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJK5SMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI3MTcyMzgzMzAxZTY3Yjg=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZBUk0=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJQC38AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyI9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABp3A==</field><field name="id" class="java.lang.String">rO0ABXQAEGIxNzhiNTk3MDYyZjcwYTE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGoqAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUxMjA=</field><field name="title" class="java.lang.String">rO0ABXQAPEdsb2JhbCBXYXJtaW5nIFNlZW4gVGFraW5nIFRvbGwgb24gRWNvbm9teSwgSGVhbHRoIGFuZCBDcm9wcw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUIhskMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDQ0OWNlMDE3YzU4MTI4ZjU=</field><field name="symbol" class="java.lang.String">rO0ABXQABElQQ0M=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUIm2J8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBRAUeuFHrh</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBRQKPXCj1x</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBQ3rhR64Uf</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBRCuFHrhR7</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBQiFHrhR64</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABxrA==</field><field name="id" class="java.lang.String">rO0ABXQAEDMxZGJkYzNiNWQ3YzE2NTQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKmpAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUxMTc=</field><field name="title" class="java.lang.String">rO0ABXQAPUVVIE5hdGlvbnMgU2hvdWxkIEN1dCBTb21lIFdpbmQsIFNvbGFyIFN1YnNpZGllcywgQWxzdG9tIFNheXM=</field><field name="content" class="java.lang.String">rO0ABXQPs0V1cm9wZWFuIG5hdGlvbnMgc2hvdWxkIGN1dCBzdWJzaWRpZXMgcGFpZCB0byBvbnNob3JlIHdpbmQgYW5kIHNvbGFyIHBob3Rvdm9sdGFpYyBwcm9qZWN0cyBhZnRlciAyMDIwIGFuZCBmb2N1cyBpbnN0ZWFkIG9uIG5ldyB0ZWNobm9sb2d5LCBzYWlkIHR1cmJpbmUtbWFrZXIgQWxzdG9tIFNB4oCZcyB2aWNlIHByZXNpZGVudCBvZiBlbnZpcm9ubWVudGFsIHBvbGljeSBhbmQgZ2xvYmFsIGFkdm9jYWN5LiDigJxUaGVyZSBhcmUgc29tZSByZW5ld2FibGUgdGVjaG5vbG9naWVzIG91dCB0aGVyZSBub3cgdGhhdCBuZWVkIG11Y2ggbGVzcyBzdWJzaWR5IHRoYW4gdGhleSBkaWQgZml2ZSB5ZWFycyBhZ28s4oCdIEdpbGVzIERpY2tzb24gc2FpZCBPY3QuIDMxIGluIGFuIGludGVydmlldyBpbiBMb25kb24uIE9uc2hvcmUgd2luZCBhbmQgc29sYXIg4oCccG9zc2libHnigJ0gZG9u4oCZdCBuZWVkIGJvb3N0aW5nLCBhcyBsb25nIGFzIHRoZXkgY2FuIGNvbXBldGUgYWdhaW5zdCBvdGhlciBmb3JtcyBvZiBwb3dlciBnZW5lcmF0aW9uLCBoZSBzYWlkLiBFbGVjdHJpY2l0eSBnZW5lcmF0ZWQgYnkgb25zaG9yZSB3aW5kIGZhcm1zIGNvc3RzIG9ubHkgNS41IHBlcmNlbnQgbW9yZSB0aGFuIHBvd2VyIGZyb20gY29hbCBwbGFudHMsIGFjY29yZGluZyB0byBkYXRhIGZyb20gQmxvb21iZXJnIE5ldyBFbmVyZ3kgRmluYW5jZS4gVGhlIHByaWNlIGZvciBvZmZzaG9yZSB3aW5kIGlzIGRvdWJsZSB0aGF0IG9mIGNvYWwtZmlyZWQgZ2VuZXJhdGlvbiwgdGhlIGRhdGEgc2hvdy4gVGhlIEV1cm9wZWFuIENvbW1pc3Npb24gd2FudHMgdG8gcHJvcG9zZSBuZXcgY2xpbWF0ZSBhbmQgZW5lcmd5IHBvbGljaWVzIGZvciB0aGUgZGVjYWRlIHRocm91Z2ggMjAzMCBieSB0aGUgbWlkZGxlIG9mIEphbnVhcnksIEVVIENsaW1hdGUgQ29tbWlzc2lvbmVyIENvbm5pZSBIZWRlZ2FhcmQgc2FpZCB0aGUgc2FtZSBkYXkgYXQgYSBHcmVlbiBBbGxpYW5jZSBzZW1pbmFyIGluIExvbmRvbi4gVGhlIGJsb2Mgc2hvdWxkIGJlIGFibGUgdG8gZGVsaXZlciBzdWNoIGEgcGFja2FnZSBieSBNYXJjaCwgSFNCQyBIb2xkaW5ncyBQbGMgc2FpZCBOb3YuIDEgaW4gYW4gZS1tYWlsZWQgcmVzZWFyY2ggbm90ZS4gVGhlIEVVIHNob3VsZCBhbHNvIHJhaXNlIGEgdGFyZ2V0IGZvciB0aGUgYW1vdW50IG9mIGVuZXJneSB0aGF0IGNvbWVzIGZyb20gcmVuZXdhYmxlIHNvdXJjZXMgYnkgMjAzMCB0byBhYm91dCAzNSBwZXJjZW50LCBjb21wYXJlZCB3aXRoIHRoZSAyMCBwZXJjZW50IGdvYWwgZm9yIDIwMjAsIERpY2tzb24gc2FpZC4g4oCcVGhhdCBkb2VzIG5vdCBtZWFuIHdlIGFyZSBwdXNoaW5nIGZvciBtb3JlIHJlbmV3YWJsZSBzdWJzaWRpZXMs4oCdIGhlIHNhaWQuIEZvY3VzZWQgU3Vic2lkaWVzIEJleW9uZCAyMDIwLCDigJxzdWJzaWRpZXMgc2hvdWxkIGJlIGZvY3VzZWQgb24gdGhvc2UgdGVjaG5vbG9naWVzIHRoYXQgc3RpbGwgbmVlZCBhIGxvdCBvZiBzdXBwb3J0IHRvIGdldCB1cCB0aGUgbGVhcm5pbmcgY3VydmUgYW5kIGRvd24gdGhlIGNvc3QgY3VydmUs4oCdIGluY2x1ZGluZyBvZmZzaG9yZSB3aW5kLCB0aWRhbCBhbmQgY2FyYm9uIGNhcHR1cmUgYW5kIHN0b3JhZ2UsIERpY2tzb24gc2FpZC4gVGhlIHRvdGFsIGNvc3Qgb2YgZGV2ZWxvcGluZyBhbmQgcHJvZHVjaW5nIGVuZXJneSBmcm9tIG9uc2hvcmUgd2luZCB0dXJiaW5lcyBpbiB0aGUgc2Vjb25kIHF1YXJ0ZXIgb2YgMjAxMyB3YXMgJDgyLjYxIHBlciBtZWdhd2F0dCBob3VyLCBjb21wYXJlZCB3aXRoICQ3OC4zMCBwZXIgbWVnYXdhdHQgaG91ciBmb3IgYSBjb2FsLWZpcmVkIHBvd2VyIHBsYW50LCBhY2NvcmRpbmcgdG8gZGF0YSBmcm9tIEJsb29tYmVyZyBOZXcgRW5lcmd5IEZpbmFuY2UuIEluIHRoZSBzYW1lIHBlcmlvZCwgb2Zmc2hvcmUgd2luZCBjb3N0ICQyMjAuNjUgcGVyIG1lZ2F3YXR0IGhvdXIgYW5kIHRpZGFsIHBvd2VyIHdhcyAkNDQwLjE1IHBlciBtZWdhd2F0dCBob3VyLCB0aGUgZGF0YSBzaG93LiBSZW5ld2FibGUgZW5lcmd5IHRhcmdldHMgc2hvdWxkIGNvbnRpbnVlIGFsb25nc2lkZSBlbWlzc2lvbnMgbWFya2V0cyBhcyBhIHdheSBvZiBjdXJiaW5nIGNhcmJvbiwgRGlja3NvbiBzYWlkLiDigJxJdCBtYWtlcyBzZW5zZSBub3QgdG8gcHV0IGFsbCB5b3VyIGVnZ3MgaW4gb25lIGJhc2tldC4gSWYgeW91IGxvb2sgYXQgYWxsIHRoZSBqdXJpc2RpY3Rpb25zIGFyb3VuZCB0aGUgd29ybGQgdGhhdCBhcmUgc2VyaW91cyBhYm91dCBsb3cgY2FyYm9uLCB0aGV5IGFyZSBnZW5lcmFsbHkgZG9pbmcgYm90aCBDTzIgcHJpY2luZyBhbmQgcmVuZXdhYmxlcyB0YXJnZXRzLOKAnSBoZSBzYWlkLiBPdmVyZ2VuZXJvdXMgUGF5bWVudHMgTWFueSBFVSBuYXRpb25zIGhhdmUgYmVlbiBvdmVyZ2VuZXJvdXMgd2l0aCBzdWJzaWRpZXMsIHN1Y2ggYXMgZmVlZC1pbiB0YXJpZmZzLCBmb3IgcmVuZXdhYmxlIGVuZXJneSwgbGVhZGluZyB0byBpbmVmZmljaWVudCBhbGxvY2F0aW9uIG9mIHJlc291cmNlcywgRGlja3NvbiBzYWlkLiDigJxUaHJlZSB5ZWFycyBhZ28gdGhlcmUgd2FzIG1vcmUgaW52ZXN0bWVudCBpbiBzb2xhciBQViBpbiB0aGUgQ3plY2ggUmVwdWJsaWMgdGhhbiB0aGUgd2hvbGUgb2YgdGhlIFUuUy4s4oCdIERpY2tzb24gc2FpZC4gVS5TLiBjb25zdW1wdGlvbiBvZiByZW5ld2FibGUgZW5lcmd5IHdhcyBhYm91dCA1MSBtaWxsaW9uIHRvbnMgb2Ygb2lsIGVxdWl2YWxlbnQgbGFzdCB5ZWFyLCBjb21wYXJlZCB3aXRoIDEuMyBtaWxsaW9uIHRvbnMgZm9yIHRoZSBDemVjaCBSZXB1YmxpYywgYWNjb3JkaW5nIHRvIHN0YXRpc3RpY3MgZnJvbSBCUCBQbGMuIEdlcm1hbnkgcmVjb2duaXplcyBpdCBoYXMgbW9yZSB0aGFuIGVub3VnaCBzb2xhciBwaG90b3ZvbHRhaWMgYW5kIG9uc2hvcmUgd2luZCBjYXBhY2l0eSwgRGlja3NvbiBzYWlkLiBQcmlvciB0byB0aGUgU2VwdC4gMjIgZWxlY3Rpb24sIGluIHdoaWNoIGhlciBwYXJ0eSB3b24gdGhlIGxhcmdlc3Qgc2hhcmUgb2YgdGhlIHZvdGUsIENoYW5jZWxsb3IgQW5nZWxhIE1lcmtlbCBzYWlkIHJldmlzaW5nIHRoZSBuYXRpb27igJlzIGNvc3RseSByZW5ld2FibGUgZW5lcmd5IHN1YnNpZGllcyB3YXMgaGVyIGZpcnN0IHByaW9yaXR5LiBQYXJpcy1iYXNlZCBBbHN0b20gaXMgYSBwcmVmZXJyZWQgYmlkZGVyIHRvIG1ha2Ugc3RlYW0gdHVyYmluZXMgZm9yIGEgbnVjbGVhciBwb3dlciBzdGF0aW9uIEVsZWN0cmljaXRlIGRlIEZyYW5jZSBTQSBwcm9wb3NlcyB0byBidWlsZCBhdCBIaW5rbGV5IFBvaW50IGluIEVuZ2xhbmQuIFRoZSBVLksuIGdvdmVybm1lbnQgaGFzIGFncmVlZCB0aGF0IEVERiB3aWxsIHJlY2VpdmUgYSA5Mi41MC1wb3VuZCAoJDE0OCkgcGVyIG1lZ2F3YXR0LWhvdXIgZml4ZWQgcHJpY2UgZm9yIHBvd2VyIGdlbmVyYXRlZCBieSB0aGUgdmVudHVyZSwgbmVhcmx5IGRvdWJsZSB0aGUgY3VycmVudCBsZXZlbCBvZiB0aGUgd2hvbGVzYWxlIGVsZWN0cmljaXR5IG1hcmtldC4gVGhpcyB3b3VsZCBtYWtlIEhpbmtsZXkgUG9pbnQgdGhlIHdvcmxk4oCZcyBjb3N0bGllc3QgcG93ZXIgc3RhdGlvbiwgTGliZXJ1bSBDYXBpdGFsIEx0ZC4gc2FpZCBsYXN0IHdlZWsgaW4gYSByZXNlYXJjaCBub3RlLiDigJxUaGUgVS5LLiBnb3Zlcm5tZW50IHdhbnRlZCBuZXcgbnVjbGVhciBidWlsZCzigJ0gRGlja3NvbiBzYWlkLiBDZW50cmljYSBQbGMsIHRoZSBVLksu4oCZcyBiaWdnZXN0IHV0aWxpdHksIGFuZCBFT04gQUcgYW5kIFJXRSBBRyBpbiBHZXJtYW55IGhhdmUgYWxsIGRyb3BwZWQgcGxhbnMgdG8gaGVscCBmaW5hbmNlIG51Y2xlYXIgc3RhdGlvbnMgaW4gRW5nbGFuZCwgcG90ZW50aWFsbHkgYmVjYXVzZSB0aGUgcHJpY2UgYmVpbmcgb2ZmZXJlZCB3YXNu4oCZdCB3b3JraW5nIGZvciB0aGVtLCBEaWNrc29uIHNhaWQuIOKAnFRoZSBvbmUgY29tcGFueSB0aGF0IHN0YXllZCB0aGUgY291cnNlLCBFREYsIGFncmVlZCBhIGRlYWws4oCdIGhlIHNhaWQu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUIhskMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDBjMzdlNTk4M2U4YmUzM2Y=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0VESQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUIm2J8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAznrhR64Uf</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzwAAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzXCj1wo9c</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzeFHrhR64</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAw4UeuFHrh</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAE7PA==</field><field name="id" class="java.lang.String">rO0ABXQAEGMwMTEzNDhhOGVkMWQzNmM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHeTAAAQ==</field></document></documents><date>2015-05-07T12:13:24-0500</date></cacheEntry>
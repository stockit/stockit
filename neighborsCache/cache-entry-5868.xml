<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0DRJDaGluYSBoYXMgcmVqZWN0ZWQgYSBXb3JsZCBCYW5rIHJlcG9ydCB0aGF0IHN1Z2dlc3RzIGl0IG1pZ2h0IHBhc3MgdGhlIFVuaXRlZCBTdGF0ZXMgdGhpcyB5ZWFyIHRvIGJlY29tZSB0aGUgYmlnZ2VzdCBlY29ub215IG1lYXN1cmVkIGJ5IGl0cyBjdXJyZW5jeXMgcHVyY2hhc2luZyBwb3dlciBDaGluYSBpcyBvbiB0cmFjayB0byBiZWNvbWUgdGhlIE5vIDEgZWNvbm9teSBieSBzaGVlciBzaXplIGJ5IHRoZSBlYXJseSAyMDIwcyBhbmQgcG9zc2libHkgc29vbmVyIEJ1dCBpdHMgbGVhZGVycyBkb3ducGxheSBzdWNoIGNvbXBhcmlzb25zIHBvc3NpYmx5IHRvIGF2ZXJ0IHByZXNzdXJlIHRvIHRha2Ugb24gZmluYW5jaWFsIG9ibGlnYXRpb25zIG9yIG1ha2UgY29uY2Vzc2lvbnMgb24gdHJhZGUgb3IgY2xpbWF0ZSBjaGFuZ2UgVGhlIGVzdGltYXRlIGJ5IHRoZSBXb3JsZCBCYW5rcyBJbnRlcm5hdGlvbmFsIENvbXBhcmlzb24gUHJvZ3JhbSBzYXlzIHRoYXQgYmFzZWQgb24gMjAxMSBwcmljZXMgdGhlIHB1cmNoYXNpbmcgcG93ZXIgb2YgQ2hpbmFzIGN1cnJlbmN5IHRoZSB5dWFuIHdhcyBtdWNoIHN0cm9uZ2VyIHRoYW4gd2FzIHJlZmxlY3RlZCBieSBleGNoYW5nZSByYXRlcwoKRWRpdG9ycyBOb3RlICA1IFNob2NraW5nIFJlYXNvbnMgdGhlIERvdyBXaWxsIEhpdCA2MDAwMCBCeSB0aGF0IG1lYXN1cmUgQ2hpbmFzIGVjb25vbXkgd2FzIDg3IHBlcmNlbnQgdGhlIHNpemUgb2YgdGhlIFVuaXRlZCBTdGF0ZXMgaW4gMjAxMSBvciAxNSBwZXJjZW50IGJpZ2dlciB0aGFuIHRoZSBwcmV2aW91cyBlc3RpbWF0ZSBhY2NvcmRpbmcgdG8gYSBjYWxjdWxhdGlvbiBieSBSQlMgZWNvbm9taXN0IExvdWlzIEt1aWpzIEZhc3Rlcmdyb3dpbmcgQ2hpbmEgd291bGQgcGFzcyB0aGUgVW5pdGVkIFN0YXRlcyBpbiBwdXJjaGFzaW5nIHBvd2VyIHRlcm1zIHRoaXMgeWVhciB0aG91Z2ggaXQgc3RpbGwgd291bGQgYmUgYWJvdXQgNjAgcGVyY2VudCB0aGUgc2l6ZSBvZiB0aGUgVVMgZWNvbm9teSBhdCBtYXJrZXQgZXhjaGFuZ2UgcmF0ZXMgQ2hpbmFzIE5hdGlvbmFsIEJ1cmVhdSBvZiBTdGF0aXN0aWNzIHdoaWNoIHRvb2sgcGFydCBpbiB0aGUgc3R1ZHkgcmVqZWN0ZWQgaXRzIGNvbmNsdXNpb24gYWNjb3JkaW5nIHRvIHRoZSBXb3JsZCBCYW5rIHJlcG9ydCBUaGUgc3RhdGlzdGljcyBidXJlYXUgZXhwcmVzc2VkIHJlc2VydmF0aW9ucyBhYm91dCB0aGUgc3R1ZHlzIG1ldGhvZG9sb2d5IGFuZCBkaWQgbm90IGFncmVlIHRvIHB1Ymxpc2ggdGhlIGhlYWRsaW5lIHJlc3VsdHMgZm9yIENoaW5hIHRoZSByZXBvcnQgc2FpZCBBIGZpZ3VyZSB3YXMgZXN0aW1hdGVkIGFueXdheSBieSByZXNlYXJjaGVycyBidXQgdGhlIE5CUyBvZiBDaGluYSBkb2VzIG5vdCBlbmRvcnNlIHRoZXNlIHJlc3VsdHMgYXMgb2ZmaWNpYWwgc3RhdGlzdGljcyB0aGUgcmVwb3J0IHNhaWQgVGhlIHN0YXRpc3RpY3MgYnVyZWF1IGluIEJlaWppbmcgZGlkIG5vdCByZXNwb25kIFdlZG5lc2RheSB0byBhIHJlcXVlc3QgZm9yIGNvbW1lbnQgQ2hpbmFzIGdvdmVybm1lbnQgaGFzIGJlZW4gcmVsdWN0YW50IHRvIGFja25vd2xlZGdlIHByZXZpb3VzIG1pbGVzdG9uZXMgc2hvd2luZyBpdHMgZWNvbm9taWMgcmlzZSB3aGVuIGl0IHBhc3NlZCBHZXJtYW55IGFzIHRoZSBiaWdnZXN0IGV4cG9ydGVyIEphcGFuIGFzIHRoZSBObyAyIGVjb25vbXkgYW5kIHRoZSBVbml0ZWQgU3RhdGVzIGFzIHRoZSBiaWdnZXN0IHRyYWRlciBJdHMgbGVhZGVycyBoYXZlIGVtcGhhc2l6ZWQgQ2hpbmFzIHN0YXR1cyBhcyBhIG1pZGRsZWluY29tZSBjb3VudHJ5IGluIHJlc2lzdGluZyBwcmVzc3VyZSB0byBhZG9wdCBiaW5kaW5nIGxpbWl0cyBvbiBncmVlbmhvdXNlIGdhcyBlbWlzc2lvbnMgZm9yIHdoaWNoIHRoZWlyIGNvdW50cnkgaXMgdGhlIGJpZ2dlc3Qgc291cmNlIFRoZSBJbnRlcm5hdGlvbmFsIENvbXBhcmlzb24gUHJvZ3JhbSBjb25kdWN0ZWQgZXZlcnkgc2l4IHllYXJzIGlzIG1lYW50IHRvIGFsbG93IGNvbXBhcmlzb25zIG9mIGxpdmluZyBzdGFuZGFyZHMgaW4gY291bnRyaWVzIHdpdGggd2lkZWx5IHZhcnlpbmcgcHJpY2VzIFRoZSByZXN1bHRzIGFyZSBhIGdvb2QgdG9vbCBmb3IgdW5kZXJzdGFuZGluZyBsaXZpbmcgY29uZGl0aW9ucyBmb3IgQ2hpbmVzZSBmYW1pbGllcyBidXQgb3RoZXIgdXNlcyBhcmUgbGltaXRlZCBzYWlkIE1hcmsgV2lsbGlhbXMgY2hpZWYgQXNpYSBlY29ub21pc3QgZm9yIENhcGl0YWwgRWNvbm9taWNzIEl0IGRvZXMgYnJpbmcgaG9tZSB0aGUgc2hlZXIgc2l6ZSBvZiB0aGUgQ2hpbmVzZSBlY29ub215IGluIHRoZSBzZXJ2aWNlcyBhbmQgZ29vZHMgYW5kIHRoYXQgcGVvcGxlIGluIENoaW5hIGFyZSBwcm9kdWNpbmcgV2lsbGlhbXMgc2FpZCBXaGVyZSBpdCBmYWxscyBzaG9ydCBpcyB0aGF0IGl0IGRvZXNudCByZWFsbHkgdGVsbCB1cyBhYm91dCBDaGluYXMgZWNvbm9taWMgc3RhbmRpbmcgcmVsYXRpdmUgdG8gdGhlIHJlc3Qgb2YgdGhlIHdvcmxkIGhlIHNhaWQgV2hlbiBpdCBjb21lcyB0byBDaGluYXMgcHVyY2hhc2luZyBwb3dlciBhYnJvYWQgd2UgbmVlZCB0byBsb29rIGF0IHRoZSBmaWd1cmVzIGFkanVzdGVkIGZvciBtYXJrZXQgZXhjaGFuZ2UgcmF0ZXMgVGhlIEludGVybmF0aW9uYWwgTW9uZXRhcnkgRnVuZCBoYXMgZm9yZWNhc3QgQ2hpbmFzIGVjb25vbWljIGdyb3d0aCB0aGlzIHllYXIgYXQgNzUgcGVyY2VudCBuZWFybHkgdHJpcGxlIHRoZSAyOCBwZXJjZW50IG91dGxvb2sgZm9yIHRoZSBVbml0ZWQgU3RhdGVzIFdpdGggaXRzIG11Y2ggbGFyZ2VyIHBvcHVsYXRpb24gb2YgMTMgYmlsbGlvbiBwZW9wbGUgQ2hpbmEgYmFyZWx5IHJhbmtzIGluIHRoZSB0b3AgMTAwIGNvdW50cmllcyBmb3IgaW5jb21lIHBlciBwZXJzb24gVGhlIHJlcG9ydCBpcyBhIHJlbWluZGVyIHRoYXQgQ2hpbmVzZSBjb25zdW1lcnMgb25seSBoYXZlIGFib3V0IG9uZXRlbnRoIGFzIG11Y2ggbW9uZXkgdG8gc3BlbmQgYXMgQW1lcmljYW5zIHNhaWQgZWNvbm9taXN0IEJyaWFuIEphY2tzb24gb2YgSUhTIEdsb2JhbCBJbnNpZ2h0IFRoYXQgaXMgYWJvdXQgaGFsZiB0aGUgd29ybGQgYXZlcmFnZSBvbiBwYXIgd2l0aCB0aGUgUGhpbGlwcGluZXMgQm9saXZpYSBvciBJcmFxIFNlbGxlcnMgb2YgY29uc3VtZXIgZ29vZHMgbWF5IGZpbmQgaXQgZGlzY291cmFnaW5nIGdpdmVuIGl0IGltcGxpZXMgYSByZWxhdGl2ZWx5IGxvdyBjb3N0IHJlZ2ltZSBmb3IgZmluYWwgc2FsZXMgSmFja3NvbiBzYWlkIGluIGFuIGVtYWlsCgpFZGl0b3JzIE5vdGUgIDUgU2hvY2tpbmcgUmVhc29ucyB0aGUgRG93IFdpbGwgSGl0IDYwMDAwdAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAb2FydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2UsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEzLTAzLTI3VDAwOjAwOjAwWiBUTyAyMDEzLTEyLTAzVDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDM1MDI=</field><field name="title" class="java.lang.String">rO0ABXQAQEdvbGQgQmVmdWRkbGVzIEJlcm5hbmtlIGFzIENlbnRyYWwgQmFua3MnIExvc3NlcyBhdCAkNTQ1IEJpbGxpb24=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGRSUSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGE1YTE1MDQyODBhOTc5NGQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABVNDR0xZ</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGWb6CAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlD1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlGZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkvXCj1wo9</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkvXCj1wo9</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkPXCj1wo9</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAHbyA==</field><field name="id" class="java.lang.String">rO0ABXQAEDNkZTU4YjQzMzA1NTFmZDQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mITOAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDMzODI=</field><field name="title" class="java.lang.String">rO0ABXQAQUNoaW5hIE1heSBUaWdodGVuIENhc2ggU3VwcGx5IGFzIEhvbWUgUHJpY2VzIEZ1ZWwgSW5mbGF0aW9uIEZlYXJz</field><field name="content" class="java.lang.String">rO0ABXQVB0EgcG9saWN5IGFkdmlzZXIgdG8gdGhlIFBlb3BsZSdzIEJhbmsgb2YgQ2hpbmEgdG9sZCBSZXV0ZXJzIHRoZSBhdXRob3JpdHkgbWF5IHRpZ2h0ZW4gY2FzaCBjb25kaXRpb25zIGluIHRoZSBmaW5hbmNpYWwgc3lzdGVtIHRvIGFkZHJlc3MgdGhlIGluZmxhdGlvbiByaXNrcywgd2hpbGUgdGhlIGNlbnRyYWwgYmFuayByZWZyYWluZWQgZnJvbSBzdXBwbHlpbmcgY2FzaCB0byBtb25leSBtYXJrZXRzIGZvciB0aGUgc2Vjb25kIGRheSBydW5uaW5nLiBJZiBpdCBhbHNvIGF2b2lkcyBpbmplY3RpbmcgY2FzaCBhdCBpdHMgbmV4dCBtb25leSBtYXJrZXQgb3BlcmF0aW9uIG9uIFRodXJzZGF5LCB0aGUgZWZmZWN0IHdpbGwgYmUgYSBuZXQgd2Vla2x5IGRyYWluIG9mIDU4IGJpbGxpb24geXVhbiDigJQgdGhlIHNlY29uZCBiaWdnZXN0IHNpbmNlIEZlYnJ1YXJ5LiAiKFBvbGljeSkgd2lsbCBvbmx5IGJlIHRpZ2h0ZW5lZCBzbGlnaHRseSBhcyBpbmZsYXRpb24gaXMgcmlzaW5nLiBUaGVyZSBhcmUgc29tZSBjb25jZXJucyBvbiBiYW5rIGxlbmRpbmcsIiBzYWlkIFNvbmcgR3VvcWluZywgYW4gYWNhZGVtaWMgbWVtYmVyIG9mIHRoZSBjZW50cmFsIGJhbmsncyBtb25ldGFyeSBwb2xpY3kgY29tbWl0dGVlLiAiUG9saWN5IGZpbmUtdHVuaW5nIHdpbGwgcmVseSBtYWlubHkgb24gb3BlbiBtYXJrZXQgb3BlcmF0aW9ucyBhbmQgSSBjYW5ub3Qgc2VlIGFueSBwb3NzaWJpbGl0eSBvZiBjaGFuZ2luZyBpbnRlcmVzdCByYXRlcyBvciBiYW5rIHJlc2VydmUgcmF0aW9zLiIgU29uZydzIGNvbW1lbnRzIGFuZCB0aGUgc2hhcnAgcmlzZSBpbiBob3VzZSBwcmljZXMgaGlnaGxpZ2h0IEJlaWppbmcncyBwb2xpY3kgcXVhbmRhcnkuIE9uIHRoZSBvbmUgaGFuZCwgcG9saWN5bWFrZXJzIHdhbnQgdG8gYXZvaWQgYSBidWlsZHVwIG9mIG1hcmtldCBhbmQgZWNvbm9taWMgaW1iYWxhbmNlcywgc3VjaCBhcyBhIGRlYnQtZnVlbGVkIHByb3BlcnR5IGJ1YmJsZS4gT24gdGhlIG90aGVyIGhhbmQsIHRoZXkgYXJlIHJlbHVjdGFudCB0byB1c2UgbW9yZSBwb3RlbnQgaW5zdHJ1bWVudHMgdG8gY29udHJvbCB0aGUgaW1iYWxhbmNlcyBpbiBjYXNlIHRoZXkgYWxzbyBibHVudCBhIG1vZGVzdCBlY29ub21pYyByZWNvdmVyeSBhaGVhZCBvZiBhIGNydWNpYWwgcG9saWN5IG1lZXRpbmcgbmV4dCBtb250aC4gQ2hpbmEncyBob3VzZSBwcmljZXMgaW4gU2VwdGVtYmVyIHJvc2UgOS4xIHBlcmNlbnQgZnJvbSBhIHllYXIgZWFybGllciwgdGhlIHNoYXJwZXN0IHJpc2Ugc2luY2UgSmFudWFyeSAyMDExLCBjYWxjdWxhdGlvbnMgb2Ygb2ZmaWNpYWwgZGF0YSBieSBSZXV0ZXJzIHNob3dzLiBUaGUgQ1NJMzAwIG9mIGxlYWRpbmcgU2hhbmdoYWkgYW5kIFNoZW56aGVuIEEtc2hhcmUgbGlzdGluZ3MgZmVsbCAxIHBlcmNlbnQgYXMgaW52ZXN0b3JzIGJyYWNlZCBmb3IgcG9zc2libGUgbWVhc3VyZXMgdG8gY2FsbSB0aGUgcHJvcGVydHkgbWFya2V0LiBTb25nIHNhaWQgY29uc3VtZXIgaW5mbGF0aW9uIHJhdGhlciB0aGFuIHByb3BlcnR5IHByaWNlcyBzZXJ2ZWQgYXMgdGhlIGNlbnRyYWwgYmFuaydzIGtleSBwb2xpY3kgc2lnbnBvc3QuIE1vbmV5IG1hcmtldCB0cmFkZXJzIHNhaWQgdGhleSB3b3VsZCB3YWl0IHVudGlsIFRodXJzZGF5J3MgbW9uZXkgbWFya2V0IG9wZXJhdGlvbiB0byBjb25jbHVkZSB3aGV0aGVyIHRoZSBjZW50cmFsIGJhbmsgd2FzIHRyeWluZyB0byBzZW5kIGEgcG9saWN5IHNpZ25hbCBnaXZlbiB0aGF0IHNob3J0LXRlcm0gcmF0ZXMgaGF2ZSBmYWxsZW4gc2hhcnBseSBzaW5jZSB0aGUgZW5kIG9mIHRoZSB0aGlyZCBxdWFydGVyLiBUaGUgd2VpZ2h0ZWQtYXZlcmFnZSBiZW5jaG1hcmsgc2V2ZW4tZGF5IHJlcG8gcmF0ZSAgaGFzIGRyb3BwZWQgbmVhcmx5IGEgZnVsbCBwZXJjZW50YWdlIHBvaW50IG92ZXIgdGhlIGxhc3QgZWlnaHQgdHJhZGluZyBzZXNzaW9ucy4gVHJhZGVycyBhbmQgZWNvbm9taXN0cyBiZWxpZXZlIGN1cnJlbnQgYW1wbGUgZnVuZGluZyBjb25kaXRpb25zIGluIHRoZSBmaW5hbmNpYWwgc3lzdGVtIHJlZmxlY3QgaW4gcGFydCBvZmZpY2lhbCBlZmZvcnRzIHRvIHByb3AgdXAgZWNvbm9taWMgZ3Jvd3RoIGFuZCBhbiBlZmZvcnQgYnkgdGhlIGNlbnRyYWwgYmFuayB0byBtYWtlIGFtZW5kcyBhZnRlciBpdCBlbmdpbmVlcmVkIGEgY3JlZGl0IGNydW5jaCBpbiB0aGUgaW50ZXJiYW5rIG1hcmtldCBpbiBsYXRlIEp1bmUuIFRoYXQgbW92ZSB3YXMgd2lkZWx5IHNlZW4gYXMgYSB3YXJuaW5nIHRvIGJhbmtzIHRvIHJlaW4gaW4gcmlza2llciBsZW5kaW5nLCBidXQgdGhlIGNlbnRyYWwgYmFuayBhcHBlYXJlZCB0byBoYXZlIGJlZW4gYWRtb25pc2hlZCBieSB0aGUgY2VudHJhbCBnb3Zlcm5tZW50IGZvciB0aGUgb3BhcXVlIHdheSBpbiB3aGljaCB0aGUgY2FzaCBzcXVlZXplIHdhcyBtYW5hZ2VkLiBOb3csIGhvd2V2ZXIsIGVjb25vbWlzdHMgYmVsaWV2ZSB0aGUgUEJPQyBtYXkgaGF2ZSBnb25lIHRvbyBmYXIgaW4gdGhlIG90aGVyIGRpcmVjdGlvbi4gU09MVVRJT05TIENoaW5hJ3MgZWNvbm9teSBncmV3IGF0IGl0cyBmYXN0ZXN0IGNsaXAgdGhpcyB5ZWFyIGluIHRoZSB0aGlyZCBxdWFydGVyIGZ1ZWxlZCBsYXJnZWx5IGJ5IGludmVzdG1lbnQsIGJ1dCBzaWducyBhcmUgZW1lcmdpbmcgdGhhdCByZXN1cmdlbnQgY3JlZGl0IGdyb3d0aCBtaWdodCBkcml2ZSB1cCBpbmZsYXRpb24gZXZlbiBhcyB0aGUgcmVjb3ZlcnkgcnVucyBpbnRvIGZyZXNoIGhlYWR3aW5kcy4gQ29uc3VtZXIgcHJpY2UgaW5mbGF0aW9uIHJvc2UgdG8gYSBzZXZlbi1tb250aCBoaWdoIG9mIDMuMSBwZXJjZW50IGluIFNlcHRlbWJlciBmcm9tIDIuNiBwZXJjZW50IGluIEF1Z3VzdCwgZGF0YSBzaG93ZWQgbGFzdCB3ZWVrLiBUdWVzZGF5J3MgaG91c2UgcHJpY2UgZGF0YSBmcm9tIDcwIG1ham9yIENoaW5lc2UgY2l0aWVzIG9mZmVyZWQgbW9yZSBldmlkZW5jZSBvZiBwcmljZSBwcmVzc3VyZXMuIFNvbmcsIGhvd2V2ZXIsIHNhdyBsaXR0bGUgcmlzayBvZiBpbmZsYXRpb24gZ2V0dGluZyBvdXQgb2YgaGFuZCBnaXZlbiBzdGVhZHkgZGVtYW5kIGFuZCBsaW1pdGVkIHBvdGVudGlhbCBmb3IgYSBwaWNrIHVwIGluIGVjb25vbWljIGV4cGFuc2lvbiBhcyBCZWlqaW5nIHRyaWVzIHRvIGdlYXIgdGhlIGNvdW50cnkgbW9yZSB0byBjb25zdW1lci1sZWQgZ3Jvd3RoLiBUaGUgYWR2aXNlciBwcmVkaWN0ZWQgcG9saWN5IGZpbmUtdHVuaW5nIHdvdWxkIGJlIHN1ZmZpY2llbnQgdG8gc3RhYmlsaXplIGluZmxhdGlvbiBhdCB0aGUgY3VycmVudCBsZXZlbCBpbiB0aGUgZm91cnRoIHF1YXJ0ZXIgYW5kIHNvIGtlZXAgdGhlIGZ1bGwteWVhciByYXRlIGNvbWZvcnRhYmx5IGJlbG93IHRoZSBnb3Zlcm5tZW50IHRhcmdldCBvZiAzLjUgcGVyY2VudC4gRWNvbm9taWMgZ3Jvd3RoIGNvdWxkIGVhc2UgdG8gNy41IHBlcmNlbnQgaW4gdGhlIGZvdXJ0aCBxdWFydGVyIGZyb20gNy44IHBlcmNlbnQgaW4gdGhlIHRoaXJkIHF1YXJ0ZXIsIGhlIHNhaWQuIEJ1dCBmdWxsLXllYXIgZ3Jvd3RoIGNvdWxkIHN0aWxsIGNvbWUgaW4gYXQgNy42IHBlcmNlbnQsIGp1c3QgYWJvdmUgQmVpamluZydzIDcuNSBwZXJjZW50IHRhcmdldCwgaGUgYWRkZWQuICJBIHNsb3dkb3duIGluIGdyb3d0aCBpbiB0aGUgZm91cnRoIHF1YXJ0ZXIgd291bGQgcHJvYmFibHkgcmVhd2FrZW4gZmVhcnMgb2YgYSBoYXJkIGxhbmRpbmcgYnV0IHdlIHdvdWxkIHdlbGNvbWUgaXQsIiB3cm90ZSBNYXJrIFdpbGxpYW1zIGFuZCBKdWxpYW4gRXZhbnMtUHJpdGNoYXJkIG9mIENhcGl0YWwgRWNvbm9taWNzIGluIGEgcmVzZWFyY2ggbm90ZS4gIkEgcHJvbG9uZ2VkIHN1cmdlIGluIGNyZWRpdC1mdWVsZWQgaW52ZXN0bWVudCBpcyB0aGUgbGFzdCB0aGluZyBDaGluYSBub3cgbmVlZHMuIiBDaGluZXNlIGJhbmtzIG1hZGUgNzg3IGJpbGxpb24geXVhbiAoJDEyOSBiaWxsaW9uKSBvZiBuZXcgeXVhbiBsb2FucyBpbiBTZXB0ZW1iZXIsIGhpZ2hlciB0aGFuIGEgZm9yZWNhc3Qgb2YgNjUwIGJpbGxpb24geXVhbiBhbmQgbW9yZSB0aGFuIEF1Z3VzdCdzIDcxMS4zIGJpbGxpb24geXVhbiwgY2VudHJhbCBiYW5rIGRhdGEgc2hvd2VkLiBBdCB0aGUgc2FtZSB0aW1lLCB5dWFuIGhhcyBwb3VyZWQgaW50byB0aGUgZWNvbm9teSBhcyBhIHNpZGUgZWZmZWN0IG9mIG1hc3NpdmUgaW50ZXJ2ZW50aW9uIGJ5IHRoZSBjZW50cmFsIGJhbmsgaW50ZW5kZWQgdG8gY3VyYiB0aGUgc3RyZW5ndGggb2YgYSBsb25nLXJ1bm5pbmcgcmFsbHkgaW4gdGhlIGxvY2FsIGN1cnJlbmN5LiBXaXRoIHRoZSBjZW50cmFsIGJhbmsgc2VlbiBhcyByZWx1Y3RhbnQgdG8gdXNlIGludGVyZXN0IHJhdGVzIHRvIHJlaW4gaW4gcHJvcGVydHkgcHJpY2VzLCBtYXJrZXRzIHdpbGwgc2hpZnQgdGhlaXIgZm9jdXMgdG8gdGhlIHJ1bGluZyBDb21tdW5pc3QgUGFydHkncyBrZXkgcG9saWN5IG1lZXRpbmcgaW4gTm92ZW1iZXIsIHdoZW4gdGhlIGxlYWRlcnMgYXJlIGV4cGVjdGVkIHRvIG1hcCBvdXQgaG93IHRvIHNoYXBlIHRoZSBlY29ub215IGluIHRoZSBjb21pbmcgZGVjYWRlLiAiV2l0aCB0aGUgaXNzdWUgaW4gdGhlIHByb3BlcnR5IG1hcmtldCBiZWNvbWluZyBtb3JlIGFuZCBtb3JlIHNldmVyZSwgdGhlIHRoaXJkIHBsZW51bSBuZXh0IG1vbnRoIHNob3VsZCB0b3VjaCB1cG9uIHRoZSBwcm9ibGVtLCIgc2FpZCBXYW5nIEp1biwgYSByZXNlYXJjaGVyIGF0IHRoZSBDaGluYSBDZW50ZXIgZm9yIEludGVybmF0aW9uYWwgRWNvbm9taWMgRXhjaGFuZ2VzIChDQ0lFRSksIGEgZ292ZXJubWVudCB0aGluay10YW5rLiBTZWN1cmluZyBtb3JlIGxhbmQgZm9yIGRldmVsb3BtZW50IHRvIGNvb2wgdGhlIHJlZC1ob3QgbWFya2V0IGlzIG9uZSBvcHRpb24gdW5kZXIgZGViYXRlLiBBbm90aGVyIGlzIHRvIHVzZSBwcm9wZXJ0eSB0YXhlcyB0byByZWluIGluIGRlbWFuZC4gV2hhdCBjb21wbGljYXRlcyB0aGUgcG9saWN5IHJlc3BvbnNlIGlzIGEgZGl2ZXJnZW5jZSBpbiBob3VzZSBwcmljZSBpbmZsYXRpb24gYmV0d2VlbiBiaWcgYW5kIHNtYWxsIGNlbnRlcnMuIFRoZSBmaWd1cmVzIGZyb20gdGhlIE5hdGlvbmFsIEJ1cmVhdSBvZiBTdGF0aXN0aWNzIHNob3dlZCBob3VzZSBwcmljZXMgaW4gdGhlIGNvdW50cnkncyBsYXJnZXN0IGNpdGllcyBjb250aW51ZWQgdG8gcmlzZSBtdWNoIGZhc3RlciB0aGFuIHRoZSBuYXRpb25hbCBhdmVyYWdlLiBUaGV5IHdlcmUgdXAgMTYgcGVyY2VudCBpbiBCZWlqaW5nLCAxNyBwZXJjZW50IGluIFNoYW5naGFpIGFuZCBhYm91dCAyMCBwZXJjZW50IGluIHRoZSBzb3V0aGVybiBjaXRpZXMgb2YgR3Vhbmd6aG91IGFuZCBTaGVuemhlbi4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUHeiKiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGFhZTg1NTlkMjVkMDIzMGQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABUZVTExM</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUHjrwSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5ZmZmZmZm</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5ZmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5Qo9cKPXD</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5XrhR64Uf</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA2+FHrhR64</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAFFA==</field><field name="id" class="java.lang.String">rO0ABXQAEDA3Y2U5YjEzNjg1MTI2ZTg=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mF7IAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDYyOTQ=</field><field name="title" class="java.lang.String">rO0ABXQAQEFzaWEncyAnTWlyYWNsZScgU2hvd3MgU2lnbnMgb2YgV2VhciBhcyBJbnZlc3RvcnMgTXVsbCBFbmQgb2YgUUU=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUCaGASAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGRmNWViNWU0MWYxZDk1YWE=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0NQSU4uSks=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUCfPmCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECsIAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECtfgAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECrJgAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECstgAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECsXFHrhR64</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAKrC2A==</field><field name="id" class="java.lang.String">rO0ABXQAEGM4MzUzOTM1OGIwMjVlNzQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFB6AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwNTI=</field><field name="title" class="java.lang.String">rO0ABXQAMlRoZSBTZWNyZXQsIERpcnR5IENvc3Qgb2YgT2JhbWEncyBHcmVlbiBQb3dlciBQdXNo</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJK5SMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI3MTcyMzgzMzAxZTY3Yjg=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZBUk0=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJQC38AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyI9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABp3A==</field><field name="id" class="java.lang.String">rO0ABXQAEGIxNzhiNTk3MDYyZjcwYTE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGoqAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM0NjQ=</field><field name="title" class="java.lang.String">rO0ABXQAMkRhdGEgU2hvdyBDaGluYSBQYXNzaW5nIFVTIGFzIEJpZ2dlc3QgT2lsIEltcG9ydGVy</field><field name="content" class="java.lang.String">rO0ABXQPb0NoaW5hIGhhcyBhY2hpZXZlZCBhbm90aGVyIHdvcmxkLWJlYXRpbmcgc3RhdHVzIGl0cyBsZWFkZXJzIGRvbid0IHdhbnQ6IEJpZ2dlc3Qgb2lsIGltcG9ydGVyLiBDaGluYSBwYXNzZWQgdGhlIFVuaXRlZCBTdGF0ZXMgaW4gU2VwdGVtYmVyIGFzIHRoZSB3b3JsZCdzIGJpZ2dlc3QgbmV0IG9pbCBpbXBvcnRlciwgZHJpdmVuIGJ5IGZhc3RlciBlY29ub21pYyBncm93dGggYW5kIHN0cm9uZyBhdXRvIHNhbGVzLCBhY2NvcmRpbmcgdG8gVS5TLiBnb3Zlcm5tZW50IGRhdGEgcmVsZWFzZWQgdGhpcyB3ZWVrLiBDaGluZXNlIG9pbCBjb25zdW1wdGlvbiBvdXRzdHJpcHBlZCBwcm9kdWN0aW9uIGJ5IDYuMyBtaWxsaW9uIGJhcnJlbHMgcGVyIGRheSwgd2hpY2ggaW5kaWNhdGVzIHRoZSBjb3VudHJ5IGhhZCB0byBpbXBvcnQgdGhhdCBtdWNoIHRvIGZpbGwgdGhlIGdhcCwgdGhlIEVuZXJneSBJbmZvcm1hdGlvbiBBZG1pbmlzdHJhdGlvbiBzYWlkIHRoaXMgd2Vlay4KCkVkaXRvcuKAmXMgTm90ZTogIFdlaXJkIFRyaWNrIEFkZHMgJDEsMDAwIHRvIFlvdXIgU29jaWFsIFNlY3VyaXR5IENoZWNrcyAgIkNoaW5hJ3Mgc3RlYWR5IGdyb3d0aCBpbiBvaWwgZGVtYW5kIGhhcyBsZWQgaXQgdG8gYmVjb21lIHRoZSB3b3JsZCdzIGxhcmdlc3QgbmV0IG9pbCBpbXBvcnRlciwgZXhjZWVkaW5nIHRoZSBVbml0ZWQgU3RhdGVzIGluIFNlcHRlbWJlciAyMDEzLCciIHRoZSBhZ2VuY3kgc2FpZCBpbiBhIHJlcG9ydC4gIkVJQSBmb3JlY2FzdHMgdGhpcyB0cmVuZCB0byBjb250aW51ZSB0aHJvdWdoIDIwMTQuIiBDaGluYSdzIGVjb25vbWljIGJvb20gaGFzIHJhaXNlZCBpbmNvbWVzIGFuZCBpbmNyZWFzZWQgaXRzIGdsb2JhbCBpbmZsdWVuY2UuIEJ1dCBpdCBhbHNvIGhhcyBzcHVycmVkIGRlbWFuZCBmb3IgaW1wb3J0ZWQgb2lsIGFuZCBnYXMsIHdoaWNoIGNvbW11bmlzdCBsZWFkZXJzIHNlZSBhcyBhIHN0cmF0ZWdpYyB3ZWFrbmVzcy4gUmlzaW5nIGF1dG8gb3duZXJzaGlwIGhhcyBsZWZ0IENoaW5hJ3MgY2l0aWVzIGNob2tpbmcgb24gc21vZyBhbmQgYWRkZWQgdG8gcHJlc3N1cmUgb24gQmVpamluZyBmcm9tIGl0cyBvd24gcHVibGljIHRvIGN1cmIgcG9sbHV0aW9uIGFuZCBmcm9tIG90aGVyIG5hdGlvbnMgdG8gcmVpbiBpbiBzdXJnaW5nIGdyZWVuaG91c2UgZ2FzIGVtaXNzaW9ucy4gVGhlIFVuaXRlZCBTdGF0ZXMsIHdpdGggYSBwb3B1bGF0aW9uIGFib3V0IG9uZS10aGlyZCB0aGUgc2l6ZSBvZiBDaGluYSdzLCBzdGlsbCBjb25zdW1lcyBmYXIgbW9yZSBvaWwgcGVyIHBlcnNvbiB0aGFuIENoaW5hIGRvZXMuIEluIFNlcHRlbWJlciwgQW1lcmljYW5zIHVzZWQgMTguNiBtaWxsaW9uIGJhcnJlbHMgcGVyIGRheSBvZiBvaWwgYW5kIG90aGVyIGxpcXVpZCBmb3NzaWwgZnVlbHMsIHdoaWxlIENoaW5hIHVzZWQgMTAuOSBtaWxsaW9uLCBhY2NvcmRpbmcgdG8gdGhlIEVJQSdzIFNob3J0LVRlcm0gRW5lcmd5IE91dGxvb2suIFUuUy4gcHJvZHVjdGlvbiB3YXMgMTIuNSBtaWxsaW9uIGJhcnJlbHMgcGVyIGRheSwgd2hpbGUgdGhhdCBvZiBDaGluYSB3YXMgNC42IG1pbGxpb24uIENoaW5hJ3MgZWNvbm9teSwgdGhlIHdvcmxkJ3Mgc2Vjb25kLWxhcmdlc3QsIGlzIGNvb2xpbmcgYnV0IHN0aWxsIGlzIGZvcmVjYXN0IHRvIGdyb3cgYnkgbmVhcmx5IDggcGVyY2VudCB0aGlzIHllYXIsIHdlbGwgYWJvdmUgZm9yZWNhc3RzIGZvciB0aGUgVS5TLiBUaGUgQ2hpbmVzZSBhdXRvIG1hcmtldCwgdGhlIGJpZ2dlc3QgYnkgbnVtYmVyIG9mIHZlaGljbGVzIHNvbGQsIGFsc28gaXMgY29vbGluZyBidXQgc2FsZXMgc3RpbGwgcm9zZSBieSAxMSBwZXJjZW50IGluIEF1Z3VzdC4gQmVpamluZyBpcyBlbmNvdXJhZ2luZyBkZXZlbG9wbWVudCBvZiB3aW5kIGFuZCBzb2xhciBwb3dlciBhbmQgdXNlIG9mIGF1dG9zIHBvd2VyZWQgYnkgYmF0dGVyaWVzIG9yIG5hdHVyYWwgZ2FzLiBCdXQgZ2Fzb2xpbmUgaXMgZXhwZWN0ZWQgdG8gcmVtYWluIHRoZSBjb3VudHJ5J3MgbWFpbiB2ZWhpY2xlIGZ1ZWwgaW4gY29taW5nIGRlY2FkZXMuIFRoZSBnb3Zlcm5tZW50IGhhcyBsYXVuY2hlZCBpbml0aWF0aXZlcyB0byBpbXByb3ZlIENoaW5hJ3MgZW5lcmd5IGludGVuc2l0eSwgb3IgdGhlIGVuZXJneSBjb25zdW1lZCBmb3IgZWFjaCB1bml0IG9mIGVjb25vbWljIG91dHB1dC4gSXQgaGFzIHJlcG9ydGVkIHByb2dyZXNzIGJ1dCBzdGlsbCBpcyBmYXIgYmVoaW5kIGRldmVsb3BlZCBlY29ub21pZXMuIFVudGlsIHRoZSBsYXRlIDE5OTBzLCBDaGluYSBzdXBwbGllZCBpdHMgb2lsIG5lZWRzIGZyb20gZG9tZXN0aWMgc291cmNlcyBpbmNsdWRpbmcgdGhlIHZhc3QgRGFxaW5nIGZpZWxkIGluIHRoZSBub3J0aGVhc3QuIEJ1dCB0aGUgZWNvbm9taWMgYm9vbSBvdXRzdHJpcHBlZCBpdHMgcHJvZHVjdGlvbiBjYXBhY2l0eSB3aGlsZSBvdXRwdXQgZnJvbSBleGlzdGluZyBzb3VyY2VzIGlzIGZvcmVjYXN0IHRvIGRlY2xpbmUuIFRoYXQgaGFzIGZvcmNlZCBDaGluYSB0byByZWx5IG1vcmUgaGVhdmlseSBvbiBpbXBvcnRzLCBlc3BlY2lhbGx5IGZyb20gU2F1ZGkgQXJhYmlhIGFuZCBJcmFuLiBDb21tdW5pc3QgbGVhZGVycyBzZWUgdGhhdCBhcyBhIHN0cmF0ZWdpYyB3ZWFrbmVzcyBiZWNhdXNlIG9mIHBvc3NpYmxlIGluc3RhYmlsaXR5IGluIHRoZSBHdWxmIGFuZCBJcmFuJ3MgcG9saXRpY2FsIGlzb2xhdGlvbi4gRUlBIG5vdGVkIHRoYXQgQ2hpbmEncyBkb21lc3RpYyBvaWwgcHJvZHVjdGlvbiB3YXMgaGFtcGVyZWQgb3ZlciB0aGUgcGFzdCB0d28gbW9udGhzIGJ5IHN1bW1lciBmbG9vZGluZy4gU3RhdGUtb3duZWQgb2lsIGNvbXBhbmllcyBhbmQgdGhlaXIgZm9yZWlnbiBwYXJ0bmVycyBhcmUgc3BlbmRpbmcgaGVhdmlseSB0byBsb29rIGZvciBuZXcgb2lsIHNvdXJjZXMgaW4gQ2hpbmEgYW5kIHRvIGRldmVsb3AgYWx0ZXJuYXRpdmVzIHN1Y2ggYXMgbWV0aGFuZSBmcm9tIGNvYWwgYmVkcy4gQnV0IHRoZXkgaGF2ZSB5ZXQgdG8gZmluZCBuZXcgZGVwb3NpdHMgdGhhdCBtYXRjaCB0aGUgc2l6ZSBvZiBEYXFpbmcuIEFicm9hZCwgQ2hpbmVzZSBzdGF0ZS1vd25lZCBvaWwgY29tcGFuaWVzIGhhdmUgaW52ZXN0ZWQgYmlsbGlvbnMgb2YgZG9sbGFycyB0byBkZXZlbG9wIG9pbCBhbmQgZ2FzIHNvdXJjZXMgaW4gSXJhcSwgQ2VudHJhbCBBc2lhIGFuZCBBZnJpY2EuIFNvbWUgb2YgdGhhdCBpcyBtZWFudCBmb3IgZXhwb3J0IHRvIENoaW5hIGJ1dCBtdWNoIG9mIGl0IGlzIHNvbGQgaW4gb3RoZXIgbWFya2V0cy4gQXQgdGhlIHNhbWUgdGltZSwgVS5TLiBpbXBvcnQgZGVtYW5kIGhhcyB3ZWFrZW5lZCBhcyBoeWRyYXVsaWMgZnJhY3R1cmluZyBhbmQgb3RoZXIgdGVjaG5vbG9naWVzIG9wZW4gdXAgbmV3IGRvbWVzdGljIHNvdXJjZXMgb2Ygc3VwcGx5LiBBbWVyaWNhbiBkZW1hbmQgZm9yIG9pbCBhbmQgb3RoZXIgbGlxdWlkIGZ1ZWxzIHJvc2UgYnkgYWJvdXQgMTEwLDAwMCBiYXJyZWxzIHBlciBkYXksIG9yIGp1c3QgMC42IHBlcmNlbnQsIGluIHRoZSBmaXJzdCBuaW5lIG1vbnRocyBvZiB0aGlzIHllYXIsIGR1ZSBwYXJ0bHkgdG8gaW1wcm92ZWQgZW5naW5lIGVmZmljaWVuY3ksIHRoZSBFSUEgc2FpZC4gSXQgc2FpZCBjb25zdW1wdGlvbiBpcyBmb3JlY2FzdCB0byBmYWxsIGJ5IDAuNCBwZXJjZW50IG5leHQgeWVhci4gT3ZlcmFsbCwgdGhlIFVuaXRlZCBTdGF0ZXMgc3RpbGwgc2hvdWxkIGJlIHRoZSBiaWdnZXN0IG9pbCBjb25zdW1lciBuZXh0IHllYXIgYXQgYWJvdXQgMTguNyBtaWxsaW9uIGJhcnJlbHMgcGVyIGRheSwgZG93biBmcm9tIGl0cyBwZWFrIG9mIDIwLjggbWlsbGlvbiBpbiAyMDA1LCBhY2NvcmRpbmcgdG8gdGhlIEVJQS4gSXQgc2FpZCBDaGluYSdzIGNvbnN1bXB0aW9uIG5leHQgc2hvdWxkIGJlIGFib3V0IDExIG1pbGxpb24gYmFycmVscyBwZXIgZGF5Lg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGgvFiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDllYzY1ZmYyOTEwZGNlNmQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABEJPT00=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGl4rSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1mZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA2R64UeuFI</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1mZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA2Qo9cKPXD</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1+FHrhR64</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAACQiA==</field><field name="id" class="java.lang.String">rO0ABXQAEDk3MzMzYWEyYzM1MTAwZTU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mLohAAAQ==</field></document></documents><date>2015-05-07T12:10:14-0500</date></cacheEntry>
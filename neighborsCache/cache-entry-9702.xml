<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hUaGlzIGJhciBpcyBvbmUgb2YgdGhlIGJlc3Qgc2VsbGVycyBzYWlkIHRoZSBmb3JtZXIgVUJTIEFHIGJhbmtlciBzdGFuZGluZyBpbiB0aGUgdmF1bHQgb2YgaGlzIFN3aXNzIGdvbGQgYW5kIHNpbHZlciB0cmFkaW5nIGNvbXBhbnkgUHJvIEF1cnVtIGFzIGhlIHJlYWNoZWQgaW50byBhIHN0b25lZ3JleSBzYWZlIGhvbGRpbmcgbmVhdGx5IHN0YWNrZWQgY29pbnMgYW5kIHNlbGVjdGVkIGEgMTAwIGdyYW0gdGFibGV0IFlvdSBjYW4gYnJlYWsgaXQgaW50byBpbmRpdmlkdWFsIHBpZWNlcyBhbmQgdXNlIGl0IGFzIG1vbmV5IGluIGNhc2UgdGhlIEV1cm9wZWFuIFVuaW9uIGdvZXMgdW5kZXIgQXMgdGhlIGV1cm9hcmVhIHdlbnQgdGhyb3VnaCBhIHJlY29yZGxvbmcgcmVjZXNzaW9uIGFuZCBvbmx5IGVkZ2VkIGJhY2sgdG8gZ3Jvd3RoIGxhc3QgcXVhcnRlciBkZW1hbmQgZm9yIHN0b3JpbmcgZ29sZCBiYXJzIGFuZCBjb2lucyBpbiBTd2lzcyB2YXVsdHMgaGFzIGJlZW4gcmlzaW5nIEV2ZW4gYXMgdGhlIHByaWNlIG9mIHRoZSBtZXRhbCBoYXMgZGVjbGluZWQgbW9yZSB0aGFuIDIwIHBlcmNlbnQgdGhpcyB5ZWFyIHNvbWUgaW52ZXN0b3JzIHNlZSBnb2xkIGFzIGxlc3Mgcmlza3kgdGhhbiBvdGhlciBhc3NldHMgc3VjaCBhcyBib25kcyB3aGVyZSBkZWJ0b3JzIG1heSBub3QgYmUgYWJsZSB0byBwYXkgb3IgZXF1aXR5IGluIGEgY29tcGFueSB0aGF0IG1heSBnbyBvdXQgb2YgYnVzaW5lc3MgSGlnaG5ldHdvcnRoIGluZGl2aWR1YWxzIGFyZSBkZXBlbmRlbnQgb24gdGhlIGhlYWx0aCBvZiB0aGUgZmluYW5jaWFsIHN5c3RlbSBzYWlkIE9sZSBIYW5zZW4gaGVhZCBvZiBjb21tb2RpdHkgc3RyYXRlZ3kgYXMgU2F4byBCYW5rIEFTIGluIENvcGVuaGFnZW4gSWYgeW91IHRha2Ugc29tZSBvZiB5b3VyIGludmVzdG1lbnRzIG91dCBhbmQgcHV0IGl0IGluIHRoZSB2YXVsdCB0aGVuIHlvdSBjYW4gcmVkdWNlIHlvdXIgZXhwb3N1cmUgTW92ZW1lbnQgRGV0ZWN0b3JzIEF0IFBybyBBdXJ1bSBtb3ZlbWVudCBhbmQgdmlicmF0aW9uIGRldGVjdG9ycyBhZGQgcHJvdGVjdGlvbiB0byB0aGUgZm9ybWVyIFp1ZXJjaGVyIEthbnRvbmFsYmFuayBicmFuY2ggaW4gS2lsY2hiZXJnIGEgbGFrZXNpZGUgc3VidXJiIG9mIFp1cmljaCBDYW1lcmFzIGhhbmcgZnJvbSB0aGUgY2VpbGluZyB0byBmaWxtIGVtcGxveWVlcyBhcyB0aGV5IGZ1bGZpbGwgb3JkZXJzIGZyb20gY3VzdG9tZXJzIHdobyBjYW4gc3RvcmUgdmFsdWFibGVzIGluIG9uZSBvZiB0aGUgNzAwIHNhZmUgZGVwb3NpdCBib3hlcyBvciBidXkgdXAgdG8gMTAwMDAwIGZyYW5jcyAxMDcwMDAgb2YgZ29sZCB3aXRoIGNhc2ggb3ZlciB0aGUgY291bnRlciB3aXRob3V0IHByb29mIG9mIGZ1bmRzIHN1Y2ggYXMgYSBiYW5rIHN0YXRlbWVudCBBYm91dCBoYWxmIG9mIEJ1Y2h3YWxkZXJzIGN1c3RvbWVycyBhcmUgU3dpc3Mgd2l0aCBFdXJvcGVhbnMgbWFraW5nIHVwIG1vc3Qgb2YgdGhlIHJlbWFpbmluZyBjbGllbnRzIFBybyBBdXJ1bSB3aGljaCBhbHNvIGhhcyB1bml0cyBpbiBBdXN0cmlhIGFuZCBHZXJtYW55IHRyYWRlcyBvdmVyIGEgYmlsbGlvbiBmcmFuY3Mgb2YgZ29sZCBwZXIgeWVhciBCdWNod2FsZGVyIHNhaWQgVGhlIEtpbGNoYmVyZyB2YXVsdCBob2xkcyBlbm91Z2ggZ29sZCBhbmQgc2lsdmVyIGZvciBvdmVydGhlY291bnRlciBwdXJjaGFzaW5nIGFuZCBvbmxpbmUgc2hpcG1lbnRzIFRoZSBzcG90IHByaWNlIGZvciBnb2xkIGhhcyByaXNlbiA2NSBwZXJjZW50IHRvIDEzMjcgYW4gb3VuY2UgaW4gdGhlIGxhc3QgZml2ZSB5ZWFycyBvdXRwZXJmb3JtaW5nIHRoZSBnbG9iYWwgTVNDSSBXb3JsZCBJbmRleHMgMTQgcGVyY2VudCBnYWluIFN0aWxsIHRoZSBiZXRzIG9uIGdvbGQgYmVpbmcgYSBzYWZlIGhhdmVuIG1heSBiYWNrZmlyZSBmb2xsb3dpbmcgdGhpcyB5ZWFycyBwcmljZSBkZWNsaW5lIAoKQUJOIEFtcm8gR3JvdXAgTlYgYW5hbHlzdHMgcHJlZGljdCB0aGUgcHJpY2Ugd2lsbCBhdmVyYWdlIDEwMDAgbmV4dCB5ZWFyIGFuZCA4NDAgaW4gMjAxNSBiZWNhdXNlIGEgc3Ryb25nZXIgVVMgZWNvbm9teSB3aWxsIGxpbWl0IGdvbGRzIGFwcGVhbCBOZXQgc2hvcnQgcG9zaXRpb25zIG9yIGJldHMgb24gZmFsbGluZyBmdXR1cmVzIHByaWNlcyBpbiBOZXcgWW9yayBnYWluZWQgbmluZWZvbGQgc2luY2UgTm92ZW1iZXIgVVMgQ29tbW9kaXR5IEZ1dHVyZXMgVHJhZGluZyBDb21taXNzaW9uIGRhdGEgc2hvdyBMZWhtYW4gQnJvdGhlcnMgRXZlbiBzbyBzb21lIGludmVzdG9ycyBzZWUgZ29sZCBhcyB0aGUgdWx0aW1hdGUgbG9uZ3Rlcm0gd2VhbHRoIHByb3RlY3Rpb24gYXNzZXQgU2luY2UgdGhlIExlaG1hbiBCcm90aGVycyBiYW5rcnVwdGN5IGFuZCB0aGUgYmFpbG91dCBvZiBVQlMgcGVvcGxlIGFyZSBtb3JlIGNhcmVmdWwgYWJvdXQgd2hlcmUgdGhleSBwdXQgdGhlaXIgbW9uZXkgQnVjaHdhbGRlciBzYWlkIEphY3F1ZXMgUmFsbCBhIEZyYW5rZnVydGJhc2VkIGJyb2tlciBhdCBFdXJvIFBhY2lmaWMgQ2FwaXRhbCBJbmMgd2hvIHN0YXJ0ZWQgaW52ZXN0aW5nIGluIGdvbGQgYW5kIHNpbHZlciBpbiAyMDA3IGJlY2F1c2Ugb2YgY29uY2VybnMgYWJvdXQgZ292ZXJubWVudCBkZWJ0IGFuZCBpbmZsYXRpb24gc2FpZCBoZXMgbm90IHdvcnJpZWQgYWJvdXQgZ29sZHMgc2x1bXAgdGhpcyB5ZWFyIGFzIGhlIHByZWRpY3RzIGluY3JlYXNpbmcgZGVtYW5kIGZvciBtZXRhbCBhc3NldHMgSW0gaG9sZGluZyA4MCBwZXJjZW50IG9mIG15IHBvcnRmb2xpbyBpbiBwcmVjaW91cyBtZXRhbHMgaGUgc2FpZCBGb3J0IEtub3ggR29sZHMgYXNzdW1lZCBzYWZlIGhhdmVuIHF1YWxpdGllcyBhcmUgbm90IG5ldyBhcyBnb3Zlcm5tZW50cyBvbmNlIHVzZWQgaG9sZGluZ3Mgb2YgdGhlIG1ldGFsIHRvIGJhY2sgY3VycmVuY2llcyBJbiAxOTMzIHRoZSBVUyBmb3JjZWQgcHJpdmF0ZSBvd25lcnMgdG8gc2VsbCBnb2xkIHRvIHRoZSBGZWRlcmFsIFJlc2VydmUgd2l0aCB0aGUgdHJlYXN1cnkgYnVpbGRpbmcgYSBkZXBvc2l0b3J5IGF0IEZvcnQgS25veCBVUyBQcmVzaWRlbnQgUmljaGFyZCBOaXhvbiBzZXZlcmVkIHRoZSBkb2xsYXJzIHBlZyB0byBnb2xkIGluIDE5NzEgU3dpdHplcmxhbmQgd2FzIG9uZSBvZiB0aGUgbGFzdCBjb3VudHJpZXMgdG8gbGluayBpdHMgY3VycmVuY3kgdG8gZ29sZCB1bnRpbCBhIHB1YmxpYyB2b3RlIGluIDE5OTkgZW5kZWQgaXQgVG9kYXkgZGVjb21taXNzaW9uZWQgU3dpc3MgbWlsaXRhcnkgYnVua2VycyBhcmUgYmVpbmcgY29udmVydGVkIGludG8gdmF1bHRzIHRvIG1lZXQgcmlzaW5nIHByaXZhdGUgZGVtYW5kIHNhaWQgQnVjaHdhbGRlciBBIGZvcm1lciBTd2lzcyBBaXIgRm9yY2UgY29tbWFuZCBhbmQgY29udHJvbCBjZW50ZXIgaW4gVXJpIGlzIG5vdyBhIHZhdWx0IG93bmVkIGJ5IGRhdGEgc3RvcmFnZSBjb21wYW55IERlbHRhbGlzIEF0IFN3aXNzZGF0YXNhZmUgYmFzZWQgaW4gQW1zdGVnIGludmVzdG9ycyBjYW4gc3RvcmUgdmFsdWFibGVzIGFuZCBhcnQgaW4gc2VjdXJlIGxvY2F0aW9ucyBpbiB0aGUgU3dpc3MgQWxwcyBTd2l0emVybGFuZHMgZ29sZCBidXNpbmVzcyBpcyBhbHNvIHNwdXJyZWQgYnkgaXRzIGhpc3RvcnkgYXMgYSBuYXRpb24gdGhhdCBoYXNudCBmb3VnaHQgYSBmb3JlaWduIHdhciBzaW5jZSBpdHMgbmV1dHJhbGl0eSB3YXMgZXN0YWJsaXNoZWQgYnkgdGhlIFRyZWF0eSBvZiBQYXJpcyBpbiAxODE1IFN3aXR6ZXJsYW5kcyBncmlwIG9uIGdvbGQgdHJhZGluZyBsZWQgYnkgVUJTIGFuZCBDcmVkaXQgU3Vpc3NlIEdyb3VwIEFHIGdyZXcgaW4gdGhlIGxhdGUgMTk0MHMgd2hlbiBMb25kb25zIGdvbGQgbWFya2V0IHJlbWFpbmVkIGNsb3NlZCBmb3Igc29tZSB0aW1lIGFmdGVyIFdvcmxkIFdhciBJSSBObyBXYXIgU3dpdHplcmxhbmQgaXMgYSBuZXV0cmFsIGNvdW50cnkgYW5kIGFsd2F5cyBoYXMgYmVlbiBzYWlkIEFsbGFuIEZpbm4gZ2xvYmFsIGNvbW1vZGl0aWVzIGRpcmVjdG9yIGF0IGxvZ2lzdGljcyBjb21wYW55IE1hbGNhIEFtaXQgYWRkaW5nIHRoYXQgZW5xdWlyaWVzIGFib3V0IHN0b3JpbmcgZ29sZCBhdCBpdHMgdmF1bHRzIGluIFNpbmdhcG9yZSBhbmQgU3dpdHplcmxhbmQgaGF2ZSBwaWNrZWQgdXAgaW4gdGhlIGxhc3QgbmluZSBtb250aHMgSXRzIGEgc2FmZSBoYXZlbiB3aGljaCBpcyBwZXJjZWl2ZWQgdG8gYmUgZXhlbXB0IGZyb20gcG9saXRpY2FsIGludGVyZmVyZW5jZSBTdGlsbCB0aGF0IHN0YXR1cyBpcyB1bmRlciBwcmVzc3VyZSBhcyB0aGUgVVMgYW5kIGV1cm8gYXJlYSBjb3VudHJpZXMgcHJlc3MgZm9yIGF1dG9tYXRpYyBleGNoYW5nZSBvZiBpbmZvcm1hdGlvbiBicmVha2luZyBvcGVuIGJhbmsgc2VjcmVjeSBCdWNod2FsZGVyIHdpbGwgYXNrIFVTIGNsaWVudHMgdG8gbGVhdmUgZnJvbSB0aGUgYmVnaW5uaW5nIG9mIG5leHQgeWVhciBlY2hvaW5nIGEgc2ltaWxhciBkZWNpc2lvbiBhbm5vdW5jZWQgYnkgdHJhbnNwb3J0IGNvbXBhbnkgVmlhIE1hdCBpbiBGZWJydWFyeSBHb2xkIHRyYWRlcnMgaGF2ZSB0aGUgc2FtZSBrbm93eW91cmN1c3RvbWVyIHJlcXVpcmVtZW50cyBhcyBiYW5rcyBhbmQgdGhlIGJ1cmRlbiBvZiBjb21wbGlhbmNlIG1lYW5zIGl0cyBub3Qgd29ydGgga2VlcGluZyBVUyBjdXN0b21lcnMgUHJvIEF1cnVtIGhhcyBzZXQgdXAgYSB1bml0IGluIEhvbmcgS29uZyB0byBnaXZlIGludmVzdG9ycyBnZW9ncmFwaGljIGFuZCBwb2xpdGljYWwgZGl2ZXJzaXR5IFNpbmdhcG9yZSBpcyBhbHNvIGV4cGFuZGluZyBpdHMgb3duIGdvbGQgbWFya2V0IHdpdGggYmFua3MgZnJvbSBVQlMgdG8gSlBNb3JnYW4gb3BlbmluZyB2YXVsdHMgaW4gdGhlIGNvdW50cnkgQXVzdHJhbGlhICBOZXcgWmVhbGFuZCBCYW5raW5nIEdyb3VwIEx0ZCBzdGFydGVkIGEgNTAgbWV0cmljdG9uIGdvbGQgYnVsbGlvbiB2YXVsdCBpbiBTaW5nYXBvcmUgbGFzdCBtb250aHQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0wMy0yN1QwMDowMDowMFogVE8gMjAxMy0wMy0yN1Q1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDM2MzE=</field><field name="title" class="java.lang.String">rO0ABXQAMkdvbGQgRVRGIFNhbGVzIE1pbWljIFNvcm9zIGFzIEdvbGRtYW4gTW9yZSBCZWFyaXNo</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT2BBKyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDRiYTRkMjZlOWU2YzI3OGU=</field><field name="symbol" class="java.lang.String">rO0ABXQADEtPVEFLQkFOSy5OUw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT2GKwiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECD6gAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECEAAAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECDoMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECDyZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECDwAAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAgyDA==</field><field name="id" class="java.lang.String">rO0ABXQAEDU0OWUwY2U1NmU5OGJiNWE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFBhAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDk0Mjc=</field><field name="title" class="java.lang.String">rO0ABXQAOkdvbGRtYW4gU2FjaHM6IEdvbGQgQ2FuIFN0aWxsIFN1cmdlIHRvICQxLDk0MCBpbiAxMiBNb250aHM=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATdZKrSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGZjYmU0MDY4ZDQxYTQ2MGM=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lDQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATdeURCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxhR64UeuF</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxhR64UeuF</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxVHrhR64U</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxVHrhR64U</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAu4UeuFHrh</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABSCA==</field><field name="id" class="java.lang.String">rO0ABXQAEDAwZTFlMjUyMmFjMGYyNmU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mG5tAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUzMzI=</field><field name="title" class="java.lang.String">rO0ABXQAM0dvbGQncyBTbHVtcCBSYWlzZXMgUXVlc3Rpb25zIEFib3V0IE1ldGFsJ3MgT3V0bG9vaw==</field><field name="content" class="java.lang.String">rO0ABXQTyVRoZSBwcmljZSBvZiBnb2xkLCB3aGljaCBoYXMgY2xpbWJlZCBmb3IgeWVhcnMgbGlrZSBhIGJsb29kIHByZXNzdXJlIHJlYWRpbmcgZm9yIGFueGlvdXMgaW52ZXN0b3JzLCBwbHVuZ2VkIFdlZG5lc2RheSB0byBpdHMgbG93ZXN0IGxldmVsIGluIHRocmVlIG1vbnRocy4gR29sZCBmZWxsIGFsbW9zdCAkNTggdG8gJDEsNjE0IHBlciBvdW5jZS4gSXQgaGFzIGRlY2xpbmVkIDE1IHBlcmNlbnQgc2luY2UgU2VwdGVtYmVyLCB3aGVuIGl0IGhpdCBhIHBlYWsgb2YgJDEsOTA3LiBJdCBoYWQgbW9yZSB0aGFuIGRvdWJsZWQgZnJvbSB0aGUgZmluYW5jaWFsIGNyaXNpcyB0aHJlZSB5ZWFycyBlYXJsaWVyLiBUaGUgZGVjbGluZSBXZWRuZXNkYXkgY2FtZSBvbiBhbiB1Z2x5IGRheSBpbiB0aGUgc3RvY2sgbWFya2V0LiBUaGUgRG93IEpvbmVzIGluZHVzdHJpYWwgYXZlcmFnZSBsb3N0IDEyNSBwb2ludHMg4oCUIGEgZGF5IHRoYXQgbGFzdCB5ZWFyIHByb2JhYmx5IHdvdWxkIGhhdmUgY2F1c2VkIGZlYXJmdWwgaW52ZXN0b3JzIHRvIGJ1eSBnb2xkIGFzIGEgcHJvdGVjdGl2ZSBpbnZlc3RtZW50LiAiSXQncyBkaWZmaWN1bHQgdG8gZm9yZWNhc3QsIGJ1dCBJIHRoaW5rIHRoZSBnb2xkIGJ1bGwgbWFya2V0IGlzIG92ZXIsIiBzYWlkIENldGluIENpbmVyLCBhIHByb2Zlc3NvciBvZiBmaW5hbmNlIGF0IHRoZSBVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLVdpbG1pbmd0b24uIEhlIGxpa2VuZWQgdGhlIHN1cmdlIGluIGdvbGQgdG8gZG90LWNvbSBzdG9ja3MgYmVmb3JlIHRoZXkgY29sbGFwc2VkLiBTb21lIGludmVzdG9ycyBidXkgZ29sZCBhcyBhIGhlZGdlIGFnYWluc3QgaW5mbGF0aW9uLCBhbmQgbWludXRlcyBmcm9tIGEgRmVkZXJhbCBSZXNlcnZlIG1lZXRpbmcgdGhhdCBjYW1lIG91dCBUdWVzZGF5IGFmdGVybm9vbiBzdWdnZXN0ZWQgdGhhdCB0aGUgY2VudHJhbCBiYW5rIGJlbGlldmVzIGluZmxhdGlvbiBpcyB1bmRlciBjb250cm9sLiBHb2xkJ3MgYXR0cmFjdGlvbiBhcyBhbiBhc3NldCBvZiByZWZ1Z2UgZHVyaW5nIGNyaXNlcyBhbHNvIHNlZW1zIHRvIGhhdmUgZGltaW5pc2hlZC4gVGhlIGVjb25vbXkgaGFzIHBpY2tlZCB1cCwgYW5kIHdvcnN0LWNhc2Ugc2NlbmFyaW9zIGluIHRoZSBVbml0ZWQgU3RhdGVzIGFuZCBFdXJvcGUgaGF2ZSBmYWRlZC4gIkZlYXIgaGFzIGJlZW4gZ29sZCdzIGJlc3QgZnJpZW5kLCBhbmQgc28gdG8gdGhlIGV4dGVudCB0aGF0IGZlYXIgaXMgZGlzc2lwYXRpbmcsIGdvbGQgc2hvdWxkIGZhbGwsIiBzYWlkIEppbSBQYXVsc2VuLCBjaGllZiBpbnZlc3RtZW50IHN0cmF0ZWdpc3QgYXQgV2VsbHMgQ2FwaXRhbCBNYW5hZ2VtZW50LiAiV2UgbWlnaHQgbG9vayBiYWNrIGF0IHRoZXNlIEZlZCBtaW51dGVzIGFzIHRoZSBsaW5lIGluIHRoZSBzYW5kLiIgR29sZCBoYXMgYmVlbiBoaXQgaW4gcmVjZW50IHdlZWtzIGJ5IGEgc3RyaWtlIGJ5IGdvbGQgc2VsbGVycyBpbiBJbmRpYSwgdGhlIHdvcmxkJ3MgbGFyZ2VzdCBidXllciBvZiBwaHlzaWNhbCBnb2xkLiBBbm90aGVyIGJlYXJpc2ggc2lnbiB3YXMgYSBzdXJnZSBXZWRuZXNkYXkgaW4gdGhlIGRvbGxhciwgd2hpY2ggdGVuZHMgdG8gcmlzZSB3aGVuIGdvbGQgZmFsbHMuIEdvbGQgZmV0Y2hlZCBvbmx5ICQzMDAgdG8gJDQwMCBhbiBvdW5jZSBkdXJpbmcgdGhlIDE5OTBzIGJ1dCBjbGltYmVkIHN0ZWFkaWx5IGxhc3QgZGVjYWRlLiBJdCB0b29rIG9mZiBpbiBsYXRlIDIwMDgsIHdoZW4gcHJpY2VzIGZvciBzdG9ja3MgYW5kIGNvcnBvcmF0ZSBib25kcyBwbHVuZ2VkLCB3aXBpbmcgb3V0IHllYXJzIG9mIHNhdmluZ3MgYW5kIGV2ZW4gbW9uZXkgbWFya2V0IGZ1bmRzIGxvb2tlZCBzdXNwZWN0LiBJbnZlc3RvcnMgYmlkIHVwIHByaWNlcyBmb3IgdGhlIHNhZmVzdCBvZiBhc3NldHMsIGxpa2UgVS5TLiBUcmVhc3VyeSBib25kcy4gT3RoZXJzIHR1cm5lZCB0byBnb2xkLiAiRHVyaW5nIG91ciBib3V0IHdpdGggQXJtYWdlZGRvbiwgcGVvcGxlIHJhbiB0byBpdCBmb3Igc2FmZXR5LCIgc2FpZCBBYnJhaGFtIEJhaWxpbiwgYSBjb21tb2RpdHkgYW5hbHlzdCBhdCBNb3JuaW5nc3Rhci4gIkl0IG1pZ2h0IHNvdW5kIHNpbGx5IG5vdywgYnV0IHRoYXQncyB3aGVyZSBpdCBzdGFydGVkLiIgRGVtYW5kIGZvciBnb2xkIHN1cmdlZCBhcyB0aGUgRmVkZXJhbCBSZXNlcnZlIGJvdWdodCBib25kcyB0byBwdXNoIGRvd24gYm9ycm93aW5nIGNvc3RzIGFuZCBzdGltdWxhdGUgdGhlIGVjb25vbXksIGEgbW92ZSBrbm93biBhcyBxdWFudGl0YXRpdmUgZWFzaW5nLiBUaGUgRmVkJ3MgZWZmb3J0cyB0byBwdW1wIG1vbmV5IGludG8gdGhlIGJhbmtpbmcgc3lzdGVtIGFuZCBhdmVydCBhIGRlZXAgcmVjZXNzaW9uIGxlZCB0byBmZWFycyBvZiBydW5hd2F5IGluZmxhdGlvbiwgYSBjb25jZXJuIHNoYXJlZCBieSBib3RoIHRoZSB0ZWEgcGFydHkgYW5kIGJpZy1zaG90IGludmVzdG9ycy4gQnV5aW5nIGdvbGQgc29vbiBiZWNhbWUgYSBwb2xpdGljYWwgc3RhdGVtZW50LiBGb3IgdGhvc2Ugd2hvIGRpZG4ndCB0cnVzdCBmaW5hbmNpYWwgaW5zdGl0dXRpb25zIG9yIHdlcmUgd2FyeSBvZiB0aGUgZ292ZXJubWVudCwgaXQgd2FzIHRoZSBpbnZlc3RtZW50IG9mIGNob2ljZS4gVGhlIHRlbGV2aXNpb24gcGVyc29uYWxpdHkgR2xlbm4gQmVjayBhZHZpc2VkIHZpZXdlcnMgdG8gc3RvY2sgdXAgb24gZ29sZCBiYXJzLiAiR29sZCBiZWNhbWUgYSBzeW1ib2wgb2YgeW91ciBwb2xpdGljYWwgbGVhbmluZ3MsIiBCYWlsaW4gc2FpZC4gIkl0IGJlY2FtZSBhIHdheSB0byBzcGVjdWxhdGUgb24gdGhlIHNvbHZlbmN5IG9mIHRoZSBlY29ub215LiIgT3IgcGVyaGFwcyB0byBzcGVjdWxhdGUgdGhhdCB0aGUgcHJpY2Ugd291bGQgY29udGludWUgdG8gcmlzZSwgd2hhdGV2ZXIgdGhlIHJlYXNvbi4gU29tZSBhbmFseXN0cywgbGlrZSBDaW5lciBhbmQgV2VsbHMgRmFyZ28ncyBQYXVsc2VuLCBzYWlkIHRoYXQgYXMgdGhlIHByaWNlIGNsaW1iZWQgZXZlciBoaWdoZXIsIGV2ZXJ5ZGF5IGludmVzdG9ycyBtYXkgaGF2ZSBiZWVuIHRyeWluZyB0byBjYXRjaCB0aGUgd2F2ZS4gR29sZCB3YXMgbmFtZWQgdGhlICJiZXN0IGludmVzdG1lbnQiIGluIENOQkMncyBxdWFydGVybHkgc3VydmV5IG9mIGludmVzdG9ycyByZWxlYXNlZCBsYXN0IG1vbnRoLCB0b3BwaW5nIHJlYWwgZXN0YXRlIGFuZCBzdG9ja3MgYnkgYSB3aWRlIG1hcmdpbi4gTmVhcmx5IGhhbGYgb2YgdGhvc2Ugc3VydmV5ZWQgY29uc2lkZXJlZCBpdCBhIGJhZCB0aW1lIHRvIGJ1eSBzdG9ja3MuIE9uZSBwb3B1bGFyIHZlaGljbGUgZm9yIGJ1eWluZyBnb2xkLCB0aGUgU1BEUiBHb2xkIFRydXN0LCBhIGZ1bmQgdGhhdCB0cmFkZXMgb24gdGhlIG9wZW4gbWFya2V0IGxpa2UgYSBzdG9jaywgaGFzIGF0dHJhY3RlZCBodW5kcmVkcyBvZiBtaWxsaW9ucyBvZiBkb2xsYXJzIG9mIGludmVzdG9yIG1vbmV5IGVhY2ggbW9udGggc2luY2UgaXRzIGxhdW5jaCBpbiAyMDA0LiBJdCBub3cgaG9sZHMgJDY3LjMgYmlsbGlvbiB3b3J0aCBvZiBnb2xkLiBUaGF0IG1ha2VzIGl0IHRoZSBsYXJnZXN0IEVURiBzYXZlIGZvciB0aGUgU1BEUiBTJlAgNTAwLCB3aGljaCB0cmFja3Mgc3RvY2tzLCBhY2NvcmRpbmcgdG8gTW9ybmluZ3N0YXIncyBCYWlsaW4uIENpbmVyIG5vdGVkIHRoYXQgdGhlIHByaWNlIG9mIGdvbGQgZHJvcHBlZCBXZWRuZXNkYXkgZGVzcGl0ZSBuZXdzIHRoYXQgU3BhaW4gaGFkIHRvIG9mZmVyIHVuZXhwZWN0ZWRseSBoaWdoIGludGVyZXN0IHJhdGVzIHRvIGF0dHJhY3QgaW52ZXN0b3JzIHRvIGJ1eSBuZXcgZ292ZXJubWVudCBib25kcy4gVGhhdCBzdWdnZXN0ZWQgdGhhdCBhIHNvbHV0aW9uIHRvIHRoZSBFdXJvcGVhbiBkZWJ0IHRyb3VibGVzIGlzIGZhciBmcm9tIG92ZXIg4oCUIG5vcm1hbGx5IGEgdHJpZ2dlciBmb3IgYnV5aW5nIGdvbGQsIG5vdCBzZWxsaW5nIGl0LiAiSXQncyBwcmV0dHkgb2J2aW91cyB0aGF0IGdvbGQncyBjaGFyYWN0ZXIgaGFzIGNvbXBsZXRlbHkgY2hhbmdlZCwiIENpbmVyIHNhaWQuICJJZiBpdCB3YXMgcmVhbCBzYWZlLWhhdmVuIGFzc2V0LCB5b3Ugd291bGQgaGF2ZSBleHBlY3RlZCBpbnZlc3RvcnMgdG8gZmxvY2sgdG8gZ29sZC4iIEJ1bGxzIHBvaW50ZWQgb3V0IHRoYXQgZ29sZCdzIHBvcHVsYXJpdHkgcmVmbGVjdHMgYSB3aWRlc3ByZWFkIHNrZXB0aWNpc20gb2YgdGhlIGZpbmFuY2lhbCBzeXN0ZW0gYW5kIG9mIG5hdGlvbmFsIGN1cnJlbmNpZXMg4oCUIGFuZCB0aGF0IGludmVzdG9ycyBhcmUgZm9vbHMgdG8gZmVlbCBjb25maWRlbnQgYWJvdXQgdGhlbS4gSm9obiBNYW5sZXksIGNoaWVmIGVxdWl0eSBzdHJhdGVnaXN0IGZvciBXZWxscyBGYXJnbyBBZHZhbnRhZ2UgRnVuZHMsIHNhaWQgdGhhdCBnb2xkJ3Mgcm9sZSBhcyBhIHNvcnQgb2YgZm91cnRoIGN1cnJlbmN5IHRvIHRoZSB0aHJlZSBiaWcgb25lcyDigJQgdGhlIGRvbGxhciwgZXVybyBhbmQgeWVuIOKAlCBpcyB1bmxpa2VseSB0byBkaW1pbmlzaCBldmVuIHdpdGggdGhvc2UgY3VycmVuY2llcycgdHJvdWJsZXMuIEhlIHBvaW50ZWQgdG8gdGhlIGxhcmdlIFUuUy4gZGVidCwgSmFwYW4ncyBhZ2luZyBwb3B1bGF0aW9uIGFuZCBkaXNzZW50IGFtb25nIEV1cm9wZWFuIGNvdW50cmllcyBhYm91dCBob3cgdG8gc29sdmUgdGhlIGRlYnQgcHJvYmxlbSB0aGVyZS4gTmljaG9sYXMgQ29sYXMsIGNoaWVmIG1hcmtldCBzdHJhdGVnaXN0IGF0IENvbnZlcmdFeCBHcm91cCwgc2FpZCBoZSB0aGlua3MgZ29sZCdzIHBvcHVsYXJpdHkgcmVmbGVjdHMgdGhlIGFueGlldHkgb2Ygb3VyIGFnZS4gVGhlIHByaWNlIG1heSBjaGFuZ2UsIGhlIHNhaWQsIGJ1dCBhbiBvdW5jZSBvZiBnb2xkIGlzIGFsd2F5cyBib3VuZCB0byBiZSB3b3J0aCBzb21ldGhpbmcuIE9sZCBzdG9jayBjZXJ0aWZpY2F0ZXMsIGhlIHNhaWQsIG1heSB3aW5kIHVwIHdvcnRoIG5vIG1vcmUgdGhhbiB0b2lsZXQgcGFwZXIuICJUaGUgZ29sZCBydXNoIGlzbid0IG92ZXIsIiBoZSBzYWlkLiAiSXQncyBqdXN0IG9uIHBhdXNlLiI=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATZ7uUCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDFhMDNmYTY2OWM5OTQzMzM=</field><field name="symbol" class="java.lang.String">rO0ABXQABEdPTEQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATaA35yAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUiFHrhR64</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUqj1wo9cK</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUSPXCj1wp</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUXCj1wo9c</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBT1HrhR64U</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAA7riA==</field><field name="id" class="java.lang.String">rO0ABXQAEDA5Y2UzZTY0OTZiOTNkZGU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGBbAAAQ==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDkwMjE=</field><field name="title" class="java.lang.String">rO0ABXQAKUV1cm9wZSBDcmlzaXMgU3B1cnMgU2hpZnQgb2YgR29sZCB0byBBc2lh</field><field name="content" class="java.lang.String">rO0ABXQKEyJXZSd2ZSBzZWVuIGEgaHVnZSBwaWNrLXVwIGluIGRlbWFuZCBmb3IgcGh5c2ljYWwgKGdvbGQpIGhvbGRpbmdzLCIgUmF5bW9uZCBLZXksIGdsb2JhbCBoZWFkIG9mIG1ldGFscyB0cmFkaW5nLCB0b2xkIFJldXRlcnMuICJQZW9wbGUgYXJlIGdlb2dyYXBoaWNhbGx5IG1vdmluZyBvdXQgb2YgRXVyb3BlIGFuZCBpbnRvIEFzaWEgYW5kIHByaXZhdGUgd2VhbHRoIGlzIGJlY29taW5nIG1vcmUgc29waGlzdGljYXRlZCBhcm91bmQgaG93IHRvIG1hbmFnZSBjcmVkaXQgZXhwb3N1cmUgdG8gYmFua3MsIHdhbnRpbmcgdG8gaG9sZCBhbGxvY2F0ZWQgcGh5c2ljYWwgbWV0YWwgaW4gdGhlIHJpZ2h0IHJlZ2lvbnMsIiBoZSBzYWlkIGluIGFuIGludGVydmlldy4KCkVkaXRvcidzIE5vdGU6IEdldCBEYXZpZCBTa2FyaWNhJ3MgR29sZCBTdG9jayBBZHZpc2VyIOKAlCBDbGljayBIZXJlIE5vdyEgV2l0aCBhbGxvY2F0ZWQgZ29sZCBob2xkaW5ncywgY2xpZW50cyBnZXQgc2VyaWFsIG51bWJlcnMgZm9yIHNwZWNpZmljIGJhcnMgb2YgZ29sZCB0aGV5IG93bi4gV2hlbiBpbnZlc3RvcnMgaGF2ZSB1bmFsbG9jYXRlZCBob2xkaW5ncywgdGhleSBvd24gYSBjZXJ0YWluIGFtb3VudCBvZiBhIGJhbmsncyBidWxsaW9uLCBidXQgbWFueSBhcmUgd29ycmllZCBhYm91dCBwb3RlbnRpYWwgYmFuayBmYWlsdXJlcyBpbiBFdXJvcGUuIEJlc2lkZXMgdGhlIG1vdmVtZW50IG9mIGdvbGQgZnJvbSBFdXJvcGUsIGRlbWFuZCBpcyBhbHNvIGNvbWluZyBmcm9tIHdlYWx0aHkgQ2hpbmVzZSBwZW9wbGUgd2hvIGFyZSBtb3Zpbmcgd2VhbHRoIG91dCBvZiB0aGUgY291bnRyeSwgTG9uZG9uLWJhc2VkIEtleSBzYWlkLiBDb25jZXJuIGhhcyBtb3VudGVkIGFyb3VuZCBzaGlmdHMgaW4gQ2hpbmEncyBwb2xpdGljYWwgbGVhZGVyc2hpcCB0aGlzIHllYXIgYW5kIHRoZSBleHRlbnQgb2Ygc2xvd2luZyBncm93dGgsIHdoaWNoIGhhcyBiZWVuIHN0ZWVwZXIgdGhhbiBtb3N0IGhhZCBleHBlY3RlZC4gIlRoZXJlJ3MgYSBsb3Qgb2YgbW9uZXkgY29taW5nIG91dCBvZiBDaGluYSwgcGFydGljdWxhcmx5IGludG8gcGxhY2VzIGxpa2UgU2luZ2Fwb3JlLCBzbyBob2xkaW5nIHBoeXNpY2FsIGdvbGQgaW4gU2luZ2Fwb3JlIGhhcyBiZWVuIGEgdHJlbmQgb3ZlciB0aGUgcGFzdCB0aHJlZSBtb250aHMsIiBoZSBzYWlkLiAiRWl0aGVyIHRoZXkncmUgdGFraW5nIGNhcGl0YWwgb3V0IG9mIENoaW5hIGFuZCBsb29raW5nIHRvIHB1dCBpdCBpbiBTaW5nYXBvcmUgb3IgdGhleSdyZSBjb25jZXJuZWQgYWJvdXQgdGhlIHNvdmVyZWlnbiBpc3N1ZXMgaW4gRXVyb3BlIGFuZCBtb3ZpbmcgZ29sZCBob2xkaW5ncyBvdXQgdG8gcGxhY2VzIGxpa2UgU2luZ2Fwb3JlLiIgTU9SRSBIRURHSU5HIElOVEVSRVNUIFRoZSBzcG90IHByaWNlIG9mIGdvbGQgY2xpbWJlZCAxMiBwZXJjZW50IGZyb20gbWlkLUF1Z3VzdCB1bnRpbCB0aGUgZmlyc3Qgd2VlayBvZiBPY3RvYmVyLCB3aGVuIGl0IHRvdWNoZWQgYSBwZWFrIGp1c3QgYmVsb3cgJDEsODAwIGFuIG91bmNlLCBvbiB0aGUgYmFjayBvZiBzdGltdWx1cyBtZWFzdXJlcyBieSBjZW50cmFsIGJhbmtzLiBLZXkgc2FpZCBEZXV0c2NoZSBoYXMgc2VlbiBtb3JlIGludGVyZXN0IGluIGhlZGdpbmcgZnJvbSBtZWRpdW0tc2l6ZWQgZ29sZCBtaW5pbmcgY29tcGFuaWVzLCBlc3BlY2lhbGx5IHNpbmNlIGxvdyBzaGFyZSBwcmljZXMgYW5kIHZhbHVhdGlvbnMgbWFrZSBpdCBkaWZmaWN1bHQgdG8gaXNzdWUgbmV3IHNoYXJlcyB0byByYWlzZSBjYXNoLiAiQ0VPcyBvZiBtaWQtdGllciBwcm9kdWNlcnMgd2hvIHdlcmUgZGVmaW5pdGVseSBhZ2FpbnN0IGhlZGdpbmcgYXJlIG1vcmUgb3Blbmx5IHRhbGtpbmcgYWJvdXQgdGhlIHJhbGx5IHdlJ3ZlIHNlZW4gaW4gZ29sZCBiZWNvbWluZyBtb3JlIG1hdHVyZSBhbmQgYXMgYSByZXN1bHQgYmVpbmcgYSBsaXR0bGUgbW9yZSBvcGVuIHRvIGhlZGdpbmcsIiBLZXkgc2FpZC4gIkkgZmluZCBpdCBhIGZhc2NpbmF0aW5nIGNoYW5nZSwgYnV0IGRvZXMgaXQgbWVhbiB0aGF0IHdlJ2xsIHNlZSBhIGxvdCBtb3JlIGhlZGdpbmcgaW4gZml2ZSB5ZWFycyB0aW1lPyBBYnNvbHV0ZWx5LCBidXQgdGhlcmUncyBub3QgZ29pbmcgdG8gYmUgYSBmbG9vZGdhdGUgKG9wZW5pbmcpLCIgaGUgYWRkZWQuICJSYWlzaW5nIGJ5IHRoZSBlcXVpdHkgbWFya2V0cyBpcyBhIHRvdWdoIHByb3Bvc2l0aW9uLCBzbyBDRU9zIGxvb2tpbmcgYXQgZXhwYW5zaW9uIG9yIGludmVzdGluZyBmb3IgdGhlIGZ1dHVyZSBhcmUgYSBsb3QgbW9yZSBvcGVuIHRvIGxvb2tpbmcgYXQgc29tZSBmb3JtIG9mIGhlZGdpbmcuIiBNYW55IGludmVzdG9ycyBvcHBvc2UgaGVkZ2luZyBiZWNhdXNlIHRoZXkgd2FudCBleHBvc3VyZSB0byBoaWdoZXIgcHJpY2VzIGFuZCB0aGUgbWFqb3IgZ29sZCBwcm9kdWNlcnMgYXJlIG5vdCBleHBlY3RlZCB0byByZWludHJvZHVjZSB0aGUgcHJhY3RpY2UsIEtleSBhZGRlZC4gCgpFZGl0b3IncyBOb3RlOiBHZXQgRGF2aWQgU2thcmljYSdzIEdvbGQgU3RvY2sgQWR2aXNlciDigJQgQ2xpY2sgSGVyZSBOb3ch</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATpn8VSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGJhNzNlZWQ1NjgxYzIyOTY=</field><field name="symbol" class="java.lang.String">rO0ABXQABEdPTEQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATptF7CAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBfUo9cKPXD</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBfZmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBfJR64UeuF</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBfPrhR64Uf</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBelmZmZmZm</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAdPGA==</field><field name="id" class="java.lang.String">rO0ABXQAEGRmMTA3ZjVkZjg4YWRlYTk=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJE2AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQAAzIzMQ==</field><field name="title" class="java.lang.String">rO0ABXQAOVB1dGluIFR1cm5zIEJsYWNrIEdvbGQgdG8gQnVsbGlvbiBhcyBSdXNzaWEgT3V0YnV5cyBXb3JsZA==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATzH1qsAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDIxZjgyNDBhNjk2MjZkNjc=</field><field name="symbol" class="java.lang.String">rO0ABXQABEdPTEQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATzM/QcAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBWjhR64Ueu</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBWvMzMzMzN</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBWaZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBWtwo9cKPX</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBWPMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAApzyA==</field><field name="id" class="java.lang.String">rO0ABXQAEDJhMmJhYTJjYzJkZjMxYjc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKtaAAAA==</field></document></documents><date>2015-05-07T05:05:12-0500</date></cacheEntry>
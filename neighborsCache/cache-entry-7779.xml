<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0BdRUaGUgY3V0b2ZmIGZvciBlbXBsb3llZXMgdG8gYXBwbHkgZm9yIHRoZSBidXlvdXQgd2FzIDUgcG0gTmV3IFlvcmsgdGltZSBNb25kYXkgYWNjb3JkaW5nIHRvIEFudGhvbnkgTmFwb2xpIHRoZSBsb2NhbCBuZXdzcGFwZXIgZ3VpbGQgcmVwcmVzZW50YXRpdmUgZm9yIFRpbWVzIGVtcGxveWVlcyBUaGUgY29tcGFueSBoYXMgc2FpZCB0aGVyZSB3aWxsIGJlIGZvcmNlZCBjdXRzIGlmIDEwMCBqb2JzIGNhbnQgYmUgZWxpbWluYXRlZCB0aHJvdWdoIHZvbHVudGFyeSBidXlvdXRzIFRoYXRzIGFib3V0IDc1IHBlcmNlbnQgb2YgdGhlIG5ld3Nyb29tIHN0YWZmIHRoZSBUaW1lcyBoYXMgcmVwb3J0ZWQgCgpUaGUgc2hhcmVzIHJvc2UgNjkgcGVyY2VudCB0byAxMzU2IGF0IHRoZSBjbG9zZSB0aGUgYmlnZ2VzdCBnYWluIHNpbmNlIE9jdCAxIHdoZW4gdGhlIGJ1eW91dHMgd2VyZSBmaXJzdCBhbm5vdW5jZWQgTGlrZSBtYW55IG5ld3NwYXBlcnMgdGhlIFRpbWVzIGlzIHRyeWluZyB0cmFuc2Zvcm0gaXRzZWxmIGludG8gYSBkaWdpdGFsIG5ld3Nyb29tIGFzIG1vcmUgcmVhZGVycyBnZXQgdGhlaXIgbmV3cyBmcm9tIHRoZSBJbnRlcm5ldCBhbmQgYXMgcHJpbnQgY2lyY3VsYXRpb24gYW5kIGFkdmVydGlzaW5nIGRlY2xpbmUgVGhlIHB1Ymxpc2hlciBzYWlkIGluIGEgcmVndWxhdG9yeSBmaWxpbmcgaW4gT2N0b2JlciB0aGF0IHRoZSBzdGFmZiBjdXRzIGFyZSBuZWNlc3NhcnkgdG8gY29udHJvbCBvdXIgY29zdHMgYW5kIHRvIGFsbG93IHVzIHRvIGNvbnRpbnVlIHRvIGludmVzdCBpbiB0aGUgZGlnaXRhbCBmdXR1cmUgb2YgVGhlIE5ldyBZb3JrIFRpbWVzIFRoZXlyZSByYWlzaW5nIHByaWNlcyB0byBvZmZzZXQgdGhlIGRlY2xpbmUgaW4gYWR2ZXJ0aXNpbmcgYnV0IHRoYXQgY2FuIG9ubHkgZ28gc28gZmFyIHNhaWQgRWQgQXRvcmlubyBhIE5ldyBZb3JrYmFzZWQgYW5hbHlzdCBhdCBCZW5jaG1hcmsgQ28gVGhlIGFtb3VudCBvZiBzdGFmZiBsZWF2aW5nIG1heSBiZSBhIHN1cnByaXNpbmdseSBiaWcgbnVtYmVyIGhlIHNhaWQgVGhleSBhcmUgZ29pbmcgdG8gZm9sbG93IHRocm91Z2ggYW5kIHJlZHVjZSB0aGUgc3RhZmYgd2hpY2ggd2lsbCBzYXZlIHNvbWUgbW9uZXkgaW4gdGhlIGZvdXJ0aCBxdWFydGVyIEF0b3Jpbm8gc2FpZCBJbiBPY3RvYmVyIHRoZSBjb21wYW55IHByb2plY3RlZCB0aGF0IGFkIHNhbGVzIHdpbGwgZHJvcCBieSBhIG1pZHNpbmdsZWRpZ2l0IHJhdGUgaW4gdGhlIGZvdXJ0aCBxdWFydGVyIFNldmVyYWwgaGlnaHByb2ZpbGUgVGltZXMgam91cm5hbGlzdHMgaGF2ZSBhY2NlcHRlZCB0aGUgYnV5b3V0cyBzbyBmYXIgaW5jbHVkaW5nIHZldGVyYW4gVFYgcmVwb3J0ZXIgQmlsbCBDYXJ0ZXIgdGhlIEh1ZmZpbmd0b24gUG9zdCByZXBvcnRlZCBlYXJsaWVyIE1vbmRheSBBIHJlcHJlc2VudGF0aXZlIGZvciBUaW1lcyBDbyBkaWRudCBpbW1lZGlhdGVseSByZXR1cm4gYSByZXF1ZXN0IGZvciBjb21tZW50dAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAb2FydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2UsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEzLTEyLTAzVDAwOjAwOjAwWiBUTyAyMDE0LTA3LTEwVDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTIyMDcz</field><field name="title" class="java.lang.String">rO0ABXQAK05ldyBZb3JrIFRpbWVzIFN0ZW1zIERlY2xpbmUgaW4gQWR2ZXJ0aXNpbmc=</field><field name="content" class="java.lang.String">rO0ABXQIV0FkIHNhbGVzIGZlbGwgMS4zIHBlcmNlbnQgZnJvbSBhIHllYXIgZWFybGllciwgbGVhdmluZyBvdXQgYW4gZXh0cmEgd2VlayBpbiAyMDEzIGZvciBjb21wYXJpc29uIHB1cnBvc2VzLiBJdCB3YXMgdGhlIDEzdGggc3RyYWlnaHQgcXVhcnRlcmx5IGRyb3AgaW4gYWR2ZXJ0aXNpbmcsIGluY2x1ZGluZyBhIDIgcGVyY2VudCBzbG93ZG93biBpbiB0aGUgdGhpcmQgcXVhcnRlci4gVGltZXMgQ28uIGhhcyBiZWNvbWUgbW9yZSByZWxpYW50IG9uIHJlYWRlcnMgdGhhbiBvbiBhZHZlcnRpc2VycyBmb3IgYW5udWFsIHJldmVudWUsIGFuZCBDaGllZiBFeGVjdXRpdmUgT2ZmaWNlciBNYXJrIFRob21wc29uIGlzIHdvcmtpbmcgdG8gbHVyZSBtb3JlIHN1YnNjcmliZXJzIGJ5IGNyZWF0aW5nIHBhY2thZ2VzIG9mIG5ld3MgY292ZXJhZ2UgYXQgZGlmZmVyZW50IHByaWNlcywgaW5jbHVkaW5nIGEgbGltaXRlZCBwbGFuIHRoYXQgd2lsbCBjb3N0IGxlc3MgdGhhbiBpdHMgY3VycmVudCBvZmZlcmluZy4gRGlnaXRhbCBzdWJzY3JpcHRpb25zIGNsaW1iZWQgMTkgcGVyY2VudCB0byA3NjAsMDAwLCBkZWNlbGVyYXRpbmcgZnJvbSB0aGUgcHJpb3IgcXVhcnRlcuKAmXMgMjggcGVyY2VudCBnYWluLCB0aGUgVGltZXMgc2FpZCB0b2RheSBpbiBhIHN0YXRlbWVudC4gVGltZXMgQ28uIHNoYXJlcyBnYWluZWQgMy4zIHBlcmNlbnQgdG8gJDE0LjMwIGF0IHRoZSBjbG9zZSBpbiBOZXcgWW9yay4gVGhlIHN0b2NrIGhhcyBzdXJnZWQgNzQgcGVyY2VudCBpbiB0aGUgcGFzdCB5ZWFyLiBMZWF2aW5nIG91dCBhbnkgYWRqdXN0bWVudHMsIHRoZSBUaW1lc+KAmSBhZCBidXNpbmVzcyBmZWxsIDYuMyBwZXJjZW50IHRvICQyMTIgbWlsbGlvbi4gUHJvZml0LCBleGNsdWRpbmcgb25lLXRpbWUgaXRlbXMsIHdhcyAyNiBjZW50cyBhIHNoYXJlLCBjb21wYXJlZCB3aXRoIHRoZSBhdmVyYWdlIGFuYWx5c3QgZXN0aW1hdGUgb2YgMTYgY2VudHMsIGFjY29yZGluZyB0byBkYXRhIGNvbXBpbGVkIGJ5IEJsb29tYmVyZy4gV2hpbGUgY2lyY3VsYXRpb24gc2FsZXMgZmVsbCAzLjkgcGVyY2VudCB0byAkMjA4IG1pbGxpb24sIHRoZXkgZ2FpbmVkIDIuNyBwZXJjZW50IGxlYXZpbmcgb3V0IHRoZSBleHRyYSB3ZWVrIGxhc3QgeWVhci4gRm9yIHRoZSBmaXJzdCBxdWFydGVyIG9mIHRoaXMgeWVhciwgdGhlIHB1Ymxpc2hlciBmb3JlY2FzdCBhIGdyb3d0aCByYXRlIGluIHRoZSDigJxsb3cgc2luZ2xlIGRpZ2l0c+KAnSBmb3IgY2lyY3VsYXRpb24gc2FsZXMuIEFkdmVydGlzaW5nIHJldmVudWUgd2lsbCBoYXZlIGEgc2ltaWxhciBkZWNsaW5lIHRvIHRoZSBmb3VydGggcXVhcnRlcuKAmXMgYWRqdXN0ZWQgMS4zIHBlcmNlbnQgZHJvcCwgdGhlIGNvbXBhbnkgc2FpZC4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmF0aXZlIEFkcyBUaG9tcHNvbiBpcyB0cnlpbmcgdG8gcmV2ZXJzZSBhZHZlcnRpc2luZyBkZWNsaW5lcyBieSByZXZhbXBpbmcgdGhlIHNhbGVzIHN0YWZmLiBIZSBoaXJlZCBhIG5ldyB0b3Agc2FsZXMgZXhlY3V0aXZlLCBNZXJlZGl0aCBLb3BpdCBMZXZpZW4sIHdobyBpcyBzcGVhcmhlYWRpbmcgYSBuYXRpdmUtYWR2ZXJ0aXNpbmcgcHJvZ3JhbSwgd2hpY2ggbGV0cyBtYXJrZXRlcnMgY3JhZnQgbWVzc2FnZXMgbWFkZSB0byByZXNlbWJsZSB0aGUgbmV3c3BhcGVy4oCZcyBhcnRpY2xlcy4gVG90YWwgZm91cnRoLXF1YXJ0ZXIgc2FsZXMgZHJvcHBlZCA1LjIgcGVyY2VudCBmcm9tIGEgeWVhciBlYXJsaWVyIHRvICQ0NDQgbWlsbGlvbi4gQW5hbHlzdHMgZm9yZWNhc3QgJDQ0MSBtaWxsaW9uIG9uIGF2ZXJhZ2UuIFRoZSBjb21wYW554oCZcyBkaXZpZGVuZCwgcmVpbnN0YXRlZCBpbiBEZWNlbWJlciBhZnRlciBhIGZpdmUteWVhciBwYXVzZSwgY29zdHMgdGhlIHB1Ymxpc2hlciBhYm91dCAkMjQgbWlsbGlvbiBvbiBhbiBhbm51YWwgYmFzaXMuIFRoZSBPY2hzLVN1bHpiZXJnZXIgZmFtaWx5LCB3aGljaCBjb250cm9scyB0aGUgcHVibGlzaGVyLCBzdGFuZHMgdG8gbWFrZSBhcyBtdWNoIGFzICQzLjEgbWlsbGlvbiBhIHllYXIgZnJvbSB0aGUgcGF5b3V0cywgZmFyIHNtYWxsZXIgdGhhbiB0aGUgJDIwIG1pbGxpb24gaXQgZ290IGFzIHJlY2VudGx5IGFzIDIwMDgu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUQFyAsAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDk2ZGM2ZTc1Yjk1MzFiMDg=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0NPU1QuTVg=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUQK7mcAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECXqNcKPXCk</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECXqNcKPXCk</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECXqNcKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECXqNcKPXCk</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECXo5mZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAyA==</field><field name="id" class="java.lang.String">rO0ABXQAEDI1NmVhNDc2ZTlmMTJkNWI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGm8AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIyMDgw</field><field name="title" class="java.lang.String">rO0ABXQAP05ldyBZb3JrIFRpbWVzIEZvdXJ0aC1RdWFydGVyIFByb2ZpdCBEZWNsaW5lcyBvbiBMb3dlciBBZCBTYWxlcw==</field><field name="content" class="java.lang.String">rO0ABXQHD1RoZSBOZXcgWW9yayBUaW1lcyBDby4sIHRoZSBwdWJsaXNoZXIgY29udHJvbGxlZCBieSB0aGUgT2Nocy1TdWx6YmVyZ2VyIGZhbWlseSwgcmVwb3J0ZWQgYSBkZWNsaW5lIGluIGZvdXJ0aC1xdWFydGVyIHByb2ZpdCBhcyBhZHZlcnRpc2luZyBzYWxlcyBjb250aW51ZWQgdG8gc2xpZGUgYXQgdGhlIHNocmlua2luZyBuZXdzcGFwZXIuIFRoZSBUaW1lc+KAmSBhZCBidXNpbmVzcyBmZWxsIDYuMyBwZXJjZW50IGZyb20gYSB5ZWFyIGVhcmxpZXIgdG8gJDIxMiBtaWxsaW9uLCB0aGUgMTN0aCBzdHJhaWdodCBxdWFydGVybHkgZGVjbGluZS4gVGhlIHByb2ZpdCwgZXhjbHVkaW5nIG9uZS10aW1lIGl0ZW1zLCB3YXMgMjYgY2VudHMgYSBzaGFyZSwgY29tcGFyZWQgd2l0aCB0aGUgYXZlcmFnZSBhbmFseXN0IGVzdGltYXRlIG9mIDE2IGNlbnRzLCBhY2NvcmRpbmcgdG8gZGF0YSBjb21waWxlZCBieSBCbG9vbWJlcmcuIENpcmN1bGF0aW9uIHNhbGVzIGZlbGwgMy45IHBlcmNlbnQgdG8gJDIwOCBtaWxsaW9uLCBhbmQgZGlnaXRhbCBzdWJzY3JpcHRpb25zIGNsaW1iZWQgMTkgcGVyY2VudCB0byA3NjAsMDAwLiBUaW1lcyBDby4gaGFzIGJlY29tZSBtb3JlIHJlbGlhbnQgb24gcmVhZGVycyB0aGFuIG9uIGFkdmVydGlzZXJzIGZvciBhbm51YWwgcmV2ZW51ZSwgYW5kIENoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyIE1hcmsgVGhvbXBzb24gaXMgd29ya2luZyB0byBsdXJlIG1vcmUgc3Vic2NyaWJlcnMgYnkgY3JlYXRpbmcgcGFja2FnZXMgb2YgbmV3cyBjb3ZlcmFnZSBhdCBkaWZmZXJlbnQgcHJpY2VzLCBpbmNsdWRpbmcgYSBsaW1pdGVkIHBsYW4gdGhhdCB3aWxsIGNvc3QgbGVzcyB0aGFuIGl0cyBjdXJyZW50IG9mZmVyaW5nLiBUaG9tcHNvbiBpcyBhbHNvIHRyeWluZyB0byByZXZlcnNlIHRoZSBzdGVhZHkgZHJvcCBpbiBhZHZlcnRpc2luZyBieSByZXZhbXBpbmcgdGhlIHNhbGVzIHN0YWZmLiBIZSBoaXJlZCBhIG5ldyB0b3Agc2FsZXMgZXhlY3V0aXZlLCBNZXJlZGl0aCBLb3BpdCBMZXZpZW4sIHdobyBpcyBzcGVhcmhlYWRpbmcgYSBuYXRpdmUtYWR2ZXJ0aXNpbmcgcHJvZ3JhbSwgd2hpY2ggbGV0cyBtYXJrZXRlcnMgY3JhZnQgbWVzc2FnZXMgbWFkZSB0byByZXNlbWJsZSB0aGUgbmV3c3BhcGVy4oCZcyBhcnRpY2xlcy4gVGhlIGNvbXBhbnnigJlzIHNoYXJlcyByb3NlIGxlc3MgdGhhbiAxIHBlcmNlbnQgdG8gJDEzLjg0IHllc3RlcmRheSBpbiBOZXcgWW9yay4gVGhlIHN0b2NrIGhhcyBjbGltYmVkIDY4IHBlcmNlbnQgaW4gdGhlIHBhc3QgMTIgbW9udGhzLCBjb21wYXJlZCB3aXRoIGEgMTYgcGVyY2VudCBpbmNyZWFzZSBmb3IgdGhlIFN0YW5kYXJkICYgUG9vcuKAmXMgNTAwIEluZGV4LiBUb3RhbCBmb3VydGgtcXVhcnRlciBzYWxlcyBkcm9wcGVkIDUuMiBwZXJjZW50IGZyb20gYSB5ZWFyIGVhcmxpZXIgdG8gJDQ0NCBtaWxsaW9uLiBBbmFseXN0cyBmb3JlY2FzdCAkNDQxIG1pbGxpb24gb24gYXZlcmFnZS4gVGhlIGNvbXBhbnnigJlzIGRpdmlkZW5kLCByZWluc3RhdGVkIGluIERlY2VtYmVyIGFmdGVyIGEgZml2ZS15ZWFyIHBhdXNlLCBjb3N0cyB0aGUgcHVibGlzaGVyIGFib3V0ICQyNCBtaWxsaW9uIG9uIGFuIGFubnVhbCBiYXNpcy4gVGhlIE9jaHMtU3VsemJlcmdlciBmYW1pbHksIHdoaWNoIGNvbnRyb2xzIHRoZSBwdWJsaXNoZXIsIHN0YW5kcyB0byBtYWtlIGFzIG11Y2ggYXMgJDMuMSBtaWxsaW9uIGEgeWVhciBmcm9tIHRoZSBwYXlvdXRzLCBmYXIgc21hbGxlciB0aGFuIHRoZSAkMjAgbWlsbGlvbiBpdCBnb3QgYXMgcmVjZW50bHkgYXMgMjAwOC4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUQFyAsAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDk2ZGM2ZTc1Yjk1MzFiMDg=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0NPU1QuTVg=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUQK7mcAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECXqNcKPXCk</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECXqNcKPXCk</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECXqNcKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECXqNcKPXCk</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECXo5mZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAyA==</field><field name="id" class="java.lang.String">rO0ABXQAEDQxODY3YzM0YWMyZGFjYmU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mK1fAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE5MjA4</field><field name="title" class="java.lang.String">rO0ABXQAMkFPTCBCYW5rcyBvbiBIdWZmUG9zdCB0byBUdXJuIFByb2ZpdGFibGUgTmV4dCBZZWFy</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUMeCd8AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDgwZmFhOTg2YzNkY2FjNzg=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0FPTA==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUMjMDsAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBGNHrhR64U</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBGaPXCj1wp</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBGGZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBGVcKPXCj2</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBGVcKPXCj2</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAA0NBA==</field><field name="id" class="java.lang.String">rO0ABXQAEDRmYTI1ZDc1MmZlODFiZWE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMZyAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM5NzY=</field><field name="title" class="java.lang.String">rO0ABXQAPldhc2hpbmd0b24sIFJlZ3VsYXRvcnMgU2hydWcgYXQgQWxpYmFiYSdzIFBsYW4gZm9yIE1hc3NpdmUgSVBP</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcepHSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDA3MjRkOGEzODdhYzY5Y2Y=</field><field name="symbol" class="java.lang.String">rO0ABXQABFBFUlk=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcjytCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxKPXCj1wp</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxUeuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxD1wo9cKP</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxTMzMzMzN</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxTMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAF6hA==</field><field name="id" class="java.lang.String">rO0ABXQAEGVlMDVmOTQ5N2ViNWY4OWU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE6aAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE5OTc5</field><field name="title" class="java.lang.String">rO0ABXQANUlCTSBXaXRoaG9sZHMgSm9iIEN1dHMgRGF0YSwgTWFraW5nIEFnZSBDbGFpbXMgSGFyZGVy</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUXuzUCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDA4NTNmMzJhOTQ1Yjg1OGE=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lCTQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUXz85yAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBoGUeuFHrh</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBoIPXCj1wp</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBn+FHrhR64</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBoBhR64Ueu</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBnjhR64Ueu</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAACH5qA==</field><field name="id" class="java.lang.String">rO0ABXQAEDM5MGI5ODg3ZDJlNGQ2N2U=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFhtAAAA==</field></document></documents><date>2015-05-07T12:21:04-0500</date></cacheEntry>
<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0EmBCUCBQbGMgdGhlIFVLIG9pbCBjb21wYW55IHdpdGggdGhlIHNpbmdsZWJpZ2dlc3QgZm9yZWlnbiBpbnZlc3RtZW50IGluIFJ1c3NpYSB3YXJuZWQgdGhhdCBtb3JlIHNhbmN0aW9ucyBhZ2FpbnN0IHRoZSBjb3VudHJ5IGNvdWxkIGh1cnQgaXRzIGJ1c2luZXNzIEJQIHdpdGggYSAyMCBwZXJjZW50IHN0YWtlIGluIE9BTyBSb3NuZWZ0IHN0YW5kcyB0byBsb3NlIHRoZSBtb3N0IGZyb20gZnVydGhlciBzYW5jdGlvbnMgaW4gcmVzcG9uc2UgdG8gUnVzc2lhcyBhbm5leGF0aW9uIG9mIENyaW1lYSBUaGUgRXVyb3BlYW4gVW5pb24gYW5kIHRoZSBVUyBtYXkgYWN0IGFzIHNvb24gYXMgdG9kYXkgdG8gaW50ZW5zaWZ5IHB1bml0aXZlIG1lYXN1cmVzIGFpbWVkIGF0IGtleSBzZWN0b3JzIG9mIHRoZSBlY29ub215IGZpbmFuY2UgZGVmZW5zZSBhbmQgZW5lcmd5IEFueSBmdXR1cmUgZXJvc2lvbiBvZiBvdXIgcmVsYXRpb25zaGlwIHdpdGggUm9zbmVmdCBvciB0aGUgaW1wYWN0IG9mIGZ1cnRoZXIgZWNvbm9taWMgc2FuY3Rpb25zIGNvdWxkIGFkdmVyc2VseSBpbXBhY3Qgb3VyIGJ1c2luZXNzIGFuZCBzdHJhdGVnaWMgb2JqZWN0aXZlcyBpbiBSdXNzaWEgdGhlIGxldmVsIG9mIG91ciBpbmNvbWUgcHJvZHVjdGlvbiBhbmQgcmVzZXJ2ZXMgb3VyIGludmVzdG1lbnQgaW4gUm9zbmVmdCBhbmQgb3VyIHJlcHV0YXRpb24gQlAgc2FpZCBpbiBhbiBlYXJuaW5ncyBzdGF0ZW1lbnQgQlAgcmVwb3J0ZWQgYSAzNCBwZXJjZW50IGluY3JlYXNlIGluIHNlY29uZHF1YXJ0ZXIgcHJvZml0IGJlYXRpbmcgYW5hbHlzdCBlc3RpbWF0ZXMgaW5jbHVkaW5nIDEgYmlsbGlvbiB1bmRlcmx5aW5nIG5ldCBpbmNvbWUgZnJvbSBSb3NuZWZ0IFRoYXQgY29tcGFyZXMgd2l0aCAyMTggbWlsbGlvbiBmcm9tIHRoZSBSdXNzaWFuIGNvbXBhbnkgYSB5ZWFyIGVhcmxpZXIgSXQgcmVjZWl2ZWQgYSA2OTAgbWlsbGlvbiBkaXZpZGVuZCBmcm9tIFJvc25lZnQgbGFzdCB3ZWVrIGFuZCBkb2VzbnQgZXhwZWN0IHRoaXMgdG8gYmUgYXQgcmlzayBuZXh0IHllYXIgVG8gZGF0ZSB0aGVzZSBzYW5jdGlvbnMgaGF2ZSBoYWQgbm8gbWF0ZXJpYWwgYWR2ZXJzZSBpbXBhY3Qgb24gQlAgb3IgUnVociBPZWwgR21iSCBhIGpvaW50IHJlZmluaW5nIHZlbnR1cmUgYmV0d2VlbiBCUCBhbmQgUm9zbmVmdCBpdCBzYWlkIEhvd2V2ZXIgQlAgd2lsbCBjb250aW51ZSB0byBrZWVwIHRoaXMgdW5kZXIgcmV2aWV3IEEgRHV0Y2ggY291cnQgcnVsZWQgeWVzdGVyZGF5IGluIGZhdm9yIG9mIGZvcm1lciBZdWtvcyBPaWwgQ28gb2ZmaWNpYWxzIG9yZGVyaW5nIFJ1c3NpYSB0byBwYXkgNTAgYmlsbGlvbiBmb3Igc2VpemluZyB3aGF0IHdhcyBvbmNlIHRoZSBjb3VudHJ5cyBsYXJnZXN0IG9pbCBwcm9kdWNlciBUaGUgZGVjaXNpb24gcmlza3MgZHJhZ2dpbmcgUm9zbmVmdCBhbmQgbmF0dXJhbCBnYXMgZXhwb3J0ZXIgT0FPIEdhenByb20gaW50byBleHRlbmRlZCBsZWdhbCB3cmFuZ2xpbmcgVGhlIHN0YXRlcnVuIGNvbXBhbmllcyBtYXkgYmUgdGFyZ2V0ZWQgYmVjYXVzZSB0aGV5IHdlcmUgYmVuZWZpY2lhcmllcyBvZiBleHByb3ByaWF0ZWQgWXVrb3MgYXNzZXRzIFByb2ZpdCBSaXNlcyBXZSBhcmUgbW9uaXRvcmluZyBldmVudHMgaW4gUnVzc2lhIENoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyIEJvYiBEdWRsZXkgd2hvIHdhcyByZWVsZWN0ZWQgdG8gdGhlIFJvc25lZnQgYm9hcmQgaW4gSnVuZSBzYWlkIGF0IGEgbWVkaWEgYnJpZWZpbmcgaW4gTG9uZG9uIFNhbmN0aW9ucyBhcmUgYSBtYXR0ZXIgZm9yIGdvdmVybm1lbnRzIHRvIHJlc29sdmUgdGhyb3VnaCBkaWFsb2cgYW5kIGRpcGxvbWFjeSBCUCBzaGFyZXMgZmVsbCBhcyBtdWNoIGFzIDIgcGVyY2VudCB0byA0ODcgcGVuY2UgdHJhZGluZyBuZWFyIHRoZSBsb3dlc3QgcHJpY2UgaW4gdGhyZWUgbW9udGhzIFRoZXkgd2VyZSBkb3duIDE4IHBlcmNlbnQgYXQgNDg4IHBlbmNlIGF0IDIgcG0gaW4gTG9uZG9uIEVhcm5pbmdzIGFkanVzdGVkIGZvciBvbmV0aW1lIGl0ZW1zIGFuZCBpbnZlbnRvcnkgY2hhbmdlcyByb3NlIHRvIDM2IGJpbGxpb24gZnJvbSAyNyBiaWxsaW9uIGEgeWVhciBlYXJsaWVyIHRoZSBMb25kb25iYXNlZCBjb21wYW55IHNhaWQgaW4gdGhlIHN0YXRlbWVudCBUaGF0IGJlYXQgdGhlIDM0IGJpbGxpb24gYXZlcmFnZSBlc3RpbWF0ZSBvZiAxMyBhbmFseXN0cyBpbiBhIEJsb29tYmVyZyBOZXdzIHN1cnZleSBUaGUgcXVhcnRlcmx5IGRpdmlkZW5kIHdhcyB1bmNoYW5nZWQgZnJvbSB0aGUgcHJldmlvdXMgdGhyZWUgbW9udGhzIGF0IDk3NSBjZW50cyBhIHNoYXJlIE5ldyBQcm9qZWN0cyBXaGlsZSB0b3RhbCBlbmVyZ3kgcHJvZHVjdGlvbiBkZWNsaW5lZCBkdWUgdG8gZGlzcG9zYWxzIHRoZSBjb21wYW55IGJyb3VnaHQgb25saW5lIHByb2plY3RzIHdpdGggYmV0dGVyIHJldHVybnMgaXQgc2FpZCBVUyBvdXRwdXQgcm9zZSAyOCBwZXJjZW50IGluIHRoZSBxdWFydGVyIGZyb20gYSB5ZWFyIGVhcmxpZXIgYm9vc3RlZCBieSBuZXcgYXNzZXRzIGluIHRoZSBHdWxmIG9mIE1leGljbyBXZSBhcmUgY29udGludWluZyB0byByYW1wIHVwIHRoZSBtYWpvciBuZXcgcHJvamVjdHMgdGhhdCBkcml2ZSBkZWxpdmVyeSBvZiBjYXNoIGZsb3cgYW5kIGFyZSBhbHNvIG5vdyBzZWVpbmcgYmVuZWZpdHMgZnJvbSBvdXIgZm9jdXMgb24gb3BlcmF0aW5nIHdpdGggZ3JlYXRlciByZWxpYWJpbGl0eSBhbmQgZWZmaWNpZW5jeSBEdWRsZXkgc2FpZCBpbiBhIHN0YXRlbWVudCBUaGlzIHdhcyBhbm90aGVyIHN1Y2Nlc3NmdWwgcXVhcnRlciBkZWxpdmVyaW5nIGJvdGggb3BlcmF0aW9uYWwgcHJvZ3Jlc3MgYW5kIHJvYnVzdCBjYXNoIGZsb3cgRml2ZSBuZXcgcHJvamVjdHMgc3RhcnRlZCBwcm9kdWN0aW9uIHRoaXMgeWVhciBpbmNsdWRpbmcgdGhyZWUgaW4gZGVlcHdhdGVyIGluIHRoZSBHdWxmIG9mIE1leGljbyBhbmQgdGhlIENMT1YgcHJvamVjdCBpbiBBbmdvbGEgd2hpY2ggcHJvZHVjZWQgZmlyc3Qgb2lsIGluIEp1bmUgVHdvIG1vcmUgcHJvamVjdHMgYXJlIGV4cGVjdGVkIHRvIHN0YXJ0IGluIDIwMTQgVGhlIGVuZCBvZiBCUHMgQWJ1IERoYWJpIGNvbmNlc3Npb24gaW4gSmFudWFyeSB0b2dldGhlciB3aXRoIGRpdmVzdG1lbnRzIG1lYW50IG92ZXJhbGwgcHJvZHVjdGlvbiB3YXMgNiBwZXJjZW50IGxvd2VyIGF0IDIxIG1pbGxpb24gYmFycmVscyBvZiBvaWwgYW5kIGdhcyBhIGRheSBVbmRlcmx5aW5nIG91dHB1dCB3aGljaCBzdHJpcHMgb3V0IHRoZXNlIGZhY3RvcnMgd2FzIDMgcGVyY2VudCBoaWdoZXIgUmlzaW5nIHByb2R1Y3Rpb24gZnJvbSBoaWdoZXJtYXJnaW4gZmllbGRzIGFuZCBpbmNyZWFzZWQgcHJvY2Vzc2luZyBmcm9tIHRoZSBuZXdseSBtb2Rlcm5pemVkIFdoaXRpbmcgcmVmaW5lcnkgaW4gSW5kaWFuYSBjb250cmlidXRlZCB0byBvcGVyYXRpbmcgY2FzaCBmbG93IG9mIDc5IGJpbGxpb24gd2l0aCB0aGUgdG90YWwgZm9yIHRoZSBmaXJzdCBoYWxmIGF0IDE2MSBiaWxsaW9uIEJQIHNhaWQgTG93ZXIgT3V0cHV0IFRoZXNlIHdlcmUgYSBzdHJvbmcgc2V0IG9mIHJlc3VsdHMgc2FpZCBBbmlzaCBLYXBhZGlhIGFuIGFuYWx5c3QgYXQgVHVkb3IgUGlja2VyaW5nIEhvbHQgIENvIGluIExvbmRvbiBJdCB3YXMgcGFydGljdWxhcmx5IGVuY291cmFnaW5nIHRvIHNlZSBpbmNyZWFzZWQgb2lsIHByb2R1Y3Rpb24gZnJvbSB0aGUgVVMgYXMgd2VsbCBhcyBhIGdvb2QgY29udHJpYnV0aW9uIGZyb20gUm9zbmVmdCBwdXR0aW5nIHRoZW0gb24gdHJhY2sgdG8gbWVldCB0aGUgMzAgYmlsbGlvbiB0byAzMSBiaWxsaW9uIHRhcmdldCBmb3IgY2FzaCBmbG93IGZvciB0aGUgeWVhciBCUCBzYWlkIHByb2R1Y3Rpb24gaXMgZXhwZWN0ZWQgdG8gYmUgbG93ZXIgaW4gdGhlIHRoaXJkIHF1YXJ0ZXIgY29tcGFyZWQgd2l0aCB0aGUgcHJldmlvdXMgdGhyZWUgbW9udGhzIGJlY2F1c2Ugb2YgbWFpbnRlbmFuY2UgaW4gQWxhc2thIGFuZCB0aGUgR3VsZiBUaGUgZXhwbG9yZXIgaGFzIHRoZSBncmVhdGVzdCBzY29wZSBhbW9uZyB0aGUgb2lsIG1ham9ycyB0byByZWluIGluIG9wZXJhdGluZyBjb3N0cyB3aXRoIHBvdGVudGlhbCBzYXZpbmdzIG9mIDE0IGJpbGxpb24gYSB5ZWFyIGFjY29yZGluZyB0byBhbmFseXN0cyBhdCBTYW5mb3JkIEMgQmVybnN0ZWluICBDbyBOb3J3YXlzIFN0YXRvaWwgQVNBIGxhc3Qgd2VlayByZXBvcnRlZCBhIGRyb3AgaW4gcHJvZml0IG9uIGxvd2VyIHByb2R1Y3Rpb24gYmVjYXVzZSBvZiBtYWludGVuYW5jZSBhbmQgYXNzZXQgc2FsZXMgd2hpbGUgU3BhaW5zIFJlcHNvbCBTQSBzYWlkIGFkanVzdGVkIG5ldCBpbmNvbWUgd2FzIDI3IHBlcmNlbnQgbG93ZXIgdGhhbiBhIHllYXIgZWFybGllciBhcyB1bnJlc3QgaW4gTm9ydGggQWZyaWNhIGN1cnRhaWxlZCBvdXRwdXQgVG90YWwgU0EgRXVyb3BlcyBzZWNvbmRsYXJnZXN0IG9pbCBjb21wYW55IHJlcG9ydHMgc2Vjb25kcXVhcnRlciBlYXJuaW5ncyB0b21vcnJvdyB3aGlsZSBSb3lhbCBEdXRjaCBTaGVsbCBQbGMgRXVyb3BlcyBsYXJnZXN0IG9pbCBjb21wYW55IHdpbGwgcmVwb3J0IG9uIEp1bHkgMzEgQlAgcmFpc2VkIGNvc3QgZXN0aW1hdGVzIGZvciB0aGUgMjAxMCBHdWxmIG9pbCBzcGlsbCB0byA0MyBiaWxsaW9uIGZyb20gNDI3IGJpbGxpb24gZm9yIGxlZ2FsIHByb3Zpc2lvbnN0AARyb3dzdXEAfgAKAAAAAXQAATV0AAVzdGFydHVxAH4ACgAAAAF0AAEwdAACZmx1cQB+AAoAAAABdABvYXJ0aWNsZUlkLHRpdGxlLGNvbnRlbnQsZGF0ZSxzdG9ja0hpc3RvcnlJZCxzeW1ib2wsaGlzdG9yeURhdGUsb3BlbixoaWdoLGxvdyxjbG9zZSxhZGpDbG9zZSx2b2x1bWUsaWQsX3ZlcnNpb25fdAACZnF1cQB+AAoAAAABdAA6aGlzdG9yeURhdGU6WzIwMTMtMTItMTBUMDA6MDA6MDBaIFRPIDIwMTQtMDctMTBUNTk6NTk6NTlaXXgAcA==</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTIyMTIw</field><field name="title" class="java.lang.String">rO0ABXQAIkFzc2V0IFNhbGVzIFdlaWdoIG9uIEJQJ3MgRWFybmluZ3M=</field><field name="content" class="java.lang.String">rO0ABXQLXkJQIFBMQydzIGZvdXJ0aC1xdWFydGVyIHByb2ZpdHMgZmVsbCAzMCBwZXJjZW50IGFzIHRoZSBhc3NldCBzYWxlcyB0aGF0IGl0IGhhcyBwdXJzdWVkIHRvIGNvbXBlbnNhdGUgdmljdGltcyBvZiB0aGUgR3VsZiBvZiBNZXhpY28gb2lsIGRpc2FzdGVyIHJlZHVjZWQgcHJvZHVjdGlvbi4gVGhlIGNvbXBhbnkgc2FpZCBUdWVzZGF5IHRoYXQgbmV0IGluY29tZSBzbGlkIHRvICQxLjA0IGJpbGxpb24gZnJvbSAkMS40OSBiaWxsaW9uIGluIHRoZSBzYW1lIHF1YXJ0ZXIgdGhlIHllYXIgYmVmb3JlLiBBIG51bWJlciBvZiBmYWN0b3JzIHdlcmUgYmVoaW5kIHRoZSBkZWNsaW5lLCB3aXRoIGxvd2VyIHByb2R1Y3Rpb24gbGV2ZWxzIGluIHRoZSB3YWtlIG9mIHRoZSBhc3NldCBzYWxlcyBhIGtleSBmYWN0b3IuICBPdmVyYWxsIHByb2R1Y3Rpb24sIGV4Y2x1ZGluZyBSdXNzaWEsIGZlbGwgMS45IHBlcmNlbnQgdG8gdGhlIGVxdWl2YWxlbnQgb2YgMi4yNSBiaWxsaW9uIGJhcnJlbHMgb2Ygb2lsIGEgZGF5LiBCUCBzYWlkIGl0IGV4cGVjdHMgcHJvZHVjdGlvbiB0byBkZWNsaW5lIHRoaXMgeWVhciBiZWNhdXNlIG9mIHRoZSBleHBpcmF0aW9uIG9mIGEgY29uY2Vzc2lvbiBpbiBBYnUgRGhhYmkuIEEgZHJvcCBpbiBwcmljZXMgZm9yIHJlZmluZWQgcHJvZHVjdHMgYW5kIGNvc3RzIHJlbGF0ZWQgdG8gbmV3IHByb2plY3RzIGFsc28gd2VpZ2hlZCBvbiBCUCdzIHByb2ZpdHMsIGRlc3BpdGUgc3Ryb25nIHJlc3VsdHMgYXQgUm9zbmVmdCwgdGhlIFJ1c3NpYW4gY29tcGFueSBpbiB3aGljaCBCUCBob2xkcyBhIDE5IHBlcmNlbnQgc3Rha2UuIFN0aWxsLCBDaGllZiBFeGVjdXRpdmUgQm9iIER1ZGxleSBkZWxpdmVyZWQgYW4gdXBiZWF0IGZvcmVjYXN0LCBjaXRpbmcgaW5jcmVhc2VkIHByb2R1Y3Rpb24gaW4gdGhlIE5vcnRoIFNlYSwgQW5nb2xhIGFuZCBHdWxmIG9mIE1leGljbyBhbmQgdGhlIGNvbXBsZXRpb24gb2YgbWFqb3IgcHJvamVjdHMgZm9yIHRoZSBwcm9kdWN0aW9uIG9mIGNydWRlIG9pbCBhbmQgbmF0dXJhbCBnYXMsIGFzIHdlbGwgYXMgcmVmaW5lZCBwcm9kdWN0cyBzdWNoIGFzIGdhc29saW5lLiBBZGp1c3RlZCBmb3IgdGhlIGVmZmVjdHMgb2YgZGl2ZXN0bWVudHMsIHRoZSBjb21wYW55IHNhaWQgInVuZGVybHlpbmciIHByb2R1Y3Rpb24gcm9zZSAzLjcgcGVyY2VudC4gIlRoZXNlIGFjaGlldmVtZW50cyB1bmRlcnBpbiBvdXIgZmluYW5jaWFsIHRhcmdldHMgZm9yIDIwMTQgYW5kIGxheSB0aGUgZm91bmRhdGlvbiBmb3IgY29udGludWVkIGdyb3d0aCBpbiBzdXN0YWluYWJsZSBmcmVlIGNhc2ggZmxvdywiIGhlIHNhaWQuIFRoZSBEZWVwd2F0ZXIgSG9yaXpvbiBzcGlsbCBpbiB0aGUgR3VsZiBvZiBNZXhpY28gY29udGludWVzIHRvIGVhdCBpbnRvIGVhcm5pbmdzLCB0aG91Z2guIEV4cGVuc2VzIHJlbGF0ZWQgdG8gdGhlIDIwMTAgZGlzYXN0ZXIgY3V0IHByZXRheCBwcm9maXQgYnkgJDE4OSBtaWxsaW9uIGluIHRoZSBxdWFydGVyIGFuZCAkNDY5IG1pbGxpb24gZm9yIHRoZSBmdWxsIHRoZSB5ZWFyLiBUaGUgZXhwbG9zaW9uIG9uIHRoZSBEZWVwd2F0ZXIgSG9yaXpvbiBkcmlsbGluZyByaWcga2lsbGVkIDExIHdvcmtlcnMgYW5kIHJlbGVhc2VkIG1pbGxpb25zIG9mIGdhbGxvbnMgb2Ygb2lsIGludG8gdGhlIGd1bGYsIHdyZWFraW5nIGVjb25vbWljIGhhdm9jIGFuZCBwcm9tcHRpbmcgZW52aXJvbm1lbnRhbCBkYW1hZ2UgYWNyb3NzIHNldmVyYWwgc291dGhlcm4gc3RhdGVzLiBCUCBoYXMgc2V0IHVwIGEgJDIwIGJpbGxpb24gdHJ1c3QgZnVuZCB0byBjb21wZW5zYXRlIHZpY3RpbXMgb2YgdGhlIHNwaWxsLiBBcyBvZiBEZWMuIDMxLCBjaGFyZ2VzIHRvIHRoZSBmdW5kIGFtb3VudGVkIHRvICQxOS4zOSBiaWxsaW9uLCBsZWF2aW5nICQ2NjIgbWlsbGlvbiB0aGF0IGNvdWxkIGJlIGNoYXJnZWQgdG8gdGhlIHRydXN0IGZ1bmQgd2l0aCBubyBuZXQgaW1wYWN0IG9uIGVhcm5pbmdzLiBUaGUgc3BpbGwsIHdoaWNoIGNyZWF0ZWQgYSBodWdlIGZ1cm9yIGluIHRoZSBVLlMuLCBwcm9tcHRlZCB0aGUgY29tcGFueSB0byB0cmFuc2Zvcm0gaXRzIGJ1c2luZXNzLiBJdCBoYXMgc29sZCBvZmYgYSBsaXR0bGUgdW5kZXIgJDQwIGJpbGxpb24gd29ydGggb2YgYXNzZXRzIGluIHJlc3BvbnNlLCBwYXJ0bHkgdG8gZnVuZCB0aGUgY29tcGVuc2F0aW9uIHNjaGVtZXMuIE1vcmUgYXNzZXRzIGFyZSBleHBlY3RlZCB0byBiZSBzb2xkIG92ZXIgdGhlIGNvbWluZyBjb3VwbGUgb2YgeWVhcnMuIEFuYWx5c3RzIHNheSB0aGUgb3ZlcmFsbCBudW1iZXJzIHdlcmUgbGFyZ2VseSBpbiBsaW5lIHdpdGggZXhwZWN0YXRpb25zLiAiVGhlIEd1bGYgb2YgTWV4aWNvIGZhbGxvdXQgaXMgc3RpbGwgbm90IGNvbXBsZXRlLCBhbHRob3VnaCwgYWxsIHRoaW5ncyBiZWluZyBlcXVhbCwgdGhlIHJ1bXAgb2YgdGhlIGNsYWltcyBzZWVtIHRvIGJlIHdlbGwgcHJvdmlzaW9uZWQsIiBzYWlkIFJpY2hhcmQgSHVudGVyLCBoZWFkIG9mIGVxdWl0aWVzIGF0IEhhcmdyZWF2ZXMgTGFuc2Rvd24gU3RvY2ticm9rZXJzLiAiTW9yZSBwb3NpdGl2ZWx5LCB1bmRlcmx5aW5nIHByb2R1Y3Rpb24gaW5jcmVhc2VkLCBuZXQgZGVidCBoYXMgZmFsbGVuLCBhbmQgdGhlIGNvbXBhbnkncyB0cmFuc2Zvcm1hdGlvbiBpbnRvIGEgbW9yZSBsZWFuIGFuZCBmb2N1c2VkIGJ1c2luZXNzIGlzIHdlbGwgdW5kZXJ3YXksIHBhcnRpY3VsYXJseSBnaXZlbiBpdHMgZGl2ZXN0bWVudCBwcm9ncmFtLiIgQlAgc2hhcmVzIHdlcmUgZG93biAxLjYgcGVyY2VudCBhdCA0NjYgcGVuY2UgaW4gTG9uZG9uLiBGb3IgdGhlIHllYXIgYXMgYSB3aG9sZSwgQlAncyBwcm9maXQgbW9yZSB0aGFuIGRvdWJsZWQgdG8gJDIzLjUgYmlsbGlvbiBmcm9tICQxMSBiaWxsaW9uLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUP7e1MAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDQ4YTUzMDkyYzA2ZjBkYjE=</field><field name="symbol" class="java.lang.String">rO0ABXQABEdVTEY=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUQAoa8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1j1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1j1wo9cKP</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1TMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1bhR64Ueu</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA0euFHrhR7</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABiDA==</field><field name="id" class="java.lang.String">rO0ABXQAEDJiZWM2ODNhMTU3N2RkMjY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHNjAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE0NTA5</field><field name="title" class="java.lang.String">rO0ABXQAMUJQIFNheXMgQ2FuIEFjdCBhcyBCcmlkZ2UgQmV0d2VlbiBSdXNzaWEgYW5kIFdlc3Q=</field><field name="content" class="java.lang.String">rO0ABXQGt0JQIHdpbGwgdXNlIGl0cyBwcmVzZW5jZSBpbiBSdXNzaWEgdG8gaGVscCBlbmhhbmNlIHJlbGF0aW9ucyBiZXR3ZWVuIE1vc2NvdyBhbmQgdGhlIFdlc3QsIENoaWVmIEV4ZWN1dGl2ZSBCb2IgRHVkbGV5IHNhaWQgb24gVGh1cnNkYXkgYXMgaGUgcmVzdGF0ZWQgaGlzIGNvbXBhbnkncyBjb21taXRtZW50IHRvIHRoZSBjb3VudHJ5LiBSdXNzaWEgYW5kIHRoZSBXZXN0IGFyZSBpbiBhIHN0YW5kLW9mZiBvdmVyIFVrcmFpbmUgdGhhdCBpcyByZW1pbmlzY2VudCBvZiB0aGUgQ29sZCBXYXIuIEluIHRoZSBsYXN0IGZldyBkYXlzLCB0ZW5zaW9ucyBoYXZlIHJpc2VuIGluIHRoZSBtYWlubHkgUnVzc2lhbi1zcGVha2luZyBlYXN0ZXJuIHBhcnQgb2YgVWtyYWluZS4gQnJpdGFpbidzIEJQIGlzIHRoZSBtb3N0IGV4cG9zZWQgdG8gUnVzc2lhIG9mIHRoZSBvaWwgbWFqb3JzIHRocm91Z2ggaXRzIHN0YWtlIG9mIGp1c3QgdW5kZXIgMjAgcGVyY2VudCBpbiB0aGUgS3JlbWxpbidzIHN0YXRlIG9pbCBjaGFtcGlvbiBSb3NuZWZ0LiAiV2Ugd2lsbCBzZWVrIHRvIHB1cnN1ZSBvdXIgYnVzaW5lc3MgYWN0aXZpdGllcyBtaW5kZnVsIHRoYXQgdGhlIG11dHVhbCBkZXBlbmRlbmN5IGJldHdlZW4gUnVzc2lhIGFzIGFuIGVuZXJneSBzdXBwbGllciBhbmQgRXVyb3BlIGFzIGFuIGVuZXJneSBjb25zdW1lciBoYXMgYmVlbiBhbiBpbXBvcnRhbnQgc291cmNlIG9mIHNlY3VyaXR5IGFuZCBlbmdhZ2VtZW50IGZvciBib3RoIHBhcnRpZXMgZm9yIG1hbnkgZGVjYWRlcywiIER1ZGxleSBzYWlkIGF0IHRoZSBjb21wYW55J3MgYW5udWFsIHNoYXJlaG9sZGVycycgbWVldGluZy4gIlRoYXQgaGFzIGdvdCB0byBjb250aW51ZSBhbmQgSSB0aGluayB3ZSBwbGF5IGFuIGltcG9ydGFudCByb2xlIGFzIGEgYnJpZGdlLiIgVGhlIFVuaXRlZCBTdGF0ZXMgYW5kIEV1cm9wZWFuIFVuaW9uIGhhdmUgaW1wb3NlZCB2aXNhIGJhbnMgYW5kIGFzc2V0IGZyZWV6ZXMgYWdhaW5zdCBSdXNzaWFuIGFuZCBVa3JhaW5pYW4gaW5kaXZpZHVhbHMgaW4gcmVzcG9uc2UgdG8gTW9zY293J3MgYW5uZXhhdGlvbiBvZiBDcmltZWEuCgpSdXNzaWEgaXMgcmVzcG9uc2libGUgZm9yIG92ZXIgYSBxdWFydGVyIG9mIEJQJ3Mgb2lsIG91dHB1dCB3b3JsZHdpZGUgYW5kIG1vcmUgdGhhbiBhIHRoaXJkIG9mIGl0cyBvaWwgYW5kIGdhcyByZXNlcnZlcy4gQlAncyBjaGllZiBleGVjdXRpdmUgc2FpZCBsYXN0IG1vbnRoIHRoZSBjb21wYW55ICJhYnNvbHV0ZWx5IiBzdGFuZHMgYnkgaXRzIGludmVzdG1lbnRzIGluIHRoZSBjb3VudHJ5LiBEdWRsZXksIGEgVS5TLiBjaXRpemVuLCBoYWQgc3RyYWluZWQgcmVsYXRpb25zIHdpdGggUnVzc2lhbiBvZmZpY2lhbHMgZHVyaW5nIGhpcyB0aW1lIGFzIGFuIG9pbCBleGVjdXRpdmUgaW4gTW9zY293LiBIZSB3YXMgZm9yY2VkIHRvIGZsZWUgdGhlIGNvdW50cnksIHNheWluZyBoZSBmZWFyZWQgZm9yIGhpcyBzZWN1cml0eSBkdXJpbmcgYSAyMDA4IGRpc3B1dGUgYmV0d2VlbiBCUCBhbmQgYSBncm91cCBvZiBSdXNzaWFuIG9saWdhcmNocyBvdmVyIGNvcnBvcmF0ZSBnb3Zlcm5hbmNlIGF0IFROSy1CUCwgd2hlcmUgaGUgd2FzIHRoZW4gIGNoaWVmIGV4ZWN1dGl2ZS4gVE5LLUJQIHdhcyB1bHRpbWF0ZWx5IHNvbGQgdG8gUm9zbmVmdCBmb3IgJDU1IGJpbGxpb24gbGFzdCB5ZWFyLCBnaXZpbmcgQlAgYSBzdGFrZSBpbiBSb3NuZWZ0Lg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUVKAcCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDZlM2ZlNjc3ZTU1YzIwNGE=</field><field name="symbol" class="java.lang.String">rO0ABXQAA1ROSw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUVPKByAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEANCj1wo9cK</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAOKPXCj1wp</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAMAAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAM9cKPXCj2</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAMKPXCj1wp</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAZ6NA==</field><field name="id" class="java.lang.String">rO0ABXQAEDAwY2Y0OTU1NDBhZTMxMTA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHgYAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDE2NDQ=</field><field name="title" class="java.lang.String">rO0ABXQAOVJ1c3NpYSBLbm93cyBFdXJvcGUgU2FuY3Rpb25zIEluZWZmZWN0aXZlIFdpdGggVGF4IEhhdmVucw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUXKwLyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDdjMzlhZWFiMGNhZWM5Yjc=</field><field name="symbol" class="java.lang.String">rO0ABXQABE5PUkQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUXP5xiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzczMzMzMz</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAznCj1wo9c</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAy7hR64Ueu</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzQAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzQAAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAADbiA==</field><field name="id" class="java.lang.String">rO0ABXQAEGI2ZTU1NzIwNDU4YzFhNjA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJGwAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDU4MTA=</field><field name="title" class="java.lang.String">rO0ABXQAP0NvbW1vZGl0eSBQcmljZXMgQ3VzaGlvbmVkIEZyb20gQ3JpbWVhIENyaXNpcyBieSBBbXBsZSBTdXBwbGllcw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUTJQsSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGFmMGJiMDA2M2NiMDc0ZDU=</field><field name="symbol" class="java.lang.String">rO0ABXQABUdBSU5Q</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUTOaSCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6XCj1wo9c</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6XCj1wo9c</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6Vwo9cKPX</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6XCj1wo9c</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4oUeuFHrh</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAGQA==</field><field name="id" class="java.lang.String">rO0ABXQAEDdmOGFmMTJlMWU3Njk5ZDM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHYGAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDU3NjA=</field><field name="title" class="java.lang.String">rO0ABXQAMlJ1c3NpYW4gRWNvbm9teSwgVHljb29ucyBUYWtlIEhpdCBpbiBDcmltZWEgQ3Jpc2lz</field><field name="content" class="java.lang.String">rO0ABXQWgVJ1c3NpYSdzIG1vc3QgcG93ZXJmdWwgYnVzaW5lc3NtZW4gd2FpdGVkIGZvciBvdmVyIGFuIGhvdXIgb24gVGh1cnNkYXkgdG8gc3BlYWsgd2l0aCBQcmVzaWRlbnQgVmxhZGltaXIgUHV0aW4sIHdob3NlIGRlY2lzaW9uIHRvIGFubmV4IHRoZSBDcmltZWFuIFBlbmluc3VsYSBoYWQgY29zdCB0aGVpciBjb21wYW5pZXMgaHVuZHJlZHMgb2YgbWlsbGlvbnMgb2YgZG9sbGFycyBpbiBtYXJrZXQgdmFsdWUuIFdoZW4gUHV0aW4gZmluYWxseSBzaG93ZWQgdXAg4oCUIGZvciBmaXZlIG1pbnV0ZXMg4oCUIGhlIGdhdmUgbm8gcmVhc3N1cmFuY2VzIHRoYXQgdGhleSBvciB0aGVpciBjb21wYW5pZXMgbWlnaHQgZ2V0IGFueSByZXNwaXRlIGZyb20gdGhlIHVuY2VydGFpbnR5IGNyZWF0ZWQgYnkgdGhlIHRha2VvdmVyIG9mIGEgcGllY2Ugb2YgbGFuZCBvZiBsaXR0bGUgdmFsdWUgdG8gdGhlbSBiZXlvbmQgbmF0aW9uYWwgcHJpZGUuIFJ1c3NpYSdzIGVjb25vbXkgaXMgZ2V0dGluZyBwaW5jaGVkIGJ5IHRoZSBjcmlzaXMgb3ZlciBDcmltZWEg4oCUIGV2ZW4gYmVmb3JlIHRoZSBuZXcgc2FuY3Rpb25zIHRoZSBVLlMuIGFuZCBFdXJvcGUgYW5ub3VuY2VkIFRodXJzZGF5LiBUaGUgc3RvY2sgbWFya2V0IGhhcyB0YW5rZWQgMTAgcGVyY2VudCB0aGlzIG1vbnRoLCB3aXBpbmcgb3V0IGJpbGxpb25zIGluIG1hcmtldCBjYXBpdGFsaXphdGlvbi4gRWNvbm9taXN0cyBoYXZlIHNsYXNoZWQgZ3Jvd3RoIGZvcmVjYXN0cyB0byB6ZXJvIHRoaXMgeWVhciBhbmQgZm9yZWlnbiBpbnZlc3RvcnMgYXJlIHB1bGxpbmcgbW9uZXkgb3V0IG9mIFJ1c3NpYW4gYmFua3MuIFJhdGluZ3MgYWdlbmN5IFN0YW5kYXJkICYgUG9vcidzIG9uIFRodXJzZGF5IGNpdGVkIGFsbCB0aGVzZSBpc3N1ZXMgd2hlbiBpdCBjdXQgaXRzIG91dGxvb2sgZm9yIHRoZSBjb3VudHJ5LiBCZWNhdXNlIFUuUy4gYW5kIEV1cm9wZWFuIGxlYWRlcnMgaGF2ZSBzYWlkIHRoZXkgYXJlIHdpbGxpbmcgdG8gaW1wb3NlIGV2ZXIgc3RpZmZlciBzYW5jdGlvbnMsIHJhdGNoZXRpbmcgdXAgdGhlIHByZXNzdXJlIG9uIFJ1c3NpYSBzdGVwIGJ5IHN0ZXAsIHRoZSBjb25jZXJuIGlzIGhvdyBzZXZlcmUgdGhlIHBlbmFsdGllcyBtaWdodCBnZXQuICJUaGUgbWFpbiByaXNrIGlzIGluIHRoZSBzYW5jdGlvbnMgdGhhdCBoYXZlIG5vdCBiZWVuIGFubm91bmNlZCwiIHNheXMgTmF0YWxpeWEgT3Jsb3ZhLCBjaGllZiBlY29ub21pc3QgYXQgQWxmYSBCYW5rIGluIE1vc2Nvdy4gIkl0J3MgaGFyZCB0byBlc3RpbWF0ZSB0aGUgZWZmZWN0IHJpZ2h0IG5vdyBiZWNhdXNlIHdlIGRvbid0IGtub3cgd2hhdCB0aGV5IHdpbGwgYmUuIiBPbiBUaHVyc2RheSwgdGhlIFUuUy4gc2xhcHBlZCBhc3NldCBmcmVlemVzIG9uIGZvdXIgYnVzaW5lc3NtZW4gbGlua2VkIGNsb3NlbHkgdG8gUHV0aW4gYXMgd2VsbCBhcyBhIFJ1c3NpYW4gYmFuayB0aGF0IHByb3ZpZGVzIHRoZW0gc3VwcG9ydC4gSWYgUHV0aW4gZG9lcyBub3QgYmFjayBkb3duIG92ZXIgQ3JpbWVhLCBhcyBtb3N0IGV4cGVjdCwgdGhvc2Ugc2FuY3Rpb25zIGNvdWxkIGJyb2FkZW4gZnVydGhlciBpbiBjb21pbmcgd2Vla3MuIFJ1c3NpYSdzIGVjb25vbXkgd2FzIGFscmVhZHkgd2VhayBnb2luZyBpbnRvIHRoZSBjcmlzaXMsIGV4cGFuZGluZyBvbmx5IDEuMyBwZXJjZW50IGxhc3QgeWVhci4gRm9yIHRoaXMgeWVhciwgZm9yZWNhc3RzIGZvciBncm93dGggb2YgYWJvdXQgMiBwZXJjZW50IGhhdmUgYmVlbiB3cml0dGVuIG9mZiBhbHRvZ2V0aGVyLCB3aXRoIFB1dGluJ3MgYWR2aXNlciwgQWxleGVpIEt1ZHJpbiwgZXhwZWN0aW5nIG5vIGdyb3d0aCBhdCBhbGwuIFRoZSBydWJsZSBoYXMgbG9zdCA5IHBlcmNlbnQgYWdhaW5zdCB0aGUgZG9sbGFyIGluIGxlc3MgdGhhbiB0aHJlZSBtb250aHMuIFRoYXQgd2lsbCBtYWtlIGltcG9ydHMgbW9yZSBleHBlbnNpdmUgZm9yIGF2ZXJhZ2UgUnVzc2lhbnMuIEluIGEgYmlkIHRvIHN1cHBvcnQgdGhlIGN1cnJlbmN5LCB0aGUgY2VudHJhbCBiYW5rIHJhaXNlZCBpdHMgbWFpbiBpbnRlcmVzdCByYXRlIHNoYXJwbHkgbGFzdCB3ZWVrIGZyb20gNS41IHRvIDcgcGVyY2VudCwgYnV0IHRoYXQgd2lsbCBodXJ0IHRoZSBlY29ub215LCB0b28sIGJ5IG1ha2luZyBsb2FucyBtb3JlIGV4cGVuc2l2ZS4gSW52ZXN0b3JzIHRvb2sgJDM1IGJpbGxpb24gb3V0IG9mIFJ1c3NpYSBpbiBKYW51YXJ5IGFuZCBGZWJydWFyeSDigJQgYWJvdXQgaGFsZiBhcyBtdWNoIGFzIGluIHRoZSBlbnRpcmUgcHJlY2VkaW5nIHllYXIuIFRoZSBvdXRmbG93cyBjb3VsZCBzb2FyIHRvICQ1MCBiaWxsaW9uIHBlciBxdWFydGVyIGlmIHNhbmN0aW9ucyBnZXQgdG91Z2hlciwgS3VkcmluIGhhcyB3YXJuZWQuIFRoZSBiaWcgcmlzayBmb3IgUnVzc2lhIGlzIGlmIHRoZSBVLlMuIGFuZCBFdXJvcGUgZXhwYW5kIHRoZWlyIHNhbmN0aW9ucyB0byBtb3JlIGFnZ3Jlc3NpdmVseSB0YXJnZXQgdHJhZGUgcmVsYXRpb25zLiBUaGF0IHdvdWxkIGJlIGEgbGFzdCByZXNvcnQsIGF0IGxlYXN0IGZvciBFdXJvcGUsIHdoaWNoIGhhcyBhIGxvdCB0byBsb3NlIGl0c2VsZiDigJQgaXQgaW1wb3J0cyBhIHRoaXJkIG9mIGl0cyBnYXMgZnJvbSBSdXNzaWFuIGFuZCBoYXMgc3Ryb25nIHRyYWRlcyB0aWVzLiBCdXQgZXZlbiBpZiBvdXRyaWdodCB0cmFkZSBlbWJhcmdvZXMgYXJlIGF2b2lkZWQsIHRoZSByaXNrIG9mIHBvc3NpYmxlIHNhbmN0aW9ucyBpcyBpdHNlbGYgZGFtYWdpbmcuIEludmVzdGluZyBvciBsZW5kaW5nIGluIFJ1c3NpYSB3aWxsIGNhcnJ5IGhpZ2hlciByaXNrcywgaW52ZXN0bWVudCBkZWNpc2lvbnMgd2lsbCBiZSBkZWxheWVkIGFuZCBpbnZlc3RvcnMgd2lsbCBmZWVsIGluY2xpbmVkIHRvIGtlZXAgb24gc2VsbGluZyBzdG9ja3MsIHNheXMgQ2hhcmxpZSBSb2JlcnRzb24sIGFuIGFuYWx5c3QgYXQgUmVuYWlzc2FuY2UgQ2FwaXRhbCBpbiBMb25kb24uIEF0IGxlYXN0IHB1YmxpY2x5LCBSdXNzaWFuIHR5Y29vbnMgYXJlIGtlZXBpbmcgYSBsb3cgcHJvZmlsZS4gQXQgdGhlIGJ1c2luZXNzIGdyb3VwIG1lZXRpbmcgY2hhaXJlZCBieSBQdXRpbiBvbiBUaHVyc2RheSwgQWxleGVpIE1vcmRhc2hvdiwgd29ydGggYXJvdW5kICQxMyBiaWxsaW9uLCBhbmQgRG1pdHJ5IFB1bXB5YW5za3ksIHdvcnRoICQyIGJpbGxpb24sIGRpZCBub3QgdXR0ZXIgYSB3b3JkIG9mIGNvbmNlcm4gb3IgY29tcGxhaW50IOKAlCBldmVuIHRob3VnaCB0aGVpciBjb21wYW5pZXMgaGF2ZSBiZWVuIGdldHRpbmcgc2xhbW1lZCBpbiBzdG9jayBtYXJrZXRzLiBTaGFyZXMgaW4gTW9yZGFzaG92J3MgU2V2ZXJzdGFsLCBSdXNzaWEncyBsYXJnZXN0IHN0ZWVsIGNvbXBhbnksIGRyb3BwZWQgMTMgcGVyY2VudCB0aGlzIG1vbnRoLCBjdXR0aW5nIHRoZSBjb21wYW55J3MgY2FwaXRhbGl6YXRpb24gYnkgYWJvdXQgJDkwMCBtaWxsaW9uLiBTdG9ja3MgaW4gUHVtcHlhbnNreSdzIHBpcGUgcHJvZHVjZXIgVE1LIGxvc3QgMTkgcGVyY2VudCB0aGlzIG1vbnRoLCB3aXRoIHRoZSBjb21wYW55IGxvc2luZyBtb3JlIHRoYW4gJDUwMCBtaWxsaW9uIG9mIGl0cyBtYXJrZXQgdmFsdWUuIFRoZSB0eWNvb25zJyBzaWxlbmNlIHN0ZW1zIGZyb20gYSBkZWFsIHRoZXkgc3RydWNrIHdpdGggUHV0aW4gbW9yZSB0aGFuIGEgZGVjYWRlIGFnbyB0byBnaXZlIHVwIGFueSBwb2xpdGljYWwgYW1iaXRpb25zIGluIGV4Y2hhbmdlIGZvciBhIGZyZWUgaGFuZCBpbiB0aGVpciBidXNpbmVzcyBhZmZhaXJzLiBTaW5jZSB0aGUgYXJyZXN0IGFuZCBpbXByaXNvbm1lbnQgb2YgTWlraGFpbCBLaG9kb3Jrb3Zza3kgaW4gMjAwMywgbm8gYmlsbGlvbmFpcmUgaGFzIHZlbnR1cmVkIHRvIHF1ZXN0aW9uIFB1dGluJ3MgZnVuZGFtZW50YWwgcG9saWNpZXMuIE1ldGFscyB0eWNvb24gVmxhZGltaXIgUG90YW5pbiwgd2hvIGlzIGJlbGlldmVkIHRvIGJlIHdvcnRoICQxNCBiaWxsaW9uLCBzYXlzIGhlJ2QgInRob3VnaHQgYSBsb25nIHRpbWUgYWdvIGFib3V0IHdoYXQgd2UncmUgZ29pbmcgdG8gZG8gaW4gY2FzZSBzb21lIHNvcnQgb2Ygc2FuY3Rpb25zIGFyZSBpbnRyb2R1Y2VkLiIgSGUgc2F5cyBoaXMgY29tcGFuaWVzLCB3aGljaCBpbmNsdWRlIE5vcmlsc2sgTmlja2VsLCBhcmUgdXNpbmcgIm11bHRpcGxlIGN1cnJlbmNpZXMiIHRvIGRpdmVyc2lmeSByaXNrLiBQb3RhbmluLCBob3dldmVyLCBpbnNpc3RzIHRoYXQgbmVpdGhlciBoZSBub3IgaGlzIHBhcnRuZXJzIGV4cGVjdCBzYW5jdGlvbnMgdG8gZ2V0IHNvIHRvdWdoIHRoYXQgdGhleSB3b3VsZCBodXJ0IHRyYWRlLiBOaWtvbGFpIE5pa29sYXlldiwgd2hvIG93bnMgYSBjb25zdWx0aW5nIGJ1c2luZXNzIGFzIHdlbGwgYXMgaG90ZWxzIG9uIFJ1c3NpYSdzIEJsYWNrIFNlYSBjb2FzdCwgZGlzbWlzc2VkIHRoZSBmZWFycyBvZiB3aWRlLXJhbmdpbmcgdHJhZGUgZW1iYXJnb2VzLiBFdXJvcGVhbiBjb21wYW5pZXMgZXhwb3J0IDEyMyBiaWxsaW9uICgkMTcwIGJpbGxpb24pIHRvIFJ1c3NpYSBpbiAyMDEyLiBTbyBpZiB0aGV5IHdlcmUgdG9sZCB0byBjdXJiIG9yIHN0b3AgdGhlaXIgZXhwb3J0cyB0byBSdXNzaWEsIHRoZXkgd291bGQgc3VmZmVyIGh1Z2VseSwgTmlrb2xheWV2IHNhaWQuICJUaGVzZSBjb21wYW5pZXMgd2lsbCBnZXQgZ2FwaW5nIGhvbGVzIGluIHRoZWlyIHNhbGVzLCIgc2FpZCBOaWtvbGF5ZXYuICJXaG8gaXMgZ29pbmcgdG8gc3VmZmVyIG1vcmUgaGVyZT8iIEluZGVwZW5kZW50IGVjb25vbWlzdHMgc2F5IFJ1c3NpYSBpbiBmYWN0IGhhcyBtb3JlIHRvIGxvc2UgZWNvbm9taWNhbGx5IGZyb20gYSB0aXQtZm9yLXRhdCBjYW1wYWlnbiBvZiBzYW5jdGlvbnMsIG1haW5seSBiZWNhdXNlIEV1cm9wZWFuIGFuZCBVLlMuIGNvbXBhbmllcyBoYXZlIHN0cm9uZyB0cmFkZSB0aWVzIHdpdGggb3RoZXIgcmVnaW9ucyBhcyB3ZWxsLCBzdWNoIGFzIEFzaWEgYW5kIExhdGluIEFtZXJpY2EuIEJ1dCB0aGV5IHNheSBpdCBpcyBoYXJkIHRvIGltYWdpbmUgdGhhdCBSdXNzaWEgY291bGQgZ2V0IGhpdCB3aXRoIGNyaXBwbGluZyBlY29ub21pYyBzYW5jdGlvbnMgbGlrZSBOb3J0aCBLb3JlYSBvciBJcmFuIGp1c3QgYmVjYXVzZSBpdHMgZWNvbm9teSBpcyBzbyBtdWNoIG1vcmUgaW50ZXJ0d2luZWQgd2l0aCB0aGF0IG9mIHRoZSBXZXN0LiBSdXNzaWEgaXMgdGhlIHdvcmxkJ3MgbGFyZ2VzdCBlbmVyZ3kgZXhwb3J0ZXIsIGFjY291bnRpbmcgZm9yIGEgdGhpcmQgb2YgRXVyb3BlJ3MgY29uc3VtcHRpb24sIGFjY29yZGluZyB0byBvaWwgY29tcGFueSBCUC4gSXQgaXMgYWxzbyB0aGUgd29ybGQncyBsYXJnZXN0IGV4cG9ydGVyIG9mIGluZHVzdHJpYWwgbWV0YWxzLCBtYWtpbmcgZXhwb3J0cyBmcm9tIGNvbXBhbmllcyBsaWtlIFNldmVyc3RhbCBjcnVjaWFsIGZvciBnbG9iYWwgcHJvZHVjZXJzIHdoZXRoZXIgdGhleSBhcmUgbWFraW5nIGNhcnMgb3IgYWlycGxhbmVzLiAiVGhlIHdvcmxkIGNvdWxkIGFmZm9yZCB0byBsb3NlIGEgbWlsbGlvbiBiYXJyZWxzIG9mIElyYW5pYW4gb2lsLCIgUm9iZXJ0c29uIHNhaWQsIHJlZmVycmluZyB0byBzYW5jdGlvbnMgYWdhaW5zdCBJcmFuIGluIDE5NzkuICJXaXRoIEV1cm9wZSBhbHJlYWR5IHVwc2V0IHRoYXQgdGhlaXIgZW5lcmd5IGNvc3RzIGFyZSBoaWdoZXIgdGhhbiB0aGUgVS5TLiwgKGl0J3MpIGhhcmQgdG8gc2VlIEV1cm9wZSBnZXR0aW5nIG1vcmUgc2VyaW91cyBoZXJlLiI=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUTd3DSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDBmOTAyY2UxYzgzZTgyOTY=</field><field name="symbol" class="java.lang.String">rO0ABXQABE1TQ0E=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUTjApCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4mZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4mZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4YUeuFHrh</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4ZmZmZmZm</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3TMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAT7A==</field><field name="id" class="java.lang.String">rO0ABXQAEDM1MTc5Nzc3ZmQ2Y2Q1ZjY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mM0SAAAA==</field></document></documents><date>2015-05-07T05:41:35-0500</date></cacheEntry>
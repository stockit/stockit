<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0EE9UaGUgZm91ciByZXN0YXVyYW50cyBvcmRlcmVkIHRvIHN1c3BlbmQgb3BlcmF0aW9ucyBieSB0aGUgc3RhdGUgZm9vZCBzYWZldHkgd2F0Y2hkb2cgaW5jbHVkZWQgdGhlIGZpcnN0IGV2ZXIgTWNEb25hbGRzIGluIFJ1c3NpYSB3aGljaCBvcGVuZWQgaW4gdGhlIGxhc3QgZGF5cyBvZiB0aGUgU292aWV0IFVuaW9uIGFuZCB3aGljaCB0aGUgY29tcGFueSBzYXlzIGlzIGl0cyBtb3N0IGZyZXF1ZW50ZWQgaW4gdGhlIHdvcmxkIE9uIFdlZG5lc2RheSBldmVuaW5nIHRoZSBsaWdodHMgd2VyZSBvZmYgaW5zaWRlIHRoZSByZXN0YXVyYW50IGFuZCBhIHNpZ24gb24gdGhlIGRvb3Igc2FpZCBpdCB3YXMgc2h1dCBmb3IgdGVjaG5pY2FsIHJlYXNvbnMKClJ1c3NpYW4gSW5zcGVjdG9ycyBUaGUgd2F0Y2hkb2cga25vd24gaW4gUnVzc2lhIGFzIFJvc3BvdHJlYm5hZHpvciBzYWlkIGluIGEgc3RhdGVtZW50IGluc3BlY3RvcnMgaGFkIGZvdW5kIG51bWVyb3VzIHNhbml0YXJ5IHZpb2xhdGlvbnMgQSBzb3VyY2UgYXQgdGhlIHdhdGNoZG9nIHNhaWQgaXQgaGFkIHNlYWxlZCBvZmYgcGFydHMgb2YgdGhlIHJlc3RhdXJhbnRzIHByZW1pc2VzIEFza2VkIGlmIHRoZSBkZWNpc2lvbiB3YXMgYSByZXRhbGlhdGlvbiBmb3IgdGhlIFVuaXRlZCBTdGF0ZXMgYW5kIG90aGVyIGNvdW50cmllcyBpbXBvc2luZyBlY29ub21pYyBzYW5jdGlvbnMgb24gTW9zY293IG92ZXIgdGhlIGNyaXNpcyBpbiBVa3JhaW5lIHRoZSBzb3VyY2UgZGVjbGluZWQgdG8gY29tbWVudCBhbmQgcmVmZXJyZWQgdG8gdGhlIHN0YXRlbWVudCBhYm91dCBzYW5pdGFyeSB2aW9sYXRpb25zIE1jRG9uYWxkcyBoZWFkIG9mZmljZSBpbiBJbGxpbm9pcyBzYWlkIGluIGEgc3RhdGVtZW50IFdlIGFyZSBjbG9zZWx5IHN0dWR5aW5nIHRoZSBzdWJqZWN0IG9mIHRoZSBkb2N1bWVudHMgdG8gZGVmaW5lIHdoYXQgc2hvdWxkIGJlIGRvbmUgdG8gcmVvcGVuIHRoZSByZXN0YXVyYW50cyBhcyBzb29uIGFzIHBvc3NpYmxlIFJ1c3NpYXMgZmlyc3QgTWNEb25hbGRzIG9wZW5lZCBvbiBNb3Njb3dzIFB1c2hraW4gU3F1YXJlIGluIDE5OTAgd2hlbiBpdCB3YXMgdmlld2VkIGFzIGEgc2lnbiB0aGF0IHVuZGVyIHJlZm9ybWlzdCBTb3ZpZXQgbGVhZGVyIE1pa2hhaWwgR29yYmFjaGV2IENvbGQgV2FyIHRlbnNpb25zIHdpdGggdGhlIFVuaXRlZCBTdGF0ZXMgd2VyZSBzdGFydGluZyB0byB0aGF3IEl0IHdhcyBodWdlbHkgcG9wdWxhciB3aXRoIFJ1c3NpYW5zIGxvbmcgbGluZXMgZm9ybWVkIG91dHNpZGUgYW5kIHNvbWUgcGVvcGxlIGV2ZW4gaGFkIHRoZWlyIHdlZGRpbmcgcmVjZXB0aW9ucyB0aGVyZQoKSGFwcHkgTWVtb3JpZXMgV2UgaGF2ZSBtYW55IGhhcHB5IG1lbW9yaWVzIG9mIHRoaXMgcGxhY2Ugc2FpZCBhIG1hbiB3aG8gZ2F2ZSBoaXMgbmFtZSBhcyBWYWRpbSBIZSBoYWQgY29tZSB3aXRoIGhpcyB3aWZlIE5hdGFseWEgdG8gY2VsZWJyYXRlIGhpcyA3N3RoIGJpcnRoZGF5IGF0IE1jRG9uYWxkcyBidXQgd2FzIGZvcmNlZCBpbnN0ZWFkIHRvIGJ1eSBhIGNvZmZlZSBlbHNld2hlcmUgYW5kIGRyaW5rIGl0IHNlYXRlZCBhdCBhIGNvZmZlZSB0YWJsZSBvdXRzaWRlIHRoZSBzaHV0dGVyZWQgcmVzdGF1cmFudCBBc2tlZCBhYm91dCB0aGUgYWxsZWdhdGlvbnMgb2Ygc2FuaXRhcnkgdmlvbGF0aW9ucyBoZSBzYWlkIEl0cyBhIGxpZSBXZXZlIGJlZW4gaGVyZSBzaW5jZSBpdCBmaXJzdCBvcGVuZWQgYW5kIG5ldmVyIGdvdCBpbGwgb25jZSBBbm90aGVyIG9mIHRoZSByZXN0YXVyYW50cyBjbG9zZWQgb24gdGhlIG9yZGVycyBvZiB0aGUgZm9vZCBzYWZldHkgd2F0Y2hkb2cgaXMgb24gTW9zY293cyBNYW5lemggU3F1YXJlIHVuZGVyIHRoZSB3YWxscyBvZiB0aGUgS3JlbWxpbiB3aGVyZSBQcmVzaWRlbnQgVmxhZGltaXIgUHV0aW4gaGFzIGhpcyBvZmZpY2VzICBObyB0byBCaWcgTWFjIE1jRG9uYWxkcyBzZWVuIGFzIGEgc3ltYm9sIG9mIHRoZSBVUyBnbG9iYWwgZXhwYW5zaW9uIGhhcyBiZWVuIGNyaXRpY2l6ZWQgYnkgUnVzc2lhbiBuYXRpb25hbGlzdHMgUHJvbWluZW50IHBvbGl0aWNpYW4gVmxhZGltaXIgWmhpcmlub3Zza3kgY2FsbGVkIGZvciB0aGUgY2hhaW4gdG8gYmUgc2h1dCBkb3duIGFjcm9zcyBSdXNzaWEgYWZ0ZXIgdGhlIGNvbXBhbnkgd2l0aGRyZXcgZnJvbSBDcmltZWEgcGVuaW5zdWxhIGluIEFwcmlsIGZvbGxvd2luZyBNb3Njb3dzIGFubmV4YXRpb24gb2YgdGhlIHJlZ2lvbiBmcm9tIFVrcmFpbmUgU29tZSBjb25zdW1lcnMgc2hhcmUgdGhhdCB2aWV3IEkgYW0gZm9yIE1jRG9uYWxkcyBiZWluZyB3aXBlZCBmcm9tIHRoZSBmYWNlIG9mIHRoZSBlYXJ0aCBzYWlkIFZsYWRpbWlyIFpvbG90c2V2IDIwIHN0dWR5aW5nIHRvIGJlIGEgcGlhbmlzdCB3aG8gd2FzIG5lYXIgdGhlIFB1c2hraW4gU3F1YXJlIHJlc3RhdXJhbnQgSXQgYmVjYW1lIGNsZWFyIGxhc3QgbW9udGggdGhhdCBNY0RvbmFsZHMgd2FzIHVuZGVyIGhlaWdodGVuZWQgc2NydXRpbnkgZnJvbSB0aGUgUnVzc2lhbiBzdGF0ZSB3aGVuIHRoZSB3YXRjaGRvZyBzYWlkIGl0IGhhZCBpZGVudGlmaWVkIHZpb2xhdGlvbnMgaW4gcHJvZHVjdCBxdWFsaXR5IHRoYXQgcmFpc2VkIHF1ZXN0aW9ucyBhYm91dCB0aGUgc2FmZXR5IG9mIGZvb2QgYWNyb3NzIHRoZSBjaGFpbiBGb3JlaWduIGZvb2QgcHJvZHVjZXJzIHdobyBoYXZlIGZhbGxlbiBmb3VsIG9mIHRoZSB3YXRjaGRvZyBpbiB0aGUgcGFzdCBoYXZlIGFjY3VzZWQgaXQgb2YgYWN0aW5nIGluIHRoZSBwb2xpdGljYWwgaW50ZXJlc3RzIG9mIHRoZSBLcmVtbGluIGFuIGFsbGVnYXRpb24gaXQgZGVuaWVzIFRoZSB3YXRjaGRvZyBiYW5uZWQgR2VvcmdpYW4gd2luZSBhcyBUYmlsaXNpIHN0cmVuZ3RoZW5lZCB0aWVzIHdpdGggV2FzaGluZ3RvbiBhbmQgc3Bpcml0cyBmcm9tIE1vbGRvdmEgYWZ0ZXIgdGhlIGZvcm1lciBTb3ZpZXQgcmVwdWJsaWMgYm9vc3RlZCBpdHMgZHJpdmUgdG8gcGFydG5lciB3aXRoIHRoZSBFdXJvcGVhbiBVbmlvbgoKUG9saXRpY2FsIFJlcHJlc3Npb24gSmFudXN6IFBpZWNob2NpbnNraSB0aGUgZGVwdXR5IHByaW1lIG1pbmlzdGVyIG9mIFBvbGFuZCBzYWlkIGxhc3QgbW9udGggdGhhdCBhIGRlY2lzaW9uIGJ5IHRoZSB3YXRjaGRvZyB0byBiYW4gbW9zdCBQb2xpc2ggZnJ1aXQgYW5kIHZlZ2V0YWJsZSBpbXBvcnRzIHdhcyBhbiBhY3Qgb2YgcG9saXRpY2FsIHJlcHJlc3Npb24gYnkgdGhlIEtyZW1saW4gTWNEb25hbGRzIG9wZXJhdGVzIDQzOCByZXN0YXVyYW50cyBpbiBSdXNzaWEgYW5kIHNlZXMgdGhlIGNvdW50cnkgYXMgb25lIG9mIGl0cyB0b3Agc2V2ZW4gbWFqb3IgbWFya2V0cyBvdXRzaWRlIHRoZSBVbml0ZWQgU3RhdGVzIGFuZCBDYW5hZGEgYWNjb3JkaW5nIHRvIGl0cyAyMDEzIGFubnVhbCByZXBvcnQgUnVzc2lhIGhhcyBiZWVuIGEgdmVyeSBicmlnaHQgc3BvdCBmb3IgTWNEb25hbGRzIHNhaWQgTWFyayBLYWxpbm93c2tpIGEgcmVzdGF1cmFudCBhbmFseXN0IGZvciBKYW5uZXkgQ2FwaXRhbCBNYXJrZXRzIFJ1c3NpYSBhY2NvdW50cyBmb3Igcm91Z2hseSAxMCBwZXJjZW50IG9mIE1jRG9uYWxkcyBvcGVyYXRpbmcgcHJvZml0IGZyb20gRXVyb3BlIHdoaWNoIGNvbnRyaWJ1dGVzIGFib3V0IG9uZXRoaXJkIG9mIGZhc3Rmb29kIGNoYWlucyBvdmVyYWxsIG9wZXJhdGluZyBwcm9maXQgS2FsaW5vd3NraSBzYWlkIEVhcmxpZXIgdGhpcyBtb250aCBSdXNzaWEgYmFubmVkIGFsbCBtZWF0IGZpc2ggZGFpcnkgZnJ1aXQgYW5kIHZlZ2V0YWJsZSBpbXBvcnRzIGZyb20gdGhlIFVuaXRlZCBTdGF0ZXMgdGhlIEV1cm9wZWFuIFVuaW9uIE5vcndheSBDYW5hZGEgYW5kIEF1c3RyYWxpYSBmb3Igb25lIHllYXIgaW4gcmV0YWxpYXRpb24gZm9yIHRoZSBzYW5jdGlvbnMgaW1wb3NlZCBieSB0aGVzZSBjb3VudHJpZXMgb3ZlciBVa3JhaW5lIEhvd2V2ZXIgc29tZSBvZiB0aGVzZSByZXN0cmljdGlvbnMgd2VyZSBlYXNlZCBvbiBXZWRuZXNkYXkgdG8gYWxsb3cgdGhlIGltcG9ydCBvZiBzb21lIGl0ZW1zIHRoYXQgYXJlIHVzZWZ1bCB0byBSdXNzaWFzIG93biBmb29kIGFuZCBhZ3JpY3VsdHVyZSBpbmR1c3RyaWVzIHN1Y2ggYXMgdmVnZXRhYmxlcyBmb3IgcGxhbnRpbmcgYW5kIGhhdGNobGluZ3Mgb2Ygc2FsbW9uIGFuZCB0cm91dHQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0xMi0wM1QwMDowMDowMFogVE8gMjAxNC0wNy0xMFQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDI0Nzg=</field><field name="title" class="java.lang.String">rO0ABXQAN09iYW1hIEFubm91bmNlcyBOZXcgVVMgU2FuY3Rpb25zIG9uIFJ1c3NpYSBPdmVyIFVrcmFpbmU=</field><field name="content" class="java.lang.String">rO0ABXQXQ09uIHRoZSBncm91bmQsIHByby1Nb3Njb3cgcmViZWxzIHNob3dlZCBubyBzaWduIG9mIGN1cmJpbmcgdGhlaXIgdXByaXNpbmcsIHNlaXppbmcgcHVibGljIGJ1aWxkaW5ncyBpbiBhbm90aGVyIHRvd24gaW4gdGhlIGVhc3QuIEludGVyZmF4IG5ld3MgYWdlbmN5IHJlcG9ydGVkIHRoYXQgdGhlIG1heW9yIG9mIGEgZnVydGhlciBtYWpvciBlYXN0ZXJuIGNpdHksIEtoYXJraXYsIGhhZCBiZWVuIHNob3QgYW5kIHdhcyB1bmRlcmdvaW5nIGFuIG9wZXJhdGlvbi4gSXQgZ2F2ZSBubyBkZXRhaWxzIG9mIHRoZSBzaG9vdGluZy4gR2VybWFueSBkZW1hbmRlZCBSdXNzaWEgYWN0IHRvIGhlbHAgc2VjdXJlIHRoZSByZWxlYXNlIG9mIHNldmVuIHVuYXJtZWQgRXVyb3BlYW4gbWlsaXRhcnkgbW9uaXRvcnMsIGluY2x1ZGluZyBmb3VyIEdlcm1hbnMsIHdobyBoYXZlIGJlZW4gaGVsZCBieSB0aGUgcmViZWxzIHNpbmNlIEZyaWRheS4gVGhlIG5ldyBVLlMuIHNhbmN0aW9ucywgdG8gYmUgb3V0bGluZWQgaW4gZGV0YWlsIGxhdGVyIG9uIE1vbmRheSwgd2lsbCBhZGQgbW9yZSBwZW9wbGUgYW5kIGZpcm1zIHRvIGEgbGlzdCBhbm5vdW5jZWQgbGFzdCBtb250aCBvZiBmaWd1cmVzIHdob3NlIGFzc2V0cyBhcmUgZnJvemVuIGFuZCB3aG8gYXJlIGRlbmllZCB2aXNhcyB0byB0cmF2ZWwgdG8gdGhlIFVuaXRlZCBTdGF0ZXMuIFRoZSBFdXJvcGVhbiBVbmlvbiBpcyBhbHNvIGV4cGVjdGVkIHRvIGFkZCB0YXJnZXRzIHRvIGl0cyBSdXNzaWEgc2FuY3Rpb25zIGxpc3Qgb24gTW9uZGF5LiBBbWJhc3NhZG9ycyBmcm9tIHRoZSAyOCBFVSBzdGF0ZXMgbWV0IGluIEJydXNzZWxzIGFuZCBhbiBFVSBkaXBsb21hdCBzYWlkIHRoZXkgd2VyZSBleHBlY3RlZCB0byBhZGQgYXJvdW5kIDE1IG5ldyBuYW1lcy4gV2FzaGluZ3RvbiB3aWxsIGFsc28gdGFyZ2V0IHNvbWUgaGlnaCB0ZWNoIGV4cG9ydHMsIE9iYW1hIHNhaWQuIEJ1dCB0aGUgbWVhc3VyZXMgZG8gbm90IHlldCBpbmNsdWRlIHRoZSB3aWRlciBzYW5jdGlvbnMsIHN1Y2ggYXMgY3VyYnMgb24gdGhlIFJ1c3NpYW4gZmluYW5jaWFsIGFuZCBlbmVyZ3kgc2VjdG9ycywgdGhhdCB3b3VsZCBkbyB0aGUgbW9zdCBzZXJpb3VzIGRhbWFnZSB0byBSdXNzaWEncyBlY29ub215LiAiV2UgYXJlIGtlZXBpbmcgaW4gcmVzZXJ2ZSBhZGRpdGlvbmFsIHN0ZXBzIHRoYXQgd2UgY291bGQgdGFrZSBzaG91bGQgdGhlIHNpdHVhdGlvbiBlc2NhbGF0ZSBmdXJ0aGVyLCIgT2JhbWEgc2FpZCwgYWNrbm93bGVkZ2luZyB0aGF0IGhlIGRpZCBub3Qga25vdyBpZiB0aGUgbWVhc3VyZXMgaGUgaGFzIG9yZGVyZWQgc28gZmFyIHdpbGwgd29yay4gVS5TLiBvZmZpY2lhbHMgaGF2ZSBzYWlkIHRoZSBuZXcgbGlzdCB3b3VsZCBpbmNsdWRlIFB1dGluJ3MgImNyb25pZXMiIGluIHRoZSBob3BlIG9mIGNoYW5naW5nIGhpcyBiZWhhdmlvci4gIlRoZSBnb2FsIGlzIG5vdCB0byBnbyBhZnRlciBNci4gUHV0aW4gcGVyc29uYWxseS4gVGhlIGdvYWwgaXMgdG8gY2hhbmdlIGhpcyBjYWxjdWx1cyB3aXRoIHJlc3BlY3QgdG8gaG93IHRoZSBjdXJyZW50IGFjdGlvbnMgdGhhdCBoZSdzIGVuZ2FnaW5nIGluIGluIFVrcmFpbmUgY291bGQgaGF2ZSBhbiBhZHZlcnNlIGltcGFjdCBvbiB0aGUgUnVzc2lhbiBlY29ub215IG92ZXIgdGhlIGxvbmcgaGF1bCwiIE9iYW1hIHNhaWQgaW4gTWFuaWxhIGR1cmluZyBhIHRyaXAgdG8gQXNpYS4gIlRvIGVuY291cmFnZSBoaW0gdG8gYWN0dWFsbHkgd2FsayB0aGUgd2FsayBhbmQgbm90IGp1c3QgdGFsayB0aGUgdGFsayB3aGVuIGl0IGNvbWVzIHRvIGRpcGxvbWF0aWNhbGx5IHJlc29sdmluZyB0aGUgY3Jpc2lzIGluIFVrcmFpbmUuIiBOZXZlcnRoZWxlc3MsIHN1Y2ggbWVhc3VyZXMgaGF2ZSBkb25lIG5vdGhpbmcgc28gZmFyIHRvIGRldGVyIFB1dGluLCB3aG8gb3ZlcnR1cm5lZCBkZWNhZGVzIG9mIHBvc3QtQ29sZCBXYXIgZGlwbG9tYWN5IGxhc3QgbW9udGggdG8gc2VpemUgYW5kIGFubmV4IFVrcmFpbmUncyBDcmltZWEgcGVuaW5zdWxhIGFuZCBoYXMgc2luY2UgbWFzc2VkIHRlbnMgb2YgdGhvdXNhbmRzIG9mIHRyb29wcyBvbiB0aGUgZnJvbnRpZXIuIEhlIGFjdGVkIGFmdGVyIFVrcmFpbmUncyBwcm8tUnVzc2lhbiBwcmVzaWRlbnQgd2FzIG91c3RlZCBpbiBGZWJydWFyeSBieSBwcm90ZXN0ZXJzIGRlbWFuZGluZyBjbG9zZXIgbGlua3Mgd2l0aCBFdXJvcGUuIE1vc2NvdyBoYXMgaW4gdGhlIHBhc3Qgc2hydWdnZWQgb2ZmIHRhcmdldGVkIHNhbmN0aW9ucyBsaWtlIHRob3NlIE9iYW1hIGFubm91bmNlZCBvbiBNb25kYXkgYXMgcG9pbnRsZXNzLiBXYXNoaW5ndG9uIHNheXMgYXJtZWQgcmViZWxzIOKAlCB3aG8gaGF2ZSBjYXB0dXJlZCB0b3ducyBhbmQgZ292ZXJubWVudCBidWlsZGluZ3MgYWNyb3NzIGVhc3Rlcm4gVWtyYWluZSDigJQgYXJlIG9wZXJhdGluZyB1bmRlciB0aGUgZGlyZWN0aW9uIG9mIEtyZW1saW4gYWdlbnRzLiBSdXNzaWEgZGVuaWVzIGl0IGlzIGludm9sdmVkIGFuZCBzYXlzIHRoZSB1cHJpc2luZyBpcyBhIHNwb250YW5lb3VzIHJlc3BvbnNlIHRvIG9wcHJlc3Npb24gb2YgUnVzc2lhbiBzcGVha2VycyBieSBLaWV2LiDCoCBSRUJFTFMgVEFLRSBUT1dOIFRoZSByZWJlbHMgdG9vayBhbm90aGVyIHRvd24gb24gTW9uZGF5IG1vcm5pbmcsIHNlaXppbmcgdGhlIHBvbGljZSBoZWFkcXVhcnRlcnMgYW5kIG11bmljaXBhbCBhZG1pbmlzdHJhdGlvbiBidWlsZGluZyBpbiAgS29zdHlhbnR5bml2a2EsIGFuIGluZHVzdHJpYWwgY2l0eSBpbiB0aGUgZWFzdGVybiBEb25ldHNrIHJlZ2lvbi4gU2VwYXJhdGlzdHMgaW4gdGhlIHByb3ZpbmNlIGhhdmUgcHJvY2xhaW1lZCBhbiBpbmRlcGVuZGVudCAiUGVvcGxlJ3MgUmVwdWJsaWMgb2YgRG9uZXRzay4iIEEgUmV1dGVycyBwaG90b2dyYXBoZXIgYXQgdGhlIHNjZW5lIHNhdyBhYm91dCAyMCBndW5tZW4gY29udHJvbGxpbmcgdGhlIGFkbWluaXN0cmF0aW9uIGJ1aWxkaW5nLiBUaGUgSW50ZXJmYXggbmV3cyBhZ2VuY3kgcXVvdGVkIGEgc3Bva2Vzd29tYW4gZm9yIHRoZSBtYXlvciBvZiBLaGFya2l2LCBhbm90aGVyIGxhcmdlIGNpdHkgaW4gdGhlIGVhc3QsIGFzIHNheWluZyBoZSB3YXMgdW5kZXJnb2luZyBhbiBvcGVyYXRpb24gZm9yIGEgZ3Vuc2hvdCB3b3VuZCBpbiB0aGUgYmFjay4gSXQgIHNhaWQgbm8gZnVydGhlciBkZXRhaWxzIG9mIHRoZSBpbmNpZGVudCB3ZXJlIGF2YWlsYWJsZS4gT24gU3VuZGF5IHRoZSBzZXBhcmF0aXN0cyBwYXJhZGVkIGVpZ2h0IHVuYXJtZWQgRXVyb3BlYW4gbWlsaXRhcnkgbW9uaXRvcnMgYmVmb3JlIGpvdXJuYWxpc3RzLiBPbmUsIGEgU3dlZGUgd2hvIGlzIGRpYWJldGljLCB3YXMgZnJlZWQgZm9yIG1lZGljYWwgcmVhc29ucyBidXQgZm91ciBHZXJtYW5zLCBhIEN6ZWNoLCBhIERhbmUgYW5kIGEgUG9sZSBhcmUgc3RpbGwgYmVpbmcgaGVsZCwgZGVzY3JpYmVkIGJ5IHRoZSByZWJlbCBsZWFkZXIgYXMgInByaXNvbmVycyBvZiB3YXIiIGFuZCBOQVRPIHNwaWVzLiBHZXJtYW4gQ2hhbmNlbGxvciBBbmdlbGEgTWVya2VsJ3Mgc3Bva2VzbWFuIFN0ZWZmZW4gU2llYmVydCBzYWlkIHRoZXkgd2VyZSBoZWxkICJhZ2FpbnN0IHRoZSBsYXcgYW5kIHdpdGhvdXQganVzdGlmaWNhdGlvbi4iICJXZSBhc2sgdGhlIFJ1c3NpYW4gZ292ZXJubWVudCB0byBhY3QgcHVibGljbHkgYW5kIGludGVybmFsbHkgZm9yIHRoZWlyIHJlbGVhc2UsIHRvIGRpc3RhbmNlIGl0c2VsZiBjbGVhcmx5IGZyb20gc3VjaCBhY3RzIGFuZCB0byB1c2UgaXRzIGluZmx1ZW5jZSBvbiBwcm8tUnVzc2lhbiBwZXJwZXRyYXRvcnMgYW5kIGZvcmNlcyBpbiBlYXN0ZXJuIFVrcmFpbmUgdG8gc2VjdXJlIHRoZWlyIHJlbGVhc2UuIiBBcm1lZCByZWJlbHMgYWxzbyBvY2N1cGllZCBEb25ldHNrIHRlbGV2aXNpb24gb24gU3VuZGF5IGFuZCBvcmRlcmVkIGl0IHRvIHN0YXJ0IGJyb2FkY2FzdGluZyBSdXNzaWFuIHN0YXRlIFRWLiBPYmFtYSBpcyB1bmRlciBwcmVzc3VyZSBmcm9tIG9wcG9zaXRpb24gUmVwdWJsaWNhbnMgYXQgaG9tZSB0byBtb3ZlIGZhc3RlciBvbiBzYW5jdGlvbnMuIEJ1dCBpbiB0YWtpbmcgd2hhdCBoZSBkZXNjcmliZWQgYXMgImNhbGlicmF0ZWQgc3RlcHMsIiBoZSBoYXMgZW1waGFzaXplZCB0aGUgbmVlZCB0byBhY3QgaW4gY29uY2VydCB3aXRoIEV1cm9wZWFuIGNvdW50cmllcywgd2hpY2ggaGF2ZSBtb3JlIGF0IHN0YWtlIGVjb25vbWljYWxseSBhbmQgYSBtb3JlIGN1bWJlcnNvbWUgcHJvY2VzcyBmb3IgdGFraW5nIGRlY2lzaW9ucy4gVGhlIEVVIGRvZXMgbW9yZSB0aGFuIDEwIHRpbWVzIGFzIG11Y2ggdHJhZGUgd2l0aCBSdXNzaWEgYXMgdGhlIFVuaXRlZCBTdGF0ZXMgYW5kIGJ1eXMgYSBxdWFydGVyIG9mIGl0cyBuYXR1cmFsIGdhcyBmcm9tIE1vc2Nvdy4gTW9zdCBFVSBkZWNpc2lvbnMgcmVxdWlyZSB1bmFuaW1pdHkgYW1vbmcgbWVtYmVyIHN0YXRlcy4gV2VzdGVybiBjb3VudHJpZXMgc2F5IHRoZSB0YXJnZXRlZCBzYW5jdGlvbnMgYXJlIGFscmVhZHkgaGF2aW5nIGFuIGVmZmVjdCBvbiBSdXNzaWEgYnkgc2NhcmluZyBpbnZlc3RvcnMgaW50byBwdWxsaW5nIG91dCBjYXBpdGFsLiBUaGUgY2VudHJhbCBiYW5rIGhhcyBiZWVuIGZvcmNlZCB0byBoaWtlIGludGVyZXN0IHJhdGVzIHRvIHByb3AgdXAgdGhlIHJ1YmxlIGFuZCBSdXNzaWFuIGZpcm1zIGFyZSBmaW5kaW5nIGl0IG1vcmUgZGlmZmljdWx0IGFuZCBjb3N0bHkgdG8gcmFpc2UgZnVuZHMuIFJ1c3NpYW4gc2hhcmVzIGRyb3BwZWQgb24gYW50aWNpcGF0aW9uIG9mIHRoZSBpbXBhY3Qgb2YgbmV3IHNhbmN0aW9ucy4gVGhlIHJ1YmxlLWRlbm9taW5hdGVkIE1JQ0VYIGluZGV4IHdhcyBkb3duIDEuMyBwZXJjZW50IGVhcmx5IG9uIE1vbmRheS4gVGhlIGNvc3Qgb2YgaW5zdXJpbmcgUnVzc2lhJ3MgZGVidCBhZ2FpbnN0IGRlZmF1bHQgcm9zZSB0byBpdHMgaGlnaGVzdCBsZXZlbCBzaW5jZSBOb3ZlbWJlciAyMDExLiBNb25kYXkncyBzYW5jdGlvbnMgYnVpbGQgb24gdGhvc2UgaW1wb3NlZCBvdmVyIENyaW1lYSBsYXN0IG1vbnRoLCB3aGljaCB3ZXJlIGRlbGliZXJhdGVseSBkZXNpZ25lZCB0byBwdW5pc2ggaW5kaXZpZHVhbHMgY2xvc2UgdG8gUHV0aW4gd2l0aG91dCBoYXZpbmcgd2lkZXIgaW1wYWN0IG9uIFJ1c3NpYSdzIGVjb25vbXkgb3IgaXRzIHRyYWRlIHdpdGggdGhlIFdlc3QuIFRoZSBuZXcgc2FuY3Rpb25zIGNvdWxkIHN0aWxsIGhhdmUgYSBncmVhdGVyIGltcGFjdCBieSB3aWRlbmluZyB0aGUgbmV0IHRvIGluY2x1ZGUgcGVyc29uYWwgdHJhbnNhY3Rpb25zIGJ5IHRoZSBoZWFkcyBvZiBiaWcgUnVzc2lhbiBjb21wYW5pZXMsIGFuZCB0aGUgcHJvc3BlY3Qgb2Ygc2VjdG9yYWwgc2FuY3Rpb25zIGNvbnRpbnVlcyB0byBob3ZlciBvdmVyIFJ1c3NpYW4gYnVzaW5lc3MgbW9yZSBnZW5lcmFsbHkuICJUaGUgaGVhZHMgb2YgUm9zbmVmdCBhbmQgR2F6cHJvbSBhcmUgcnVtb3JlZCB0byBiZSBvbiB0aGUgbGlzdCBvZiB0YXJnZXRzLCIgVXJhbHNpYiBiYW5rIGFuYWx5c3RzIHdyb3RlIGluIGEgbW9ybmluZyBub3RlLCByZWZlcnJpbmcgdG8gUnVzc2lhJ3MgdHdvIGJpZ2dlc3QgZmlybXMsIGl0cyBzdGF0ZSBvaWwgbWFqb3IgYW5kIG5hdHVyYWwgZ2FzIGV4cG9ydCBtb25vcG9seS4gIkVudGlyZSBzZWN0b3JzIG9mIHRoZSBlY29ub215IGNvdWxkIGJlIHRhcmdldGVkIGFzIHdlbGwuIEZ1cnRoZXIgc2FuY3Rpb25zIGZvciB0aGUgZW5lcmd5IGFuZCBiYW5raW5nIHNlY3RvcnMgY291bGQgY29udGludWUgdG8gaGFybSBzZW50aW1lbnQgaWYgYW5ub3VuY2VkIHRoaXMgd2VlaywiIHRoZXkgd3JvdGUsIHdoaWxlIGFkZGluZyB0aGF0IGl0IHdhcyBpbXBvc3NpYmxlIHRvIGFzc2VzcyB0aGUgaW1wYWN0IHVudGlsIG1lYXN1cmVzIHdlcmUgYW5ub3VuY2VkLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUWmtDiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDhlMjg0OTQ4MWVmM2ViODM=</field><field name="symbol" class="java.lang.String">rO0ABXQAA1BSTw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUWr2pSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7K4UeuFHs</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7tcKPXCj2</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7AAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7j1wo9cKP</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7j1wo9cKP</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAEeuA==</field><field name="id" class="java.lang.String">rO0ABXQAEGQ0OTVjZDlhMzgxMGY2NTE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mLQ0AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDE0NTY=</field><field name="title" class="java.lang.String">rO0ABXQAM1B1dGluIENyZWF0ZXMgRXgtU292aWV0IFRyYWRlIEJsb2MsIERlbmllcyBOZXcgVVNTUg==</field><field name="content" class="java.lang.String">rO0ABXQRm1J1c3NpYW4gUHJlc2lkZW50IFZsYWRpbWlyIFB1dGluIHNpZ25lZCBhIHRyZWF0eSB3aXRoIEthemFraHN0YW4gYW5kIEJlbGFydXMgb24gVGh1cnNkYXkgY3JlYXRpbmcgYSB2YXN0IHRyYWRpbmcgYmxvYyB3aGljaCBoZSBob3BlcyB3aWxsIGNoYWxsZW5nZSB0aGUgZWNvbm9taWMgbWlnaHQgb2YgdGhlIFVuaXRlZCBTdGF0ZXMsIHRoZSBFdXJvcGVhbiBVbmlvbiBhbmQgQ2hpbmEuIFB1dGluIGRlbmllcyB0aGUgZm9yZ2luZyBvZiB0aGUgRXVyYXNpYW4gRWNvbm9taWMgVW5pb24gd2l0aCB0d28gb3RoZXIgZm9ybWVyIFNvdmlldCByZXB1YmxpY3MsIGNvdXBsZWQgd2l0aCBSdXNzaWEncyBhbm5leGF0aW9uIG9mIENyaW1lYSBmcm9tIFVrcmFpbmUsIG1lYW5zIGhlIHdhbnRzIHRvIHJlYnVpbGQgYSBwb3N0LWNvbW11bmlzdCBTb3ZpZXQgVW5pb24gb3IgYXMgbXVjaCBvZiBpdCBhcyBoZSBjYW4uIEhlIGRvZXMsIGhvd2V2ZXIsIGludGVuZCB0aGUgYWxsaWFuY2UsIHdpdGggYSBtYXJrZXQgb2YgMTcwIG1pbGxpb24gcGVvcGxlLCBhIGNvbWJpbmVkIGFubnVhbCBHRFAgb2YgJDIuNyB0cmlsbGlvbiBhbmQgdmFzdCBlbmVyZ3kgcmljaGVzLCB0byBkZW1vbnN0cmF0ZSB0aGF0IFdlc3Rlcm4gc2FuY3Rpb25zIGltcG9zZWQgb3ZlciB0aGUgY3Jpc2lzIGluIFVrcmFpbmUgd2lsbCBub3QgaXNvbGF0ZSBSdXNzaWEuIEJ1dCB0aGUgd29ybGQncyBtYWpvciBlY29ub21pYyBwb3dlcnMgbWF5IG5vdCBiZSBxdWFraW5nIGluIHRoZWlyIGJvb3RzLiBVa3JhaW5lIGhhcyBzbnViYmVkIHRoZSB1bmlvbiwgb3RoZXIgZXgtU292aWV0IHN0YXRlcyBhcmUgd2FyeSBvZiBqb2luaW5nIGEgYm9keSB0aGF0IGNvdWxkIGdpdmUgTW9zY293IGxldmVyYWdlIG92ZXIgdGhlbSBhZ2FpbiBhbmQgS2F6YWtoc3RhbiBmaWVyY2VseSBkZWZlbmRlZCBpdHMgc292ZXJlaWdudHkgZHVyaW5nIG5lZ290aWF0aW9ucywgZm9yY2luZyBQdXRpbiB0byB3YXRlciBkb3duIGhpcyBhbWJpdGlvbnMuICJPdXIgbWVldGluZyB0b2RheSBvZiBjb3Vyc2UgaGFzIGEgc3BlY2lhbCBhbmQsIHdpdGhvdXQgZXhhZ2dlcmF0aW9uLCBhbiBlcG9jaC1tYWtpbmcgc2lnbmlmaWNhbmNlLCIgUHV0aW4gc2FpZCBvZiB0aGUgdHJlYXR5LCBzaWduZWQgdG8gbG91ZCBhcHBsYXVzZSBmcm9tIHJvd3Mgb2Ygc2VhdGVkIG9mZmljaWFscyBpbiB0aGUgbW9kZXJuIEthemFraCBjYXBpdGFsLCBBc3RhbmEuICJUaGlzIGRvY3VtZW50IGJyaW5ncyBvdXIgY291bnRyaWVzIHRvIGEgbmV3IHN0YWdlIG9mIGludGVncmF0aW9uIHdoaWxlIGZ1bGx5IHByZXNlcnZpbmcgdGhlIHN0YXRlcycgc292ZXJlaWdudHkuIiBLYXpha2ggUHJlc2lkZW50IE51cnN1bHRhbiBOYXphcmJheWV2LCBzZWF0ZWQgYXQgYSBsb25nIHdoaXRlIHRhYmxlIGF0IHdoaWNoIGhlLCBQdXRpbiBhbmQgQmVsYXJ1c3NpYW4gUHJlc2lkZW50IEFsZXhhbmRlciBMdWthc2hlbmtvIHNpZ25lZCB0aGUgdHJlYXR5LCBzYWlkIGhlIGVudmlzYWdlZCB0aGUgbmV3IHVuaW9uIGFzIGJlaW5nIGEgbWFqb3IgY29tcGV0aXRpdmUgZm9yY2UuICJUaGUgbWFpbiBtaXNzaW9uIG9mIG91ciB1bmlvbiBpbiB0aGUgZmlyc3QgaGFsZiBvZiB0aGUgMjFzdCBjZW50dXJ5IGlzIC4uLiBmaXJzdCwgdG8gZ2FpbiBhIG5hdHVyYWwgY29tcGV0aXRpdmUgYWR2YW50YWdlIGFzIGFuIGVjb25vbWljIGJyaWRnZSBiZXR3ZWVuIHRoZSBFYXN0IGFuZCB0aGUgV2VzdCwgYmV0d2VlbiBFdXJvcGUgYW5kIEFzaWEsIiBoZSBzYWlkLgoKUFVUSU4nUyBEUkVBTQoKVGhlIEV1cmFzaWFuIEVjb25vbWljIFVuaW9uIHdpbGwgZm9ybWFsbHkgY29tZSBpbnRvIGZvcmNlIG9uIEphbi4gMSwgb25jZSBpdCBoYXMgcGFzc2VkIHRoZSBmb3JtYWxpdHkgb2YgYmVpbmcgYXBwcm92ZWQgYnkgdGhlIHRocmVlIGZvcm1lciBTb3ZpZXQgcmVwdWJsaWNzJyBwYXJsaWFtZW50cy4gVGhlIHVuaW9uLCBhbiBpZGVhIGZpcnN0IHJhaXNlZCBieSBOYXphcmJheWV2IGluIDE5OTQgYnV0IHdpZGVseSBpZ25vcmVkIGF0IHRoZSB0aW1lLCBicmluZ3MgdG8gbGlmZSBQdXRpbidzIGRyZWFtIG9mIHVuaXRpbmcgbGlrZS1taW5kZWQgY291bnRyaWVzLCBjYXBpdGFsaXppbmcgb24gdGhlIG5vc3RhbGdpYSBvZiBtYW55IFJ1c3NpYW5zIGZvciB0aGUgb3JkZXIgYW5kIHJlbGF0aXZlIGVjb25vbWljIGFuZCBwb2xpdGljYWwgc3RhYmlsaXR5IG9mIHRoZSBjb21tdW5pc3QgU292aWV0IGVtcGlyZSB0aGF0IGNvbGxhcHNlZCBpbiAxOTkxLiBBZnRlciAxNCB5ZWFycyBpbiBwb3dlciwgaGUgc2VlcyBpdHMgY3JlYXRpb24gYXMgYSBwZXJzb25hbCBwb2xpdGljYWwgbGVnYWN5IGZvciB3aGVuIGhlIGV2ZW50dWFsbHkgc3RlcHMgYXNpZGUgYW5kIGl0IGhhcyBiZWNvbWUgb25lIG9mIHRoZSAiYmlnIGlkZWFzIiBvZiBoaXMgdGhpcmQgdGVybSBhcyBwcmVzaWRlbnQuIFRoZSB0cmVhdHkgZGVlcGVucyB0aWVzIGZvcmdlZCB3aGVuIHRoZSB0aHJlZSBjb3VudHJpZXMgdG9vayB0aGUgaW5pdGlhbCBzdGVwIG9mIGNyZWF0aW5nIGEgY3VzdG9tcyB1bmlvbiBpbiAyMDEwIGFuZCBndWFyYW50ZWVzIHRoZSBmcmVlIHRyYW5zaXQgb2YgZ29vZHMsIHNlcnZpY2VzLCBjYXBpdGFsIGFuZCB3b3JrZm9yY2UgYW5kIGNvb3JkaW5hdGVzIHBvbGljeSBmb3IgbWFqb3IgZWNvbm9taWMgc2VjdG9ycy4gUHV0aW4gbm90ZWQgdGhhdCBLYXpha2hzdGFuIGFuZCBSdXNzaWEgYWNjb3VudGVkIGZvciBvbmUtZmlmdGggb2YgdGhlIHdvcmxkJ3MgbmF0dXJhbCBnYXMgcmVzZXJ2ZXMgYW5kIDE1IHBlcmNlbnQgb2Ygb2lsIHJlc2VydmVzLCBhbHRob3VnaCBCZWxhcnVzIGlzIG5vdCBhbiBlbmVyZ3kgcHJvZHVjZXIsIGFuZCBpdHMgc3RydWdnbGluZyBlY29ub215IGxvb2tzIGxpa2UgYSBidXJkZW4gZm9yIEFzdGFuYSBhbmQgTW9zY293LiBBc2tlZCBvbiBTYXR1cmRheSBpZiBoZSB3YXMgdHJ5aW5nIHRvIHJldml2ZSB0aGUgU292aWV0IGVtcGlyZSwgUHV0aW4gc2FpZDogIlRoZXkgdHJ5IHRvIHN0aWNrIHRoaXMgbGFiZWwgb24gdXMsIGEgbGFiZWwgdGhhdCB3ZSBhcmUgdHJ5aW5nIHRvIHJlc3RvcmUgYW4gZW1waXJlLCB0aGUgU292aWV0IFVuaW9uLCBtYWtlIGV2ZXJ5b25lIHN1Ym9yZGluYXRlLiBUaGlzIGFic29sdXRlbHkgZG9lcyBub3QgY29ycmVzcG9uZCB0byByZWFsaXR5LiIgVGhlIG5ldyB1bmlvbiwgaG93ZXZlciwgcmVpbmZvcmNlcyBQdXRpbidzIGRyaXZlIHRvIHNob3cgUnVzc2lhIHdpbGwgbm90IGJlIGlzb2xhdGVkIGJ5IHNhbmN0aW9ucywgYSBtZXNzYWdlIGhlIHNlbnQgYnkgcmVhY2hpbmcgYSAkNDAwLWJpbGxpb24gZ2FzIHN1cHBseSBkZWFsIHdpdGggQ2hpbmEgbGFzdCB3ZWVrLiBBbnkgaG9wZXMgb2YgcmVidWlsZGluZyBhIGxhcmdlIHBhcnQgb2YgdGhlIFNvdmlldCBVbmlvbiBoYXZlIGJlZW4gdGh3YXJ0ZWQgYnkgVWtyYWluZSwgd2hpY2ggb3B0ZWQgbm90IHRvIGpvaW4gdGhlIHVuaW9uIGFmdGVyIGl0cyBNb3Njb3ctbGVhbmluZyBwcmVzaWRlbnQgd2FzIG91c3RlZCBhbmQgZGVjaWRlZCB0byBidWlsZCB0cmFkZSBhbmQgcG9saXRpY2FsIHRpZXMgd2l0aCB0aGUgbXVjaCBsYXJnZXIgRVUgaW5zdGVhZC4gVGhhdCB3YXMgYSBodWdlIGJsb3csIGRlcHJpdmluZyB0aGUgdW5pb24gb2YgYSBtYXJrZXQgb2YgNDUgbWlsbGlvbiBwZW9wbGUgYW5kLCBpbiB0aGUgd29yZHMgb2YgZXgtS3JlbWxpbiBzcGluIGRvY3RvciBHbGViIFBhdmxvdnNreSwgbWFraW5nIFB1dGluJ3Mgb3JpZ2luYWwgZHJlYW0gImltcG9zc2libGUiIHRvIGZ1bGZpbGwuIEFybWVuaWEgYW5kIEt5cmd5enN0YW4sIGhhcmRseSBlY29ub21pYyBwb3dlcmhvdXNlcywgYXJlIGNvbnNpZGVyaW5nIGpvaW5pbmcgYnV0IG90aGVyIGV4LVNvdmlldCByZXB1YmxpY3MsIGluY2x1ZGluZyBvaWwgYW5kIGdhcyBwcm9kdWNlciBBemVyYmFpamFuLCBnYXMtcmljaCBUdXJrbWVuaXN0YW4gYW5kICBVemJla2lzdGFuIHdpdGggaXRzIG1hcmtldCBvZiAzMCBtaWxsaW9uIHBlb3BsZSwgaGF2ZSBzdGVlcmVkIGNsZWFyIG9mIHRoZSB1bmlvbi4gVGhlIGNyZWF0aW9uIG9mIHRoZSBuZXcgYWxsaWFuY2UgYWxzbyBpbnZvbHZlcyBjb3N0cyBmb3IgUnVzc2lhLCBwb3NpbmcgYW4gZXh0cmEgYnVyZGVuIG9uIGFuIGVjb25vbXkgYWxyZWFkeSBvbiB0aGUgYnJpbmsgb2YgcmVjZXNzaW9uLiBSdXNzaWFuIERlcHV0eSBGaW5hbmNlIE1pbmlzdGVyIFNlcmdlaSBTaGF0YWxvdiB0b2xkIFJldXRlcnMgaW4gTWFyY2ggdGhhdCBCZWxhcnVzIGFuZCBLYXpha2hzdGFuIHJlY2VpdmVkIGFib3V0ICQ2IGJpbGxpb24gYW5udWFsbHkgZnJvbSBSdXNzaWEgaW4gZGlyZWN0IGFuZCBpbmRpcmVjdCBzdXBwb3J0LCBhbmQgc2FpZCB0aGF0IGNvdWxkIGluY3JlYXNlIGJ5ICQzMCBiaWxsaW9uIGlmIGFsbCB0cmFkZSByZXN0cmljdGlvbnMgd2VyZSBsaWZ0ZWQgaW4gMjAxNSBhZnRlciB0aGUgdW5pb24gaXMgY3JlYXRlZC4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUZGWVyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDcwMGRjMWIxYzI0YTdmMTc=</field><field name="symbol" class="java.lang.String">rO0ABXQABE1TQ0E=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUZLf7iAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA43Cj1wo9c</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA449cKPXCk</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4wo9cKPXD</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4wo9cKPXD</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3o9cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAaLA==</field><field name="id" class="java.lang.String">rO0ABXQAEDlhNTViM2M1OWNjYjg2NWM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mIPsAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDE2NDQ=</field><field name="title" class="java.lang.String">rO0ABXQAOVJ1c3NpYSBLbm93cyBFdXJvcGUgU2FuY3Rpb25zIEluZWZmZWN0aXZlIFdpdGggVGF4IEhhdmVucw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUXKwLyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDdjMzlhZWFiMGNhZWM5Yjc=</field><field name="symbol" class="java.lang.String">rO0ABXQABE5PUkQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUXP5xiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzczMzMzMz</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAznCj1wo9c</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAy7hR64Ueu</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzQAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzQAAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAADbiA==</field><field name="id" class="java.lang.String">rO0ABXQAEGI2ZTU1NzIwNDU4YzFhNjA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJGwAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDU3NDA=</field><field name="title" class="java.lang.String">rO0ABXQAO1J1c3NpYSBTdGFyaW5nIGF0IFJlY2Vzc2lvbiBhcyBJbnRlbnNpdHkgb2YgU2FuY3Rpb25zIEdyb3dz</field><field name="content" class="java.lang.String">rO0ABXQWjFNhbmN0aW9ucyBpbXBvc2VkIGJ5IHRoZSBVLlMuIGFuZCB0aGUgRXVyb3BlYW4gVW5pb24gYXJlIHB1c2hpbmcgUnVzc2lhIHRvd2FyZCBhIHJlY2Vzc2lvbiBhcyB0aGUgaW50ZW5zaXR5IG9mIHRoZWlyIGVjb25vbWljIHBlbmFsdGllcyBpbmNyZWFzZXMgYWZ0ZXIgdGhlIGFubmV4YXRpb24gb2YgQ3JpbWVhIGVhcmxpZXIgdGhpcyBtb250aC4gQmFua3MgaW5jbHVkaW5nIHN0YXRlLXJ1biBWVEIgQ2FwaXRhbCBzYXkgdGhlIHdvcmxk4oCZcyBuaW50aC1iaWdnZXN0IGVjb25vbXkgd2lsbCBzaHJpbmsgZm9yIGF0IGxlYXN0IHR3byBxdWFydGVycyBhcyBwZW5hbHRpZXMgZm9yIGFubmV4aW5nIENyaW1lYSByYXR0bGUgbWFya2V0cywgY3VyYiBpbnZlc3RtZW50IGFuZCByYWlzZSB0aGUgY29zdCBvZiBib3Jyb3dpbmcuIFNhbmN0aW9ucyB0aGF0IGhhdmUgc28gZmFyIGZvY3VzZWQgb24gaW5kaXZpZHVhbHMgdmlhIHZpc2EgYmFucyBhbmQgYXNzZXQgZnJlZXplcyBtYXkgYmUgZXhwYW5kZWQgdG8gdGFyZ2V0IHNwZWNpZmljIGFyZWFzIG9mIHRoZSBlY29ub215LiBQcmVzaWRlbnQgVmxhZGltaXIgUHV0aW4gc2VudCBoaXMgcG9wdWxhcml0eSBzdXJnaW5nIHRvIGEgZml2ZS15ZWFyIGhpZ2ggYnkgbWFraW5nIENyaW1lYSBhIHBhcnQgb2YgUnVzc2lhIGFnYWluIGFmdGVyIDYwIHllYXJzIGFuZCBzYXlzIGhlIHdvbuKAmXQgYmUgc3dheWVkIGJ5IGZvcmVpZ24gcmV0YWxpYXRpb24uIEV2ZW4gc28sIHRoZSBjb3N0cyBvZiB0aGUgZGVjaXNpb24gYXJlIHN0YXJ0aW5nIHRvIHVuZm9sZCwgd2l0aCBSdXNzaWFuIHN0b2NrcyB0aGlzIHllYXLigJlzIHdvcnN0IHBlcmZvcm1lcnMgYW5kIHRoZSBlY29ub215IHNldCB0byBzdWZmZXIgbW9yZSB0aGFuIHRoZSBXZXN0LCBzYWlkIE1pcmNlYSBHZW9hbmEsIFJvbWFuaWHigJlzIGdvdmVybm1lbnQgcmVwcmVzZW50YXRpdmUgZm9yIGRpcGxvbWFjeSBhbmQgZWNvbm9taWMgcHJvamVjdHMuIOKAnFdl4oCZcmUgd2l0bmVzc2luZyB0aGUgc3RhcnQgb2YgYSBuZXcgZ2VvcG9saXRpY2FsIGFuZCBlY29ub21pYyBDb2xkIFdhciBhbmQgSSB0aGluayBpdCB3aWxsIHRha2UgYXQgbGVhc3QgdHdvIHRvIHRocmVlIHllYXJzIHRvIGVzdGFibGlzaCBzb21lIHNvcnQgb2YgZXF1aWxpYnJpdW0s4oCdIGhlIHNhaWQuIOKAnFRoZSBvbmVzIHdob+KAmWxsIHBheSB0aGUgYmlsbCBmb3IgdGhpcyBhZ2dyZXNzaW9uLCBubyBtYXR0ZXIgaG93IHBvcHVsYXIgYW5kIHBhdHJpb3RpYyBpdCBsb29rcywgd2lsbCBiZSB0aGUgUnVzc2lhbiBwZW9wbGUgYmVjYXVzZSB0aGVyZeKAmXMgYSBodWdlIGRpZmZlcmVuY2UgYmV0d2VlbiB0aGUgZWNvbm9taWMgZm9yY2Ugb2YgdGhlIEVVIGFuZCB0aGUgVS5TLiBhbmQgdGhhdCBvZiBSdXNzaWEu4oCdIFN0b2NrcywgUnVibGUgUnVzc2lh4oCZcyBNaWNleCBzdG9jayBpbmRleCBoYXMgcGx1bmdlZCAxMy4xIHBlcmNlbnQgdGhpcyB5ZWFyIGNvbXBhcmVkIHdpdGggYSA0LjkgcGVyY2VudCBkZWNsaW5lIGZvciB0aGUgTVNDSSBFbWVyZ2luZyBNYXJrZXRzIEluZGV4LiBJdCB3YXMgbGl0dGxlIGNoYW5nZWQgYXQgMzo0OCBwLm0uIGluIE1vc2Nvdy4gVGhlIHJ1YmxlIGlzIHRoZSBzZWNvbmQtd29yc3QgcGVyZm9ybWVyIGFnYWluc3QgdGhlIGRvbGxhciBiZWhpbmQgQXJnZW50aW5hIGFtb25nIDI0IGRldmVsb3BpbmctbWFya2V0IGN1cnJlbmNpZXMgdHJhY2tlZCBieSBCbG9vbWJlcmcsIHdlYWtlbmluZyA4LjkgcGVyY2VudC4gSXQgcm9zZSAwLjUgcGVyY2VudCB0b2RheS4gQWZ0ZXIgdGhlIFUuUy4gZXhwYW5kZWQgc2FuY3Rpb25zIE1hcmNoIDIwIHRvIGluY2x1ZGUgYnVzaW5lc3NtZW4gbGlua2VkIHRvIFB1dGluLCBzdWNoIGFzIGJpbGxpb25haXJlcyBHZW5uYWR5IFRpbWNoZW5rbyBhbmQgQXJrYWR5IFJvdGVuYmVyZywgU3RhbmRhcmQgJiBQb29y4oCZcyBhbmQgRml0Y2ggUmF0aW5ncyBjdXQgdGhlaXIgb3V0bG9vayBvbiBSdXNzaWHigJlzIGNyZWRpdCBncmFkZSB0byBuZWdhdGl2ZSBmcm9tIHN0YWJsZSwgc3VnZ2VzdGluZyBhIGRvd25ncmFkZSBpcyBtb3N0IGxpa2VseSBuZXh0LiBUaGUgdHdvIGNvbXBhbmllcywgd2hpY2ggc2FpZCBXZXN0ZXJuIGJhbmtzIGFyZSBiZWNvbWluZyByZWx1Y3RhbnQgdG8gbGVuZCB0byBSdXNzaWEsIHJhdGUgdGhlIHdvcmxk4oCZcyBiaWdnZXN0IGVuZXJneSBleHBvcnRlciBhdCBCQkIsIHRoZSBzZWNvbmQtbG93ZXN0IGludmVzdG1lbnQgZ3JhZGUgYW5kIG9uIHBhciB3aXRoIEJyYXppbCBhbmQgU291dGggQWZyaWNhLiBDcmlzaXMgU2lnbnMgRXZlbiBiZWZvcmUgdGhlIHN0YW5kb2ZmIHdpdGggdGhlIFdlc3QsIHRoZSB3b3JzdCBzaW5jZSB0aGUgQ29sZCBXYXIsIFJ1c3NpYeKAmXMgZWNvbm9teSB3YXMgZmFjaW5nIHRoZSB3ZWFrZXN0IGdyb3d0aCBzaW5jZSBhIDIwMDkgcmVjZXNzaW9uIGFzIGNvbnN1bWVyIGRlbWFuZCBmYWlsZWQgdG8gbWFrZSB1cCBmb3Igc2FnZ2luZyBpbnZlc3RtZW50LiBUaGUgY3VycmVudCBzaXR1YXRpb24gaW4gdGhlIGVjb25vbXkg4oCcYmVhcnMgY2xlYXIgc2lnbnMgb2YgYSBjcmlzaXMs4oCdIERlcHV0eSBFY29ub215IE1pbmlzdGVyIFNlcmdlaSBCZWx5YWtvdiBzYWlkIE1hcmNoIDE3IGFmdGVyIHRoZSBmaXJzdCBFdXJvcGVhbiBVbmlvbiBhbmQgVS5TLiBzYW5jdGlvbnMuIFJ1c3NpYSB3aWxsIHByb2JhYmx5IGRpcCBpbnRvIGEgcmVjZXNzaW9uIGluIHRoZSBzZWNvbmQgYW5kIHRoaXJkIHF1YXJ0ZXJzIG9mIHRoaXMgeWVhciBhcyDigJxkb21lc3RpYyBkZW1hbmQgaXMgc2V0IHRvIGhhbHQgb24gdGhlIHVuY2VydGFpbnR5IHNob2NrIGFuZCB0aWdodGVyIGZpbmFuY2lhbCBjb25kaXRpb25zLOKAnSBhY2NvcmRpbmcgdG8gTW9zY293LWJhc2VkIFZUQi4gUnVzc2lh4oCZcyBjZW50cmFsIGJhbmsgdW5leHBlY3RlZGx5IHJhaXNlZCBpdHMgYmVuY2htYXJrIGludGVyZXN0IHJhdGUgYnkgMTUwIGJhc2lzIHBvaW50cyBhZnRlciB0aGUgYXJtZWQgdGFrZW92ZXIgb2YgQ3JpbWVhIHRyaWdnZXJlZCBhIHJvdXQgaW4gdGhlIHJ1YmxlLiBQdXRpbiBjb21wbGV0ZWQgaGlzIGFubmV4YXRpb24gb2YgdGhlIEJsYWNrIFNlYSBwZW5pbnN1bGEgTWFyY2ggMjEuIFJ1c3NpYSBtYXkgc2h1biBmb3JlaWduIGRlYnQgbWFya2V0cyBpbiAyMDE0IGJlY2F1c2Ugb2YgaGlnaGVyIGJvcnJvd2luZyBjb3N0cywgYWNjb3JkaW5nIHRvIEZpbmFuY2UgTWluaXN0ZXIgQW50b24gU2lsdWFub3YuIEhlIGV4cHJlc3NlZCBmcnVzdHJhdGlvbiBhdCBkaXNydXB0aW9ucyB0byBNYXN0ZXJDYXJkIEluYy4gYW5kIFZpc2Egc2VydmljZXMgZm9yIGNhcmRzIGlzc3VlZCBieSBiYW5rcyBvbiBvciBsaW5rZWQgdG8gcGVyc29ucyBvbiB0aGUgVS5TLiBzYW5jdGlvbnMgbGlzdC4g4oCcU29tZSBwZW9wbGUgc2F5IHRoZXNlIHNhbmN0aW9ucyB3b27igJl0IGFmZmVjdCBSdXNzaWHigJlzIGZpbmFuY2lhbCBzeXN0ZW0gYnV0IHRoZXkgYWxyZWFkeSBhcmUs4oCdIGhlIHNhaWQgTWFyY2ggMjEuIOKAmE1vc3F1aXRvIEJpdGXigJkgRXZlbiBzbywgdGhlIG1lYXN1cmVzIG1heSBub3QgaGF2ZSBtdWNoIGVmZmVjdCBvbiB0aGUgaW5kaXZpZHVhbHMgdGFyZ2V0ZWQgb3Igb24gUHV0aW7igJlzIHRoaW5raW5nIG9uIFVrcmFpbmUsIHdob3NlIGdvdmVybm1lbnQgYWNjdXNlcyB0aGUgUnVzc2lhbiBsZWFkZXIgb2Ygc3RpcnJpbmcgdXAgdW5yZXN0IGVsc2V3aGVyZSBhbmQgcGxhbm5pbmcgYW4gaW52YXNpb24gb2YgdGhlIGNvdW50cnnigJlzIGVhc3QuIFRoZSBzYW5jdGlvbnMgcmVwcmVzZW50IOKAnGEgbW9zcXVpdG8gYml0ZeKAnSBiZWNhdXNlIG1vc3Qgb2ZmaWNpYWxzIG9uIHRoZSBsaXN0IGFyZW7igJl0IHBlcm1pdHRlZCB0byB0cmF2ZWwgYWJyb2FkIHByaXZhdGVseSBhbmQgaGF2ZSBtb3N0IG9mIHRoZWlyIGJ1c2luZXNzIGluIFJ1c3NpYSwgc2FpZCBLb25zdGFudGluIEtvc3RpbiwgYSBLcmVtbGluIGFkdmlzZXIgd2hvIGhlYWRzIHRoZSBDaXZpbCBTb2NpZXR5IERldmVsb3BtZW50IEZ1bmQuIEdvdmVybm1lbnQgbWVtYmVycyBmZWF0dXJlZCBpbiBhIG5ldyBFVSBsaXN0IE1hcmNoIDIxIGluY2x1ZGUgUHV0aW4gYWlkZXMgU2VyZ2VpIEdsYXp5ZXYgYW5kIFZsYWRpc2xhdiBTdXJrb3YuIFB1dGluLCBtZWFud2hpbGUsIHdvdWxkIHJlcXVpcmUgc3RpZmZlciBwZW5hbHRpZXMgdG8gYnVkZ2UsIGFjY29yZGluZyB0byBBcmllbCBDb2hlbiwgc2VuaW9yIGZlbGxvdyBhdCB0aGUgUmVwdWJsaWNhbi1sZWFuaW5nIEhlcml0YWdlIEZvdW5kYXRpb24gaW4gV2FzaGluZ3Rvbi4g4oCcWW914oCZcmUgZGVhbGluZyB3aXRoIGFuIGluZGl2aWR1YWwgd2hvIHdvbuKAmXQgYmUgZWFzaWx5IGludGltaWRhdGVkLOKAnSBoZSBzYWlkIE1hcmNoIDIxIGJ5IHBob25lIGZyb20gV2FzaGluZ3Rvbi4g4oCcVGhlIFdlc3QgaXMgZXNjYWxhdGluZyBzYW5jdGlvbnMgYnV0IFJ1c3NpYSBpc27igJl0IGdvaW5nIHRvIGJhY2sgb2ZmIG9uIENyaW1lYSBhbmQgVWtyYWluZSB0aGF0IGVhc2lseS4gSXQgd2lsbCB0YWtlIG1vcmUgdGhhbiBwaW5wb2ludGVkIGluZGl2aWR1YWwgc2FuY3Rpb25zIHRvIHN0YXJ0IHJvbGxpbmcgdGhpcyBiYWNrLuKAnSBUcmFkZSBUaWVzIFRoZSBFVSwgd2hpY2ggcmVsaWVzIG9uIFJ1c3NpYSBmb3IgYSB0aGlyZCBvZiBpdHMgZW5lcmd5IGltcG9ydHMsIGhhcyBzdHJ1Z2dsZWQgdG8gZmluZCB3YXlzIG9mIHB1bmlzaGluZyBQdXRpbiBiZWNhdXNlIHRyYWRlIHN0ZXBzIHJpc2sgZGFtYWdpbmcgRXVyb3Bl4oCZcyBlY29ub215LiBCYW5raW5nIGN1cmJzIHdvdWxkIGh1cnQgQnJpdGFpbiwgYW4gYXJtcyBlbWJhcmdvIHdvdWxkIGJhciBGcmFuY2UgZnJvbSBzZWxsaW5nIE1pc3RyYWwtY2xhc3MgaGVsaWNvcHRlciBjYXJyaWVycyB0byB0aGUgS3JlbWxpbiBhbmQgY3V0YmFja3MgaW4gZ2FzIHB1cmNoYXNlcyB3b3VsZCBoYXJtIGEgc3dhdGhlIG9mIEVVIG5hdGlvbnMuIFRoZSBkZWNsaW5lcyBpbiBSdXNzaWFuIHN0b2Nrcywgd2Vha25lc3MgaW4gdGhlIHJ1YmxlIGFuZCB0aGUgcmlzayBvZiBkb3duZ3JhZGVzIHRvIHRoZSBjb3VudHJ54oCZcyBjcmVkaXQgcmF0aW5nIHNob3cgdGhyZWF0cyBvZiBmdXR1cmUgc2FuY3Rpb25zIGNhbiBlcm9kZSBidXNpbmVzcyBjb25maWRlbmNlIGFuZCBodXJ0IHRoZSBlY29ub215LCBhY2NvcmRpbmcgdG8gRnJlZHJpayBFcml4b24sIGRpcmVjdG9yIG9mIHRoZSBFdXJvcGVhbiBDZW50cmUgZm9yIEludGVybmF0aW9uYWwgUG9saXRpY2FsIEVjb25vbXkuIENhcGl0YWwgb3V0Zmxvd3MgZnJvbSBSdXNzaWEgbWF5IHJlYWNoICQ3MCBiaWxsaW9uIGluIHRoZSBmaXJzdCBxdWFydGVyLCBtb3JlIHRoYW4gJDYzIGJpbGxpb24gcmVjb3JkZWQgZm9yIHRoZSB3aG9sZSBvZiAyMDEzLCBDYXBpdGFsIEVjb25vbWljcyBMdGQuIHNhaWQgbGFzdCB3ZWVrIGluIGEgcmVwb3J0LiBUaGVyZeKAmXMgYSDigJxyZWFsIHJpc2vigJ0gdGhhdCB0aGlzIGNvdWxkIHB1c2ggUnVzc2lhIGludG8gcmVjZXNzaW9uLCB0aGUgTG9uZG9uLWJhc2VkIHJlc2VhcmNoIGNvbXBhbnkgc2FpZC4g4oCcSW52ZXN0b3JzIGFuZCByYXRpbmdzIGFnZW5jaWVzIGFyZSBiYXNpbmcgdGhlaXIgdmlld3Mgbm90IG9uIHdoYXTigJlzIGhhcHBlbmVkIHdpdGggc2FuY3Rpb25zIHNvIGZhciBidXQgb24gd2hhdCBtYXkgaGFwcGVuLOKAnSBFcml4b24gc2FpZCBNYXJjaCAyMSBieSBwaG9uZSBmcm9tIEJydXNzZWxzLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUTydaSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDU5MWNiMDZmYjhmMTM1ZGQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABEhVR0U=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUT3nACAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/h64UeuFHs</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/h64UeuFHs</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/hmZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/hmZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/hmZmZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAA6mA==</field><field name="id" class="java.lang.String">rO0ABXQAEDUyODcyMmIwNzQzZjAyMDg=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mNBzAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDgwOTE=</field><field name="title" class="java.lang.String">rO0ABXQAO1VrcmFpbmUgT3VzdHMgQ2VudHJhbCBCYW5rIEhlYWQgYXMgUnVzc2lhIFNjb3JucyBMZWFkZXJzaGlw</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAURieoMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGM2MmQwNTBkMTI2OWE3NWI=</field><field name="symbol" class="java.lang.String">rO0ABXQABFBBVEg=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAURnoN8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEARAAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEARAAAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEARAAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEARAAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEARAAAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDBhMjYxMGQyODQ2Nzc2YTU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mM4LAAAA==</field></document></documents><date>2015-05-07T12:20:04-0500</date></cacheEntry>
<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hKYXBhbmVzZSBidXNpbmVzc2VzIGxlZnQgYmVoaW5kIHRoaXMgeWVhciBhcyBnbG9iYWwgZXF1aXRpZXMgcmFsbGllZCB0byBhIHJlY29yZCBmb3VuZCBhIHdpbm5pbmcgIHN0cmF0ZWd5IGluIGJ1eWluZyBiYWNrIHNoYXJlcyB0aGUgcmVzdCBvZiB0aGUgd29ybGQgcHJlZmVycmVkIHRvIGF2b2lkIENvbXBhbmllcyBpbiB0aGUgVG9waXggaW5kZXggYXJlIGFjcXVpcmluZyB0aGVpciBvd24gc3RvY2sgYXQgdGhlIGZhc3Rlc3QgcGFjZSBldmVyIGxlZCBieSBOVFQgRG9jb21vIEluYyBhbmQgVG95b3RhIE1vdG9yIENvcnAgd2l0aCAyNSBiaWxsaW9uIG9mIGFubm91bmNlZCBwdXJjaGFzZXMgc28gZmFyIHRoaXMgeWVhciBkYXRhIGNvbXBpbGVkIGJ5IEJsb29tYmVyZyBzaG93IFRoZSBidXliYWNrcyBhcmUgbGltaXRpbmcgbG9zc2VzIGluIHRoZSB3b3JsZHMgd29yc3RwZXJmb3JtaW5nIGRldmVsb3BlZCBlcXVpdHkgbWFya2V0IENvbXBhbmllcyB1c2luZyB0aGUgc3RyYXRlZ3kgaGF2ZSBnYWluZWQgZXZlbiBhcyB0aGUgVG9waXggc2xpZCBUaGUgY29tYmluYXRpb24gb2YgcmVjb3JkIGNhc2ggY2hlYXAgc2hhcmVzIGFuZCBhIGdvdmVybm1lbnRsZWQgZHJpdmUgdG8gYm9vc3QgcmV0dXJuIG9uIGVxdWl0eSBpcyBtYWtpbmcgYnV5YmFja3MgaXJyZXNpc3RpYmxlIHRvIEphcGFuZXNlIGV4ZWN1dGl2ZXMgYXQgYSB0aW1lIHdoZW4gdGhlIE1TQ0kgQWxsQ291bnRyeSBXb3JsZCBJbmRleCBpcyB0cmFkaW5nIGF0IHVucHJlY2VkZW50ZWQgaGlnaHMgTWl0c3ViaXNoaSBDb3JwIEphcGFucyBiaWdnZXN0IHRyYWRpbmcgY29tcGFueSBoYXMgY2xpbWJlZCA2MiBwZXJjZW50IHRoaXMgeWVhciBjb21wYXJlZCB3aXRoIHRoZSBUb3BpeHMgMjYgcGVyY2VudCBkZWNsaW5lIEl0IHNhaWQgb24gTWF5IDggaXQgd291bGQgYnV5IGJhY2sgYXMgbXVjaCBhcyA2MCBiaWxsaW9uIHllbiA1ODkgbWlsbGlvbiBvZiBzaGFyZXMgdGhlIG1vc3QgaW4gc2V2ZW4geWVhcnMgSXRzIGEgcHJldHR5IGJpZyBzZWEgY2hhbmdlIHNhaWQgS2llcmFuIENhbGRlciBoZWFkIG9mIGVxdWl0aWVzIGZvciBBc2lhIGF0IENvdXR0cyAgQ28gd2hpY2ggbWFuYWdlcyBhYm91dCAyODUgYmlsbGlvbiBwb3VuZHMgNDg2IGJpbGxpb24gQ29ycG9yYXRlIG1pbmRzZXRzIGFyZSBkZWZpbml0ZWx5IGNoYW5naW5nIGhlIHNhaWQgSXQgbWFrZXMgSmFwYW4gbW9yZSBvZiBhIG5vcm1hbCBtYXJrZXQgVGhlIFRvcGl4IHJvc2UgMiBwZXJjZW50IGxhc3Qgd2VlayBUaGUgSmFwYW5lc2UgbWVhc3VyZSBmZWxsIGFzIG11Y2ggYXMgMTMgcGVyY2VudCB0aGlzIHllYXIgYW1pZCBncm93aW5nIGRvdWJ0IFByaW1lIE1pbmlzdGVyIFNoaW56byBBYmUgd2lsbCBtYWtlIGdvb2Qgb24gcHJvbWlzZXMgZm9yIHJlZm9ybXMgZnJvbSBsb29zZW5pbmcgbGFib3IgbGF3cyB0byByZWR1Y2luZyBnb3Zlcm5tZW50IHN1cHBvcnQgZm9yIGZhcm1lcnMgVGhlIGluZGV4IGlzIGRvd24gYWZ0ZXIgYSB3b3JsZGJlYXRpbmcgNTEgcGVyY2VudCBqdW1wIGluIDIwMTMgICAgICAgICAgICAgICAgICAgICAgICAgICAgTmV0IFNlbGxlcnMgRm9yZWlnbiBpbnZlc3RvcnMgd2hvIGFjY291bnQgZm9yIGFib3V0IDYwIHBlcmNlbnQgb2YgbWFya2V0IHR1cm5vdmVyIHJlZHVjZWQgaG9sZGluZ3Mgb2YgSmFwYW5lc2Ugc2hhcmVzIGluIGFsbCBidXQgb25lIG1vbnRoIHRoaXMgeWVhciBqdXN0IGFzIGJ1eWJhY2tzIHN1cmdlZCBDb21wYW5pZXMgdGhhdCBhbm5vdW5jZWQgcHVyY2hhc2VzIHdvcnRoIG1vcmUgdGhhbiAxMDAgbWlsbGlvbiB0aGlzIHllYXIgY2xpbWJlZCBhbiBhdmVyYWdlIDQxIHBlcmNlbnQgaW4gMjAxNCBTaGFyZSBidXliYWNrcyBoYXZlIHRoZSBlZmZlY3Qgb2Ygc3VwcG9ydGluZyB0aGUgbWFya2V0IHdoZW4gaXRzIHdlYWsgRGFpd2EgU2VjdXJpdGllcyBHcm91cCBJbmMgcXVhbnRpdGF0aXZlIGFuYWx5c3QgTWFzYWhpcm8gU3V6dWtpIHdyb3RlIGluIGEgcmVwb3J0IG9uIEp1bmUgMTAgUmV0dXJuIHRvIHNoYXJlaG9sZGVycyBpcyBhIGJpZyB0aGVtZSBDb21wYW5pZXMgcHVyY2hhc2VzIG9mIHRoZWlyIG93biBlcXVpdHkgY2FuIGJlIHNlZW4gYXMgYSB2b3RlIG9mIGNvbmZpZGVuY2UgYnkgZXhlY3V0aXZlcyB0aGF0IHRoZWlyIHN0b2NrIGhhcyByb29tIHRvIHJpc2UgVGhlIGJ1eWJhY2tzIGNhbiBhbHNvIHN1Z2dlc3QgYSBjb21wYW55IGhhcyBydW4gb3V0IG9mIHRoaW5ncyB0byBzcGVuZCBtb25leSBvbiBjdXJiaW5nIGl0cyBncm93dGggcG90ZW50aWFsIFdoaWxlIGdyb3NzIGRvbWVzdGljIHByb2R1Y3QgZXhwYW5kZWQgNjcgcGVyY2VudCBpbiB0aGUgZmlyc3QgcXVhcnRlciBpdHMgZm9yZWNhc3QgdG8gY29udHJhY3QgNDQgcGVyY2VudCBpbiB0aGUgc2Vjb25kIHJlZmxlY3RpbmcgYnV5aW5nIGJlZm9yZSBhIHRheCBpbmNyZWFzZSBKYXBhbnMgZXhwb3J0cyBmZWxsIGluIE1heSBmb3IgdGhlIGZpcnN0IHRpbWUgaW4gMTUgbW9udGhzIG9uIHdlYWsgZGVtYW5kIGZyb20gdGhlIFVTIGFuZCBBc2lhICAgICAgICAgICAgICAgICAgICAgICAgIE1vcmUgSW52ZXN0bWVudHMgRXZlbiBpZiBidXliYWNrcyBjb250aW51ZSBjb21wYW5pZXMgbmVlZCB0byBpbmNyZWFzZSBpbnZlc3RtZW50cyBhdCBhIGZhc3RlciBwYWNlIGFjY29yZGluZyB0byBDb3V0dHMgQ2FsZGVyIGEgaGFyZGVyIGNob2ljZSBjb21wYXJlZCB0byBpbXByb3ZpbmcgcmV0dXJuIG9uIGVxdWl0eSB3aXRoIHNoYXJlIHJlcHVyY2hhc2VzIGluIHRoZSBzaG9ydCB0ZXJtIFRoZSBhbW91bnQgb2YgY2FzaCB0aGV5IGhvbGQgbWVhbnMgY29tcGFuaWVzIHNob3VsZCBhYmxlIHRvIGFmZm9yZCBib3RoIGJ1eWJhY2tzIGFuZCBjYXBpdGFsIGludmVzdG1lbnRzIGhlIHNhaWQgV2hpbGUgYnVzaW5lc3NlcyBoYXZlIGJvb3N0ZWQgY2FwaXRhbCBzcGVuZGluZyBmb3IgdGhyZWUgc3RyYWlnaHQgcXVhcnRlcnMgdGhlaXIgaW52ZXN0bWVudHMgaW4gdGhlIHBlcmlvZCBlbmRlZCBNYXJjaCByZW1haW5lZCAzMSBwZXJjZW50IGJlbG93IGEgMjAwNyBwZWFrIEZpbmFuY2UgTWluaXN0cnkgZGF0YSBzaG93IEJ1eWJhY2tzIG9ubHkgcmVzdWx0IGluIHJhaXNpbmcgUk9FIGFuZCBzaGFyZSBwcmljZXMgc28gdGhlaXIgZWZmZWN0IG9uIEphcGFucyBlY29ub215IGlzIGluZGlyZWN0IHNhaWQgTWFzYXJ1IEhhbWFzYWtpIGEgVG9reW9iYXNlZCBzZW5pb3Igc3RyYXRlZ2lzdCBhdCBTdW1pdG9tbyBNaXRzdWkgQXNzZXQgTWFuYWdlbWVudCBDbyBDYXBpdGFsIGludmVzdG1lbnQgZGlyZWN0bHkgYm9vc3RzIHRoZSBlY29ub215IHNvIEkgdGhpbmsgZm9yIG5vdyB0aGV5IHNob3VsZCBpbnZlc3QgbW9yZSBtb25leSB0aGVyZSBTaW5jZSB0aGUgc3RhcnQgb2YgSmFudWFyeSAxNTIgY29tcGFuaWVzIG9uIHRoZSBUb3BpeCBhbm5vdW5jZWQgYnV5YmFja3Mgd29ydGggMjUgdHJpbGxpb24geWVuIGRhdGEgY29tcGlsZWQgYnkgQmxvb21iZXJnIHNob3cgVGhlIHByZXZpb3VzIGhpZ2ggZm9yIGFuIGVudGlyZSB5ZWFyIHdhcyAxNSB0cmlsbGlvbiB5ZW4gaW4gMjAwOCBDb21wYW5pZXMgdW52ZWlsZWQgYW4gYXZlcmFnZSA1NjcgYmlsbGlvbiB5ZW4gaW4gYW5udWFsIGJ1eWJhY2tzIG92ZXIgdGhlIGRlY2FkZSB0aHJvdWdoIDIwMTMgdGhlIGRhdGEgc2hvdyAgICAgICAgICAgICAgICAgICAgICAgICBDaGFuZ2luZyBUYWN0aWNzIFRoZSBjaGFuZ2Ugb2YgaGVhcnQgYnkgSmFwYW5lc2UgZXhlY3V0aXZlcyBpcyBhbHJlYWR5IGhlbHBpbmcgdG8gYm9vc3QgcmV0dXJuIG9uIGVxdWl0eSB3aGljaCBtZWFzdXJlcyBwcm9maXQgYWdhaW5zdCBzaGFyZWhvbGRlcnMgY2FwaXRhbCBhbmQgaGFkIGJlZW4gYW1vbmcgdGhlIHdvcnN0IGluIHRoZSBkZXZlbG9wZWQgd29ybGQgVG9waXggY29tcGFuaWVzIGVhcm5lZCBhbiA4NiBwZXJjZW50IHJldHVybiBpbiB0aGUgeWVhciB0aHJvdWdoIGxhc3QgcXVhcnRlciB0aGUgbW9zdCBzaW5jZSB0aGUgMTIgbW9udGhzIGVuZGVkIE1hcmNoIDIwMDggVGhlIDEweWVhciBhdmVyYWdlIFJPRSBhdCBKYXBhbmVzZSBmaXJtcyB0aHJvdWdoIDIwMTMgd2FzIDYyIHBlcmNlbnQgdGhlIHNlY29uZGxvd2VzdCBvZiAyNCBkZXZlbG9wZWQgbWFya2V0cyB0cmFja2VkIGJ5IEJsb29tYmVyZyBhbmQgbGVzcyB0aGFuIGhhbGYgdGhlIGxldmVsIGZvciB0aGUgU1AgNTAwIFRoZSBnb3Zlcm5tZW50IHJlY29nbml6ZXMgdGhhdCBpbiBvcmRlciB0byByZXN1c2NpdGF0ZSBKYXBhbnMgZWNvbm9teSB0aGVyZSBuZWVkcyB0byBiZSBhIGN5Y2xlIHdoZXJlIGNvcnBvcmF0aW9ucyBwcm9maXQgdGhlbiByZXR1cm4gdGhvc2UgcHJvZml0cyB0byB0aGUgcHVibGljIHNhaWQgSGlzYXNoaSBLdXJvZGEgdGhlIGhlYWQgb2YgSmFwYW5lc2UgZXF1aXRpZXMgYW5kIGNoaWVmIHBvcnRmb2xpbyBtYW5hZ2VyIGF0IE1laWppIFlhc3VkYSBBc3NldCBNYW5hZ2VtZW50IENvIEV2ZW4gaWYgcHVibGljIGZpbmFuY2VzIGFyZSB1c2VkIHRvIGhlbHAgY29tcGFuaWVzIG1ha2UgbW9yZSBtb25leSBpdGxsIGJlIG5lZ2F0aXZlIGZvciB0aGUgZWNvbm9teSBpZiB0aGUgZmlybXMganVzdCBzdG9ja3BpbGUgdGhlIGNhc2ggICAgICAgICAgICAgICAgICAgICAgIEluZmxhdGlvbiBBY2NlbGVyYXRlcyBOb25maW5hbmNpYWwgZmlybXMgaG9sZGluZ3Mgb2YgY2FzaCBhbmQgZGVwb3NpdHMgcm9zZSB0byBhIHJlY29yZCAyMzIgdHJpbGxpb24geWVuIGF0IHRoZSBlbmQgb2YgTWFyY2ggQk9KIGRhdGEgc2hvdyBFYXJuaW5ncyBieSBUb3BpeCBjb21wYW5pZXMgc3dlbGxlZCA2OSBwZXJjZW50IGxhc3QgeWVhciBhcyB1bnByZWNlZGVudGVkIGNlbnRyYWwgYmFuayBzdGltdWx1cyBkcm92ZSBkb3duIHRoZSB5ZW4gYm9vc3RpbmcgZXhwb3J0ZXJzIHByb2ZpdHMgVGhhdCBhZGRlZCB0byBiYWxhbmNlcyBidWlsdCBieSBleGVjdXRpdmVzIHRvIHNoaWVsZCB0aGVpciBjb21wYW5pZXMgYW1pZCBtb3JlIHRoYXQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMC0wNi0xMVQwMDowMDowMFogVE8gMjAxMy0wNy0zMFQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDIzNTk=</field><field name="title" class="java.lang.String">rO0ABXQAOERpc2NvdW50IEJyb2tlcnMnIFNoYXJlcyBTdXJnZSBhcyBTbWFsbCBJbnZlc3RvcnMgUmV0dXJu</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8nTiSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDcyMzY1MDU5NjlhODJlZmU=</field><field name="symbol" class="java.lang.String">rO0ABXQABEFNVEQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8sdICAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4LhR64Ueu</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4MzMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3z1wo9cKP</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA38zMzMzMz</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA249cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAE4sgA==</field><field name="id" class="java.lang.String">rO0ABXQAEDdlNjk4YzYyNDVjODQ0YTE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEStAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE1NDM1</field><field name="title" class="java.lang.String">rO0ABXQAO0Nhc2ggUGlsZXMgVXAgYXMgQ0VPcyBQbGF5IGl0IFNhZmUgV2l0aCBTbG93LUdyb3d0aCBFY29ub215</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT7PwgiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDdiNzdkNGUxMWNjZTBjZWY=</field><field name="symbol" class="java.lang.String">rO0ABXQABFZUSFI=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT7U6GSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBS7rhR64Uf</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBS71wo9cKP</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBS64UeuFHs</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBS64UeuFHs</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSYKPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAFFA==</field><field name="id" class="java.lang.String">rO0ABXQAEDUyOWIwNDE0NjU5Yzc4NGI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE7KAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDkzMjA=</field><field name="title" class="java.lang.String">rO0ABXQAQVMmUCA1MDAgVmFsdWF0aW9uIFNsaXBzIDE5JSBCZWxvdyAyMDExIGFzIFNoYW91bCBBZHZpc2VzIFBhdGllbmNl</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATe13SyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGQxODhlMWU2ZTBjYzhhNzc=</field><field name="symbol" class="java.lang.String">rO0ABXQAAk1O</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATe7A4iAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArFHrhR64U</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArQo9cKPXD</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAqij1wo9cK</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAq64UeuFHs</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAnszMzMzMz</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAsiA==</field><field name="id" class="java.lang.String">rO0ABXQAEDE2YTZmMTI1NTk1Y2M3MDc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJLtAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUzNTk=</field><field name="title" class="java.lang.String">rO0ABXQAP1MmUCA1MDAgQmVhdGluZyBHb2xkIE1vc3QgU2luY2UgMTk5OSBhcyBFYXJuaW5ncyBFc3RpbWF0ZXMgUmlzZQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATZxbIiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGJiN2EzMDQ2ZDZmOWVjZWM=</field><field name="symbol" class="java.lang.String">rO0ABXQAAVA=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATZ2kuSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkvXCj1wo9</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlMzMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAklHrhR64U</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAk8KPXCj1x</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAk8KPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAC1pZA==</field><field name="id" class="java.lang.String">rO0ABXQAEDBjZmU2YzNkZDk1MDllMmU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMl3AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTEyMjUy</field><field name="title" class="java.lang.String">rO0ABXQANVllbidzIFJldml2YWwgQm9vc3RzIENvbmZpZGVuY2UgSW4gVG95b3RhLCBKYXBhbiBJbmMu</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATx6l0cAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDdjOWI3ZTBiYTFkMzAyZmM=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lQQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATx/vaMAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7gAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7gAAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7gAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7gAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4h64UeuFI</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGZiYzg3ZjZlMjVjM2I2YjY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mErqAAAA==</field></document></documents><date>2015-05-07T06:28:02-0500</date></cacheEntry>
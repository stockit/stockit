<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hUaGUgMTIwZGF5IGNvcnJlbGF0aW9uIGJldHdlZW4gV2VzdCBUZXhhcyBJbnRlcm1lZGlhdGUgY3J1ZGUgYW5kIGdvbGQgZnV0dXJlcyBzbGlwcGVkIGludG8gbmVnYXRpdmUgdGVycml0b3J5IHRoaXMgeWVhciBmb3IgdGhlIGZpcnN0IHRpbWUgc2luY2UgSnVseSAyMDA5IGFjY29yZGluZyB0byBkYXRhIGNvbXBpbGVkIGJ5IEJsb29tYmVyZyBUaGUgcmVsYXRpb25zaGlwIHRpZ2h0ZW5lZCB0aG91Z2ggcmVtYWluZWQgbmVnYXRpdmUgbGFzdCB3ZWVrIGFzIG1pbGl0YXJ5IHRlbnNpb24gaW4gSXJhcSBib29zdGVkIHByaWNlcyBmb3IgYm90aCBjb21tb2RpdGllcyBDcnVkZSBhbmQgZ29sZCBtb3ZlZCBpbiB0YW5kZW0gZm9yIGEgaGFsZiBkZWNhZGUgYXMgaW52ZXN0b3JzIHNvdWdodCB0byBkaXZlcnNpZnkgaW50byBjb21tb2RpdGllcyBmcm9tIGVxdWl0aWVzIGFuZCBib25kcyBVUyBlY29ub21pYyBncm93dGggaXMgYm9vc3RpbmcgZXhwZWN0YXRpb25zIHRoYXQgZnVlbCBkZW1hbmQgd2lsbCByaXNlIHdoaWxlIGdvbGQgaXMgbG9zaW5nIGl0cyBhbGx1cmUgYXMgYW4gYWx0ZXJuYXRpdmUgdG8gdGhlIGRvbGxhciB3aXRoIHRoZSBGZWRlcmFsIFJlc2VydmUgc2lnbmFsaW5nIHRpZ2h0ZXIgbW9uZXRhcnkgcG9saWN5IEdvbGQgd2lsbCBiZSB0aGUgd29yc3RwZXJmb3JtaW5nIGNvbW1vZGl0eSBpbiB0aGUgbmV4dCAxMiBtb250aHMgZm9yZWNhc3QgNzEgcGVyY2VudCBvZiBpbnZlc3RvcnMgcG9sbGVkIGJ5IENyZWRpdCBTdWlzc2UgaW4gTWF5IHdoaWxlIDQ5IHBlcmNlbnQgc2FpZCBjcnVkZSBoYXMgdGhlIGJlc3Qgb3V0bG9vayBUaGUgbG9uZ3Rlcm0gY2hhcnQgZm9yIG9pbCB0ZWxscyBtZSB0aGF0IHRoZSBwcmljZSB3YW50cyB0byBnbyBoaWdoZXIgTWljaGFlbCBTaGFvdWwgd2hvIG92ZXJzZWVzIG1vcmUgdGhhbiAyMCBiaWxsaW9uIGFzIGNoaWVmIGV4ZWN1dGl2ZSBvZmZpY2VyIGF0IE1hcmtldGZpZWxkIEFzc2V0IE1hbmFnZW1lbnQgTExDIGluIE5ldyBZb3JrIHNhaWQgYnkgcGhvbmUgeWVzdGVyZGF5IEdvbGQgaGFkIGEgbW9kZXN0IGJvdW5jZSB0aGlzIG1vbnRoIHdoaWNoIEkgdGhpbmsgaGFzIHJ1biBpdHMgY291cnNlICAgICAgICAgICAgICAgICAgICAgICAgICAgIE9pbCBSaXNpbmcgV1RJIGNydWRlIHNsaWQgNTQgY2VudHMgVHVlc2RheSB0byAxMDYzNiBhIGJhcnJlbCBvbiB0aGUgTmV3IFlvcmsgTWVyY2FudGlsZSBFeGNoYW5nZSBUaGUgZ3JhZGUgaGFzIHJpc2VuIDQ3IHBlcmNlbnQgdGhpcyBxdWFydGVyIEJyZW50IHRoZSBFdXJvcGVhbiBiZW5jaG1hcmsgcm9zZSA1MSBjZW50cyB0byAxMTM0NSBvbiB0aGUgTG9uZG9uYmFzZWQgSUNFIEZ1dHVyZXMgRXVyb3BlIGV4Y2hhbmdlIHVwIDUzIHBlcmNlbnQgaW4gdGhlIHNlY29uZCBxdWFydGVyIEdvbGQgZnV0dXJlcyBmb3IgQXVndXN0IGRlbGl2ZXJ5IGRyb3BwZWQgMzMwIHRvIDEyNzIgYW4gb3VuY2Ugb24gdGhlIENvbWV4IGluIE5ldyBZb3JrIGRvd24gMDkgcGVyY2VudCB0aGlzIHF1YXJ0ZXIgVVMgZ3Jvc3MgZG9tZXN0aWMgcHJvZHVjdCB3aWxsIGluY3JlYXNlIDIyIHBlcmNlbnQgdGhpcyB5ZWFyIGFuZCAzIHBlcmNlbnQgaW4gMjAxNSBmb2xsb3dpbmcgYSAxOSBwZXJjZW50IGdhaW4gaW4gMjAxMyBhY2NvcmRpbmcgdG8gZWNvbm9taXN0cyBzdXJ2ZXllZCBieSBCbG9vbWJlcmcgVGhlIGVjb25vbXkgcGx1bmdlZCBpbnRvIHRoZSB3b3JzdCByZWNlc3Npb24gaW4gdGhlIHBvc3RXb3JsZCBXYXIgSUkgZXJhIGluIDIwMDkgVGhlIEZlZCByZWR1Y2VkIGl0cyBtb250aGx5IGFzc2V0IGJ1eWluZyB0byA0NSBiaWxsaW9uIGluIEFwcmlsIHRoZSBmb3VydGggc3RyYWlnaHQgY3V0IG9mIDEwIGJpbGxpb24gVGhlIGNlbnRyYWwgYmFuayB3aGljaCBlbmRzIGEgdHdvZGF5IG1lZXRpbmcgdG9kYXkgbWF5IHJhaXNlIGl0cyBiZW5jaG1hcmsgaW50ZXJlc3QgcmF0ZSBmYXN0ZXIgdGhhbiBpbnZlc3RvcnMgZXhwZWN0IGFjY29yZGluZyB0byBhIG1ham9yaXR5IG9mIGVjb25vbWlzdHMgaW4gYSBKdW5lIDEyMTYgc3VydmV5IEZvciB0aGUgb2lsIG1hcmtldCB3ZXJlIGNvbWluZyBvdXQgb2YgYSBwZXJpb2Qgb2YgZWNvbm9taWMgbWFsYWlzZSBhbmQgc2hvdWxkIHNlZSBkZW1hbmQgZ3JvdyB3aXRoIGluY3JlYXNlZCBlY29ub21pYyBhY3Rpdml0eSBSb2IgSGF3b3J0aCBhIHNlbmlvciBpbnZlc3RtZW50IHN0cmF0ZWdpc3QgaW4gU2VhdHRsZSBhdCBVUyBCYW5rIFdlYWx0aCBNYW5hZ2VtZW50IHdoaWNoIG92ZXJzZWVzIGFib3V0IDEyMCBiaWxsaW9uIG9mIGFzc2V0cyBzYWlkIGJ5IHBob25lIGxhc3Qgd2VlayBUaGUgRmVkIHRhcGVyIGFuZCB1bHRpbWF0ZSBlbmRpbmcgb2YgcXVhbnRpdGF0aXZlIGVhc2luZyB0YWtlcyBhd2F5IGZ1bmRhbWVudGFsIHN1cHBvcnQgZm9yIHRoZSBnb2xkIG1hcmtldCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSXJhcSBUZW5zaW9uIFRoZSAxMjBkYXkgY29ycmVsYXRpb24gYmV0d2VlbiBXVEkgYW5kIGdvbGQgd2FzIDAwNiBUdWVzZGF5IGNvbXBhcmVkIHdpdGggMDEgb24gSnVuZSAxMSBUaGUgbGluayBzdHJlbmd0aGVuZWQgdG8gMDYyIGluIEFwcmlsIDIwMTAgVGhlIEJyZW50Z29sZCBjb3JyZWxhdGlvbiB3YXMgMDA4IHllc3RlcmRheSBjb21wYXJlZCB3aXRoIDAwNSBvbiBKdW5lIDExIFRoZSBCcmVudCBjb3JyZWxhdGlvbiBkcm9wcGVkIHRvIDAxIG9uIEZlYiAyOCBBIGZpZ3VyZSBvZiAxIHdvdWxkIG1lYW4gdGhlIHR3byBtb3ZlIG9wcG9zaXRlIHRvIGVhY2ggb3RoZXIgQ3J1ZGUgYW5kIGdvbGQgZ2FpbmVkIGFmdGVyIElzbGFtaWMgU3RhdGUgaW4gSXJhcSBhbmQgdGhlIExldmFudCBjYXB0dXJlZCBNb3N1bCBJcmFxcyBiaWdnZXN0IG5vcnRoZXJuIGNpdHkgbGFzdCB3ZWVrIGFuZCBhZHZhbmNlZCB0b3dhcmQgQmFnaGRhZCBwdXNoaW5nIE9QRUNzIHNlY29uZGxhcmdlc3Qgb2lsIHByb2R1Y2VyIHRvIHRoZSBicmluayBvZiBjaXZpbCB3YXIgR29sZHMgY29ycmVsYXRpb24gd2l0aCBvaWwgaGFzIHN0cmVuZ3RoZW5lZCBvZiBsYXRlIGRyaXZlbiBieSBncm93aW5nIHRlbnNpb25zIGluIElyYXEgYW5hbHlzdHMgaW5jbHVkaW5nIEVkZWwgVHVsbHkgYXQgVUJTIEFHIHNhaWQgaW4gYSByZXBvcnQgVHVlc2RheSBMb29raW5nIGJhY2sgb3ZlciB0aGUgcGFzdCB5ZWFyIHNob3dzIHRoYXQgdGhlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIGdvbGQgYW5kIG9pbCBoYXMgZ2VuZXJhbGx5IHdlYWtlbmVkICAgICAgICAgICAgICAgICAgICAgICAgICBQb3J0Zm9saW8gU2hpZnQgSW52ZXN0b3JzIHNob3VsZCB0aWx0IHRoZWlyIGVuZXJneSBob2xkaW5ncyBieSAyNSBwZXJjZW50YWdlIHBvaW50cyB0byAyNTggcGVyY2VudCBvZiB0aGVpciBjb21tb2RpdHkgcG9ydGZvbGlvIFNvY2lldGUgR2VuZXJhbGUgU0Egc2FpZCBpbiBhIHJlcG9ydCBwdWJsaXNoZWQgSnVuZSA0IEdvbGQgcG9zaXRpb25zIHNob3VsZCBiZSBjdXQgYnkgNSBwZXJjZW50YWdlIHBvaW50cyB0byAxNzYgcGVyY2VudCB0aGUgYmFuayBzYWlkIFRoZSBJbnRlcm5hdGlvbmFsIEVuZXJneSBBZ2VuY3kgcmFpc2VkIGZvcmVjYXN0cyBmb3IgZ2xvYmFsIG9pbCBkZW1hbmQgaW4gMjAxNCBieSA2NTAwMCBiYXJyZWxzIGEgZGF5IGZvbGxvd2luZyBzdHJvbmdlcnRoYW5leHBlY3RlZCBncm93dGggaW4gdGhlIGZpcnN0IHF1YXJ0ZXIgaW4gSmFwYW4gdGhlIFVTIEdlcm1hbnkgYW5kIHRoZSBVSyBXb3JsZCBmdWVsIGNvbnN1bXB0aW9uIHdpbGwgaW5jcmVhc2UgYnkgMTMgbWlsbGlvbiBiYXJyZWxzIGEgZGF5IG9yIDE0IHBlcmNlbnQgdGhpcyB5ZWFyIHRvIGF2ZXJhZ2UgYSByZWNvcmQgOTI4IG1pbGxpb24gYmFycmVscyBkYXkgdGhlIFBhcmlzYmFzZWQgYWR2aXNlciB0byBvaWwgY29uc3VtaW5nIG5hdGlvbnMgc2FpZCBpbiBhIG1vbnRobHkgcmVwb3J0IG9uIE1heSAxNSBXZSBhcmUgYnV5aW5nIGNydWRlIGFuZCBzZWxsaW5nIGdvbGQgQmlsbCBCYXJ1Y2ggYSBzZW5pb3IgbWFya2V0IHN0cmF0ZWdpc3QgYXQgSWl0cmFkZXJjb20gaW4gQ2hpY2FnbyBzYWlkIGJ5IHBob25lIG9uIE1heSAyNyBHb2xkIGlzIG5vdCB0aGUgbW9zdCBhdHRyYWN0aXZlIHNhZmVoYXZlbiBhc3NldCBhdCB0aGUgbW9tZW50IEl0cyBub3QgYmVlbiBhYmxlIHRvIHByb2R1Y2UgbXVjaCB5aWVsZCBhdCBhbGwgQ3J1ZGUgb2lsIGhhcyBiZWVuIG1vdmluZyBoaWdoZXIgd2l0aCB0aGUgYmV0dGVyIGVjb25vbWljIG91dGxvb2sgICAgICAgICAgICAgICAgICAgICAgICAgICBTZWxsaW5nIEdvbGQgSG9sZGluZ3MgaW4gZXhjaGFuZ2V0cmFkZWQgZnVuZHMgYmFja2VkIGJ5IGdvbGQgdG91Y2hlZCAxNzE0NCBtZXRyaWMgdG9ucyBvbiBKdW5lIDE2IHRoZSBsb3dlc3Qgc2luY2UgT2N0b2JlciAyMDA5IEluIDIwMTMgbW9yZSB0aGFuIDczIGJpbGxpb24gd2FzIGVyYXNlZCBmcm9tIHRoZSB2YWx1ZSBvZiB0aGUgZnVuZHMgYWNjb3JkaW5nIHRvIGRhdGEgY29tcGlsZWQgYnkgQmxvb21iZXJnIFdlIGNvbnRpbnVlIHRvIHJlY29tbWVuZCBzZWxsaW5nIGdvbGQgcmFsbGllcyBhcyB3ZSBiZWxpZXZlIHRoYXQgZ29sZCBpcyBpbiBhIG11bHRpeWVhciBkb3dudHJlbmQgZHJpdmVuIGJ5IHRoZSBwcm9zcGVjdCBvZiBVUyByYXRlIGhpa2VzIFNvY2lldGUgR2VuZXJhbGUgc2FpZCBmb3JlY2FzdGluZyB0aGF0IHRoZSBtZXRhbCB0cmFkaW5nIGFib3ZlIDEyMDAgdGhpcyB5ZWFyIG1heSBicmVhayBiZWxvdyB0aGF0IGxldmVsIGluIDIwMTUgYW5kIGZhbGwgdW5kZXIgMTAwMCBpbiAyMDE2IEdvbGRtYW4gU2FjaHMgR3JvdXAgSW5jIHByZWRpY3RlZCB0aGF0IGdvbGQgd2lsbCBleHRlbmQgMjAxM3MgMjggcGVyY2VudCBzbHVtcCBpbiAyMDE0IFRoZSBkcm9wIGxhc3QgeWVhciBlbmRlZCBhIDEyIHllYXIgcmFsbHkgQW4gYWNjZWxlcmF0aW5nIFVTIGVjb25vbXkgbWVhbnMgYnVsbGlvbiB3aWxsIGZhbGwgdG8gMTA1MCBpbiAxMiBtb250aHMgR29sZHQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0xMi0wM1QwMDowMDowMFogVE8gMjAxMy0xMi0wM1Q1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDMxNjY=</field><field name="title" class="java.lang.String">rO0ABXQAMUdvbGQgQnVsbHMgQ3V0IFdhZ2VycyBhcyBHb2xkbWFuIFNlZXMgTW9yZSBMb3NzZXM=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUElI7iAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGZkZmI3Y2ZhYmEyNTEyZTc=</field><field name="symbol" class="java.lang.String">rO0ABXQABVNDR0xZ</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEqShSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAj9cKPXCj2</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkCj1wo9cK</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAj4UeuFHrh</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAj9cKPXCj2</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAjeuFHrhR7</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAADGcA==</field><field name="id" class="java.lang.String">rO0ABXQAEGFmNDgyNzcxNmU1Y2UwNWI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mD6FAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExNDk0</field><field name="title" class="java.lang.String">rO0ABXQAMkdvbGQgQmVhciBCZXRzIFJlYWNoIFJlY29yZCBhcyBTb3JvcyBDdXRzIEhvbGRpbmdz</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT7ATvSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGJjMmEwNGRhMzE1ZWFhMjI=</field><field name="symbol" class="java.lang.String">rO0ABXQABUdBSU5Q</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT7FdVCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6nrhR64Uf</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6wo9cKPXD</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6aPXCj1wp</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6cKPXCj1x</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3WZmZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAGQA==</field><field name="id" class="java.lang.String">rO0ABXQAEDVlMWU3MzM5NjVhYzc0YjQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mF5BAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDg3MDI=</field><field name="title" class="java.lang.String">rO0ABXQAM0dvbGQgQnVsbHMgUmV0cmVhdCBhcyBQcmljZXMgRHJvcCB0byBGb3VyLU1vbnRoIExvdw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUK3Cq8AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGRmNDQ1MGM3N2Y1NGE2NTc=</field><field name="symbol" class="java.lang.String">rO0ABXQAA05PVg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUK8MQsAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUiuFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUqZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUQzMzMzMz</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUdmZmZmZm</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBR49cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAACEpdA==</field><field name="id" class="java.lang.String">rO0ABXQAEGZmNzhiYTVlYjFiYmM4MGM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mG5hAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM1MDI=</field><field name="title" class="java.lang.String">rO0ABXQAQEdvbGQgQmVmdWRkbGVzIEJlcm5hbmtlIGFzIENlbnRyYWwgQmFua3MnIExvc3NlcyBhdCAkNTQ1IEJpbGxpb24=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGRSUSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGE1YTE1MDQyODBhOTc5NGQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABVNDR0xZ</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGWb6CAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlD1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlGZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkvXCj1wo9</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkvXCj1wo9</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkPXCj1wo9</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAHbyA==</field><field name="id" class="java.lang.String">rO0ABXQAEDNkZTU4YjQzMzA1NTFmZDQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mITOAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDg3MTg=</field><field name="title" class="java.lang.String">rO0ABXQAKkdsb2JhbCBTdG9ja3MgQ2hhbGsgVXAgQmVzdCBSdW4gU2luY2UgMjAwOQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKsvfcAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDU5NjVkYTg2NWRhZDQzOGQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAA05PVg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKx5FMAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUb1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUoeuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUQUeuFHrh</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUbCj1wo9c</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBRzCj1wo9c</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAACqmwA==</field><field name="id" class="java.lang.String">rO0ABXQAEGNiOTU3OTQwMDA1ZGE3YWM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mIrhAAAA==</field></document></documents><date>2015-05-07T03:24:05-0500</date></cacheEntry>
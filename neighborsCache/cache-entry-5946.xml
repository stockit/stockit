<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0EhtWaXNhIEluYyBhbmQgTWFzdGVyQ2FyZCBJbmMgaGF2ZSBhYm91dCBzaXggd2Vla3MgdG8gZGVjaWRlIHdoZXRoZXIgYSBuZXcgUnVzc2lhbiBsYXcgcmVxdWlyaW5nIHRoZW0gdG8gcGF5IGh1bmRyZWRzIG9mIG1pbGxpb25zIG9mIGRvbGxhcnMgdG8gb3BlcmF0ZSBpbiB0aGF0IGNvdW50cnkgaXMgd29ydGggdGhlIGNvc3QgRm9yIG5vdyBWaXNhcyBhbnN3ZXIgaXMgbnlldCBSdXNzaWFzIGN1cnJlbnQgZGVtYW5kcyBqdXN0IGdvIGJleW9uZCB3aGF0IHdlZCBiZSB3aWxsaW5nIHRvIGRvIFZpc2EgQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXIgQ2hhcmxpZSBTY2hhcmYgc2FpZCB5ZXN0ZXJkYXkgYXQgYW4gaW52ZXN0b3IgY29uZmVyZW5jZSBpbiBCb3N0b24gSSB3b3VsZCBob3BlIHRoYXQgd2UgZ2V0IHRvIGEgZGlmZmVyZW50IGNvbmNsdXNpb24gdGhhbiB0byBnZXQgdG8gSnVseSAxIGFuZCBqdXN0IHNheSB3ZXJlIG5vdCB3aWxsaW5nIHRvIHBhcnRpY2lwYXRlIFNjaGFyZiBhbmQgTWFzdGVyQ2FyZCBDRU8gQWpheSBCYW5nYSBzYWlkIHllc3RlcmRheSB0aGV5cmUgdGFsa2luZyB3aXRoIFJ1c3NpYW4gbGF3bWFrZXJzIGFib3V0IG1ha2luZyBjaGFuZ2VzIHRvIHRoZSBsZWdpc2xhdGlvbiBwYXNzZWQgaW4gcmVzcG9uc2UgdG8gc2FuY3Rpb25zIHRoZSBVUyBpbXBvc2VkIHRvIHByb3Rlc3QgdGhlIFJ1c3NpYW4gcm9sZSBpbiBVa3JhaW5lcyB0dXJtb2lsIEF0IHN0YWtlIGlzIGFib3V0IDYzOCBtaWxsaW9uIGluIGNvbWJpbmVkIGFubnVhbCByZXZlbnVlIGZvciB0aGUgdHdvIHBheW1lbnRzIG5ldHdvcmtzIGFzIHdlbGwgYXMgdGhlaXIgZm9vdGhvbGQgaW4gYSBtYXJrZXQgdGhhdHMgc2hpZnRpbmcgZnJvbSBjYXNoIHRvIGVsZWN0cm9uaWMgZm9ybXMgb2YgcGF5bWVudCBVUyB0aHJlYXRzIG9mIGV2ZW4gbW9yZSBzYW5jdGlvbnMgYWhlYWQgb2YgbmV4dCB3ZWVrcyBVa3JhaW5pYW4gcHJlc2lkZW50aWFsIGVsZWN0aW9ucyBsb29tIG92ZXIgdGhlIGRpc2N1c3Npb25zIFRoZXl2ZSBnb3QgdGhyZWUgb3B0aW9ucyBkbyB3ZSBzdGF5IGNhbiB3ZSBsZWF2ZSBvciBjYW4gd2UgbmVnb3RpYXRlIFdpbGxpYW0gUG9tZXJhbnogZGVwdXR5IGRpcmVjdG9yIG9mIHRoZSBLZW5uYW4gSW5zdGl0dXRlIGZvciBBZHZhbmNlZCBSdXNzaWFuIFN0dWRpZXMgYXQgdGhlIFdvb2Ryb3cgV2lsc29uIEludGVybmF0aW9uYWwgQ2VudGVyIGZvciBTY2hvbGFycyBpbiBXYXNoaW5ndG9uIERDIHNhaWQgaW4gYSBwaG9uZSBpbnRlcnZpZXcgSWYgYWRkaXRpb25hbCBzYW5jdGlvbnMgYXJlIGludHJvZHVjZWQgYWZ0ZXIgdGhlIFVrcmFpbmUgZWxlY3Rpb25zIHRoZW4gaXRzIGxlc3MgbGlrZWx5IHRoYXQgdGhlIFJ1c3NpYW4gZ292ZXJubWVudCB3aWxsIGJhY2sgZG93biBEaXJlY3QgVmlvbGF0aW9uIERtaXRyeSBNZWR2ZWRldiBSdXNzaWFzIHByaW1lIG1pbmlzdGVyIHVyZ2VkIHRoZSB0d28gY29tcGFuaWVzIHRvIGZ1bGZpbGwgdGhlaXIgcmVzcG9uc2liaWxpdGllcyB0byBjbGllbnRzIGFuZCBzdGF5IGluIFJ1c3NpYSBXaGF0IFZpc2EgYW5kIE1hc3RlckNhcmQgZGlkIHdhcyBhIGRpcmVjdCB2aW9sYXRpb24gb2YgdGhlaXIgY29udHJhY3Qgd2l0aCBSdXNzaWFuIGNsaWVudHMgbm90IGJhbmtzIGJ1dCBpbmRpdmlkdWFscyB3aG8gdHJ1c3RlZCB0aGVzZSBwYXltZW50IHN5c3RlbXMgTWVkdmVkZXYgc2FpZCBpbiBhIEJsb29tYmVyZyBUViBpbnRlcnZpZXcgaW4gTW9zY293IHllc3RlcmRheSBBZnRlciBWaXNhIGFuZCBNYXN0ZXJDYXJkIHN0b3BwZWQgcHJvY2Vzc2luZyBwYXltZW50cyBhdCBmb3VyIFJ1c3NpYW4gYmFua3MgaW4gcmVzcG9uc2UgdG8gVVMgc2FuY3Rpb25zIFJ1c3NpYSBwYXNzZWQgYSBsYXcgY3JlYXRpbmcgaXRzIG93biBuYXRpb25hbCBwYXltZW50IHN5c3RlbSBhbmQgaW1wb3NpbmcgcnVsZXMgZm9yIGZvcmVpZ24gZmlybXMgdGhhdCBpbmNsdWRlIGZpbmVzIGZvciBkZW55aW5nIHNlcnZpY2VzIGFuZCBhIG1hbmRhdG9yeSBzZWN1cml0eSBkZXBvc2l0IHN0YXJ0aW5nIGluIEp1bHkgU2hhcmVzIG9mIGJvdGggY29tcGFuaWVzIHR1bWJsZWQgYWZ0ZXIgVmlzYSBzYWlkIGxhc3QgbW9udGggdGhhdCB0aGUgUnVzc2lhbiBwcm9oaWJpdGlvbnMgbWF5IHRyaW0gc2V2ZXJhbCBwZW5uaWVzIGZyb20gMjAxNCBlYXJuaW5ncyBhbmQgTWFzdGVyQ2FyZCBzYWlkIGl0IGV4cGVjdHMgYSBzbWFsbCBpbXBhY3Qgb24gdGhpcyB5ZWFycyByZXN1bHRzIENvbGxhdGVyYWwgUGF5bWVudCBUaGUgbmV3IGxhdyByZXF1aXJlcyB0aGF0IGZpcm1zIG1ha2UgZGVwb3NpdHMgYXQgdGhlIFJ1c3NpYW4gQ2VudHJhbCBCYW5rIHRoYXQgd2lsbCBiZSB0YXBwZWQgc2hvdWxkIHRoZXkgYmxvY2sgdHJhbnNhY3Rpb25zIFB1cmNoYXNlIE5ldyBZb3JrYmFzZWQgTWFzdGVyQ2FyZCBhbmQgVmlzYSBzYWlkIHllc3RlcmRheSB0aGF0IHRoZSBjb2xsYXRlcmFsIHdvdWxkIGFtb3VudCB0byBodW5kcmVkcyBvZiBtaWxsaW9ucyBvZiBkb2xsYXJzIE1hc3RlckNhcmQgZ2VuZXJhdGVkIGFib3V0IDIgcGVyY2VudCBvZiBpdHMgcmV2ZW51ZSBmcm9tIFJ1c3NpYSBvciBhYm91dCAxNjcgbWlsbGlvbiBsYXN0IHllYXIgbW9zdGx5IGZyb20gZG9tZXN0aWMgY3VzdG9tZXJzIHRoZSBmaXJtIGhhcyBzYWlkIFRoZSBjb3VudHJ5IHJlcHJlc2VudHMgYSBjb3VwbGUgb2YgcG9pbnRzIG9mIHJldmVudWUgZm9yIEZvc3RlciBDaXR5IENhbGlmb3JuaWFiYXNlZCBWaXNhIHdpdGggbW9zdCBvZiB0aGF0IGZyb20gY3Jvc3Nib3JkZXIgdHJhbnNhY3Rpb25zIFNjaGFyZiA0OSBzYWlkIHllc3RlcmRheSBUaGF0IGFtb3VudHMgdG8gYWJvdXQgMyBwZXJjZW50IHRvIDQgcGVyY2VudCBvZiBWaXNhcyBhbm51YWwgcmV2ZW51ZSBvciBhcyBtdWNoIGFzIDQ3MSBtaWxsaW9uIGxhc3QgeWVhciBhY2NvcmRpbmcgdG8gZXN0aW1hdGVzIGZyb20gTW9yZ2FuIFN0YW5sZXkgVGhlIHR3byBmaXJtcyBjb250cm9sIGFib3V0IDk1IHBlcmNlbnQgb2YgdGhlIHBheW1lbnRzIG1hcmtldCBpbiBSdXNzaWEgTW9yZ2FuIFN0YW5sZXkgc2FpZCBXZXZlIGhhZCBtZWV0aW5ncyB3aXRoIHRoZSBDZW50cmFsIEJhbmsgbWVldGluZ3Mgd2l0aCB0aGUgTWluaXN0cnkgb2YgRmluYW5jZSBhbmQgYXJlIHdhaXRpbmcgZm9yIHRoYXQgY2xhcml0eSBNYXN0ZXJDYXJkcyBCYW5nYSA1NCBzYWlkIGF0IHRoZSBpbnZlc3RvciBjb25mZXJlbmNlIEhlIGRpZG50IGVsYWJvcmF0ZSBvbiB3aGV0aGVyIE1hc3RlckNhcmQgd2FzIHdpbGxpbmcgdG8gbWVldCBSdXNzaWFzIGN1cnJlbnQgZGVtYW5kcyBVa3JhaW5lIFZvdGUgVGhlIG5ldyBydWxlcyBjb3VsZCBjb21wcm9taXNlIHRoZSBuZXR3b3JrcyBwcm9zcGVjdHMgaW4gUnVzc2lhIGFzIHdlbGwgYXMgaW4gb3RoZXIgZW1lcmdpbmcgbWFya2V0cyBzdWNoIGFzIENoaW5hIHRoZSB3b3JsZHMgc2Vjb25kbGFyZ2VzdCBlY29ub215IGFuYWx5c3RzIGluY2x1ZGluZyBNb3JnYW4gU3RhbmxleXMgU21pdHRpcG9uIFNyZXRoYXByYW1vdGUgc2FpZCBJdHMgbm90IGp1c3QgdGhlIGZlZXMgdGhhdCB0aGV5IGhhdmUgdG8gcGF5IGl0cyB0aGF0IGl0IHBvdGVudGlhbGx5IHNldHMgYSBwcmVjZWRlbnQgU3JldGhhcHJhbW90ZSBzYWlkIE1hc3RlckNhcmQgaGFzIHNsaWQgMTIgcGVyY2VudCB0aGlzIHllYXIgdG8gY2xvc2UgeWVzdGVyZGF5IGF0IDczODYgaW4gTmV3IFlvcmsgd2hpbGUgVmlzYSBoYXMgZGVjbGluZWQgNTUgcGVyY2VudCB0byAyMTAzNiBJZiBSdXNzaWEgb3IgaXRzIHByb3hpZXMgZGlzcnVwdCB0aGUgcHJlc2lkZW50aWFsIHZvdGUgdGhlIFVTIGFuZCBpdHMgYWxsaWVzIHdpbGwgaW1wb3NlIHNlY3RvcmFsIGVjb25vbWljIHNhbmN0aW9ucyBTZWNyZXRhcnkgb2YgU3RhdGUgSm9obiBLZXJyeSBzYWlkIE1heSAxNSBUaGUgVVMgaGFzIHdhcm5lZCB0aGF0IFJ1c3NpYXMgbWlsaXRhcnkgZW5lcmd5IGFuZCBmaW5hbmNpYWwgaW5kdXN0cmllcyBtYXkgYmVjb21lIHRhcmdldHMgVGhpcyB3b3VsZCBlc3NlbnRpYWxseSBmb3JjZSBWaXNhIGFuZCBNYXN0ZXJDYXJkIHRvIHdpdGhkcmF3IEFuZGVycyBBc2x1bmQgYSBzZW5pb3IgZmVsbG93IGF0IHRoZSBQZXRlcnNvbiBJbnN0aXR1dGUgZm9yIEludGVybmF0aW9uYWwgRWNvbm9taWNzIGluIFdhc2hpbmd0b24gc2FpZCBpbiBhIHBob25lIGludGVydmlldyBUaGUgY29zdCB3b3VsZCBiZSBzdWJzdGFudGlhbCBTaG91bGQgdGhlIHR3byBjb21wYW5pZXMgY29tcGxldGVseSB3aXRoZHJhdyB0aGUgYmlnZ2VzdCBlZmZlY3Qgd291bGQgYmUgb24gdGhlIDE1IHBlcmNlbnQgb2YgUnVzc2lhcyBwb3B1bGF0aW9uIHdobyByZWd1bGFybHkgdHJhdmVsIGFicm9hZCBBc2x1bmQgc2FpZCBUaGUgZmlybXMgZGVjaXNpb25zIHdpbGwgYmUgY2xvc2VseSB3YXRjaGVkIGJ5IGFsbCBVUyBjb21wYW5pZXMgdGhhdCBkbyBidXNpbmVzcyBpbiBSdXNzaWEgUG9tZXJhbnogc2FpZCBXaGF0IGhhcHBlbnMgdG8gdGhlbSB3aWxsIGJlIGEgc2lnbmFsIG9mIHdoYXRzIGFoZWFkIFBvbWVyYW56IHNhaWQgSWYgVmlzYSBhbmQgTWFzdGVyQ2FyZCBjYW50IHdvcmsgdGhlcmUgd2hvIGlzIGdvaW5nIHRvIGJlIGFibGUgdG8gd29yayBpbiBSdXNzaWF0AARyb3dzdXEAfgAKAAAAAXQAATV0AAVzdGFydHVxAH4ACgAAAAF0AAEwdAACZmx1cQB+AAoAAAABdABvYXJ0aWNsZUlkLHRpdGxlLGNvbnRlbnQsZGF0ZSxzdG9ja0hpc3RvcnlJZCxzeW1ib2wsaGlzdG9yeURhdGUsb3BlbixoaWdoLGxvdyxjbG9zZSxhZGpDbG9zZSx2b2x1bWUsaWQsX3ZlcnNpb25fdAACZnF1cQB+AAoAAAABdAA6aGlzdG9yeURhdGU6WzIwMTMtMDMtMjdUMDA6MDA6MDBaIFRPIDIwMTMtMTItMDNUNTk6NTk6NTlaXXgAcA==</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTE3MDAw</field><field name="title" class="java.lang.String">rO0ABXQAP0ZyZW5jaCBBdXRvIENvbXBhbmllcywgT2lsIFNoaXBwZXJzIE1heSBQcm9maXQgRnJvbSBJcmFuIEFjY29yZA==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKN188AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDBkZjQ3NmJkMTY5ZTJhZWI=</field><field name="symbol" class="java.lang.String">rO0ABXQAAlJF</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKS/isAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBjsKPXCj1x</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBjw9cKPXCk</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBjmPXCj1wp</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBjm4UeuFHs</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBjB64UeuFI</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAbwkA==</field><field name="id" class="java.lang.String">rO0ABXQAEDczNjdhODQ5Nzc0MGZhYmM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJJdAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDcyODc=</field><field name="title" class="java.lang.String">rO0ABXQAV0luIEdvbGQgV2UgVHJ1c3Q6IFN0YXRlcyBQdXNoIEJ1bGxpb24gYXMgTGVnYWwgVGVuZGVyLCBTaG93IExpdHRsZSBGYWl0aCBpbiBGZWQgVGFjdGljcw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT3oA9yAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGJkN2MzOTIwMmZkN2Y0OTY=</field><field name="symbol" class="java.lang.String">rO0ABXQABEJLU0M=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT3tKjiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAo3Cj1wo9c</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAo5mZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAoKPXCj1wp</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAoPXCj1wo9</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAmqPXCj1wp</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAI/A==</field><field name="id" class="java.lang.String">rO0ABXQAEDI3MWQ2ZjM0MmQzMGMxMmI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mLNIAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM1MDI=</field><field name="title" class="java.lang.String">rO0ABXQAQEdvbGQgQmVmdWRkbGVzIEJlcm5hbmtlIGFzIENlbnRyYWwgQmFua3MnIExvc3NlcyBhdCAkNTQ1IEJpbGxpb24=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGRSUSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGE1YTE1MDQyODBhOTc5NGQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABVNDR0xZ</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGWb6CAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlD1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlGZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkvXCj1wo9</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkvXCj1wo9</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkPXCj1wo9</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAHbyA==</field><field name="id" class="java.lang.String">rO0ABXQAEDNkZTU4YjQzMzA1NTFmZDQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mITOAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDY0NDE=</field><field name="title" class="java.lang.String">rO0ABXQAQVBvdGFzaCdzICQyMCBCaWxsaW9uIE1hcmtldCBUcmFuc2Zvcm1lZCBXaXRoICdQcmljZSBXYXInIFBvc3NpYmxl</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUA4PzCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDdiNzdmZWNjMDhmMzA4ZjU=</field><field name="symbol" class="java.lang.String">rO0ABXQABkJIUC5BWA==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUA9ZYyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBB0KPXCj1x</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBB4AAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBBvCj1wo9c</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBB4AAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA/64UeuFHs</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAFylMA==</field><field name="id" class="java.lang.String">rO0ABXQAEDIxNTJjN2I1MzkxOTFlMDQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mIuaAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDMyMjQ=</field><field name="title" class="java.lang.String">rO0ABXQANlRheCBMYXcgRnVlbHMsIFRoZW4gS2lsbHMsIGEgRGlzY291bnQtVG9iYWNjbyBJbmR1c3RyeQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEBFzSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGUzOTY1NDdiNTJkZmZkYWE=</field><field name="symbol" class="java.lang.String">rO0ABXQABFJPTEw=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEGPZCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOOZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOtwo9cKPX</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOOZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOp64UeuFI</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBNrMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAC6VA==</field><field name="id" class="java.lang.String">rO0ABXQAEDdkMmZmMzdiYmUxMThlMzc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKMBAAAA==</field></document></documents><date>2015-05-07T12:10:37-0500</date></cacheEntry>
<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0CrZJY2VsYW5kcyBnb3Zlcm5tZW50IHByb3Bvc2VkIGRpc2JhbmRpbmcgdGhlIEhvdXNpbmcgRmluYW5jaW5nIEZ1bmQgdGhlIG5hdGlvbnMgbGFyZ2VzdCBtb3J0Z2FnZSBwcm92aWRlciBhcyB0aGUgbGVuZGVyIHN0cnVnZ2xlcyB0byBtYWtlIGEgcHJvZml0IGFtaWQgbG9hbiBsb3NzZXMgYW5kIGNvbXBldGl0aW9uIGZyb20gY29tbWVyY2lhbCBiYW5rcyBUaGUgaXNsYW5kIG5hdGlvbiB3aWxsIHdpbmQgZG93biB0aGUgb3BlcmF0aW9ucyBvdmVyIHRoZSBuZXh0IDMwIHllYXJzIGFuZCBjb250aW51ZSB0byBzZXJ2aWNlIHRoZSBsZW5kZXJzIDQ4MCBiaWxsaW9uIGtyb251ciA0MjkgYmlsbGlvbiBpbiBib25kcyB0aGUgZ292ZXJubWVudCBzYWlkIHRvZGF5IExhd3MgcGVybWl0dGluZyB0aGUgY2hhbmdlcyB3aWxsIGJlIGludHJvZHVjZWQgaW4gcGFybGlhbWVudCB0aGlzIGZhbGwgYWxsb3dpbmcgZm9yIHRoZSBzdXNwZW5zaW9uIG9mIEhGRnMgY3VycmVudCBkYWlseSBvcGVyYXRpb25zIFRoZSBnb3Zlcm5tZW50IGlzIGFsc28gc2Vla2luZyB0byBzZXQgdXAgYSBzeXN0ZW0gdGhhdCByZXNlbWJsZXMgRGVubWFya3MgbW9ydGdhZ2UgYm9uZCBtYXJrZXQgYW5kIGludHJvZHVjZSBhIG5ldyBob3VzaW5nIGFnZW5jeSB0aGF0IHdvbnQgZW5qb3kgYSBzdGF0ZSBndWFyYW50ZWUgVGhlc2UgYXJlIGNsZWFyIGFuZCB3ZWxsIGRlZmluZWQgcHJvcG9zYWxzIHdoaWNoIHdpbGwgc3VwcG9ydCBhIHN1c3RhaW5hYmxlIGhvdXNpbmcgbWFya2V0IHdpdGggcmVhbGlzdGljIGNob2ljZXMgYW5kIHNlbnNpYmxlIGhvdXNpbmcgc3VwcG9ydCBmb3IgcGVvcGxlIGRlcGVuZGluZyBvbiBpbmNvbWUgYW5kIGNpcmN1bXN0YW5jZXMgV2VsZmFyZSBhbmQgSG91c2luZyBNaW5pc3RlciBFeWdsbyBIYXJkYXJkb3R0aXIgc2FpZCBpbiBhbiBlbWFpbGVkIHN0YXRlbWVudCBUaGUgZ29hbCBpcyB0byBndWFyYW50ZWUgdGhhdCBldmVyeW9uZSBpcyBhZmZvcmRlZCBzZWN1cmUgaG91c2luZyBhbmQgdGhlc2UgcHJvcG9zYWxzIGFyZSBhIGdvb2QgZm91bmRhdGlvbiBmb3IgdGhhdCBIRkYgaGFzIGJlZW4gb24gdGhlIGJyaW5rIG9mIGluc29sdmVuY3kgYXMgaXQgbG9zZXMgbWFya2V0IHNoYXJlIGFuZCBob3VzZWhvbGRzIHN0cnVnZ2xlIHRvIHJlcGF5IGxvYW5zIFRoZSBsZW5kZXIgY2FuIG9ubHkgb2ZmZXIgaW5mbGF0aW9ubGlua2VkIGxvYW5zIHdoaWNoIGFyZSBsb3NpbmcgdG8gcmVndWxhciBtb3J0Z2FnZXMgSEZGIGxvc3QgNDQgYmlsbGlvbiBrcm9udXIgbGFzdCB5ZWFyIGFuZCBpdHMgZXF1aXR5IHJhdGlvIHdhcyAzNCBwZXJjZW50IGJlbG93IHRoZSA1IHBlcmNlbnQgcmVndWxhdG9yeSBtaW5pbXVtIENhcGl0YWwgQ29udHJvbHMgSGFyZGFyZG90dGlyIGV4cGVjdHMgdGhlIHBsYW4gdG8gZGlzYmFuZCBIRkYgd2lsbCBnYXJuZXIgc3VwcG9ydCBpbiBwYXJsaWFtZW50IHdoZW4gaXRzIHByZXNlbnRlZCB0byBsYXdtYWtlcnMgc2hlIHRvbGQgcmVwb3J0ZXJzIGluIFJleWtqYXZpayB0b2RheSBJdHMgYWJzb2x1dGVseSBjbGVhciB0aGF0IEhGRnMgb3V0c3RhbmRpbmcgb2JsaWdhdGlvbnMgd2lsbCBjb250aW51ZSB0byBiZSBiYWNrZWQgYnkgYSBzdGF0ZSBndWFyYW50ZWUgc2hlIHNhaWQgVGhlIG1pbmlzdGVycyBuZXcgc3lzdGVtIGFudGljaXBhdGVzIHRoYXQgZnV0dXJlIG1vcnRnYWdlcyB3aWxsIG5vdCBiZSBsaW5rZWQgdG8gaW5mbGF0aW9uIEhGRnMgYm9ycm93ZXJzIHdpbGwgY29udGludWUgdG8gYmUgc2VydmljZWQgYnkgYSBuZXcgaG91c2luZyBpbnN0aXR1dGUgb3IgYW5vdGhlciBib2R5IGVubGlzdGVkIGZvciB0aGUgdGFzayBUaGUgZ292ZXJubWVudCBoYWQgYWxzbyBwcm9wb3NlZCBhIHBsYW4gdG8gcmVkdWNlIGhvdXNlaG9sZCBkZWJ0IGJ5IGFzIG11Y2ggYXMgMTUwIGJpbGxpb24ga3JvbnVyIGluIHBhcnQgYnkgcmFpc2luZyB0YXhlcyBvbiBiYW5rcyBhbmQgb2ZmZXJpbmcgdGF4IGluY2VudGl2ZXMgdG8gaG9tZW93bmVycyBIb21lb3duZXJzIGhhdmUgYWxzbyBzZWVuIHNvbWUgcmVsaWVmIGFmdGVyIGNlbnRyYWwgYmFuayBjdXJyZW5jeSBpbnRlcnZlbnRpb25zIGhlbHBlZCBicmluZyBpbmZsYXRpb24gYmVsb3cgMyBwZXJjZW50IGZyb20gYSBwZWFrIG9mIDE5IHBlcmNlbnQgaW4gMjAwOSBXaGlsZSBJY2VsYW5kIGhhcyBzdHJ1Z2dsZWQgdG8gbGlmdCBjYXBpdGFsIGNvbnRyb2xzIGluIHBsYWNlIHNpbmNlIGl0cyB0aHJlZSBsYXJnZXN0IGJhbmtzIGNvbGxhcHNlZCBpbiAyMDA4IGRlYnQgcmVsaWVmIGZvciBjb25zdW1lcnMgaGFzIGhlbHBlZCBwcm9wZWwgYSByZWNvdmVyeSBBZnRlciBjb21wbGV0aW5nIHRoZSAzM21vbnRoIEludGVybmF0aW9uYWwgTW9uZXRhcnkgRnVuZCBwcm9ncmFtIGluIEF1Z3VzdCAyMDExIEljZWxhbmQgaXMgb3V0Z3Jvd2luZyBtdWNoIG9mIEV1cm9wZSBhcyBpdCByZWNvdmVycyBmcm9tIGl0cyByZWNlc3Npb24gVGhlIGVjb25vbXkgaXMgc2VlbiBleHBhbmRpbmcgMjYgcGVyY2VudCB0aGlzIHllYXIgYW5kIDM3IHBlcmNlbnQgaW4gMjAxNSB0aGUgY2VudHJhbCBiYW5rIGZvcmVjYXN0IGluIE1hcmNoIFNlZGxhYmFua2kgaGFzIGtlcHQgaXRzIGJlbmNobWFyayByYXRlIHVuY2hhbmdlZCBhdCA2IHBlcmNlbnQgc2luY2UgTm92ZW1iZXIgMjAxMiBhcyB0aGUgc3Ryb25nZXIga3JvbmEgcHVzaGVkIGluZmxhdGlvbiBiZWxvdyB0aGUgYmFua3MgMjUgcGVyY2VudCB0YXJnZXR0AARyb3dzdXEAfgAKAAAAAXQAATV0AAVzdGFydHVxAH4ACgAAAAF0AAEwdAACZmx1cQB+AAoAAAABdABvYXJ0aWNsZUlkLHRpdGxlLGNvbnRlbnQsZGF0ZSxzdG9ja0hpc3RvcnlJZCxzeW1ib2wsaGlzdG9yeURhdGUsb3BlbixoaWdoLGxvdyxjbG9zZSxhZGpDbG9zZSx2b2x1bWUsaWQsX3ZlcnNpb25fdAACZnF1cQB+AAoAAAABdAA6aGlzdG9yeURhdGU6WzIwMTMtMDMtMjdUMDA6MDA6MDBaIFRPIDIwMTMtMDMtMjdUNTk6NTk6NTlaXXgAcA==</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwNTA=</field><field name="title" class="java.lang.String">rO0ABXQAMk5vcndlZ2lhbiBIb3VzaW5nIEJ1YmJsZSBTZWVuIGJ5IFNoaWxsZXIgRGVmbGF0aW5n</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJK5SMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDhmYjk1ZGYxYzA5ZGQ3M2I=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0ROQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJQC38AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBboo9cKPXD</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBbyZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBbnhR64Ueu</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBbvXCj1wo9</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBbHCj1wo9c</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAeaGA==</field><field name="id" class="java.lang.String">rO0ABXQAEDRkYzUxZDM2MjM5MTU1YzA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFaXAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUxMTg=</field><field name="title" class="java.lang.String">rO0ABXQAMFNoaWxsZXIncyBCdWJibGUgV2FybmluZyBEaXNtaXNzZWQgaW4gTG9hbiBTdXJnZQ==</field><field name="content" class="java.lang.String">rO0ABXQVTFRoZSBnb3Zlcm5tZW50IGluY3JlYXNlZCB0aGUgcHJpY2UgbGltaXQgb2YgaG91c2VzIHBlb3BsZSBjYW4gYnV5IHVzaW5nIHRoZSB1bmVtcGxveW1lbnQgaW5zdXJhbmNlIGZ1bmQgb24gU2VwdC4gMzAgYWZ0ZXIgcHVibGljIGxlbmRpbmcgZm9yIGhvbWVzIGluY3JlYXNlZCBtb3JlIHRoYW4gZm91ciB0aW1lcyBhcyBtdWNoIGFzIHByaXZhdGUgYmFua3MgaW4gdGhlIHR3byB5ZWFycyB0aHJvdWdoIEp1bmUsIHRvIDIwMiBiaWxsaW9uIHJlYWlzICgkOTAgYmlsbGlvbiksIGFjY29yZGluZyB0byBjZW50cmFsIGJhbmsgZGF0YS4gUm91c3NlZmbigJlzIGhvbWVidWlsZGluZyBwcm9ncmFtIGhhcyBwcm9wZWxsZWQgZGVtYW5kIGFzIHNoZSBzZWVrcyB0byBzdGltdWxhdGUgdGhlIGVjb25vbXkgYmVmb3JlIG5leHQgeWVhcuKAmXMgcHJlc2lkZW50aWFsIGVsZWN0aW9uLiBSb2JlcnQgU2hpbGxlciwgc2l4IHdlZWtzIGJlZm9yZSB3aW5uaW5nIHRoZSBOb2JlbCBQcml6ZSBmb3IgZWNvbm9taWNzLCBjYXV0aW9uZWQgdGhhdCBzdWNoIGRlbWFuZCBtYXkgYmUgZnVlbGluZyBhIGJ1YmJsZSBhcyBob21lIHByaWNlcyBncm93IHR3aWNlIGFzIGZhc3QgYXMgcmVudC4gTW9ydGdhZ2UgZGVidCBhcyBhIHBlcmNlbnRhZ2Ugb2YgZGlzcG9zYWJsZSBob3VzZWhvbGQgaW5jb21lIGhhcyBjbGltYmVkIHRvIGEgcmVjb3JkIDE1IHBlcmNlbnQsIGFsbW9zdCBkb3VibGUgdGhlIGxldmVsIGF0IHRoZSBzdGFydCBvZiBSb3Vzc2VmZuKAmXMgdGVybS4g4oCcVGhhdOKAmXMgd2hlcmUgdGhlcmXigJlzIHNvbWV0aGluZyBoYXBwZW5pbmcgaW4gdGhlIGNyZWRpdCBtYXJrZXQgYW5kLCBmb3IgYSBnb3Zlcm5tZW50IHZlcnkgd29ycmllZCBhYm91dCBncm93dGgsIHRoZXnigJlyZSBub3QgZ29pbmcgdG8gc3RvcCB0aGF0IHBhcnR5LOKAnSBUb255IFZvbHBvbiwgZGlyZWN0b3Igb2YgZW1lcmdpbmctbWFya2V0cyByZXNlYXJjaCBhdCBOb211cmEgSG9sZGluZ3MgSW5jLiwgc2FpZCBieSB0ZWxlcGhvbmUgZnJvbSBOZXcgWW9yay4g4oCcSWYgdGhlcmXigJlzIGEgYnViYmxlIG9yIG5vdCwgdGhhdOKAmXMgYSBmdXR1cmUgcHJvYmxlbSB0byBkZWFsIHdpdGguIEkgc2VlIG5vIHBvbGl0aWNhbCBpbmNlbnRpdmXigJ0gdG8gd2luZCBkb3duIG1vcnRnYWdlIGxlbmRpbmcuIEJpZ2dlc3QgQ2l0aWVzIEJyYXppbOKAmXMgcmVhbCBlc3RhdGUgY3JlZGl0IHJlbWFpbnMgYSByZWxhdGl2ZWx5IHNtYWxsIHBhcnQgb2YgZ3Jvc3MgZG9tZXN0aWMgcHJvZHVjdCBhbmQgb3ZlcmFsbCBjcmVkaXQgY29tcGFyZWQgdG8gb3RoZXIgZW1lcmdpbmcgbWFya2V0cywgYW5kIGdyb3d0aCBoYXMgYmVlbiByYXBpZCBiZWNhdXNlIG9mIGEgc21hbGwgYmFzZSwgVHVsaW8gTWFjaWVsLCB0aGUgaGVhZCBvZiB0aGUgY2VudHJhbCBiYW5r4oCZcyBlY29ub21pYyByZXNlYXJjaCBkZXBhcnRtZW50LCB0b2xkIHJlcG9ydGVycyBpbiBCcmFzaWxpYSBPY3QuIDI5LiBIb21lIHByaWNlcyBpbiBCcmF6aWzigJlzIGJpZ2dlc3QgY2l0aWVzLCBTYW8gUGF1bG8gYW5kIFJpbyBkZSBKYW5laXJvLCBoYXZlIHN1cmdlZCAxODggcGVyY2VudCBhbmQgMjMwIHBlcmNlbnQgc2luY2UgSmFudWFyeSAyMDA4IOKAlCBhYm91dCBkb3VibGUgdGhlIHBhY2Ugb2YgcmVudCwgYWNjb3JkaW5nIHRvIHRoZSBGSVBFIFphcCBpbmRleCBvZiBCcmF6aWxpYW4gaG91c2luZyBwcmljZXMgcHVibGlzaGVkIGJ5IHRoZSBFY29ub21pYyBSZXNlYXJjaCBJbnN0aXR1dGUgRm91bmRhdGlvbi4g4oCcQSBkb3VibGluZyBvZiBob21lIHByaWNlcyBpbiBmaXZlIHllYXJzIHZpcnR1YWxseSBuZXZlciBoYXBwZW5lZCBpbiB0aGUgVS5TLizigJ0gU2hpbGxlciwgYSBwcm9mZXNzb3IgYXQgWWFsZSBVbml2ZXJzaXR5IGluIE5ldyBIYXZlbiwgQ29ubmVjdGljdXQgd2hvIGZvcmVjYXN0IHRoZSBVLlMuIGhvdXNpbmcgY3Jpc2lzIGFuZCBoZWxwZWQgY3JlYXRlIHRoZSBTJlAvQ2FzZS1TaGlsbGVyIEluZGV4IG9mIGhvbWUgcHJpY2VzLCBzYWlkIGF0IGFuIGV2ZW50IGluIENhbXBvcyBkbyBKb3JkYW8sIEJyYXppbCwgQXVnLiAzMS4g4oCcSSBhY3R1YWxseSBkb27igJl0IGtub3cgaXTigJlzIGEgYnViYmxlIGluIEJyYXppbCwgYnV0IEkgc3VzcGVjdCBpdCBpcyBhbmQsIG1heWJlIGlmIEkgY2FuIGp1c3Qgc2F5IHRoYXQsIGl0IHdvdWxkIGhlbHAgY29vbCB0aGUgZmVydm9yLuKAnSBNb3J0Z2FnZSBMb2FucyBCYW5rIGxlbmRpbmcgZm9yIHJlYWwgZXN0YXRlIHJvc2UgMjQuMiBwZXJjZW50IGluIHRoZSBmaXJzdCBuaW5lIG1vbnRocyBvZiB0aGUgeWVhciwgbW9yZSB0aGFuIGFsbCBvdGhlciBhcmVhcyBvZiB0aGUgcHJpdmF0ZSBzZWN0b3IsIGFjY29yZGluZyB0byB0aGUgY2VudHJhbCBiYW5rLiBNb3J0Z2FnZSBsb2FucyBoYXZlIG5lYXJseSB0cmlwbGVkIGZyb20gMi4zIG9mIEdEUCB0byA2LjggcGVyY2VudCBvZiBHRFAgYWZ0ZXIgdGhlIGdsb2JhbCBmaW5hbmNpYWwgY3Jpc2lzLCB3aXRoIHN0YXRlLSBvd25lZCBDYWl4YSBFY29ub21pY2EgRmVkZXJhbCBhY2NvdW50aW5nIGZvciA3MCBwZXJjZW50IG9mIHRoZSB0b3RhbCwgYWNjb3JkaW5nIHRvIHRoZSBJbnRlcm5hdGlvbmFsIE1vbmV0YXJ5IEZ1bmQuIOKAnEEgY29ycmVjdGlvbiBpbiBwcm9wZXJ0eSBwcmljZXMsIGFsdGhvdWdoIG5vdCBzeXN0ZW1pYywgY291bGQgd29yc2VuIGFzc2V0IHF1YWxpdHkgaW4gcHVibGljIGJhbmtzIGR1ZSB0byB0aGUgcmFwaWQgZXhwYW5zaW9uIG9mIG1vcnRnYWdlIGxvYW5zIGluIHJlY2VudCB5ZWFycyzigJ0gdGhlIFdhc2hpbmd0b24tIGJhc2VkIGxlbmRlciBzYWlkIGluIGEgcmVwb3J0IE9jdC4gMjIuIENhaXhh4oCZcyByZWFsLWVzdGF0ZSBsZW5kaW5nIGluIHRoZSBmaXJzdCBuaW5lIG1vbnRocyBvZiB0aGlzIHllYXIgaGl0IDEwMCBiaWxsaW9uIHJlYWlzLCB3aXRoIG9uZS10aGlyZCBvZiByZXNvdXJjZXMgY29taW5nIGZyb20gdGhlIHVuZW1wbG95bWVudCBmdW5kIGtub3duIGFzIEZHVFMsIGFjY29yZGluZyB0byBhbiBPY3QuIDMgc3RhdGVtZW50IGJ5IHRoZSBiYW5rLiBCcmF6aWzigJlzIE5hdGlvbmFsIE1vbmV0YXJ5IENvdW5jaWwsIG1hZGUgdXAgb2YgY2VudHJhbCBiYW5rIGFuZCBnb3Zlcm5tZW50IG9mZmljaWFscywgb24gU2VwdC4gMzAgaW5jcmVhc2VkIHRoZSBtYXhpbXVtIGhvbWUgdmFsdWUgd29ya2VycyBjYW4gcHVyY2hhc2UgdXNpbmcgdGhlIEZHVFMgYnkgNTAgcGVyY2VudCB0byA3NTAsMDAwIHJlYWlzIGZvciBzdGF0ZXMgYWNjb3VudGluZyBmb3IgNDIgcGVyY2VudCBvZiB0aGUgY291bnRyeeKAmXMgcG9wdWxhdGlvbi4gVGhlIGxpbWl0IGZvciBvdGhlciBzdGF0ZXMgaW5jcmVhc2VkIDMwIHBlcmNlbnQgdG8gNjUwLDAwMCByZWFpcy4gQ2FuY2VsbGF0aW9uIEluY3JlYXNlZCBjYW5jZWxsYXRpb24gb2YgbW9ydGdhZ2UgY29udHJhY3RzIGlzIGEgc2lnbiBjb21wYW5pZXMgbXVzdCB0aWdodGVuIGNyZWRpdCBzdGFuZGFyZHMgZm9yIG1pZGRsZSBhbmQgbG93ZXItIGluY29tZSBidXllcnMsIGFjY29yZGluZyB0byBDcmlzdGlhbmUgU3BlcmNlbCwgYW4gYW5hbHlzdCBhdCBNb29keeKAmXMgSW52ZXN0b3IgU2VydmljZS4gQnJhemlsaWFuIGhvbWVidWlsZGVycyBub3cgaGF2ZSB0aGUgaGlnaGVzdCBsZXZlcmFnZSBvZiBwZWVycyBpbiB0aGUgQW1lcmljYXMgYXMgY29uc3VtZXJzIHdpdGggbGVzcyBkaXNwb3NhYmxlIGluY29tZSBpbmNyZWFzaW5nbHkgaGF2ZSB0aGVpciBob21lIGNvbnRyYWN0cyBjYW5jZWxlZCwgTW9vZHnigJlzIGVzdGltYXRlcy4gVGhlIGNhbmNlbGxhdGlvbnMgcHJvbXB0ZWQgTW9vZHnigJlzIHRvIHB1c2ggYmFjayBpdHMgZm9yZWNhc3QgZm9yIHdoZW4gcmF0ZWQgaG9tZWJ1aWxkZXJzIGluIEJyYXppbCB3aWxsIGJlY29tZSBmcmVlIGNhc2ggZmxvdyBwb3NpdGl2ZSB0byBhIHJhbmdlIG9mIDIwMTQgdG8gMjAxNSBmcm9tIGFuIG9yaWdpbmFsIGVzdGltYXRlIG9mIDIwMTIuIOKAnENhbmNlbGxhdGlvbnMgYXJlIGEgcmVkIGZsYWcgYW5kIGl0IHNob3dzIHRoYXQgdGhlcmUgYXJlIHNvbWUgbGltaXRhdGlvbnMgaW4gdGhlIGdyb3d0aCBtb2RlbCzigJ0gU3BlcmNlbCBzYWlkIGJ5IHBob25lLiDigJxCdXQgaW4gb3VyIG9waW5pb24gdGhlIGRlbWFuZCBmb3IgaG9tZSBhY3F1aXNpdGlvbiByZW1haW5zIHJvYnVzdC7igJ0gQnVpbGRlcnPigJkgTGV2ZXJhZ2UgTW9ydGdhZ2UgbGVuZGluZyByZW1haW5zIHVuZGVyIGNvbnRyb2wsIE1hcmNpbyBIb2xsYW5kLCB0aGUgRmluYW5jZSBNaW5pc3RyeeKAmXMgZWNvbm9taWMgcG9saWN5IHNlY3JldGFyeSwgc2FpZCB0aGUgZGF5IG9mIHRoZSBJTUYgcmVwb3J04oCZcyBwdWJsaWNhdGlvbi4g4oCcV2Ugc3RhcnRlZCB0byBpbmNyZWFzZSBtb3J0Z2FnZSBsZW5kaW5nIGluIGNvbXBhcmlzb24gdG8gbGVuZGluZyBmb3IgZHVyYWJsZSBnb29kcyzigJ0gSG9sbGFuZCB0b2xkIHJlcG9ydGVycyBpbiBXYXNoaW5ndG9uLiDigJxIb3VzZWhvbGRzIGFyZSBib3Jyb3dpbmcgaW4gdGhlIGJhbmtpbmcgc3lzdGVtIHRvIGdldCBhIGhvdXNlLiBJdOKAmXMgbXVjaCBiZXR0ZXIgY29sbGF0ZXJhbCB0aGFuIGR1cmFibGUgZ29vZHMu4oCdIFRoZSBtZWRpYW4gcmF0aW8gb2YgZ3Jvc3MgZGVidCB0byBib29rIGNhcGl0YWxpemF0aW9uIGZvciBCcmF6aWzigJlzIHJhdGVkIGhvbWVidWlsZGVycyB3YXMgNjAuNyBwZXJjZW50IGluIHRoZSBzZWNvbmQgcXVhcnRlciBjb21wYXJlZCB0byA1NC43IHBlcmNlbnQgaW4gdGhlIFUuUy4gYW5kIDQ4LjEgcGVyY2VudCBpbiBNZXhpY28sIHdoZXJlIGF0IGxlYXN0IHRocmVlIGJ1aWxkZXJzIGRlZmF1bHRlZCBvbiBkZWJ0IHRoaXMgeWVhciwgYWNjb3JkaW5nIHRvIGEgTW9vZHnigJlzIHJlcG9ydCBwdWJsaXNoZWQgT2N0LiA3LiBCcmF6aWxpYW4gaG9tZWJ1aWxkZXJzIFBERyBSZWFsdHksIEJyb29rZmllbGQgSW5jb3Jwb3JhY29lcyBhbmQgR2FmaXNhIFNBIGhhdmUgbG9jYWwgYm9uZHMgYW5kIGFyZSB1bmRlciBwcmVzc3VyZSB0byBnZW5lcmF0ZSBjYXNoIHRvIHJlZHVjZSBkZWJ0LCBhY2NvcmRpbmcgdG8gdGhlIHJlcG9ydC4g4oCcVGhlIGN1cnJlbnQgdHJlbmQgZm9yIGhvdXNpbmcgcHJpY2VzIGlzIGNsZWFybHkgdW5zdXN0YWluYWJsZSzigJ0gTHVjaWFubyBSb3N0YWdubywgY2hpZWYgc3RyYXRlZ2lzdCBhdCBCYW5jbyBNaXp1aG8gZG8gQnJhc2lsIFNBLCBzYWlkIGJ5IHBob25lLiDigJxIb3VzZWhvbGRzIGFscmVhZHkgYXJlIGhpZ2hseSBpbmRlYnRlZCBhbmQgdGhlIHBhY2Ugb2YgY3JlZGl0IGdyb3d0aCwgZXNwZWNpYWxseSBmb3IgdGhlIGhvdXNpbmcgbWFya2V0LCBpcyB2ZXJ5IGhpZ2guIEl0IHdvdWxkIGJlIHBydWRlbnQgdG8gc2xvdyBkb3duIHRoZSBwYWNlIG9mIGxvYW5zIHRvIHRoZSBob3VzaW5nIG1hcmtldC7igJ0=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUIhskMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGFjOGRiNWRiNGUzMjFjZDI=</field><field name="symbol" class="java.lang.String">rO0ABXQABVJUTlRG</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUIm2J8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBO6j1wo9cK</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBPJmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBO6j1wo9cK</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBPIAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBNp64UeuFI</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAJYA==</field><field name="id" class="java.lang.String">rO0ABXQAEDRhMGQ1NGM2MGZmMzM2OGY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mENzAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQ5ODE=</field><field name="title" class="java.lang.String">rO0ABXQAPENyZWRpdC1Ecml2ZW4gQ2hpbmEgR2x1dCBUaHJlYXRlbnMgdG8gU3BhcmsgQmFuayBEZWJ0IENyaXNpcw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJu8acAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDRmMmY0MjA3YzNmYTg2NWI=</field><field name="symbol" class="java.lang.String">rO0ABXQABExPQU4=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJ0GAMAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/+ZmZmZmZm</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/+ZmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/8zMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/9cKPXCj1x</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/7MzMzMzMz</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAOEA==</field><field name="id" class="java.lang.String">rO0ABXQAEGYwMTkxZDcwMTZmMDQyM2M=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEsMAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDcyMzE=</field><field name="title" class="java.lang.String">rO0ABXQANU5vbXVyYTogSmFwYW4ncyBDZW50cmFsIEJhbmsgSGVscHMgVVMgRmVkLCBIb21lYnV5ZXJz</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4G6gSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDA0N2Q2ZjYyNjMyMTFkYzg=</field><field name="symbol" class="java.lang.String">rO0ABXQABkZOTS5CRQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4MEGCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/hR64UeuFI</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/hmZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/hR64UeuFI</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/hmZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/hmZmZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAA2sA==</field><field name="id" class="java.lang.String">rO0ABXQAEDk4ZGY3MzNkYTZkNGM5YzE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mIUGAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDI0MTQ=</field><field name="title" class="java.lang.String">rO0ABXQAP1NwYWluIFJlYm91bmRpbmcgRnJvbSBXb3JzdCBFY29ub215IGFzIEV4cG9ydHMgVHJhbnNmb3JtIE5hdGlvbg==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8NjliAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGYzNzVlMzJjNmU5YjA3OTM=</field><field name="symbol" class="java.lang.String">rO0ABXQABU02Ty5G</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8StLSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAz2ZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAz2ZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAz2ZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAz2ZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyI9cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDVkNzE3MGVhMzY2YTQ1MWI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mL0/AAAA==</field></document></documents><date>2015-05-07T03:23:27-0500</date></cacheEntry>
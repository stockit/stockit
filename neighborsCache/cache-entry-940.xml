<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hTb21lIDQ4IHBlcmNlbnQgb2YgdGhlIDM2NSBmb3JlaWduIGNvbXBhbmllcyB0aGF0IHJlcGxpZWQgdG8gdGhlIGNoYW1iZXJzIGFubnVhbCBzdXJ2ZXkgd2hpY2ggY292ZXJzIGJ1c2luZXNzZXMgaW4gQ2hpbmFzIG5vcnRoZXJuIGNpdGllcyBzYWlkIGNvbmNlcm5zIG92ZXIgYWlyIHF1YWxpdHkgd2VyZSB0dXJuaW5nIHNlbmlvciBleGVjdXRpdmVzIGF3YXkgUG9sbHV0aW9uIGlzIGEgZGlmZmljdWx0eSBpbiByZWNydWl0aW5nIGFuZCByZXRhaW5pbmcgc2VuaW9yIGV4ZWN1dGl2ZSB0YWxlbnQgc2FpZCB0aGUgcmVwb3J0IFRoZSAyMDE0IGZpZ3VyZSBpcyBhIGp1bXAgZnJvbSB0aGUgMTkgcGVyY2VudCBvZiBmb3JlaWduIGZpcm1zIHRoYXQgc2FpZCBzbW9nIHdhcyBhIHByb2JsZW0gZm9yIHJlY3J1aXRtZW50IGluIDIwMTAgQ2hpbmFzIHNsb3dpbmcgZWNvbm9teSBob3dldmVyIHJlbWFpbmVkIHRoZSB0b3AgcmlzayAgZm9yIGNvbXBhbmllcyB0aGUgcmVwb3J0IGFkZGVkIEZvcmVpZ24gZXhlY3V0aXZlcyBpbmNyZWFzaW5nbHkgY29tcGxhaW4gYWJvdXQgcG9sbHV0aW9uIGluIENoaW5hIGFuZCB0aGUgcGVyY2VpdmVkIGltcGFjdCBpdCBpcyBoYXZpbmcgb24gdGhlIGhlYWx0aCBvZiB0aGVtc2VsdmVzIGFuZCB0aGVpciBmYW1pbGllcyBTZXZlcmFsIGhpZ2hwcm9maWxlIGV4ZWN1dGl2ZXMgaGF2ZSBsZWZ0IENoaW5hIGluIHJlY2VudCB5ZWFycyBjaXRpbmcgcG9sbHV0aW9uIGFzIHRoZSBtYWluIHJlYXNvbiBmb3IgdGhlaXIgZGVjaXNpb24gdG8gZ28gQWxtb3N0IGFsbCBDaGluZXNlIGNpdGllcyBtb25pdG9yZWQgZm9yIHBvbGx1dGlvbiBsYXN0IHllYXIgZmFpbGVkIHRvIG1lZXQgc3RhdGUgc3RhbmRhcmRzIGJ1dCBub3J0aGVybiBDaGluYSBzdWZmZXJzIHRoZSBtb3N0IEl0IGlzIGhvbWUgdG8gbXVjaCBvZiBDaGluYXMgY29hbCBzdGVlbCBhbmQgY2VtZW50IHByb2R1Y3Rpb24gSXQgaXMgYWxzbyBtdWNoIGNvbGRlciByZWx5aW5nIG9uIGluZHVzdHJpYWwgY29hbCBib2lsZXJzIHRvIHByb3ZpZGUgaGVhdGluZyBkdXJpbmcgdGhlIGxvbmcgd2ludGVyIFRoZSBjYXBpdGFsIEJlaWppbmcgZm9yIGV4YW1wbGUgaXMgc3Vycm91bmRlZCBieSB0aGUgYmlnIGFuZCBoZWF2aWx5IHBvbGx1dGVkIGluZHVzdHJpYWwgcHJvdmluY2Ugb2YgSGViZWkgSXQgaXMgYWxzbyBjaG9rZWQgYnkgdHJhZmZpYyBCeSBjb250cmFzdCBDaGluYXMgY29tbWVyY2lhbCBjYXBpdGFsIFNoYW5naGFpIGluIHRoZSBzb3V0aCBzdWZmZXJzIGxlc3MgYWlyIHBvbGx1dGlvbiBJbmRlZWQgYSBzaW1pbGFyIHN1cnZleSBjb25kdWN0ZWQgYnkgdGhlIEFtZXJpY2FuIENoYW1iZXIgb2YgQ29tbWVyY2VzIFNoYW5naGFpIGJyYW5jaCBkaWQgbm90IGFzayBpZiBwb2xsdXRpb24gd2FzIGFmZmVjdGluZyByZWNydWl0bWVudCBQcmVtaWVyIExpIEtlcWlhbmcgZGVjbGFyZWQgd2FyIG9uIHBvbGx1dGlvbiBhdCB0aGUgb3BlbmluZyBvZiB0aGUgYW5udWFsIHNlc3Npb24gb2YgcGFybGlhbWVudCB0aGlzIG1vbnRoIHBhcnQgb2YgYSBwdXNoIHRvIHdlYW4gdGhlIHdvcmxkcyBzZWNvbmQgYmlnZ2VzdCBlY29ub215IGZyb20gY3JlZGl0ZnVlbGxlZCBncm93dGggdG8gbW9yZSBzdXN0YWluYWJsZSBkZXZlbG9wbWVudCBDaGluYSBhbHNvIHBsZWRnZWQgb24gU3VuZGF5IHRvIG1ha2UgNjAgcGVyY2VudCBvZiBpdHMgY2l0aWVzIG1lZXQgbmF0aW9uYWwgcG9sbHV0aW9uIHN0YW5kYXJkcyBieSAyMDIwIEx1bHUgWmhvdSBhc3NvY2lhdGUgZGlyZWN0b3Igb2YgdGhlIEJlaWppbmcgT2ZmaWNlIG9mIGludGVybmF0aW9uYWwgcmVjcnVpdG1lbnQgYWdlbmN5IFJvYmVydCBXYWx0ZXJzIENoaW5hIHNhaWQgc29tZSBmb3JlaWduIGV4ZWN1dGl2ZXMgd2VyZSB1c2luZyBwb2xsdXRpb24gdG8gbmVnb3RpYXRlIGhpZ2hlciBzYWxhcnkgcGFja2FnZXMgV2UgaGF2ZSBzZWVuIHNvbWUgc2VuaW9yIGxldmVsIHByb2Zlc3Npb25hbHMgIHdobyBhcmUgY29uY2VybmVkIGFib3V0IHJlbG9jYXRpbmcgdG8gQmVpamluZyBiZWNhdXNlIG9mIHRoZSBwb2xsdXRpb24gc2hlIHNhaWQgSW4gYSBzaWduIG9mIHRoZSBncm93aW5nIGNvcnBvcmF0ZSBjb25jZXJuIG92ZXIgcG9sbHV0aW9uIEphcGFuZXNlIGVsZWN0cm9uaWNzIGZpcm0gUGFuYXNvbmljIENvcnAgaGFzIHRvbGQgaXRzIHVuaW9ucyBpdCB3aWxsIHJldmlldyB0aGUgaGFyZHNoaXAgYWxsb3dhbmNlIHBhaWQgdG8gZXhwYXRyaWF0ZXMgaW4gQ2hpbmEgYmVjYXVzZSBvZiB0aGUgYWlyIHF1YWxpdHkgYSBzcG9rZXN3b21hbiBzYWlkIG9uIFdlZG5lc2RheSBBbmQgYSBzdGF0ZW93bmVkIENoaW5lc2UgaW5zdXJlciBzYWlkIHRoaXMgd2VlayBpdCB3b3VsZCBvZmZlciBCZWlqaW5nIHJlc2lkZW50cyBpbnN1cmFuY2UgY292ZXIgYWdhaW5zdCBoZWFsdGggcmlza3MgY2F1c2VkIGJ5IGFpciBwb2xsdXRpb24gcHJvbWlzaW5nIHRvIHBheSBvdXQgMTUwMCB5dWFuIDI0MHRvIHBvbGljeSBob2xkZXJzIGhvc3BpdGFsaXNlZCBieSBzbW9nIFRoZSBwb2xpY3kgYXZhaWxhYmxlIGZvciBwZW9wbGUgYWdlZCAxMCB0byA1MCB3aWxsIGFsc28gcGF5IG91dCAzMDAgeXVhbiB3aGVuIHRoZSBjaXR5cyBvZmZpY2lhbCBzbW9nIGluZGV4IGV4Y2VlZHMgMzAwIGZvciBmaXZlIGNvbnNlY3V0aXZlIGRheXMgYSBsZXZlbCBjb25zaWRlcmVkIGhhemFyZG91cyBhY2NvcmRpbmcgdG8gYSBub3RpY2UgcG9zdGVkIG9uIHRoZSBQZW9wbGVzIEluc3VyYW5jZSBDb21wYW55IG9mIENoaW5hIFBJQ0Mgd2Vic2l0ZSB3d3dlcGljY2NvbWNuIEJlaWppbmdzIG9mZmljaWFsIGFpciBxdWFsaXR5IGluZGV4IEFRSSB3aGljaCBtZWFzdXJlcyBhaXJib3JuZSBwb2xsdXRhbnRzIGluY2x1ZGluZyBwYXJ0aWN1bGF0ZSBtYXR0ZXIgYW5kIHN1bHBodXIgZGlveGlkZSByb3V0aW5lbHkgZXhjZWVkcyAzMDAgYW5kIHNvbWV0aW1lcyBoaXRzIGxldmVscyBoaWdoZXIgdGhhbiA1MDAgU0xPV0lORyBFQ09OT01ZIEEgQklHIENPTkNFUk4gRGVzcGl0ZSB0aGUgY29uY2VybnMgb3ZlciBwb2xsdXRpb24gQ2hpbmFzIGNvb2xpbmcgZWNvbm9teSB3aGljaCBnb3Zlcm5tZW50IGxlYWRlcnMgcHJvamVjdCB0byBncm93IHRoaXMgeWVhciBhdCBhYm91dCA3NSBwZXJjZW50IHBvc2VkIHRoZSBncmVhdGVzdCByaXNrIHRvIGNvbXBhbmllcyBhY2NvcmRpbmcgdG8gdGhvc2UgcG9sbGVkIGluIHRoZSBCZWlqaW5nIHN1cnZleSBGaXJtcyBpbmNyZWFzaW5nbHkgcmVwb3J0ZWQgYSBzdGFnbmF0aW9uIG9yIGNvbnRyYWN0aW9uIGluIG9wZXJhdGluZyBtYXJnaW5zIGNvbXBhcmVkIHdpdGggcHJldmlvdXMgeWVhcnMgaXQgc2FpZCBBcyBhIHJlc3VsdCBtb3JlIGZvcmVpZ24gZmlybXMgc2F3IENoaW5hIGFzIGp1c3Qgb25lIG9mIG1hbnkgaW52ZXN0bWVudCBwb3NzaWJpbGl0aWVzIHRoZSByZXBvcnQgc2FpZCBOZXZlcnRoZWxlc3MgYSBtYWpvcml0eSBvZiBjb21wYW5pZXMgc3VydmV5ZWQgcmVtYWluZWQgb3B0aW1pc3RpYyBhYm91dCB0aGUgYnVzaW5lc3Mgb3V0bG9vayBmb3IgdGhlIG5leHQgdHdvIHllYXJzIFRoaXMgb3B0aW1pc20gaXMgZHJpdmVuIGJ5IG91ciBtZW1iZXJzaGlwcyBjb25maWRlbmNlIGluIHRoZWlyIG93biBhYmlsaXR5IHRvIGFkanVzdCBhbmQgZGVhbCB3aXRoIHRoZSBjaGFsbGVuZ2VzIHNhaWQgTWFyayBEdXZhbCBDaGluYSBwcmVzaWRlbnQgb2YgdGhlIEFtZXJpY2FuIENoYW1iZXIgb2YgQ29tbWVyY2UgTWFueSBtZW1iZXJzIGhhZCBoaWdoIGV4cGVjdGF0aW9ucyB0aGF0IHJlY2VudGx5IGFubm91bmNlZCBlY29ub21pYyByZWZvcm1zIG1pZ2h0IGRlbGl2ZXIgRHV2YWwgYWRkZWQgQnV0IHR3byBpbiBmaXZlIHJlc3BvbmRlbnRzIHRvIHRoZSBCZWlqaW5nIHN1cnZleSBzYWlkIHRoZSBidXNpbmVzcyBjbGltYXRlIGhhZCBiZWNvbWUgbGVzcyB3ZWxjb21pbmcgZm9yIG11bHRpbmF0aW9uYWxzIHdpdGggYSBzaW1pbGFyIG51bWJlciBzYXlpbmcgZm9yZWlnbiBmaXJtcyB3ZXJlIGJlaW5nIHNpbmdsZWQgb3V0IGluIGEgc2VyaWVzIG9mIHByaWNpbmcgYW5kIGNvcnJ1cHRpb24gaW52ZXN0aWdhdGlvbnMgVGhvc2UgaW52ZXN0aWdhdGlvbnMgaGF2ZSB0YXJnZXRlZCB2YXJpb3VzIHNlY3RvcnMgaW5jbHVkaW5nIHBoYXJtYWNldXRpY2FsIGFuZCBtaWxrIHBvd2RlciBtdWx0aW5hdGlvbmFscyBhcyB3ZWxsIGFzIEFtZXJpY2FuIHRlY2hub2xvZ3kgY29tcGFuaWVzIE1vc3QgcmVjZW50bHkgQ2hpbmFzIGFudGltb25vcG9seSByZWd1bGF0b3Igc2FpZCBRdWFsY29tbSBJbmMgd2FzIHN1c3BlY3RlZCBvZiBvdmVyY2hhcmdpbmcgYW5kIGFidXNpbmcgaXRzIG1hcmtldCBwb3NpdGlvbiBUaGUgVVMgY2hpcCBnaWFudCBoYXMgc2FpZCBpdCB3YXMgY29vcGVyYXRpbmcgd2l0aCB0aGUgaW52ZXN0aWdhdGlvbiBieSB0aGUgTmF0aW9uYWwgRGV2ZWxvcG1lbnQgYW5kIFJlZm9ybSBDb21taXNzaW9uIFJlc3BvbmRlbnRzIGFsc28gY2hhZmVkIGF0IHBlcmNlaXZlZCBzdGF0ZSBlbnRlcnByaXNlIGZhdm91cml0aXNtIHdpdGggNzcgcGVyY2VudCBiZWxpZXZpbmcgcG9saWNpZXMgYmVuZWZpdGluZyBzdGF0ZW93bmVkIGZpcm1zIGhhZCBuZWdhdGl2ZWx5IGltcGFjdGVkIHRoZWlyIGJ1c2luZXNzIE15IGp1ZGdlbWVudCBpcyB0aGF0IHRoZSBiaWdnZXN0IGFyZWEgdGhhdCBkcml2ZXMgdGhpcyByZXNwb25zZSB3b3VsZCBiZSBtYXJrZXQgYWNjZXNzIHNhaWQgRHV2YWwgUHJvdGVjdGlvbiBvZiB0cmFkZSBzZWNyZXRzIGFuZCBjb21wYW55IG5hbWUgdGhlZnQgd2VyZSBhbW9uZyBvdGhlciBpc3N1ZXMgd29ycnlpbmcgYnVzaW5lc3NlcyBIYWxmIG9mIGFsbCByZXNwb25kZW50cyBzYWlkIHRoYXQgcHJvdGVjdGluZyBjb25maWRlbnRpYWwgY29tcGFueSBkYXRhIHdhcyBhIGNvbmNlcm4gT3RoZXIgZGlmZmljdWx0aWVzIHdlcmUgYSBsYWNrIG9mIGNsYXJpdHkgYW5kIGluY29uc2lzdGVuY3kgaW4gdGhlIGFwcHQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMC0wNi0xMFQwMDowMDowMFogVE8gMjAxMy0wNy0zMFQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDM3NTM=</field><field name="title" class="java.lang.String">rO0ABXQANUNoaW5hIEJldHMgb24gQ29uc3VtZXItbGVkIEdyb3d0aCB0byBDdXJlIFNvY2lhbCBJbGxz</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT05IpMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDQyOWE4NTk0ODM5ODhhYTI=</field><field name="symbol" class="java.lang.String">rO0ABXQAA1dFTg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT0+SO8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAWMzMzMzMz</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAWPXCj1wo9</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAVrhR64Ueu</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAV64UeuFHs</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAU64UeuFHs</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAFIRYA==</field><field name="id" class="java.lang.String">rO0ABXQAEGRhY2QwMTQwMTc4ZmUyNDM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGtYAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExNzgx</field><field name="title" class="java.lang.String">rO0ABXQAL0NoaW5hIENyZWRpdCBTcXVlZXplIFByb21wdHMgU3VpY2lkZXMsIFZpb2xlbmNl</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATN8nKMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGJhYzM0NzI1NmU0ZDE0ZTM=</field><field name="symbol" class="java.lang.String">rO0ABXQABExPQU4=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATOBwv8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/yj1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/yj1wo9cKP</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/wAAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/wKPXCj1wp</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/tcKPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAH0A==</field><field name="id" class="java.lang.String">rO0ABXQAEDhlMzNhZjQ5YjBjMTQ4OTc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mF7zAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDkwOTA=</field><field name="title" class="java.lang.String">rO0ABXQANENoaW5hIFR1cm5zIG9uIENoYXJtIHRvIEFzc3VhZ2UgVHVybmVkLW9mZiBJbnZlc3RvcnM=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATo5mBiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDU0MjA2NTUyMDhiZjNjNTQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABFFJSFU=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATo+vnSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3QAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3Sj1wo9cK</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA2lwo9cKPX</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA2pmZmZmZm</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA2pmZmZmZm</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAABBuQA==</field><field name="id" class="java.lang.String">rO0ABXQAEDBiMGQzODUzNTdhMGRhMTU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mLw/AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE4MTUw</field><field name="title" class="java.lang.String">rO0ABXQAP0NhbmFkYSdzICdObycgdG8gUGV0cm9uYXMgRGVhbCBDYXN0cyBEb3VidCBvbiBDbm9vYydzIE5leGVuIEJpZA==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATqBsSCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDgyMjY3MmIzZTM4MjQ4NzE=</field><field name="symbol" class="java.lang.String">rO0ABXQACUJOUy1QTi5UTw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATqG13yAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6Qo9cKPXD</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6YUeuFHrh</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6QAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6TMzMzMzN</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3eFHrhR64</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAF3A==</field><field name="id" class="java.lang.String">rO0ABXQAEDkzMjBmZjM2MDQ0MGZlZDc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMQ7AAAQ==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQ4Nzg=</field><field name="title" class="java.lang.String">rO0ABXQAM1VTIE9mZmljaWFscyBQdXNoZWQgUHJvZHVjdHMgRGVlbWVkIFVuc2FmZSBieSBDaGluYQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAS6ZM08AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGE3YTY4ZjY5NjkwZmQxNWI=</field><field name="symbol" class="java.lang.String">rO0ABXQABEtJUks=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAS6eWasAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAuPXCj1wo9</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAueuFHrhR7</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAsTMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAsx64UeuFI</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAsx64UeuFI</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAnr2A==</field><field name="id" class="java.lang.String">rO0ABXQAEDI2NThiNTY4ZjNkNDU0OGU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEB8AAAA==</field></document></documents><date>2015-05-07T12:29:21-0500</date></cacheEntry>
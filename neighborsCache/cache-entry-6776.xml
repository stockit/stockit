<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0DhdBIHJlc3RpdHV0ZWQgUGlzc2Fycm8gcGFpbnRpbmcgYSBWYW4gR29naCBjYW52YXMgYW5kIHByb21pbmVudCBkZWFsZXJzIGNvbGxlY3Rpb24gZnVlbGVkIFNvdGhlYnlzIHJlY29yZCBhdWN0aW9uIGluIExvbmRvbiBXZWRuZXNkYXkgYXMgY29sbGVjdG9ycyBmcm9tIDQ0IGNvdW50cmllcyBjb21wZXRlZCBmb3IgSW1wcmVzc2lvbmlzdCBtb2Rlcm4gYW5kIFN1cnJlYWxpc3QgYXJ0IFRoZSBldmVuaW5nIHNhbGUgdGFsbGllZCAxNjM1IG1pbGxpb24gcG91bmRzIDI2NjggbWlsbGlvbiB1cCA1NyBwZXJjZW50IGZyb20gYSB5ZWFyIGFnbyBhbmQgc3VycGFzc2luZyBpdHMgaGlnaCBwcmVzYWxlIGVzdGltYXRlIG9mIDEyODQgbWlsbGlvbiBwb3VuZHMgT2YgODkgb2ZmZXJlZCBsb3RzIDEwIGZhaWxlZCB0byBmaW5kIGJ1eWVycyBTb3RoZWJ5cyBzYWlkIENocmlzdGllcyBJbnRlcm5hdGlvbmFsIHRhbGxpZWQgMTc3IG1pbGxpb24gcG91bmRzIGR1cmluZyBpdHMgZXZlbmluZyBzYWxlIG9uIEZlYiA0IGtpY2tpbmcgb2ZmIGF1Y3Rpb25zIHRoYXQgcmVwcmVzZW50IHRoZSBmaXJzdCBiaWcgdGVzdCBvZiB0aGUgYXJ0IG1hcmtldCB0aGlzIHllYXIgTW9kZXJuIGFuZCBJbXByZXNzaW9uaXN0IGFydCBzYWxlcyBoYXZlIGJlZW4gdHJhaWxpbmcgdGhvc2Ugb2YgcG9zdHdhciBhbmQgY29udGVtcG9yYXJ5IGFydCB3aXRoIGZyZXNoIG1hdGVyaWFsIG9mIGhpZ2ggcXVhbGl0eSBoYXJkZXIgdG8gb2J0YWluIERlbWFuZCBmcm9tIG5ldyB3ZWFsdGh5IGJ1eWVycyBpbiBDaGluYSBSdXNzaWEgYW5kIG90aGVyIGVtZXJnaW5nIG1hcmtldHMgaXMgYm9vc3RpbmcgcHJpY2VzIGZvciBjbGFzc2ljIHdvcmtzIHNhaWQgSGVsZW5hIE5ld21hbiBTb3RoZWJ5cyB3b3JsZHdpZGUgaGVhZCBvZiB0aGUgSW1wcmVzc2lvbmlzdCBhbmQgbW9kZXJuIGFydCBkZXBhcnRtZW50IEl0cyBhIHRydWx5IGdsb2JhbCBtYXJrZXQgYW5kIHRoYXRzIHdoeSB0aGUgcHJpY2VzIGFyZSBzbyBzdHJvbmcgTmV3bWFuIHNhaWQgaW4gYSB0ZWxlcGhvbmUgaW50ZXJ2aWV3IFdlIGhhZCBhIGNvbWJpbmF0aW9uIG9mIGdyZWF0IG1hdGVyaWFsIGFuZCBjb25zZXJ2YXRpdmUgZXN0aW1hdGVzIFRoZSB0b3AgbG90IGF0IFNvdGhlYnlzIHNhbGUgQ2FtaWxsZSBQaXNzYXJyb3MgMTg5NyB2aWV3IG9mIFBhcmlzcyBNb250bWFydHJlIG9uIGEgc3ByaW5nIG1vcm5pbmcgZmV0Y2hlZCAxOTcgbWlsbGlvbiBwb3VuZHMgYWxtb3N0IGRvdWJsaW5nIGl0cyBwcmVzYWxlIGhpZ2ggZXN0aW1hdGUgb2YgMTAgbWlsbGlvbiBwb3VuZHMgVGhlIHByaWNlcyBpbmNsdWRlIGJ1eWVycyBwcmVtaXVtIHRoZSBlc3RpbWF0ZXMgZG8gbm90IEFib3V0IDYwIHBlcmNlbnQgb2Ygc29sZCBsb3RzIHN1cnBhc3NlZCB0aGVpciBoaWdoIGVzdGltYXRlcyBTb3RoZWJ5cyBzYWlkICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hemkgVmljdGltIFRoZSBJbXByZXNzaW9uaXN0IGNhbnZhcyB3YXMgb3JpZ2luYWxseSBvd25lZCBieSBNYXggU2lsYmVyYmVyZyBhIEpld2lzaCBpbmR1c3RyaWFsaXN0IHdobyB3YXMgZm9yY2VkIGJ5IHRoZSBOYXppcyB0byBzZWxsIGhpcyBwcml6ZWQgY29sbGVjdGlvbiBvZiAxOXRoIGFuZCAyMHRoIGNlbnR1cnkgYXJ0IFNpbGJlcmJlcmcgcGVyaXNoZWQgaW4gMTk0MiBkdXJpbmcgdGhlIEhvbG9jYXVzdCBUaGUgUGlzc2Fycm8gd2FzIHJlc3RpdHV0ZWQgdG8gaGlzIGhlaXIgaW4gMjAwMCBieSB0aGUgSXNyYWVsIE11c2V1bSBWaW5jZW50IFZhbiBHb2docyAxODg5IHBhaW50aW5nIExIb21tZSBFc3QgZW4gTWVyIFRoZSBNYW4gSXMgYXQgU2VhIGZldGNoZWQgMTY5IG1pbGxpb24gcG91bmRzIG1vcmUgdGhhbiBkb3VibGluZyB0aGUgaGlnaCBlc3RpbWF0ZSBvZiA4IG1pbGxpb24gcG91bmRzIFBhaW50ZWQgYXQgdGhlIFNhaW50UmVteSBhc3lsdW0gaXQgZGVwaWN0cyBhIHlvdW5nIHdvbWFuIGNyYWRsaW5nIGEgY2hpbGQgVGhlIHdvcmsgd2FzIHByZXZpb3VzbHkgc29sZCBmb3IgNzE1IG1pbGxpb24gYXQgU290aGVieXMgaW4gTmV3IFlvcmsgaW4gMTk4OSBUaGUgYW5vbnltb3VzIGNvbnNpZ25vciBib3VnaHQgdGhlIHBpZWNlIGluIDE5OTMgZm9yIGFuIHVuZGlzY2xvc2VkIHByaWNlIFNvdGhlYnlzIHNhaWQgQSBncm91cCBvZiAzNyB3b3JrcyBmcm9tIHRoZSBwcml2YXRlIGNvbGxlY3Rpb24gb2YgR2VuZXZhIGFydCBkZWFsZXIgSmFuIEtydWdpZXIgYSBIb2xvY2F1c3Qgc3Vydml2b3Igd2hvIGRpZWQgaW4gMjAwOCB0b29rIDUzMyBtaWxsaW9uIHBvdW5kcyBhbG1vc3QgdHdpY2UgaXRzIHByZXNhbGUgaGlnaCBlc3RpbWF0ZSBvZiAyNzEgbWlsbGlvbiBwb3VuZHMgRWFjaCBsb3Qgb2ZmZXJlZCBmcm9tIEtydWdpZXIgc29sZCB5ZXN0ZXJkYXkgYW5kIGFuIGFkZGl0aW9uYWwgODIgcGllY2VzIGZyb20gdGhlIGNvbGxlY3Rpb24gd2lsbCBnbyBvbiB0aGUgYXVjdGlvbiBibG9jayB0b2RheSAgICAgICAgICAgICAgICAgICAgICAgIFBpY2Fzc28gR2lhY29tZXR0aSBUaGUgZ3JvdXBzIGhpZ2hsaWdodHMgaW5jbHVkZWQgUGljYXNzb3MgQ29tcG9zaXRpb24gYXUgTWlub3RhdXJlIENvbXBvc2l0aW9uIE1pbm90YXVyIHdoaWNoIHNvbGQgZm9yIDEwNCBtaWxsaW9uIHBvdW5kcyBhYm92ZSB0aGUgaGlnaCBlc3RpbWF0ZSBvZiAyNSBtaWxsaW9uIHBvdW5kcyBBbGJlcnRvIEdpYWNvbWV0dGlzIEhvbW1lIFRyYXZlcnNhbnQgdW5lIFBsYWNlIHBhciB1biBNYXRpbiBkZSBTb2xlaWwgTWFuIENyb3NzaW5nIGEgUGxhY2UgZm9yIGEgTW9ybmluZyBTdW4gZ2VuZXJhdGVkIDg1IG1pbGxpb24gcG91bmRzIGFib3ZlIHRoZSBoaWdoIGVzdGltYXRlIG9mIDUgbWlsbGlvbiBwb3VuZHMgSW4gTm92ZW1iZXIgMTU1IGxvdHMgZnJvbSB0aGUgS3J1Z2llciBjb2xsZWN0aW9uIGluY2x1ZGluZyAyOSBQaWNhc3NvcyB3ZXJlIG9mZmVyZWQgYXQgQ2hyaXN0aWVzIGluIE5ldyBZb3JrIFRoZSBhdWN0aW9uIGJyb3VnaHQgMTEzNyBtaWxsaW9uIG1vcmUgdGhhbiAzMCBwZXJjZW50IGJlbG93IHRoZSBsb3cgZXN0aW1hdGUgQXQgdGhlIHRpbWUgZGVhbGVycyBzYWlkIG1hbnkgcGllY2VzIHdlcmUgcGFydCBvZiBLcnVnaWVycyBnYWxsZXJ5IGludmVudG9yeSBhbmQgbm90IGZyZXNoIHRvIHRoZSBtYXJrZXQgV2hhdCB3ZSBzb2xkIHRvbmlnaHQgd2FzIGEgZ3JvdXAgb2YgZHJhd2luZ3MgdGhhdCBjYW1lIGZyb20gdGhlIHByaXZhdGUgY29sbGVjdGlvbiBvZiBKYW4gYW5kIGhpcyB3aWZlIE5ld21hbiBzYWlkIFRoZSB3b3JrcyBodW5nIGluIHRoZWlyIGhvbWUgT25lIG9mIHRoZSBiaWdnZXN0IHN1cnByaXNlcyBhdCB5ZXN0ZXJkYXlzIHNhbGUgd2FzIHRoZSBzdGFyayAxOTU2IHBhaW50aW5nIExlIFBhc3NhZ2UgdGhlIFBhc3NhZ2UgYnkgQW1lcmljYW4gU3VycmVhbGlzdCBLYXkgU2FnZSAxODk4MTk2MyB3aGljaCBmZXRjaGVkIDQzIG1pbGxpb24gcG91bmRzIG9yIDQ4IHRpbWVzIGl0cyBoaWdoIHByZXNhbGUgZXN0aW1hdGUgU2luY2UgMTk1OCB0aGUgd29yayBoYWQgYmVlbiBpbiB0aGUgY29sbGVjdGlvbiBvZiBTdGFubGV5IFNlZWdlciBhIGNvbGxlY3RvciB3aG8gZGllZCBpbiAyMDExdAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAb2FydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2UsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEzLTAzLTI3VDAwOjAwOjAwWiBUTyAyMDEzLTEyLTAzVDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDIyOTk=</field><field name="title" class="java.lang.String">rO0ABXQAPlJveWFsIEJhYnkgdG8gR2l2ZSBBbG1vc3QgJDQwMCBNaWxsaW9uIEJ1bXAgdG8gQnJpdGlzaCBFY29ub215</field><field name="content" class="java.lang.String">rO0ABXQKckZyb20gVW5pb24gSmFjayBib290aWVzIHRvICJCb3JuIHRvIFJ1bGUiIHNsZWVwd2VhciwgdGhlIEJyaXRpc2ggcm95YWwgZmFtaWx5IGhhcyBqb2luZWQgcmV0YWlsZXJzIGluIG9mZmVyaW5nIGJhYnkgcHJvZHVjdHMgdG8gbWFyayB0aGUgYXJyaXZhbCBvZiB0aGUgcm95YWwgaGVpci4gQW5hbHlzdHMgZXN0aW1hdGUgdGhlIGJhYnkgZmV2ZXIgY291bGQgYm9vc3QgdGhlIGVjb25vbXkgYnkgMjQwIG1pbGxpb24gcG91bmRzICgkMzgwIG1pbGxpb24pLiBBIGJhYnkgc2xlZXBzdWl0IG1vZGVsZWQgb24gYSBndWFyZHNtYW4ncyBvdXRmaXQgaXMgb25lIG9mIHRoZSBnaWZ0cyBvbiBzYWxlIGF0IHBhbGFjZSBzaG9wcyBieSB0aGUgUm95YWwgQ29sbGVjdGlvbiBUcnVzdCwgd2hpY2ggdXNlcyBhbGwgcHJvZml0cyBmb3IgdGhlIHVwa2VlcCBvZiB0aGUgcm95YWwgcGFsYWNlcy4gUHJpbmNlIENoYXJsZXMsIHRoZSBncmFuZGZhdGhlci10by1iZSwgaXMgc2VsbGluZyBoYW5kbWFkZSBiYWJ5IHNob2VzIHRocm91Z2ggYSBzaG9wIG9uIGhpcyBjb3VudHJ5IGVzdGF0ZSBIaWdoZ3JvdmUsIHdoaWxlIHRoZSBtb3RoZXItdG8tYmUncyBwYXJlbnRzLCBDYXJvbGUgYW5kIE1pY2hhZWwgTWlkZGxldG9uLCBoYXZlIGFkZGVkIGEgcmFuZ2Ugb2YgYmFieSBnb29kcyB0byB0aGVpciBwYXJ0eSBnb29kcyBidXNpbmVzcy4gSm9zaHVhIEJhbWZpZWxkLCBkaXJlY3RvciBvZiB0aGUgQ2VudHJlIGZvciBSZXRhaWwgUmVzZWFyY2ggKENSUiksIGVzdGltYXRlZCB0aGF0IHRoZSBhcnJpdmFsIG9mIHRoZSBiYWJ5LCBkdWUgaW4gSnVseSwgY291bGQgYWRkIG1vcmUgdGhhbiAyNDAgbWlsbGlvbiBwb3VuZHMgdG8gdGhlIEJyaXRpc2ggZWNvbm9teS4gIlRoaXMgaXMgYSBnb29kIG5ld3Mgc3RvcnkgYW5kIHRoZXJlIHJlYWxseSBpcyBubyBkb3duc2lkZS4gV2l0aCB0aGUgYmlydGggY29taW5nIGluIEp1bHksIHBlb3BsZSB3aWxsIGhhdmUgdGltZSB0byBnZXQgaW52b2x2ZWQsIGFuZCB0aGF0IG1lYW5zIGFkZGl0aW9uYWwgc3BlbmRpbmcsIiBCYW1maWVsZCB0b2xkIFJldXRlcnMgYWZ0ZXIgdGhlIHJlbGVhc2Ugb2YgdGhlIENSUidzIHJlcG9ydCBvbiBNb25kYXkuICJUaGVyZSBoYXMgYmVlbiBhIGxvdCBvZiBpbnRlcmVzdCBhY3Jvc3MgdGhlIEF0bGFudGljIGFzIHdlbGwsIGFzIHRoZSB5b3VuZ2VyIHJveWFscyBhcmUgdmVyeSB3ZWxsIHRob3VnaHQgb2YgaW4gdGhlIFVuaXRlZCBTdGF0ZXMsIHNvIHdlIGFyZSBleHBlY3RpbmcgZ29vZCBzYWxlcyBvZiBzb3V2ZW5pcnMuIiBUaGUgYmlydGggb2YgdGhlIHJveWFsIGJhYnksIHdobyB3aWxsIGJlIHRoaXJkIGluIGxpbmUgdG8gdGhlIHRocm9uZSBhZnRlciBQcmluY2UgQ2hhcmxlcyBhbmQgUHJpbmNlIFdpbGxpYW0sIGlzIHRoZSBsYXRlc3QgaW4gYSBydW4gb2Ygcm95YWwgYW5kIHNwb3J0aW5nIGV2ZW50cy4gUHJpbmNlIFdpbGxpYW0gbWFycmllZCBLYXRlIE1pZGRsZXRvbiBpbiBBcHJpbCAyMDExIGFuZCBRdWVlbiBFbGl6YWJldGggbWFya2VkIGhlciBEaWFtb25kIEp1YmlsZWUgaW4gSnVuZSBsYXN0IHllYXIuIFRoZSBMb25kb24gT2x5bXBpY3MgbGFzdCBzdW1tZXIgYWRkZWQgdG8gdGhlIGJ1enouIFJpY2hhcmQgQ29wZSwgdHJlbmRzIGRpcmVjdG9yIGF0IG1hcmtldCByZXNlYXJjaGVyIE1pbnRlbCwgZXhwZWN0ZWQgdGhlIGR1a2UgYW5kIGR1Y2hlc3MncyBiYWJ5IHRvIGhhdmUgYSBwb3NpdGl2ZSBpbXBhY3Qgb24gY29uc3VtZXIgc3BlbmRpbmcsIHdoaWNoIG9ubHkgdGlja2VkIHVwIDAuMSBwZXJjZW50IGJldHdlZW4gSmFudWFyeS1NYXJjaCB0aGlzIHllYXIuICJJIHRoaW5rIHRoZSBiaWdnZXN0IGNvbW1lcmNpYWwgb3Bwb3J0dW5pdHkgaXMgZ29pbmcgdG8gYmUgd2l0aCB0b3VyaXN0cywiIENvcGUgdG9sZCBSZXV0ZXJzLCBwb2ludGluZyB0byBhIDEzIHBlcmNlbnQgcmlzZSBpbiB0b3VyaXN0IGFycml2YWxzIGluIEFwcmlsLiBCYW1maWVsZCBmb3JlY2FzdCA0LjggbWlsbGlvbiBwZW9wbGUgd291bGQgc3BsYXNoIG91dCA2MiBtaWxsaW9uIHBvdW5kcyBvbiBhbGNvaG9sIHRvIHdldCB0aGUgZnV0dXJlIG1vbmFyY2gncyBoZWFkIGFuZCBzcGVuZCAyNSBtaWxsaW9uIHBvdW5kcyBvbiBmb29kIGZvciBiYWJ5IHBhcnRpZXMuIEhlIGV4cGVjdGVkIDE1NiBtaWxsaW9uIHBvdW5kcyB0byBiZSBzcGVudCBvbiBjb21tZW1vcmF0aXZlIGNoaW5hIGFuZCBvdGhlciBjb2xsZWN0YWJsZXMsIHRveXMsIGJvb2tzLCBEVkRzIGFuZCBtZWRpYS4gQmFtZmllbGQgc2FpZCBhbm90aGVyIGtub2NrLW9uIGVmZmVjdCBvZiB0aGUgYmlydGggd291bGQgYmUgc2FsZXMgb2YgYmFieSBwcm9kdWN0cyBhcyBvdGhlciBuZXcgcGFyZW50cyBjb3BpZWQgdGhlIGR1Y2hlc3MuIFRoZSAiS2F0ZS1lZmZlY3QiIGlzIGFscmVhZHkgd2VsbCBrbm93biBhcyBzYWxlcyBvZiBhbnl0aGluZyB0aGUgZHVjaGVzcyB3ZWFycyBvciB1c2VzIHNvYXJzLiBBIERhbG1hdGlhbiBjb2F0IHNoZSB3b3JlIGxhc3Qgd2VlayB0byBsYXVuY2ggYSBuZXcgY3J1aXNlIHNoaXAgc29sZCBvdXQgd2l0aGluIGFuIGhvdXIuICJPbmUgb2YgdGhlIGJpZ2dlc3QgZmFjdG9ycyB3aWxsIGJlIHRoZSB1bmludGVudGlvbmFsIHJveWFsIGJyYW5kIGVuZG9yc2VtZW50LCIgc2FpZCBCYW1maWVsZC4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT9QgQSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGE1MTA3Nzk0Njk2Mjc1NmY=</field><field name="symbol" class="java.lang.String">rO0ABXQACUNSUi1VTi5UTw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT9Vp2CAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAtZmZmZmZm</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAtZmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAsgAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAs5mZmZmZm</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEApj1wo9cKP</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAG+GA==</field><field name="id" class="java.lang.String">rO0ABXQAEDI0MTU0NWQ5OTgyOWRjMmE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mK4pAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwMjE=</field><field name="title" class="java.lang.String">rO0ABXQAP0dvbGQgTWFraW5nIFBlb3BsZSBDcmF6eSBpbiBQZXJpbG91cyBTZWFyY2ggZm9yIFN1bmtlbiBUcmVhc3VyZQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJVMdsAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI1YTgyYjNiNDFlNjliZjc=</field><field name="symbol" class="java.lang.String">rO0ABXQABFdPT0Q=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJaWDcAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJeFHrhR64</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJeFHrhR64</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJQ9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJYAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBIzMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAnEA==</field><field name="id" class="java.lang.String">rO0ABXQAEGJhZTdmMDc3OWE4ZmI3MjE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mIU4AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQ5MzY=</field><field name="title" class="java.lang.String">rO0ABXQAO0dvbGQgUHJpY2luZyBEcmF3cyBTY3J1dGlueSBBbWlkIEtub3dsZWRnZSBUaWVkIHRvIEVydXB0aW9u</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKS/isAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDAwMDFhOTM0YjlmNWJiYTg=</field><field name="symbol" class="java.lang.String">rO0ABXQACUJOUy1QTi5UTw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKYJIcAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6GZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6Y9cKPXCk</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6GZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6JmZmZmZm</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4jMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAARlA==</field><field name="id" class="java.lang.String">rO0ABXQAEDNiNjEzMTdmYTJkZThlY2I=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMx8AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIyNjc3</field><field name="title" class="java.lang.String">rO0ABXQAPENoYXJ0ZXJob3VzZSBTYWlkIHRvIE11bGwgJDEuNiBCaWxsaW9uIEJpZCBmb3IgRzRTIENhc2ggVW5pdA==</field><field name="content" class="java.lang.String">rO0ABXQOq0NoYXJ0ZXJob3VzZSBhcHByb2FjaGVkIGJhbmtzIGFuZCBpdHMgaW52ZXN0b3JzIG92ZXIgZmluYW5jaW5nIGEgZGVhbCBmb3IgdGhlIHVuaXQsIHNhaWQgdGhlIHBlb3BsZSwgd2hvIGFza2VkIG5vdCB0byBiZSBpZGVudGlmaWVkIGJlY2F1c2UgdGhlIHRhbGtzIGFyZSBwcml2YXRlLiBHNFMsIHRoZSB3b3JsZOKAmXMgbGFyZ2VzdCBzZWN1cml0eS1zZXJ2aWNlcyBwcm92aWRlciwgaXMgYXdhcmUgb2YgdGhlIHByb3Bvc2FsIGFuZCBkaXNjdXNzZWQgdGhlIHNhbGUgb3B0aW9uIGludGVybmFsbHksIHNhaWQgb25lIG9mIHRoZSBwZW9wbGUuIEc0UywgYmFzZWQgaW4gQ3Jhd2xleSwgRW5nbGFuZCwgaGFzbuKAmXQgZW50ZXJlZCBmb3JtYWwgZGlzY3Vzc2lvbnMgd2l0aCBDaGFydGVyaG91c2Ugb3IgbWFuZGF0ZWQgYW4gZXh0ZXJuYWwgYWR2aXNlciBmb3IgdGhlIHVuaXQsIHdoaWNoIHByb3ZpZGVzIHRyYW5zcG9ydGF0aW9uIG9mIGNhc2ggdXNpbmcgaGlnaC0gc2VjdXJpdHkgdmVoaWNsZXMgYW5kIG1hbmFnZXMgQVRNIG1hY2hpbmVzLCB0aGUgcGVyc29uIHNhaWQuIEc0UyBtYXkgZGVjaWRlIGFnYWluc3QgYSBzYWxlIG9mIHRoZSB1bml0LCBvbmUgb2YgdGhlIHBlb3BsZSBzYWlkLiBHNFMgaW4gQXVndXN0IGFncmVlZCB0byBzZWxsIGl0cyBjYXNoLXNvbHV0aW9ucyB1bml0IGluIENhbmFkYSBhbmQgYSBkYXRhIGJ1c2luZXNzIGluIENvbG9tYmlhIGFzIG5ldyBDaGllZiBFeGVjdXRpdmUgT2ZmaWNlciBBc2hsZXkgQWxtYW56YSB0cmllcyB0byByZWR1Y2UgZGVidCBhbmQgcmV2YW1wIHRoZSBjb21wYW55IGZvbGxvd2luZyBhIHNlcmllcyBvZiBibG93cyB0byBpdHMgcmVwdXRhdGlvbi4gRzRTIHJlcGxhY2VkIGZvcm1lciBDRU8gTmljayBCdWNrbGVzIGluIE1heSBhZnRlciBpdCBmYWlsZWQgdG8gcHJvdmlkZSBlbm91Z2ggZ3VhcmRzIGZvciBsYXN0IHllYXLigJlzIExvbmRvbiBPbHltcGljcy4gVGhlIFNlcmlvdXMgRnJhdWQgT2ZmaWNlIHRoaXMgeWVhciBzdGFydGVkIHByb2JpbmcgdGhlIGNvbXBhbnkgZm9yIGFsbGVnZWRseSBvdmVyY2hhcmdpbmcgdGhlIGdvdmVybm1lbnQgZm9yIHRoZSBlbGVjdHJvbmljIHRhZ2dpbmcgb2YgcHJpc29uZXJzLiBJbnZlc3RvciBQcmVzc3VyZSBPdGhlciBwcml2YXRlLWVxdWl0eSBmaXJtcyBoYXZlIGFsc28gc2hvd24gaW50ZXJlc3QgaW4gRzRT4oCZcyBjYXNoLXNvbHV0aW9ucyBidXNpbmVzcywgc2FpZCBvbmUgb2YgdGhlIHBlb3BsZS4gUGllcnMgWmFuZ2FuYSwgYSBzcG9rZXNtYW4gZm9yIEc0Uywgc2FpZCB0aGUgY29tcGFueSBkb2VzbuKAmXQgY29tbWVudCBvbiBzcGVjdWxhdGlvbi4gR2FyeSBTdW5kZXJsYW5kLCBhIHNwb2tlc21hbiBmb3IgQ2hhcnRlcmhvdXNlLCBkZWNsaW5lZCB0byBjb21tZW50LiBHNFMgc2FpZCBpbiBBdWd1c3QgaXTigJlzIGNvbnNpZGVyaW5nIGZ1cnRoZXIgZGlzcG9zYWxzLiBDZXZpYW4gQ2FwaXRhbCBBQiwgYSBTdG9ja2hvbG0tYmFzZWQgaGVkZ2UgZnVuZCBhbmQgc2hhcmVob2xkZXIgaW4gRzRTLCBoYXMgcHJlc3NlZCB0aGUgY29tcGFueSB0byBzZWxsIHVuaXRzIGluY2x1ZGluZyB0aGUgY2FzaCBzb2x1dGlvbnMgYnVzaW5lc3MsIHRoZSBTdW5kYXkgVGltZXMgcmVwb3J0ZWQgU2VwdC4gMjksIHdpdGhvdXQgc2F5aW5nIGhvdyBpdCBnb3QgdGhlIGluZm9ybWF0aW9uLiBDZXZpYW7igJlzIHJlcHJlc2VudGF0aXZlcyBjb3VsZG7igJl0IGltbWVkaWF0ZWx5IGJlIHJlYWNoZWQgZm9yIGNvbW1lbnQgb3V0c2lkZSByZWd1bGFyIGJ1c2luZXNzIGhvdXJzLiBDaGFydGVyaG91c2UsIGZvcm1lZCBpbiBhIG1hbmFnZW1lbnQgYnV5b3V0IGZyb20gSFNCQyBIb2xkaW5ncyBQbGMgMTIgeWVhcnMgYWdvLCBtYW5hZ2VzIGEgNCBiaWxsaW9uLWV1cm8gKCQ1LjQgYmlsbGlvbikgcHJpdmF0ZS1lcXVpdHkgZnVuZC4gSXRzIHBvcnRmb2xpbyBpbmNsdWRlcyBjb21wYW5pZXMgc3VjaCBhcyBjYXRlcmluZyBjb21wYW55IEVsaW9yLCBjbG90aGluZyBhbmQgZm9vdHdlYXIgcmV0YWlsZXIgVml2YXJ0ZSBhbmQgaW5zdXJhbmNlIGNvbXBhbnkgQWNyb21hcy4gRzRT4oCZcyBjYXNoIHNvbHV0aW9ucyBidXNpbmVzcyBtYWRlIGEgcHJvZml0IGJlZm9yZSBpbnRlcmVzdCwgdGF4IGFuZCBhbW9ydGl6YXRpb24gb2YgMTM1IG1pbGxpb24gcG91bmRzIG9uIHJldmVudWUgb2YgMS4yOSBiaWxsaW9uIHBvdW5kcyBpbiAyMDEyLCBhY2NvcmRpbmcgdG8gRzRT4oCZcyB3ZWJzaXRlLiBUaGUgYnVzaW5lc3MgYWNjb3VudGVkIGZvciAyNCBwZXJjZW50IG9mIHRvdGFsIHByb2ZpdC4gRzRTIHNoYXJlcyBoYXZlIGRyb3BwZWQgMjAgcGVyY2VudCBpbiBMb25kb24gdHJhZGluZyBpbiB0aGUgbGFzdCBzaXggbW9udGhzLCB2YWx1aW5nIHRoZSBjb21wYW55IGF0IDMuOCBiaWxsaW9uIHBvdW5kcywgd2hpbGUgdGhlIEJyaXRpc2ggRlRTRSAxMDAgaW5kZXggZ2FpbmVkIDUuMyBwZXJjZW50LiBHb3Zlcm5tZW50IE9yZGVycyBUaGUgVS5LLiBnb3Zlcm5tZW50LCBhY2NvdW50aW5nIGZvciAxMCBwZXJjZW50IG9mIEc0U+KAmXMgc2FsZXMgbGFzdCB5ZWFyLCBoYXMgc2FpZCBpdCBtYXkgZXhjbHVkZSB0aGUgY29tcGFueSBmcm9tIHRlbmRlcmluZyBmb3IgZnV0dXJlIHRhZ2dpbmcgY29udHJhY3RzLiBKdXN0aWNlIFNlY3JldGFyeSBDaHJpcyBHcmF5bGluZyBzYWlkIEp1bHkgMTEgdGhlIGNvbXBhbnkgb3ZlcmNoYXJnZWQgZm9yIHRoZSBlbGVjdHJvbmljIHRhZ2dpbmcgb2Ygb2ZmZW5kZXJzLCBpbmNsdWRpbmcgYmlsbGluZyBmb3IgZGVhZCBwZW9wbGUuIFRoZSBTZXJpb3VzIEZyYXVkIE9mZmljZSBzYWlkIGl0IGlzIGV4YW1pbmluZyB0aGUgdGFnZ2luZyBhbGxlZ2F0aW9ucywgZGVhbGluZyBhbm90aGVyIGJsb3cgdG8gdGhlIGNvbXBhbnkgYWZ0ZXIgdGhlIGJ1bmdsZWQgMjAxMiBMb25kb24gT2x5bXBpYyBHYW1lcyBjb250cmFjdC4gSW4gSnVseSwgVS5LLiBwcm9zZWN1dG9ycyBhbHNvIHNhaWQgdGhleSB3ZXJlIHJlY29uc2lkZXJpbmcgd2hldGhlciB0byBjaGFyZ2UgZm9ybWVyIGVtcGxveWVlcyBvZiBHNFMgYWZ0ZXIgYSBqdXJ5IGluIExvbmRvbiBydWxlZCB0aGF0IGEgbWFuIGluIHRoZWlyIGN1c3RvZHkgd2FzIHVubGF3ZnVsbHkga2lsbGVkIHdoaWxlIGJlaW5nIGRlcG9ydGVkIHRvIEFuZ29sYS4gSW4gT2N0b2JlciwgYSBVLksuIHBhcmxpYW1lbnRhcnkgcGFuZWwgc2FpZCBHNFMgd2FzIHByb3ZpZGluZyDigJxzcXVhbGlk4oCdIGFuZCDigJxydW4tZG93buKAnSBob3VzaW5nIHRvIGFzeWx1bSBzZWVrZXJzIHVuZGVyIGdvdmVybm1lbnQgY29udHJhY3RzLiBGb3JtZXIgQ0VPIEJ1Y2tsZXMgdG9sZCBsYXdtYWtlcnMgbGFzdCB5ZWFyIHRoYXQgRzRT4oCZcyByZXB1dGF0aW9uIHdhcyDigJxpbiB0YXR0ZXJz4oCdIGFuZCB0aGF0IGhlIGFncmVlZCB0aGUgYnVuZ2xlZCBPbHltcGljcyBjb250cmFjdCB3YXMgYSDigJxodW1pbGlhdGluZyBzaGFtYmxlcy7igJ0gRzRT4oCZcyBwcm9maXQgYmVmb3JlIGludGVyZXN0LCB0YXhlcyBhbmQgYW1vcnRpemF0aW9uIHdhcyBsaXR0bGUgY2hhbmdlZCBpbiB0aGUgZmlyc3QgaGFsZiBhdCAyMDEgbWlsbGlvbiBwb3VuZHMuIFNhbGVzIGNsaW1iZWQgNy4yIHBlcmNlbnQgYW5kIEc0UyBmbGFnZ2VkIGEgY29udHJhY3QgcGlwZWxpbmUgd29ydGggNCBiaWxsaW9uIHBvdW5kcyBhIHllYXIuIEl0IGdlbmVyYXRlZCAyMTggbWlsbGlvbiBwb3VuZHMgaW4gY2FzaCBmcm9tIG9wZXJhdGlvbnMu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUHUO/CAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDQyMTJiNDg0MTQ5MjI4MDU=</field><field name="symbol" class="java.lang.String">rO0ABXQABUdGUy5M</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUHZYkyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBu4AAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBvhwo9cKPX</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBuoAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBvUAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBtlMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAEG3DA==</field><field name="id" class="java.lang.String">rO0ABXQAEGFmZmQ2ODdjZTkwMGM2MzE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mILTAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTEzOTA1</field><field name="title" class="java.lang.String">rO0ABXQAOEphcGFuJ3MgU3VudG9yeSB0byBCdXkgR1NLIERyaW5rIEJyYW5kcyBmb3IgJDIuMSBCaWxsaW9u</field><field name="content" class="java.lang.String">rO0ABXQKElRoZSBhY3F1aXNpdGlvbiwgYW5ub3VuY2VkIGJ5IHRoZSBjb21wYW5pZXMgb24gTW9uZGF5LCBoYWQgYmVlbiB3aWRlbHkgYW50aWNpcGF0ZWQgc2luY2UgcGVvcGxlIGNsb3NlIHRvIHRoZSBwcm9jZXNzIHNhaWQgbGFzdCB3ZWVrIHRoYXQgU3VudG9yeSB3YXMgaW4gYWR2YW5jZWQgdGFsa3Mgb24gYSBkZWFsIHRoYXQgd291bGQgcHJlLWVtcHQgYW4gYXVjdGlvbiBvZiB0aGUgaWNvbmljIEJyaXRpc2ggZHJpbmtzLiBKYXBhbidzIHNlY29uZC1sYXJnZXN0IGRyaW5rcyBtYWtlciBoYXMgcGxlbnR5IG9mIGNhc2ggYWZ0ZXIgYW4gaW5pdGlhbCBwdWJsaWMgb2ZmZXJpbmcgaW4gSnVuZSB0aGF0IHJhaXNlZCAkNCBiaWxsaW9uLiBJdCB3YXMgYWx3YXlzIHNlZW4gYXMgdGhlIG1vc3QgbGlrZWx5IGJ1eWVyIGZvciB0aGUgYnJhbmRzIGFmdGVyIEdTSyBhbm5vdW5jZWQgcGxhbnMgaW4gQXByaWwgZm9yIHRoZWlyIGRpc3Bvc2FsLiBMdWNvemFkZSBhbmQgUmliZW5hIGFyZSB3ZWxsLWxvdmVkIGluIEJyaXRhaW4gYnV0IGxhY2sgZ2xvYmFsIHJlYWNoLCBlc3BlY2lhbGx5IGluIHRoZSBiaWcgZW1lcmdpbmcgbWFya2V0cyB0aGF0IGFyZSBiZWNvbWluZyB0aGUgZm9jdXMgb2YgdGhlIEJyaXRpc2ggZHJ1Z21ha2VyJ3MgY29uc3VtZXIgaGVhbHRoIGJ1c2luZXNzLiBGb3IgU3VudG9yeSwgaG93ZXZlciwgdGhleSBvZmZlciBhIGdyb3d0aCBvcHBvcnR1bml0eSB0byBjb3VudGVyIHNsdWdnaXNoIGRlbWFuZCBhdCBob21lLiBTdW50b3J5IGJvdWdodCB0aGUgT3JhbmdpbmEgU2Nod2VwcGVzIGRyaW5rcyBicmFuZCBmb3IgbW9yZSB0aGFuICQzIGJpbGxpb24gaW4gMjAwOSwgZ2l2aW5nIGl0IGEgc2lnbmlmaWNhbnQgcHJlc2VuY2UgaW4gRnJhbmNlIGFuZCBTcGFpbi4gQnkgYWNxdWlyaW5nIGEgbmV3IGJ1c2luZXNzIHdpdGggYSBmb2N1cyBvbiBCcml0YWluLCBTdW50b3J5IHNhaWQgaXQgZXhwZWN0ZWQgdG8gZnVydGhlciBncm93IHNhbGVzLiBUaGUgcHVyY2hhc2UgYWxzbyBhbGxvd3MgdGhlIEphcGFuZXNlIGdyb3VwIHRvIGV4dGVuZCBpdHMgcmVhY2ggaW50byBjb3VudHJpZXMgd2hlcmUgR1NLIGFscmVhZHkgb3BlcmF0ZXMsIHN1Y2ggYXMgTmlnZXJpYSBhbmQgTWFsYXlzaWEuIEhJR0ggTVVMVElQTEUgRGVzcGl0ZSBiZWluZyBvbiB0aGUgbWFya2V0IGZvciBhcm91bmQgODAgeWVhcnMsIEx1Y296YWRlIGFuZCBSaWJlbmEgaGF2ZSBjb21iaW5lZCBhbm51YWwgc2FsZXMgb2YganVzdCBvdmVyIDUwMCBtaWxsaW9uIHBvdW5kcyBhIHllYXIuIFRoYXQgcHV0cyB0aGUgdHJhbnNhY3Rpb24gb24gYSBtdWx0aXBsZSBvZiAyLjcgdGltZXMgcmV2ZW51ZSDigJQgYXQgdGhlIGhpZ2ggZW5kIG9mIHJlY2VudCBzb2Z0IGRyaW5rcyBkZWFscy4gU3VudG9yeSwgd2hpY2ggaXMgYmV0dGVyIGtub3duIGZvciBpdHMgYmVlciBhbmQgWWFtYXpha2kgd2hpc2t5LCBzYWlkIHRoZSBkZWFsIHdvdWxkIGhhdmUgYSBsaW1pdGVkIGVmZmVjdCBvbiAyMDEzIHJlc3VsdHMgYW5kIGl0IHdhcyAiY3VycmVudGx5IGV4YW1pbmluZyB0aGUgZWZmZWN0IGl0IHdpbGwgaGF2ZSBvbiB0aGUgcGVyZm9ybWFuY2Ugb3V0bG9vayBmb3IgdGhlIGZvbGxvd2luZyBidXNpbmVzcyB5ZWFyIGFuZCBvbndhcmQuIiBUaGUgc2FsZSBpcyBleHBlY3RlZCB0byBiZSBjb21wbGV0ZWQgYnkgdGhlIGVuZCBvZiB0aGUgeWVhciwgc3ViamVjdCB0byByZWd1bGF0b3J5IGFwcHJvdmFscy4gRm9yIEdTSywgaXQgd2lsbCB5aWVsZCBuZXQgcHJvY2VlZHMgb2YgYXJvdW5kIDEuMyBiaWxsaW9uIHBvdW5kcyDigJQgYWZ0ZXIgdGF4LCBmZWVzIGFuZCBjb3N0cyDigJQgdGhhdCB3aWxsIGJlIHVzZWQgdG8gcmVkdWNlIGRlYnQgYW5kIGZvciBnZW5lcmFsIGNvcnBvcmF0ZSBwdXJwb3Nlcy4gVGhlIG5ldCBnYWluIHdpbGwgYmUgZXhjbHVkZWQgZnJvbSAyMDEzIGNvcmUgb3BlcmF0aW5nIHByb2ZpdCBhbmQgZWFybmluZ3MgcGVyIHNoYXJlLiBBIEdTSyBzcG9rZXNtYW4gc2FpZCBTdW50b3J5J3MgYmlkIHdhcyBhbHNvIGF0dHJhY3RpdmUgYmVjYXVzZSBpdCB3b3VsZCBwcm90ZWN0IGpvYnMgaW4gQnJpdGFpbi4gU29tZSA3MDAgZW1wbG95ZWVzIHdpbGwgdHJhbnNmZXIgdG8gdGhlIEphcGFuZXNlIGdyb3VwLCBpbmNsdWRpbmcgYXJvdW5kIDUwMCB3b3JrZXJzIGF0IEdTSydzIENvbGVmb3JkIGZhY3RvcnkgaW4gdGhlIHdlc3Qgb2YgRW5nbGFuZC4gVGhlIEdTSyBzcG9rZXNtYW4gc2FpZCB0aGVyZSB3YXMgZXhwZWN0ZWQgdG8gYmUgdmVyeSBsaXR0bGUsIGlmIGFueSwgaW1wYWN0IG9uIGpvYnMgYXMgYSByZXN1bHQgb2YgdGhlIHNhbGUuIE90aGVyIHBvdGVudGlhbCBidXllcnMgdGhhdCBoYWQgYmVlbiBleWVpbmcgTHVjb3phZGUgYW5kIFJpYmVuYSBpbmNsdWRlZCBCbGFja3N0b25lLCBMaW9uIENhcGl0YWwsIENpbnZlbiwgQ1ZDIENhcGl0YWwgUGFydG5lcnMgYW5kIEtLUi4gTWFueSBoYWQgcHJlcGFyZWQgYmlkcyBmb3IgYW4gYXVjdGlvbiB0aGF0IG5ldmVyIGhhcHBlbmVkLiBKUCBNb3JnYW4gYW5kIEdyZWVuaGlsbCBhY3RlZCBmb3IgR1NLIG9uIHRoZSBkaXNwb3NhbC4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEBFzSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDhlNzhkNzQzMzhjNWQzNWI=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0dTSw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEGPZCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJFHrhR64U</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJUzMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBI+uFHrhR7</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJNcKPXCj2</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBHT1wo9cKP</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAEmOFA==</field><field name="id" class="java.lang.String">rO0ABXQAEGY1NTljOGNlZjY4ZDBkNWQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mML8AAAA==</field></document></documents><date>2015-05-07T12:15:11-0500</date></cacheEntry>
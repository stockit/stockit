<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hDaGluYXMgYW50aXRydXN0IGNyYWNrZG93biBzaWduYWxzIGEgbmV3IGVyYSBvZiByZWd1bGF0b3J5IHNjcnV0aW55IGluIHRoZSBjb3VudHJ5IGFuZCB0aHJlYXRlbnMgdG8gZW5kIHRoZSBkYXlzIHdoZW4gcHJvZHVjdHMgZnJvbSBBdWRpIHNlZGFucyB0byBTdGFyYnVja3MgbGF0dGVzIGdlbmVyYXRlIGZhdHRlciBwcm9maXRzIGluIEJlaWppbmcgdGhhbiBpbiBMb25kb24gb3IgTmV3IFlvcmsgSW4gdGhlIHBhc3QgbW9udGggQ2hpbmVzZSBhbnRpdHJ1c3QgYXV0aG9yaXRpZXMgcHJlc3N1cmVkIGF0IGxlYXN0IHNldmVuIGNhcm1ha2VycyB0byBjdXQgcHJpY2VzIGFuZCByYWlkZWQgdGhlIG9mZmljZXMgb2Ygc29mdHdhcmUgbWFrZXIgTWljcm9zb2Z0IENvcnAgVGhlIGNvbXBhbmllcyBqb2luIFF1YWxjb21tIEluYyBDYXRlcnBpbGxhciBJbmMgTWVhZCBKb2huc29uIE51dHJpdGlvbiBDbyBhbmQgRGFub25lIGFtb25nIGZvcmVpZ24gYnVzaW5lc3NlcyB0aGF0IGhhdmUgZmFsbGVuIHVuZGVyIGFudGltb25vcG9seSBzY3J1dGlueSBpbiBDaGluYSBzaW5jZSBsYXN0IHllYXIgVGhlIHByb2JlcyBjb21iaW5lZCB3aXRoIHNpZ25zIHRoZSBnb3Zlcm5tZW50IGlzIHNodW5uaW5nIHNvbWUgVVMgdGVjaG5vbG9neSBjb21wYW5pZXMgZm9yIHNlY3VyaXR5IHJlYXNvbnMgaGF2ZSBsZWZ0IGZvcmVpZ24gYnVzaW5lc3NlcyBzdHJ1Z2dsaW5nIHRvIGZpZ3VyZSBvdXQgdGhlIGV2b2x2aW5nIGxhd3MgYW5kIHJlZ3VsYXRpb25zIGluIHRoZSB3b3JsZHMgbW9zdCBwb3B1bG91cyBjb3VudHJ5IFRob3NlIHNlZWtpbmcgdG8gYWRhcHQgZmFjZSB0aGUgY2hhbGxlbmdlIG9mIGludGVycHJldGluZyB2YWd1ZSBydWxlcyBpbiBhbiBlY29ub215IHRoYXRzIG5vIGxvbmdlciBhcyByZWxpYW50IG9uIGZvcmVpZ24gaW52ZXN0bWVudCBhcyBpbiBwYXN0IGRlY2FkZXMgV2UgbWF5IGJlIHNlZWluZyBhIHBhcmFkaWdtIHNoaWZ0IHdoZXJlIHRoZSBydWxlcyBvZiB0aGUgZ2FtZSBhcmUgY2hhbmdpbmcgc2FpZCBEYXZpZCBMb2V2aW5nZXIgZm9ybWVyIFVTIFRyZWFzdXJ5IERlcGFydG1lbnQgc2VuaW9yIGNvb3JkaW5hdG9yIGZvciBDaGluYSBhZmZhaXJzIGFuZCBub3cgYW4gYW5hbHlzdCBhdCBUQ1cgR3JvdXAgSW5jIGluIExvcyBBbmdlbGVzIFVudGlsIHBlb3BsZSBmaWd1cmUgb3V0IHRoZSBuZXcgcnVsZXMgaXQgd2lsbCBjcmVhdGUgYSBtdWNoIG1vcmUgdW5jZXJ0YWluIGJ1c2luZXNzIGNsaW1hdGUgMTIgVGltZXMgVm9sa3N3YWdlbiBBR3MgQXVkaSBCYXllcmlzY2hlIE1vdG9yZW4gV2Vya2UgQUcgRGFpbWxlciBBR3MgTWVyY2VkZXNCZW56IFRhdGEgTW90b3JzIEx0ZHMgSmFndWFyIExhbmQgUm92ZXIgRmlhdCBTcEFzIENocnlzbGVyIFRveW90YSBNb3RvciBDb3JwIGFuZCBIb25kYSBNb3RvciBDbyBoYXZlIGFubm91bmNlZCBwcmljZSBjdXRzIG9mIHZlaGljbGVzIG9yIHNwYXJlIHBhcnRzIHNpbmNlIEp1bHkgaW4gdGhlIHdha2Ugb2YgYW4gaW52ZXN0aWdhdGlvbiBieSBDaGluYXMgTmF0aW9uYWwgRGV2ZWxvcG1lbnQgYW5kIFJlZm9ybSBDb21taXNzaW9uIGludG8gbW9yZSB0aGFuIGEgZG96ZW4gYXV0b21ha2VycyBUaGUgTkRSQyBDaGluYXMgbWFpbiBlY29ub21pYyBwbGFubmVyIHRha2VzIHByaW1hcnkgcmVzcG9uc2liaWxpdHkgZm9yIG92ZXJzaWdodCBvZiBwcmljaW5nIGFuZCBpcyBvbmUgb2YgdGhyZWUgZ292ZXJubWVudCBib2RpZXMgdGhhdCBlbmZvcmNlIHRoZSBuYXRpb25zIGFudGl0cnVzdCBsYXdzIENhcm1ha2VycyBjdXQgcHJpY2VzIGFmdGVyIENoaW5lc2Ugc3RhdGUgbWVkaWEgY3JpdGljaXplZCBob3cgc3BhcmUgcGFydHMgY291bGQgdHJ1bXAgdGhlIGNvc3Qgb2YgYSBuZXcgY2FyIEZvciBleGFtcGxlIHJlcGxhY2luZyBhbGwgdGhlIHBhcnRzIG9mIGEgTWVyY2VkZXMgQ2NsYXNzIHNlZGFuIGNhbiBjb3N0IDEyIHRpbWVzIHRoZSBwcmljZSBvZiBhIGJyYW5kIG5ldyBtb2RlbCBhY2NvcmRpbmcgdG8gYW4gQXByaWwgcmVwb3J0IGJ5IHRoZSBJbnN1cmFuY2UgQXNzb2NpYXRpb24gb2YgQ2hpbmEgYW5kIENoaW5hIEF1dG8gTWFpbnRlbmFuY2UgIFJlcGFpciBBc3NvY2lhdGlvbiBUaGVyZXMgYSBjb25jZXJ0ZWQgZWZmb3J0IG9uIHRoZSBwYXJ0IG9mIG11bHRpcGxlIHJlZ3VsYXRvcnMgaW4gQ2hpbmEgdG8gYWdncmVzc2l2ZWx5IGVuZm9yY2UgdGhlIHJlZ3VsYXRpb25zIHNhaWQgS2VudCBLZWRsIG1hbmFnaW5nIGRpcmVjdG9yIGZvciBHcmVhdGVyIENoaW5hIGFuZCBOb3J0aCBBc2lhIGF0IENvbnRyb2wgUmlza3MgR3JvdXAgSG9sZGluZ3MgTHRkIFRoZXkgYXJlIGJlaW5nIG11Y2ggbW9yZSBhZ2dyZXNzaXZlIG5vdyB0aGFuIHdlIGhhdmUgZXZlciBzZWVuIEx1Y3JhdGl2ZSBDb2ZmZWUgRm9yIFZvbGtzd2FnZW4gQ2hpbmEgaXMgc28gcHJvZml0YWJsZSB0aGF0IGl0cyBlYXJuaW5ncyB0aGVyZSBhbG9uZyB3aXRoIHRob3NlIG9mIEF1ZGkgZ2VuZXJhdGUgYWxsIG9mIGl0cyBjYXNoIGZsb3cgYWNjb3JkaW5nIHRvIGVzdGltYXRlcyBieSBNYXggV2FyYnVydG9uIGFuIGFuYWx5c3QgYXQgU2FuZm9yZCBDIEJlcm5zdGVpbiBpbiBOb3ZlbWJlciBCZXlvbmQgY2FycyBTdGFyYnVja3MgQ29ycCBnZW5lcmF0ZXMgb3BlcmF0aW5nIG1hcmdpbnMgb2YgMzUgcGVyY2VudCBpbiBpdHMgQ2hpbmFBc2lhIFBhY2lmaWMgcmVnaW9uIGhpZ2hlciB0aGFuIEV1cm9wZXMgOSBwZXJjZW50IGFuZCB0aGUgMjQgcGVyY2VudCBpbiB0aGUgQW1lcmljYXMgRHJ1Z21ha2VycyBoYXZlIGdlbmVyYWxseSBzZWVuIGhpZ2hlciBwcm9maXQgbWFyZ2lucyBpbiBDaGluYSB0aGFuIGluIEV1cm9wZSB0aG91Z2ggdGhhdHMgY2hhbmdlZCBmb3Igc29tZSBjb21wYW5pZXMgbGFzdCB5ZWFyIGFjY29yZGluZyB0byBQaGlsaXBwZSBMYW5vbmUgYSBQYXJpc2Jhc2VkIGFuYWx5c3QgYXQgTmF0aXhpcyBTZWN1cml0aWVzIExpIFB1bWluIGEgc3Bva2VzbWFuIGZvciBORFJDIHRvbGQgcmVwb3J0ZXJzIG9uIEF1ZyA2IHRoYXQgdGhlIGludmVzdGlnYXRpb24gd2FzIGFpbWVkIGF0IG1haW50YWluaW5nIG1hcmtldCBvcmRlciBhbmQgcHJvdGVjdGluZyBjb25zdW1lcnMgQmVzaWRlcyB0aGUgTkRSQyB0aGUgU3RhdGUgQWRtaW5pc3RyYXRpb24gZm9yIEluZHVzdHJ5IGFuZCBDb21tZXJjZSBzYWlkIGxhc3QgbW9udGggaXQgYmVnYW4gcHJvYmluZyB3aGV0aGVyIE1pY3Jvc29mdHMgV2luZG93cyBvcGVyYXRpbmcgc3lzdGVtIGFuZCBPZmZpY2Ugc29mdHdhcmUgdmlvbGF0ZSBDaGluYXMgYW50aW1vbm9wb2x5IGxhdyBPdmVyc2lnaHQgVHJpdW12aXJhdGUgU29tZSBoYXZlIGJlbmVmaXRlZCBDb250cm9sIFJpc2tzIHdoaWNoIHNwZWNpYWxpemVzIGluIHByb3ZpZGluZyBwb2xpdGljYWwgYW5kIHNlY3VyaXR5IGFkdmljZSBoYXMgc2VlbiBhIGRvdWJsaW5nIG9mIGl0cyBidXNpbmVzcyBpbiB0aGUgcGFzdCB5ZWFyIGFzIG1vcmUgY2xpZW50cyBmaW5kIHRoZW1zZWx2ZXMgdW5kZXIgaW52ZXN0aWdhdGlvbiBieSBDaGluZXNlIGF1dGhvcml0aWVzIGFjY29yZGluZyB0byBLZWRsIFNiYXN0aWVuIEogRXZyYXJkIGEgcGFydG5lciBhdCB0aGUgSm9uZXMgRGF5IGxhdyBmaXJtIGluIEhvbmcgS29uZyBzYWlkIGhlcyBzZWVuIGEgc3Bpa2UgaW4gZGVtYW5kIGZvciBhbnRpdHJ1c3QgYWR2aWNlIG92ZXIgdGhlIGxhc3QgeWVhciB3aXRoIGNvbXBhbmllcyByZWNoZWNraW5nIHByaWNpbmcgYW5kIGNvcnBvcmF0ZSByZWxhdGlvbnNoaXBzIFdoaWxlIGFudGl0cnVzdCBjYXNlcyBhcmUgcHVyc3VlZCBieSB0aGUgSnVzdGljZSBEZXBhcnRtZW50IGFuZCB0aGUgRmVkZXJhbCBUcmFkZSBDb21taXNzaW9uIGluIHRoZSBVUyBhbmQgdGhlIEV1cm9wZWFuIENvbW1pc3Npb24gaW4gdGhhdCByZWdpb24gb3ZlcnNpZ2h0IGluIENoaW5hIGhhcyBiZWVuIHNwbGl0IGludG8gdGhyZWUgc2luY2UgaXRzIGFudGltb25vcG9seSBsYXcgd2VudCBpbnRvIGVmZmVjdCBpbiAyMDA4IENhc2VzIGZhbGwgdW5kZXIgTkRSQyBqdXJpc2RpY3Rpb24gd2hlbiBpbnZvbHZpbmcgcHJpY2VzIHRoZSBNaW5pc3RyeSBvZiBDb21tZXJjZSBhc3Nlc3NlcyB0aGUgbGVnYWxpdHkgb2YgbWVyZ2VycyBhbmQgYWNxdWlzaXRpb25zIGFuZCBvdGhlciBhbnRpY29tcGV0aXRpb24gY2FzZXMgZmFsbCB1bmRlciB0aGUgU0FJQyBGYXhlcyBzZW50IHRvIHRoZSBORFJDIE1pbmlzdHJ5IG9mIENvbW1lcmNlIGFuZCBTQUlDIHdlbnQgdW5hbnN3ZXJlZCBUaGF0IHNhaWQgaGF2aW5nIGEgdHJpdW12aXJhdGUgY2FuIGJlIGNvbmZ1c2luZyBhcyB0aGUgYm91bmRhcmllcyBiZXR3ZWVuIGVhY2ggYWdlbmN5IGNhbiBiZSBvYnNjdXJlIHNhaWQgQWtpcmEgTW9yaXdha2kgdGhlIGNoaWVmIHJlcHJlc2VudGF0aXZlIGluIFNoYW5naGFpIGF0IHRoZSBsYXdmaXJtIG9mIEFuZGVyc29uIE1vcmkgIFRvbW90c3VuZSBDeWJlcnNweWluZyBDbGFpbXMgVGhlcmVzIGEgbGFjayBvZiB0cmFuc3BhcmVuY3kgaW4gbGF3IGVuZm9yY2VtZW50IHNhaWQgTW9yaXdha2kgV2hpc3RsZWJsb3dlcnMgd29udCBldmVuIGtub3cgd2hlcmUgdG8gZ28gdG8gaGUgc2FpZCBJdHMgbW9yZSB0aGFuIGp1c3QgYW50aXRydXN0IFRlY2hub2xvZ3kgY29tcGFuaWVzIGhhdmUgYmVlbiB1bmRlciBmaXJlIGFmdGVyIGxhc3QgeWVhcnMgcmV2ZWxhdGlvbnMgYnkgZm9ybWVyIGNvbnRyYWN0b3IgRWR3YXJkIFNub3dkZW4gb2YgYSBOYXRpb25hbCBTZWN1cml0eSBBZ2VuY3kgc3B5aW5nIHByb2dyYW0gYW5kIHRoZSBVUyBpbmRpY3RtZW50IGluIE1heSBvZiBDaGluZXNlIG1pbGl0YXJ5IG9mZmljaWFscyBvbiBjeWJlcnNweWluZyBjbGFpbXMgVGhlIGZvbGxvd2luZyBtb250aCBhIGNvbW1lbnRhcnkgb24gdGhlIFBlb3BsZXMgRGFpbHlzIG1pY3JvYmxvZyBzYWlkIEFwcGxlIE1pY3Jvc29mdCBHb29nbGUgSW5jIGFuZCBGYWNlYm9vayBJbmMgY29vcGVyYXRlZCBpbiBhIHNlY3JldHQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0xMi0wM1QwMDowMDowMFogVE8gMjAxNC0wNy0xMFQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDM5NzY=</field><field name="title" class="java.lang.String">rO0ABXQAPldhc2hpbmd0b24sIFJlZ3VsYXRvcnMgU2hydWcgYXQgQWxpYmFiYSdzIFBsYW4gZm9yIE1hc3NpdmUgSVBP</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcepHSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDA3MjRkOGEzODdhYzY5Y2Y=</field><field name="symbol" class="java.lang.String">rO0ABXQABFBFUlk=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcjytCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxKPXCj1wp</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxUeuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxD1wo9cKP</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxTMzMzMzN</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxTMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAF6hA==</field><field name="id" class="java.lang.String">rO0ABXQAEGVlMDVmOTQ5N2ViNWY4OWU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE6aAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDE1MTc=</field><field name="title" class="java.lang.String">rO0ABXQAOkNoaW5hIFNweS1DaGFyZ2UgUmV0YWxpYXRpb24gVGVtcGVyZWQgYnkgRWNvbm9taWMgU2xvd2Rvd24=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUYdJnyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGU1ZTI0NTM4OTdjZDIwZmU=</field><field name="symbol" class="java.lang.String">rO0ABXQABlJBRS5ERQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUYiTNiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+3Cj1wo9cK</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+3Cj1wo9cK</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+3Cj1wo9cK</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+3Cj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+3Cj1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABOIA==</field><field name="id" class="java.lang.String">rO0ABXQAEDgxYjQ5ZGJmNzhiMzA3ZGM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKA2AAAQ==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE5MTc5</field><field name="title" class="java.lang.String">rO0ABXQAN1ZvbGtzd2FnZW4gUG9pc2VkIHRvIEJlYXQgR2VuZXJhbCBNb3RvcnMgaW4gQ2hpbmEgU2FsZXM=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUMtfPMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDA5ZTRmY2IwMWE2Zjk4MWQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNBSUM=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUMyo08AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBAAUeuFHrh</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBAXCj1wo9c</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA/sKPXCj1x</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBAGZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA/I9cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAMCUA==</field><field name="id" class="java.lang.String">rO0ABXQAEDMwZGQ2N2VlZDUyMjhjMmY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHQkAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE2MzM1</field><field name="title" class="java.lang.String">rO0ABXQAMkJ1ZmZldHQtQmFja2VkIEJZRCBTYXlzIENoaW5lc2UgQ2FycyBIZWFkZWQgZm9yIFVT</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUNrSUMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGQxNDVjYTRhNzM4ZGIwZWM=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0JZRA==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUNwb58AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAno9cKPXCk</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAoUeuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAnj1wo9cKP</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAn1wo9cKPX</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAn1wo9cKPX</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAADdk3A==</field><field name="id" class="java.lang.String">rO0ABXQAEGQ5MWI4YTI3ZmExMWI2ZTA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFQ/AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE0NTE1</field><field name="title" class="java.lang.String">rO0ABXQAMUVyYSBvZiBCaWcgQXV0byBSZWNhbGxzIEVtZXJnZXMgYXMgU2NydXRpbnkgUmlzZXM=</field><field name="content" class="java.lang.String">rO0ABXQl6UFmdGVyIFRveW90YSBNb3RvciBDb3JwLiBhbmQgR2VuZXJhbCBNb3RvcnMgQ28uIOKAlCB0d28gb2YgdGhlIGxhcmdlc3QgY2FybWFrZXJzIOKAlCB3ZXJlIGNyaXRpY2l6ZWQgZm9yIGRyYWdnaW5nIHRoZWlyIGZlZXQgYmVmb3JlIGNhbGxpbmcgYmFjayBkZWZlY3RpdmUgbW9kZWxzIGluIHJlY2VudCB5ZWFycywgYXV0b21ha2VycyBhcmUgYWNjZWxlcmF0aW5nIHNhZmV0eSBhY3Rpb25zLiBSZWNhbGxzIHJlY2VudGx5IGNsaW1iZWQgdG8gcmVjb3JkcyBpbiBKYXBhbiBhbmQgQ2hpbmEsIHdoaWxlIGluIHRoZSBVLlMuLCB0aGUgMjAxNCBwYWNlIGlzIHdlbGwgYWhlYWQgb2YgbGFzdCB5ZWFy4oCZcywgd2hlbiB0aGUgdGFsbHkgcm9zZSB0byB0aGUgaGlnaGVzdCBzaW5jZSAyMDA0LiBUb3lvdGEsIHJvaWxlZCBieSBhIGNyaXNpcyBvdmVyIHVuaW50ZW5kZWQgYWNjZWxlcmF0aW9uIGluIDIwMDkgYW5kIDIwMTAsIFdlZG5lc2RheSBpc3N1ZWQgaXRzIHNlY29uZC1iaWdnZXN0IHJlY2FsbCBhbm5vdW5jZW1lbnQgZXZlciBhdCBhIHRpbWUgd2hlbiBHTSBpcyBmYWNpbmcgY3JpdGljaXNtIGZvciBpdHMgaGFuZGxpbmcgb2YgZmF1bHR5IGlnbml0aW9uIHN3aXRjaGVzIHRpZWQgdG8gYXQgbGVhc3QgMTMgZGVhdGhzLiBVLlMuIHJlZ3VsYXRvcnMgYXJlIHByb2JpbmcgR00gZm9yIHRoZSB3YXkgaXQgZGVhbHQgd2l0aCBmbGF3cyBpdCBmaXJzdCBzYXcgYXMgZmFyIGJhY2sgYXMgMjAwMSwgYSBzaWduIG9mIGludGVuc2lmeWluZyBzY3J1dGlueSBvZiBzYWZldHkgcHJhY3RpY2VzIGluIHRoZSBhdXRvIGluZHVzdHJ5LiDigJxTaW5jZSB0aGUgVG95b3RhIGZpYXNjbyBpbiAyMDA5IGFuZCAyMDEwLCB0aGVyZeKAmXMgYWxyZWFkeSBiZWVuIGEgdGVuZGVuY3kgZm9yIGF1dG9tYWtlcnMgdG8gYmUgbW9yZSBjYXV0aW91cyzigJ0gQXNodmluIENob3RhaSwgbWFuYWdpbmcgZGlyZWN0b3Igb2YgSW50ZWxsaWdlbmNlIEF1dG9tb3RpdmUgQXNpYSwgc2FpZCBieSB0ZWxlcGhvbmUuIOKAnFRoZXkgYXJlIHJlY2FsbGluZyB3aGVuIHRoZXkgcHJldmlvdXNseSB3b3VsZG7igJl0IGhhdmUg4oCUIHRoYXTigJlzIGFscmVhZHkgb2NjdXJyaW5nLuKAnSBUb3lvdGEgc3RvY2ssIHdoaWNoIFdlZG5lc2RheSBzYXcgaXRzIHN0ZWVwZXN0IGRyb3AgaW4gdHdvIG1vbnRocywgd2FzIGxpdHRsZSBjaGFuZ2VkIGluIGVhcmx5IFRva3lvIHRyYWRpbmcsIHdoaWxlIHRoZSBUb3BpeCBpbmRleCBjbGltYmVkIDEuNCBwZXJjZW50LiAgICAgICAgICAgICAgICAgICAgICAgICAgICBHTSBQYXJhbGxlbCBSZWd1bGF0b3JzIGhhdmUgZHJhd24gcGFyYWxsZWxzIGJldHdlZW4gR03igJlzIGxvbmctZGVsYXllZCBhY3Rpb25zIGFuZCBUb3lvdGHigJlzIHJlY2FsbCBvZiAxMCBtaWxsaW9uIHZlaGljbGVzIGZvciB1bmludGVuZGVkIGFjY2VsZXJhdGlvbiBpbiAyMDA5IGFuZCAyMDEwLiBUaGUgVG95b3RhIENpdHksIEphcGFuLWJhc2VkIGNvbXBhbnkgaW4gYSBzZXR0bGVtZW50IHdpdGggdGhlIFUuUy4gSnVzdGljZSBEZXBhcnRtZW50IGFkbWl0dGVkIGxhc3QgbW9udGggdGhhdCBpdCBoYWQgY29uY2VhbGVkIGluZm9ybWF0aW9uIGFib3V0IHRob3NlIGRlZmVjdHMuIFRveW90YSwgdGhlIHdvcmxk4oCZcyBsYXJnZXN0IGF1dG9tYWtlciwgcmVjYWxsZWQgbW9yZSB0aGFuIDYgbWlsbGlvbiB2ZWhpY2xlcyBXZWRuZXNkYXkgZm9yIGZpdmUgcG90ZW50aWFsIHNhZmV0eSBoYXphcmRzLiBUaGUgcHJvYmxlbXMgaW52b2x2ZWQgYWxtb3N0IDMwIG1vZGVscyBhbmQgaW5jbHVkZWQgY2FibGVzIHRoYXQgY291bGQgcHJldmVudCBhaXJiYWdzIGZyb20gZGVwbG95aW5nIGFuZCB3aW5kc2hpZWxkLXdpcGVyIG1vdG9ycyB0aGF0IG1heSBicmVhayBkb3duIGFuZCBjYXVzZSBicmFrZSBsYW1wcyB0byBzdG9wIHdvcmtpbmcuICAgICAgICAgICAgICAgICAgICAgICAgICBUb3lvdGEgQXBvbG9neSDigJxXZSBzaW5jZXJlbHkgYXBvbG9naXplIHRvIG91ciBjdXN0b21lcnMgZm9yIHRoZSBpbmNvbnZlbmllbmNlIGFuZCBjb25jZXJuIGJyb3VnaHQgYnkgdGhpcyByZWNhbGwgYW5ub3VuY2VtZW50LOKAnSB0aGUgSmFwYW5lc2UgY29tcGFueSBzYWlkIFdlZG5lc2RheSBpbiBhbiBlLW1haWwuIOKAnFRveW90YSBoYXMgcmVkZWRpY2F0ZWQgaXRzZWxmIHRvIHN0cmVuZ3RoZW5pbmcgaXRzIGNvbW1pdG1lbnQgdG8gc2FmZXR5IGFuZCBxdWFsaXR5LiBJbiBwYXJ0LCB0aGF0IG1lYW5zIHJlZm9jdXNpbmcgb24gcHV0dGluZyBjdXN0b21lcnMgYW5kIHBlb3BsZSBmaXJzdCwgYnkgbGlzdGVuaW5nIGJldHRlciBhbmQgdGFraW5nIGFwcHJvcHJpYXRlIGFjdGlvbi7igJ0gU29tZSBvZiB0aGUgNi4zOSBtaWxsaW9uIHZlaGljbGVzIFRveW90YSByZWNhbGxlZCBXZWRuZXNkYXkgYXJlIGJlaW5nIGNhbGxlZCBiYWNrIGZvciBtb3JlIHRoYW4gb25lIGZhdWx0LCBwdXNoaW5nIHRoZSB0YWxseSB0byA2Ljc2IG1pbGxpb24uIFNvbWUgb2YgVG95b3Rh4oCZcyB0b3Agc2VsbGVycyDigJQgc3VjaCBhcyBpdHMgQ2FtcnkgYW5kIENvcm9sbGEgc2VkYW5zIGFuZCBSQVY0IHNwb3J0IHV0aWxpdHkgdmVoaWNsZXMg4oCUIHdlcmUgaW5jbHVkZWQgaW4gdGhlIHJlY2FsbHMuICAgICAgICAgICAgICAgICAgICAgICAgICBVLlMuIFJlY2FsbCBTdXJnZSBUb3RhbCByZWNhbGxzIGluIHRoZSBVLlMuIHRoaXMgeWVhciB0aHJvdWdoIFdlZG5lc2RheSwgaGF2ZSBhbHJlYWR5IGV4Y2VlZGVkIDEyIG1pbGxpb24gdmVoaWNsZXMg4oCUIG1vcmUgdGhhbiBoYWxmIG9mIGxhc3QgeWVhcuKAmXMgMjIgbWlsbGlvbiwgYWNjb3JkaW5nIHRvIHRoZSBVLlMuIE5hdGlvbmFsIEhpZ2h3YXkgVHJhZmZpYyBTYWZldHkgQWRtaW5pc3RyYXRpb24gZGF0YS4gVG95b3RhIHN1cnBhc3NlZCAxIG1pbGxpb24gcmVjYWxsZWQgbW9kZWxzIGluIHRoZSBVLlMuIHRoaXMgeWVhciBldmVuIGJlZm9yZSBXZWRuZXNkYXnigJlzIGFubm91bmNlbWVudCwgYXMgaGFkIE5pc3NhbiBNb3RvciBDby4gSG9uZGEgTW90b3IgQ28uIGlzIGF0IGFib3V0IDkwMCwwMDAsIGFuZCBDaHJ5c2xlciBHcm91cCBMTEMsIGFmdGVyIGFuIEFwcmlsIDIgcmVjYWxsIG9mIHNwb3J0LXV0aWxpdHkgdmVoaWNsZXMsIGlzIGFib3V0IDczOCwwMDAsIGFjY29yZGluZyB0byB0aGUgZGF0YS4gVGhlIGxhdGVzdCBUb3lvdGEgcmVjYWxsIGluY2x1ZGVzIDIuMyBtaWxsaW9uIGluIE5vcnRoIEFtZXJpY2EsIDEuNzcgbWlsbGlvbiBvZiB3aGljaCB3ZXJlIGluIHRoZSBVLlMuLCBhY2NvcmRpbmcgdG8gY29tcGFueSBzdGF0ZW1lbnRzLiBMYXN0IHllYXLigJlzIFUuUy4gdGFsbHkgd2FzIHRoZSBtb3N0IHNpbmNlIDIwMDQsIHdoZW4gMzAuOCBtaWxsaW9uIHZlaGljbGVzIHdlcmUgcmVjYWxsZWQsIGFjY29yZGluZyB0byBOSFRTQS4gSW4gdGhhdCB5ZWFyLCBHTSByZWNhbGxlZCAxMC43IG1pbGxpb24gdmVoaWNsZXMsIGluY2x1ZGluZyAzLjY2IG1pbGxpb24gcGlja3VwcyBmb3IgZmF1bHR5IHRhaWxnYXRlIHN1cHBvcnQgY2FibGVzLCBhY2NvcmRpbmcgdG8gdGhlIENlbnRlciBmb3IgQXV0byBTYWZldHkuIFRoaXMgeWVhciwgR00gaGFzIGFscmVhZHkgcmVjYWxsZWQgbW9yZSB2ZWhpY2xlcywgNi4wNyBtaWxsaW9uLCB0aGFuIGFueSBvdGhlciBhdXRvbWFrZXIgZGlkIGluIHRoZSBVLlMuIGluIGFsbCBvZiAyMDEzIG9yIDIwMTIuIFRveW90YSByZWNhbGxlZCB0aGUgbW9zdCBVLlMuIHZlaGljbGVzIGluIGVhY2ggb2YgdGhlIGxhc3QgdHdvIHllYXJzIC0tIDUuMjkgbWlsbGlvbiBpbiAyMDEzIGFuZCA1LjMzIG1pbGxpb24gaW4gMjAxMi4gICAgICAgICAgICAgICAgICAgICAgSGVpZ2h0ZW5lZCBTZW5zaXRpdml0eSDigJxJdOKAmXMgYWx3YXlzIGJldHRlciB0byBlcnIgb24gdGhlIHNpZGUgb2YgY2F1dGlvbizigJ0gSmVzc2ljYSBDYWxkd2VsbCwgYW4gYW5hbHlzdCB3aXRoIGNhci1zaG9wcGluZyBzaXRlIEVkbXVuZHMuY29tLCBzYWlkIGluIGFuIGUtbWFpbGVkIHN0YXRlbWVudC4g4oCcR2l2ZW4gdGhlIHNlbnNpdGl2aXR5IGFyb3VuZCBhdXRvIHNhZmV0eSBpbiB0aGUgbGFzdCBmaXZlIHllYXJzLCBpdCBzaG91bGQgYmUgbm8gc3VycHJpc2UgdGhhdCB3ZSBzZWUgYXMgbWFueSByZWNhbGxzIGFzIHdlIGRvIHRvZGF5LuKAnSBBcyBsYXJnZSBhcyBpdCB3YXMsIFdlZG5lc2RheeKAmXMgcmVjYWxsIHdhc27igJl0IHRoZSBiaWdnZXN0IGZvciBUb3lvdGEgbm9yIHRoZSBpbmR1c3RyeS4gVGhlIGNhcm1ha2VyIGNhbGxlZCBiYWNrIDcuNDMgbWlsbGlvbiB2ZWhpY2xlcyBpbiBPY3RvYmVyIDIwMTIgdG8gZml4IHBvd2VyLXdpbmRvdyBzd2l0Y2hlcy4gRm9yZCBNb3RvciBDby4gY2FsbGVkIGJhY2sgbW9yZSB0aGFuIDE0IG1pbGxpb24gdmVoaWNsZXMgaW4gMjAwOSBmb3IgYSBmYXVsdHkgY3J1aXNlLWNvbnRyb2wgc3dpdGNoIHRoYXQgY291bGQgY2F1c2UgYSBmaXJlLCBhY2NvcmRpbmcgdG8gdGhlIFUuUy4gVHJhbnNwb3J0YXRpb24gRGVwYXJ0bWVudOKAmXMgd2Vic2l0ZS4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA3IFllYXJzIENhcm1ha2VycyBvZnRlbiB0YWtlIHllYXJzIHRvIHJlY2FsbCB2ZWhpY2xlcy4gVG95b3RhIHNhaWQgaXQgZmlyc3QgaWRlbnRpZmllZCBvbmUgb2YgdGhlIGZpdmUgcHJvYmxlbXMgaW4gV2VkbmVzZGF54oCZcyByZWNhbGwgYmFjayBpbiAyMDA3LiBUaGUgb25lIHRoYXQgY2FtZSB0byBsaWdodCBtb3N0IHJlY2VudGx5IGVtZXJnZWQgbGFzdCB5ZWFyLCBpdCBzYWlkLiBUb3lvdGEgbGFzdCBtb250aCBhZG1pdHRlZCB3cm9uZ2RvaW5nIGFuZCBhZ3JlZWQgdG8gYW4gaW5kZXBlbmRlbnQgbW9uaXRvciB3aG8gd2lsbCBhc3Nlc3MgaXRzIHNhZmV0eSByZXBvcnRpbmcgcHJhY3RpY2VzIGFzIHBhcnQgb2YgYSAkMS4yIGJpbGxpb24gc2V0dGxlbWVudCByZWxhdGVkIHRvIGl0cyBoYW5kbGluZyBvZiB0aGUgdW5pbnRlbmRlZC1hY2NlbGVyYXRpb24gcHJvYmxlbXMuIEF0dG9ybmV5IEdlbmVyYWwgRXJpYyBIb2xkZXIgc2FpZCBpdCB3YXMgdGhlIGxhcmdlc3QgY3JpbWluYWwgcGVuYWx0eSBldmVyIGltcG9zZWQgaW4gdGhlIFUuUy4gb24gYW4gYXV0b21ha2VyLiBGb3IgQWtpbyBUb3lvZGEsIHByZXNpZGVudCBvZiB0aGUgY29tcGFueSBhbmQgZ3JhbmRzb24gb2YgaXRzIGZvdW5kZXIsIHBlcnNpc3RlbnQgcmVjYWxscyBhcmUgYSBzZXRiYWNrIHRvIGhpcyBlZmZvcnRzIHRvIHJlc3RvcmUgdGhlIGNvbXBhbnnigJlzIG9uY2Utc3RlcmxpbmcgcmVwdXRhdGlvbiBmb3IgcXVhbGl0eS4gSGXigJlzIHBsZWRnZWQgdG8gaW1wcm92ZSBhbmQgc3BlZWQgdXAgdGhlIGNvbXBhbnnigJlzIHByb2Nlc3NlcywgZm9ybWluZyBhIGdsb2JhbCBxdWFsaXR5IGdyb3VwIHRoYXQgaGUgY2hhaXJzLiBUaGUgYXV0b21ha2VyIHNhaWQgcHJldmlvdXMgZGVjaXNpb24tbWFraW5nIHJlbGF0ZWQgdG8gc2FmZXR5IHdhcyB0b28gZGVwZW5kZW50IG9uIGV4ZWN1dGl2ZXMgaW4gSmFwYW4gYW5kIHRoYXQgaXQgaGFzIGdpdmVuIHJlZ2lvbmFsIG9wZXJhdGlvbnMgbW9yZSBhdXRvbm9teSB0byBtYWtlIGZpeGVzLiAgICAgICAgICAgICAgICAgICAgICAgICAgQmFycmEgR3JpbGxpbmcgTGF3bWFrZXJzIGxhc3Qgd2VlayBicm91Z2h0IHVwIFRveW90YeKAmXMgc2hvcnRjb21pbmdzIGR1cmluZyBpdHMgdW5pbnRlbmRlZC1hY2NlbGVyYXRpb24gY3Jpc2lzIGFzIHRoZXkgcHJlc3NlZCBHTSBDaGllZiBFeGVjdXRpdmUgT2ZmaWNlciBNYXJ5IEJhcnJhIG9uIHRoZSBjb21wYW554oCZcyBoYW5kbGluZyBvZiBmbGF3ZWQgaWduaXRpb24gc3dpdGNoZXMuIFRoZSBsYXJnZXN0IFUuUy4gYXV0b21ha2VyIGlzIGJlaW5nIGZpbmVkICQ3LDAwMCBhIGRheSBmb3IgZmFpbGluZyB0byBmdWxseSBhbnN3ZXIgTkhUU0HigJlzIHF1ZXN0aW9ucyBhYm91dCB0aGUgZmxhd2VkIHBhcnQgaW4gY2FycyBpbmNsdWRpbmcgdGhlIENoZXZyb2xldCBDb2JhbHQuIFRveW90YSBhbmQgR00gYXJlbuKAmXQgYWxvbmUgaW4gZmFjaW5nIGNoYWxsZW5nZXMgd2l0aCBjYXJzIGluIG5lZWQgb2YgZml4ZXMuIEEgc3VyZ2UgaW4gbmV3IG1vZGVscywgaW5jcmVhc2luZ2x5IGNvbXBsZXggdGVjaG5vbG9neSBhbmQgaGVpZ2h0ZW5lZCByZWd1bGF0b3J5IHNjcnV0aW55IGFyZSBiZWhpbmQgdGhlIGluY3JlYXNlLCBhY2NvcmRpbmcgdG8gYSBzdHVkeSByZWxlYXNlZCBsYXN0IG1vbnRoIGJ5IGZpbmFuY2lhbCBhZHZpc29yeSBmaXJtIFN0b3V0IFJpc2l1cyBSb3NzIEluYy4gICAgICAgICAgICAgICAgICAgICAgICAgIFJlY2FsbHMgQWJvdW5kIEF1dG9tYWtlcnPigJkgaXNzdWVzIGV4dGVuZCBiZXlvbmQgdGhlIFUuUy4gbWFya2V0LiBJbiBKYXBhbiwgYXV0byByZWNhbGxzIHJlYWNoZWQgYSByZWNvcmQgb2YgYWxtb3N0IDggbWlsbGlvbiB2ZWhpY2xlcyBpbiB0aGUgZmlzY2FsIHllYXIgdGhhdCBlbmRlZCBNYXJjaCwgdGhlIG5hdGlvbuKAmXMgVHJhbnNwb3J0IE1pbmlzdHJ5IHNhaWQgV2VkbmVzZGF5IGluIGEgc3RhdGVtZW50LiBUaGV5IGNsaW1iZWQgdG8gYSByZWNvcmQgaW4gQ2hpbmEgYWZ0ZXIgdGhlIGNvdW50cnkgaW50cm9kdWNlZCByZWNhbGwgbGF3cy4gVGhlIGluY3JlYXNpbmcgdXNlIG9mIHN0YW5kYXJkaXplZCBwYXJ0cyBhY3Jvc3MgdmVoaWNsZSBsaW5ldXBzIGFsc28gcmFpc2VzIHRoZSByaXNrIG9mIGxhcmdlciByZWNhbGxzLiBDYXJtYWtlcnMgaW5jbHVkaW5nIFRveW90YSBhbHNvIGFyZSBwcmVzc2luZyBzdXBwbGllcnMgdG8gbWFrZSBjb21tb24gY29tcG9uZW50cyB0aGF0IHRoZXkgY2FuIHB1dCBpbnRvIHZhcmlvdXMgbW9kZWxzLiBEZW5zbyBDb3JwLiwgSmFwYW7igJlzIGxhcmdlc3QgcGFydHMgbWFrZXIsIGZvciBleGFtcGxlLCBoYXMgZGV2ZWxvcGVkIGFpci1jb25kaXRpb25lciB1bml0cyB0aGF0IGl0IHNheXMgZ28gaW50byBjb21wYWN0cyBhbmQgbHV4dXJ5IGNhcnMuIFZvbGtzd2FnZW4gQUcsIEV1cm9wZeKAmXMgYmlnZ2VzdCBhdXRvbWFrZXIsIHVzZXMgc3RhbmRhcmRpemVkIGNvbXBvbmVudHMgc3VjaCBhcyBlbGVjdHJvbmljIHN5c3RlbXMgYW5kIGF4bGVzIGFzIHBhcnQgb2YgaXRzIHBsYW4gdG8gYmFzZSBBdWRpLCBTa29kYSBhbmQgU2VhdCB2ZWhpY2xlcyBvbiBhIGNvbW1vbiBwbGF0Zm9ybSBpdCBjYWxscyBNUUIuICAgICAgICAgICAgICAgICAgICAgICAgICAgU3BpcmFsIENhYmxlcyDigJxUaGUgc2NhbGUgb2Ygb25lIGNvbXBvbmVudCBoYXMgYmVjb21lIG11Y2ggbGFyZ2VyLCBhbmQgdGhhdCBtZWFucyBvbmUgaW5jaWRlbnQgY291bGQgcmVzdWx0IGluIGh1Z2UgaW1wYWN0LOKAnSBNYXNhaGlybyBBa2l0YSwgYW4gYW5hbHlzdCB3aXRoIENyZWRpdCBTdWlzc2UgR3JvdXAgQUcgaW4gVG9reW8sIHNhaWQgYnkgdGVsZXBob25lLiDigJxUaGVyZSBpcyBzb21lIGNvbmZsaWN0IGJlY2F1c2UgdGhlIG1vcmUgc2NhbGUgeW91IGhhdmUsIHRoZSBtb3JlIGRpZmZpY3VsdCBpdCBpcyB0byBjb250cm9sIHRoZSBxdWFsaXR5LuKAnSBJbiBXZWRuZXNkYXnigJlzIFRveW90YSByZWNhbGwsIGFib3V0IDMuNSBtaWxsaW9uIG9mIHRoZSB2ZWhpY2xlcyDigJQgbW9yZSB0aGFuIGhhbGYgaW4gTm9ydGggQW1lcmljYSDigJQgd2VyZSBjYWxsZWQgYmFjayB0byByZXBsYWNlIHNwaXJhbCBjYWJsZXMgdGhhdCBtYXkgcHJldmVudCBkcml2ZXLigJlzLXNpZGUgYWlyYmFncyBmcm9tIGRlcGxveWluZy4gTW9kZWxzIGludm9sdmVkIGluY2x1ZGUgUkFWNCwgQ29yb2xsYSwgWWFyaXMsIEhpZ2hsYW5kZXIsIFRhY29tYSBhbmQgQ2FtcnkgdGhhdCB3ZXJlIHByb2R1Y2VkIGZyb20gQXByaWwgMjAwNCB0byBEZWNlbWJlciAyMDEwLiBUb3lvdGEgaXMgYWxzbyByZWNhbGxpbmcgMi4zMiBtaWxsaW9uIHZlaGljbGVzIHRvIGluc3BlY3QgYW5kLCBpZiBuZWVkZWQsIHJlcGxhY2UgdGhlIGZyb250IHNlYXQgcmFpbHMgb24gdGhyZWUtZG9vciBtb2RlbHMuIFRveW90YSB3aWxsIGFsc28gZml4IG5vaXN5IGFuZCBwb3RlbnRpYWxseSB1bnN0YWJsZSBzdGVlcmluZyBjb2x1bW4gYnJhY2tldHMsIHJlcGxhY2Ugd2luZHNoaWVsZCB3aXBlciBtb3RvcnMgYW5kIGVuZ2luZSBzdGFydGVycy4gICAgICAgICAgICAgICAgICAgICAgICBNYXJrZXQgQ2hlZXJsZWFkZXJzIFRha2FraSBOYWthbmlzaGksIGEgVG9reW8tYmFzZWQgYW5hbHlzdCBmb3IgSmVmZmVyaWVzIEdyb3VwIExMQywgbGF1ZGVkIFRveW90YSBmb3IgZ2V0dGluZyBhaGVhZCBvZiBhIHByb2JsZW0uIOKAnFRoaXMgaXMgVG95b3RhIGJlaW5nIG1vcmUgYWN0aXZlIGluIGNhbGxpbmcgYmFjayB2ZWhpY2xlcyB0byBlbnN1cmUgcXVhbGl0eSzigJ0gc2FpZCBOYWthbmlzaGksIHdobyBoYXMgYSBob2xkIHJhdGluZyBvbiB0aGUgY29tcGFueeKAmXMgc2hhcmVzLiDigJxUaGUgbnVtYmVyIGlzIGJpZywgYnV0IHRoZSBmYXVsdHMgYXJlIG1pbm9yIGFuZCBub3QgY3JpdGljYWwu4oCdIFRveW9kYSwgNTcsIGhhcyBpbnN0aXR1dGVkIGEgdGhyZWUteWVhciBmcmVlemUgb24gbmV3IGNhciBwbGFudHMgdG8gdGlsdCB0aGUgY29tcGFueeKAmXMgcHJpb3JpdGllcyB0byBxdWFsaXR5IGFuZCBlZmZpY2llbmN5IGFmdGVyIHRoZSAyMDA5LTIwMTAgcmVjYWxscy4gU3RpbGwsIFdlZG5lc2RheeKAmXMgcmVjYWxsIHdhcyB0aGUgc2Vjb25kIG1ham9yIHNhZmV0eS0gcmVsYXRlZCBjYW1wYWlnbiBieSBUb3lvdGEgdGhpcyB5ZWFyLiBBIHJlY2FsbCBvZiAxLjkgbWlsbGlvbiBQcml1cyBoeWJyaWRzIGluIEZlYnJ1YXJ5IGNvdmVyZWQgbW9yZSB0aGFuIGhhbGYgb2YgdGhlIG1vZGVscyBzb2xkIHNpbmNlIGl0IGRlYnV0ZWQgMTcgeWVhcnMgYWdvLiBUaGUgY29tcGFueSBzYWlkIGl0IHdvdWxkIHVwZGF0ZSBzb2Z0d2FyZSB0byBmaXggZ2xpdGNoZXMgdGhhdCBjb3VsZCBjYXVzZSB0aGUgY2FycyB0byBsb3NlIHBvd2VyIG9yIHNodXQgZG93biBhbmQgc3RvcC4gICAgICAgICAgICAgICAgICAgICAgICAgIEVhcm5pbmdzIENsaW1iIFJlY2FsbHMgaGF2ZSBkb25lIGxpdHRsZSBkYW1hZ2UgdG8gVG95b3Rh4oCZcyBlYXJuaW5ncy4gVGhlIGNvbXBhbnkgaGFzIGZvcmVjYXN0IHRoYXQgcHJvZml0IGZvciB0aGUgeWVhciBlbmRpbmcgTWFyY2ggMzEgd2lsbCBzdXJnZSB0byBhIHJlY29yZCAxLjkgdHJpbGxpb24geWVuICgkMTguNiBiaWxsaW9uKS4gVG95b3RhIGFsc28gaGFzIHNldCBhIHRhcmdldCBvZiBzZWxsaW5nIGFuIHVucHJlY2VkZW50ZWQgMTAuMzIgbWlsbGlvbiB2ZWhpY2xlcyBpbiAyMDE0IGFmdGVyIGxlYWRpbmcgR00gYW5kIFZvbGtzd2FnZW4gQUcgaW4gZ2xvYmFsIGF1dG8gZGVsaXZlcmllcyBmb3IgYSBzZWNvbmQgc3RyYWlnaHQgeWVhciBpbiAyMDEzLiDigJxUaGUgY2FybWFrZXJzIGhhdmUgc2V0IHRoZSBiYXIgbXVjaCBsb3dlciB0byBhbm5vdW5jZSByZWNhbGxzLOKAnSBDcmVkaXQgU3Vpc3Nl4oCZcyBBa2l0YSBzYWlkLiDigJxSYXRoZXIgdGhhbiBoaWRpbmcgaXQgYW5kIGNyZWF0aW5nIHByb2JsZW1zIGxhdGVyIG9uLCBpdOKAmXMgbXVjaCBiZXR0ZXIgdG8gYW5ub3VuY2UgYXQgZWFybGllciBzdGFnZSBhbmQgZGVhbCB3aXRoIGl0IHByb3Blcmx5LiBDb21wYXJlZCB0byAyMCB0byAzMCB5ZWFycyBhZ28sIHRoZXkgYXJlIGdldHRpbmcgbW9yZSBhbmQgbW9yZSBzZXJpb3VzLuKAnQ==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUVE22SAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDRjMzRjNTI5ODQ0M2VlMzI=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0NBUg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUVKAcCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJi4UeuFHs</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJjMzMzMzN</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBIWFHrhR64</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBIkeuFHrhS</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBIkeuFHrhS</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAABU/EA==</field><field name="id" class="java.lang.String">rO0ABXQAEGJhNjMyOGMwODRlYjc1MGU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mF5fAAAQ==</field></document></documents><date>2015-05-07T12:23:00-0500</date></cacheEntry>
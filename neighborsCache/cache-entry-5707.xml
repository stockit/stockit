<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hUaGUgIGRlcmFpbG1lbnRzIHJlbGVhc2VkIGFsbW9zdCAzIG1pbGxpb24gZ2FsbG9ucyBvZiBvaWwgbmVhcmx5IHR3aWNlIGFzICBtdWNoIGFzIHRoZSBsYXJnZXN0IHBpcGVsaW5lIHNwaWxsIGluIHRoZSBVUyBzaW5jZSBhdCBsZWFzdCAxOTg2IEFuZCAgdGhlIGRlYWRsaWVzdCB3cmVjayBraWxsZWQgNDcgcGVvcGxlIGluIHRoZSB0b3duIG9mIExhY01lZ2FudGljICBRdWViZWMgVGhvc2UgZmluZGluZ3MgZnJvbSAgYW4gQXNzb2NpYXRlZCBQcmVzcyByZXZpZXcgb2YgVVMgYW5kIENhbmFkaWFuIGFjY2lkZW50IHJlY29yZHMgIHVuZGVyc2NvcmUgYSBsZXNzZXJrbm93biBkYW5nZXIgb2YgQW1lcmljYXMgb2lsIGJvb20gd2hpY2ggaXMgIGNoYW5naW5nIHRoZSBnbG9iYWwgZW5lcmd5IGJhbGFuY2UgYW5kIHJhaXNpbmcgdXJnZW50IHNhZmV0eSBxdWVzdGlvbnMgIGNsb3NlciB0byBob21lIEV4cGVydHMgc2F5ICByZWNlbnQgZWZmb3J0cyB0byBpbXByb3ZlIHRoZSBzYWZldHkgb2Ygb2lsIHNoaXBtZW50cyBiZWxpZSBhbiAgdW5zZXR0bGluZyBmYWN0IFdpdGggaW5jcmVhc2luZyB2b2x1bWVzIG9mIGNydWRlIG5vdyBtb3ZpbmcgYnkgcmFpbCAgaXRzIGJlY29tZSBpbXBvc3NpYmxlIHRvIHNlbmQgb2lsaGF1bGluZyB0cmFpbnMgdG8gcmVmaW5lcmllcyB3aXRob3V0ICBwYXNzaW5nIG1ham9yIHBvcHVsYXRpb24gY2VudGVycyB3aGVyZSBtb3JlIGxpdmVzIGFuZCBwcm9wZXJ0eSBhcmUgYXQgIHJpc2sgQWRkaW5nIHRvIHRoZSBkYW5nZXIgaXMgIHRoZSBoaWdoIHZvbGF0aWxpdHkgb2YgdGhlIGxpZ2h0IHN3ZWV0IGNydWRlIGZyb20gdGhlIGZhc3Rncm93aW5nICBCYWtrZW4gb2lsIHBhdGNoIGluIE1vbnRhbmEgYW5kIE5vcnRoIERha290YSB3aGVyZSBtYW55IG9mIHRoZSB0cmFpbnMgIG9yaWdpbmF0ZSBCZWNhdXNlIGl0IGNvbnRhaW5zIG1vcmUgbmF0dXJhbCBnYXMgdGhhbiBoZWF2aWVyIGNydWRlICBCYWtrZW4gb2lsIGNhbiBoYXZlIGEgbG93ZXIgaWduaXRpb24gcG9pbnQgT2YgdGhlIHNpeCBvaWwgdHJhaW5zIHRoYXQgIGRlcmFpbGVkIGFuZCBjYXVnaHQgZmlyZSBzaW5jZSAyMDA4IGZvdXIgY2FtZSBmcm9tIHRoZSBCYWtrZW4gYW5kIGVhY2ggIGNhdXNlZCBhdCBsZWFzdCBvbmUgZXhwbG9zaW9uIFRoYXQgaW5jbHVkZXMgdGhlIGFjY2lkZW50IGF0ICBMYWNNZWdhbnRpYyB3aGljaCBzcGlsbGVkIGFuIGVzdGltYXRlZCAxNiBtaWxsaW9uIGdhbGxvbnMgYW5kIHNldCBvZmYgIGEgYmxhc3QgdGhhdCBsZXZlbGxlZCBhIGxhcmdlIHNlY3Rpb24gb2YgdGhlIHRvd24gQWZ0ZXIgIHJlY2VudCBmaWVyeSBkZXJhaWxtZW50cyBpbiBRdWViZWMgQWxhYmFtYSBOb3J0aCBEYWtvdGEgYW5kIE5ldyAgQnJ1bnN3aWNrIGNvbXBhbmllcyBhbmQgcmVndWxhdG9ycyBpbiB0aGUgVVMgYW5kIENhbmFkYSBhcmUgcHVyc3VpbmcgIGFuIGFycmF5IG9mIHBvdGVudGlhbCBjaGFuZ2VzIHN1Y2ggYXMgc2xvd2luZyBvciByZXJvdXRpbmcgdHJhaW5zICB1cGdyYWRpbmcgcnVwdHVyZXByb25lIHRhbmsgY2FycyBhbmQgYm9sc3RlcmluZyBmaXJlIGRlcGFydG1lbnRzICBDb21wYW55IGV4ZWN1dGl2ZXMgd2VyZSBleHBlY3RlZCB0byBvZmZlciBhIHNldCBvZiB2b2x1bnRhcnkgc2FmZXR5ICBtZWFzdXJlcyBpbiB0aGUgY29taW5nIGRheXMgYXQgdGhlIHJlcXVlc3Qgb2YgVVMgVHJhbnNwb3J0YXRpb24gIFNlY3JldGFyeSBBbnRob255IEZveHggSW0gYWJzb2x1dGVseSBwb3NpdGl2ZSB0aGUgcmFpbHdheSAgaW5kdXN0cnkgd2lsbCBjb21lIHVwIHdpdGggdGVjaG5pcXVlcyB0byBkZWZpbmUgaG93IHRvIG1pbmltaXplIHJpc2sgIHNhaWQgQWxsYW4gWmFyZW1ic2tpIHdobyBsZWFkcyB0aGUgcmFpbHNhZmV0eSBwcm9ncmFtIGF0IHRoZSBVbml2ZXJzaXR5ICBvZiBEZWxhd2FyZSBUaGUga2V5IHdvcmQgaXMgbWluaW1pemUgWW91IGNhbnQgZWxpbWluYXRlIHJpc2sgU2luY2UgIDIwMDggdGhlIG51bWJlciBvZiB0YW5rZXIgY2FycyBoYXVsaW5nIG9pbCBoYXMgaW5jcmVhc2VkIDQwZm9sZCBhbmQgIGZlZGVyYWwgcmVjb3JkcyBzaG93IHRoYXRzIGJlZW4gYWNjb21wYW5pZWQgYnkgYSBkcmFtYXRpYyBzcGlrZSBpbiAgYWNjaWRlbnRhbCBjcnVkZSByZWxlYXNlcyBmcm9tIHRhbmsgY2FycyBPdmVyIHRoZSBuZXh0IGRlY2FkZSAgcmFpbGJhc2VkIG9pbCBzaGlwbWVudHMgYXJlIGZvcmVjYXN0IHRvIGluY3JlYXNlIGZyb20gMSBtaWxsaW9uIGJhcnJlbHMgIGEgZGF5IHRvIG1vcmUgdGhhbiA0NSBtaWxsaW9uIGJhcnJlbHMgYSBkYXkgYWNjb3JkaW5nIHRvICB0cmFuc3BvcnRhdGlvbiBvZmZpY2lhbHMgQnkgcmFpbCBpdHMgcm91Z2hseSAyMDAwIG1pbGVzIGZyb20gIHRoZSBoZWFydCBvZiB0aGUgb2lsIGJvb20gb24gdGhlIE5vcnRoZXJuIFBsYWlucyB0byBzb21lIG9mIHRoZSBFYXN0ICBDb2FzdCByZWZpbmVyaWVzIHRoYXQgdHVybiB0aGUgY3J1ZGUgaW50byBnYXNvbGluZSBUcmFpbnMgcHVsbGluZyAgc2V2ZXJhbCBtaWxsaW9uIGdhbGxvbnMgYXBpZWNlIG11c3QgcGFzcyB0aHJvdWdoIG1ldHJvcG9saXRhbiBhcmVhcyB0aGF0ICBpbmNsdWRlIE1pbm5lYXBvbGlzIENoaWNhZ28gQ2xldmVsYW5kIGFuZCBCdWZmYWxvIFNvbWUgY2l0aWVzICBzdWNoIGFzIENoaWNhZ28gaGF2ZSBiZWx0IHJhaWxyb2FkcyB0aGF0IGRpdmVydCBmcmVpZ2h0IHRyYWZmaWMgZnJvbSAgdGhlIG1ldHJvcG9saXRhbiBjb3JlIEJ1dCBlbHNld2hlcmUgcmFpbHJvYWQgcmVwcmVzZW50YXRpdmVzIHNhaWQgdGhlICBiZXN0bWFpbnRhaW5lZCBhbmQgc2FmZXN0IHRyYWNrIG9mdGVuIHJ1bnMgZGlyZWN0bHkgdGhyb3VnaCAgY29tbXVuaXRpZXMgdGhhdCB3ZXJlIGJ1aWx0IGFyb3VuZCB0aGUgcmFpbHJvYWQgVHJhaW5zIHNvbWV0aW1lcyAgaGF2ZSBubyBvcHRpb24gYnV0IHRvIHJvbGwgZGVlcCBpbnRvIHBvcHVsYXRlZCBhcmVhcyBUaGF0cyB0aGUgY2FzZSAgaW4gUGhpbGFkZWxwaGlhIE5ldyBPcmxlYW5zIEFsYmFueSBOWSBhbmQgVGFjb21hIFdhc2ggRXhwZXJ0cyAgc2F5IHRoZSBleHBsb3NpdmUgbmF0dXJlIG9mIEJha2tlbiBvaWwgZGVyYWlsbWVudHMgY2F1Z2h0IGV2ZXJ5b25lIG9mZiAgZ3VhcmQgIGZyb20gcmVndWxhdG9ycyB0byB0aGUgcmFpbHJvYWRzIHRoZW1zZWx2ZXMgSSBkb250ICB0aGluayBwZW9wbGUgdW5kZXJzdG9vZCB0aGUgcG90ZW50aWFsIGZvciBhIHByb2JsZW0gaWYgdGhlcmUgd2VyZSBhICBkZXJhaWxtZW50IHNhaWQgSmFzb24gS3VlaG4gYSBmb3JtZXIgcmFpbHJvYWQgZXhlY3V0aXZlIGFuZCBub3cgdmljZSAgcHJlc2lkZW50IGZvciB0aGUgaW5kdXN0cnkgY29uc3VsdGluZyBmaXJtIE9saXZlciBXeW1hbiBBIG1ham9yICBhY2NpZGVudCB3YXMgbmFycm93bHkgYXZvaWRlZCBsYXN0IG1vbnRoIGluIFBoaWxhZGVscGhpYSB3aGVyZSBzaXggIHRhbmtlciBjYXJzIGNhcnJ5aW5nIG9pbCBkZXJhaWxlZCBuZWFyIHRoZSBoZWFydCBvZiB0aGUgY2l0eSBvbiBhIGJyaWRnZSAgb3ZlciB0aGUgU2NodXlsa2lsbCBSaXZlciBUaGUgQ1NYIGZyZWlnaHQgdHJhaW4gaGFkIHBpY2tlZCB1cCBOb3J0aCAgRGFrb3RhIG9pbCBpbiBDaGljYWdvIGFuZCB3YXMgaGVhZGVkIGZvciBhIHJlZmluZXJ5IGluIFNvdXRoICBQaGlsYWRlbHBoaWEgTm90aGluZyB3YXMgc3BpbGxlZCBidXQgdGhlIGFjY2lkZW50IHJhdHRsZWQgbmVydmVzIFNhbmR5IEZvbHplciBhIHJldGlyZWQgcHJvZmVzc29yIGluIFBoaWxhZGVscGhpYSBzYWlkIHNoZSB3b3JyaWVzIGFib3V0IG9pbCBjYXJzIHRyYXZlbGxpbmcgYWxvbmdzaWRlIGNvbW11dGVyIHJhaWxzIER1cmluZyAgcnVzaCBob3VyIEkgaW1hZ2luZSB0aGVyZSBhcmUgYSBjb3VwbGUgaHVuZHJlZCBwZW9wbGUgb24gZWFjaCB0cmFpbiAgRm9semVyIHNhaWQgVGhhdCBzY2FyZXMgbWUgdGhhdCB0aGVyZXMgZXhwbG9zaXZlIG1hdGVyaWFsIHNvIGNsb3NlICB0byB3aGVyZSBjb21tdXRlcnMgYXJlIFByb3Bvc2FscyB0byByb3V0ZSB0cmFpbnMgYXdheSBmcm9tICBwb3B1bGF0aW9uIGNlbnRlcnMgYXJlIG1vZGVsZWQgb24gcnVsZXMgYWRvcHRlZCBhZnRlciB0aGUgMjAwMSB0ZXJyb3Jpc3QgIGF0dGFja3MgdG8gcmVzdHJpY3QgY2FyZ29lcyBldmVuIG1vcmUgaGF6YXJkb3VzIHRoYW4gb2lsICBleHBsb3NpdmVzICByYWRpb2FjdGl2ZSBtYXRlcmlhbCBhbmQgcG9pc29ub3VzIGdhc2VzIFdoZW4gIHRoZSBydWxlcyB3ZXJlIGJlaW5nIHdyaXR0ZW4gQ2FsaWZvcm5pYSByZWd1bGF0b3JzIHB1c2hlZCB0aGVpciAgZmVkZXJhbCBjb3VudGVycGFydHMgdG8gaW5jbHVkZSBvaWwgQnV0IFRyYW5zcG9ydGF0aW9uIERlcGFydG1lbnQgIG9mZmljaWFscyBzYWlkIHRoZXkgd2VyZSBub3QgcGVyc3VhZGVkIEZlZGVyYWwgIHNhZmV0eSBvZmZpY2lhbHMgc2F5IGl0cyB0aW1lIHRvIHJldmVyc2UgdGhhdCBkZWNpc2lvbiBnaXZlbiB0aGUgaHVnZSAgZ3Jvd3RoIGluIHRhbmsgY2FycyBjYXJyeWluZyBjcnVkZSBhbmQgZXRoYW5vbCBhbm90aGVyIGZsYW1tYWJsZSAgbGlxdWlkIGludm9sdmVkIGluIHJlY2VudCBkZXJhaWxtZW50cyBhbmQgZXhwbG9zaW9ucyBUaGUgcnVsZXMgIGdhdmUgcmFpbHJvYWRzIGJyb2FkIGRpc2NyZXRpb24gYW5kIHJvdXRpbmcgZGVjaXNpb25zIGFyZSBub3QgIGF1dG9tYXRpY2FsbHkgcmV2aWV3ZWQgYnkgcmVndWxhdG9ycyBCdXQgdGhlIEZlZGVyYWwgUmFpbHJvYWQgIEFkbWluaXN0cmF0aW9uIGlzIGF1dGhvcml6ZWQgdG8gcmVqZWN0IGFueSByb3V0ZXMgZm91bmQgdG8gYmUgdG9vIHJpc2t5ICBUaGF0IGhhcyBuZXZlciBoYXBwZW5lZCBzaW5jZSB0aGUgcnVsZXMgdG9vayBlZmZlY3Qgc2FpZCBGUkEgQXNzb2NpYXRlICBBZG1pbmlzdHJhdG9yIEtldmluIFRob21wc29uIEV2ZW4gd2hlcmUgdHJhaW5zIGNhbiBiZSByZXJvdXRlZCAgdGhyb3VnaCBsZXNzcG9wdWxvdXMgYXJlYXMgY3JpdGljcyBzYXkgdGhhdCBzaW1wbHkgc3QABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0wMy0yN1QwMDowMDowMFogVE8gMjAxMy0xMi0wM1Q1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDYzODk=</field><field name="title" class="java.lang.String">rO0ABXQAOVJhaWwgQWdlbmN5IEludmVzdGlnYXRlcyBTYWZldHkgb2YgU2hpcHBpbmcgRnJhY2tlZCBDcnVkZQ==</field><field name="content" class="java.lang.String">rO0ABXQMmVRoZSBGZWRlcmFsIFJhaWxyb2FkIEFkbWluaXN0cmF0aW9uIHNhaWQgaXQgaXMgaW52ZXN0aWdhdGluZyB0aGUgc2FmZXR5IG9mIHRyYW5zcG9ydGluZyBjcnVkZSBvaWwgYnkgcmFpbCwgaW5jbHVkaW5nIHdoZXRoZXIgY2hlbWljYWxzIHVzZWQgaW4gaHlkcmF1bGljIGZyYWN0dXJpbmcgYXJlIGNvcnJvZGluZyB0YW5rIGNhcnMuIFJlZ3VsYXRvcnMgaW4gYSBKdWx5IDI5IGxldHRlciB0byB0aGUgQW1lcmljYW4gUGV0cm9sZXVtIEluc3RpdHV0ZSwgYSBXYXNoaW5ndG9uLWJhc2VkIGxvYmJ5aW5nIGFuZCBzdGFuZGFyZHMtc2V0dGluZyBncm91cCBmb3IgdGhlIG9pbCBhbmQgZ2FzIGluZHVzdHJ5LCBzYWlkIHRoZSBjaGVtaWNhbCBjb21wb3NpdGlvbiBvZiB0aGUgY3J1ZGUgaXMgc29tZXRpbWVzIG1pc2NsYXNzaWZpZWQgYXQgYSBsb3dlciBoYXphcmQgbGV2ZWwsIHZpb2xhdGluZyBleGlzdGluZyBzYWZldHkgcnVsZXMuIEluIHNvbWUgY2FzZXMsIHRoZSB0YW5rIGNhcnMgc2hpcHBpbmcgdGhlIGhhemFyZG91cyBtYXRlcmlhbCBtYXkgbm90IGJlIGVxdWlwcGVkIHdpdGgg4oCccmVxdWlyZWQgZGVzaWduIGVuaGFuY2VtZW50cyzigJ0gdGhlIEZSQSBzYWlkIGluIHRoZSBsZXR0ZXIgc2VudCB0aHJlZSB3ZWVrcyBhZnRlciBhIGRlYWRseSBleHBsb3Npb24gaW4gUXVlYmVjIG9mIGEgdHJhaW4gaGF1bGluZyBvaWwuIOKAnEZSQSByZWNvbW1lbmRzIHRoYXQgc2hpcHBlcnMgZXZhbHVhdGUgdGhlaXIgcHJvY2Vzc2VzIGZvciB0ZXN0aW5nLCBjbGFzc2lmeWluZyBhbmQgcGFja2FnaW5nIHRoZSBjcnVkZSBvaWzigJ0gdGhhdCB0aGV5IHRyYW5zcG9ydCwgYWNjb3JkaW5nIHRvIHRoZSBsZXR0ZXIuIFRoZSBhZ2VuY3kgc2FpZCBpdCBtYXkgZmluZSBjb21wYW5pZXMgdGhhdCBpdCBmaW5kcyBhcmVu4oCZdCBjb21wbHlpbmcgd2l0aCBydWxlcyBmb3IgdHJhbnNwb3J0aW5nIGhhemFyZG91cyBtYXRlcmlhbHMuIFRoZSBVLlMuIGFnZW5jeSBpcyBpbnZlc3RpZ2F0aW5nIGFmdGVyIGEgcGFya2VkIDcyLWNhciB0cmFpbiB3aXRoIGNydWRlIG9pbCBmcm9tIE5vcnRoIERha290YeKAmXMgQmFra2VuIHN0YXJ0ZWQgdG8gcm9sbCwgZGVyYWlsZWQgYW5kIGV4cGxvZGVkIGluIHRoZSB0b3duIG9mIExhYy1NZWdhbnRpYyBpbiBRdWViZWMsIGtpbGxpbmcgNDcgcGVvcGxlLiBBIHdhbGwgb2YgZmxhbWVzIDEyIHN0b3JpZXMgaGlnaCBpbmNpbmVyYXRlZCBidWlsZGluZ3MgaW4gdGhlIHRvd27igJlzIGNlbnRlci4gQ2FuYWRpYW4gcmVndWxhdG9ycyBhcmUgdGVzdGluZyB0aGUgY2hlbWljYWwgY29tcG9zaXRpb24gb2YgdGhlIGZ1ZWwgYmVpbmcgdHJhbnNwb3J0ZWQuIE9uZSBxdWVzdGlvbiBpcyB3aHkgdGhlIGRlcmFpbG1lbnQgbGVkIHRvIHN1Y2ggYW4gaW50ZW5zZSBpbmZlcm5vLCB3aGljaCByZWd1bGF0b3JzIGhhdmUgc2FpZCB3YXMg4oCcYWJub3JtYWwu4oCdIE5vcnRoIERha290YSDigJxXZSBkaWQgdGFrZSBzYW1wbGVzIGZyb20gdGhlIHRhbmsgY2FycyB0byBnZXQgYSBiZXR0ZXIgdW5kZXJzdGFuZGluZyBvZiB3aGF0IHdhcyBhY3R1YWxseSBjYXJyaWVkIGluIHRoZW0gYW5kIHZlcmlmeWluZyB0aGF0IGFnYWluc3QgdGhlIHNoaXBwaW5nIGRvY3VtZW50cyzigJ0gc2FpZCBDaHJpcyBLcmVwc2tpLCBhIHNwb2tlc21hbiBmb3IgdGhlIFRyYW5zcG9ydGF0aW9uIFNhZmV0eSBCb2FyZCBvZiBDYW5hZGEuIEludmVzdGlnYXRvcnMgd2VudCB0byBOb3J0aCBEYWtvdGEgYXMgcGFydCBvZiB0aGVpciByZXZpZXcsIGhlIHNhaWQuIFRoZSBsZXR0ZXIgdG8gQVBJLCByZXBvcnRlZCBlYXJsaWVyIHRvZGF5IGJ5IHRoZSBXYWxsIFN0cmVldCBKb3VybmFsLCBub3RlcyB0aGF0IHRoZSBudW1iZXIgb2YgY3J1ZGUgc2hpcG1lbnRzIGhhcyBpbmNyZWFzZWQgNDQzIHBlcmNlbnQgc2luY2UgMjAwNS4gTm9ydGggRGFrb3RhIGFjY291bnRzIGZvciBtdWNoIG9mIHRoZSBpbmNyZWFzZS4gQWJvdXQgNzUgcGVyY2VudCBvZiBOb3J0aCBEYWtvdGHigJlzIG9pbCBpcyBzaGlwcGVkIGJ5IHJhaWwsIHdpdGggdGhlIHJlc3Qgb3ZlciBwaXBlbGluZS4gSHlkcmF1bGljIGZyYWN0dXJpbmcgaW4gc2hhbGUgcm9jayBmb3JtYXRpb25zIGhhcyBwdXNoZWQgVS5TLiBvaWwgcHJvZHVjdGlvbiB0byB0aGUgaGlnaGVzdCBsZXZlbHMgaW4gdHdvIGRlY2FkZXMsIHdpdGggdHJhaW5zIGhhdWxpbmcgbXVjaCBvZiB0aGUgaW5jcmVhc2VkIHByb2R1Y3Rpb24uIFRhbmtlciBDb3Jyb3Npb24gSW4gZnJhY2tpbmcsIGRyaWxsZXJzIHB1bXAgY2hlbWljYWxzLCB3YXRlciBhbmQgc2FuZCBkZWVwIHVuZGVyZ3JvdW5kIHRvIGJyZWFrIGFwYXJ0IHJvY2sgc28gdGhhdCB0cmFwcGVkIG9pbCBhbmQgZ2FzIGNhbiBmbG93IHRvIHRoZSBzdXJmYWNlLiBTb21lIG9mIHRoZSBjaGVtaWNhbHMgY29tZSBiYWNrIHVwIHdpdGggdGhlIG9pbCBhbmQgY2FuIGJlIGNvcnJvc2l2ZSB0byB0aGUgdGFuayBjYXJzLCBhY2NvcmRpbmcgdG8gdGhlIEZSQS4g4oCcUHJvcGVyIGlkZW50aWZpY2F0aW9uIG9mIHRoZXNlIGVsZW1lbnRzIHdpbGwgZW5hYmxlIGEgc2hpcHBlciB0byBlbnN1cmUgdGhlIHJlbGlhYmlsaXR5IG9mIHRoZSB0YW5rIGNhcizigJ0gYWNjb3JkaW5nIHRvIHRoZSBsZXR0ZXIuIEFzIHBhcnQgb2YgaXRzIGludmVzdGlnYXRpb24sIHJlZ3VsYXRvcnMgc2FpZCB0aGV5IGFyZSBzZWVraW5nIGRhdGEgdGhhdCB3b3VsZCBzdXBwb3J0IHRoZSBzaGlwcGVyc+KAmSBjbGFzc2lmaWNhdGlvbiBvZiB0aGUgY3J1ZGUgYmVpbmcgdHJhbnNwb3J0ZWQuIExhc3Qgd2VlaywgdGhlIEZlZGVyYWwgUmFpbHJvYWQgQWRtaW5pc3RyYXRpb24gaW1wb3NlZCBlbWVyZ2VuY3kgcnVsZXMgdG8gcHJldmVudCBwYXJrZWQgdHJhaW5zIGZyb20gcm9sbGluZyBvbiB0aGVpciBvd24uIFRoZSBvcmRlciBwcm9oaWJpdHMgb3BlcmF0b3JzIGZyb20gbGVhdmluZyB0cmFpbnMgY2FycnlpbmcgaGF6YXJkb3VzIG1hdGVyaWFscyB1bmF0dGVuZGVkIHdpdGhvdXQgcHJpb3IgYXV0aG9yaXphdGlvbiBhbmQgcmVxdWlyZXMgZW1wbG95ZWVzIHRvIHRlbGwgZGlzcGF0Y2hlcnMgdGhlIG51bWJlciBvZiBoYW5kIGJyYWtlcyB1c2VkLiBDYW5hZGlhbiBpbnZlc3RpZ2F0b3JzIGhhdmUgc2FpZCB0aGF0IG5vdCBlbm91Z2ggZm9yY2Ugd2FzIGFwcGxpZWQgdG8gdGhlIGhhbmQgYnJha2VzIHRvIGtlZXAgdGhlIHRyYWluIGZyb20gbW92aW5nLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUBcS7SAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGZmM2NmZmZlNjY3MWI3Yjk=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0JHVA==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUBhchCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAt9cKPXCj2</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAuTMzMzMzN</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAt0euFHrhS</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAuQo9cKPXD</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArTMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAC0eA==</field><field name="id" class="java.lang.String">rO0ABXQAEDUyNjI1ZjFlOTVlMzc2NmU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMsOAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExMzEz</field><field name="title" class="java.lang.String">rO0ABXQAP1Nocmlua2luZyBGdW5kIExlYXZlcyBNYWluZSBWdWxuZXJhYmxlIHRvIGFuIE9pbCBTcGlsbCBBY2NpZGVudA==</field><field name="content" class="java.lang.String">rO0ABXQV2EEgc3RlZXAgZGVjbGluZSBpbiByZXZlbnVlcyBmcm9tIHBpcGVsaW5lIHRhcmlmZnMgYW5kIGEgbG9vcGhvbGUgdGhhdCBhbGxvd2VkIGNvbXBhbmllcyBzaGlwcGluZyBjcnVkZSBieSByYWlsIHRvIGF2b2lkIHBheW1lbnQgaGF2ZSBzbGFzaGVkIE1haW5lJ3Mgb2lsLXNwaWxsIGZ1bmQgdG8gbGV2ZWxzIGV4cGVydHMgc2F5IGNvdWxkIGh1cnQgaXRzIGFiaWxpdHkgdG8gcmVzcG9uZCB0byBhbiBhY2NpZGVudC4gRm9jdXMgb24gdGhlIHNhZmV0eSBpc3N1ZSBoYXMgaW50ZW5zaWZpZWQgaW4gdGhlIHdha2Ugb2YgdGhlIGRlYWRseSBMYWMtTWVnYW50aWMgZGlzYXN0ZXIgaW4gUXVlYmVjLiBNYWluZSdzIGVtZXJnZW5jeSBmdW5kIGhhcyBzaHJ1bmsgbW9yZSB0aGFuIDQwIHBlcmNlbnQgb3ZlciBuaW5lIHllYXJzLiBTdXJnaW5nIHRyYWluIHNoaXBtZW50cywgbWVhbndoaWxlLCBhcmUgbWFraW5nIHRoZSBzdGF0ZSBvbmUgb2YgdGhlIGJpZ2dlc3QgY29uZHVpdHMgb2YgY3J1ZGUgcHJvZHVjZWQgZnJvbSBVLlMuIHNoYWxlIHRvIENhbmFkYS4gQWNjb3JkaW5nIHRvIE1haW5lIERlcGFydG1lbnQgb2YgRW52aXJvbm1lbnRhbCBQcm90ZWN0aW9uIGZpZ3VyZXMgb2J0YWluZWQgYnkgUmV1dGVycywgcmV2ZW51ZXMgb2YgdGhlIE1haW5lIENvYXN0YWwgYW5kIElubGFuZCBTdXJmYWNlIE9pbCBDbGVhbi11cCBGdW5kIGhhdmUgZHJvcHBlZCBmcm9tICQ2LjcgbWlsbGlvbiBpbiAyMDAzIHRvICQzLjcgbWlsbGlvbiBpbiAyMDEyLiBUaGUgZnVuZCBjb2xsZWN0cyBhIDMgY2VudCBwZXIgYmFycmVsIHRyYW5zaXQgdGF4IG9uIGNydWRlIG9pbCBhbmQgcmVmaW5lZCBwZXRyb2xldW0gcHJvZHVjdHMuIEV4cGVuZGl0dXJlcyBmcm9tIHRoZSBmdW5kIGhhdmUgZXhjZWVkZWQgcmV2ZW51ZXMgaW4gZm91ciBvZiB0aGUgcGFzdCBmaXZlIHllYXJzLiBJbiBhZGRpdGlvbiwgb25lIG9mIE1haW5lJ3MgdHdvIHByaW1hcnkgb2lsLWJ5LXJhaWwgdHJhbnNwb3J0ZXJzLCBQYW4gQW0gUmFpbHdheXMsIHN0b3BwZWQgcGF5aW5nIGFueSBmZWVzIGludG8gdGhlIGZ1bmQgaW4gQXByaWwsIGFjY29yZGluZyB0byBNYWluZSBERVAgcmVjb3Jkcy4gVGhlIGNvbXBhbnkgaGFzIGRlY2xpbmVkIHRvIGNvbW1lbnQgb24gd2h5IGl0IGhhbHRlZCBwYXltZW50cy4gIldlIGFyZSBpbnZlc3RpZ2F0aW5nIHRoZSBtYXR0ZXIgdGhvcm91Z2hseSBhbmQgaWYgbmVjZXNzYXJ5IHdpbGwgdGFrZSBhcHByb3ByaWF0ZSBlbmZvcmNlbWVudCBhY3Rpb24sIiBzYWlkIExvZ2FuIG9uIFdlZG5lc2RheS4gTW9udHJlYWwgTWFpbmUgJiBBdGxhbnRpYywgb3duZXIgb2YgdGhlIGxpbmUgb24gd2hpY2ggdGhlIFF1ZWJlYyBkZXJhaWxtZW50IG9jY3VycmVkLCBoYXMgY29udGludWVkIHRvIHBheSB0aGUgdGFyaWZmLiBCdXQgYnkgRGVjZW1iZXIgMjAxMiwgdGhlIGZ1bmQncyBiYWxhbmNlIGRyb3BwZWQgdG8gJDEuOSBtaWxsaW9uLCBsZXNzIHRoYW4gYSB0aGlyZCBvZiB0aGUgJDYgbWlsbGlvbiBjYXAgc2V0IGJ5IGxhdyBhbmQgYSBsZXZlbCB0aGF0IHJhaXNlZCBjb25jZXJucyBmcm9tIHNvbWUgbWVtYmVycyBvZiB0aGUgY29tbWl0dGVlIHRoYXQgaGVscHMgb3ZlcnNlZSB0aGUgZnVuZC4gIkFueXRoaW5nIGJlbG93ICQyIG1pbGxpb24gcHV0cyB1cyBpbiBhIHByZWNhcmlvdXMgc3BvdCwiIHNhaWQgSm9lIFBheW5lLCBhIG1lbWJlciBvZiB0aGUgb2lsIHNwaWxsIGFkdmlzb3J5IGNvbW1pdHRlZS4gU2hpcG1lbnRzIG9mIG9pbCB0aHJvdWdoIHRoZSBzdGF0ZSBhcmUgbXVjaCBsb3dlciB0aGFuIHRoZXkgd2VyZSBpbiAyMDAzLCBpbiB0aGVvcnkgcmVkdWNpbmcgdGhlIHJpc2sgb2YgYSBzcGlsbC4gQnV0IHRoZSBjb3N0IG9mIGNsZWFuaW5nIHVwIGFmdGVyIG9uZSBpcyB0aGUgc2FtZS4gV2hpbGUgQ2FuYWRhIGlzIGEgbWFqb3Igb2lsIHByb2R1Y2VyLCBpdHMgZWFzdC1jb2FzdCByZWZpbmVyaWVzIGFyZSBoZWF2aWx5IGRlcGVuZGVudCBvbiBleHBlbnNpdmUgZm9yZWlnbiBvaWwgc2hpcHBlZCBhY3Jvc3MgdGhlIEF0bGFudGljLiBUbyBjdXQgY29zdHMsIGNoZWFwIGNydWRlLCB0cmFuc3BvcnRlZCBieSByYWlsIGZyb20gTm9ydGggRGFrb3RhIGFuZCBvdGhlciBzaGFsZSBvaWwgcGxheXMsIGhhcyBiZWNvbWUgYW4gaW5jcmVhc2luZ2x5IGF0dHJhY3RpdmUgYWx0ZXJuYXRpdmUuIFRoZSBQb3J0bGFuZC1Nb250cmVhbCBQaXBlbGluZSwgTWFpbmUncyBvbmx5IHBpcGVsaW5lIHN5c3RlbSwgY3VycmVudGx5IGZsb3dzIGlubGFuZCBmcm9tIFBvcnRsYW5kIHRvIE1vbnRyZWFsIGFuZCBpcyB1bmFibGUgdG8gbWVldCBkZW1hbmQsIGxlYXZpbmcgc3VwcGxpZXJzIGRlcGVuZGVudCBvbiByYWlsLiBQSVBFTElORSBGTE9XIERPV04gTWFpbmUncyBjbGVhbnVwIGZ1bmQgY292ZXJzIHNhbGFyaWVzIGFuZCB0cmFpbmluZyBmb3IgZmlyc3QgcmVzcG9uZGVycywgYXMgd2VsbCBhcyBlcXVpcG1lbnQgYW5kIG1haW50ZW5hbmNlLCBlbnN1cmluZyBhIHF1aWNrIHJlYWN0aW9uIGFuZCBzaGllbGRpbmcgdGF4cGF5ZXJzIGZyb20gdGhlIGNvc3RzIG9mIGxpdGlnYXRpb24gdG8gcmVjb3VwIHRoZSBjb3N0cyBvZiBhbiBpbml0aWFsIHNwaWxsIHJlY292ZXJ5LiBUcmFuc3BvcnQgb2YgY3J1ZGUgdGhyb3VnaCB0aGUgc3RhdGUgZHJvcHBlZCBvZmYgNjAgcGVyY2VudCBmcm9tIDIwMDUgdG8gMjAxMiwgbW9zdGx5IGJlY2F1c2Ugb2YgYSBkZWNsaW5lIGluIGZsb3dzIGZyb20gdGhlIFBvcnRsYW5kLU1vbnRyZWFsIHBpcGVsaW5lIGFzIHJlZmluZXJ5IGNsb3N1cmVzIGluIE1vbnRyZWFsIGNyaW1wZWQgZGVtYW5kLiBUaGUgbGluZSBpcyB0aGUgbGFyZ2VzdCBjb250cmlidXRvciB0byB0aGUgZnVuZC4gT3V0cHV0IGhhcyBkcm9wcGVkIGZyb20gb3ZlciAzNTAsMDAwIGJhcnJlbHMgcGVyIGRheSBpbiAyMDA3IHRvIGp1c3Qgb3ZlciAxNTAsMDAwIGJwZCBpbiB0aGUgZmlyc3QgZml2ZSBtb250aHMgb2YgMjAxMy4gIldpdGggdGhpcyBtdWNoIG9mIGEgZHJvcCwgaG93IGlzIHRoZSBmdW5kIGdvaW5nIHRvIGRvIGFueXRoaW5nIGJ1dCBldmVudHVhbGx5IHBldGVyIG91dD8iIHNhaWQgUGF5bmUuIFRoZSBmdW5kJ3MgZmluYW5jaWFsIHdvZXMgY29tZSBldmVuIGFzIHJhaWxyb2FkIHRyYW5zcG9ydGF0aW9uIG9mIGNydWRlIG9pbCB0aHJvdWdoIE1haW5lIGlzIGJvb21pbmcsIHVwIGZyb20gemVybyBpbiAyMDEwIHRvIG92ZXIgMTQsMDAwIGJwZCBpbiAyMDEyLiBUaGF0IG51bWJlciBzd2VsbGVkIHRvIG92ZXIgMjgsMDAwIGJwZCBpbiBNYXJjaCBidXQgaXMgc3RpbGwgZmFyIGJlbG93IGhpc3RvcmljYWwgdG90YWxzIGZvciBwaXBlbGluZSB0cmFuc3BvcnRhdGlvbiwgY3JpcHBsaW5nIGZ1bmQgcmV2ZW51ZXMuIFRvIGhlbHAgc3RlbSByZXZlbnVlIGxvc3MsIFBheW5lLCB0aGUgREVQIGFuZCBzdGF0ZSBlbnZpcm9ubWVudGFsIGdyb3VwcyB0ZXN0aWZpZWQgaW4gZmF2b3Igb2YgbGVnaXNsYXRpb24gdGhpcyBzcHJpbmcgdGhhdCBjbGFyaWZpZWQgYW4gZXhpc3RpbmcgbGF3LCByZXF1aXJpbmcgYWxsIGNhcnJpZXJzIG9mIGNydWRlLCB0cnVjaywgcmFpbCBhbmQgcGlwZWxpbmUsIHRvIHBheSB0aGUgMyBjZW50IHBlciBiYXJyZWwgZmVlLCBjbG9zaW5nIGFueSBsb29waG9sZSBmb3IgcmFpbHdheXMgdG8gYXZvaWQgdGhlIHRhcmlmZi4gVGhlIGJpbGwgcGFzc2VkIHRoZSBsZWdpc2xhdHVyZSBhbmQgYmVjb21lcyBsYXcgaW4gT2N0b2Jlci4gwqAgUkVTUE9OU0UgU0VSVklDRVMgQUxSRUFEWSBTVFJFVENIRUQgQW5vdGhlciBhbWVuZG1lbnQsIHByb21vdGVkIGJ5IHN0YXRlIGVudmlyb25tZW50YWwgZ3JvdXBzIGFuZCBzb21lIG9pbCBzcGlsbCBjb21taXR0ZWUgbWVtYmVycywgd291bGQgaGF2ZSB0cmlnZ2VyZWQgYW4gYWRkaXRpb25hbCB0YXJpZmYgb2YgMS41IGNlbnRzIHBlciBiYXJyZWwgc2hvdWxkIHRoZSBmdW5kIGZhbGwgYmVsb3cgJDIgbWlsbGlvbiwgYnV0IGl0IGZhaWxlZCB0byBwYXNzLiBQYXluZSBhbmQgb3RoZXJzIGJlbGlldmUgYW55IHNtYWxsZXIgYW1vdW50IHdvdWxkIHJlbmRlciB0aGUgZnVuZCBpbmFkZXF1YXRlIGluIHRoZSBldmVudCBvZiBhIG1ham9yIHNwaWxsLiBSeWFuIFRpcHBpbmctU3BpdHosIHRoZSBzdGF0ZSBsYXdtYWtlciB3aG8gcHJlc2VudGVkIHRoZSBiaWxsLCBzYWlkIGhlIGRpZG4ndCBmZWVsIGFuIGFkZGl0aW9uYWwgcGVubnkgcGVyIGJhcnJlbCB3b3VsZCBiZSB0b28gbXVjaCB0byBhc2sgZ2l2ZW4gdGhlIHJpc2sgb2Ygc2VyaW91cyBlbnZpcm9ubWVudGFsIGRhbWFnZSBzaG91bGQgc3VjaCBhIHNwaWxsIG9jY3VyLiAiVGhlIHBlb3BsZSB3aG8gY2F1c2UgdGhhdCByaXNrIHNob3VsZCBiZSBwdXR0aW5nIG1vbmV5IG9uIHRoZSB0YWJsZSwiIGhlIHNhaWQuIFRoZSBmdW5kJ3MgMyBjZW50IHBlciBiYXJyZWwgZmVlIGhhcyBub3QgY2hhbmdlZCBpbiAyMCB5ZWFycywgYWNjb3JkaW5nIHRvIG1lZXRpbmcgbWludXRlcyBvZiB0aGUgb2lsIHNwaWxsIGFkdmlzb3J5IGNvbW1pdHRlZS4gRGVzcGl0ZSB0aGUgZnVuZCdzIGR3aW5kbGluZyBjb2ZmZXJzLCB0aGUgTWFpbmUgRGVwYXJ0bWVudCBvZiBFbnZpcm9ubWVudGFsIFByb3RlY3Rpb24gdGVzdGlmaWVkIGFnYWluc3QgVGlwcGluZy1TcGl0eidzIGxlZ2lzbGF0aW9uLCBjaXRpbmcgb3RoZXIgY2xlYW51cCBmdW5kaW5nIHNvdXJjZXMuIE9uIFR1ZXNkYXksIE1haW5lIERFUCBzcG9rZXN3b21hbiBKZXNzYW1pbmUgTG9nYW4gc2FpZCB0aGUgc3RhdGUgYWdlbmN5IGNvbnRpbnVlZCB0byBlbnN1cmUgdGhhdCAiZXhwZW5zZXMgYXJlIGJlbG93IHJldmVudWUiIGFuZCBzYWlkIGl0IGhhZCBpbnN0aXR1dGVkICJtb3JlIGFnZ3Jlc3NpdmUgY29zdC1yZWNvdmVyeSBtZWNoYW5pc21zIGZvbGxvd2luZyBhIHNwaWxsIiB0aGF0IHJlcXVpcmUgdGhlIHJlc3BvbnNpYmxlIHBhcnR5IHRvIHBheSBmb3IgdGhlIGNsZWFudXAuIFBldGVyIEJsYW5jaGFyZCwgZGlyZWN0b3Igb2YgcmVzcG9uc2Ugc2VydmljZXMgZm9yIHRoZSBhZ2VuY3ksIHNhaWQgc2hvcnQtdGVybSBmdW5kaW5nIHdhcyBzZWN1cmUgYnV0IGFja25vd2xlZGdlZCBoaXMgc3RhZmYgd2FzIHN0cmV0Y2hlZCB0aGluLCB3aXRoIHBsYW5uaW5nIGZvciBmdXR1cmUgc3BpbGxzIG9mdGVuIGluaGliaXRlZCBieSB0aGUgbmVlZCB0byByZXNwb25kIHRvIG90aGVyIGtpbmRzIG9mIGFjY2lkZW50cy4gUGF5bmUgc2FpZCBoZSBkb3VidGVkIHRoZSBjdXJyZW50IHJldmVudWVzLCBldmVuIHdpdGggdGhlIG5ld2x5IHBhc3NlZCBsZWdpc2xhdGlvbiwgd291bGQgYmUgZW5vdWdoLCBnaXZlbiB0aGUgZGVjbGluZXMgaW4gY3J1ZGUgdHJhbnNwb3J0IGJ5IHBpcGVsaW5lIGFuZCB0aGUgYW1vdW50IHRyYXZlbGluZyBieSByYWlsLiAiVGhlcmUgbWF5IGJlIGxlc3Mgb2lsIGNvbWluZyB0aHJvdWdoIE1haW5lLCBidXQgdGhhdCBkb2Vzbid0IG1lYW4gdGhlcmUncyBsZXNzIHJpc2sgb2YgYSBtYWpvciBzcGlsbC4gQWNjaWRlbnRzIGNhbiBoYXBwZW4sIGFuZCB3ZSBuZWVkIHRvIGJlIHJlYWR5IHRvIHJlc3BvbmQsIiBzYWlkIFBheW5lLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT/MGaSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGViOGJlNDgzYzljYjUzZmY=</field><field name="symbol" class="java.lang.String">rO0ABXQABUNFTlRB</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT/RQACAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAcR64UeuFI</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAco9cKPXCk</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAb1wo9cKPX</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAcmZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAcmZmZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAALKEA==</field><field name="id" class="java.lang.String">rO0ABXQAEGE5OGM2MDNmMmMyMzZlZjc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGSnAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE0MjY2</field><field name="title" class="java.lang.String">rO0ABXQAOUV4eG9uIENsZWFucyBBcmthbnNhcyBPaWwgU3BpbGwgYXMgS2V5c3RvbmUgUGxhbiBBc3NhaWxlZA==</field><field name="content" class="java.lang.String">rO0ABXQWeUV4eG9uIHNwb2tlc21hbiBBbGFuIEplZmZlcnMgc2FpZCBvbiBTdW5kYXkgdGhhdCBjcmV3cyBoYWQgeWV0IHRvIGV4Y2F2YXRlIHRoZSBhcmVhIGFyb3VuZCB0aGUgcGlwZWxpbmUgYnJlYWNoLCBhIG5lZWRlZCBzdGVwIGJlZm9yZSB0aGUgY29tcGFueSBjYW4gZXN0aW1hdGUgaG93IGxvbmcgcmVwYWlycyB3aWxsIHRha2UgYW5kIHdoZW4gdGhlIGxpbmUgbWlnaHQgcmVzdGFydC4gIkkgY2FuJ3Qgc3BlY3VsYXRlIG9uIHdoZW4gaXQgd2lsbCBoYXBwZW4sIiBKZWZmZXJzIHNhaWQuICJFeGNhdmF0aW9uIGlzIG5lY2Vzc2FyeSBhcyBwYXJ0IG9mIGFuIGludmVzdGlnYXRpb24gdG8gZGV0ZXJtaW5lIHRoZSBjYXVzZSBvZiB0aGUgaW5jaWRlbnQuIiBFeHhvbidzIFBlZ2FzdXMgcGlwZWxpbmUsIHdoaWNoIGNhbiBjYXJyeSBtb3JlIHRoYW4gOTAsMDAwIGJhcnJlbHMgcGVyIGRheSAoYnBkKSBvZiBjcnVkZSBmcm9tIFBhdG9rYSwgSWxsaW5vaXMgdG8gTmVkZXJsYW5kLCBUZXhhcywgd2FzIHNodXQgYWZ0ZXIgdGhlIGxlYWsgd2FzIGRpc2NvdmVyZWQgbGF0ZSBGcmlkYXkgYWZ0ZXJub29uIGluIGEgc3ViZGl2aXNpb24gbmVhciB0aGUgdG93biBvZiBNYXlmbG93ZXIuIFRoZSBsZWFrIGZvcmNlZCB0aGUgZXZhY3VhdGlvbiBvZiAyMiBob21lcy4gRXh4b24gYWxzbyBoYWQgbm8gc3BlY2lmaWMgZXN0aW1hdGUgb2YgaG93IG11Y2ggY3J1ZGUgb2lsIGhhZCBzcGlsbGVkLCBidXQgdGhlIGNvbXBhbnkgc2FpZCAxMiwwMDAgYmFycmVscyBvZiBvaWwgYW5kIHdhdGVyIGhhZCBiZWVuIHJlY292ZXJlZCAtIHVwIGZyb20gNCw1MDAgYmFycmVscyBvbiBTYXR1cmRheS4gVGhlIGNvbXBhbnkgZGlkIG5vdCBzYXkgaG93IG11Y2ggb2YgdGhlIHRvdGFsIHdhcyBvaWwgYW5kIGhvdyBtdWNoIHdhcyB3YXRlci4gQWxsZW4gRG9kc29uLCBGYXVsa25lciBDb3VudHkganVkZ2Ugd2hvIGlzIHRoZSB0b3AgZXhlY3V0aXZlIGZvciB0aGUgY291bnR5IHdoZXJlIHRoZSBzcGlsbCBvY2N1cnJlZCwgdG9sZCBSZXV0ZXJzIGluIGFuIGludGVydmlldyBvbiBTdW5kYXkgdGhhdCB0aGUgc21lbGwgb2YgY3J1ZGUgd2FzIGxlc3MgcG90ZW50IG9uIFN1bmRheSBhcyBjbGVhbnVwIGVmZm9ydHMgY29udGludWVkLCBzYXlpbmcgaXQgd2FzIHdlYWtlciB0aGFuIHRoZSBzbWVsbCBvZiBmcmVzaCBhc3BoYWx0IGxhaWQgb24gYSByb2FkLiAiVGhlIGZyZWVzdGFuZGluZyBvaWwgb24gdGhlIHN0cmVldCBoYXMgYmVlbiByZW1vdmVkLiBJdCdzIHN0aWxsIGRhbXAgd2l0aCBvaWwsIGl0J3MgdGFja3ksIGxpa2UgaXQgaXMgYmVmb3JlIHdlIGRvIGFuIGFzcGhhbHQgb3ZlcmxheSwiIGhlIHNhaWQuIEV4eG9uIHNhaWQgaXQgc3RhZ2VkIHRoZSByZXNwb25zZSB0byBoYW5kbGUgMTAsMDAwIGJhcnJlbHMgb2Ygb2lsICJ0byBlbnN1cmUgYWRlcXVhdGUgcmVzb3VyY2VzIGFyZSBpbiBwbGFjZS4iIE9mZmljaWFscyBmcm9tIHRoZSBVLlMuIEVudmlyb25tZW50YWwgUHJvdGVjdGlvbiBBZ2VuY3kgYW5kIHRoZSBEZXBhcnRtZW50IG9mIFRyYW5zcG9ydGF0aW9uJ3MgUGlwZWxpbmUgYW5kIEhhemFyZG91cyBNYXRlcmlhbHMgU2FmZXR5IEFkbWluaXN0cmF0aW9uIChQSE1TQSkgYWxzbyB3ZXJlIG9uIHNpdGUgdG8gaW52ZXN0aWdhdGUgdGhlIHNwaWxsLiBGaWZ0ZWVuIHZhY3V1bSB0cnVja3MgcmVtYWluZWQgb24gdGhlIHNjZW5lIGZvciBjbGVhbnVwLCBhbmQgMzMgc3RvcmFnZSB0YW5rcyB3ZXJlIGRlcGxveWVkIHRvIHRlbXBvcmFyaWx5IHN0b3JlIHRoZSBvaWwuIFRoZSBwaXBlbGluZSB3YXMgY2FycnlpbmcgQ2FuYWRpYW4gV2FiYXNjYSBIZWF2eSBjcnVkZSBhdCB0aGUgdGltZSBvZiB0aGUgbGVhay4gQW4gb2lsIHNwaWxsIG9mIG1vcmUgdGhhbiAxLDAwMCBiYXJyZWxzIGludG8gYSBXaXNjb25zaW4gZmllbGQgZnJvbSBhbiBFbmJyaWRnZSBJbmMgcGlwZWxpbmUgbGFzdCBzdW1tZXIga2VwdCB0aGF0IGxpbmUgc2h1dHRlcmVkIGZvciBhcm91bmQgMTEgZGF5cy4gVGhlIDg0OC1taWxlICgxLDM4MSBrbSkgcGlwZWxpbmUgdXNlZCB0byB0cmFuc3BvcnQgY3J1ZGUgb2lsIGZyb20gVGV4YXMgdG8gSWxsaW5vaXMuIEluIDIwMDYgRXh4b24gcmV2ZXJzZWQgaXQgdG8gbW92ZSBjcnVkZSBmcm9tIElsbGlub2lzIHRvIFRleGFzIGluIHJlc3BvbnNlIHRvIGdyb3dpbmcgQ2FuYWRpYW4gb2lsIHByb2R1Y3Rpb24gYW5kIHRoZSBhYmlsaXR5IG9mIFUuUy4gR3VsZiBDb2FzdCByZWZpbmVyaWVzIHRvIHByb2Nlc3MgaGVhdnkgY3J1ZGUuIFRoZSBBcmthbnNhcyBzcGlsbCBkcmV3IGZhc3QgcmVhY3Rpb24gZnJvbSBvcHBvbmVudHMgb2YgdGhlIDgwMCwwMDAgYnBkIEtleXN0b25lIFhMIHBpcGVsaW5lLCB3aGljaCBhbHNvIHdvdWxkIGNhcnJ5IGhlYXZ5IGNydWRlIGZyb20gQ2FuYWRhJ3MgdGFyIHNhbmRzIHRvIHRoZSBHdWxmIENvYXN0IHJlZmluaW5nIGh1Yi4gRW52aXJvbm1lbnRhbGlzdHMgaGF2ZSBleHByZXNzZWQgY29uY2VybnMgYWJvdXQgdGhlIGltcGFjdCBvZiBkZXZlbG9waW5nIHRoZSBvaWwgc2FuZHMgYW5kIHNheSB0aGUgY3J1ZGUgaXMgbW9yZSBjb3Jyb3NpdmUgdG8gcGlwZWxpbmVzIHRoYW4gY29udmVudGlvbmFsIG9pbC4gT24gV2VkbmVzZGF5LCBhIHRyYWluIGNhcnJ5aW5nIENhbmFkaWFuIGNydWRlIGRlcmFpbGVkIGluIE1pbm5lc290YSwgc3BpbGxpbmcgMTUsMDAwIGdhbGxvbnMgb2Ygb2lsLiAiV2hldGhlciBpdCdzIHRoZSBwcm9wb3NlZCBLZXlzdG9uZSBYTCBwaXBlbGluZSwgb3IgLi4uICh0aGUpIG1lc3MgaW4gQXJrYW5zYXMsIEFtZXJpY2FucyBhcmUgcmVhbGl6aW5nIHRoYXQgdHJhbnNwb3J0aW5nIGxhcmdlIGFtb3VudHMgb2YgdGhpcyBjb3Jyb3NpdmUgYW5kIHBvbGx1dGluZyBmdWVsIGlzIGEgYmFkIGRlYWwgZm9yIEFtZXJpY2FuIHRheHBheWVycyBhbmQgZm9yIG91ciBlbnZpcm9ubWVudCwiIHNhaWQgUmVwcmVzZW50YXRpdmUgIEVkIE1hcmtleSwgYSBNYXNzYWNodXNldHRzIERlbW9jcmF0LiBTdXBwb3J0ZXJzIG9mIEtleXN0b25lIFhMIGFuZCBvaWwgc2FuZHMgZGV2ZWxvcG1lbnQgc2F5IHRoZSB2YXN0IENhbmFkaWFuIHJlc2VydmVzIGNhbiBoZWxwIGRyaXZlIGRvd24gZnVlbCBjb3N0cyBpbiB0aGUgVW5pdGVkIFN0YXRlcy4gQSByZXBvcnQgZnJvbSB0aGUgQ2FuYWRpYW4gRW5lcmd5IFBpcGVsaW5lIEFzc29jaWF0aW9uLCBwdXQgdG9nZXRoZXIgYnkgb2lsIGFuZCBnYXMgY29uc3VsdGFuY3kgUGVuc3BlbiwgYXJndWVkIGRpbHV0ZWQgYml0dW1lbiBpcyBubyBtb3JlIGNvcnJvc2l2ZSB0aGFuIG90aGVyIGhlYXZ5IGNydWRlLiBBIHllYXIgYWdvIEV4eG9uIHdvbiBhIGNvdXJ0IGFwcGVhbCB0byBjaGFyZ2UgbWFya2V0IHJhdGVzIG9uIHRoZSBQZWdhc3VzIGxpbmUsIG9yIHJhdGVzIHRoYXQgYXJlIG5vdCBjYXBwZWQgYW5kIHRoYXQgY2FuIGNoYW5nZSBhbG9uZyB3aXRoIG1hcmtldCBjb25kaXRpb25zIHdpdGhvdXQgcHJpb3IgYXBwcm92YWwgZnJvbSB0aGUgRmVkZXJhbCBFbmVyZ3kgUmVndWxhdG9yeSBDb21taXNzaW9uLiBUaGF0IGRlY2lzaW9uIGJ5IHRoZSBVLlMuIENvdXJ0IG9mIEFwcGVhbHMgaW4gV2FzaGluZ3RvbiBELkMuIHNhaWQgdGhlIFBlZ2FzdXMgcGlwZWxpbmUgaXMgbm93IHRoZSAicHJpbWFyeSBhdmVudWUiIHRvIG1vdmUgQ2FuYWRpYW4gY3J1ZGUgb2lsIHRvIHRoZSBHdWxmIENvYXN0LiBUaGUgcnVsaW5nIGFsc28gc2FpZCBFeHhvbiBtb3ZlcyBhYm91dCA2NiwwMDAgYmFycmVscyBwZXIgZGF5IG9uIHRoZSBsaW5lLiBMYXN0IHdlZWsgUEhNU0EgcHJvcG9zZWQgdGhhdCBFeHhvbiBwYXkgYSAkMS43IG1pbGxpb24gZmluZSBvdmVyIHBpcGVsaW5lIHNhZmV0eSB2aW9sYXRpb25zIHN0ZW1taW5nIGZyb20gYSBKdWx5IDIwMTEgb2lsIHNwaWxsIGZyb20gaXRzIFNpbHZlcnRpcCBwaXBlbGluZSBpbiB0aGUgWWVsbG93c3RvbmUgUml2ZXIuIFRoZSBsaW5lLCB3aGljaCBjYXJyaWVzIDQwLDAwMCBiYXJyZWxzIHBlciBkYXkgaW4gTW9udGFuYSwgbGVha2VkIGFib3V0IDEsNTAwIGJhcnJlbHMgb2YgY3J1ZGUgYWZ0ZXIgaGVhdnkgZmxvb2RpbmcgaW4gdGhlIGFyZWEuIEV4eG9uIGhhcyAzMCBkYXlzIGZyb20gdGhlIE1hcmNoIDI1IG9yZGVyIHRvIGNvbnRlc3QgdGhvc2UgdmlvbGF0aW9ucy4gQWNjb3JkaW5nIHRvIFBITVNBLCB0aGUgVS5TLiBoYXMgMi4zIG1pbGxpb24gbWlsZXMgb2YgcGlwZWxpbmVzLiBDTEVBTlVQIEV4eG9uIHNhaWQgdGhhdCBieSAzIGEubS4gU2F0dXJkYXkgdGhlcmUgd2FzIG5vIGFkZGl0aW9uYWwgb2lsIHNwaWxsaW5nIGZyb20gdGhlIHBpcGVsaW5lIGFuZCB0aGF0IHRydWNrcyBoYWQgYmVlbiBicm91Z2h0IGluIHRvIGFzc2lzdCB3aXRoIHRoZSBjbGVhbnVwLiBJbWFnZXMgZnJvbSBsb2NhbCBtZWRpYSBzaG93ZWQgY3J1ZGUgb2lsIHNuYWtpbmcgYWxvbmcgYSBzdWJ1cmJhbiBzdHJlZXQgYW5kIHNwZXdlZCBhY3Jvc3MgbGF3bnMuIFR3ZW50eS10d28gaG9tZXMgaW4gdGhlIGFmZmVjdGVkIHN1YmRpdmlzaW9uIHJlbWFpbmVkIGV2YWN1YXRlZCBvbiBTdW5kYXksIHRob3VnaCBNYXlmbG93ZXIgcG9saWNlIHdlcmUgcHJvdmlkaW5nIGVzY29ydHMgZm9yIHJlc2lkZW50cyB0byB0ZW1wb3JhcmlseSByZXR1cm4gdG8gcmV0cmlldmUgcGVyc29uYWwgaXRlbXMuIEplZmZlcnMgc2FpZCBhIGNvdXBsZSBvZiBob21lcyAiYXBwZWFyIHRvIGhhdmUgc21hbGwgYW1vdW50cyBvZiBvaWwgb24gdGhlaXIgZm91bmRhdGlvbnMsIiBidXQgaGUgaGFkIG5vIGluZm9ybWF0aW9uIG9uIGRhbWFnZSBlc3RpbWF0ZXMgb3IgY2xhaW1zLiBFeHhvbiBoYWQgZXN0YWJsaXNoZWQgYSBjbGFpbXMgaG90bGluZSBmb3IgYWZmZWN0ZWQgcmVzaWRlbnRzIGFuZCBzYWlkIGFib3V0IDUwIGNsYWltcyBoYWQgYmVlbiBtYWRlIHNvIGZhci4gRG9kc29uIHNhaWQgb2lsIHRoYXQgbWFkZSBpdCB0byB0aGUgc3RyZWV0IHdlbnQgaW50byBzdG9ybSBkcmFpbnMgdGhhdCBldmVudHVhbGx5IGxlYWQgdG8gYSBjb3ZlIGNvbm5lY3RlZCB0byBuZWFyYnkgTGFrZSBDb253YXksIGtub3duIGFzIGEgZmlzaGluZyBsYWtlIHN0b2NrZWQgd2l0aCBiYXNzLCBjYXRmaXNoLCBicmVhbSBhbmQgY3JhcHBpZS4gSGUgc2FpZCBsb2NhbCByZXNwb25kZXJzIHRoYXQgaW5jbHVkZWQgZmlyZW1lbiwgY2l0eSBlbXBsb3llZXMsIGNvdW50eSByb2FkIGNyZXdzLCBwb2xpY2UgcXVpY2tseSBidWlsdCBkaWtlcyBvZiBkaXJ0IGFuZCByb2NrIHRvIGJsb2NrIGN1bHZlcnRzIGFsb25nIHRoYXQgcGF0aCB0aGF0IHN0b3BwZWQgY3J1ZGUgZnJvbSBmb3VsaW5nIHRoZSBsYWtlLiAiV2Ugd2VyZSBqdXN0IGluIHRoZSBuaWNrIG9mIHRpbWUsIiBoZSBzYWlkLiBFeHhvbiBsYXRlciBkZXBsb3llZCAzLDYwMCBmZWV0IG9mIGJvb20gbmVhciB0aGUgbGFrZSBhcyBhIHByZWNhdXRpb24uIERvZHNvbiBzYWlkIGNydWRlIGFsc28gZ290IGludG8gc2V2ZXJhbCBob21lb3duZXJzJyB5YXJkcywgd2hpY2ggd2lsbCB0YWtlIGxvbmdlciB0byBjbGVhbiB1cC4gIldlJ3ZlIGp1c3QgZ290dGVuIHVzZWQgdG8gaGF2aW5nIHBpcGVsaW5lcyBnbyB0aHJvdWdoIGNpdGllcyBhbmQgY291bnRpZXMsIGFuZCB5b3UgaG9wZSBzb21ldGhpbmcgbGlrZSB0aGlzIGRvZXNuJ3QgaGFwcGVuLiBNeSBoZWFydCBnb2VzIG91dCB0byBhbGwgb2YgdGhlIHBlb3BsZSBwZXJzb25hbGx5IGltcGFjdGVkLCIgRG9kc29uIHNhaWQu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT3D91iAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDk5ZjZmYTI0MzZkNmM4ZjM=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0VELVVOLlY=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT3JHbSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/IUeuFHrhS</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/IUeuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/IUeuFHrhS</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/IUeuFHrhS</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEALmZmZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDdlZDIzZmQ1NjU5ZWRhNjE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGHUAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwNTI=</field><field name="title" class="java.lang.String">rO0ABXQAMlRoZSBTZWNyZXQsIERpcnR5IENvc3Qgb2YgT2JhbWEncyBHcmVlbiBQb3dlciBQdXNo</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJK5SMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI3MTcyMzgzMzAxZTY3Yjg=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZBUk0=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJQC38AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyI9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABp3A==</field><field name="id" class="java.lang.String">rO0ABXQAEGIxNzhiNTk3MDYyZjcwYTE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGoqAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExMzIx</field><field name="title" class="java.lang.String">rO0ABXQALk9pbCBQcmljZSBKdW1wcyAzIG9uIFNpZ25zIG9mIFJpc2luZyBVUyBEZW1hbmQ=</field><field name="content" class="java.lang.String">rO0ABXQVd1RoZSBwcmljZSBvZiBvaWwgaGFzIHNob3QgdXAgJDExIGEgYmFycmVsIGluIHR3byB3ZWVrcyBvbiByaXNpbmcgZGVtYW5kIGluIHRoZSBVLlMuIGFuZCBwb2xpdGljYWwgdXBoZWF2YWwgaW4gdGhlIE1pZGRsZSBFYXN0LiBHYXMgcHJpY2VzIGFyZSBhYm91dCB0byBmb2xsb3cuIFRoZXJlJ3MgYW5vdGhlciBmYWN0b3I6IEJvdHRsZW5lY2tzIHRoYXQgaGFkIHRyYXBwZWQgaW5jcmVhc2luZyBhbW91bnRzIG9mIGRvbWVzdGljYWxseSBwcm9kdWNlZCBvaWwgaW4gdGhlIG1pZGRsZSBvZiB0aGUgY291bnRyeSBhcmUgbG9vc2VuaW5nLiBBcyB0aGF0IG9pbCByZWFjaGVzIHRoZSBjb2FzdHMsIGl0IGNhbiBjb21tYW5kIHByaWNlcyBtb3JlIGluIGxpbmUgd2l0aCBjb3N0bGllciBpbXBvcnRlZCBjcnVkZXMuIEFuIGltcHJvdmluZyBVLlMuIGVjb25vbXksIGhpZ2hsaWdodGVkIGJ5IGxhc3Qgd2VlaydzIGVuY291cmFnaW5nIGRhdGEgb24gaGlyaW5nLCBpcyBhbHNvIHN1cHBvcnRpbmcgaGlnaGVyIG9pbCBwcmljZXMuIE9uIFdlZG5lc2RheSwgb2lsIHJvc2UgMyBwZXJjZW50IGFuZCB0b3BwZWQgJDEwNiBhIGJhcnJlbCBmb3IgdGhlIGZpcnN0IHRpbWUgc2luY2UgTWFyY2ggMjcsIDIwMTIuIEEgZ292ZXJubWVudCByZXBvcnQgc2hvd2luZyBhIHNoYXJwIGRlY2xpbmUgaW4gY3J1ZGUgb2lsIHN1cHBsaWVzIGFuZCByaXNpbmcgZ2Fzb2xpbmUgZGVtYW5kIHdhcyB0aGUgY2F0YWx5c3QgZm9yIHRoaXMgbGF0ZXN0IHN1cmdlLiBEcml2ZXJzIHNob3VsZCBleHBlY3QgaGlnaGVyIHJldGFpbCBnYXNvbGluZSBwcmljZXMgb3ZlciB0aGUgbmV4dCB3ZWVrIG9yIHNvLiBXaG9sZXNhbGUgZ2Fzb2xpbmUgcHJpY2VzIGhhdmUgcmlzZW4gMjAgY2VudHMgdG8gNDAgY2VudHMgcGVyIGdhbGxvbiBpbiBzb21lIG1hcmtldHMgc2luY2UgSnVseSAxLiBUaGUgYXZlcmFnZSBwcmljZSBmb3IgYSBnYWxsb24gb2YgZ2FzIHJvc2UgMiBjZW50cyBXZWRuZXNkYXkgdG8gJDMuNTAsIGFjY29yZGluZyB0byBBQUEsIE9QSVMgYW5kIFdyaWdodCBFeHByZXNzLiBUaGUgcHJpY2UgaXMgc3RpbGwgMTQgY2VudHMgY2hlYXBlciB0aGFuIGEgbW9udGggYWdvLiBBbnkgc3Bpa2UgaW4gZ2FzIHByaWNlcyBjb3VsZCBiZSBzaG9ydC1saXZlZC4gQW5hbHlzdHMgZG8gbm90IGV4cGVjdCBvaWwgdG8gcmlzZSBtdWNoIGZ1cnRoZXIg4oCUIGFuZCBtYW55IGV4cGVjdCB0aGUgcHJpY2UgdG8gc29vbiByZXZlcnNlIGNvdXJzZS4gVS5TLiBvaWwgcHJpY2VzIGhhdmUgcmlzZW4gZm9yIGEgbnVtYmVyIG9mIHJlYXNvbnMsIGFuYWx5c3RzIHNheS4gQ2hpZWYgYW1vbmcgdGhlbTogdHdvIHdlZWtzIG9mIGRyYW1hdGljIGRlY2xpbmVzIGluIGNydWRlIGFuZCBnYXNvbGluZSBzdXBwbGllcyB0aGF0IHN1Z2dlc3QgdGhlIFUuUy4gZWNvbm9teSBpcyBwaWNraW5nIHVwIHN0ZWFtLiBUaGUgRW5lcmd5IERlcGFydG1lbnQgc2FpZCBXZWRuZXNkYXkgdGhhdCBjcnVkZSBzdXBwbGllcyBmZWxsIGJ5IDkuOSBtaWxsaW9uIGJhcnJlbHMgaW4gdGhlIHdlZWsgZW5kZWQgSnVseSA1LiBHYXNvbGluZSBzdXBwbGllcyBmZWxsIGJ5IDIuNiBtaWxsaW9uIGJhcnJlbHMuIEluIHRoZSBwYXN0IHR3byB3ZWVrcywgb2lsIHN1cHBsaWVzIGhhdmUgZHJvcHBlZCAyMC4yIG1pbGxpb24gYmFycmVscyDigJQgc2xpZ2h0bHkgbW9yZSB0aGFuIG9uZSBkYXkncyBjb25zdW1wdGlvbiBmb3IgdGhlIFUuUy4g4oCUIHdoaWxlIGdhc29saW5lIHN1cHBsaWVzIGhhdmUgZmFsbGVuIDQuMyBtaWxsaW9uIGJhcnJlbHMuIE92ZXIgdGhlIHNhbWUgdGltZSwgZGVtYW5kIGluIHRoZSBVLlMuLCB0aGUgd29ybGQncyBsYXJnZXN0IGNvbnN1bWVyIG9mIGdhc29saW5lLCByb3NlIHNoYXJwbHkgYWZ0ZXIgbW9udGhzIG9mIHJlbWFya2FibGUgd2Vha25lc3MuIERlbWFuZCByb3NlIDQgcGVyY2VudCBjb21wYXJlZCB3aXRoIHRoZSBzYW1lIHBlcmlvZCBsYXN0IHllYXIsIHRvIDkuMyBtaWxsaW9uIGJhcnJlbHMgcGVyIGRheS4gVGhlIHByaWNlIG9mIFUuUy4gb2lsIGhhcyBzdWRkZW5seSBjYXVnaHQgdXAgd2l0aCBjcnVkZSBwcmljZWQgaW50ZXJuYXRpb25hbGx5LiBXaGlsZSBVLlMuIG9pbCByb3NlICQyLjk5IHRvICQxMDYuNTIgV2VkbmVzZGF5LCBCcmVudCBjcnVkZSwgYW4gaW50ZXJuYXRpb25hbCBiZW5jaG1hcmsgdXNlZCB0byBwcmljZSBvaWwgdXNlZCBieSBtYW55IFUuUy4gcmVmaW5lcmllcywgcm9zZSBqdXN0IDcwIGNlbnRzLCB0byAkMTA4LjUxLiBUaGUgZGlmZmVyZW5jZSBiZXR3ZWVuIFUuUy4gYW5kIGludGVybmF0aW9uYWwgb2lsIGlzIG5vdyAkMS45OSBwZXIgYmFycmVsLiBPbiBBcHJpbCAxLCBpdCB3YXMgJDEzLjkzLiBQYXJ0IG9mIHRoZSBnYXAgaW4gcHJpY2Ugd2FzIGEgcmVzdWx0IG9mIGluY3JlYXNlZCBVLlMuIG9pbCBwcm9kdWN0aW9uLiBUaGUgZGlmZmVyZW5jZSBoYXMgY29sbGFwc2VkIGJlY2F1c2UgdGhhdCBvaWwgY2FuIG5vdyBnZXQgdG8gbW9yZSBjdXN0b21lcnMuIFUuUy4gb2lsIHByb2R1Y3Rpb24gaGFzIGJlZW4gcmlzaW5nIGFzIGEgcmVzdWx0IG9mIGltcHJvdmVkIGRyaWxsaW5nIHRlY2huaXF1ZXMgc3VjaCBhcyBob3Jpem9udGFsIGRyaWxsaW5nIGFuZCBoeWRyYXVsaWMgZnJhY3R1cmluZywgb3IgZnJhY2tpbmcuIERvbWVzdGljIHByb2R1Y3Rpb24gdG8gaXRzIGhpZ2hlc3QgbGV2ZWwgc2luY2UgMTk5MiwgYWNjb3JkaW5nIHRvIFdlZG5lc2RheSdzIEVuZXJneSBEZXBhcnRtZW50IHJlcG9ydC4gQnV0IHVudGlsIHJlY2VudGx5LCBtdWNoIG9mIHRoYXQgb2lsIHdhcyB0cmFwcGVkIGluIHRoZSBtaWRkbGUgb2YgdGhlIGNvdW50cnksIHVuYWJsZSB0byBtYWtlIGl0IHRvIHJlZmluZXJzIG9uIHRoZSBjb2FzdHMuIFRoYXQgY3JlYXRlZCBhIG1pbmktZ2x1dCB0aGF0IGtlcHQgVS5TLiBvaWwgcHJpY2VzIGFzIG11Y2ggYXMgJDIwIHBlciBiYXJyZWwgbGVzcyB0aGFuIGludGVybmF0aW9uYWwgb2lsIG92ZXIgdGhlIGxhc3QgdGhyZWUgeWVhcnMuIEEgc2VyaWVzIG9mIG5ldyBwaXBlbGluZXMsIHBpcGVsaW5lcyB0aGF0IGhhdmUgcmV2ZXJzZWQgZGlyZWN0aW9uLCBhbmQgbW9yZSByYWlsIGNhcnMgZGVzaWduZWQgdG8gc2hpcCBvaWwgaGF2ZSBzdWRkZW5seSBoZWxwZWQgcmVsaWV2ZSB0aGUgZ2x1dCDigJQgYW5kIHNlbnQgVS5TLiBvaWwgcHJpY2VzIHNoYXJwbHkgaGlnaGVyLiAiVHJhbnNwb3J0YXRpb24gYm90dGxlbmVja3MgaGF2ZSBiZWVuIGJsYXN0ZWQgYXBhcnQgaW4gdGhlIGxhc3QgdHdvIG1vbnRocywiIHNheXMgSnVkaXRoIER3YXJraW4sIGNoaWVmIGVuZXJneSBlY29ub21pc3QgYXQgSVRHIEludmVzdG1lbnQgUmVzZWFyY2guIE9pbCBwcmljZXMgYXJvdW5kIHRoZSB3b3JsZCBiZWdhbiByaXNpbmcgZHVyaW5nIHRoZSBmaXJzdCBmZXcgZGF5cyBvZiBKdWx5LCB3aGVuIHBvbGl0aWNhbCB0dXJtb2lsIGVydXB0ZWQgaW4gRWd5cHQgYW5kIHdvcnJpZXMgYXJvc2UgdGhhdCB2aW9sZW5jZSBjb3VsZCBzcHJlYWQgYW5kIHRocmVhdGVuIHRoZSBmbG93IG9mIG9pbCB0aHJvdWdoIHRoZSBTdWV6IENhbmFsLCBhIG1ham9yIGNvbmR1aXQgZm9yIE1pZGRsZSBFYXN0ZXJuIG9pbC4gV2hpbGUgbW9zdCBhbmFseXN0cyBzYXkgaXQgaXMgZXh0cmVtZWx5IHVubGlrZWx5IHRoYXQgb2lsIHN1cHBsaWVzIHdpbGwgYmUgZGlzcnVwdGVkLCBvaWwgdHJhZGVycyBhcmUgY29uY2VybmVkIGVub3VnaCB0aGF0IHRoZXkgaGF2ZSBiZWNvbWUgbW9yZSByZWx1Y3RhbnQgdG8gc2VsbC4gV2hlbiB0aGVyZSBhcmUgZmV3ZXIgd2lsbGluZyBzZWxsZXJzLCBwcmljZXMgcmlzZSBxdWlja2x5LiBTdGlsbCwgYW5hbHlzdHMgc2VlIHNpZ25zIHRoYXQgdGhlIGhpZ2ggcHJpY2VzIG1pZ2h0IG5vdCBsYXN0LiBXaGlsZSBVLlMuIHN1cHBsaWVzIG9mIGNydWRlIGFuZCBnYXNvbGluZSBoYXZlIGZhbGxlbiByZWNlbnRseSwgdGhleSBhcmUgc3RpbGwgaGlnaGVyIHRoYW4gdGhlaXIgZml2ZS15ZWFyIGF2ZXJhZ2VzIGZvciB0aGlzIHRpbWUgb2YgeWVhci4gIldlIHdvdWxkIG5vdCBnaXZlIHRvbyBtdWNoIHdlaWdodCB0byB0aGUgbGFyZ2VyLXRoYW4tZXhwZWN0ZWQgZHJhd2Rvd24gaW4gVVMgY3J1ZGUgc3RvY2tzIGluIHRoZSByZWNlbnQgZGF0YSwiIHdyb3RlIEp1bGlhbiBKZXNzb3AsIGEgY29tbW9kaXRpZXMgYW5hbHlzdCBhdCBDYXBpdGFsIEVjb25vbWljcywgaW4gYSByZXBvcnQgV2VkbmVzZGF5LiAiSW52ZW50b3JpZXMgYXJlIHN0aWxsIHVudXN1YWxseSBoaWdoLiIgSmVzc29wIHdyb3RlIHRoYXQgYW1wbGUgc3VwcGxpZXMgYW5kIHN0aWxsLXNsdWdnaXNoIGdsb2JhbCBlY29ub21pYyBhY3Rpdml0eSAic2hvdWxkIGRyYWcgb2lsIHByaWNlcyBsb3dlciBhZ2FpbiBieSB0aGUgZW5kIG9mIHRoZSB5ZWFyLiIgVG9tIEtsb3phLCBjaGllZiBvaWwgYW5hbHlzdCBhdCBHYXNCdWRkeS5jb20sIHRoaW5rcyB0aGUgc3VyZ2UgaW4gZ2Fzb2xpbmUgZGVtYW5kIG92ZXIgdGhlIHBhc3QgdHdvIHdlZWtzIG1heSBiZSB0ZW1wb3JhcnksIGJyb3VnaHQgb24gYnkgYSBKdWx5IDQgaG9saWRheSB0aGF0IGZvbGxvd2VkIHRlcnJpYmxlIHNwcmluZyB3ZWF0aGVyIGluIG11Y2ggb2YgdGhlIGNvdW50cnkuICJJdCB3YXMgc3VjaCBwb29yIHdlYXRoZXIgZm9yIGZvdXIgbW9udGhzIHRoYXQgcGVvcGxlIGhhZCBjYWJpbiBmZXZlciwiIEtsb3phIHNhaWQuIEhlIGV4cGVjdHMgZGVtYW5kIHRvIG1vZGVyYXRlIGluIHRoZSBjb21pbmcgd2Vla3MuIEhlIGFsc28gbm90ZXMgdGhhdCBVLlMuIHJlZmluZXJzIGFyZSBtYWtpbmcgbW9yZSBnYXNvbGluZSB0aGFuIHRoZXkgaGF2ZSBzaW5jZSAxOTk3LCBzbyBzdXBwbGllcyBzaG91bGQgcmVtYWluIGhpZ2guIEVyaWMgTGVlLCBhbiBvaWwgYW5hbHlzdCBhdCBDaXRpZ3JvdXAsIGhhZCBleHBlY3RlZCBvaWwgcHJpY2VzIHRvIHJpc2UgdGhpcyBzdW1tZXIgYXMgcmVmaW5lcnMgYXJvdW5kIHRoZSB3b3JsZCBkcmV3IGRvd24gb2lsIHN1cHBsaWVzIHNvIHRoZXkgY291bGQgcmFtcCB1cCBwcm9kdWN0aW9uLCBidXQgaGUgYWxzbyBleHBlY3RzIHRoZSBwcmljZSBvZiBjcnVkZSB0byB3ZWFrZW4gaW4gdGhlIGNvbWluZyBtb250aHMuICJXZSB3b3VsZCBleHBlY3QgaXQgdG8gc3RheSBoZXJlIGluIHRoZSBzaG9ydCB0ZXJtIGFuZCB0aGVuIGVhc2Ugb2ZmIGluIHRoZSBuZXh0IG1vbnRoIG9yIHR3bywiIGhlIHNhaWQuIEluIG90aGVyIGVuZXJneSBmdXR1cmVzIHRyYWRpbmcgb24gdGhlIE5ldyBZb3JrIE1lcmNhbnRpbGUgRXhjaGFuZ2U6IOKAlCBXaG9sZXNhbGUgZ2Fzb2xpbmUgcm9zZSA4IGNlbnRzIHRvIGNsb3NlIGF0ICQzLjAxIGEgZ2FsbG9uLiDigJQgTmF0dXJhbCBnYXMgcm9zZSAyIGNlbnRzIHRvIGNsb3NlIGF0ICQzLjY4IHBlciAxLDAwMCBjdWJpYyBmZWV0LiDigJQgSGVhdGluZyBvaWwgcm9zZSAyIGNlbnRzIHRvIGNsb3NlIGF0ICQzLjAwIHBlciBnYWxsb24u</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT/G80iAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGYxNTU0NTUzYmFjZWUzZTU=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNISVA=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT/MGaSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/1mZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/1mZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/0zMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/1mZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/1mZmZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAImA==</field><field name="id" class="java.lang.String">rO0ABXQAEDdmZWM1MTc4ZjI1M2UzY2M=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE89AAAA==</field></document></documents><date>2015-05-07T12:09:25-0500</date></cacheEntry>
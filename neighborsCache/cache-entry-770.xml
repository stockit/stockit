<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0Ct9UaGUgVVMgU2VjdXJpdGllcyBhbmQgRXhjaGFuZ2UgQ29tbWlzc2lvbiBoYXMgYXBwcm92ZWQgYSBuZXcgYnJva2VyYWdlIGluZHVzdHJ5IHJ1bGUgdG8gYmFuIGRpc3B1dGUgc2V0dGxlbWVudHMgYmV0d2VlbiBzZWN1cml0aWVzIGZpcm1zIGFuZCBpbnZlc3RvcnMgdGhhdCByZXF1aXJlIGludmVzdG9ycyB0byBhZ3JlZSB0byBlcmFzZSBjb21wbGFpbnRzIGZyb20gYnJva2VycyBwdWJsaWMgcmVjb3JkcyBJbiBhZGRpdGlvbiB0aGUgU0VDIHJlY29tbWVuZGVkIHRoYXQgdGhlIEZpbmFuY2lhbCBJbmR1c3RyeSBSZWd1bGF0b3J5IEF1dGhvcml0eSBjb25kdWN0IGEgY29tcHJlaGVuc2l2ZSByZXZpZXcgb2Ygb3RoZXIgcHJvY2VkdXJlcyB0aGF0IGNhbiBlbmFibGUgYnJva2VycyBhbmQgZmlybXMgdG8gZXJhc2Ugb3IgZXhwdW5nZSBjZXJ0YWluIGRldGFpbHMgZnJvbSB0aGVpciBwdWJsaWMgcmVjb3JkcyBpdCB3cm90ZSBpbiBhbiBvcmRlciBwb3N0ZWQgb24gaXRzIHdlYnNpdGUgb24gV2VkbmVzZGF5IFRoZSBhZ2VuY3kgaXMgY29uY2VybmVkIGJ5IGhvdyBmcmVxdWVudGx5IHRoZSBXYWxsIFN0cmVldCBpbmR1c3RyeWZ1bmRlZCB3YXRjaGRvZ3MgYXJiaXRyYXRvcnMgZ3JhbnQgYnJva2VycyByZXF1ZXN0cyB0byBlcmFzZSBkZXRhaWxzIG9mIGN1c3RvbWVyIGNvbXBsYWludHMgZnJvbSB0aGVpciByZWNvcmRzIG5vdCBqdXN0IHVuZGVyIHNldHRsZW1lbnQgYWdyZWVtZW50cyB3aXRoIGludmVzdG9ycyBGSU5SQSBXYWxsIFN0cmVldHMgaW5kdXN0cnlmdW5kZWQgd2F0Y2hkb2cgZmlsZWQgaXRzIHBsYW4gdG8gYmFuIHRoZSBleHB1bmdlbWVudHJlbGF0ZWQgc2V0dGxlbWVudCBwYWN0cyB3aXRoIHRoZSBTRUMgaW4gQXByaWwgVGhlIG1vdmUgZm9sbG93ZWQgYSBzdHVkeSBieSB0aGUgUHVibGljIEludmVzdG9ycyBBcmJpdHJhdGlvbiBCYXIgQXNzb2NpYXRpb24gYSBncm91cCBvZiBzZWN1cml0aWVzIGFyYml0cmF0aW9uIGxhd3llcnMgdGhhdCBmb3VuZCBicm9rZXJzIHN1Y2NlZWRlZCA5NjkgcGVyY2VudCBvZiB0aGUgdGltZSBiZXR3ZWVuIG1pZDIwMDkgYW5kIHRoZSBlbmQgb2YgMjAxMSBpbiBleHB1bmdpbmcgZGV0YWlscyBhYm91dCBjYXNlcyBicm91Z2h0IGJ5IGludmVzdG9ycyBhZ2FpbnN0IHRoZWlyIGZpcm1zIHRoYXQgd2VyZSBsYXRlciBzZXR0bGVkIEludmVzdG9ycyB3aG8gY2xhaW0gdG8gaGF2ZSBsb3N0IG1vbmV5IGJlY2F1c2Ugb2YgYSBicm9rZXJzIG1pc2NvbmR1Y3Qgb3IgYWR2aWNlIG9mdGVuIGZpbGUgYSBjYXNlIGFnYWluc3QgdGhlIGJyb2tlcnMgZmlybSBpbiBGSU5SQXMgc2VjdXJpdGllcyBhcmJpdHJhdGlvbiBmb3J1bSBEZXRhaWxzIG9mIHRoZSBjb21wbGFpbnQgdGhlbiBhcHBlYXIgaW4gdGhlIGJyb2tlcnMgcHVibGljbHkgYXZhaWxhYmxlIGRpc2Nsb3N1cmUgcmVwb3J0IGluIGEgZnJlZSBkYXRhYmFzZSBmb3IgaW52ZXN0b3JzIGtub3duIGFzIEJyb2tlckNoZWNrIEJyb2tlcnMgd2hvIHdhbnQgdG8gZXJhc2UgdGhvc2UgZGV0YWlscyB0eXBpY2FsbHkgZmlsZSB0aGVpciBvd24gRklOUkEgYXJiaXRyYXRpb24gY2FzZXMgYXNraW5nIGZvciBhIHJlY29tbWVuZGF0aW9uIHRvIGV4cHVuZ2UgdGhlIHJlY29yZHMgQnJva2VycyB3aG8gYXJlIHN1Y2Nlc3NmdWwgbXVzdCB0aGVuIG9idGFpbiBhIGNvdXJ0IG9yZGVyIHRvIGNvbXBsZXRlIHRoZSBwcm9jZXNzIEZJTlJBIGNhbiBvcHBvc2UgdGhlIGNvdXJ0IGFwcGxpY2F0aW9uIFBJQUJBIGhhcyBhbGxlZ2VkIHRoYXQgYnJva2VyYWdlcyBzdHJvbmdhcm0gaW52ZXN0b3JzIGludG8gd2FpdmluZyB0aGVpciByaWdodHMgdG8gb3Bwb3NlIGV4cHVuZ2VtZW50cyBidXQgbGF3eWVycyBmb3IgYnJva2VyYWdlcyBoYXZlIGRpc3B1dGVkIHRoZSBwb2ludCBUaGUgbmV3IHJ1bGUgc2hvdWxkIGhlbHAgYXNzdXJlIHRoYXQgYWNjdXJhdGUgYW5kIGNvbXBsZXRlIGN1c3RvbWVyIGRpc3B1dGUgaW5mb3JtYXRpb24gcmVtYWlucyBhdmFpbGFibGUgdG8gdGhlIGludmVzdGluZyBwdWJsaWMgcmVndWxhdG9ycyBhbmQgYnJva2VyZGVhbGVycyB0aGUgU0VDIHdyb3RlIFRoZSBjb21wbGV0ZW5lc3Mgb2YgdGhhdCBpbmZvcm1hdGlvbiBpcyBjcml0aWNhbCBmb3IgdGhlIHByb3RlY3Rpb24gb2YgaW52ZXN0b3JzIGFuZCBlZmZlY3RpdmUgcmVndWxhdG9yeSBvdmVyc2lnaHQgaXQgd3JvdGUgQnJva2VycyBjYW4gYWxzbyByZWx5IG9uIG90aGVyIEZJTlJBIHJ1bGVzIGFuZCBwcm9jZWR1cmVzIHRvIHJlcXVlc3QgZXhwdW5nZW1lbnQgaW5kZXBlbmRlbnQgb2YgYSBkaXNwdXRlIG9yIHNldHRsZW1lbnRzIHdpdGggaW52ZXN0b3JzIFRoZSBTRUMgbm90ZWQgaXRzIGNvbmNlcm4gYWJvdXQgYSBoaWdoIG51bWJlciBvZiBjYXNlcyBpbiB3aGljaCBGSU5SQSBhcmJpdHJhdG9ycyBncmFudGVkIHJlcXVlc3RzIHRvIGV4cHVuZ2UgYnJva2VycyByZWNvcmRzIEl0IGVuY291cmFnZWQgRklOUkEgdG8gYXNzZXNzIHdoZXRoZXIgY2hhbmdlcyBhcmUgbmVlZGVkIHRvIGVuc3VyZSB0aGF0IGV4cHVuZ2VtZW50IGlzIHBlcm1pdHRlZCBvbmx5IHdoZXJlIHRoZSBpbmZvcm1hdGlvbiBpbiBxdWVzdGlvbiBoYXMgbm8gbWVhbmluZ2Z1bCBpbnZlc3RvciBwcm90ZWN0aW9uIG9yIHJlZ3VsYXRvcnkgdmFsdWUgQSBGSU5SQSBzcG9rZXN3b21hbiBzYWlkIHRoZSByZWd1bGF0b3Igc2hhcmVzIHRoZSBTRUNzIGNvbmNlcm5zIGFuZCB3aWxsIGNvbnRpbnVlIHRvIGNvbnNpZGVyIGFkZGl0aW9uYWwgcnVsZW1ha2luZyBhcyBhcHByb3ByaWF0ZXQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMC0wNi0xMFQwMDowMDowMFogVE8gMjAxMy0wNy0zMFQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDY5NTY=</field><field name="title" class="java.lang.String">rO0ABXQAOFNFQzogTmV3IFlvcmsgRmlybSBBbGxvd2VkIEhpZ2gtU3BlZWQgU3RvY2sgTWFuaXB1bGF0aW9u</field><field name="content" class="java.lang.String">rO0ABXQPv0NsaWVudHMgb2YgSG9sZCBCcm90aGVycyBPbi1MaW5lIEludmVzdG1lbnQgU2VydmljZXMgd2VyZSDigJxyZXBlYXRlZGx5IG1hbmlwdWxhdGluZyBwdWJsaWNseSB0cmFkZWQgc3RvY2tz4oCdIGJ5IHBsYWNpbmcgYW5kIGVyYXNpbmcgb3JkZXJzIGluIGFuIGlsbGVnYWwgc3RyYXRlZ3kgZGVzaWduZWQgdG8gdHJpY2sgb3RoZXJzIGludG8gYnV5aW5nIG9yIHNlbGxpbmcsIHRoZSBTRUMgc2FpZCBUdWVzZGF5IGluIGEgcmVsZWFzZS4gSG9sZCBCcm90aGVycywgaXRzIG93bmVycywgYW5kIHRoZSBmb3JlaWduIGZpcm1zIFRyYWRlIEFscGhhIENvcnBvcmF0ZSBMdGQuIGFuZCBEZW1vbnN0cmF0ZSBMTEMgYWdyZWVkIHRvIHNldHRsZSBhbGxlZ2F0aW9ucyB0aGF0IHRoZSBOZXcgWW9yayBicm9rZXIgZmFpbGVkIHRvIHN1cGVydmlzZSBjdXN0b21lcnMgYW5kIHBheSAkNCBtaWxsaW9uIGluIHRvdGFsIFNFQyBmaW5lcy4gVGhlIFNFQyBjb21wbGFpbnQgdGFyZ2V0ZWQgcHJhY3RpY2VzIHRoYXQgYWJ1c2VkIGhpZ2gtc3BlZWQgY29tcHV0ZXIgdHJhZGluZyBvbiBBbWVyaWNhbiBlcXVpdHkgdmVudWVzLiBBcyBoaWdoLWZyZXF1ZW5jeSBhY3Rpdml0eSBoYXMgZ3Jvd24gaW4gcmVjZW50IHllYXJzLCB0aGUgYWdlbmN54oCZcyBlZmZvcnRzIHRvIHN0b3AgZnJhdWR1bGVudCBwcmFjdGljZXMgc3VjaCBhcyDigJxsYXllcmluZ+KAnSBvciDigJxzcG9vZmluZ+KAnSBoYXZlIGV4dGVuZGVkIHRvIHRoZSBhdXRvbWF0ZWQgdHJhZGluZyB0YWN0aWNzLiDigJxEaXJlY3QgYWNjZXNzIGZpcm1zIGxpa2UgdGhlc2UgYXJlIHRoZSBnYXRla2VlcGVyIHRvIG91ciBtYXJrZXRzLOKAnSBTYW5nIExlZSwgbWFuYWdpbmcgcGFydG5lciBhdCByZXNlYXJjaCBmaXJtIEFpdGUgR3JvdXAgTExDIGluIEJvc3Rvbiwgc2FpZCBUdWVzZGF5IGluIGEgcGhvbmUgaW50ZXJ2aWV3LiDigJxUaGF04oCZcyB3aHkgdGhlIFNFQyBpcyBkb2luZyB0aGlzLiBUaGlzIGlzIGNlcnRhaW5seSB0aGUgYXJlYSB0aGF0IHRoZXkgbmVlZCB0byBmb2N1cyBvbiwgYW5kIG9uIGEgbGFyZ2VyIHNjYWxlLuKAnSBTdGV2ZSBIb2xkIEFsb25nIHdpdGggSG9sZCBCcm90aGVycywgdGhlIFNFQyBjaGFyZ2VkIGl0cyBjby1mb3VuZGVyIGFuZCBwcmVzaWRlbnQsIFN0ZXZlIEhvbGQsIHdobyBjcmVhdGVkIGFuZCBwYXJ0aWFsbHkgb3duZWQgVHJhZGUgQWxwaGEgYW5kIERlbW9uc3RyYXRlLCBhY2NvcmRpbmcgdG8gVHVlc2RheeKAmXMgcmVsZWFzZS4gUm9iZXJ0IFZhbGxvbmUsIGEgZm9ybWVyIGNoaWVmIGNvbXBsaWFuY2Ugb2ZmaWNlciBhbmQgY2hpZWYgZmluYW5jaWFsIG9mZmljZXIsIGFuZCBXaWxsaWFtIFRvYmlhcywgYW5vdGhlciBleGVjdXRpdmUsIHdlcmUgYWxzbyBjaGFyZ2VkIGFuZCBhZ3JlZWQgdG8gdGhlIHBlbmFsdGllcy4gQSBwaG9uZSBjYWxsIHRvIHRoZSBIb2xkIEJyb3RoZXJzIG1haW4gbnVtYmVyIGFuZCBhbiBlLW1haWwgdG8gdGhlIGdlbmVyYWwgbWVkaWEgYWRkcmVzcyB3ZXJlbuKAmXQgaW1tZWRpYXRlbHkgcmV0dXJuZWQuIFRoZSBTRUMgZGVzY3JpYmVkIGxheWVyaW5nIGFzIHBsYWNpbmcgYW4gb3JkZXIgd2l0aCBubyBpbnRlbnRpb24gb2YgaGF2aW5nIGl0IGV4ZWN1dGVkIGluIGFuIGVmZm9ydCB0byBkZWNlaXZlIG90aGVycyBpbnRvIHBheWluZyBhbiDigJxhcnRpZmljaWFsIHByaWNl4oCdIGZvciBhIHNlY3VyaXR5LiBIb2xkIEJyb3RoZXJzIGV4ZWN1dGl2ZXMgd2VyZSBhd2FyZSBvZiBlLW1haWxzIGFuZCBvdGhlciBpbmRpY2F0aW9ucyB0aGF0IG1hbmlwdWxhdGl2ZSB0cmFkaW5nIHdhcyBoYXBwZW5pbmcgYW5kIOKAnHJlY2tsZXNzbHkgY29udGludWVk4oCdIHRvIHByb3ZpZGUgdGhlIGZpcm1zIGFjY2VzcywgaXQgc2FpZC4gVGhlIHRyYWRpbmcgb2NjdXJyZWQgZnJvbSBhdCBsZWFzdCBKYW51YXJ5IDIwMDkgdG8gU2VwdGVtYmVyIDIwMTAsIHRoZSBhZ2VuY3kgc2FpZC4gRXhjaGFuZ2UgRmluZXMgVGhlIEZpbmFuY2lhbCBJbmR1c3RyeSBSZWd1bGF0b3J5IEF1dGhvcml0eSBhbmQgZXhjaGFuZ2VzIG93bmVkIGJ5IE5hc2RhcSBPTVggR3JvdXAgSW5jLiwgTllTRSBFdXJvbmV4dCBhbmQgQmF0cyBHbG9iYWwgTWFya2V0cyBJbmMuIGZpbmVkIEhvbGQgQnJvdGhlcnMgJDMuNCBtaWxsaW9uIGZvciBtYW5pcHVsYXRpdmUgdHJhZGluZyBhY3Rpdml0aWVzIGFuZCBvdGhlciB2aW9sYXRpb25zLCBicmluZ2luZyB0aGUgdG90YWwgZmluZXMgdG8gdGhlIGJyb2tlciB0byBtb3JlIHRoYW4gJDUuOSBtaWxsaW9uLiBSZWd1bGF0b3JzIGhhdmUgcmVxdWlyZWQgYnJva2VycyB0byB0aWdodGVuIGNvbnRyb2xzIHdoZW4gdGhleSBnaXZlIGNsaWVudHMgZGlyZWN0IGFjY2VzcyB0byBtYXJrZXRzLCB3YXJuaW5nIHRoYXQgc28tIGNhbGxlZCBzdWItYWNjb3VudHMgY2FuIGJlIHVzZWQgdG8gaGlkZSB3cm9uZ2RvaW5nLiBUaGUgU0VDIGltcGxlbWVudGVkIHRoZSBydWxlIGluIEp1bHkgMjAxMSBkaXJlY3RpbmcgZmlybXMgdG8gbGltaXQgcmlza3MgYXNzb2NpYXRlZCB3aXRoIGRpcmVjdCBhY2Nlc3MuIFRoZSBydWxlIGVuZGVkIHVuc3VwZXJ2aXNlZCB0cmFkaW5nLCBvciDigJxuYWtlZCBhY2Nlc3Ms4oCdIHRvIG1hcmtldHMuIFJlZ3VsYXRvcnMgZmluZWQgdGhlIG1hcmtldC1tYWtpbmcgdW5pdCBvZiBhdXRvbWF0ZWQgdHJhZGluZyBmaXJtIEdldGNvIExMQyAkNDUwLDAwMCBpbiBNYXJjaCBmb3IgZmFpbGluZyB0byBtYWludGFpbiBwcm9wZXIgc3VwZXJ2aXNpb24gb3ZlciBpdHMgc3RvY2sgYnV5aW5nIGFuZCBzZWxsaW5nLiBJbiBTZXB0ZW1iZXIgMjAxMCwgVHJpbGxpdW0gQnJva2VyYWdlIFNlcnZpY2VzIExMQywgYSBwcm9wcmlldGFyeSB0cmFkaW5nIGZpcm0sIHdhcyBmaW5lZCAkMSBtaWxsaW9uIGZvciBzZW5kaW5nIG9yZGVycyB0byBlbGVjdHJvbmljIHN0b2NrIHZlbnVlcyBhaW1lZCBhdCBkZWNlaXZpbmcgaW52ZXN0b3JzLCBGaW5yYSBzYWlkLiBGYWxzZSBBcHBlYXJhbmNlIE5pbmUgdHJhZGVycyBhdCBOZXcgWW9yay1iYXNlZCBUcmlsbGl1bSBlbnRlcmVkIG9yZGVycyBvbiB0aGUgTmFzZGFxIFN0b2NrIE1hcmtldCBhbmQgTllTRSBBcmNhIGRlc2lnbmVkIHRvIGNyZWF0ZSB0aGUgZmFsc2UgYXBwZWFyYW5jZSBvZiBidXlpbmcgb3Igc2VsbGluZyBpbiBhbiBhdHRlbXB0IHRvIGdldCBiZXR0ZXIgcHJpY2VzIHRoYW4gdGhleSB3b3VsZCBoYXZlIG90aGVyd2lzZSwgRmlucmEgc2FpZCBpbiBhIHN0YXRlbWVudC4gVGhlIDQ2LDAwMCBpbnN0YW5jZXMgZ2VuZXJhdGVkIGFib3V0ICQ1NzUsMDAwIGluIHByb2ZpdCBhbmQgdG9vayBwbGFjZSBiZXR3ZWVuIE5vdi4gMSwgMjAwNiwgYW5kIEphbi4gMzEsIDIwMDcsIHRoZSByZWd1bGF0b3Igc2FpZC4g4oCcVGhlIGZhaXJuZXNzIHByaW5jaXBsZSB0aGF0IHVuZGVybGllcyB0aGUgZm91bmRhdGlvbiBvZiBvdXIgbWFya2V0cyBkZW1hbmRzIHRoYXQgcHJpY2VzIG9mIHNlY3VyaXRpZXMgYWNjdXJhdGVseSByZWZsZWN0IGEgZ2VudWluZSBzdXBwbHkgb2YgYW5kIGRlbWFuZCBmb3IgdGhvc2Ugc2VjdXJpdGllcyzigJ0gRGFuaWVsIE0uIEhhd2tlLCB0aGUgY2hpZWYgb2YgdGhlIFNFQ+KAmXMgZW5mb3JjZW1lbnQgZGl2aXNpb27igJlzIG1hcmtldCBhYnVzZSB1bml0LCBzYWlkIGluIHRoZSBzdGF0ZW1lbnQuIOKAnFRoZSBTRUMgd2lsbCBub3QgdG9sZXJhdGUgYW55IGFidXNpdmUgcHJhY3RpY2UgdGhhdCBpcyBkZXNpZ25lZCB0byBkaXN0b3J0IHRoZXNlIG5hdHVyYWwgZm9yY2VzLuKAnSBUaGUgdHJhZGluZyB0aGF0IEhvbGQgQnJvdGhlcnMgd2FzIGZpbmVkIGZvciBvY2N1cnJlZCBmcm9tIGF0IGxlYXN0IEphbnVhcnkgMjAwOSB0byBTZXB0ZW1iZXIgMjAxMCwgYWNjb3JkaW5nIHRvIHRoZSBTRUMgc3RhdGVtZW50LiBGaW5yYSBzYWlkIHRoYXQgRGVtb25zdHJhdGUgd2FzIEhvbGQgQnJvdGhlcnPigJkgbGFyZ2VzdCBhY2NvdW50IGFuZCB0aGF0IHRoZSB0cmFkZXMgcHJpbWFyaWx5IGludm9sdmVkIHRyYWRlcnMgaW4gQ2hpbmEu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATn7y8iAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGYxN2Y3MWQ3MzI4MjYwNDg=</field><field name="symbol" class="java.lang.String">rO0ABXQABE5EQVE=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAToA8iSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3MKPXCj1x</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3MKPXCj1x</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA24UeuFHrh</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA26PXCj1wp</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA2DMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAA7L5A==</field><field name="id" class="java.lang.String">rO0ABXQAEGEzNzA1Y2MyYWYxZDYxZWU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJvvAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDkyNjY=</field><field name="title" class="java.lang.String">rO0ABXQAOU5ZU0UgQ0VPOiBOYXNkYXEgQ29tbXVuaWNhdGlvbiBEdXJpbmcgRmFjZWJvb2sgSVBPIFN1YnBhcg==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATfZ6bCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGNjOGQyMGM4N2QwNDc0YmI=</field><field name="symbol" class="java.lang.String">rO0ABXQABE5EQVE=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATffEAyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1jMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1wo9cKPXD</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1QAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1uFHrhR64</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA0yj1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAACcBjA==</field><field name="id" class="java.lang.String">rO0ABXQAEDI3N2U0MzE1OGQ0Yzc3Yzk=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mM3XAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDEwNTc=</field><field name="title" class="java.lang.String">rO0ABXQAM1NFQyBTZWVrcyBNb3JlIEludmVzdG9yIFByb3RlY3Rpb25zIGZvciBNdW5pIE1hcmtldA==</field><field name="content" class="java.lang.String">rO0ABXQWUVRoZSBTRUMgcmVsZWFzZWQgYSByZXBvcnQgdGhhdCB3YXMgdHdvIHllYXJzIGluIHRoZSBtYWtpbmcgd2hpY2ggZm9jdXNlcyBvbiBpbXByb3ZpbmcgaXNzdWVyIGRpc2Nsb3N1cmVzIGFuZCBvbiBpbmNyZWFzaW5nIGludmVzdG9yIHByb3RlY3Rpb24uIEJ1dCB0aGUgU0VDJ3MgcHJvcG9zZWQgZW5oYW5jZWQgb3ZlcnNpZ2h0IG9mIHRoZSBtYXJrZXQsIHdoaWNoIHdvdWxkIGludm9sdmUgZW5mb3JjZW1lbnQgb2Ygc3RhbmRhcmRzIGZvciBmaW5hbmNpYWwgc3RhdGVtZW50cyBhbmQgcmVxdWlyZW1lbnRzIGZvciBvbmdvaW5nIGRpc2Nsb3N1cmUsIG1heSByaWxlIHNvbWUgaXNzdWVycyBhY2N1c3RvbWVkIHRvIGxlc3Mtc3RyaW5nZW50IHByb2NlZHVyZXMuIFRoZSBTRUMgZW5mb3JjZXMgcnVsZXMgZm9yIHRoZSBtYXJrZXQgdGhhdCBhcmUgd3JpdHRlbiBieSBhIHNlbGYtcmVndWxhdG9yeSBvcmdhbml6YXRpb24gbWFkZSB1cCBvZiBiYW5rcywgaXNzdWVycyBhbmQgYWR2aXNlcnMgY2FsbGVkIHRoZSBNdW5pY2lwYWwgU2VjdXJpdGllcyBSdWxlbWFraW5nIEJvYXJkLiBWYXJpb3VzIGxhd3MgaGF2ZSBsaW1pdGVkIHRoZSBTRUMncyBhYmlsaXR5IHRvIG92ZXJzZWUgc3RhdGVzIGFuZCBsb2NhbCBpc3N1ZXJzLCBsZWFkaW5nIHRvIGEgaG9kZ2Vwb2RnZSBvZiBhY2NvdW50aW5nIHRlY2huaXF1ZXMgYW5kIGZpbmFuY2lhbCBkaXNjbG9zdXJlcyBhdmFpbGFibGUgdG8gaW52ZXN0b3JzIHdlaWdoaW5nIHdoZXRoZXIgdG8gcHVyY2hhc2UgdGhlaXIgZGVidC4gVGhlIGZpbmFuY2lhbCBzdHJ1Z2dsZXMgb2Ygc3RhdGVzIGFuZCBjaXRpZXMgYXMgYSByZXN1bHQgb2YgdGhlIHdlYWsgZWNvbm9teSBvdmVyIHRoZSBsYXN0IHNldmVyYWwgeWVhcnMgaGF2ZSBjcmVhdGVkIGEgZGVzaXJlIGZvciBiZXR0ZXIgZGlzY2xvc3VyZSBhbmQgcmVjb3JkLWtlZXBpbmcuIFNldmVyYWwgaGlnaC1wcm9maWxlIG11bmljaXBhbCBkZWZhdWx0cyBhbmQgYmFua3J1cHRjeSBmaWxpbmdzLCBpbmNsdWRpbmcgSmVmZmVyc29uIENvdW50eSwgQWxhYmFtYSwgYW5kIHNldmVyYWwgY2l0aWVzIGluIENhbGlmb3JuaWEsIGFsb25nIHdpdGggZ3Jvd2luZyBwdWJsaWMgcGVuc2lvbiBidXJkZW5zIGhhdmUgbGVmdCBpbnZlc3RvcnMgYW5kIHBvbGl0aWNhbCBsZWFkZXJzIGVhZ2VyIGZvciBtb3JlIGluZm9ybWF0aW9uLiBTbywgdG9vLCBoYXZlIGNvbmNlcm5zIHRoYXQgaW5zdGl0dXRpb25hbCBpbnZlc3RvcnMgaGF2ZSBhbiB1bmZhaXIgYWR2YW50YWdlIG92ZXIgaW5kaXZpZHVhbCBidXllcnMuICJXZSBoZWFyZCB0aGUgY29uY2VybnMgdm9pY2VkIGJ5IG1hbnkgLi4uIHRoYXQgaW52ZXN0b3JzIGluIHRoZSBtdW5pY2lwYWwgc2VjdXJpdGllcyBtYXJrZXQgZG9uJ3QgaGF2ZSBhbGwgdGhlIHByb3RlY3Rpb25zIGFuZCBhY2Nlc3MgdG8gaW5mb3JtYXRpb24gdGhhdCB0aGV5IG5lZWQsIiBzYWlkIFNFQyBDb21taXNzaW9uZXIgRWxpc3NlIFdhbHRlciBpbiBhIGNvbmZlcmVuY2UgY2FsbCB3aXRoIHJlcG9ydGVycy4gVGhlc2UgY29uY2VybnMgaGF2ZSBiZWVuIHJhaXNlZCBieSBpc3N1ZXJzIGFzIHdlbGwuIEluIEFsYWJhbWEncyBKZWZmZXJzb24gQ291bnR5LCB3aG9zZSAkNC4yMyBiaWxsaW9uIGJhbmtydXB0Y3kgaW4gTm92ZW1iZXIgaW52b2x2ZWQgY3JlZGl0IHN3YXBzIGFuZCBvdGhlciBmaW5hbmNpYWwgZGVyaXZhdGl2ZXMsIGdvdmVybm1lbnQgb2ZmaWNpYWxzIHNhaWQgZ3JlYXRlciBkaXNjbG9zdXJlIG1pZ2h0IGhhdmUgcHJldmVudGVkIEFtZXJpY2EncyBiaWdnZXN0LWV2ZXIgbXVuaWNpcGFsIGJhbmtydXB0Y3kuICJHb29kIGZvciB0aGVtLCIgQ291bnR5IENvbW1pc3Npb25lciBKaW1taWUgU3RlcGhlbnMgc2FpZCBvbiBUdWVzZGF5IGluIEJpcm1pbmdoYW0uICJJZiB3ZSBoYWQgdGhvc2UgcmVndWxhdGlvbnMgaW4gcGxhY2UsIGJlZm9yZSBhbGwgdGhlIHN3YXAgYWdyZWVtZW50cywgSSB3b25kZXIgaWYgd2Ugd291bGQgYmUgaGVyZS4iIEhvd2V2ZXIsIEZyYW5rIEhvYWRsZXksIFdpc2NvbnNpbidzIGNhcGl0YWwgZmluYW5jZSBkaXJlY3Rvciwgc2FpZCB0aGUgU0VDIGFwcGVhcnMgdG8gYmUgYXNraW5nIGZvciAiZXZlcnl0aGluZyBpbmNsdWRpbmcgdGhlIGtpdGNoZW4gc2luay4iIEhlIHNhaWQgc29tZSBvZiB0aGUgU0VDJ3MgcmVjb21tZW5kYXRpb25zIHdvdWxkIGludm9sdmUgcmV2aXNpdGluZyAxOTc1J3MgVG93ZXIgQW1lbmRtZW50LCB3aGljaCBsaW1pdGVkIHRoZSBTRUMncyBhbmQgdGhlIE1TUkIncyBhdXRob3JpdHkgdG8gcmVxdWlyZSBtdW5pIGlzc3VlciByZXBvcnRpbmcgcmVsYXRlZCB0byB0aGVpciBib25kIHNhbGVzLiBUaGUgU2VjdXJpdGllcyBJbmR1c3RyeSBhbmQgRmluYW5jaWFsIE1hcmtldHMgQXNzb2NpYXRpb24gd2VsY29tZWQgcmVsaWVmIGZvciBpdHMgYnJva2VyLWRlYWxlciBtZW1iZXJzIGZyb20gY3VycmVudCBkaXNjbG9zdXJlIHJlcXVpcmVtZW50cy4gIlNJRk1BIGFuZCBpdHMgbWVtYmVycyBoYXZlIGJlZW4gZnJ1c3RyYXRlZCB0aGF0IG1hbnkgYXNwZWN0cyBvZiB0aGUgY3VycmVudCBkaXNjbG9zdXJlIHJlZ2ltZSBhcmUgYWZmZWN0ZWQgaW5kaXJlY3RseSB0aHJvdWdoIHRoZSBicm9rZXItZGVhbGVyIGNvbW11bml0eSwiIHNhaWQgTGVzbGllIE5vcndvb2QsIFNJRk1BJ3MgY28taGVhZCBvZiBtdW5pY2lwYWwgc2VjdXJpdGllcy4gIldlIGRvIGhhdmUgY29uY2VybnMgYWJvdXQgYW55IGNoYW5nZXMgdGhhdCBtaWdodCBjYXVzZSBzaWduaWZpY2FudCBhZGRpdGlvbmFsIGJ1cmRlbnMgdG8gdGhlIGlzc3VlciBjb21tdW5pdHkuIiBJbnZlc3RvcnMsIGhvd2V2ZXIsIG1heSBmaW5kIHRoZSBTRUMncyBwcm9wb3NhbHMgYmVuZWZpY2lhbC4gIlRoZXkncmUgcmVjb21tZW5kaW5nIHNvbWUgcHJldHR5IHN0cm9uZyBpbXByb3ZlZCBkaXNjbG9zdXJlIHByYWN0aWNlcyB0aGF0IGludmVzdG9ycyBhcmUgbGlrZWx5IHRvIHdlbGNvbWUsIiBzYWlkIFJpY2hhcmQgQ2ljY2Fyb25lLCBhIG1hbmFnaW5nIGRpcmVjdG9yIGF0IE1jRG9ubmVsbCBJbnZlc3RtZW50IE1hbmFnZW1lbnQgaW4gT2FrIEJyb29rLCBJbGxpbm9pcy4gwqAgSEVBREFDSEVTIEZPUiBJU1NVRVJTIFJlZ3VsYXRvcnMgYXJlIHdvcnJpZWQgdGhhdCBsYWNrIG9mIGRpc2Nsb3N1cmUgaXMgbWFza2luZyBmcmF1ZCBvciBvdGhlciBwcm9ibGVtcy4gVHdvIHllYXJzIGFnbywgdGhlIFNFQyByYXBwZWQgdGhlIHN0YXRlIG9mIE5ldyBKZXJzZXkgZm9yIG5vdCBmdWxseSBkaXNjbG9zaW5nIHRoZSBmaW5hbmNpYWwgdHJvdWJsZXMgb2YgaXRzIHB1YmxpYyBwZW5zaW9uIHN5c3RlbS4gRXZlbiBhcyB0aGUgcmVndWxhdG9yeSB3aGlwIGNyYWNrcyBtb3JlIGZyZXF1ZW50bHkgaW4gdGhlIG11bmkgbWFya2V0LCBpc3N1ZXJzIGFuZCB1bmRlcndyaXRlcnMgb2Z0ZW4gZmlsZSBkaXNjbG9zdXJlcyBzdWNoIGFzIGFubnVhbCBmaW5hbmNpYWwgc3RhdGVtZW50cyBsYXRlIG9yIG5vdCBhdCBhbGwuIExhc3QgQXVndXN0LCB0aGUgTVNSQiBzYWlkIGl0IHJlY2VpdmVkIDMsNTUwIG5vdGljZXMgb3ZlciB0aGUgY291cnNlIG9mIHR3byB5ZWFycyB0aGF0IGNpdGllcywgc3RhdGVzIGFuZCBsb2NhbCBhdXRob3JpdGllcyB3b3VsZCBiZSBsYXRlIGZpbGluZyBhbm51YWwgZmluYW5jaWFsIGluZm9ybWF0aW9uLCBhdCBhbiBhdmVyYWdlIHJhdGUgb2YgMTQ4IG5vdGljZXMgcGVyIG1vbnRoLiBUb20gRHJlc3NsYXIsIGEgc3Bva2VzbWFuIGZvciBDYWxpZm9ybmlhIFRyZWFzdXJlciBCaWxsIExvY2t5ZXIsIHNhaWQgYSBwcmVsaW1pbmFyeSByZXZpZXcgb2YgdGhlIFNFQydzIHJlcG9ydCBzaG93cyBpdCBpcyBub3Qgc2Vla2luZyBhIG9uZS1zaXplLWZpdHMtYWxsIGFwcHJvYWNoIGZvciBpc3N1ZXJzLCBhbmQgdGhlIGNhbGxzIGFyZSBmb3IgaW5jcmVtZW50YWwgYWRkaXRpb25zIHRvIGZlZGVyYWwgcmVndWxhdGlvbi4gQnV0IEJlbiBXYXRraW5zLCBoZWFkIG9mIEZsb3JpZGEncyBEaXZpc2lvbiBvZiBCb25kIEZpbmFuY2UsIHNhaWQgY29tcGxpYW5jZSBpcyBnb2luZyB0byBiZSBjb21wbGljYXRlZCBmb3Igc21hbGxlciBpc3N1ZXJzLiAiSXQgc291bmRzIGNvbXBlbGxpbmcgYnV0IHdvdWxkIHByb3ZlIGJ1cmRlbnNvbWUgdG8gc21hbGwgaXNzdWVycywiIGhlIHNhaWQuICJJIGFtIGEgdmVyeSBkaWZmZXJlbnQgaXNzdWVyIGZyb20gdGhlIENpdHkgb2YgSGlhbGVhaC4gV2UgaGF2ZSB0aGUgcmVzb3VyY2VzIGFuZCB3ZSBjYW4gY29tcGx5LiBTbWFsbGVyIGlzc3VlcnMgbWlnaHQgZmluZCBjb21wbGlhbmNlIHByb2JsZW1hdGljYWwuIiDCoCBQUklDRSBESVNDT1ZFUlksIFRSQU5TUEFSRU5DWSBBRERSRVNTRUQgV2FsdGVyIHRvbGQgcmVwb3J0ZXJzIHRoYXQgYW5vdGhlciBnb2FsIG9mIHRoZSByZXBvcnQgaXMgdG8gYWRkcmVzcyBwcmljZSBkaXNjb3ZlcnkgYW5kIHByaWNlIHRyYW5zcGFyZW5jeSBpbiB0aGUgbWFya2V0LiBUaGUgbXVuaSBtYXJrZXQgaXMgbGFyZ2VseSBpbGxpcXVpZCwgYW5kIG1vc3QgYm9uZHMgZG8gbm90IHRyYWRlIG9uIGEgZGFpbHkgYmFzaXMsIG1lYW5pbmcgdGhlIHByaWNpbmcgb2YgdGhlc2UgYm9uZHMgaXMgbGFyZ2VseSBkZXRlcm1pbmVkIGJ5IHRoZSBiYW5rcyBhbmQgYnJva2VyYWdlcy4gVGhlIHF1ZXN0aW9uIGhhcyBjb21lIHVwIGluIHRoZSB3YWtlIG9mIG1hbmlwdWxhdGlvbiBieSBhIG51bWJlciBvZiBiYW5rcyBvZiB0aGUgTElCT1IgcmF0ZSwgd2hpY2ggaXMgbWFyZ2luYWxseSB1c2VkIGluIHRoZSBtdW5pIG1hcmtldC4gT24gVHVlc2RheSwgTVNSQiBDaGFpcm1hbiBBbGFuIFBvbHNreSBzYWlkIHRoYXQgdGhlIGJvYXJkICJhcHByZWNpYXRlcyB0aGUgd29yayBvZiB0aGUgU0VDLCIgYnV0IHRoYXQgdGhlIGJvYXJkIHN0aWxsIG11c3QgcmV2aWV3IHRoZSByZWNvbW1lbmRhdGlvbnMuIFRoZSBNU1JCIGlzIHJldmlld2luZyBob3cgc2V2ZXJhbCBtYXJrZXQgaW5kZXhlcyBhcmUgcHJlcGFyZWQsIGluY2x1ZGluZyB0aG9zZSBwdWJsaXNoZWQgYnkgTXVuaWNpcGFsIE1hcmtldCBEYXRhLCBhIFRob21zb24gUmV1dGVycyBjb21wYW55LiBUaGUgTU1EIGJlbmNobWFya3MgYXJlIHVzZWQgdG8gc2V0IHJhdGVzIGZvciBzdGF0ZXMsIGNpdGllcyBhbmQgb3RoZXIgaXNzdWVycyB0aGF0IHNlbGwgbXVuaSBkZWJ0LiBUaG9tc29uIFJldXRlcnMgaGFzIGJlZW4gaG9sZGluZyBkaXNjdXNzaW9ucyB3aXRoIHRoZSBTRUMgYW5kIE1TUkIgaW4gdGhlIGNvdXJzZSBvZiB0aGVpciByZXZpZXdzIG9mIHRoZSBtdW5pIG1hcmtldC4gSmFtZXMgU21pdGgsIENFTyBvZiBUaG9tc29uIFJldXRlcnMgQ29ycCAsIHNhaWQgVHVlc2RheSBvbiBhIGNvbmZlcmVuY2UgY2FsbCBmb2xsb3dpbmcgdGhlIHJlbGVhc2Ugb2YgdGhlIGNvbXBhbnkncyBlYXJuaW5ncyB0aGF0ICJ3ZSBnZXQgbG90cyBvZiBxdWVzdGlvbnMganVzdCBhY3Jvc3MgdGhlIGJvYXJkIG9uIHRoZXNlIGlzc3VlcyBhbmQgd2UgYXJlIGFsd2F5cyB2ZXJ5IGZvcnRoY29taW5nIGFuZCBjb29wZXJhdGl2ZSB3aXRoIGFsbCByZWd1bGF0b3J5IGFnZW5jaWVzIG9uIGFsbCB0aGUgbWF0dGVycyB0aGF0IHRoZXkgYXJlIGludmVzdGlnYXRpbmcuIEJ1dCBhdCB0aGlzIHBvaW50IHdlIGRvIG5vdCBiZWxpZXZlIHdlIGhhdmUgYW55IGV4cG9zdXJlIGF0IHRoaXMgcG9pbnQgYXQgYWxsLiI=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATjbZ6iAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDFjM2MyODg5YmVlMWE4MjA=</field><field name="symbol" class="java.lang.String">rO0ABXQACVRSSS1QQi5UTw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATjgjgSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA18zMzMzMz</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA18zMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA15mZmZmZm</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA15mZmZmZm</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA0XrhR64Uf</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAI/A==</field><field name="id" class="java.lang.String">rO0ABXQAEDMzOTcwMTcyYmJhZmFiMjA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mM7eAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQAAzcxNg==</field><field name="title" class="java.lang.String">rO0ABXQAL1JlZ3VsYXRvcnMgTG9vayBJbnRvIENoaW5hIEZpcm1zJyBMaXN0aW5nIFBsb3lz</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATLnDUiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDk1YmY2ZTYyODgxZWQ1NWE=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNJTk8=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATLsM6SAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/8zMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/+PXCj1wo9</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/8AAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/9mZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/9mZmZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABZdA==</field><field name="id" class="java.lang.String">rO0ABXQAEGMzODNkM2Y1ZThiNjliZDc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mK0sAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIxNDY2</field><field name="title" class="java.lang.String">rO0ABXQAOVN0YW5kYXJkIENoYXJ0ZXJlZOKAmXMgTlkgUHJvYmUgRW5kcyBhcyBVUyBJbnF1aXJpZXMgTG9vbQ==</field><field name="content" class="java.lang.String">rO0ABXQv5lN0YW5kYXJkIENoYXJ0ZXJlZCBQbGMsIGhhdmluZyBzZXR0bGVkIGEgTmV3IFlvcmsgbW9uZXkgbGF1bmRlcmluZyBwcm9iZSBmb3IgJDM0MCBtaWxsaW9uIHRoZSBkYXkgYmVmb3JlIGl0IHdhcyB0byBkZWZlbmQgaXRzIHJpZ2h0IHRvIG9wZXJhdGUgaW4gdGhlIHN0YXRlLCBzdGlsbCBmYWNlcyBmZWRlcmFsIGlucXVpcmllcyBvdmVyIGNsYWltcyBpdCBoZWxwZWQgc2FuY3Rpb25lZCBuYXRpb25zIGluY2x1ZGluZyBJcmFuIGlsbGVnYWxseSBmdW5uZWwgbW9uZXkgdGhyb3VnaCB0aGUgVS5TLiBSZWd1bGF0b3JzIGluY2x1ZGluZyB0aGUgVS5TLiBUcmVhc3VyeSwgRmVkZXJhbCBSZXNlcnZlLCBKdXN0aWNlIERlcGFydG1lbnQgYW5kIE1hbmhhdHRhbiBEaXN0cmljdCBBdHRvcm5leSBkZWNsaW5lZCBpbW1lZGlhdGUgYXR0ZW1wdHMgYXQgYSBnbG9iYWwgc2V0dGxlbWVudCwgc2FpZCB0d28gcGVvcGxlIGZhbWlsaWFyIHdpdGggdGhlIG1hdHRlci4gQSBjb29yZGluYXRlZCBlZmZvcnQgd2FzIGFscmVhZHkgaW4gcHJvZ3Jlc3MgYmVmb3JlIE5ldyBZb3Jr4oCZcyB1bmlsYXRlcmFsIGRlYWwsIGFubm91bmNlZCB5ZXN0ZXJkYXkgYnkgZmluYW5jaWFsIHJlZ3VsYXRvciBCZW5qYW1pbiBMYXdza3ksIG9uZSBvZiB0aGUgcGVvcGxlIHNhaWQuIFRoZSBhZ3JlZW1lbnQgZG9lc27igJl0IHRha2UgaW50byBhY2NvdW50IGFsbCBvZiB0aGUgYmFua+KAmXMgYWxsZWdlZCB2aW9sYXRpb25zLCBpbmNsdWRpbmcgdGhvc2UgaW52b2x2aW5nIG5hdGlvbnMgc3VjaCBhcyBTdWRhbiwgc2FpZCBvbmUgb2YgdGhlIHBlb3BsZSwgd2hvIGFkZGVkIHRoYXQgU2VwdGVtYmVyIGlzIHRoZSBlYXJsaWVzdCBhIHVuaXZlcnNhbCBkZWFsIG1heSBiZSByZWFjaGVkLiBTaGFyZXMgb2YgdGhlIGJhbmsgcm9zZSBhcyBtdWNoIGFzIDUuMSBwZXJjZW50IGluIExvbmRvbiB0b2RheSBhcyB0aGUgTmV3IFlvcmsgc2V0dGxlbWVudCByZW1vdmVkIG9uZSBwcmVzc2luZyByaXNrIHRvIHRoZSBiYW5rLiDigJxGcm9tIHRoZSBiYW5r4oCZcyBwZXJzcGVjdGl2ZSwgdGhleSBuZWVkZWQgdG8gZ2V0IHRoaXMgYmVoaW5kIHRoZW0s4oCdIEFubiBHcmFoYW0sIGRpcmVjdG9yIG9mIHRoZSBCdXNpbmVzcyBMYXcgSW5zdGl0dXRlIGF0IEhhbWxpbmUgVW5pdmVyc2l0eSBTY2hvb2wgb2YgTGF3IGluIFN0LiBQYXVsLCBNaW5uZXNvdGEsIHNhaWQgb2YgdGhlIE5ldyBZb3JrIGFncmVlbWVudC4g4oCcSGFkIHRoaXMgYWN0aW9uIGdvbmUgZm9yd2FyZCwgdGhlIHBvdGVudGlhbCB3YXMgdGhhdCB0aGV5IGNvdWxkIGxvc2UgdGhlaXIgbGljZW5zZSB0byBvcGVyYXRlIGluIE5ldyBZb3JrLCBhbmQgdGhhdCB3b3VsZCBoYXZlIGJlZW4gZGV2YXN0YXRpbmcgdG8gdGhlaXIgb3BlcmF0aW9ucy7igJ0gT25lIGFuYWx5c3QgZXN0aW1hdGVkIHRoYXQgdGhlIGJhbmvigJlzIGxvc3Mgb2YgaXRzIE5ldyBZb3JrIGxpY2Vuc2UgY291bGQgaGF2ZSByZXN1bHRlZCBpbiBhIDQwIHBlcmNlbnQgZHJvcCBpbiBlYXJuaW5ncy4gTGF3c2t54oCZcyBPcmRlciBPbiBBdWcuIDYsIExhd3NreSBpc3N1ZWQgYW4gb3JkZXIgYWNjdXNpbmcgU3RhbmRhcmQgQ2hhcnRlcmVkIG9mIGhlbHBpbmcgSXJhbiBsYXVuZGVyIGFib3V0ICQyNTAgYmlsbGlvbiBpbiB2aW9sYXRpb24gb2YgZmVkZXJhbCBsYXdzLiBIZSBhY2N1c2VkIHRoZSBiYW5rIG9mIGEgZGVjYWRlIG9mIGRlY2VwdGlvbiwgaW5jbHVkaW5nIGtlZXBpbmcgZmFsc2UgcmVjb3JkcywgaW4gaGFuZGxpbmcgbHVjcmF0aXZlIHdpcmUgdHJhbnNmZXJzIGZvciBJcmFuaWFuIGNsaWVudHMuIFRoZSBiYW5rIHNlbnQgdGhlbSB0aHJvdWdoIGl0cyBOZXcgWW9yayB1bml0IGluIHNvLWNhbGxlZCBVLVR1cm4gdHJhbnNhY3Rpb25zIHdpdGggY2xpZW50IG5hbWVzIG9taXR0ZWQgdG8gaGlkZSB0aGVpciBwcm92ZW5hbmNlLCBMYXdza3kgc2FpZC4gVGhlIE5ldyBZb3JrIHJlZ3VsYXRvciBzYWlkIHllc3RlcmRheSBpbiBhIHN0YXRlbWVudCB0aGF0IOKAnHRoZSBwYXJ0aWVzIGhhdmUgYWdyZWVkIHRoYXQgdGhlIGNvbmR1Y3QgYXQgaXNzdWUgaW52b2x2ZWQgdHJhbnNhY3Rpb25zIG9mIGF0IGxlYXN0ICQyNTAgYmlsbGlvbi7igJ0gVGhlICQzNDAgbWlsbGlvbiBmaW5lIHdpbGwgZ28gdG8gTGF3c2t54oCZcyBhZ2VuY3ksIE5ldyBZb3Jr4oCZcyBEZXBhcnRtZW50IG9mIEZpbmFuY2lhbCBTZXJ2aWNlcywgb3IgREZTLCBhbmQgdGhlIHN0YXRlLiBBcyBwYXJ0IG9mIHRoZSBzZXR0bGVtZW50LCBOZXcgWW9yayBzYWlkIHRoZSBiYW5rIGFncmVlZCB0byBpbnN0YWxsIGFuIGluZGVwZW5kZW50IG9uLXNpdGUgbW9uaXRvciBmb3IgYXQgbGVhc3QgdHdvIHllYXJzIHdobyB3aWxsIHJlcG9ydCBkaXJlY3RseSB0byByZWd1bGF0b3JzLiBFeGFtaW5lcnMgZnJvbSB0aGUgREZTIHdpbGwgYWxzbyBiZSBwbGFjZWQgYXQgdGhlIGJhbmsuIEluZGl2aWR1YWwgUmVndWxhdG9yIFRoZSBhY2NvcmQgbWF5IGJlIHRoZSBsYXJnZXN0IGV2ZXIgcGFpZCB0byBhbiBpbmRpdmlkdWFsIHJlZ3VsYXRvciBhcyBwYXJ0IG9mIGEgbW9uZXkgbGF1bmRlcmluZyBhY2NvcmQuIEluIEp1bmUsIElORyBCYW5rIE5WIGFncmVlZCB0byBwYXkgJDYxOSBtaWxsaW9uIHRvIHNldHRsZSBzaW1pbGFyIGFsbGVnYXRpb25zLiBUaGF0IHN1bSB3YXMgc3BsaXQgZXZlbmx5IGJldHdlZW4gYSAkMzA5LjUgbWlsbGlvbiBwYXltZW50IHRvIHRoZSBmZWRlcmFsIGdvdmVybm1lbnQgYW5kIGFuIGVxdWFsIHN1bSB0byB0aGUgTWFuaGF0dGFuIERpc3RyaWN0IEF0dG9ybmV5LiBBIHBlcnNvbiBmYW1pbGlhciB3aXRoIHRoZSBOZXcgWW9yayBwcm9iZSBvZiBTdGFuZGFyZCBDaGFydGVyZWQgc2FpZCB0aGF0IExhd3NreSBoYWQgc291Z2h0IGFzIG11Y2ggYXMgJDcwMCBtaWxsaW9uIHRvIHNldHRsZSBoaXMgaW52ZXN0aWdhdGlvbi4gU3RhbmRhcmQgQ2hhcnRlcmVkIHNhaWQgaW4gYSBzdGF0ZW1lbnQgeWVzdGVyZGF5IHRoYXQg4oCcYSBmb3JtYWwgYWdyZWVtZW50IGNvbnRhaW5pbmcgdGhlIGRldGFpbGVkIHRlcm1zIG9mIHRoZSBzZXR0bGVtZW50IGlzIGV4cGVjdGVkIHRvIGJlIGNvbmNsdWRlZCBzaG9ydGx5LuKAnSBJdCDigJxjb250aW51ZXMgdG8gZW5nYWdlIGNvbnN0cnVjdGl2ZWx5IHdpdGggdGhlIG90aGVyIHJlbGV2YW50IFUuUy4gYXV0aG9yaXRpZXMs4oCdIHRoZSBiYW5rIHNhaWQuIExvbmRvbi1iYXNlZCBTdGFuZGFyZCBDaGFydGVyZWQgZ2VuZXJhdGVzIGFsbW9zdCA5MCBwZXJjZW50IG9mIGl0cyBwcm9maXQgYW5kIHJldmVudWUgaW4gQXNpYSwgQWZyaWNhIGFuZCB0aGUgTWlkZGxlIEVhc3QuIFRoZSBiYW5r4oCZcyBzaGFyZXMgY2xpbWJlZCA0LjEgcGVyY2VudCB0byAxLDQyNi41MCBwZW5jZSBpbiBMb25kb24uIFRoZSBzZXR0bGVtZW50IGJyaW5ncyB0byBhbiBlbmQgYSB3ZWVrLWxvbmcgc2hvd2Rvd24gYmV0d2VlbiBMYXdza3ksIDQyLCBOZXcgWW9ya+KAmXMgdG9wIGJhbmtpbmcgcmVndWxhdG9yLCBhbmQgU3RhbmRhcmQgQ2hhcnRlcmVkIENoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyIFBldGVyIFNhbmRzLCA1MC4g4oCYUm9ndWUgQmFua+KAmSBMYXdza3nigJlzIG9yZGVyIGxhc3Qgd2VlayBjYXVnaHQgdGhlIGJhbmvigJlzIG1hbmFnZW1lbnQgdGVhbSBieSBzdXJwcmlzZS4gTGF3c2t5IGFsbGVnZWQgdGhhdCBTdGFuZGFyZCBDaGFydGVyZWQgd2FzIGEg4oCccm9ndWUgYmFua+KAnSB0aGF0IGhhZCBleGVjdXRlZCA2MCwwMDAgZG9sbGFyLWJhc2VkIHdpcmUgdHJhbnNhY3Rpb25zIGZvciBJcmFuaWFuIGNsaWVudHMgZnJvbSAyMDAxIHRvIDIwMDcuIFN0YW5kYXJkIENoYXJ0ZXJlZOKAmXMgYXBwYXJlbnQgZWZmb3J0IHRvIGNvbmNlYWwgdGhlIGlkZW50aXR5IG9mIGl0cyBJcmFuaWFuIGNvdW50ZXJwYXJ0aWVzIHZpb2xhdGVkIHRoZSB0ZXJtcyBvZiBhIDIwMDQgc2V0dGxlbWVudCBiZXR3ZWVuIGl0IGFuZCB0aGUgc3RhdGUgb2YgTmV3IFlvcmssIGluIHdoaWNoIHRoZSBVLksuIGJhbmsgcGxlZGdlZCDigJx0byBlbnN1cmUgY29tcGxpYW5jZSB3aXRoIGFsbCByZWNvcmQtIGtlZXBpbmcgYW5kIHJlcG9ydGluZyByZXF1aXJlbWVudHMs4oCdIGFjY29yZGluZyB0byB0aGUgb3JkZXIuIEV2ZW4gYmVmb3JlIDIwMDEsIHRoZSBvcmRlciBzdGF0ZWQsIHRoZSBiYW5r4oCZcyBnZW5lcmFsIGNvdW5zZWwg4oCcZW1icmFjZWQgYSBmcmFtZXdvcmsgZm9yIHJlZ3VsYXRvcnkgZXZhc2lvbuKAnSBieSBrZWVwaW5nIGl0cyBOZXcgWW9yayBicmFuY2ggaW4gdGhlIGRhcmsgYWJvdXQgSXJhbiB0cmFuc2FjdGlvbnMuIFRoZSBiYW5rIGFsbGVnZWRseSBhY2NvbXBsaXNoZWQgdGhpcyBnb2FsIGJ5IHN0cmlwcGluZyBvdXQgdGhlIG5hbWUgb2YgSXJhbmlhbiBjbGllbnRzIHNvIGFzIG5vdCB0byBzbG93IGRvd24gdHJhbnNmZXJzIHRoYXQgbWlnaHQgaGF2ZSB0byBiZSByZXZpZXdlZCBmb3IgY29tcGxpYW5jZSB3aXRoIFUuUy4gZWNvbm9taWMgc2FuY3Rpb25zLiBUaG9zZSByZXN0cmljdGlvbnMgYWxsb3dlZCBzb21lIHRyYW5zYWN0aW9ucyBidXQgbm90IG90aGVycyBhcyBsb25nIGFzIG5vbi1JcmFuaWFuIGJhbmtzIHdlcmUgaW52b2x2ZWQgb24gYm90aCBlbmRzLiBGZWRlcmFsIENvbnRyb2xzIEluIGFkZGl0aW9uIHRvIGV2YWRpbmcgZmVkZXJhbCBjb250cm9scywgU3RhbmRhcmQgQ2hhcnRlcmVkIGNvdmVyZWQgdXAgaXRzIHBsYW4gdG8gZ3JhYiBtYXJrZXQgc2hhcmUgaW4gdGhlIElyYW5pYW4gZnVuZHMgbWFya2V0IGJ5IGZhbHNpZnlpbmcgYnVzaW5lc3MgcmVjb3JkcywgbWFraW5nIGZhbHNlIHN0YXRlbWVudHMsIG1haW50YWluaW5nIGluYWNjdXJhdGUgYm9va3MsIG9ic3RydWN0aW5nIG92ZXJzaWdodCBhbmQgZmFpbGluZyB0byByZXBvcnQgbWlzY29uZHVjdCBwcm9tcHRseSwgYWNjb3JkaW5nIHRvIExhd3NreeKAmXMgb3JkZXIuIEZyb20gMjAwNCB0aHJvdWdoIDIwMDcsIFN0YW5kYXJkIENoYXJ0ZXJlZCB3YXMgc3ViamVjdCB0byBmb3JtYWwgYWN0aW9uIG92ZXIgb3RoZXIgcmVndWxhdG9yeSBjb21wbGlhbmNlIGZhaWx1cmVzIHJlbGF0ZWQgdG8gdGhlIEJhbmsgU2VjcmVjeSBBY3QsIGFudGktbW9uZXkgbGF1bmRlcmluZyBwb2xpY2llcyBhbmQgcHJvY2VkdXJlcyBhbmQgcmVndWxhdGlvbnMgb2YgdGhlIFUuUy4gT2ZmaWNlIG9mIEZvcmVpZ24gQXNzZXRzIENvbnRyb2wsIHRoZSBtYWluIG92ZXJzZWVyIG9mIElyYW4gdHJhbnNhY3Rpb25zLiBJbiBhIDIwMDQgYWdyZWVtZW50IHdpdGggcmVndWxhdG9ycywgdGhlIGJhbmsgcHJvbWlzZWQgdG8gbW9uaXRvciBhbmQgaW1wcm92ZSBtb25leS1sYXVuZGVyaW5nIGNvbnRyb2xzLiBUaGUgcmVzdHJpY3Rpb25zIG9mIHRoZSBhZ3JlZW1lbnQgd2VyZSBsaWZ0ZWQgaW4gMjAwNyBiZWNhdXNlIHRoZSBiYW5rIHByb3ZpZGVkIGEg4oCcd2F0ZXJlZC1kb3du4oCdIHJlcG9ydCBvZiBjb21wbGlhbmNlLCBhY2NvcmRpbmcgdG8gTGF3c2t54oCZcyBvcmRlci4gQmFuayBzdGF0ZW1lbnRzIOKAnG1pc2xlZOKAnSB0aGUgZGVwYXJ0bWVudCBpbnRvIGxpZnRpbmcgdGhlIHJlc3RyaWN0aW9ucyBvZiB0aGUgMjAwNCBhZ3JlZW1lbnQsIHRoZSBvcmRlciBzdGF0ZWQuIFRoZSBvcmRlciBjaXRlZCBiYW5rIGUtbWFpbHMgYW5kIG90aGVyIGludGVybmFsIGRvY3VtZW50cyB0byBzdXBwb3J0IGl0cyBhY2N1c2F0aW9ucy4gQmFuayBPYnNjZW5pdHkgSW4gb25lIHN1Y2ggbWVzc2FnZSwgdGhlIGhlYWQgb2YgU3RhbmRhcmQgQ2hhcnRlcmVk4oCZcyBVLlMuIHVuaXQgd2FybmVkIGhpcyBzdXBlcmlvcnMgaW4gTG9uZG9uIGluIDIwMDYgdGhhdCB0aGUgYmFua+KAmXMgYWN0aW9ucyBjb3VsZCBleHBvc2UgaXQgdG8g4oCcY2F0YXN0cm9waGljIHJlcHV0YXRpb25hbCBkYW1hZ2Uu4oCdIEhlIHJlY2VpdmVkIGEgcmVwbHkgcmVmZXJyaW5nIHRvIFUuUy4gZW1wbG95ZWVzIHdpdGggYW4gb2JzY2VuaXR5LCBhY2NvcmRpbmcgdG8gTGF3c2t54oCZcyBvcmRlci4g4oCcV2hvIGFyZSB5b3UgdG8gdGVsbCB1cywgdGhlIHJlc3Qgb2YgdGhlIHdvcmxkLCB0aGF0IHdl4oCZcmUgbm90IGdvaW5nIHRvIGRlYWwgd2l0aCBJcmFuaWFucz/igJ0gYSBiYW5rIHN1cGVyaW9yIGluIExvbmRvbiBzYWlkLCBhY2NvcmRpbmcgdG8gdGhlIG9yZGVyLiBTdGFuZGFyZCBDaGFydGVyZWTigJlzIFNhbmRzIG1vdW50ZWQgYW4gYWdncmVzc2l2ZSBkZWZlbnNlIGFnYWluc3QgTGF3c2t5LCB0ZWxsaW5nIGludmVzdG9ycyBsYXN0IHdlZWsgdGhhdCBtb3JlIHRoYW4gOTkgcGVyY2VudCBvZiB0aGUgSXJhbmlhbiB0cmFuc2FjdGlvbnMgd2VyZSBpbiBjb21wbGlhbmNlIHdpdGggZXhpc3RpbmcgVS5TLiBsYXdzLiBMYXdza3nigJlzIG9yZGVyIGFuZ2VyZWQgVS5LLiBvZmZpY2lhbHMsIHdobyB2aWV3ZWQgaXQgYXMgYW4gYXR0YWNrIG9uIExvbmRvbuKAmXMgc3RhdHVzIGFzIGEgZmluYW5jaWFsIGNlbnRlci4gSW4gdGhlIFUuUy4sIHJlZ3VsYXRvcnMgaW5jbHVkaW5nIHRoZSBUcmVhc3VyeSBEZXBhcnRtZW50LCB0aGUgRmVkZXJhbCBSZXNlcnZlIGFuZCB0aGUgTWFuaGF0dGFuIERpc3RyaWN0IEF0dG9ybmV5IGNvbXBsYWluZWQgcHJpdmF0ZWx5IGluIHB1Ymxpc2hlZCByZXBvcnRzIHRoYXQgTGF3c2t54oCZcyBvcmRlciB3YXMgYSBwdWJsaWNpdHkgc3R1bnQgdGhhdCBkaXNydXB0ZWQgdGhlaXIgb3duIHByb2JlcyBvZiB0aGUgbWF0dGVyLiBVbmRlcmN1dHRpbmcgRW5mb3JjZW1lbnQg4oCcSSBjYW7igJl0IHRoaW5rIG9mIGFub3RoZXIgY2FzZSB3aGVyZSB0aGVyZSBoYXMgYmVlbiBzdWNoIHVuaWZvcm1pdHkgYW1vbmcgZmVkZXJhbCByZWd1bGF0b3JzIHVuZGVyY3V0dGluZyBhbiBlbmZvcmNlbWVudCBjYXNlLOKAnSBzYWlkIE5laWwgQmFyb2Zza3ksIGEgZm9ybWVyIGZlZGVyYWwgcHJvc2VjdXRvciB3aG8gb3ZlcnNhdyB0aGUgVS5TLiBUcm91YmxlZCBBc3NldCBSZWxpZWYgUHJvZ3JhbSBhbmQgd3JvdGUg4oCcQmFpbG91dCzigJ0gYSBib29rIHRoYXQgY3JpdGljaXplcyB3aGF0IGhlIGNhbGxzIHRoZSBVLlMuIGdvdmVybm1lbnTigJlzIGxheCByZWd1bGF0aW9uIG9mIFdhbGwgU3RyZWV0IGJhbmtzLiBCeSB0aGUgZW5kIG9mIHRoZSB3ZWVrLCBTYW5kcyBoYWQgc3RvcHBlZCBkZWZlbmRpbmcgdGhlIGJhbmsgaW4gcHVibGljLiBJbnN0ZWFkLCBpdHMgbGF3eWVycyBhdCBTdWxsaXZhbiAmIENyb213ZWxsIExMUCBoYWQgYmVndW4gbmVnb3RpYXRpbmcgYSBzZXR0bGVtZW50IHdpdGggTGF3c2t5LCBhY2NvcmRpbmcgdG8gdHdvIHBlb3BsZSB3aXRoIGtub3dsZWRnZSBvZiB0aGUgbWF0dGVyLiBTYW5kcyBhcnJpdmVkIGluIE5ldyBZb3JrIHRoaXMgd2VlayB0byBvdmVyc2VlIHRoZSBwcm9jZXNzLiBIZSBzaWduZWQgb2ZmIG9uIHRoZSBmaW5hbCBhZ3JlZW1lbnQganVzdCBhZnRlciBtaWRkYXkgeWVzdGVyZGF5LCBzYWlkIG9uZSBvZiB0aGUgcGVvcGxlLCBhbGwgb2Ygd2hvbSBkZWNsaW5lZCB0byBiZSBpZGVudGlmaWVkIGJlY2F1c2UgdGhleSB3ZXJlbuKAmXQgYXV0aG9yaXplZCB0byBzcGVhayBwdWJsaWNseS4gVGhlIGFncmVlbWVudCBiZXR3ZWVuIExhd3NreSBhbmQgdGhlIGJhbmssIHdoaWxlIHJlZmVycmluZyB0byDigJx0cmFuc2FjdGlvbnMgb2YgYXQgbGVhc3QgJDI1MCBiaWxsaW9uLOKAnSBkb2VzbuKAmXQgYWRkcmVzcyB0aGUgcXVlc3Rpb24gb2Ygd2hldGhlciB0aGV5IHdlcmUgaW4gY29tcGxpYW5jZSB3aXRoIFUuUy4gbGF3LiBJbiBhIG1lbW8gdG8gZW1wbG95ZWVzIHRvZGF5IG9idGFpbmVkIGJ5IEJsb29tYmVyZyBOZXdzLCBTYW5kcyBzYWlkIHRoZSBiYW5r4oCZcyBlYXJsaWVyIHJldmlldyBpZGVudGlmaWVkIG1pc3Rha2VzLCBmb3Igd2hpY2ggaXQgYXBvbG9naXplZC4g4oCcV2UgaGF2ZSBzb3VnaHQgdG8gYWN0IGluIHRoZSBiZXN0IGludGVyZXN0cyBvZiBvdXIgc2hhcmVob2xkZXJzLCBjbGllbnRzLCBjdXN0b21lcnMgYW5kIHN0YWZmLOKAnSB0aGUgbWVtbyBzdGF0ZWQuIE90aGVyIFNob2UgU29tZSBvYnNlcnZlcnMgc2FpZCB0aGUgYmFua+KAmXMgaW52ZXN0b3JzIGFyZSB3YWl0aW5nIGZvciB0aGUgb3RoZXIgc2hvZSB0byBkcm9wLiDigJxJbnZlc3RvcnMgd2lsbCBiZSBwbGVhc2VkIHRoZXnigJl2ZSBzZXR0bGVkLCBidXQgaXTigJlzIG5vdCBrbm93biBpZiB0aGV5IGhhdmUgdG8gcGF5IG1vcmUgdG8gdGhlIG90aGVyIHJlZ3VsYXRvcnMs4oCdIHNhaWQgQ2hyaXN0b3BoZXIgV2hlZWxlciBvZiBNZWRpb2JhbmNhIFNwQSBpbiBMb25kb24uIFRoZSBEZXBhcnRtZW50IG9mIEZpbmFuY2lhbCBTZXJ2aWNlcyB3YXMgY3JlYXRlZCBpbiAyMDExIHdoZW4gTmV3IFlvcmvigJlzIEJhbmtpbmcgRGVwYXJ0bWVudCBhbmQgSW5zdXJhbmNlIERlcGFydG1lbnQgd2VyZSBhYm9saXNoZWQuIFRoZSBhZ2VuY3kgaGFzIHRoZSBwb3dlciB0byBpc3N1ZSByZWd1bGF0aW9ucywgaW52ZXN0aWdhdGUgYW5kIGZpbmUgZmluYW5jaWFsIHNlcnZpY2VzIGNvbXBhbmllcy4gSXQgbWF5IGFsc28gcHJvYmUgYWxsZWdlZCBjcmltaW5hbCBhY3Rpdml0eSBhbmQgcmVmZXIgaXRzIGZpbmRpbmdzIHRvIE5ldyBZb3Jr4oCZcyBhdHRvcm5leSBnZW5lcmFsIGZvciBwcm9zZWN1dGlvbi4gSXRzIGp1cmlzZGljdGlvbiBvdmVyIFdhbGwgU3RyZWV0LCBob3dldmVyLCBwdXRzIGl0IGluIHRoZSBzYW1lIHJlZ3VsYXRvcnkgd29ybGQgYXMgbWFueSBmZWRlcmFsIGFnZW5jaWVzLiDigJxUaGUgRmVkZXJhbCBSZXNlcnZlIGNvbnRpbnVlcyB0byB3b3JrIHdpdGggdGhlIG90aGVyIGFnZW5jaWVzIG9uIGEgY29tcHJlaGVuc2l2ZSByZXNvbHV0aW9uLOKAnSBzYWlkIEJhcmJhcmEgSGFnZW5iYXVnaCwgYSBzcG9rZXN3b21hbiBmb3IgdGhlIGFnZW5jeSwgaW4gcmVzcG9uc2UgdG8gbmV3cyBvZiB0aGUgc2V0dGxlbWVudC4g4oCYV29yayBDbG9zZWx54oCZIERlYW4gQm95ZCwgYSBzcG9rZXNtYW4gZm9yIHRoZSBKdXN0aWNlIERlcGFydG1lbnQsIHNhaWQgdGhlIGFnZW5jeSDigJxjb250aW51ZXMgdG8gd29yayBjbG9zZWx5IHdpdGggb3VyIHJlZ3VsYXRvcnkgYW5kIG90aGVyIHBhcnRuZXJzIHRvIGRldGVybWluZSB3aGF0IGFjdGlvbnMgbWlnaHQgYmUgYXBwcm9wcmlhdGUgaW4gdGhpcyBtYXR0ZXIu4oCdIEFuZCB0aGUgVHJlYXN1cnkgRGVwYXJ0bWVudCBzYWlkIGluIGEgc3RhdGVtZW50IHRoYXQgaXQgd2lsbCB3b3JrIOKAnHdpdGggb3VyIHJlZ3VsYXRvcnkgYW5kIGxhdyBlbmZvcmNlbWVudCBwYXJ0bmVycyB0byBob2xkIFN0YW5kYXJkIENoYXJ0ZXJlZCBhY2NvdW50YWJsZSBmb3IgYW55IHNhbmN0aW9uYWJsZSBhY3Rpdml0eSB0aGF0IG9jY3VycmVkLuKAnSBFcmluIER1Z2dhbiwgYSBzcG9rZXN3b21hbiBmb3IgTWFuaGF0dGFuIERpc3RyaWN0IEF0dG9ybmV5IEN5cnVzIFZhbmNlLCBzYWlkIOKAnGJhbmtzIHRoYXQgdmlvbGF0ZSBpbnRlcm5hdGlvbmFsIHNhbmN0aW9ucyBhcmUgbm90IGp1c3QgYnJlYWtpbmcgdGhlIGxhdywgdGhleSBhcmUgZW5hYmxpbmcgdGhlIGZpbmFuY2luZyBvZiB0ZXJyb3Jpc3QgcmVnaW1lcyBhbmQgdW5kZXJtaW5pbmcgb3VyIGNvbGxlY3RpdmUgc2FmZXR5IGFuZCBzZWN1cml0eS7igJ0gU2hlIGFkZGVkIHRoYXQgdGhlIG9mZmljZSBsb29rcyDigJxmb3J3YXJkIHRvIGNvbnRpbnVpbmcgdG8gd29yayB3aXRoIG91ciBwYXJ0bmVycyBvbiB0aGVzZSBjYXNlcy7igJ0gSW5zdXJhbmNlIENvc3RzIFRoZSBjb3N0IG9mIGluc3VyaW5nIFN0YW5kYXJkIENoYXJ0ZXJlZCBCYW5rIGRlYnQgZnJvbSBub24tIHBheW1lbnQgZGVjbGluZWQgMTIgYmFzaXMgcG9pbnQgdG8gMTMyLjEgYmFzaXMgcG9pbnRzIGF0IDk6MTEgYS5tLiBpbiBOZXcgWW9yaywgYWNjb3JkaW5nIHRvIGRhdGEgcHJvdmlkZXIgQ01BLCB3aGljaCBpcyBvd25lZCBieSBNY0dyYXctSGlsbCBDb3MuIGFuZCBjb21waWxlcyBwcmljZXMgcXVvdGVkIGJ5IGRlYWxlcnMgaW4gdGhlIHByaXZhdGVseSBuZWdvdGlhdGVkIG1hcmtldC4gVGhlIGNvbnRyYWN0cyBoYXZlIHJhbmdlZCBiZXR3ZWVuIDEyNSBhbmQgMjIwIHRoaXMgeWVhciwgYWNjb3JkaW5nIHRvIHRoZSBkYXRhLiBTd2FwcyBwYXkgdGhlIGJ1eWVyIGZhY2UgdmFsdWUgaW4gZXhjaGFuZ2UgZm9yIHRoZSB1bmRlcmx5aW5nIHNlY3VyaXRpZXMgb3IgdGhlIGNhc2ggZXF1aXZhbGVudCBzaG91bGQgYSBib3Jyb3dlciBmYWlsIHRvIGFkaGVyZSB0byBpdHMgZGVidCBhZ3JlZW1lbnRzLiBBIGJhc2lzIHBvaW50IGVxdWFscyAxLDAwMCBldXJvcyBhIHllYXIgb24gYSBjb250cmFjdCBwcm90ZWN0aW5nIDEwIG1pbGxpb24gZXVyb3MgKCQxMi4zIG1pbGxpb24pIG9mIGRlYnQgZnJvbSBkZWZhdWx0IGZvciBmaXZlIHllYXJzLiBUaGUgY29zdCBvZiBpbnN1cmluZyBTdGFuZGFyZCBDaGFydGVyZWQgQmFuayBkZWJ0IGZyb20gbm9uLSBwYXltZW50IGRlY2xpbmVkIDEgYmFzaXMgcG9pbnQgdG8gMTQ0IGJhc2lzIHBvaW50cyB5ZXN0ZXJkYXksIGFjY29yZGluZyB0byBkYXRhIHByb3ZpZGVyIENNQS4gVGhlIGNvbnRyYWN0cyBoYXZlIHJhbmdlZCBiZXR3ZWVuIDEyMi43IGFuZCAxOTUgdGhpcyB5ZWFyLCBhY2NvcmRpbmcgdG8gQ01BIGRhdGEuIFN3YXBzIHBheSB0aGUgYnV5ZXIgZmFjZSB2YWx1ZSBpbiBleGNoYW5nZSBmb3IgdGhlIHVuZGVybHlpbmcgc2VjdXJpdGllcyBvciB0aGUgY2FzaCBlcXVpdmFsZW50IHNob3VsZCBhIGJvcnJvd2VyIGZhaWwgdG8gYWRoZXJlIHRvIGl0cyBkZWJ0IGFncmVlbWVudHMuIEEgYmFzaXMgcG9pbnQgb24gYSBjcmVkaXQtZGVmYXVsdCBzd2FwIHByb3RlY3RpbmcgMTAgbWlsbGlvbiBldXJvcyAoJDEyLjMgbWlsbGlvbikgb2YgZGVidCBmcm9tIGRlZmF1bHQgZm9yIGZpdmUgeWVhcnMgaXMgZXF1aXZhbGVudCB0byAxLDAwMCBldXJvcyBhIHllYXIuIOKAmEFjdGluZyBRdWlja2x54oCZIOKAnEl04oCZcyBwb3NzaWJsZSB0aGF0IGJ5IGFjdGluZyBxdWlja2x5IGFuZCB0cnlpbmcgdG8gcHV0IHRoaXMgYmVoaW5kIHRoZW0sIHRoZSBDRU8gY291bGQgcmV0YWluIGhpcyBwb3NpdGlvbizigJ0gc2FpZCBEYXZpZCBLYXNzLCBhIHByb2Zlc3NvciBhdCB0aGUgVW5pdmVyc2l0eSBvZiBNYXJ5bGFuZOKAmXMgUm9iZXJ0IEguIFNtaXRoIFNjaG9vbCBvZiBCdXNpbmVzcywgb2YgU3RhbmRhcmQgQ2hhcnRlcmVkIENFTyBTYW5kcy4g4oCcSXQgcHV0cyB0aGUgaXNzdWUgYmVoaW5kIHRoZW0gZm9yIHRvZGF5IGFuZCBnZXRzIHRoZWlyIG5hbWUgb2ZmIG9mIHRoZSBmcm9udCBwYWdlLCBidXQgSeKAmW0gc3VyZSB0aGV54oCZbGwgYmUgdW5kZXIgZ3JlYXRlciBzY3J1dGlueSBieSByZWd1bGF0b3JzIGZvciBhIHdoaWxlLuKAnSBBbnRob255IFNhYmlubywgYSBwcm9mZXNzb3Igb2YgbGF3IGF0IHRoZSBQZXRlciBKLiBUb2JpbiBDb2xsZWdlIG9mIEJ1c2luZXNzIGF0IFN0LiBKb2hu4oCZcyBVbml2ZXJzaXR5IGluIE5ldyBZb3JrLCBzYWlkIHRoZSBkZWNpc2lvbiB0byBzZXR0bGUgd2FzIOKAnGEgYnVzaW5lc3MgZGVjaXNpb24gLS0gdGhleSB3YW50IHRvIHB1dCB0aGlzIGluIHRoZSByZWFydmlldyBtaXJyb3Iu4oCdIOKAnFRoZSBzaG9lIHRoYXQgSSBhbSB3YWl0aW5nIHRvIHNlZSBkcm9wIGlzIHdoYXQgd2lsbCB0aGUgZmVkcyBkbyBuZXh0P+KAnSBTYWJpbm8gc2FpZC4gTGF3c2t54oCZcyBhY3Rpb25zIOKAnG1pZ2h0IHB1c2ggdGhlIGZlZGVyYWwgYXV0aG9yaXRpZXMgdG8gZ2l2ZSBTdGFuZGFyZCBDaGFydGVyZWQgbW9yZSB0aGFuIGEgcGVyZnVuY3Rvcnkgc2xhcCBvbiB0aGUgd3Jpc3Qu4oCdIEJleW9uZCB0aGUgU3RhbmRhcmQgQ2hhcnRlcmVkIGNhc2UsIExhd3NreeKAmXMgZ28taXQtYWxvbmUgZ2FtYml0IG1heSBjb21wbGljYXRlIGZ1dHVyZSBiYW5rIGludmVzdGlnYXRpb25zIGFuZCBzZXR0bGVtZW50cywgc2FpZCBvbmUgZm9ybWVyIHByb3NlY3V0b3IuIOKAnEJlbiBMYXdza3kgaGlqYWNrZWQgdGhlIGZlZHPigJkgY2FzZSzigJ0gc2FpZCBSaXRhIEdsYXZpbiwgbm93IGFuIGF0dG9ybmV5IGF0IFNld2FyZCAmIEtpc3NlbCBMTFAuIOKAnFRoYXQga2luZCBvZiBtb3ZlIGNhdXNlcyBhIG1ham9yIGhlYWRhY2hlIGZvciB0aGUgSnVzdGljZSBEZXBhcnRtZW50LiBCZWZvcmUsIHRoZXkgbWF5IGhhdmUgYmVlbiBtb3JlIHdpbGxpbmcgdG8gc2hhcmUgd2l0aCBhIHN0YXRlIHJlZ3VsYXRvci4gVGhleSBtYXkgbm90IGJlIHNvIHdpbGxpbmcgaW4gdGhlIGZ1dHVyZS7igJ0=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATkopwyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDY4N2ZlNGU2YWZhMDEzYzY=</field><field name="symbol" class="java.lang.String">rO0ABXQABFdJUkU=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATktzWiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA8DMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA9Ao9cKPXD</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA8DMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA9AAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA82ZmZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAADhZA==</field><field name="id" class="java.lang.String">rO0ABXQAEDA4YWEwYWJmZDBmYmEzODA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mH/AAAAA==</field></document></documents><date>2015-05-07T06:15:19-0500</date></cacheEntry>
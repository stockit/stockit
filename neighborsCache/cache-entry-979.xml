<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0D75DYW5hZGlhbiBob3VzaW5nIHByaWNlcyBoYXZlIHJpc2VuIDM2OCBwZXJjZW50IG9uIGF2ZXJhZ2Ugc2luY2UgbWlkMjAwOSBhbmQgdGhlIGF2ZXJhZ2UgaG9tZSBwcmljZSBoYXMgZG91YmxlZCBvdmVyIHRoZSBwYXN0IGRlY2FkZSBMYXN0IG1vbnRoIHRoZSBjZW50cmFsIGJhbmsgc2FpZCB0aGUgaG91c2luZyBtYXJrZXQgY291bGQgYmUgb3ZlcnZhbHVlZCBieSBhcyBtdWNoIGFzIDMwIHBlcmNlbnQgQnV0IGNvbmNlcm5zIGFib3V0IHRoZSBlZmZlY3Qgb2Ygb2lsIHByaWNlcyB0aGF0IGhhdmUgZmFsbGVuIGluIGhhbGYgdGhpcyB5ZWFyIG92ZXJyb2RlIHdvcnJpZXMgYWJvdXQgc3Rva2luZyBhIGhvdXNpbmcgYnViYmxlIG9uIFdlZG5lc2RheSBhbmQgdGhlIGJhbmsgY3V0IGl0cyBiZW5jaG1hcmsgcmF0ZSB0byAwNzUgcGVyY2VudCBmcm9tIDEgcGVyY2VudCAgIFRoZSBlbmVyZ3kgc2VjdG9yIG1ha2VzIHVwIGFib3V0IDExIHBlcmNlbnQgb2YgQ2FuYWRhcyBHRFAgYW5kIGFib3V0IG9uZSBxdWFydGVyIG9mIENhbmFkaWFuIGV4cG9ydHMgaW4gMjAxMyBUaGlzIG1lYW5zIGV2ZXJ5b25lIGlzIGdvaW5nIHRvIGdldCBiYWNrIGluIHRoZSBzYWRkbGUgYW5kIHdlcmUgZ29pbmcgb2ZmIHRvIHRoZSByYWNlcyBhZ2FpbiBzYWlkIFRvcm9udG8gcmVhbCBlc3RhdGUgYWdlbnQgU3RldmVuIEZ1ZGdlIEl0IGNyZWF0ZXMgYSBzZW5zZSBvZiByZWxpZWYgdGhhdCB3ZSBoYXZlbnQgc2VlbiB0aGUgdG9wIG9mIHRoZSBtYXJrZXQgQ2FuYWRhcyBob3VzaW5nIG1hcmtldCBwYXVzZWQgaW4gMjAwOSBidXQgZGlkbnQgY29sbGFwc2UgYXMgaXQgZGlkIGluIHRoZSBVbml0ZWQgU3RhdGVzIGFuZCBwcmljZXMgaGF2ZSByaXNlbiBhcyBsb3cgaW50ZXJlc3QgcmF0ZXMgaGVscGVkIENhbmFkaWFucyBib29zdCB0aGVpciBib3Jyb3dpbmcgdG8gYnV5IGV2ZXIgbW9yZSBleHBlbnNpdmUgaG9tZXMgQWNjb3JkaW5nIHRvIHRoZSBSQkMgSG91c2luZyBBZmZvcmRhYmlsaXR5IEluZGV4IGl0IHRha2VzIDQ3OCBwZXJjZW50IG9mIGEgaG91c2Vob2xkcyBwcmV0YXggaW5jb21lIHRvIHNlcnZpY2UgdGhlIGNvc3Qgb2Ygb3duaW5nIGEgc3RhbmRhcmQgdHdvc3RvcnkgQ2FuYWRpYW4gaG9tZSBhdCBjdXJyZW50IG1hcmtldCB2YWx1ZXMgVGhlIHJlYWwgZXN0YXRlIG1hcmtldCBoYXMgbmluZSBsaXZlcyBFdmVyeSB0aW1lIGl0cyBzdXBwb3NlZCB0byBzbG93IGRvd24gc29tZXRoaW5nIGtlZXBzIHRoZSBwYXJ0eSBnb2luZyBzYWlkIEJlbmphbWluIFRhbCBzZW5pb3IgZWNvbm9taXN0IGF0IENJQkMgV29ybGQgTWFya2V0cyBUYWwgc2FpZCB0aGF0IHdoaWxlIGEgZHJvcCBpbiBpbnRlcmVzdCByYXRlcyBieSAyNSBiYXNpcyBwb2ludHMgbWF5IG5vdCBpbXByZXNzIGhvbWVidXllcnMgd2hvIGhhdmUgY29tZSB0byBiZWxpZXZlIGNoZWFwIG1vbmV5IGlzIG5vcm1hbCBpdCByYWlzZXMgdGhlIHJpc2sgdGhhdCBpbmRlYnRlZCBDYW5hZGlhbnMgd2lsbCB0YWtlIG9uIG1vcmUgZGVidCBXaXRoIHRoZSBkZWJ0IHNpdHVhdGlvbiByZWxhdGl2ZWx5IGVsZXZhdGVkIGN1dHRpbmcgaW50ZXJlc3QgcmF0ZXMgYW5kIGFkZGluZyBmdWVsIHRvIHRoZSBmaXJlIGlzIG5vdCBleGFjdGx5IHRoZSBiZXN0IHRoaW5nIGZvciB0aGlzIHNpdHVhdGlvbiBUYWwgc2FpZCBKYW1lcyBMYWlyZCBQcmVzaWRlbnQgb2YgQ2FuV2lzZSBGaW5hbmNpYWwgcmVzaWRlbnRpYWwgbW9ydGdhZ2UgYnJva2VyYWdlIHNhaWQgdGhlIHJhdGUgY3V0IHdpbGwgaGF2ZSBhbiBpbW1lZGlhdGUgZWZmZWN0IG9uIHRoZSBkZW1hbmQgZm9yIG1vcnRnYWdlcyBwdXNoaW5nIHBlb3BsZSBiYWNrIGludG8gY2hlYXBlciB2YXJpYWJsZSByYXRlcyBmcm9tIGhpZ2hlciBmaXhlZHJhdGUgcHJvZHVjdHMgVGhlIEJhbmsgc2lnbmFsaW5nIHRoYXQgY29zdHMgd2lsbCBiZSBsb3dlciBldmVuIGRlY2xpbmluZyBzaG91bGQgbWVhbiBhbm90aGVyIHllYXIgb2YgZ3Jvd3RoIGZvciBob3VzaW5nIGFuZCByZWFsIGVzdGF0ZSBzYWlkIExhaXJkIHdob3NlIGNvbXBhbnkgZG9lcyBidXNpbmVzcyBpbiBPbnRhcmlvIGFuZCBRdWViZWMgQ2FuYWRhcyB0d28gbW9zdCBwb3B1bG91cyBwcm92aW5jZXMgV2Ugc2hvdWxkbnQgYmUgc3VycHJpc2VkIHRoYXQgd2hlbiBtb25leSBpcyBjaGVhcCBwZW9wbGUgdGFrZSBtb3JlIG9mIGl0IExhaXJkIGFkZGVkIFRvIGJlIHN1cmUgdGhlcmUgYXJlIGltcG9ydGFudCBkaWZmZXJlbmNlcyBiZXR3ZWVuIENhbmFkYXMgaG91c2luZyBtYXJrZXQgYW5kIHRoYXQgaW4gdGhlIFVTIHdoZXJlIHRoZSBidXJzdGluZyBvZiBhIGhvdXNpbmcgYnViYmxlIGJlZ2lubmluZyBpbiAyMDA3IGhlbHBlZCB1c2hlciBpbiB0aGUgd29yc3QgZWNvbm9taWMgZG93bnR1cm4gc2luY2UgdGhlIERlcHJlc3Npb24gQ2FuYWRhIGhhcyB0aWdodGVyIGxlbmRpbmcgc3RhbmRhcmRzIGhlYWx0aGllciBiYW5rcyB0aGF0IGtlZXAgbW9ydGdhZ2UgbG9hbnMgb24gdGhlaXIgYm9va3MgYW5kIGhpZ2ggZmVlcyB3aGljaCBkaXNjb3VyYWdlIGJ1eWluZyBhbmQgZmxpcHBpbmcgaG9tZXMgZm9yIHByb2ZpdCBJbiBDYW5hZGEgaG91c2luZyBhcyBhbiBpbnZlc3RtZW50IG1lYW5zIGJ1eWluZyBhIGhvdXNlIGFuZCByZW50aW5nIGl0IG91dCBlYXJuaW5nIGluY29tZSBmcm9tIHJlbnQgYW5kIGNvdW50aW5nIG9uIGNhcGl0YWwgYXBwcmVjaWF0aW9uIFRoZSBtb3N0IGNvbW1vbiBtb3J0Z2FnZSBpbiBDYW5hZGEgaXMgYSBmaXhlZCBmaXZleWVhciBwcm9kdWN0IE1vcnRnYWdlIGludGVyZXN0IGlzbnQgZGVkdWN0aWJsZSBpbiBDYW5hZGEgbWVhbmluZyB0aGVyZXMgbm8gaW5jZW50aXZlIHRvIHRha2Ugb24gYSBiaWdnZXIgbW9ydGdhZ2UgdGhhbiB3aGF0cyBuZWVkZWQgRm9yIEZ1ZGdlIHRoZSByZWFsIGVzdGF0ZSBhZ2VudCB3aG9zZSBidXNpbmVzcyB3aXRoIHRoZSBwcm9wZXJ0eSB3ZWJzaXRlIHVyYmFuZWVyY29tIGZvY3VzZXMgb24gdGhlIFRvcm9udG8gbWFya2V0IHRoZSBhYmlsaXR5IG9mIG5ldyBidXllcnMgdG8gc2hpZnQgZnJvbSBhIGZpdmV5ZWFyIGZpeGVkIHJhdGUgdG8gYSBvbmV5ZWFyIHZhcmlhYmxlIGdpdmVzIHRoZW0ganVzdCBlbm91Z2ggd2lnZ2xlIHJvb20gdG8gYnVtcCB1cCB0aGVpciBwcmljZSBsaW1pdCBhbm90aGVyIEM1MDAwMCBUaG9zZSBidXllcnMgd2hvIHdlcmUgY2FwcGVkIGF0IEM4MDAwMDAgdGhpcyB3aWxsIGFsbG93IHRoZW0gdG8gZ28gdG8gdGhlIEM4NTAwMDAgdGhhdCB0aGV5IHJlYWxseSBuZWVkIHRvIGdvIHRvIHRvZGF5IHRoYXQgdGlwcGluZyBwb2ludCBpbiB0aGlzIGhvdXNpbmcgbWFya2V0IHRoYXQgbWFrZXMgdGhlIGRpZmZlcmVuY2UgaW4gYSBiaWRkaW5nIHdhciBzYWlkIEZ1ZGdlIEJ1dCBub3QgZXZlcnlvbmUgaXMgY29udmluY2VkIHRoZSByYXRlIGN1dCB3aWxsIGJvb3N0IHRoZSBob3VzaW5nIG1hcmtldCBIaWxsaWFyZCBNYWNCZXRoIGFuIEVkbW9udG9uYmFzZWQgcG9ydGZvbGlvIG1hbmFnZXIgYXQgUmljaGFyZHNvbkdNUCBhbmQgYXV0aG9yIG9mIFdoZW4gdGhlIEJ1YmJsZSBCdXJzdHMgU3Vydml2aW5nIHRoZSBDYW5hZGlhbiByZWFsIGVzdGF0ZSBjcmFzaCBiZWxpZXZlcyB0aGUgY2VudHJhbCBiYW5rcyBjb25jZXJuIGNvdWxkIHNjYXJlIGV2ZXJ5b25lIG91dCBvZiB0aGUgbWFya2V0IElmIHRoZXkgYXJlIHNvIGNvbmNlcm5lZCB0aGV5IGFyZSBjdXR0aW5nIHJhdGVzIGJlY2F1c2UgdGhleSBhcmUgd29ycmllZCBhYm91dCBhIHJlY2Vzc2lvbiB3aWxsIHRoYXQgc3ByZWFkIHRvIGhvbWVidXllcnMgc2FpZCBNYWNCZXRoIHdob3NlIHZpZXcgZnJvbSBDYW5hZGFzIGhhcmRoaXQgcmVzb3VyY2Ugc2VjdG9yIHRha2VzIGluIGEgbG90IG9mIGZyaWdodGVuZWQgY29uc3VtZXJzIEFsbCBpdCB0YWtlcyBpcyBmb3IgdGhlbSB0byBzZWUgYSBuZWlnaGJvciBsb3NlIGhpcyBqb2IgIGFuZCB0aGV5IHJlYWxseSBjaGFuZ2UgdGhlaXIgYXR0aXR1ZGUgdG93YXJkcyBhY2N1bXVsYXRpbmcgbW9yZSBkZWJ0dAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAdWFydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2Usc2NvcmUsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEwLTA2LTEwVDAwOjAwOjAwWiBUTyAyMDEzLTA3LTMwVDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDUxNjQ=</field><field name="title" class="java.lang.String">rO0ABXQAN0NoaW5hIEhlbHBzIEZpcnN0LUhvbWUgQnV5ZXJzIFdoaWxlIEN1cmJpbmcgU3BlY3VsYXRvcnM=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATbtBSiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGYxNTY4YzliNjM3ZmU4OWY=</field><field name="symbol" class="java.lang.String">rO0ABXQABExPQU4=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATbyK4SAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/xR64UeuFI</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/xcKPXCj1x</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/wKPXCj1wp</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/xR64UeuFI</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/vXCj1wo9c</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAALuA==</field><field name="id" class="java.lang.String">rO0ABXQAEDI2NzJlMzBjNmJjOWVjNzk=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGRRAAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPzOU1g==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExNzgx</field><field name="title" class="java.lang.String">rO0ABXQAL0NoaW5hIENyZWRpdCBTcXVlZXplIFByb21wdHMgU3VpY2lkZXMsIFZpb2xlbmNl</field><field name="content" class="java.lang.String">rO0ABXQ3T0hvdXJzIGFmdGVyIGEgY3JlZGl0b3IgYW5kIGhpcyBnYW5nIG9mIHRhdHRvb2VkIHRodWdzIGh1c3RsZWQgWmhvbmcgTWFvamluIGludG8gYSBjb2ZmZWUgc2hvcCBpbiBXZW56aG91LCBoZSBzYXlzIGhlIHdvdWxkbuKAmXQgeWllbGQgdG8gdGhlaXIgZGVtYW5kcy4gVGhleSB3YW50ZWQgdG8gdGFrZSBvdmVyIG9uZSBvZiB0aGUgcGhhcm1hY2llcyBpbiBhIGNoYWluIGhl4oCZZCBidWlsdCBieSBib3Jyb3dpbmcgZnJvbSBwcml2YXRlIGxlbmRlcnMuIEluc3RlYWQsIGhlIG1hZGUgYW4gb2ZmZXIgb2YgdHJhZGl0aW9uYWwgcmV0cmlidXRpb24gaW4gdGhpcyBlYXN0ZXJuIENoaW5lc2UgY2l0eSwga25vd24gZm9yIGxvYW4gc2hhcmtzIHdobyBoYXZlIHNvbWV0aW1lcyBtZXRlZCBvdXQgdmlvbGVuY2UgdG8gYmFkIGRlYnRvcnMuIOKAnElmIHlvdSBsaWtlLCB5b3UgY2FuIGN1dCBvZmYgb25lIG9mIG15IGZpbmdlcnMgaW5zdGVhZCzigJ0gWmhvbmcsIDQyLCBzYXlzIGhlIHRvbGQgdGhlbS4gR2l2aW5nIHVwIHRoZSBzdG9yZSB3b3VsZCBoYXZlIG1hZGUgaXQgaW1wb3NzaWJsZSB0byBwYXkgYmFjayBhbm90aGVyIDEzMCBjcmVkaXRvcnMsIFpob25nIHNhaWQuIEhl4oCZZCBib3Jyb3dlZCAzMCBtaWxsaW9uIHl1YW4gKCQ0LjcgbWlsbGlvbikgYXQgaW50ZXJlc3QgcmF0ZXMgYXMgaGlnaCBhcyA3IHBlcmNlbnQgYSBtb250aCB0byBleHBhbmQgdGhlIGJ1c2luZXNzLiBNYW55IG9mIHRoZSBsZW5kZXJzIHdlcmUgZWxkZXJseSBuZWlnaGJvcnMgd2hv4oCZZCBtb3J0Z2FnZWQgdGhlaXIgaG9tZXMuIEF0IGxlYXN0IDkwIGJvc3NlcyBpbiBzaW1pbGFyIHNpdHVhdGlvbnMgdG8gWmhvbmcgaGF2ZSBmbGVkIHRoZSBjaXR5IHNpbmNlIEFwcmlsLCBhbmQgdHdvIGtpbGxlZCB0aGVtc2VsdmVzLCBhY2NvcmRpbmcgdG8gWmhvdSBEZXdlbiwgaGVhZCBvZiBhIHNtYWxsIGJ1c2luZXNzIGFzc29jaWF0aW9uIGluIFdlbnpob3UuIE9uZSB3YXMgc2hvZW1ha2VyIFNoZW4gS3VpemhlbmcsIHdobyBqdW1wZWQgdG8gaGlzIGRlYXRoIGZyb20gaGlzIDIybmQtc3RvcnkgaG9tZSBvbiBTZXB0LiAyMSwgaGUgc2FpZC4gV2VuemhvdeKAmXMgNDAwLDAwMCBidXNpbmVzc2VzIGFyZSBmYWNpbmcgZmluYW5jaWFsIGhhcmRzaGlwIGJlY2F1c2Ugb2YgcmlzaW5nIGNvc3RzLCBzb2FyaW5nIGJsYWNrIG1hcmtldCBpbnRlcmVzdCByYXRlcyBhbmQgYSBzdWRkZW4gY3JlZGl0IHNxdWVlemUsIFpob3Ugc2FpZC4gU2ltaWxhciBwcm9ibGVtcyBhcmUgaGFwcGVuaW5nIGFjcm9zcyBDaGluYSBiZWNhdXNlIHByaXZhdGUgZW50ZXJwcmlzZXMgaW4gQ2hpbmEgcmVseSBvbiB1bmRlcmdyb3VuZCBib3Jyb3dpbmcgcmF0aGVyIHRoYW4gYmFua3MgdG8gb3BlcmF0ZSwgaGUgc2FpZC4gVGhlaXIgcHJlZGljYW1lbnQgcHJvbXB0ZWQgQ2hpbmHigJlzIHByZW1pZXIgV2VuIEppYWJhbyB0byB2aXNpdCB0aGUgY2l0eSAyMzAgbWlsZXMgKDM3MCBraWxvbWV0ZXJzKSBzb3V0aCBvZiBTaGFuZ2hhaSBvbiBPY3QuIDQsIHdoZXJlIGhlIHBsZWRnZWQgaGVscCBmb3IgdHJvdWJsZWQgYnVzaW5lc3Nlcy4gTmF0aW9uYWwgYW5kIGxvY2FsIGxlYWRlcnMgaGF2ZSBzaW5jZSBhbm5vdW5jZWQgbW92ZXMgdG8gaGVscCBzbWFsbCBmaXJtcywgaW5jbHVkaW5nIG9mZmVyaW5nIGVhc2llciBhY2Nlc3MgdG8gYmFuayBsb2FucywgYSBjYXAgb24gcHJpdmF0ZS1sZW5kaW5nIGludGVyZXN0IHJhdGVzIGluIFdlbnpob3UgYW5kIGEgY3JhY2tkb3duIG9uIGxvYW4gc2hhcmtzIHRoYXQgdXNlIHZpb2xlbmNlLiDigJhIdWdlIFByZXNzdXJl4oCZIFRoZSBtZWFzdXJlcyBoYXZlIGRvbmUgbGl0dGxlIHRvIGhlbHAgWmhvbmcsIGhlIHNheXMuIOKAnEkgYW0gdW5kZXIgaHVnZSBwcmVzc3VyZSzigJ0gaGUgc2F5cywgc2l0dGluZyBpbiBhIHdhcmVob3VzZSB3aXRoIGZhc3QtZGVwbGV0aW5nIHN0b2NrcyBvZiBtZWRpY2luZS4g4oCcV2UgZG9u4oCZdCBoYXZlIGVub3VnaCBtb25leS7igJ0gVGhlIHN1ZGRlbiBjb2xsYXBzZSBvZiBpbmZvcm1hbCBsZW5kaW5nIG5ldHdvcmtzIHJldmVhbHMgdGhlIGZyYWdpbGl0eSBvZiBDaGluYeKAmXMgdW5yZWd1bGF0ZWQgZmluYW5jaW5nIHN5c3RlbSB3aGVuIGNyZWRpdCB0aWdodGVucyBhbmQgY3JlZGl0b3JzIGxvc2UgY29uZmlkZW5jZSwgc2FpZCBUYW8gRG9uZywgYSBIb25nIEtvbmctYmFzZWQgZWNvbm9taXN0IGF0IENyZWRpdCBTdWlzc2UgR3JvdXAgQUcuIE1vbmV5IHN1cHBseSBoYXMgc2hydW5rIGFzIHRoZSBnb3Zlcm5tZW50IHRpZ2h0ZW5zIGxlbmRpbmcgdG8gdHJ5IGFuZCByZWluIGluIGluZmxhdGlvbiBydW5uaW5nIG5lYXIgYSB0aHJlZS15ZWFyIGhpZ2guIOKAmFRpcCBvZiBJY2ViZXJn4oCZIOKAnFRoaXMgaXMgYSBtdWNoIGJpZ2dlciBwcm9ibGVtIGFjcm9zcyB0aGUgY291bnRyeSzigJ0gc2FpZCBUYW8sIHdobyBlc3RpbWF0ZXMgb3V0c3RhbmRpbmcgcHJpdmF0ZSBsb2FucyBzdGFuZCBhdCA0IHRyaWxsaW9uIHl1YW4sIG9yIDggcGVyY2VudCBvZiB0b3RhbCBsZW5kaW5nIGluIENoaW5hLiDigJxXZW56aG91IGlzIGp1c3QgdGhlIHRpcCBvZiB0aGUgaWNlYmVyZy7igJ0gTW9zdCBvZiB0aGUgaW5mb3JtYWwgbGVuZGluZyBoYXMgYmVlbiBwdW1wZWQgaW50byByZWFsIGVzdGF0ZSBkZXZlbG9wZXJzIHJpZGluZyBDaGluYeKAmXMgcHJvcGVydHkgYm9vbSB0aGF0IGlzIHNob3dpbmcgc2lnbnMgb2Ygc2xvd2luZywgc2FpZCBUYW8uIEluIFdlbnpob3UsIGl04oCZcyBkcml2ZW4gdXAgaG9tZSBwcmljZXMgdG8gYW1vbmcgdGhlIG1vc3QgZXhwZW5zaXZlIGluIHRoZSBjb3VudHJ5LiBDaGluZXNlIG1lZGlhIHJlcG9ydHMgb2Ygc2ltaWxhciBkaWZmaWN1bHRpZXMgaGF2ZSBlbWVyZ2VkIGluIHRoZSBwcm9zcGVyb3VzIG1pbmluZyB0b3duIE9yZG9zIGluIHRoZSBub3J0aCBhbmQgdGhlIGluZHVzdHJpYWwgaGVhcnRsYW5kIG9mIEd1YW5nZG9uZyBpbiB0aGUgc291dGguIFRoZSByaXNrcyB0byBDaGluYeKAmXMgd2lkZXIgZWNvbm9teSBpbmNsdWRlIGEgcG90ZW50aWFsIGNyZWRpdCBmcmVlemUgdHJpZ2dlcmVkIGJ5IGluY3JlYXNlZCBtaXN0cnVzdCBhbW9uZyBpbmZvcm1hbCBsZW5kZXJzLCBhbHNvIHJlZmVycmVkIHRvIGFzIGN1cmIgbGVuZGVycywgYWNjb3JkaW5nIHRvIGFuIE9jdC4gMTEgcmVwb3J0IGJ5IFdhbmcgVGFvLCBhIEhvbmcgS29uZy1iYXNlZCBlY29ub21pc3QgYXQgVUJTIEFHLiBUaGF0IGNvdWxkIHRyaWdnZXIgbW9yZSB3aWRlc3ByZWFkIGJhbmtydXB0Y2llcywgc2hlIHNhaWQuIFdlbnpob3UgLS0gYSBjaXR5IG9mIDkgbWlsbGlvbiB3aG9zZSBwcml2YXRlIGVudGVycHJpc2VzIHJhbmdlIGZyb20gc2hvZW1ha2VycyBpbiBkdXN0eSByb2FkLXNpZGUgaG9tZXMgdG8gbWFudWZhY3R1cmluZyBwbGFudHMgaW4gbmV3IGluZHVzdHJpYWwgcGFya3MgLS0gcHJvZHVjZXMgOTAgcGVyY2VudCBvZiBDaGluYeKAmXMgZXllZ2xhc3NlcyBhbmQgZXhwb3J0ZWQgbGlnaHRlcnMuIFRoZSBjaXR54oCZcyB3ZWFsdGggaXMgcmVmbGVjdGVkIGluIHRoZSBQb3JzY2hlcyBhbmQgTGFuZCBSb3ZlcnMgcGFya2VkIGluIHRoZSBzdHJlZXRzIGFuZCB0aGUgZW1lcmdlbmNlIG9mIGRvd250b3duIHNob3BwaW5nIGFyY2FkZXMgc2VsbGluZyBIdWdvIEJvc3MgY2xvdGhlcyBhbmQgT21lZ2Egd2F0Y2hlcy4gRW1icmFjZWQgRGVuZ+KAmXMgUmVmb3JtcyBJdCB3YXMgdGhlIGZpcnN0IGNpdHkgdG8gd2lkZWx5IGVtYnJhY2UgcHJpdmF0ZSBlbnRlcnByaXNlIGluIHRoZSBlYXJseSAxOTgwcyB1bmRlciB0aGUgZWNvbm9taWMgcmVmb3JtcyBvZiB0aGVuIGxlYWRlciBEZW5nIFhpYW9waW5nLCBkZXZlbG9waW5nIHRoZSBtb3N0IGFkdmFuY2VkIHByaXZhdGUgbGVuZGluZyBuZXR3b3JrcyBpbiB0aGUgY291bnRyeS4gQnVzaW5lc3NlcyBpbiBXZW56aG91IHVzZWQgZmFtaWx5IGFuZCBob21ldG93biBuZXR3b3JrcyBiZWNhdXNlIGJhbmsgbG9hbnMgd2VyZSBoYXJkIHRvIGNvbWUgYnkuIFRoZSBsb2NhbCBnb3Zlcm5tZW50IGhlbHBlZCBmb3N0ZXIgdGhhdCBieSB0YWtpbmcgYSBsZW5pZW50IGFwcHJvYWNoIHRvIHByaXZhdGUgbGVuZGluZywgYWNjb3JkaW5nIHRvIEh1YW5nIFlhc2hlbmcsIGFuIGFzc29jaWF0ZSBwcm9mZXNzb3IgYXQgdGhlIE1hc3NhY2h1c2V0dHMgSW5zdGl0dXRlIG9mIFRlY2hub2xvZ3nigJlzIFNsb2FuIFNjaG9vbCBvZiBNYW5hZ2VtZW50LiBBIHByZXZpb3VzIGNyZWRpdCBzcXVlZXplIGluIFdlbnpob3UgMjUgeWVhcnMgYWdvIGFmZmVjdGVkIDIwMCwwMDAgbGVuZGVycywgcmVzdWx0aW5nIGluIDUyMyBraWRuYXBwaW5ncyBhbmQgbW9yZSB0aGFuIDMwIGRlYXRocywgYWNjb3JkaW5nIHRvIGEgbG9jYWwgZ292ZXJubWVudCB3ZWJzaXRlLiBBcyB0aGUgY2xhY2tpbmcgZnJvbSBhIG5lYXJieSBzaG9lIGZhY3RvcnkgZHJpZnRzIHRocm91Z2ggdGhlIHdpbmRvdyBvZiBoaXMgd2FyZWhvdXNlIG9uIFdlbnpob3XigJlzIGluZHVzdHJpYWwgb3V0c2tpcnRzLCBaaG9uZyB0ZWxscyBob3cgaGUgcmVsaWVkIG9uIG1vbmV5IGxlbmRlcnMgdG8gYnVpbGQgQmx1ZSBTa3kgUGhhcm1hY3kgaW50byBhIGNoYWluIG9mIDI3IHNob3BzIGluIGp1c3QgdGhyZWUgeWVhcnMuIEEgZG9jdG9yIGZyb20gYSBtb3VudGFpbiB2aWxsYWdlLCBaaG9uZyBib3Jyb3dlZCBtb25leSB0byBwYXkgbWVkaWNhbCBiaWxscyBoZSByYW4gdXAgY2FyaW5nIGZvciBoaXMgd2lmZSB3aG8gZGllZCBhdCAyMyBvZiBsaXZlciBkaXNlYXNlLiBBZnRlciBoZSByZW1hcnJpZWQsIHRvIGEgd29tYW4gd2l0aCBkZWJ0cyBvZiBoZXIgb3duIGZyb20gcnVubmluZyBhIG1vbmV5LWxlbmRpbmcgYnVzaW5lc3MsIGhlIG9wZW5lZCB1cCBhIHBoYXJtYWN5IGluIFdlbnpob3UgdG8gdHJ5IHRvIHBheSBiYWNrIHRoZWlyIGNvbWJpbmVkIGRlYnQuIE5ldHdvcmsgb2YgTGVuZGVycyBUaGUgY291cGxlIHRvb2sgb24gbW9yZSBkZWJ0IHRvIGZ1bmQgdGhlaXIgZXhwYW5zaW9uLCBaaG9uZyBzYWlkLiBIZSBjb3VsZG7igJl0IGdldCBtb25leSBmcm9tIHRoZSBiYW5rcywgaGUgc2FpZCwgc28gaGUgZmlyc3QgYm9ycm93ZWQgZnJvbSBlbGRlcmx5IG5laWdoYm9ycyBmcm9tIGhpcyBob21lIGNvdW50eS4gU21hbGwgYW5kIG1lZGl1bS1zaXplZCBidXNpbmVzc2VzIGFjY291bnQgZm9yIDgwIHBlcmNlbnQgb2Ygam9icyBpbiBDaGluYSwgYWNjb3JkaW5nIHRvIHRoZSBjb3VudHJ54oCZcyBpbmR1c3RyeSBtaW5pc3RyeS4gWWV0IHRoZXnigJlyZSBsYXJnZWx5IHVuYWJsZSB0byBnZXQgbG9hbnMgZnJvbSBiYW5rcywgd2hpY2ggcHJlZmVyIGNvbGxhdGVyYWwgdG8gY2FzaC1mbG93LCBhY2NvcmRpbmcgdG8gYW4gT2N0LiAxNyByZXBvcnQgYnkgU3lkbmV5LWJhc2VkIGludmVzdG1lbnQgYmFuayBNYWNxdWFyaWUgR3JvdXAgTHRkLiBCeSB0YXBwaW5nIGludG8gaGlzIGhvbWV0b3duIG5ldHdvcmssIFpob25nIHdhcyB0aGUgZmluYWwgbGluayBpbiBhIGxvbmcgY2hhaW4gb2YgZGVidC4g4oCcRm9yIHVzdWFsIGxlbmRpbmcsIEJhbmsgQSBsZW5kcyB0byBhIGN1c3RvbWVyIGFuZCBzZWVzIHRoZSBjYXNoIGZsb3dzLOKAnSBzYWlkIFRhbywgdGhlIENyZWRpdCBTdWlzc2UgZWNvbm9taXN0LiDigJxXaXRoIGluZm9ybWFsIGxlbmRpbmcsIGl0IGdvZXMgZnJvbSBBIHRvIEIgdG8gQywgYWxsIHRoZSB3YXkgdG8gWFlaLiBPbmNlIGl04oCZcyBiZXlvbmQgQywgeW91IGhhdmUgbm8gaWRlYSB3aGVyZSB0aGlzIG1vbmV5IHdlbnQgdG8u4oCdIEluIFpob25n4oCZcyBjYXNlLCB0aGUgdHJhaWwgb2YgZGVidCBjYW4gYmUgdHJhY2VkIHRvIHJvd3Mgb2YgZm91ci1zdG9yeSBjZW1lbnQgaG91c2luZyBub3QgZmFyIGZyb20gdGhlIFdlbnpob3UgYWlycG9ydCA0MCBtaW51dGVzIG91dHNpZGUgb2YgdG93biBieSBjYXIuIE1lbiBwbGF5IHBvb2wgYmVzaWRlIHRoZSBncm91bmQtIGZsb29yIHN0b3JlZnJvbnRzIG5lYXIgYSBkYXJrZW5lZCBtYWhqb25nIHBhcmxvci4gQ290dGFnZSBJbmR1c3RyeSBUaGUgcmVzaWRlbnRzIHR1cm5lZCBtb25leSBsZW5kaW5nIGludG8gYSBjb3R0YWdlIGluZHVzdHJ5LCBhY2NvcmRpbmcgdG8gaW50ZXJ2aWV3cyB3aXRoIHNpeCBvZiB0aGVtLiBUaGV5IGJ1aWx0IGEgbGF0dGljZSBvZiBpbnRlcmxvY2tlZCBjcmVkaXQsIG9mdGVuIGJvcnJvd2luZyBmcm9tIGJhbmtzIGFuZCBvdGhlciBwcml2YXRlIGxlbmRlcnMgdG8gYXJiaXRyYWdlIGludGVyZXN0IHJhdGVzLiBUYWtpbmcgb3V0IGJhbmsgbG9hbnMgYXQgMSBwZXJjZW50IGEgbW9udGgsIG1hbnkgbGVudCBvdXQgdGhlaXIgY2FzaCBmb3IgMiBwZXJjZW50IG9yIGhpZ2hlciBhIG1vbnRoLiBUaGV5IHBvY2tldGVkIHRoZSBkaWZmZXJlbmNlIHRvIHN1cHBsZW1lbnQgbWVhZ2VyIGluY29tZSBmcm9tIG9kZCBqb2JzLiBTaXR0aW5nIG9uIGEgc21hbGwgc3Rvb2wsIGdyYXktaGFpcmVkIEppbiBYaWFveXUgZmlsbHMgYSB3b29kZW4gYm94IHdpdGggdGhlIGVsZWN0cmljYWwgY2xhbXBzIHNoZSBtYWtlcyB0byBlYXJuIDEwIHl1YW4gYSBkYXkuIEhlciBsZWZ0IGV5ZSBpcyB0aGUgbWlsa3ktd2hpdGUgY29sb3Igb2YgYSBjYXRhcmFjdCBhbmQgc2hlIHNheXMgc2hlIGhhcyBkaWZmaWN1bHR5IHNlZWluZy4gU2hlIGxlbnQgWmhvbmcgNTAsMDAwIHl1YW4gYW5kIGNoYXJnZWQgMSwwMDAgeXVhbiBhIG1vbnRoIGluIGludGVyZXN0LCBzaGUgc2FpZC4g4oCcSSB3b3JyeSB0aGF0IEkgY2Fubm90IGdldCB0aGUgbW9uZXkgYmFjayzigJ0gSmluIHNheXMuIOKAnEkgaG9wZSB0aGUgZ292ZXJubWVudCB3aWxsIGhlbHAgaGltIG91dC7igJ0gU29tZSB1c2VkIHRoZWlyIGhvdXNpbmcgYXMgY29sbGF0ZXJhbC4gQW1vbmcgdGhlbSB3YXMgV3UgU3VpaHVhLCB3aG8gYm9ycm93ZWQgYWdhaW5zdCBoZXIgZml2ZS1zdG9yeSBob21lLCBzaGUgc2F5cy4gVGFraW5nIEhvbWUgTG9hbnMg4oCcV2UgZG9u4oCZdCBoYXZlIG11Y2ggaW5jb21lLOKAnSBzYWlkIFd1LiBIZXIgaG9tZSBpcyBvbmUgYnVpbGRpbmcgYXdheSBmcm9tIGEgQmx1ZSBTa3kgcGhhcm1hY3kgd2hpY2ggb3BlbmVkIGEgZmV3IG1vbnRocyBhZ28sIHNlbGxpbmcgZ2luc2VuZyBhbmQgb3RoZXIgdHJhZGl0aW9uYWwgQ2hpbmVzZSBoZXJiYWwgcmVtZWRpZXMgYXMgd2VsbCBhcyBXZXN0ZXJuIG1lZGljaW5lcy4gVGhlIGNvbGxhdGVyYWxpemF0aW9uIG9mIGhvbWVzIG1lYW5zIFpob25n4oCZcyBwcm9ibGVtcyBtYXkgc3RyZXRjaCBiYWNrIHRvIHRoZSBiYW5rcy4gT25lLXRoaXJkIHRvIGEgaGFsZiBvZiBtb25leSB1c2VkIGZvciBwcml2YXRlIGxlbmRpbmcgb3JpZ2luYWxseSBjb21lcyBmcm9tIGJhbmtzLCBzYWlkIEx1IFRpbmcsIGFuIGVjb25vbWlzdCB3aXRoIEJhbmsgb2YgQW1lcmljYSBDb3JwLuKAmXMgYnJva2VyYWdlIHVuaXQuIFRpZ2h0ZW5pbmcgY2FzaCBmbG93IGZvciBidXNpbmVzc2VzIGNvbnRpbnVlcyB0byByYWlzZSB0aGUgcmlzayBvZiBiYW5rIGxvYW5zIGdvaW5nIGJhZCwgYWNjb3JkaW5nIHRvIGEgc3RhdGVtZW50IGZyb20gV2VuemhvdeKAmXMgRmluYW5jaWFsIE9mZmljZSBnaXZlbiB0byBCbG9vbWJlcmcgTmV3cyBvbiBPY3QuIDIxLiBUaGUgY3VycmVudCBub24tcGVyZm9ybWluZyBsb2FuIHJhdGUgaW4gV2VuemhvdSBpcyBjb250cm9sbGFibGUgYW5kIGJlbG93IHRoZSBuYXRpb25hbCBhdmVyYWdlLCBpdCBhZGRlZC4gVGhlIGluZm9ybWFsIGxlbmRpbmcgbmV0d29yayB3b3JrZWQgdW50aWwgdGhlIHN1bW1lciBvZiAyMDEwIHdoZW4gc29tZSBvZiBaaG9uZ+KAmXMgdmlsbGFnZXJzIHdlcmUgdW5hYmxlIHRvIGdldCBuZXcgbG9hbnMgZnJvbSB0aGUgYmFua3MgYXMgZ292ZXJubWVudCB0aWdodGVuaW5nIGtpY2tlZCBpbiwgaGUgc2FpZC4gUmlzaW5nIENvc3RzIFdlbnpob3XigJlzIGJ1c2luZXNzZXMgd2VyZSBhbHJlYWR5IGZhY2luZyB0b3VnaGVyIHRpbWVzIGJlY2F1c2Ugb2YgZGVjbGluaW5nIGV4cG9ydHMgdG8gRXVyb3BlIGFuZCB0aGUgVS5TLiBhbmQgcmlzaW5nIGxhYm9yIGNvc3RzLCBDaGVuIFl1eXUsIGFzc29jaWF0ZSBwcm9mZXNzb3IgYXQgdGhlIEd1YW5naHVhIFNjaG9vbCBvZiBNYW5hZ2VtZW50IGF0IFBla2luZyBVbml2ZXJzaXR5LCBzYWlkLiBNaW5pbXVtIHdhZ2VzIGluIFpoZWppYW5nIHByb3ZpbmNlLCB3aGVyZSBXZW56aG91IGlzIGxvY2F0ZWQsIGhhdmUgcmlzZW4gMTkgcGVyY2VudCBpbiAyMDExIGZyb20gbGFzdCB5ZWFyLCBhY2NvcmRpbmcgdG8gTG9uZG9uLWJhc2VkIFN0YW5kYXJkIENoYXJ0ZXJlZCBQbGMuIFpob25nIG5lZWRlZCBjYXNoIHRvIGtlZXAgcGF5aW5nIGhpcyBzdXBwbGllcnMsIHJlbnQgYW5kIGVtcGxveWVlcy4gU2Nhbm5pbmcgdGhlIGxvY2FsIHBhcGVyIG9uZSBkYXksIGhlIHNhdyBhbiBhZCBmb3IgbG9hbnMgd2l0aG91dCBjb2xsYXRlcmFsLiBIZSBkaWFsZWQgdGhlIG51bWJlciBhbmQgYXJyYW5nZWQgdG8gYm9ycm93IDYwMCwwMDAgeXVhbiBmb3Igb25lIG1vbnRoLCBmcm9tIHdoYXQgWmhvbmcgY2FsbGVkIGEg4oCcZ2FvbGlkYWks4oCdIGEgQ2hpbmVzZSB0ZXJtIGZvciBhIGxvYW4gc2hhcmsuIEhlIGJvcnJvd2VkIGFnYWluIGFuZCBzdGFydGVkIHRvIGp1c3QgcGF5IGludGVyZXN0IGFuZCByb2xsIG92ZXIgdGhlIHByaW5jaXBhbCwgaGUgc2FpZC4gUmF0ZXMgcm9zZSB0byA3IHBlcmNlbnQgYSBtb250aC4gQmxhY2sgbWFya2V0IHJhdGVzIGhhdmUgZG91YmxlZCB0aGlzIHllYXIsIGZhciBleGNlZWRpbmcgdGhlIHJldHVybiBvZiBjb21wYW5pZXMgaW4gV2VuemhvdSB0aGF0IHR5cGljYWxseSBoYXZlIHdhZmVyLSB0aGluIHByb2ZpdCBtYXJnaW5zLCBhY2NvcmRpbmcgdG8gUmVuIFhpYW5mYW5nLCBhIEJlaWppbmctYmFzZWQgZWNvbm9taXN0IHdpdGggSUhTIEdsb2JhbCBJbnNpZ2h0IEx0ZC4gSGlnaCBJbnRlcmVzdCBSYXRlcyBDdXJiIGxlbmRlcnMgZGVtYW5kIGFubnVhbCBpbnRlcmVzdCBvZiBiZXR3ZWVuIDIwIHBlcmNlbnQgYW5kIDQwIHBlcmNlbnQgb3IgaGlnaGVyLCBtYW55IHRpbWVzIHRoZSBvZmZpY2lhbCBsZW5kaW5nIHJhdGUgb2YgNi41NiBwZXJjZW50IGEgeWVhciwgVUJT4oCZcyBXYW5nIHNhaWQuIFRoZSByYXRlIHJvc2UgYXMgQ2hpbmHigJlzIG5ldyBiYW5rIGxvYW5zIGRlY3JlYXNlZCwgZG93biB0byBhIDIxLW1vbnRoIGxvdyBvZiA0NzAgYmlsbGlvbiB5dWFuIGluIFNlcHRlbWJlci4gWmhvbmcgdGhvdWdodCBoaXMgcHJvYmxlbXMgd291bGQgYmUgc29sdmVkIGluIEF1Z3VzdCBhZnRlciB0d28gZnJpZW5kcyBhZ3JlZWQgdG8gYWN0IGFzIGd1YXJhbnRlZXMgYW5kIGhlIGZpbmFsbHkgc2VjdXJlZCBhIGxvYW4gZnJvbSB0aGUgbG9jYWwgYnJhbmNoIG9mIEZ1emhvdS1iYXNlZCBJbmR1c3RyaWFsIEJhbmsgQ28uIEl0IHdhcyBmb3IgMTUgbWlsbGlvbiB5dWFuIGF0IDEgcGVyY2VudCBhIG1vbnRoLCBkaXZpZGVkIGludG8gdHdvIHRyYW5jaGVzLiBPbmUgb2YgdGhlIGd1YXJhbnRvcnMgcHV0IHVwIGhpcyBkb3dudG93biBhcGFydG1lbnQgYXMgY29sbGF0ZXJhbCBpbiBleGNoYW5nZSBmb3IgNjAsMDAwIHl1YW4gYSBtb250aCBmcm9tIFpob25nLCBoZSBzYWlkLiBUaGVyZSB3YXMgYSBzbmFnLiBCeSBub3csIFpob25nIHNhaWQgaGUgb3dlZCB0aGUg4oCcZ2FvbGlkYWnigJ0gNCBtaWxsaW9uIHl1YW4uIFRoZSBmaXJzdCB0cmFuY2hlIG9mIHRoZSBiYW5rIGxvYW4gbW9zdGx5IHdlbnQgdG8gcGF5aW5nIHRoYXQgZGVidC4gVGhlIGxlbmRlciBzYWlkIE9jdC4gMjAgaGUgd2FzIG5vIGxvbmdlciBpbiB0aGUgYnVzaW5lc3Mgd2hlbiByZWFjaGVkIGJ5IHBob25lLCBkZWNsaW5pbmcgdG8gY29tbWVudCBhbnkgZnVydGhlci4gVGhlIEluZHVzdHJpYWwgQmFua+KAmXMgV2VuemhvdSBicmFuY2ggd291bGRu4oCZdCBjb21tZW50IG9uIFpob25n4oCZcyBjYXNlLiBXYXJlaG91c2UgTW9iYmVkIFdoZW4gd29yZCBvZiBaaG9uZ+KAmXMgc2hvcnRmYWxsIHNwcmVhZCwgYW5ncnkgY3JlZGl0b3JzIGNvbnZlcmdlZCBvbiBoaXMgd2FyZWhvdXNlIGRlbWFuZGluZyB0aGVpciBtb25leSBiYWNrLCBaaG9uZyBhbmQgdmlsbGFnZXJzIHNhaWQuIFpob25nIHNheXMgaGUgc3RydWdnbGVkIHRvIGNhbG0gdGhlbSBkb3duIGFzIHRoZXkgc3RhcnRlZCB0b3NzaW5nIGN1cHMgb24gdGhlIGZsb29yIGFuZCBncmFiYmluZyBib3hlcyBvZiBtZWRpY2luZXMuIEluIFNlcHRlbWJlciwgdGhlIGFsYXJtIHNwcmVhZCBhY3Jvc3MgV2VuemhvdSBhZnRlciBuZXdzcGFwZXJzIHJlcG9ydGVkIGJ1c2luZXNzbWVuIGhhZCBmbGVkIG9yIGtpbGxlZCB0aGVtc2VsdmVzIGJlY2F1c2UgdGhleSBjb3VsZG7igJl0IHBheSBkZWJ0cy4g4oCcRXZlcnlvbmUgd2FzIG5lcnZvdXMgYW5kIGluc2VjdXJlLOKAnSBzYWlkIHRoZSBtdXN0YWNoaW9lZCBaaG9uZywgc29ja2xlc3MgaW4gbGVhdGhlciBzaG9lcywgc3RhbmRpbmcgbmVhciBhIGRhcmtlbmVkIGNvbmZlcmVuY2Ugcm9vbSB3aXRoIGEgYnVzdCBvZiBDaGFpcm1hbiBNYW8uIOKAnFBhbmljIHdhcyBldmVyeXdoZXJlLiBCbHVlIFNreSBpcyBmYW1vdXMgbm93IC0tIGZvciBvd2luZyBkZWJ0LiBObyBvbmUgaXMgZ29pbmcgdG8gbGVuZCBtZSBtb25leS7igJ0gTG9ic3RlciBEaW5uZXIgWmhvbmfigJlzIHByb2JsZW1zIGFyZSBzaGFyZWQgYnkgbWFueSBvdGhlciBidXNpbmVzcyBvd25lcnMuIEEgZmV3IHdlZWtzIGFnbywgYSBncm91cCBvZiBhYm91dCAyMCBnYXRoZXJlZCBpbiBvbmUgb2YgdGhlIG1hcmJsZWQgcHJpdmF0ZSByb29tcyB0byBmZWFzdCBvbiBsb2JzdGVyIGFuZCBzdGVhayBhdCBIYWkgWWFuIExvdSwgYSBDYW50b25lc2UgcmVzdGF1cmFudCBhY3Jvc3MgdGhlIHN0cmVldCBmcm9tIHRoZSBsb2NhbCBvZmZpY2VzIG9mIENoaW5h4oCZcyBiYW5raW5nIHJlZ3VsYXRvci4gVGhlIG1vb2Qgd2FzIGdyaW0uIFRoZXkgdGFsa2VkIGFib3V0IHRoZSByZWNlbnQgc3VpY2lkZSBvZiBzaG9lIGZhY3Rvcnkgb3duZXIgU2hlbiBiZWNhdXNlIGhlIGNvdWxkbuKAmXQgcmVwYXkgZGVidHMsIGFuZCB0aGUgZGlzYXBwZWFyYW5jZSBvZiBhbm90aGVyIGJvc3Mgd2hvIG93ZWQgdGhlbSBtb25leSwgYWNjb3JkaW5nIHRvIFlhbmcgWGksIHRoZSBvd25lciBvZiBhIGNvbXBhbnkgdGhhdCBtYWtlcyBkeWVzIGZvciBzaG9lcyBhbmQgdGV4dGlsZXMsIHdobyB3YXMgdGhlcmUuIEVhY2ggbWFuIHByZXNlbnQgZG93bmVkIGEgYm90dGxlIG9mIE1vdXRhaSwgYW4gZXhwZW5zaXZlIGJyYW5kIG9mIENoaW5lc2UgbGlxdW9yIG1hZGUgZnJvbSBzb3JnaHVtLCBiZWNhdXNlIHRoZXkgZmVhcmVkIHRoZXkgbWF5IG5ldmVyIGJlIGFibGUgdG8gYWZmb3JkIHRoZSBsdXh1cnkgYWdhaW4sIHNoZSBzYWlkLiBCeSBPY3RvYmVyLCB0aGUgZGV0ZXJpb3JhdGluZyBzaXR1YXRpb24gaW4gV2VuemhvdSBwcm9tcHRlZCB0aGUgdmlzaXQgYnkgdGhlIHByZW1pZXIsIHdoaWNoIHRyaWdnZXJlZCBhIHJhZnQgb2YgaW5pdGlhdGl2ZXMgdG8gaGVscCBwcml2YXRlIGJ1c2luZXNzZXMuIOKAnEFmdGVyIFByZW1pZXIgV2Vu4oCZcyB2aXNpdCwgSSBzZW50IHRleHQgbWVzc2FnZXMgdG8gZnJpZW5kcyBhbGwgb3ZlciB0aGUgd29ybGQgdGhhdCBXZW56aG91IHdpbGwgYmUgcmVzY3VlZCzigJ0gWWFuZyBzYWlkLiBFbWVyZ2VuY3kgRnVuZCBDaGluYeKAmXMgYmFua2luZyByZWd1bGF0b3Igc2FpZCBsYXRlciBpdCB3b3VsZCBsZXQgYmFua3Mgc2VsbCBib25kcyB0byByYWlzZSBtb25leSBmb3IgbG9hbnMgdG8gc21hbGwgZW50ZXJwcmlzZXMgYW5kIHRvbGVyYXRlIGhpZ2hlciByYXRlcyBvZiBub24tcGVyZm9ybWluZyBsb2FucyBhbW9uZyBvdGhlciBtZWFzdXJlcyB0byBlbmNvdXJhZ2UgYmFuayBsZW5kaW5nLiBJbiBXZW56aG91LCB0aGUgbG9jYWwgZ292ZXJubWVudCBzZXQgdXAgYW4gZW1lcmdlbmN5IDEgYmlsbGlvbiB5dWFuIGZ1bmQuIEl0cyBhbnRpLWxvYW4gc2hhcmsgY2FtcGFpZ24gbGVkIHRvIHRoZSBPY3QuIDI3IGFycmVzdCBvZiBhIGNvdXBsZSBzdXNwZWN0ZWQgb2YgaWxsZWdhbGx5IHJhaXNpbmcgMS4zIGJpbGxpb24geXVhbiwgYWNjb3JkaW5nIHRvIHRoZSBDaGluYSBEYWlseS4gQSBmZXcgYnVzaW5lc3NtZW4gd2hvIGhhZCBmbGVkIFdlbnpob3UgaGF2ZSByZXR1cm5lZCBzaW5jZSBXZW7igJlzIHZpc2l0LCBhY2NvcmRpbmcgdG8gWmhvdSBvZiB0aGUgc21hbGwgYnVzaW5lc3MgYXNzb2NpYXRpb24uIE90aGVycyBoYXZlIGJlZW4gdHJhY2tlZCBkb3duIGFuZCBhcnJlc3RlZCwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBYaW5odWEgTmV3cyBBZ2VuY3kuIEFuYWx5c3RzIGFyZSB0cnlpbmcgdG8gYXNjZXJ0YWluIGhvdyBlZmZlY3RpdmUgdGhlIG1lYXN1cmVzIGFyZSBhbmQgaG93IHdpZGVzcHJlYWQgdGhlIGZhbGxvdXQgZnJvbSBXZW56aG91IHdpbGwgYmUgYWNyb3NzIENoaW5hLiBUaGUgY2l0eSBpcyBub3cgdGhlIGNvdW50cnnigJlzIGJpZ2dlc3Qgc291cmNlIG9mIHByaXZhdGUgY2FwaXRhbCwgbWFyc2hhbGluZyBhYm91dCA4MDAgYmlsbGlvbiB5dWFuLCBlcXVpdmFsZW50IHRvIDIgcGVyY2VudCBvZiBDaGluYeKAmXMgdG90YWwgZWNvbm9taWMgb3V0cHV0LCBhY2NvcmRpbmcgdG8gUmVuIG9mIElIUyBHbG9iYWwuIE1vbmV5IGZyb20gV2VuemhvdSBpcyBpbnZlc3RlZCBpbiBldmVyeXRoaW5nIGZyb20gcmVhbCBlc3RhdGUgaW4gRHViYWkgdG8gY29hbCBtaW5lcyBpbiBTaGFueGkgcHJvdmluY2UsIGluIENoaW5h4oCZcyBub3J0aHdlc3QuIEFmdGVyIGEgcmVzZWFyY2ggdHJpcCB0byBXZW56aG91LCBCYW5rIG9mIEFtZXJpY2HigJlzIEx1IHNhaWQgaW4gYW4gT2N0LiAyNSByZXBvcnQgdGhhdCB0aGUgY2hhbmNlcyBvZiBhIG5hdGlvbndpZGUgbGlxdWlkaXR5IHNxdWVlemUgd2VyZSBsb3cuIEJyb2FkZXIgUHJvYmxlbXMgT3RoZXJzIHNlZSBXZW56aG91IGFzIHN5bXB0b21hdGljIG9mIGJyb2FkZXIgcHJvYmxlbXMsIHN1Y2ggYXMgYW4gb3Zlci1yZWxpYW5jZSBvbiBpbnZlc3RtZW50IHRvIGdyb3cgdGhlIGVjb25vbXkgdGhhdCBzdGVlcnMgbW9uZXkgdG93YXJkIHN0YXRlLW93bmVkIGNvbXBhbmllcywgc2FpZCBNaWNoYWVsIFBldHRpcywgdGhlIEJlaWppbmctYmFzZWQgY2hpZWYgc3RyYXRlZ2lzdCBhdCBHdW9zZW4gU2VjdXJpdGllcyBDby4g4oCcWW91IGNhbiBzb2x2ZSBXZW56aG91LCBidXQgeW914oCZcmUgc2ltcGx5IHRyYW5zZmVycmluZyB0aGUgcHJvYmxlbSBzb21lcGxhY2UgZWxzZSzigJ0gaGUgc2FpZC4gWmhvbmcsIHRoZSBwaGFybWFjaXN0LCBzYXlzIGhl4oCZcyBmaWxlZCBhIHJlcG9ydCB0byB0aGUgbG9jYWwgZ292ZXJubWVudCBob3BpbmcgdG8gYmVuZWZpdCBmcm9tIHRoZSBiYWlsb3V0IHBsYW4uIEhlIHNwZW5kcyBoaXMgZGF5cyBhbmQgbmlnaHRzIGluIHRoZSB3YXJlaG91c2Ugb2YgaGlzIGNydW1ibGluZyBkcmVhbS4gSGXigJlzIHNvbGQgb2ZmIGhpcyBCTVcgYW5kIGxpdmVzIGluIGEgY29tcGFueSBkb3JtaXRvcnkuIEhpcyB3aWZlIHNsZWVwcyBpbiBvbmUgb2YgdGhlaXIgc3RvcmVzIGFuZCB0aGV54oCZdmUgc2VudCB0aGVpciBkYXVnaHRlciB0byBsaXZlIGF0IHNjaG9vbC4gWmhvbmcgcmVjb3VudGVkIGhpcyBuaWdodCBhdCB0aGUgY29mZmVlIHNob3AuIEFsZXJ0ZWQgdG8gdGhlIGluY2lkZW50IGJ5IFpob25n4oCZcyB3aWZlLCBhIG1vcmUgc3ltcGF0aGV0aWMgY3JlZGl0b3IgY2FtZSBieSBkZW1hbmRpbmcgaGlzIHJlbGVhc2UsIHNheWluZyB0aGUgcGhhcm1hY2lzdCBvd2VkIGhpbSBldmVuIG1vcmUgbW9uZXkuIFRoZSBydXNlIHdvcmtlZCwgWmhvbmcgc2FpZC4gSGlzIG9mZmVyIGZvciBhIGZpbmdlciB3YXMgZGVjbGluZWQuIEhlIHNheXMgaGXigJlsbCBwcm9iYWJseSBzdGlsbCBsb3NlIGhpcyBidXNpbmVzcy4gSGXigJlzIG5lZ290aWF0aW5nIHRvIHRyYW5zZmVyIGl0IHRvIGhpcyAxMzAgY3JlZGl0b3JzLiBUaGV5IHdvdWxkIGtlZXAgaGltIG9uIGFzIGEgcGFpZCBtYW5hZ2VyLiDigJxNeSB3aWZlIGFuZCBJIHdpbGwgcHJvYmFibHkgaGF2ZSBub3RoaW5nIGxlZnQs4oCdIGhlIHNhaWQu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATN8nKMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGJhYzM0NzI1NmU0ZDE0ZTM=</field><field name="symbol" class="java.lang.String">rO0ABXQABExPQU4=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATOBwv8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/yj1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/yj1wo9cKP</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/wAAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/wKPXCj1wp</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/tcKPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAH0A==</field><field name="id" class="java.lang.String">rO0ABXQAEDhlMzNhZjQ5YjBjMTQ4OTc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mF7zAAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPxFYgw==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExMzg5</field><field name="title" class="java.lang.String">rO0ABXQANEJ1aWxkZXJzIFJhY2UgdG8gS2VlcCBVcCBXaXRoIFN1cmdpbmcgVVMgSG9tZSBEZW1hbmQ=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT+dwGiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGFjOTM3ZWVhNDVhOGRjZGI=</field><field name="symbol" class="java.lang.String">rO0ABXQAA1RQSA==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT+i5sSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAv+uFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwMKPXCj1x</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAvTMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwFHrhR64U</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwFHrhR64U</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAGnDA==</field><field name="id" class="java.lang.String">rO0ABXQAEGE1NDBjYTMwMTM4YjE5OGU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGQvAAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPw7C4g==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDcyMzE=</field><field name="title" class="java.lang.String">rO0ABXQANU5vbXVyYTogSmFwYW4ncyBDZW50cmFsIEJhbmsgSGVscHMgVVMgRmVkLCBIb21lYnV5ZXJz</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4G6gSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDA0N2Q2ZjYyNjMyMTFkYzg=</field><field name="symbol" class="java.lang.String">rO0ABXQABkZOTS5CRQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4MEGCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/hR64UeuFI</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/hmZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/hR64UeuFI</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/hmZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/hmZmZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAA2sA==</field><field name="id" class="java.lang.String">rO0ABXQAEDk4ZGY3MzNkYTZkNGM5YzE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mIUGAAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPwt3Pg==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDIxODE=</field><field name="title" class="java.lang.String">rO0ABXQAMkZvciBXYWxsIFN0cmVldCwgRmlyc3QgSGFsZiBXaWxsIEJlIFRvdWdoIHRvIE1hdGNo</field><field name="content" class="java.lang.String">rO0ABXQWkEhpc3Rvcnkgc3VnZ2VzdHMgc3RvY2sgaW52ZXN0b3JzIHdpbGwgbWFrZSBtb3JlIG1vbmV5IHRoZSBzZWNvbmQgaGFsZiBvZiB0aGUgeWVhci7CoCBTaW5jZSBXb3JsZCBXYXIgSUksIGEgYmlnIGluY3JlYXNlIGluIHRoZSBmaXJzdCBoYWxmIG9mIGEgeWVhciBoYXMgYWxtb3N0IGFsd2F5cyBiZWVuIGZvbGxvd2VkIGJ5IG1vcmUgZ2FpbnMgaW4gdGhlIHNlY29uZCBoYWxmLsKgIEluIHRoZSA2OCB5ZWFycyBiZWdpbm5pbmcgd2l0aCAxOTQ2LCB0aGUgUyZQIDUwMCBpbmRleCBoYXMgcmlzZW4gIDEwIHBlcmNlbnQgb3IgbW9yZSAyMyB0aW1lcywgYWNjb3JkaW5nIHRvIGRhdGEgZnJvbSBTJlAgRG93IEpvbmVzICBJbmRpY2VzLiBEdXJpbmcgdGhvc2UgMjMgeWVhcnMsIHRoZSBtYXJrZXQgcm9zZSB0aGUgc2Vjb25kIGhhbGYgb2YgdGhlICB5ZWFyIDE5IHRpbWVzLiBFbGV2ZW4gb2YgdGhvc2UgeWVhcnMsIG9yIG5lYXJseSBoYWxmLCB0aGUgUyZQIDUwMCAgcm9zZSBhdCBsZWFzdCAxMCBwZXJjZW50IHRoZSBzZWNvbmQgaGFsZiBvZiB0aGUgeWVhci4gVGhlIGJlc3Qgc2Vjb25kIGhhbGYgd2FzIGluIDE5NTQsIGluIHRoZSBtaWRkbGUgb2YgdGhlIHN0b2NrIG1hcmtldCdzICBsb25nZXN0IGJ1bGwgcnVuLiBTdG9ja3MgaW5jcmVhc2VkIDI2LjIgcGVyY2VudCBKdWx5LURlY2VtYmVyLiBUaGUgIHdvcnN0IHNlY29uZCBoYWxmIHdhcyBpbiAxOTg3LiBUaGUgIkJsYWNrIE1vbmRheSIgbWFya2V0IGNyYXNoIHdhcyBPY3QuICAxOSwgYW5kIHN0b2NrcyBmZWxsIDE3LjQgcGVyY2VudCB0aGUgc2Vjb25kIGhhbGYgb2YgdGhlIHllYXIuIEluIHllYXJzIGxpa2UgdGhpcyBvbmUsIGluIHdoaWNoIHN0b2NrcyBoYXZlIHN0YXJ0ZWQgd2l0aCBhIGdhaW4gb2YgIGJldHdlZW4gMTAgYW5kIDE1IHBlcmNlbnQsIHRoZSBhdmVyYWdlIHNlY29uZC1oYWxmIGluY3JlYXNlIGhhcyBiZWVuIDkuNCAgcGVyY2VudC4gVGhvc2UgbnVtYmVycyBzdWdnZXN0IHRoYXQgd2hlbiBhIHJhbGx5IGdldHMgZ29pbmcsIGl0IGtlZXBzIGdvaW5nLiBPZiBjb3Vyc2UsIHBhc3QgcGVyZm9ybWFuY2UgaXMgbm8gIGd1YXJhbnRlZSBvZiB0aGUgbWFya2V0J3MgZnV0dXJlLCBhbmQgaW52ZXN0b3JzIGZhY2Ugc29tZSBodXJkbGVzIGluICB0aGlzIHllYXIncyBzZWNvbmQgaGFsZi4gVGhlIEZlZGVyYWwgUmVzZXJ2ZSBoYXMgaGVscGVkIHN0b2NrcyByYWxseSBieSAgZm9yY2luZyBkb3duIGludGVyZXN0IHJhdGVzLiAgQnV0IHRoZSBjZW50cmFsIGJhbmsgaXMgY29uc2lkZXJpbmcgcmVkdWNpbmcgdGhhdCBzdGltdWx1cyBsYXRlciB0aGlzICB5ZWFyLiBBbHNvLCBjb25jZXJucyBhYm91dCB0aGUgQ2hpbmVzZSBlY29ub215LCB0aGUgd29ybGQncyAgc2Vjb25kLWxhcmdlc3QsIGhhdmUgdW5zZXR0bGVkIG1hcmtldHMgaW4gcmVjZW50IHdlZWtzLsKgIEJ1dCB0aGUgZmFjdG9ycyB0aGF0IGRyb3ZlIHRoZSBtYXJrZXQgbWV0aG9kaWNhbGx5IGhpZ2hlciB0aGUgZmlyc3QgIGZpdmUgbW9udGhzIG9mIHRoZSB5ZWFyIHJlbWFpbjogVGhlIGhvdXNpbmcgbWFya2V0IGlzIHN0cmVuZ3RoZW5pbmcuICBBdXRvIHNhbGVzIGFyZSBzdHJvbmcuIENvbXBhbmllcyBjb250aW51ZSB0byBlYXJuIHJlY29yZCBwcm9maXRzLiAgSW5mbGF0aW9uIGFuZCBpbnRlcmVzdCByYXRlcyBhcmUgdWx0cmEgbG93LiBUaGUgZWNvbm9teSBpcyBncm93aW5nICBtb2RlcmF0ZWx5IGFuZCBtYXkgcGljayB1cCB0aGUgc2Vjb25kIGhhbGYgb2YgdGhlIHllYXIuICJXZSdyZSBnb2luZyBoaWdoZXIsIiBzYWlkIFBoaWwgT3JsYW5kbywgQ2hpZWYgRXF1aXR5IFN0cmF0ZWdpc3QgIGF0IEZlZGVyYXRlZCBJbnZlc3RvcnMuICJSaXNpbmcgc3RvY2sgcHJpY2VzIGFuZCByaXNpbmcgcmVhbCBlc3RhdGUgIHByaWNlcyBhcmUgbWFraW5nIHBlb3BsZSBmZWVsIGJldHRlciBhYm91dCB0aGVpciBmaW5hbmNpYWwgY29uZGl0aW9uIC4uLiAgU28gd2UgdGhpbmsgdGhhdCBzZWNvbmQtaGFsZiBHRFAgYW5kIHNlY29uZC1oYWxmIGVhcm5pbmdzIGFyZSBnb2luZyB0byAgYmUgYmV0dGVyIHRoYW4gdGhlIGZpcnN0IGhhbGYuIsKgIE9ybGFuZG8gcHJlZGljdHMgdGhhdCB0aGUgUyZQIDUwMCB3aWxsIGVuZCB0aGUgeWVhciBhdCAxLDc1MC4gQWx0aG91Z2ggbWFueSBpbnZlc3RvcnMgaGFkIGV4cGVjdGVkIHN0b2NrcyB0byBjbGltYiB0aGlzIHllYXIsIHRoZXkgIHdlcmUgc3VycHJpc2VkIGF0IHRoZSBzcGVlZCBvZiB0aGUgYWR2YW5jZSBlYXJseSBvbi4gQnkgTWF5IDIxLCB0aGUgIFMmUCA1MDAgaGFkIGNsaW1iZWQgdG8gYSByZWNvcmQgMSw2NjkgYW5kIHdhcyB1cCAxNyBwZXJjZW50LiBBIGRheSAgbGF0ZXIsIEZlZCBjaGFpcm1hbiBCZW4gQmVybmFua2Ugc2FpZCB0aGUgY2VudHJhbCBiYW5rIHdhcyBjb25zaWRlcmluZyAgcHVsbGluZyBiYWNrIG9uIGl0cyBzdGltdWx1cy4gVGhlIG1hcmtldCdzIGFkdmFuY2UgY29vbGVkLCBhbmQgdGhlICBTJlAgaGFzIGxvc3QgMyBwZXJjZW50IHNpbmNlLiBBZGQgZGl2aWRlbmRzIHRvIHRoZSBTJlAgNTAwJ3MgcHJpY2UgcmlzZSBhbmQgdGhlIHRvdGFsIHJldHVybiBmb3IgaW52ZXN0b3JzIGlzIDEzLjggcGVyY2VudCDigJQgdGhlIG1vc3QgaW4gMTUgeWVhcnMuwqAgIldlJ3JlIG5vdCBzdXJwcmlzZWQgYXQgdGhlIHBvc2l0aXZlIHBlcmZvcm1hbmNlIGFjcm9zcyBVLlMuIGVxdWl0eSAgbWFya2V0cyB0aGlzIHllYXIgYmVjYXVzZSB0aGUgZnVuZGFtZW50YWxzIG9mIHRoZSBlY29ub215IGFyZSAgaW1wcm92aW5nLCIgc2F5cyBTdGV2ZSBSZWVzLCBoZWFkIG9mIFUuUy4gRXF1aXR5IFN0cmF0ZWd5IGZvciBKUE1vcmdhbiAgUHJpdmF0ZSBCYW5rLiAiV2Ugd2VyZSBzdXJwcmlzZWQsIHRob3VnaCwgYXQgaG93IHF1aWNrbHkgd2UgYWNoaWV2ZWQgIHRoYXQgcGVyZm9ybWFuY2UgYXQgdGhlIHN0YXJ0IG9mIHRoZSB5ZWFyLiIgSGVyZSBhcmUgdGhlIGZpdmUgYmVzdCBmaXJzdCBoYWx2ZXMgZm9yIHRoZSBTJlAgNTAwIHNpbmNlIFdvcmxkICBXYXIgSUkuIERhdGEgYmVmb3JlIDE5NTcsIHdoZW4gdGhlIFMmUCA1MDAgd2FzIGxhdW5jaGVkLCBjb21iaW5lIHRoZSAgdmFsdWVzIGZvciBmb3VyIGVhcmxpZXIgUyZQIGluZGljZXM6IHRoZSBpbmR1c3RyaWFscywgdXRpbGl0aWVzLCAgZmluYW5jaWFscyBhbmQgdHJhbnNwb3J0YXRpb246IOKAlCAxOTc1LiBGaXJzdCBoYWxmOiB1cCA0MS43IHBlcmNlbnQuIFNlY29uZCBoYWxmOiBkb3duIDMuMiBwZXJjZW50LsKgIFRoZSAxOTcwcyBiZWdhbiB3aXRoIGEgYnVsbCBydW4sIGJ1dCB0aGluZ3Mgc29vbiB3ZW50IHNvdXIuIFRoZSBvaWwgIGNyaXNpcyBvZiAxOTczLTE5NzQgY2F1c2VkIG9pbCBwcmljZXMgdG8gc29hciBhbmQgdGhlIGVjb25vbXkgZW50ZXJlZCAgaW50byB3aGF0IHdvdWxkIGJlIGEgMTYtbW9udGggcmVjZXNzaW9uIGluIE5vdmVtYmVyIDE5NzMuIFRoZSBhbm51YWwgIHJhdGUgb2YgaW5mbGF0aW9uIGJlZ2FuIHRvIGNsaW1iLiBJdCBzdXJnZWQgYXMgaGlnaCBhcyAxMi4yIHBlcmNlbnQgaW4gIE5vdmVtYmVyIDE5NzQgZnJvbSAzLjQgcGVyY2VudCBhIHllYXIgZWFybGllci4gVGhlIFMmUCA1MDAgZHJvcHBlZCAgNDggcGVyY2VudCBiZXR3ZWVuIEphbi4gMTEsIDE5NzMgYW5kIE9jdC4gNCwgMTk3NC4gVGhlIG1hcmtldCBzb2FyZWQgaW4gdGhlIGZpcnN0IGhhbGYgb2YgMTk3NSBhcyBpbmZsYXRpb24gbW9kZXJhdGVkICBhbmQgaW52ZXN0b3JzIGdyZXcgaG9wZWZ1bCB0aGUgZWNvbm9teSB3YXMgcHVsbGluZyBvdXQgb2YgaXRzIHNsdW1wLiBUaGUgIG1hcmtldCBnYXZlIHVwIHNvbWUgb2YgaXRzIGdhaW4gaW4gdGhlIHNlY29uZCBoYWxmIG9mIHRoZSB5ZWFyIGFzICBkb3VidHMgYWJvdXQgdGhlIHN0cmVuZ3RoIG9mIHRoZSBlY29ub21pYyByZWNvdmVyeSBncmV3IGFuZCBjb25jZXJuIHJvc2UgIHRoYXQgaW5mbGF0aW9uIG1pZ2h0IHJlLWVtZXJnZS4gTmV3IFlvcmsgQ2l0eSdzIGZpc2NhbCBjcmlzaXMgYWxzbyAgd2VpZ2hlZCBvbiBtYXJrZXRzLiDigJQgMTk4Ny4gRmlyc3QgaGFsZjogdXAgMjcuNCBwZXJjZW50LiBTZWNvbmQgaGFsZjogZG93biAxNy40IHBlcmNlbnQuIEluIGVhcmx5IDE5ODcsIGludmVzdG9ycyB3ZXJlICBzdGlsbCBlbmpveWluZyBhIGJ1bGwgcnVuIHRoYXQgaGFkIGJlZ3VuIGluIEF1Z3VzdCAxOTgyLiBVbmVtcGxveW1lbnQgIGFuZCBpbmZsYXRpb24gaGFkIGZhbGxlbi4gVGF4IGN1dHMgYW5kIGxvdyBpbnRlcmVzdCByYXRlcyBoYWQgc3Bhd25lZCBhbiBlY29ub21pYyBib29tLsKgIEJ1dCB0aGluZ3MgdW5yYXZlbGVkIGluIGEgYmlnIHdheS4gU3RvY2tzIHBlYWtlZCBvbiBBdWd1c3QgMjUsIHdoZW4gdGhlIFMmUCA1MDAgY2xvc2VkIGF0IGEgcmVjb3JkICAzMzYuIFJpc2luZyBpbnRlcmVzdCByYXRlcyBhbmQgY29uY2VybnMgYWJvdXQgYSBzdG9jayBidWJibGUgcHJvbXB0ZWQgYSAgc2VsbC1vZmYgaW4gT2N0b2Jlci4gVGhhdCBjdWxtaW5hdGVkIGluICdCbGFjayBNb25kYXknIG9uIE9jdC4gMTksIDE5ODcsICB3aGVuIHRoZSBpbmRleCBwbHVuZ2VkIDU3IHBvaW50cywgb3IgMjAuNSBwZXJjZW50LCB0byAyMjQuIOKAlCAxOTgzLiBGaXJzdCBoYWxmOiB1cCAyMi4yIHBlcmNlbnQuIFNlY29uZCBoYWxmOiB1cCAwLjI1IHBlcmNlbnQuIEluIGVhcmx5IDE5ODMsIHRoZSBncmVhdCAnODBzIGJ1bGwgcnVuIHdhcyBqdXN0IGJlZ2lubmluZy4gSXQgaGFkICBzdGFydGVkIHRoZSBwcmV2aW91cyBzdW1tZXIgYWZ0ZXIgdGhlIEZlZCBsb3dlcmVkIGl0cyBiZW5jaG1hcmsgaW50ZXJlc3QgIHJhdGUgZnJvbSAxNC41IHBlcmNlbnQgdG8gMTAgcGVyY2VudC4gUHJlc2lkZW50IFJlYWdhbidzIHRheCBjdXRzIGFsc28gIGdvdCB0aGUgZWNvbm9teSBnb2luZyBhZnRlciBpdCBoYWQgY29udHJhY3RlZCBmb3IgbXVjaCBvZiAxOTgyLiBCdXQgdGhlIHN1cmdlIGluIHN0b2NrcyBzdGFsbGVkIGluIHRoZSBzZWNvbmQgaGFsZi4gSW52ZXN0b3JzIHdvcnJpZWQgdGhhdCB0aGUgZXhwYW5kaW5nIGVjb25vbXkgd291bGQgcmV2aXZlIGluZmxhdGlvbiBhbmQgY29tcGVsIHRoZSBGZWQgdG8gcmFpc2UgcmF0ZXMuwqAg4oCUMTk4Ni4gRmlyc3QgaGFsZjogdXAgMjAuNyBwZXJjZW50LiBTZWNvbmQgaGFsZjogZG93biAxLjggcGVyY2VudC4gVGhlIGZhY3RvcnMgdGhhdCBoYWQgZ2l2ZW4gc3RvY2tzIGEgbGlmdCBpbiAxOTgzIHdlcmUgc3RpbGwgaW4gcGxheS4gIEFsc28sIGZhbGxpbmcgb2lsIHByaWNlcyBoZWxwZWQgbG93ZXIgdGhlIHRocmVhdCBvZiBpbmZsYXRpb24gYW5kICBhbGxvd2VkIHRoZSBGZWQgdG8gY3V0IGludGVyZXN0IHJhdGVzLiBUaGUgcHJpY2Ugb2Ygb2lsIGRyb3BwZWQgYXMgbG93ICBhcyAkMTAuNDIgYSBiYXJyZWwgaW4gTWFyY2gsIGFmdGVyIHN0YXJ0aW5nIHRoZSB5ZWFyIGF0ICQyNi4zMCBhIGJhcnJlbC4g4oCUIDE5NTQuIEZpcnN0IGhhbGY6IHVwIDIwLjYgcGVyY2VudC4gU2Vjb25kIGhhbGY6IHVwIDI2LjIgcGVyY2VudC4gVGhlIHN0b2NrIG1hcmtldCAgd2FzIG9uIGl0cyBsb25nZXN0IGJ1bGwgcnVuLCBmcm9tIDE5NDkgdG8gMTk2MS4gSW4gMTk1NCwgYW4gaW1wcm92aW5nICBlY29ub215IGFuZCByaXNpbmcgY29uZmlkZW5jZSBhZnRlciB0aGUgS29yZWFuIFdhciBoZWxwZWQgc3RvY2tzLiBCeSAgTm92ZW1iZXIsIHRoZSBtYXJrZXQgaGFkIGZpbmFsbHkgcmV0dXJuZWQgdG8gaXRzIHBlYWsgYmVmb3JlIHRoZSBXYWxsICBTdHJlZXQgQ3Jhc2ggb2YgMTkyOS4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT+Tc7CAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDczNjNhMzdjNTUzMzkzZjE=</field><field name="symbol" class="java.lang.String">rO0ABXQAAVA=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT+YmgyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzUeuFHrhS</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA0Sj1wo9cK</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyxR64UeuF</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAy8zMzMzMz</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAy8zMzMzMz</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAARw3YA==</field><field name="id" class="java.lang.String">rO0ABXQAEDAxMmVhOGI0YjllOWMyMDc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGR3AAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPwPxrw==</field></document></documents><date>2015-05-07T07:25:00-0500</date></cacheEntry>
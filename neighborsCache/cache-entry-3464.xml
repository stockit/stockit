<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hUaGUgbm90aW9uIHRoYXQgYSByZWdpb24gYXNzb2NpYXRlZCB3aXRoIHRocmlmdCBsb3cgZGVidCBhbmQgaGlnaCBzYXZpbmdzIGlzIHZ1bG5lcmFibGUgdG8gYW4gZWJiaW5nIHRpZGUgb2YgZ2xvYmFsIGNyZWRpdCBpcyBjb250cm92ZXJzaWFsIEJ1dCB0aGUgc2VsbG9mZiBncmlwcGluZyBlbWVyZ2luZyBmb3JlaWduIGV4Y2hhbmdlIGFuZCBlcXVpdHkgbWFya2V0cyB0aGlzIHdlZWsgaGFzIGV4cG9zZWQgYW4gQXNpYSB0aGF0IGRlc3BpdGUgYW1hc3NpbmcgaHVnZSBjdXJyZW5jeSByZXNlcnZlcyBhbmQgZGV2aXNpbmcgcG9saWNpZXMgdG8gaW5zdWxhdGUgaXQgZnJvbSB0aGUga2luZCBvZiBmdW5kIGZsaWdodCB0aGF0IHRyaWdnZXJlZCB0aGUgQXNpYW4gZmluYW5jaWFsIGNyaXNpcyBpbiAxOTk3IGFuZCAxOTk4IGhhcyBvbmNlIGFnYWluIGJlY29tZSBzdXNjZXB0aWJsZSB0byB0aGUgcmFwaWQgcmV2ZXJzYWwgb2YgY2FwaXRhbCBpbmZsb3dzIFNvbWUgb2YgdGhlIHRhaWx3aW5kcyB0aGF0IEFzaWEgaGFzIGVuam95ZWQgb3ZlciB0aGUgcGFzdCBmaXZlIHRvIDEwIHllYXJzIGFyZSBjb21pbmcgdG8gYW4gZW5kICBhbmQgaW4gc29tZSBjYXNlcyBhcmUgdHVybmluZyBpbnRvIGhlYWR3aW5kcyBzYWlkIEFuZHJldyBTd2FuIGEgcG9ydGZvbGlvIG1hbmFnZXIgYXQgQmxhY2tyb2NrIGluIEhvbmcgS29uZyB3aG8gb3ZlcnNlZXMgcm91Z2hseSAyMiBiaWxsaW9uIGluIEFzaWFuIHN0b2NrcyAgRWNvbm9taXN0cyBiYW5rZXJzIGFuZCBpbnZlc3RvcnMgc2F5IHRoZXkgY2F1Z2h0IGEgZ2xpbXBzZSBvZiBBc2lhcyBwb3NzaWJsZSBmdXR1cmUgaW4gSnVuZSB3aGVuIHJlZ2lvbmFsIG1hcmtldHMgY29udnVsc2VkIGF0IGEgc3VnZ2VzdGlvbiBieSBGZWRlcmFsIFJlc2VydmUgY2hhaXJtYW4gQmVuIEJlcm5hbmtlIHRoYXQgdGhlIGNlbnRyYWwgYmFuayBvZiB0aGUgd29ybGRzIGxhcmdlc3QgZWNvbm9teSBtaWdodCBzdGFydCBzY2FsaW5nIGJhY2sgcXVhbnRpdGF0aXZlIGVhc2luZyBvciBRRSBUaG9zZSBjb25jZXJucyBoYXZlIHJldHVybmVkIHdpdGggYSB2ZW5nZWFuY2UgdGhpcyB3ZWVrIHRvIGJhdHRlciBtYXJrZXRzIGluIEluZGlhIGFuZCBJbmRvbmVzaWEgSGF2aW5nIGZhaWxlZCB0byBkaXNtYW50bGUgcG9saXRpY2FsbHkgYW5kIHNvY2lhbGx5IGtub3R0eSBvYnN0YWNsZXMgdG8gZ3Jvd3RoIEFzaWEgaGFzIGluc3RlYWQgcmVsaWVkIG9uIGxvdyBpbnRlcmVzdCByYXRlcyBhbmQgbWFzc2l2ZSBib3Jyb3dpbmcgdG8ga2VlcCBpdHMgZWNvbm9taWVzIGV4cGFuZGluZyBwYXJ0aWN1bGFybHkgc2luY2UgdGhlIDIwMDgwOSBnbG9iYWwgZmluYW5jaWFsIGNyaXNpcyB0aGF0IHByb21wdGVkIHRoZSBGZWQgdG8gc3RhcnQgYWdncmVzc2l2ZWx5IGJ1eWluZyBib25kcyBBcyBhIHJlc3VsdCBpZiBhbmQgd2hlbiBRRSBmaW5hbGx5IGVuZHMgQXNpYSBjb3VsZCBmaW5kIGl0cyBncm93dGggdGFyZ2V0cyBtdWNoIG1vcmUgY29zdGx5IHRvIGFjaGlldmUgUG9saWN5bWFrZXJzIGhhdmUgYmVlbiBzbyB3b3JyaWVkIGFib3V0IHRyeWluZyB0byBrZWVwIGdyb3d0aCBnb2luZyB0aGV5dmUgZWFzZWQgYWxsIHRoZSBraW5kIG9mIHN0aW11bHVzIGxldmVycyBidXQgaGF2ZSBkb25lIHRoYXQgYXQgdGhlIGV4cGVuc2Ugb2Ygc3RydWN0dXJhbCByZWZvcm1zIHNhaWQgUm9iIFN1YmJhcmFtYW4gY2hpZWYgQXNpYSBlY29ub21pc3QgYXQgTm9tdXJhIGluIFNpbmdhcG9yZSBUaGF0cyBjb21pbmcgYmFjayB0byBiaXRlIHRoZW0gV2hlcmUgaXQgYml0ZXMgaW4gYSByZWdpb24gYXMgZGl2ZXJzZSBhcyBBc2lhIHZhcmllcyB3aWRlbHkgQnV0IHdoZXRoZXIgaXRzIGltbWlncmF0aW9uIGFuZCBsYWJvdXIgbGF3cyBpbiBKYXBhbiB0aGUgZG9taW5hbmNlIG9mIHN0YXRlIGVudGVycHJpc2VzIGluIENoaW5hIG9yIGh1cmRsZXMgdG8gZm9yZWlnbiBpbnZlc3RtZW50IGluIEluZGlhIGVhY2ggbmF0aW9uIGZhY2VzIGl0cyBvd24gdGhpcmQgcmFpbCBvZiByZWZvcm0gIG9uZSB0aGF0IHN0YW5kcyB0byByZXZpdmUgcHJvZHVjdGl2aXR5IGFuZCBib29zdCBwb3RlbnRpYWwgZ3Jvd3RoIGlmIHJlc29sdmVkIGJ1dCB3aGljaCBoYXMgcHJvdmVkIHRvbyBwb2xpdGljYWxseSBmcmF1Z2h0IHRvIHVuZGVydGFrZSBBVk9JRElORyBQQUlORlVMIFJFRk9STVMgQXNpYSB3YXMgYWJsZSB0byBhdm9pZCBtYW55IHN1Y2ggcGFpbmZ1bCByZWZvcm1zIGFmdGVyIHRoZSBjcmlzaXMgb2YgdGhlIGxhdGUgMTk5MHMgd2hlbiB0aGUgZ2xvYmFsIHRlY2hub2xvZ3kgYm9vbSBib29zdGVkIGRlbWFuZCBmb3IgaXRzIGV4cG9ydHMgVGhlbiB3aGVuIHRoZSBnbG9iYWwgZmluYW5jaWFsIGNyaXNpcyBoaXQgc3Ryb25nIGRvbWVzdGljIGZpbmFuY2VzIGhlbHBlZCBpbnN1bGF0ZSB0aGUgcmVnaW9uIEdyb3d0aCByYXRlcyByZW1haW4gZW52aWFibHkgaGlnaCB0aGUgSU1GIHByb2plY3RzIHRoYXQgZGV2ZWxvcGluZyBBc2lhcyBlY29ub215IHdpbGwgc3RpbGwgZXhwYW5kIGJ5IDcgcGVyY2VudCB0aGlzIHllYXIgQnV0IGV4cG9ydHMgaGF2ZSBub3QgcmVjb3ZlcmVkIGFzIHNtYXJ0bHkgaW4gdGhlIHdha2Ugb2YgdGhlIDIwMDgwOSBjcmlzaXMgV2l0aCBFdXJvcGUgYmFyZWx5IG91dCBvZiByZWNlc3Npb24gYW5kIHRoZSBVbml0ZWQgU3RhdGVzIHJlY292ZXJpbmcgb25seSBncnVkZ2luZ2x5IGdyb3d0aCBpbiBleHBvcnRzIGZyb20gc2V2ZW4gb2YgQXNpYXMgYmlnZ2VzdCBleHBvcnRlcnMgIEphcGFuIENoaW5hIFNvdXRoIEtvcmVhIFRhaXdhbiBUaGFpbGFuZCBIb25nIEtvbmcgYW5kIFNpbmdhcG9yZSAgZ3JvdW5kIHRvIGEgaGFsdCBpbiB0aGUgc2Vjb25kIHF1YXJ0ZXIgTWFueSBBc2lhbiBuYXRpb25zIGhhdmUgaW5zdGVhZCB0YXBwZWQgYSByaXNpbmcgdGlkZSBvZiBjaGVhcCBnbG9iYWwgZnVuZHMgdG8ga2VlcCBlY29ub21pYyBhY3Rpdml0eSBodW1taW5nIFdpdGggdGhlIEZlZCBrZWVwaW5nIGl0cyByYXRlcyBhdCB2aXJ0dWFsbHkgemVybyB0byByZXN1c2NpdGF0ZSBVUyBncm93dGggZ2xvYmFsIGludmVzdG9ycyBzY291cmVkIHRoZSBnbG9iZSBmb3IgaGlnaGVyIHJldHVybnMgaGVscGluZyBwdXNoIGRvd24gQXNpYXMgYm9ycm93aW5nIGNvc3RzIEluIEFwcmlsIDIwMTIgSW5kb25lc2lhcyBnb3Zlcm5tZW50IGJvcnJvd2VkIG1vbmV5IGZvciAxMCB5ZWFycyBmb3IgYSByZWNvcmQgbG93IDMzNzUgcGVyY2VudCBvbmx5IGFib3V0IDE4IHBlcmNlbnRhZ2UgcG9pbnRzIG1vcmUgdGhhbiB0aGUgVVMgZ292ZXJubWVudCB3YXMgcGF5aW5nIFRoZSBzYW1lIG1vbnRoIEtvcmVhbiBlbGVjdHJvbmljcyBnaWFudCBTYW1zdW5nIEVsZWN0cm9uaWNzIHdhcyBhYmxlIHRvIGJvcnJvdyAxIGJpbGxpb24gYXQgMTc1IHBlcmNlbnQgU3VjaCBtYXNzaXZlIGluZmxvd3Mgb2YgY3JlZGl0IGhlbHBlZCBzb21lIGNvdW50cmllcyBrZWVwIGdyb3d0aCByZWxhdGl2ZWx5IHN0cm9uZyBidXQgQXNpYXMgcHJpdmF0ZSBzZWN0b3IgZGVidCBzb2FyZWQgdG8gMTY1IHBlcmNlbnQgb2YgR0RQIGluIDIwMTIgYWNjb3JkaW5nIHRvIE5vbXVyYSBoaWdoZXIgdGhhbiB0aGUgMTI3IHBlcmNlbnQgbGV2ZWwgcHJpb3IgdG8gQXNpYXMgZmluYW5jaWFsIGNyaXNpcyBCb3Jyb3dpbmcgYnkgaG91c2Vob2xkcyBhbmQgY29tcGFuaWVzIGluIFNvdXRoIEtvcmVhIEhvbmcgS29uZyBhbmQgQ2hpbmEgaXMgbm93IGRvdWJsZSB0aGUgc2l6ZSBvZiBlYWNoIGNvdW50cnlzIHJlc3BlY3RpdmUgZWNvbm9taWMgb3V0cHV0IEFzaWEgaGFzIGxldmVyZWQgdXAgbGlrZSB0aGUgcmVzdCBvZiB0aGUgd29ybGQgYXQgdGhlIHNhbWUgdGltZSBhcyBlYXJuaW5ncyB3ZXJlIGNvbWluZyBkb3duIFRoYXRzIHRoZSBiYWQgcGFydCBzYWlkIEpvZWwgS2ltIHRoZSBTaW5nYXBvcmViYXNlZCBoZWFkIG9mIEFzaWFuIGZpeGVkaW5jb21lIGF0IFVTIGludmVzdG1lbnQgbWFuYWdlbWVudCBjb21wYW55IEJsYWNrUm9jayBDSEVBUCBDUkVESVQgVGhlIGNvbmNlcm4gYW1vbmcgZWNvbm9taXN0cyBpcyB0aGF0IGFsbCB0aGF0IGJvcnJvd2luZyBoYXMgbm90IGdvbmUgaW50byBwcm9maXRhYmxlIGludmVzdG1lbnRzIHRoYXQgYm9vc3QgcHJvZHVjdGl2aXR5IGFuZCBncm93dGggVGFrZSBDaGluYSBJdCByZXNwb25kZWQgdG8gdGhlIGdsb2JhbCBmaW5hbmNpYWwgY3Jpc2lzIGJ5IGZsb29kaW5nIGl0cyBlY29ub215IHdpdGggY2hlYXAgY3JlZGl0IFdoZW4gdGhlIEZlZCBjcmFua2VkIHVwIG1vbmV5IHByaW50aW5nIEJlaWppbmcgaGFkIGxpdHRsZSBjaG9pY2UgYnV0IHRvIGtlZXAgYm9ycm93aW5nIGNvc3RzIGxvdyBvciBhbGxvdyBpdHMgY3VycmVuY3kgdG8gcmlzZSByYXBpZGx5IFRoZSBhbW91bnQgb2YgY3JlZGl0IGluIENoaW5hcyBlY29ub215IGFsbW9zdCBkb3VibGVkIGJldHdlZW4gMjAwOCBhbmQgbGFzdCB5ZWFyIGFuZCBpbnZlc3RtZW50IGNsaW1iZWQgdG8gNDYgcGVyY2VudCBvZiBHRFAgQWxtb3N0IGhhbGYgb2YgdGhhdCBtb25leSB3ZW50IGludG8gZWl0aGVyIHByb3BlcnR5IG9yIGluZnJhc3RydWN0dXJlIGFjY29yZGluZyB0byBOb211cmEgQ2hpbmFzIGVtcHR5IGJ1aWxkaW5ncyBhbmQgZ2hvc3QgY2l0aWVzIGFyZSB0ZXN0aW1vbnkgdG8gb3ZlcmludmVzdG1lbnQgaW4gcHJvcGVydHkgYW5kIGNvbnN0cnVjdGlvbiBidXQgb3ZlcmNhcGFjaXR5IGFsc28gcGxhZ3VlcyBoZWF2eSBpbmR1c3RyaWVzIHN1Y2ggYXMgY2VtZW50IHN0ZWVsIGFuZCBjb2FsIFByb2R1Y2VyIHByaWNlcyBpbiBDaGluYSBoYXZlIGNvbnNlcXVlbnRseSBiZWVuIGZhbGxpbmcgZm9yIDE2IG1vbnRocyBhcyBncm93dGggc2xvd3MgTm93IENoaW5hIGFwcGVhcnMgdG8gYmUgZ2VhcmluZyB1cCBmb3Igc29tZSBmb3JtIG9mIGJhaWxvdXQgb2YgaXRzIGxlbmRlcnMgQXQgdGhlIG90aGVyIGVuZCBvZiB0aGUgc3BlY3RydW0gYXJlIGNvdW50cmllcyBzdWNoIGFzIEluZG9uZXQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AHVhcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLHNjb3JlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMC0wNi0xMVQwMDowMDowMFogVE8gMjAxMy0wNy0zMVQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDcxNjE=</field><field name="title" class="java.lang.String">rO0ABXQAN0phcGFuJ3MgU2hvY2sgVGhlcmFweSBSaXNrcyBEaXN0dXJiaW5nIEVtZXJnaW5nIE1hcmtldHM=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4q9oiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGUxZWQ1YzI3ZTM5YjExNWQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lQQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4wHOSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7HCj1wo9c</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7HCj1wo9c</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7HCj1wo9c</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7HCj1wo9c</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4LhR64Ueu</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGJkNTRhZjE5ZTVhMWRmMmM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHUiAAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPw+WWQ==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDcxNjA=</field><field name="title" class="java.lang.String">rO0ABXQAOkNvbW1vZGl0aWVzIFNsdW1wIFNlbmRzIFNsb3cgUmlwcGxlcyBUaHJvdWdoIFdvcmxkIEVjb25vbXk=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4q9oiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDc0ODM1MWNkNjgxZWJjMjk=</field><field name="symbol" class="java.lang.String">rO0ABXQABUdPT0RQ</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4wHOSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6Vwo9cKPX</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA8wo9cKPXD</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6Vwo9cKPX</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7fXCj1wo9</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3xR64UeuF</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAKKA==</field><field name="id" class="java.lang.String">rO0ABXQAEDFiYWI5Yzc0ODM3ZTA2MWM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGPtAAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPwnIrA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDI0MTQ=</field><field name="title" class="java.lang.String">rO0ABXQAP1NwYWluIFJlYm91bmRpbmcgRnJvbSBXb3JzdCBFY29ub215IGFzIEV4cG9ydHMgVHJhbnNmb3JtIE5hdGlvbg==</field><field name="content" class="java.lang.String">rO0ABXQyoUdvdmVybm1lbnQgaW52ZXN0bWVudCBoYWQgYmVlbiB0aGUgbGFzdCBob3BlIGZvciBBbGJlcm9sYeKAmXMgVm94ZWxzdHVkaW9zLCB3aGljaCBwcm9kdWNlZCBwcm9tb3Rpb25hbCB2aWRlb3MgdG8gaGVscCBidWlsZGVycyB3aW4gYmlkcyBiZWZvcmUgU3BhaW7igJlzIGxhcmdlc3QgZGV2ZWxvcGVycyBiZWdhbiBnb2luZyBidXN0IHdoZW4gbWFya2V0cyBmb3IgaG91c2luZywgY29tbWVyY2lhbCByZWFsIGVzdGF0ZSBhbmQgYmFua2luZyBjb2xsYXBzZWQgaW4gMjAwNy4gUHJvZml0IGZlbGwgYnkgNzYgcGVyY2VudCB0aGUgeWVhciBvZiB0aGUgY2FuY2VsbGF0aW9uLiBIZSBoYWQgb25seSBvbmUgbW9yZSBjYXJkIHRvIHBsYXk6IEhlIGhpdCB0aGUgcm9hZCwgaGVhZGluZyBmb3IgdGhlIE1pZGRsZSBFYXN0LCBBc2lhIGFuZCBMYXRpbiBBbWVyaWNhLiBUaGUgZGVjaXNpb24gcGFpZCBvZmYuIFRoZSBjb21wYW55IHdvbiAzRC12aWRlbyBjb250cmFjdHMgbGlua2VkIHRvIHRoZSBjb25zdHJ1Y3Rpb24gb2YgbWV0cm8gbGluZXMgaW4gdGhlIGNhcGl0YWxzIG9mIFBhbmFtYSwgQXJnZW50aW5hIGFuZCBRYXRhciBhcyB3ZWxsIGFzIHJvYWRzIGFuZCB0dW5uZWxzIGluIE1leGljbywgS3V3YWl0IGFuZCBIb25nIEtvbmcuIFZveGVsc3R1ZGlvc+KAmSBwcm9maXQgbGFzdCB5ZWFyIHdhcyBtb3JlIHRoYW4gZG91YmxlIHRoZSAyMDEwIGxldmVsLiBJbnRlcm5hdGlvbmFsIHNhbGVzIHByb2R1Y2VkIDI5IHBlcmNlbnQgb2YgcmV2ZW51ZSwgY29tcGFyZWQgd2l0aCBsZXNzIHRoYW4gMSBwZXJjZW50IGluIDIwMDkuIEFuZCBubyBvbmUgd2FzIGxhaWQgb2ZmIGV2ZW4gZHVyaW5nIHRoZSBkYXJrZXN0IHBlcmlvZC4g4oCcSGFkIHdlIG5vdCBnb25lIGFicm9hZCwgd2XigJlkIGJlIGhhbGYgYXMgbWFueSB0b2RheSzigJ0gc2FpZCBBbGJlcm9sYSwgMzUsIGFzIGRlc2lnbmVycyBodWRkbGVkIGFyb3VuZCBjb21wdXRlciBzY3JlZW5zIGluIHRoZSB0aHJlZS1yb29tIG9mZmljZSBzdHVkaW8gaW4gTWFkcmlkLiDigJxBdCBsZWFzdCBldmVyeSBvdGhlciBkYXkgSSB0ZWxsIG15IHdpZmUgaG93IGx1Y2t5IHdlIGFyZS4gSeKAmXZlIGtlcHQgYWxsIG15IHN0YWZmIGFuZCBJIGhhdmVu4oCZdCBldmVuIGN1dCB3YWdlcy7igJ0gUmVjb3JkIEV4cG9ydHMgQWxiZXJvbGEgaXMgYW1vbmcgYSBncm93aW5nIHBlcmNlbnRhZ2Ugb2Ygc3RhbmRvdXRzIGluIGEgY291bnRyeSB3aXRoIDI3IHBlcmNlbnQgdW5lbXBsb3ltZW50IOKAlCA1NiBwZXJjZW50IGZvciB0aG9zZSBsZXNzIHRoYW4gMjUgeWVhcnMgb2xkLiBUaGVpciBzdWNjZXNzIGFsc28gaXMgZm9yZ2luZyBhIHBhdGggZm9yIHRoZSBldXJvIHJlZ2lvbuKAmXMgZm91cnRoLWxhcmdlc3QgZWNvbm9teSB0byBlbWVyZ2UgZnJvbSBhIHNpeHRoIHllYXIgb2YgcmVjZXNzaW9uLiBTcGFuaXNoIGV4cG9ydHMgY2xpbWJlZCB0byBhIHJlY29yZCAyMjMgYmlsbGlvbiBldXJvcyAoJDI5MSBiaWxsaW9uKSBsYXN0IHllYXIgYXMgYSBkcm91Z2h0IGluIG9yZGVycyBhdCBob21lIHB1c2hlZCBjb21wYW5pZXMgdG8gdXBncmFkZSBwcm9kdWN0cyBhbmQgZ28gYWJyb2FkLiBJdCB3YXMgYW5vdGhlciBzdGVwIGF3YXkgZnJvbSBhIGRlY2FkZSBvZiBncm93dGggZnVlbGVkIGJ5IG1hc3MgY29uc3RydWN0aW9uIGFuZCB0b3VyaXNtLiDigJxUaGVyZeKAmXMgYSBxdWFsaXRhdGl2ZSBjaGFuZ2UgaW4gZXhwb3J0cyB0b3dhcmQgbW9yZSB2YWx1ZS1hZGRlZCBwcm9kdWN0cyzigJ0gc2FpZCBQZWRybyBOdWVubyBJbmllc3RhLCBhIHByb2Zlc3NvciBvZiBlbnRyZXByZW5ldXJzaGlwIGF0IElFU0UgQnVzaW5lc3MgU2Nob29sIGluIEJhcmNlbG9uYSBpbiBhIHRlbGVwaG9uZSBpbnRlcnZpZXcuIOKAnFNwYWluIHdpbGwgYWx3YXlzIGV4cG9ydCB3aW5lLCBvbGl2ZSBvaWwsIHRyYWRpdGlvbmFsIHByb2R1Y3RzIGJ1dCBpdOKAmXMgbG9naWNhbCB0aGF0IHRoZXJlIGFyZSBvdGhlciBtb3JlIHNvcGhpc3RpY2F0ZWQgcHJvZHVjdHMgc3VjaCBhcyBwaGFybWFjZXV0aWNhbCBvbmVzIG9yIGNhciBjb21wb25lbnRzIHRoYXQgd2lsbCBwbGF5IGEgYmlnZ2VyIHJvbGUgaW4gdGhlIGVjb25vbXku4oCdIFRoZSDigJxwYWluZnVs4oCdIHJlZm9ybXMgdW5kZXJ0YWtlbiBieSBkZWJ0LXN0cmFwcGVkIGNvdW50cmllcyDigJxhcmUgc3RhcnRpbmcgdG8gYmVhciBmcnVpdCzigJ0gRXVyb3BlYW4gQ2VudHJhbCBCYW5rIFByZXNpZGVudCBNYXJpbyBEcmFnaGkgc2FpZCBpbiBhIE1heSAyMyBzcGVlY2ggaW4gTG9uZG9uLiBJdOKAmXMgdmlzaWJsZSBpbiDigJx0aGUgaW1wcmVzc2l2ZSBpbXByb3ZlbWVudCBpbiBleHBvcnQgcGVyZm9ybWFuY2UgaW4gSXJlbGFuZCwgU3BhaW4gYW5kIFBvcnR1Z2FsLuKAnSBSZWR1Y2luZyBGb3JlY2FzdHMgVGhlIGV1cm8gcmVnaW9uIG5lZWRzIGltcHJvdmVtZW50IGluIHRob3NlIGNvdW50cmllcyBpbiBvcmRlciB0byBleGl0IGl0cyBzaXh0aCBxdWFydGVyIG9mIHJlY2Vzc2lvbi4gVGhlIE9yZ2FuaXphdGlvbiBmb3IgRWNvbm9taWMgQ29vcGVyYXRpb24gYW5kIERldmVsb3BtZW50IGN1dCBpdHMgZWNvbm9taWMgZm9yZWNhc3QgZm9yIEl0YWx5IGZvciB0aGUgc2Vjb25kIHRpbWUgaW4gYSBtb250aCBvbiBNYXkgMjkgYXMgd2VhayBob3VzZWhvbGQgZGVtYW5kIGV4dGVuZGVkIHRoZSBjb3VudHJ54oCZcyBsb25nZXN0IHNsdW1wIGluIG1vcmUgdGhhbiB0d28gZGVjYWRlcy4gVGhlIE9FQ0QgYWxzbyBzYWlkIEdyZWVjZSwgdGhlIGNvdW50cnkgdGhhdCB0cmlnZ2VyZWQgdGhlIGRlYnQgY3Jpc2lzIGluIDIwMTAsIG1heSBuZWVkIG1vcmUgZnVuZHMgYXMgb3V0cHV0IHdpbGwgZHJvcCBhIHNldmVudGggeWVhciBpbiAyMDE0LiBTcGFpbuKAmXMgYnVkZ2V0IGRlZmljaXQsIGF0IDEwLjYgcGVyY2VudCBvZiBncm9zcyBkb21lc3RpYyBwcm9kdWN0LCBpcyB0aGUgd2lkZXN0IGluIHRoZSBFVSwgbW9yZSB0aGFuIHRocmVlIHRpbWVzIHRoZSBsaW1pdCBzZXQgZm9yIGFsbCBtZW1iZXJzLiBUaGUgY291bnRyeSBsYXN0IHllYXIgcmVjZWl2ZWQgNDEgYmlsbGlvbiBldXJvcyBpbiBFdXJvcGVhbiBhaWQgdG8gYmFpbCBvdXQgYmFua3MgYnVyZGVuZWQgYnkgYmFkIGxvYW5zIGxpbmtlZCB0byByZWFsIGVzdGF0ZS4g4oCcU3BhaW4gbmVlZHMgRXVyb3BlIGFuZCBFdXJvcGUgbmVlZHMgU3BhaW4s4oCdIHNhaWQgTWFyaWEgWW9sYW5kYSBGZXJuYW5kZXogSnVyYWRvLCBhc3NvY2lhdGUgcHJvZmVzc29yIG9mIHRoZSBGYWN1bHR5IG9mIEVjb25vbWljIGFuZCBCdXNpbmVzcyBTY2llbmNlcyBhdCBNYWRyaWTigJlzIFVuaXZlcnNpZGFkIFBvbnRpZmljaWEgQ29taWxsYXMuIOKAnFRoZXJlIGlzIG11dHVhbCBpbnRlcmVzdCwgZ2l2ZW4gdGhlIHdlaWdodCBvZiBpdHMgZWNvbm9teSwgaXRzIHBvcHVsYXRpb24sIGl0cyBsaW5rcyB3aXRoIGNvdW50cmllcyBvdXRzaWRlIEV1cm9wZS7igJ0gU2FsZXMgRG91YmxpbmcgRm9yIGNvbXBhbmllcyBzdWNoIGFzIHBvb2wgc3VwcGxpZXIgRmx1aWRyYSBTQSwgc2FsZXMgb3V0c2lkZSBFdXJvcGUgYXJlIHRoZSBhbnN3ZXIuIEZsdWlkcmEgYWxtb3N0IGRvdWJsZWQgaXRzIHNhbGVzIHRvIEFzaWEuIEJ1aWxkZXIgR3J1cG8gSXNvbHV4IENvcnNhbiBTQSB0cmlwbGVkIHRoZSBzaGFyZSBvZiBpdHMgcmV2ZW51ZSB0aGF0IGNhbWUgZnJvbSBhYnJvYWQgb3ZlciBmb3VyIHllYXJzLiBUaGUgU3BhbmlzaCB1bml0IG9mIEdlcm1hbiBzb2Z0d2FyZSBnaWFudCBTQVAgQUcgZ2VuZXJhdGVkIDM4IHBlcmNlbnQgbW9yZSByZXZlbnVlIGxhc3QgeWVhciBmcm9tIHNhbGVzIHRvIHNtYWxsIGJ1c2luZXNzZXMsIG1vc3RseSBmcm9tIHByb2R1Y3RzIGxpbmtlZCB0byBleHBvcnRzLiBUaGV5IGFyZSBoZWxwaW5nIG1ha2UgdXAgZm9yIGZhbGxpbmcgZGVtYW5kIGluIGEgY291bnRyeSB3aGVyZSAxMSBwZXJjZW50IG9mIHRoZSBjb3VudHJ54oCZcyAxNy40IG1pbGxpb24gaG91c2Vob2xkcyBoYXZlIG5vIGJyZWFkd2lubmVyLiDigJxNYW55IGNvbXBhbmllcyB0aGF0IGRlcGVuZGVkIG9uIGRvbWVzdGljIGRlbWFuZCBkaXNhcHBlYXJlZCBkdXJpbmcgdGhlIGNyaXNpcyB3aGlsZSB0aG9zZSB0aGF0IGhhZCBhIHN0cm9uZyBleHBvcnRpbmcgY2FwYWNpdHkgd2VyZSBhYmxlIHRvIG92ZXJjb21lIGl0LOKAnSBEZXB1dHkgVHJhZGUgTWluaXN0ZXIgSmFpbWUgR2FyY2lhLUxlZ2F6IFBvbmNlIHNhaWQgb24gTWF5IDE3LiDigJxUaGlzIGlzIGEgdmVyeSBpbXBvcnRhbnQgbGVzc29uIGZvciB0aGUgZnV0dXJlIHRoYXQgY29tcGFuaWVzIGhhdmUgbGVhcm5lZCBhbmQgaXTigJlzIHRyYW5zZm9ybWluZyB0aGUgU3BhbmlzaCBlY29ub215LuKAnSBGZXdlciBKb2JsZXNzIEhlIHNwb2tlIGFmdGVyIGFubm91bmNpbmcgdGhhdCBpbiBNYXJjaCwgU3BhaW4gcmVnaXN0ZXJlZCBpdHMgZmlyc3QgdHJhZGUgc3VycGx1cyBzaW5jZSByZWNvcmRzIGJlZ2FuIGJlaW5nIGtlcHQgaW4gMTk3MS4gRmlndXJlcyBwdWJsaXNoZWQgVHVlc2RheSBzaG93ZWQgdGhlIGJpZ2dlc3QgTWF5IGRlY2xpbmUgaW4gcGVvcGxlIHNpZ25pbmcgdXAgZm9yIGpvYmxlc3MgYmVuZWZpdHMgc2luY2UgYXQgbGVhc3QgMjAwMi4gQWlkZWQgYnkgdGhlIHN0YXJ0IG9mIFNwYWlu4oCZcyBwZWFrIHRvdXJpc20gc2Vhc29uLCB0aGUgbnVtYmVyIGRyb3BwZWQgYnkgOTgsMjY1LCBhY2NvcmRpbmcgdG8gdGhlIExhYm9yIE1pbmlzdHJ5LiBTcGFuaWFyZHMgbWF5IGhhdmUgdG8gd2FpdCB0byBzZWUgdGhlIGltcGFjdCBvbiB0aGUgb3ZlcmFsbCBlY29ub215LiBHRFAgY29udHJhY3RlZCBmb3IgYSBzZXZlbnRoIHF1YXJ0ZXIgaW4gdGhlIGZpcnN0IHRocmVlIG1vbnRocyBvZiB0aGUgeWVhciBhbWlkIGEgc2x1bXAgaW4gbGVuZGluZyB0aGF0IGlzIHN0cmFuZ2xpbmcgc21hbGwgYnVzaW5lc3Nlcy4gSW4gU3BhaW4sIDk1IHBlcmNlbnQgb2YgY29tcGFuaWVzIGhhdmUgZmV3ZXIgdGhhbiAyMCBlbXBsb3llZXMsIGFjY29yZGluZyB0byB0aGUgTmF0aW9uYWwgU3RhdGlzdGljcyBJbnN0aXR1dGUuIEhvdXNlaG9sZHPigJkgaW5jb21lIGZyb20gd2FnZXMgZmVsbCA4LjUgcGVyY2VudCBpbiB0aGUgbGFzdCBxdWFydGVyIG9mIDIwMTIgZnJvbSBhIHllYXIgYmVmb3JlLCBwdXNoaW5nIHRoZWlyIHNhdmluZ3MgcmF0ZSBkb3duIHRvIDEzIHBlcmNlbnQgZnJvbSAxNiBwZXJjZW50LiBSZXRhaWwgc2FsZXMgaGF2ZSBkZWNsaW5lZCBldmVyeSBtb250aCBzaW5jZSBKdWx5IDIwMTA7IG1vcnRnYWdlIGxlbmRpbmcgc2luY2UgQXVndXN0IDIwMDcuIExvbmcgSGlzdG9yeSBUaGUgTWFyY2ggdHJhZGUgc3VycGx1cyB3YXMgZHJpdmVuIGJ5IGEgMTUgcGVyY2VudCBpbXBvcnQgZHJvcCBhcyBob3VzZWhvbGRzIGN1dCBzcGVuZGluZy4gRm9yZWlnbiBzYWxlcyByb3NlIDIgcGVyY2VudCBhbmQgZmlyc3QtcXVhcnRlciBleHBvcnRzIGZlbGwgYXQgdGhlIGZhc3Rlc3QgcGFjZSBpbiBhIHllYXIuIEEgY291bnRyeeKAmXMgcmVwdXRhdGlvbiBpcyB0aGUgcHJvZHVjdCBvZiBhIGxvbmcgaGlzdG9yeSBhbmQgdGhhdCBpcyBkaWZmaWN1bHQgdG8gY2hhbmdlLCBzYWlkIEVtaWxpbyBMYW1vIGRlIEVzcGlub3NhLCBjaGFpcm1hbiBvZiB0aGUgRWxjYW5vIFJveWFsIEluc3RpdHV0ZSwgZHVyaW5nIGFuIGV2ZW50IG9yZ2FuaXplZCBieSB0aGUgZ292ZXJubWVudCBpbiBNYXJjaCB0byBpbXByb3ZlIHRoZSBjb3VudHJ54oCZcyBpbWFnZSBhYnJvYWQuIOKAnFdlIGhhdmUgZ2l2ZW4gYW4gaW1hZ2Ugb2Ygcm9tYW5jZSwgcGFydHlpbmcsIHN1biwgc2FuZ3JpYSB3aW5lLCBzaWVzdGEgYW5kIHBhZWxsYTogU3BhaW4gY29tZXMgYWNyb3NzIGFzIGEgY291bnRyeSB3aGVyZSBpdCBpcyBnb29kIHRvIGxpdmUsIHRvIGdvIGZvciBhIHZhY2F0aW9uIG9yIHJldGlyZSwgYnV0IG5vdCB0byB3b3JrLOKAnSBoZSBzYWlkIGR1cmluZyBhIHJvdW5kdGFibGUuIOKAnEl0IGlzIG9idmlvdXNseSBlYXNpZXIgdG8gc2VsbCBhIGZyaWRnZSBicmFuZGVkIOKAmG1hZGUgaW4gR2VybWFueeKAmSB0aGFuIOKAmG1hZGUgaW4gU3BhaW4u4oCZIFNwYWluIGRvZXNu4oCZdCBoYXZlIHRoZSByZXB1dGF0aW9uIG9mIGEgc2VyaW91cywgcmlnb3JvdXMsIGVmZmljaWVudCBhbmQgcmVsaWFibGUgY291bnRyeS7igJ0gU3RpbGwsIFNwYWluIGlzIHJhaXNpbmcgaG9wZXMuIFRoZSBFdXJvcGVhbiBDb21taXNzaW9uIGZvcmVjYXN0IGluIE1heSB0aGF0IGV4cG9ydHMgd2lsbCBncm93IDQuMSBwZXJjZW50IHRoaXMgeWVhciwgYWxtb3N0IHR3aWNlIHRoZSBFdXJvcGVhbiBVbmlvbiBhdmVyYWdlIHJhdGUuIEV4cG9ydHMgb2YgZ29vZHMgYW5kIHNlcnZpY2VzIGFzIGEgc2hhcmUgb2YgR0RQLCBhdCAzMiBwZXJjZW50LCB3YXMgdGhlIGhpZ2hlc3QgbGFzdCB5ZWFyIHNpbmNlIGF0IGxlYXN0IDIwMDAsIEV1cm9zdGF0IGZpZ3VyZXMgc2hvdy4gU2FsZXMgYXJlIHJpc2luZyBhdCBkb3VibGUtZGlnaXQgcmF0ZXMgaW4gZmFzdC1ncm93aW5nIG1hcmtldHMgaW4gQXNpYSBhbmQgQWZyaWNhLCBhY2NvcmRpbmcgdG8gVHJhZGUgTWluaXN0cnkgZGF0YS4gRmFsbGluZyBZaWVsZHMgVGhlIHBhY2Ugb2YgdGhlIFNwYW5pc2ggcmVjZXNzaW9uIHNsb3dlZCBpbiB0aGUgZmlyc3QgcXVhcnRlciBhbmQgc292ZXJlaWduIGJvcnJvd2luZyBjb3N0cyBkcm9wcGVkIGFzIERyYWdoaSByZXBlYXRlZCBoaXMgSnVseSBwbGVkZ2UgdG8gc3VwcG9ydCB0aGUgZXVyby4gVGhlIHlpZWxkIG9uIFNwYWlu4oCZcyAxMC15ZWFyIGJlbmNobWFyayBib25kIGRpcHBlZCBiZWxvdyA0IHBlcmNlbnQgaW4gTWFyY2ggZm9yIHRoZSBmaXJzdCB0aW1lIHNpbmNlIDIwMTAsIGNvbXBhcmVkIHdpdGggYSBldXJvLWVyYSByZWNvcmQgb2YgNy43NSBwZXJjZW50IG9uIEp1bHkgMjUuIFNhbGVzIGZyb20gYWJyb2FkIGVuYWJsZWQgcHVibGljbHkgdHJhZGVkIFNwYW5pc2ggY29tcGFuaWVzIHRvIGluY3JlYXNlIHJldmVudWUgYnkgOCBwZXJjZW50IGxhc3QgeWVhciBldmVuIGFzIHRoZSBkb21lc3RpYyBtYXJrZXQgd2FzIGFsbW9zdCBmbGF0LCBhY2NvcmRpbmcgdG8gYSBzdHVkeSBwdWJsaXNoZWQgb24gTWF5IDggYnkgdGhlIHJlc2VhcmNoIHVuaXQgb2YgdGhlIE1hZHJpZCBzdG9jayBleGNoYW5nZSBjb21wYW55IEJvbHNhcyAmIE1lcmNhZG9zIEVzcGFub2xlcyBTQS4g4oCcSSB3YW50IHRvIHRoaW5rIHRoZSBmdXR1cmUgd2lsbCBiZSBiZXR0ZXIs4oCdIHNhaWQgVG9udHh1IENhbXBvcywgZGlyZWN0b3Igb2YgdGhlIEVudHJlcHJlbmV1cnNoaXAgQ2VudGVyIGF0IHRoZSBEZXVzdG8gQnVzaW5lc3MgU2Nob29sIGluIEJpbGJhbywgU3BhaW4sIGluIGEgdGVsZXBob25lIGludGVydmlldy4g4oCcRW50cmVwcmVuZXVyc2hpcCBhbmQgdGVjaG5vbG9naWNhbCBsZXZlcmFnZSBjYW4gaGVscCBTcGFpbiBhY2hpZXZlIGFuIGVjb25vbWljIHJlY292ZXJ5IGFuZCBjaGFuZ2UgdGhlIGNvdW50cnnigJlzIGVjb25vbWljIHN0cnVjdHVyZSB0b3dhcmQgYmVpbmcgbGVzcyBkZXBlbmRlbnQgb24gdHJhZGl0aW9uYWwgc2VjdG9ycyBzdWNoIGFzIGNvbnN0cnVjdGlvbiBvciBhZ3JpY3VsdHVyZS7igJ0gUm91dGUgRGl2ZXJzaWZpY2F0aW9uIEluIHRoZSBsYXN0IHR3byB5ZWFycywgdGhlIG51bWJlciBvZiBjb21wYW5pZXMgdGhhdCBleHBvcnQgaGFzIGp1bXBlZCBieSBtb3JlIHRoYW4gMTAgcGVyY2VudCBlYWNoIHllYXIsIGNvbXBhcmVkIHdpdGggYW4gaW5jcmVhc2Ugb2YgMS43IHBlcmNlbnQgaW4gMjAxMCwgZGF0YSBmcm9tIGdvdmVybm1lbnQgYWdlbmN5IEljZXggc2hvdy4gRmx1aWRyYSB3YXMgdGhlIGZvdXJ0aC1iZXN0IHBlcmZvcm1lciBsYXN0IHllYXIgb24gU3BhaW7igJlzIEliZXggc21hbGwtY2FwIGluZGV4LCByaXNpbmcgMTYgcGVyY2VudC4gVGhlIGJpZ2dlc3QgZ2FpbmVyIHdpdGggYW4gODggcGVyY2VudCBhZHZhbmNlIHdhcyBwYXNzZW5nZXIgY2FycmllciBWdWVsaW5nIEFpcmxpbmVzIFNBLCBib3VnaHQgYnkgSUFHIFNBIGxhc3QgbW9udGguIENoYWlybWFuIEpvc2VwIFBpcXVlIENhbXBzIHNhaWQgaW4gRmVicnVhcnkgaGUgcGxhbm5lZCB0byBkaXZlcnNpZnkgcm91dGVzIHRvIGxpbWl0IGRlcGVuZGVuY3kgb24gdGhlIFNwYW5pc2ggbWFya2V0LiDigJxTcGFpbiBoYXMgdGhlIHBvdGVudGlhbCB0byBiZWNvbWUgYWdhaW4gb25lIG9mIHRoZSBlY29ub21pYyBlbmdpbmVzIGluIHRoZSBldXJvIHpvbmUs4oCdIER1dGNoIEZpbmFuY2UgTWluaXN0ZXIgYW5kIGV1cm8gZ3JvdXAgQ2hhaXJtYW4gSmVyb2VuIERpanNzZWxibG9lbSBzYWlkIEFwcmlsIDExLiDigJxJdCBoYXMgYSB5b3VuZyBwb3B1bGF0aW9uLCBpdCBoYXMgYSBnb29kIGluZnJhc3RydWN0dXJlLCBhIGdvb2QgZWR1Y2F0aW9uYWwgc3lzdGVtIGxpa2UgSXJlbGFuZCBoYXMsIHRoZSBiYXNpcyBpcyB0aGVyZSwgdGhlIGNvbXBldGl0aXZlbmVzcyBpcyBiZWluZyBpbXByb3ZlZC7igJ0gTWV0cm8gQ29udHJhY3QgVGhhdOKAmXMgZXZlbiB0cnVlIGFtb25nIHNvbWUgb2YgU3BhaW7igJlzIGNvbnN0cnVjdGlvbiBjb21wYW5pZXMsIHdob3NlIG92ZXJidWlsZGluZyBoZWxwZWQgYnJpbmcgYWJvdXQgdGhlIGNyaXNpcy4gU3BhaW4gaXMgaG9tZSB0byBhbG1vc3Qgb25lLXRoaXJkIG9mIHRoZSBldXJvIHJlZ2lvbuKAmXMgMTkuNCBtaWxsaW9uIGpvYnNlZWtlcnMgYW5kIHRoZSBjb25zdHJ1Y3Rpb24gaW5kdXN0cnkgbGFzdCB5ZWFyIGVtcGxveWVkIGxlc3MgdGhhbiBoYWxmIGFzIG1hbnkgcGVvcGxlIGFzIGl0IGRpZCBhdCB0aGUgYmVnaW5uaW5nIG9mIDIwMDguIElzb2x1eCBpbmNyZWFzZWQgdGhlIHNoYXJlIG9mIGl0cyByZXZlbnVlIGdlbmVyYXRlZCBhYnJvYWQgdG8gNjggcGVyY2VudCBpbiAyMDEyIGZyb20gMjIgcGVyY2VudCBpbiAyMDA4LCB0aGUgZmlyc3QgeWVhciBvZiBTcGFpbuKAmXMgcmVjZXNzaW9uLiBDb250cmFjdHMgaW5jbHVkZWQgdGhlIHNlY29uZCBwaGFzZSBvZiBhIFdvcmxkIEJhbmstZnVuZGVkIG1ldHJvIGxpbmUgaW4gU2FvIFBhdWxvIGluIEJyYXppbC4gQW5vdGhlciBjb21wYW55IHRoYXQgdHVybmVkIGl0cyBmb3J0dW5lcyBhcm91bmQgYnkgZXhwYW5kaW5nIGludGVybmF0aW9uYWxseSB3YXMgRmx1aWRyYSwgdGhlIHBvb2wgc3VwcGxpZXIgYW5kIHdhdGVyLXRyZWF0bWVudCBjb21wYW55IGJhc2VkIGluIFNhYmFkZWxsLCBTcGFpbi4gRG9tZXN0aWMgcmV2ZW51ZSBsYXN0IHllYXIgd2FzIDQzIHBlcmNlbnQgYmVsb3cgaXRzIGxldmVsIGluIDIwMDcsIGp1c3QgYmVmb3JlIGRlbWFuZCBmb3IgcHJpdmF0ZSBwb29scyBzdGFydGVkIGNyYXNoaW5nIGFzIHRoZSByZWFsLSBlc3RhdGUgYm9vbSBlbmRlZC4gT3ZlciB0aGUgc2FtZSBwZXJpb2QsIHNhbGVzIHRvIEFzaWEgYW5kIEF1c3RyYWxpYSBhbG1vc3QgZG91YmxlZC4gUG9vbCBSb2JvdHMg4oCcV2UgaGF2ZW7igJl0IHJlY292ZXJlZCB0aGUgcGVhayBvZiBvdXIgc2FsZXMgeWV0IGJ1dCB3ZSBhcmUgY2xvc2UgdG8gaXQsIGFuZCB0aGF0IGNsZWFybHkgZGlkbuKAmXQgaGFwcGVuIGluIFNwYWluLOKAnSBzYWlkIEZsdWlkcmEgY2hpZWYgZmluYW5jaWFsIG9mZmljZXIgWGF2aWVyIFRpbnRvcmUgU2VndXJhIGluIGEgcGhvbmUgaW50ZXJ2aWV3LiBJbiBvcmRlciB0byB3aW4gY2xpZW50cywgVGludG9yZSBzYXlzIEZsdWlkcmEgb3BlbmVkIGJyYW5jaGVzIGluIEluZG9uZXNpYSwgSm9yZGFuIGFuZCBDb2xvbWJpYSBhbmQgZXhwYW5kZWQgc2VydmljZXMuIFRoZSBjb21wYW55IGFkZGVkIGZsdWlkIGhhbmRsaW5nIHRvIGl0cyBjb3JlIHBvb2wgYW5kIHNwYSBvcGVyYXRpb25zIGFuZCBtYWRlIHN1cmUgaXRzIHJhbmdlIG9mIHByb2R1Y3RzIHJlbWFpbmVkIGV4dGVuc2l2ZSwgZnJvbSBwbGFzdGljIHBhcnRzIHRvIGF1dG9tYXRpYyBwb29sIGNsZWFuaW5nIHJvYm90cy4gRmx1aWRyYSBpcyBub3cgYWxzbyBzZWVraW5nIHRvIHNlbGwgbW9yZSDigJxhbGwtaW4tb25l4oCdIHBhY2thZ2VzLCBhZnRlciB3aW5uaW5nIGEgY29udHJhY3Qgb2YgMi41IG1pbGxpb24gZXVyb3MgdG8gaGFuZGxlIHNwZWVkIHdhdGVyIHJpZGVzIGFuZCBvdGhlciBoeWRyYXVsaWMgZmVhdHVyZXMgZm9yIGFuIGFtdXNlbWVudCBwYXJrIHNldCB0byBvcGVuIHRoaXMgeWVhciBuZWFyIFBhdGF5YSwgVGhhaWxhbmQuIEZvciBDYXJsb3MgVHJlbmNocyBTYWlueiBkZSBsYSBNYXphLCBtYW5hZ2luZyBkaXJlY3RvciBvZiB2ZW50dXJlIGNhcGl0YWwgZnVuZCBDYWl4YSBDYXBpdGFsIFJpc2MsIFNwYWluIGlzIGJlbmVmaXRpbmcgZnJvbSBhbiBlZHVjYXRlZCBsYWJvciBwb29sIHRoYXQgY2FuIGRldmVsb3AgdGVjaG5vbG9naWVzIGVuYWJsaW5nIGNvbXBhbmllcyB0byBnbyBnbG9iYWwuIEF0IDM0IHBlcmNlbnQsIHRoZSBwb3J0aW9uIG9mIHRoZSB3b3JrIGZvcmNlIHdpdGggdGhlIGhpZ2hlc3QgbGV2ZWwgb2YgZWR1Y2F0aW9uIGlzIHdlbGwgYWJvdmUgdGhlIGV1cm8gcmVnaW9uIGF2ZXJhZ2Ugb2YgMjggcGVyY2VudCBhbmQgYWhlYWQgb2YgR2VybWFueSBhbmQgRnJhbmNlLCBhY2NvcmRpbmcgdG8gMjAxMSBFdXJvc3RhdCBkYXRhLiBNb3N0IEVkdWNhdGVkIOKAnFRlY2hub2xvZ3kgY2FtZSB0byBTcGFpbiBsYXRlciB0aGFuIGluIG90aGVyIGNvdW50cmllcyBidXQgbm93IGl0IGhhcyBiZWVuIHBpY2tlZCB1cCBieSB0aGUgbW9zdCBlZHVjYXRlZCBhbmQgZXhwZXJpbWVudGVkIGdlbmVyYXRpb24gb2YgMzAtIHRvIDQwLXllYXItb2xkcyB0aGUgY291bnRyeSBoYXMgZXZlciBoYWQs4oCdIFRyZW5jaHMgc2FpZC4g4oCcQWxsIHdlIGhlYXIgYWJvdXQgaXMgdGhlIGJhZCBuZXdzIGFuZCBpdOKAmXMgdHJ1ZSBwYXJ0IG9mIHRoZSBlY29ub215IGlzIHZlcnkgZGFtYWdlZCwgYnV0IGl04oCZcyBhbHNvIHRydWUgbWFueSBjb21wYW5pZXMgYXJlIGRvaW5nIHZlcnkgd2VsbCBhbmQgdGhpcyB3aWxsIGNvbnRyaWJ1dGUgdG8gYW4gZWNvbm9taWMgcmVjb3Zlcnku4oCdIEV4cG9ydHMgd2l0aCBoaWdoLXRlY2hub2xvZ3kgY29udGVudCBpbmNyZWFzZWQgYnkgMTQgcGVyY2VudCBpbiAyMDExLCBhZnRlciBhIDE3IHBlcmNlbnQgc3VyZ2UgaW4gMjAxMCwgYWNjb3JkaW5nIHRvIHRoZSBtb3N0IHJlY2VudCBkYXRhIGF2YWlsYWJsZSwgcHVibGlzaGVkIGJ5IHRoZSBzdGF0aXN0aWNzIGluc3RpdHV0ZS4gSW4gMjAwNywgdGhlIGxhc3QgeWVhciBvZiBTcGFpbuKAmXMgZWNvbm9taWMgYm9vbSwgdGhleSBmZWxsIDQuMyBwZXJjZW50LiDigJxNYW55IGNvbXBhbmllcyBoYXZlIHNlZW4gcHJvZHVjdHMgdGhhdCB1c2VkIHRvIGJlIHZlcnkgcG9wdWxhciBpbiBTcGFpbiBhbmQgYXJlbuKAmXQgc2VsbGluZyBhcyB3ZWxsIGNhbiBmaW5kIGJ1eWVycyBpbiBlbWVyZ2luZyBjb3VudHJpZXMs4oCdIHNhaWQgUGlsYXIgTWFydGluZXogU2FudGEgTWFyaWEsIGEgZGlyZWN0b3IgYXQgU0FQ4oCZcyBTcGFpbiBicmFuY2guIENvdW50ZXIgTWFrZXIgVGhlIGNvbXBhbnksIHdoaWNoIGNvdW50cyB3aW5lLW1ha2VyIE1pZ3VlbCBUb3JyZXMgU0EgYW5kIGtpdGNoZW4tYW5kLWJhdGhyb29tIHNpbGVzdG9uZSBmaXh0dXJlcyBzdXBwbGllciBDb3NlbnRpbm8gU0EgYW1vbmcgaXRzIGNsaWVudHMsIHNheXMgU0FQ4oCZcyByZXZlbnVlIGdlbmVyYXRlZCBieSBzbWFsbCBidXNpbmVzc2VzIGluIFNwYWluIHN1cmdlZCAzOCBwZXJjZW50IGxhc3QgeWVhciBkdWUgdG8gZGVtYW5kIGZvciBleHBvcnQtdGllZCBwcm9kdWN0cywgc3VjaCBhcyBwcm9ncmFtcyB0byBhbmFseXplIG1hcmtldHMuIFRoZSBnb3Zlcm5tZW50IG9mIFByaW1lIE1pbmlzdGVyIE1hcmlhbm8gUmFqb3ksIGluIHBvd2VyIHNpbmNlIERlY2VtYmVyIDIwMTEsIGhhcyBjcmVhdGVkIGEgdGFzayBmb3JjZSBkdWJiZWQg4oCcTWFyY2EgRXNwYW5h4oCcIHRvIHByb21vdGUgaW52ZXN0bWVudCBpbiBTcGFpbiBhcyB3ZWxsIGFzIHdvcmtpbmcsIHN0dWR5aW5nIGFuZCB0cmF2ZWxpbmcuIFRoZSBhZ2VuY3ksIHdoaWNoIGhlbHBlZCBWb3hlbHN0dWRpb3MgZ28gYWJyb2FkIGluIHRoZSBmaXJzdCBzdGFnZXMgb2YgdGhlIGNyaXNpcywgbGFzdCBtb250aCBwdWJsaXNoZWQgYSBoYW5kYm9vayB0byBndWlkZSBzbWFsbCBidXNpbmVzc2VzIGxvb2tpbmcgdG8gZG8gYnVzaW5lc3MgYWJyb2FkLiBJdCBhbHNvIHNpZ25lZCBhIHBhcnRuZXJzaGlwIHdpdGggdGhlIHN0YXRlIGJhbmsgSUNPIHRvIGhlbHAgdGhlbSBhY2Nlc3MgZnVuZGluZyBhbmQgY291bnNlbGluZy4gVm94ZWxzdHVkaW9z4oCZIEFsYmVyb2xhIHNheXMgaGUgaGFzIHNlZW4gdGhlIHRyYW5zZm9ybWF0aW9uLiBXaGlsZSBtYW55IFNwYW5pc2ggY3VzdG9tZXJzIHdvbmRlcmVkIHdoeSBoZSB3YXMgd2FzdGluZyB0aW1lIGFuZCBtb25leSB3aGVuIGhlIGZpcnN0IGJlZ2FuIHNjb3VyaW5nIHRoZSBwbGFuZXQsIHNvbWUgb2YgdGhlbSBsYXRlciBzZXQgdXAgb3ZlcnNlYXMgb3BlcmF0aW9ucyB0aGVtc2VsdmVzIOKAlCBhbmQgaGUgbm93IHdvcmtzIGZvciBzZXZlcmFsIG9mIHRob3NlIHVuaXRzIGFicm9hZC4gSGlzIHN0YWZmIHJlbWFpbnMgbGVhbjogSGUgY2xlYW5lZCBoaXMgb3duIG9mZmljZSB3aW5kb3cgc2h1dHRlcnMgb24gdGhlIFNhdHVyZGF5IG1vcm5pbmcgYmVmb3JlIHRoZSBpbnRlcnZpZXcuIFN0aWxsLCBoZSBzZWVzIGdyb3d0aCBhaGVhZC4g4oCcU3BhbmlhcmRzIGhhdmUgcmVhbGx5IGNoYW5nZWQgYW5kIHRoZSBjcmlzaXMgaGFzIGJlZW4gdGhlIHRyaWdnZXIs4oCdIGhlIHNhaWQuIOKAnEV2ZW4gZm9yIG9saXZlIG9pbCBvciB3aW5lLCB3ZeKAmXZlIHJlYWxpemVkIHRoYXQgdG8gc2VsbCBvdXJzZWx2ZXMsIHlvdSBoYXZlIHRvIG1ha2UgeW91cnNlbGYgZGlmZmVyZW50IGZyb20geW91ciBuZWlnaGJvci7igJ0=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8NjliAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGYzNzVlMzJjNmU5YjA3OTM=</field><field name="symbol" class="java.lang.String">rO0ABXQABU02Ty5G</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8StLSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAz2ZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAz2ZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAz2ZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAz2ZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyI9cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDVkNzE3MGVhMzY2YTQ1MWI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mL0/AAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPwdbvQ==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExOTA4</field><field name="title" class="java.lang.String">rO0ABXQAMFVud2lzZSBTcGVuZGluZyBFeHBvc2VzIEV1cm9wZSdzIEVjb25vbWljIEVycm9ycw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATscZtcAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDMyZmI5OWEwNjk3ZjM0YmY=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZBUk0=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATshjTMAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAk3Cj1wo9c</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAk8KPXCj1x</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkrhR64Ueu</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkx64UeuFI</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkx64UeuFI</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABaPA==</field><field name="id" class="java.lang.String">rO0ABXQAEDUyNTFjZmVhM2I4Mzk5MjM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mI+4AAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPwbLsQ==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDIyNjg=</field><field name="title" class="java.lang.String">rO0ABXQAPFdhbGwgU3RyZWV0J3MgSG9sZSBEZWVwZW5zOyBEb3cgUGx1bmdlcyBNb3JlIFRoYW4gMzUwIFBvaW50cw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT9f9BiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI0NTA4ZmI3M2U2MzQyYzA=</field><field name="symbol" class="java.lang.String">rO0ABXQAA1JBRA==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT9lGnSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAHmZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAH64UeuFHs</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAFmZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAG4UeuFHrh</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAG4UeuFHrh</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAxVjmA==</field><field name="id" class="java.lang.String">rO0ABXQAEGM0YWU0NDRhNjdmYWY5Y2U=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE7DAAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPwVG6Q==</field></document></documents><date>2015-05-07T07:49:11-0500</date></cacheEntry>
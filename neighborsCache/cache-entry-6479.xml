<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hGcm9tIGJhaWxvdXQgYW5kIG5lYXIgYmFua3J1cHRjeSBJcmVsYW5kIGhhcyBzdGFnZWQgc3VjaCBhIHJlbWFya2FibGUgdHVybmFyb3VuZCB0aGF0IGl0cyBkZWJ0IGlzIG5vdyBvbiBhIHNvbGlkIHBhdGggdG93YXJkIEZyYW5jZSBhbmQgQmVsZ2l1bSBjYXRjaGluZyB1cCB3aXRoIGNvdW50cmllcyBzZWVuIGFzIHNhZmUgYmV0cyB3aGVuIGl0IHdhcyBzaHVubmVkIGJ5IHRoZSBtYXJrZXQgdGhyZWUgeWVhcnMgYWdvIEFmdGVyIGEgc3Rvcm1pbmcgcmV0dXJuIHRvIGJvbmQgbWFya2V0cyBsYXN0IHdlZWsgbWVldGluZyBhbG1vc3QgaGFsZiBpdHMgZnVuZGluZyB0YXJnZXQgZm9yIDIwMTQgSXJlbGFuZCBpcyBub3cgZXllaW5nIGFuIHVwZ3JhZGUgYnkgTW9vZHlzIHBvc3NpYmx5IGFzIHNvb24gYXMgRnJpZGF5IHRoYXQgd291bGQgdW5sZWFzaCBhIGZ1cnRoZXIgd2F2ZSBvZiBpbnZlc3RtZW50IExhc3Qgd2Vla3MgMTB5ZWFyIGRlYnQgc2FsZSBvZmZlcmVkIGEgeWllbGQgb2YganVzdCAzNSBwZXJjZW50IGEgZmFyIGNyeSBmcm9tIHRoZSAxNSBwZXJjZW50IHF1b3RlZCBvbiBzZWNvbmRhcnkgbWFya2V0cyBpbiBtaWQyMDExIGFuZCBwdXRzIElyZWxhbmQgYWxtb3N0IHdpdGhpbiAxMDAgYmFzaXMgcG9pbnRzIG9mIGNvdW50cmllcyBsaWtlIEZyYW5jZSBhbmQgQmVsZ2l1bSBhbmQgYSBmdXJ0aGVyIDcwIHBvaW50cyBhd2F5IGZyb20gYmVuY2htYXJrIEdlcm1hbnkgRnJhbmNlIGFuZCBCZWxnaXVtIGFyZSBzb21ldGltZXMgZGVzY3JpYmVkIGFzIG1lbWJlcnMgb2YgdGhlIGV1cm96b25lcyBzb2Z0IGNvcmUgYSB0aWVyIG9mIGRlYnQgYmVsb3cgY29yZSBzdGF0ZXMgbGlrZSBHZXJtYW55IGJ1dCBzYWZlciB0aGFuIHRoZSBwZXJpcGhlcnkgY291bnRyaWVzIGhpdCBoYXJkZXN0IGJ5IHRoZSBjcmlzaXMgbGlrZSBJcmVsYW5kIFBvcnR1Z2FsIEl0YWx5IFNwYWluIGFuZCBHcmVlY2UgRHVibGluIGlzIGhvcGluZyBhIHJ1biBvZiBnb29kIG5ld3MgYmVjb21pbmcgdGhlIGZpcnN0IGV1cm96b25lIGNvdW50cnkgdG8gZXhpdCBhIGJhaWxvdXQgYWNjZWxlcmF0aW5nIGVjb25vbWljIGdyb3d0aCBhbmQgZmFsbGluZyB1bmVtcGxveW1lbnQgd2lsbCBjb250aW51ZSBvbiBGcmlkYXkgd2hlbiBNb29keXMgaXMgZHVlIHRvIHJldmlldyBpdHMganVuayByYXRpbmcgSWYgTW9vZHlzIHJlc3RvcmVzIHRoZSBjb3VudHJ5IHRvIGludmVzdG1lbnQgZ3JhZGUgbGFyZ2UgbWFpbmx5IEFzaWFuYmFzZWQgcmF0aW5nc3NlbnNpdGl2ZSBmdW5kcyB3b3VsZCBiZSBmcmVlIHRvIHJlam9pbiB0aGUgc2NyYW1ibGUgZm9yIElyaXNoIHBhcGVyIEZlbGxvdyByYXRpbmdzIGFnZW5jaWVzIFN0YW5kYXJkcyBhbmQgUG9vcnMgYW5kIEZpdGNoIGtlcHQgSXJlbGFuZHMgaW52ZXN0bWVudCBncmFkZSByYXRpbmcgZHVyaW5nIHRoZSBjcmlzaXMgSXJlbGFuZHMgcG9zaXRpdmUgdHJhamVjdG9yeSBzaG91bGQgY29udGludWUgYW5kIHRoZSBwb3RlbnRpYWwgZm9yIGl0IHRvIHRyYWRlIGZsYXQgdG8gRnJhbmNlIG9yIEJlbGdpdW0gaXMgdmVyeSByZWFsIGJ1dCBpdCB3aWxsIHN0aWxsIHRha2UgdGltZSBJdCB3b250IGhhcHBlbiBvdmVybmlnaHQgc2FpZCBEYW4gU2hhbmUgaGVhZCBvZiBzb3ZlcmVpZ24gc3VwcmFuYXRpb25hbCBhbmQgYWdlbmN5IFNTQSBzeW5kaWNhdGUgYXQgTW9yZ2FuIFN0YW5sZXkgV2Ugd291bGQgZXhwZWN0IHRvIHNlZSBhIG51bWJlciBvZiBhY2NvdW50cyByZW9wZW4gbGluZXMgZm9yIElyZWxhbmQgd2hlbiBNb29keXMgdXBncmFkZXMgdGhlIGNvdW50cnkgdG8gaW52ZXN0bWVudCBncmFkZSBhbmQgdGhleSB3aWxsIG5lZWQgdG8gYnV5IHRvIGF2b2lkIGJlaW5nIHVuZGVyd2VpZ2h0IHRoZWlyIHBlcmZvcm1hbmNlIGJlbmNobWFyayBNb29keXMgY3V0IElyZWxhbmRzIHJhdGluZyB0byBCYTEgb25lIG5vdGNoIGJlbG93IGZvcm1lciBmaW5hbmNpYWwgbWFya2V0IHBhcmlhaCBDb2xvbWJpYSBhdCB0aGUgaGVpZ2h0IG9mIHRoZSBldXJvem9uZSBjcmlzaXMgaW4gSnVseSAyMDExIHByb2hpYml0aW5nIHNvbWUgc292ZXJlaWduIHdlYWx0aCBmdW5kcyBhbmQgQXNpYW4gY2VudHJhbCBiYW5rcyBmcm9tIHRvdWNoaW5nIElyaXNoIGRlYnQgV2hpbGUgSXJpc2ggcGFwZXIgaXMgYWxyZWFkeSBtdWNoIHNvdWdodCBhZnRlciBpbnZlc3RvcnMgYmlkIG5lYXJseSBmb3VyIHRpbWVzIHRoZSAzNzUgYmlsbGlvbiBldXJvcyBpc3N1ZWQgbGFzdCB3ZWVrIGRlYnQgY2hpZWYgSm9obiBDb3JyaWdhbiBoYXMgc2FpZCB0aGVyZSBpcyBhIGh1Z2UgcG90ZW50aWFsIGZvciBhIHB1c2ggb24gYm9uZCB5aWVsZHMgaWYgTW9vZHlzIHVwZ3JhZGVzIGl0IFdpdGggc3VjaCBmdW5kcyBhYmxlIHRvIHBsYWNlIG9yZGVycyBpbiBibG9ja3Mgb2Ygc29tZSAzMDAgbWlsbGlvbiB0byA1MDAgbWlsbGlvbiBldXJvcyBhdCBhIHRpbWUgdGhlaXIgcmV0dXJuIHdvdWxkIGhhdmUgYSBiaWcgaW1wYWN0IGF0IGF1Y3Rpb25zIHNldCB0byByZXN1bWUgYXQgYSBtb2Rlc3QgcGFjZSB0aGlzIHllYXIgd2hlbiA1MDAgbWlsbGlvbiB0byBvbmUgYmlsbGlvbiBldXJvcyBhcmUgbGlrZWx5IHRvIGJlIG9mZmVyZWQgU29tZSByYXRpbmdzIG1vbWVudHVtIHdvdWxkIG1vdmUgSXJlbGFuZCBmdXJ0aGVyIGF3YXkgZnJvbSBmZWxsb3cgcGVyaXBoZXJhbCBjb3VudHJpZXMgbGlrZSBTcGFpbiBhbmQgSXRhbHkgd2hvc2UgMTB5ZWFyIGRlYnQgY3VycmVudGx5IHRyYWRlcyAyNSB0byA0MCBiYXNpcyBwb2ludHMgaGlnaGVyCgpQQVRIIFRPIEFBCgpCdXQgSXJlbGFuZCBzdGlsbCBoYXMgc29tZSB3YXkgdG8gZ28gdG8gY29tcGxldGUgdGhlIHJlYmFsYW5jaW5nIG9mIGl0cyBlY29ub215IGFuZCBNb29keXMgbWF5IG1ha2UgRHVibGluIHdhaXQgVGhlIGFnZW5jeSB3aGljaCBudWRnZWQgdXAgaXRzIG91dGxvb2sgb24gSXJlbGFuZHMgcmF0aW5nIHRvIHN0YWJsZSBmcm9tIG5lZ2F0aXZlIGluIFNlcHRlbWJlciBzYWlkIGp1c3QgbGFzdCBtb250aCB0aGF0IGFuIHVwZ3JhZGUgd291bGQgcmVxdWlyZSBjb250aW51ZWQgY29tcGxpYW5jZSB3aXRoIGZpc2NhbCB0YXJnZXRzIGFuZCBhIHN0cmVuZ3RoZW5pbmcgaW4gdGhlIHBhY2Ugb2YgZWNvbm9taWMgZ3Jvd3RoIEdpdmVuIGl0IGFsc28gZG93bmdyYWRlZCBpdHMgcmF0aW5nIG9mIElyaXNoIGJhbmtzIGluIGxhdGUgRGVjZW1iZXIgYW5hbHlzdHMgYXQgR2xhcyBTZWN1cml0aWVzIGFuZCBDYW50b3IgRml0emdlcmFsZCBzYXkgYW4gdXBncmFkZSBpcyBtb3JlIGxpa2VseSBsYXRlciB0aGlzIHllYXIgYW5kIHRoYXQgYSBtb3ZlIHRvIGEgcG9zaXRpdmUgb3V0bG9vayBtYXkgYmUgdGhlIGJlc3QgY2FzZSBzY2VuYXJpbyBmb3IgRnJpZGF5IE1vb2R5cyBtYXkgYWxzbyB0YWtlIG5vIGFjdGlvbiBhdCBhbGwgc2ltaWxhciB0byBQb3J0dWdhbCBsYXN0IHdlZWsgd2hlbiB0cmFkZXJzIGhhZCBleHBlY3RlZCBhbiB1cGRhdGUgdW5kZXIgcmVndWxhdGlvbnMgdGhhdCBjYW1lIGludG8gZm9yY2UgdGhpcyB5ZWFyIEFuIHVwZ3JhZGUgaXMgc2VlbiBieSBpbnZlc3RvcnMgYXMgaW5ldml0YWJsZSBhdCBzb21lIHN0YWdlIHRob3VnaCB3aXRoIG1vdmVzIGJ5IFNQIGFuZCBGaXRjaCBhbHNvIGFudGljaXBhdGVkIEFuIHVwZ3JhZGUgZnJvbSBNb29keXMgd2lsbCBub3QgYmUgdHJhbnNmb3JtYXRpb25hbCBidXQgd2lsbCBjZXJ0YWlubHkgYWNjZWxlcmF0ZSB0aGUgbW92ZSBzYWlkIFBoaWxpcCBCcm93biBoZWFkIG9mIFNTQSBvcmlnaW5hdGlvbiBhdCBDaXRpZ3JvdXAgSXJlbGFuZCBzaG91bGQgYmUgb24gYSBwYXRoIGJhY2sgdG8gQSBhbmQgZXZlbiBvbnRvIEFBIFRoZSBwYWNlIG9mIHRoZSByYWxseSBtYXkgYWxzbyBkZXBlbmQgb24gaG93IHF1aWNrbHkgc3BlY3VsYXRpdmUgaW52ZXN0b3JzIHRoYXQgYm91Z2h0IElyaXNoIHBhcGVyIGF0IHRoZSBoZWlnaHQgb2YgdGhlIGNyaXNpcyBsaWtlIEZyYW5rbGluIFRlbXBsZXRvbiBsb29rIHRvIHJlYWxpemUgcHJvZml0cyBUaGUgY2xlYXIgdmlldyBpcyB0aGF0IElyZWxhbmQgd2lsbCBnbyBiYWNrIGFuZCB0cmFkZSB3aXRoIEZyYW5jZSBhbmQgQmVsZ2l1bSBob3cgcXVpY2tseSBkZXBlbmRzIG9uIHByb2ZpdCB0YWtpbmcgZnJvbSBkZWVwIGludGhlbW9uZXkgaW52ZXN0b3JzIFNob3VsZCBJcmVsYW5kIG1vdmUgdG8gdGhlIHNvZnQgY29yZSB0aGVzZSBpbnZlc3RvcnMgbWF5IHdhbnQgdG8gZXhpdCBhbmQgaWYgdGhhdCBjYW4gYmUgZG9uZSBpbiBhIGNvbnRyb2xsZWQgd2F5IHdoeSBub3QgTW9vZHlzIHdoaWNoIGhhcyBtYWludGFpbmVkIEl0YWx5IGFuZCBTcGFpbiBvbiBpbnZlc3RtZW50IGdyYWRlIGN1cnJlbnRseSByYXRlcyBCZWxnaXVtIHNldmVuIG5vdGNoZXMgaGlnaGVyIHRoYW4gSXJlbGFuZCBhdCBBYTMgd2hpbGUgRnJhbmNlIGlzIG5pbmUgbm90Y2hlcyBhYm92ZSBhdCBBYTEgYWZ0ZXIgYmVpbmcgc3RyaXBwZWQgb2YgaXRzIHRyaXBsZUEgcmF0aW5nIG92ZXIgYSB5ZWFyIGFnbyBEZXNwaXRlIGhhdmluZyBhIGRlYnQgb2YgMTI0IHBlcmNlbnQgb2YgR0RQIGhpZ2hlciB0aGFuIEJlbGdpdW1zIG5lYXIxMDAgcGVyY2VudCBhbmQgdGhlIDkzIHBlcmNlbnQgYW5kIHJpc2luZyBpbiBGcmFuY2UgSXJlbGFuZCBoYXMga2VwdCBpbnZlc3RvcnMgc3dlZXQgYnkgY29uc2lzdGVudGx5IGhpdHRpbmcgZmlzY2FsIHRhcmdldHMgSXRzIG9wZW4gc3RydWN0dXJhbGx5c291bmQgZWNvbm9teSBpcyBzZWVuIGFzIG9uZSBvZiB0aGUgYmVzdCBiZXRzIG9uIGdsb2JhbCBncm93dGggV2l0aCBlY29ub21pYyBhY3Rpdml0eSBzdGFydGluZyB0byBwaWNrIHVwIHN0ZWFtIGFuZCBmb3JlY2FzdCB0byBiZXR0ZXIgbW9zdCBvZiB0aGUgZXVyb3pvbmUgd2l0aCBncm93dGggb2YgMiBwZXJjZW50IHRoaXMgeWVhciBpbnZlc3RvcnMgYmVsaWV2ZSBJcmVsYW5kIGFsc28gaGFzIHRoZSBmdW5kYW1lbnRhbHMgdG8gYmFjayB1cCBhIHJhdGluZ3NkcnQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0wMy0yN1QwMDowMDowMFogVE8gMjAxMy0xMi0wM1Q1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTExMjk0</field><field name="title" class="java.lang.String">rO0ABXQAMUFwcGxlIENvbnRyb3ZlcnN5IExheXMgQmFyZSBDb21wbGV4IElyaXNoIFRheCBXZWI=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT/gsxSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDhhYzg2NDIwNWE4ZjdhZTU=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0JTWA==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT/l2XCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAjLhR64Ueu</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAjPXCj1wo9</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAi1wo9cKPX</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAi8KPXCj1x</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAi8KPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAGEhPA==</field><field name="id" class="java.lang.String">rO0ABXQAEGNhMGMyNGMwOWZmOWU3OTk=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mLvhAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDI0MTQ=</field><field name="title" class="java.lang.String">rO0ABXQAP1NwYWluIFJlYm91bmRpbmcgRnJvbSBXb3JzdCBFY29ub215IGFzIEV4cG9ydHMgVHJhbnNmb3JtIE5hdGlvbg==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8NjliAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGYzNzVlMzJjNmU5YjA3OTM=</field><field name="symbol" class="java.lang.String">rO0ABXQABU02Ty5G</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8StLSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAz2ZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAz2ZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAz2ZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAz2ZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyI9cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDVkNzE3MGVhMzY2YTQ1MWI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mL0/AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDcxNTQ=</field><field name="title" class="java.lang.String">rO0ABXQAMUV1cm9wZWFuIEF1c3Rlcml0eSBDYW1wYWlnbiBZaWVsZHMgTWVhZ2VyIFJlc3VsdHM=</field><field name="content" class="java.lang.String">rO0ABXQUnFRoZSBhdXN0ZXJpdHkgcGFpbiBwdXJzdWVkIGJ5IGEgbnVtYmVyIG9mIEV1cm9wZWFuIGNvdW50cmllcyBoYXMgbGVkIHRvIHZlcnkgbGl0dGxlIGdhaW4uIFRoZSAyMDEyIGZpZ3VyZXMgZnJvbSBFdXJvc3RhdCwgdGhlIEV1cm9wZWFuIFVuaW9uJ3Mgc3RhdGlzdGljcyBvZmZpY2UsIHNob3dlZCBNb25kYXkgdGhhdCBtYW55IG9mIHRoZSBjb3VudHJpZXMgaGl0IGhhcmRlc3QgYnkgRXVyb3BlJ3MgZmluYW5jaWFsIGNyaXNpcywgc3VjaCBhcyBQb3J0dWdhbCBhbmQgU3BhaW4sIHNhdyB0aGVpciBidWRnZXQgZGVmaWNpdHMgcmlzZSwgZXZlbiB0aG91Z2ggdGhleSBoYXZlIHB1cnN1ZWQgdGhlIHN0cmljdCBhdXN0ZXJpdHkgcG9saWNpZXMgcHJlc2NyaWJlZCBieSBpbnRlcm5hdGlvbmFsIGNyZWRpdG9ycyB0byBjdXQgZGVidC4gVGhvdWdoIHRoZSBjdW11bGF0aXZlIGxldmVsIG9mIGdvdmVybm1lbnQgZGVmaWNpdHMgZmVsbCBkdXJpbmcgdGhlIHllYXIsIGl0IHdhcyBsYXJnZWx5IHRoYW5rcyB0byBHZXJtYW55IHN3aW5naW5nIGludG8gYSBidWRnZXQgc3VycGx1cy4gT3RoZXIgY291bnRyaWVzIGNvbnRpbnVlIHRvIHJlZWwgZnJvbSB0aGUgaW1wYWN0IHRoYXQgYXVzdGVyaXR5IGlzIGhhdmluZyBvbiB0aGVpciBlY29ub21pZXMuIFRoZSByZWdpb24ncyBkZWJ0IGxldmVsIGFjdHVhbGx5IHJvc2UgYXMgdGhlIGV1cm96b25lIHNhbmsgYmFjayBpbnRvIHJlY2Vzc2lvbiBhbmQgdGF4IGluY29tZSBmcm9tIGNvbXBhbmllcyBhbmQgaG91c2Vob2xkcyBmZWxsLiBPdmVyYWxsIGluIHRoZSBldXJvem9uZSwgdGhlIGRlZmljaXQgZHJvcHBlZCBpbiAyMDEyIHRvIGFyb3VuZCAzNTMgYmlsbGlvbiBldXJvcyAoJDQ2MCBiaWxsaW9uKSBmcm9tIDM5MSBiaWxsaW9uIHRoZSB5ZWFyIGJlZm9yZSwgd2l0aCBHZXJtYW55IHBvc3RpbmcgYSBkcmFtYXRpYyBpbXByb3ZlbWVudCB0aGF0IHNhdyBpdCBzd2luZyBpbnRvIGEgc3VycGx1cy4gQXMgYSByZXN1bHQsIHRoZSBidWRnZXQgZGVmaWNpdCBvZiB0aGUgd2hvbGUgZXVyb3pvbmUgZmVsbCB0byAzLjcgcGVyY2VudCBvZiB0aGUgcmVnaW9uJ3MgYW5udWFsIGdyb3NzIGRvbWVzdGljIHByb2R1Y3QuIENvdW50cmllcyBpbiB0aGUgRVUgYXJlIHN1cHBvc2VkIHRvIGtlZXAgZGVmaWNpdHMgYXQgb3IgYmVsb3cgMyBwZXJjZW50LiBPdmVyYWxsIGJvcnJvd2luZyBpbiB0aGUgZXVyb3pvbmUgaXMgbmV2ZXJ0aGVsZXNzIGxvd2VyIHRoYW4gaW4gdGhlIFUuUy4sIHdoaWNoIGhhcyBhIGJ1ZGdldCBkZWZpY2l0IG9mIGFyb3VuZCA3IHBlcmNlbnQgb2YgYW5udWFsIEdEUC4gSW4gMjAxMiwgZXVyb3pvbmUgZGVidCB3YXMgd29ydGggOTAuNiBwZXJjZW50IG9mIHRoZSByZWdpb24ncyBHRFAsIHVwIGZyb20gODcuMyBwZXJjZW50IHRoZSB5ZWFyIGJlZm9yZS4gSGVyZSdzIGEgbG9vayBhdCB0aGUgcGVyZm9ybWFuY2Ugb2Ygc29tZSBvZiB0aGUgZXVyb3pvbmUgY291bnRyaWVzIGR1cmluZyAyMDEyOiBHUkVFQ0U6IFRoZSBjb3VudHJ5IGF0IHRoZSBlcGljZW50ZXIgb2YgdGhlIHJlZ2lvbidzIGRlYnQgY3Jpc2lzIHNhdyBtaXhlZCByZXN1bHRzIGluIDIwMTIuIFRob3VnaCB0aGUgZ292ZXJubWVudCBtYW5hZ2VkIHRvIHJlZHVjZSBpdHMgYW5udWFsIGJvcnJvd2luZyB0byAxOS40IGJpbGxpb24gZXVyb3MgZnJvbSAxOS44IGJpbGxpb24gdGhlIHllYXIgYmVmb3JlLCB0aGUgZGVmaWNpdCBzd2VsbGVkIHRvIDEwIHBlcmNlbnQgb2YgR0RQIGZyb20gOS41IHBlcmNlbnQsIGxhcmdlbHkgYmVjYXVzZSBvZiBhIGRlZXBlbmluZyByZWNlc3Npb24uIEV2ZW4gc28sIHRoZSBjb3VudHJ5IGlzIHdpbm5pbmcgcGxhdWRpdHMgZm9yIGl0cyBwcm9ncmVzczogaW4gMjAwOSwgR3JlZWNlJ3MgYW5udWFsIGJvcnJvd2luZyBzdG9vZCBhdCBvdmVyIDM2IGJpbGxpb24gZXVyb3MuIFdoZW4gbm90IGNvdW50aW5nIHRoZSBjb3N0IG9mIHBheWluZyBpbnRlcmVzdCBvbiBpdHMgZXhpc3RpbmcgZGVidCwgdGhlIGdvdmVybm1lbnQgaG9wZXMgdG8gcG9zdCBhIHN1cnBsdXMgb3ZlciB0aGUgY29taW5nIHllYXIuIFB1YmxpYyBkZWJ0IGZlbGwgaW4gMjAxMiB0byAxNTYuOSBwZXJjZW50IG9mIEdEUCBmcm9tIDE3MC4zIHBlcmNlbnQsIHBhcnRseSBiZWNhdXNlIHByaXZhdGUgaG9sZGVycyBvZiBHcmVlayBib25kcyBhZ3JlZWQgdG8gYSBiaWcgd3JpdGVkb3duLiBJUkVMQU5EOiBUaGUgc2Vjb25kIGV1cm8gY291bnRyeSB0byByZWNlaXZlIGEgYmFpbG91dCBpcyB3aWRlbHkgdmlld2VkIGFzIHRoZSBwb3N0ZXIgY2hpbGQgb2YgYXVzdGVyaXR5IGFuZCBpdHMgcGVyZm9ybWFuY2UgaW4gMjAxMiBzaG93ZWQgZnVydGhlciBpbXByb3ZlbWVudHMuIEFzIHdlbGwgYXMgcmVkdWNpbmcgYW5udWFsIGJvcnJvd2luZyB0byAxMi41IGJpbGxpb24gZXVyb3MgZnJvbSAyMS4zIGJpbGxpb24sIElyZWxhbmQgc2F3IGl0cyBkZWZpY2l0IHNocmluayB0byA3LjYgcGVyY2VudCBvZiBHRFAgYWdhaW5zdCAxMy40IHBlcmNlbnQgdGhlIHllYXIgYmVmb3JlLiBVbmxpa2UgZmVsbG93IGJhaWxvdXQgcmVjaXBpZW50cywgSXJlbGFuZCBoYXMgbWFuYWdlZCB0byByZXR1cm4gdG8gdGVwaWQgZWNvbm9taWMgZ3Jvd3RoIGZvciBtb3N0IG9mIHRoZSBwYXN0IHRocmVlIHllYXJzIGFuZCBpcyBhaGVhZCBvZiBpdHMgdGFyZ2V0IGZvciBwcnVuaW5nIHRoZSBidWRnZXQgZGVmaWNpdCB0byAzIHBlcmNlbnQgb2YgR0RQIGJ5IDIwMTUuIEFzIGEgZnVydGhlciBzaWduIG9mIGl0cyByZXB1dGF0aW9uYWwgcmVib3VuZCwgSXJlbGFuZCBoYXMgcmVzdW1lZCBsaW1pdGVkIGF1Y3Rpb25zIG9mIGxvbmctdGVybSBib25kcyBhdCBhIHJlbGF0aXZlbHkgbG93IGNvc3QuIEFzIGEgcmVzdWx0LCBpdCBpcyBjb25maWRlbnQgb2YgZXhpdGluZyBpdHMgYmFpbG91dCBwcm9ncmFtIGxhdGVyIHRoaXMgeWVhci4gUE9SVFVHQUw6IEluIHNwaXRlIG9mIHdpbm5pbmcgcHJhaXNlIGZyb20gaXRzIGludGVybmF0aW9uYWwgY3JlZGl0b3JzLCBQb3J0dWdhbCdzIGRlZmljaXQgc3dlbGxlZCB0byA2LjQgcGVyY2VudCBvZiBHRFAgZnJvbSA0LjQgcGVyY2VudCB0aGUgeWVhciBiZWZvcmUuIEhvd2V2ZXIsIHRoZSAyMDExIGZpZ3VyZSB3YXMgZmxhdHRlcmVkIGJ5IHRoZSB0cmFuc2ZlciBvZiBwcml2YXRlIGJhbmtzJyBwZW5zaW9uIGZ1bmRzIHRvIHRoZSBUcmVhc3VyeSwgd2hpY2ggdGVtcG9yYXJpbHkgaW1wcm92ZWQgdGhlIGJhbGFuY2Ugc2hlZXQgb2YgcHVibGljIGZpbmFuY2VzLiBJbiAyMDEyLCB0aGUgZ292ZXJubWVudCdzIHBsYW4gdG8gdXNlIDMuMSBiaWxsaW9uIGV1cm9zIGZyb20gdGhlIHByaXZhdGl6YXRpb24gb2YgYWlycG9ydCBtYW5hZ2VtZW50IGNvbXBhbnkgQU5BIHRvIGxvd2VyIGl0cyBkZWZpY2l0IGZlbGwgZm91bCBvZiBFdXJvc3RhdCwgd2hpY2ggZGlkbid0IGFsbG93IHRoZSBpbmNsdXNpb24gb2YgdGhhdCByZXZlbnVlIGluIHRoZSBkZWZpY2l0IGNhbGN1bGF0aW9uLiBTUEFJTjogSW4gc3BpdGUgb2YgZWZmb3J0cyB0byBnZXQgYSBoYW5kbGUgb24gaXRzIGRlYnRzLCBTcGFpbiBzYXcgaXRzIGJ1ZGdldCBkZWZpY2l0IHJpc2UgdG8gMTAuNiBwZXJjZW50IG9mIEdEUCBpbiAyMDEyIGZyb20gOS40IHBlcmNlbnQgdGhlIHllYXIgYmVmb3JlIGFzIHRoZSBjb3VudHJ5IHRvb2sgNDAgYmlsbGlvbiBldXJvcyBpbiByZXNjdWUgbG9hbnMgdG8gaGVscCBpdHMgYmFua3MuIEV4Y2x1ZGluZyB0aGUgcmVzY3VlIGZ1bmRzLCBTcGFpbiBzYXlzIGl0cyBkZWZpY2l0IGxhc3QgeWVhciBpbXByb3ZlZCB0byBqdXN0IHVuZGVyIDcgcGVyY2VudCwgYWJvdmUgdGhlIGluaXRpYWxseSBwbGVkZ2VkIHRhcmdldCBvZiA2LjMgcGVyY2VudC4gRlJBTkNFOiBBdCBmaXJzdCBnbGFuY2UsIEV1cm9wZSdzIHNlY29uZC1iaWdnZXN0IGVjb25vbXkgYXBwZWFycyB0byBoYXZlIGl0cyBwdWJsaWMgZmluYW5jZXMgaW4gcmVsYXRpdmVseSBnb29kIGhlYWx0aC4gSXRzIGRlZmljaXQgaW4gMjAxMiBmZWxsIHRvIDQuOCBwZXJjZW50IG9mIEdEUCBmcm9tIDUuMyBwZXJjZW50IHRoZSB5ZWFyIGJlZm9yZS4gSG93ZXZlciwgdGhlcmUgYXJlIGdyb3dpbmcgY29uY2VybnMgb3ZlciB0aGUgY291bnRyeSdzIHVwY29taW5nIGVjb25vbWljIHByb3NwZWN0cyBhcyBncm93dGggaGFzIHN0YWxsZWQuIFRoZSBGcmVuY2ggZ292ZXJubWVudCBvcmlnaW5hbGx5IHByb21pc2VkIHRvIHJlZHVjZSBpdHMgZGVmaWNpdCB0byAzIHBlcmNlbnQgb2YgR0RQIHRoaXMgeWVhciwgYnJpbmdpbmcgaXQgaW4gbGluZSB3aXRoIEV1cm9wZWFuIHJ1bGVzLiBCdXQgc2xvdyBncm93dGggaGFzIGtub2NrZWQgaXQgb2ZmIHRyYWNrLCBhbmQgdGhlIGdvdmVybm1lbnQgaGFzIHNhaWQgdGhlIGRlZmljaXQgd2lsbCBiZSAzLjcgcGVyY2VudC4gRnJhbmNlIGhhcyBhIGhpc3Rvcnkgb2Ygb3Zlcmx5IHJvc3kgZm9yZWNhc3RzLCBhbmQgc29tZSBzYXkgdGhlIGdvdmVybm1lbnQncyBudW1iZXJzIGFyZSBzdGlsbCB0b28gb3B0aW1pc3RpYy4gR0VSTUFOWTogV2hpbGUgbWFueSBvZiBpdHMgZXVybyBwYXJ0bmVycyBhcmUgc3RydWdnbGluZyB0byBnZXQgYSBncmlwIG9uIHRoZWlyIHB1YmxpYyBmaW5hbmNlcywgR2VybWFueSBoYXMgZG9uZSBzbyBhbmQgbW9yZS4gSW4gMjAxMiwgaXQgYWN0dWFsbHkgcG9zdGVkIGEgYnVkZ2V0IHN1cnBsdXMgb2YgNC4xIGJpbGxpb24gZXVyb3MsIGluIHNoYXJwIGNvbnRyYXN0IHRvIHRoZSAyMC4yIGJpbGxpb24gZXVybyBkZWZpY2l0IHRoZSB5ZWFyIGJlZm9yZS4gQSBudW1iZXIgb2YgZmFjdG9ycyBoYXZlIGhlbHBlZCwgaW5jbHVkaW5nIHJlc3RyYWluZWQgc3BlbmRpbmcsIGxvd2VyIGRlYnQgc2VydmljaW5nIGNvc3RzIGFuZCBmYWxsaW5nIHVuZW1wbG95bWVudCwgd2hpY2ggbWVhbnMgbGVzcyBvdXRsYXlzIGZvciBqb2JsZXNzIGJlbmVmaXRzLiBCdXQgZWNvbm9taXN0cyBzYWlkIHN0YXRlIGluY29tZSB3YXMgYWxzbyBzaWduaWZpY2FudGx5IGJvb3N0ZWQgYnkgc28tY2FsbGVkICJicmFja2V0IGNyZWVwLCIgdGhlIGZhaWx1cmUgb2YgdGhlIGdvdmVybm1lbnQgdG8gbW92ZSB0YXggcmF0ZXMgdXAgYWxvbmcgd2l0aCBpbmZsYXRpb24uIFRoYXQgbWVhbnMgd29ya2VycyB3aG8gYXJlIGluY3JlYXNpbmdseSB3aW5uaW5nIHBheSByYWlzZXMgaW4gdGhlIGNvdW50cnkncyB0aWdodCBqb2IgbWFya2V0IGFyZSBwdXNoZWQgaW50byBwYXlpbmcgaGlnaGVyIHJhdGVzLCBhbmQgbW9yZSB0YXgu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4wHOSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDIxZmE2ZTNkYmY5OWI5ZjY=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0dEUA==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT41Q0CAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArBR64UeuF</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArZmZmZmZm</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAqUeuFHrhS</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArLhR64Ueu</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArLhR64Ueu</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAvQOA==</field><field name="id" class="java.lang.String">rO0ABXQAEDM2OGFlMTdmMTU0NTY1ZWU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJKnAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDcyMjY=</field><field name="title" class="java.lang.String">rO0ABXQAOEV1cm9wZSB0byBGYWNlIFdhc2hpbmd0b24gRGlzYmVsaWVmIFdpdGggRWNvbm9taWMgQ2xhaW1z</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4MEGCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDMxZWM3YTU0ZTE3YjZjYjE=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNFTEY=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4RNryAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAQZmZmZmZm</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAQrhR64Ueu</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAQZmZmZmZm</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAQrhR64Ueu</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAMPXCj1wo9</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAooA==</field><field name="id" class="java.lang.String">rO0ABXQAEDdjYjdiYjRiOWQwOTM0Mzk=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFbTAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDMxOTg=</field><field name="title" class="java.lang.String">rO0ABXQAOUVtZXJnaW5nLU1hcmtldCBJbnZlc3RvcnMgR2V0IFBpY2t5IFdpdGggRmVkIFNldCB0byBUYXBlcg==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUELY+yAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI4Mzk0ZDdmMzY4ZThmMWQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lDQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEQikiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwZmZmZmZm</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwbhR64Ueu</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwTMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwUeuFHrhS</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAulHrhR64U</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAyAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGU4YWJiZGU0MDBkOWEwZWQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEY3AAAA==</field></document></documents><date>2015-05-07T12:13:30-0500</date></cacheEntry>
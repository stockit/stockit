<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0C69IaWxsc2hpcmUgQnJhbmRzIHNoYXJlcyBqdW1wZWQgbmVhcmx5IDIzIHBlcmNlbnQgdG8gYW4gYWxsdGltZSBoaWdoIG9uIFR1ZXNkYXkgYWZ0ZXIgUGlsZ3JpbXMgUHJpZGUgb2ZmZXJlZCB0byBidXkgdGhlIENoaWNhZ29iYXNlZCBwYWNrYWdlZCBmb29kIGNvbXBhbnkgaW4gYW4gYWxsY2FzaCBkZWFsIHZhbHVlZCBhdCA2NCBiaWxsaW9uIEFzIHRoZSBzdG9jayByYWxsaWVkIHRvIGFuIGFsbHRpbWUgaGlnaCBzb21lIG5vdGljZWFibHkgYnVsbGlzaCBiZXRzIG1hZGUgaW4gdGhlIG9wdGlvbnMgbWFya2V0IGluIHRoZSBwYXN0IHNldmVyYWwgZGF5cyBhcmUgc2V0IHRvIHJlYWxpemUgYmlnIHByb2ZpdHMgT24gTWF5IDEyIEhpbGxzaGlyZSBhbm5vdW5jZWQgYSA0IGJpbGxpb24gcHVyY2hhc2Ugb2YgUGlubmFjbGUgRm9vZHMgcHJvZHVjZXIgb2YgQmlyZHMgRXllIGZyb3plbiB2ZWdldGFibGVzIGFuZCBWbGFzaWMgcGlja2xlcyBUaGUgbmV4dCBkYXkgMjUwMDAgSnVuZSA0MCBjYWxscyB3ZXJlIGJvdWdodCBhdCA0OCBjZW50cyBhcGllY2UgVGhlIGJ1bGxpc2ggYmV0IGlzIG5vdyByYWlzaW5nIGV5ZWJyb3dzIGJlY2F1c2UgSGlsbHNoaXJlIHNoYXJlcyBoYWQgbG9zdCBhYm91dCAyIHBlcmNlbnQgYmV0d2VlbiB0aGUgZGVhbCBhbm5vdW5jZW1lbnQgYW5kIEZyaWRheXMgY2xvc2UgQWZ0ZXIgdGhlIFBpbGdyaW1zIGRlYWwgd2FzIGFubm91bmNlZCBhbmQgSGlsbHNoaXJlIHNoYXJlcyBqdW1wZWQgMjMgcGVyY2VudCB0byA0NTUxIG9uIFR1ZXNkYXkgdGhlIHByZW1pdW0gb24gdGhvc2UgY2FsbHMgYWxzbyBzcGlrZWQgdG8gNSBmb3IgYSBwb3RlbnRpYWwgcHJvZml0IG9mIDExIG1pbGxpb24gUGlubmFjbGUgbWVhbndoaWxlIHNhdyBhbiB1cHRpY2sgaW4gYmVhcmlzaCBiZXRzIGZvbGxvd2luZyB0aGUgZGVhbCBhbm5vdW5jZW1lbnQgSXQgaXMgaGFyZCB0byBkZXRlcm1pbmUgd2hhdCBtb3RpdmF0ZWQgdGhvc2UgYmlkcyBhcyB0aGV5IGNvdWxkIGhhdmUgbWVyZWx5IGJlZW4gcGxhY2VkIGFzIGEgaGVkZ2UgQ2FsbCBvcGVuIGludGVyZXN0IGluIEhpbGxzaGlyZSBCcmFuZHMganVtcGVkIGZyb20gMTgwMDAgdG8gMTc1MDAwIGNvbnRyYWN0cyBpbiB0aGUgcGFzdCAxMCBzZXNzaW9ucyB3aGlsZSBwdXQgb3BlbiBpbnRlcmVzdCBxdWFkcnVwbGVkIHRvIDYwMDAwIGNvbnRyYWN0cyBkdXJpbmcgdGhlIHNhbWUgcGVyaW9kIFRyYWRlIEFsZXJ0IGRhdGEgc2hvd2VkIEZyaWRheSB3YXMgZXNwZWNpYWxseSBidXN5IGZvciBvcHRpb24gdHJhZGVycyBzaW5jZSBvbiB0aGF0IGRheSB0aGVyZSB3YXMgMTk0IHRpbWVzIG1vcmUgY2FsbHMgdHJhZGVkIHRoYW4gdGhlIGF2ZXJhZ2Ugb3ZlciB0aGUgcGFzdCBzaXggbW9udGhzIHNhaWQgUm9ja3kgd2hpdGUgc2VuaW9yIHF1YW50aXRhdGl2ZSBhbmFseXN0IGF0IFNjaGFlZmZlcnMgSW52ZXN0bWVudCBSZXNlYXJjaCBpbiBDaW5jaW5uYXRpIE9oaW8gQSBtZXJnZXIgYmV0d2VlbiBQaWxncmltcyB0aGUgd29ybGRzIHNlY29uZGxhcmdlc3QgY2hpY2tlbiBwcm9jZXNzb3Igd291bGQgc2VlbSB0byBwdXQgdGhlIFBpbm5hY2xlIGRlYWwgaW4gcGVyaWwgVGhlcmUgd2FzIGEgbm90YWJsZSBpbmNyZWFzZSBpbiBwdXRvcHRpb24gb3BlbiBpbnRlcmVzdCBpbiBQaW5uYWNsZSBpbiB0aGUgZGF5cyBmb2xsb3dpbmcgdGhlIGRlYWwgYW5ub3VuY2VtZW50IEFib3V0IDc1MCBuZXcgcHV0IHBvc2l0aW9ucyBleHBpcmluZyBpbiBTZXB0ZW1iZXIgYXQgYSAzMjUwIHN0cmlrZSBwcmljZSB3ZXJlIG9wZW5lZCBvbiBNYXkgMTIgYW5kIDEzIE92ZXJhbGwgcHV0IHZvbHVtZSBvbiBNYXkgMTIgc29hcmVkIHRvIDEzMTEgY29udHJhY3RzIHZlcnN1cyBhbiBhdmVyYWdlIG9mIGp1c3QgdGhyZWUgY29udHJhY3RzIGluIHRoZSBwcmV2aW91cyBmaXZlIHNlc3Npb25zIFNpbWlsYXJseSBtb3JlIHRoYW4gMjAwIDMyNTAgcHV0IG9wdGlvbnMgd2VyZSBib3VnaHQgdGhhdCBleHBpcmUgaW4gbGF0ZSBKdW5lIFdpdGggUGlubmFjbGUgc2hhcmVzIGZhbGxpbmcgNTQgcGVyY2VudCBvbiBUdWVzZGF5IHRob3NlIGJldHMgYXJlIG5vdyBwcm9maXRhYmxlIG9yIGluIHRoZSBtb25leSBCSUcgQkVUUyBPTiBISUxMU0hJUkUgQXQgbGVhc3QgdHdvIGxhcmdlIGJsb2NrcyBvZiBIaWxsc2hpcmUgY2FsbHMgdHJhZGVkIG9uIEZyaWRheSAgMjUxNSBjb250cmFjdHMgb2YgSnVuZSA0MyBjYWxscyBhbmQgMTUwMCBjb250cmFjdHMgb2YgT2N0IDQzIGNhbGxzIGFjY29yZGluZyB0byBUaG9tc29uIFJldXRlcnMgZGF0YSBUaGUgT2N0b2JlciBjYWxscyB0cmFkZWQgYXQgYWJvdXQgNjUgY2VudHMgYSBjb250cmFjdCBvbiBGcmlkYXkgYnV0IHdlcmUgY2hhbmdpbmcgaGFuZHMgYXQgYWJvdXQgMyBlYWNoIG9uIFR1ZXNkYXkgZm9yIGEgcG90ZW50aWFsIHByb2ZpdCBvZiBhYm91dCAzNTAwMDAgUGFydCBvZiB0aGUgSnVuZSA0MyBjYWxscyBpbiBIaWxsc2hpcmUgdHJhZGVkIG9uIEZyaWRheSB3YXMgdXNlZCBhcyBhIHRocmVlbGVnZ2VkIHRyYWRlIGEgc3RyYXRlZ3kgdGhhdCBpcyBvZnRlbiB1c2VkIHdoZW4gYSB0cmFkZXIgaXMgdHJ5aW5nIHRvIGhlZGdlIGEgYnVsbGlzaCBwb3NpdGlvbiBpbiBhIHN0b2NrIEFuIG9wdGlvbnMgdHJhZGVyIG9uIEZyaWRheSBtYWRlIHRocmVlIHRyYW5zYWN0aW9ucyAgYm91Z2h0IEp1bmUgMzggY2FsbHMgYW5kIHNvbGQgSnVuZSA0MyBjYWxscyBhbmQgc29sZCAzNSBwdXRzIERpZCB0aGUgdHJhZGVyIGtub3cgc29tZXRoaW5nIGluIGFkdmFuY2UgSSBkb250IGtub3cgYnV0IHRoZXkgd2VyZSBkZWZpbml0ZWx5IHBvc2l0aW9uaW5nIGZvciB0aGUgc3RvY2sgcHJpY2UgdG8gZ28gaGlnaGVyIGFuZCBpdCBoYXMgZG9uZSBqdXN0IHRoYXQgdG9kYXkgc2FpZCBDYWl0bGluIER1ZmZ5IGVxdWl0eSBvcHRpb25zIGFuYWx5c3QgYXQgSW50ZXJhY3RpdmUgQnJva2VycyBHcm91cCBpbiBHcmVlbndpY2ggQ29ubmVjdGljdXR0AARyb3dzdXEAfgAKAAAAAXQAATV0AAVzdGFydHVxAH4ACgAAAAF0AAEwdAACZmx1cQB+AAoAAAABdABvYXJ0aWNsZUlkLHRpdGxlLGNvbnRlbnQsZGF0ZSxzdG9ja0hpc3RvcnlJZCxzeW1ib2wsaGlzdG9yeURhdGUsb3BlbixoaWdoLGxvdyxjbG9zZSxhZGpDbG9zZSx2b2x1bWUsaWQsX3ZlcnNpb25fdAACZnF1cQB+AAoAAAABdAA6aGlzdG9yeURhdGU6WzIwMTAtMDYtMTBUMDA6MDA6MDBaIFRPIDIwMTMtMDctMzBUNTk6NTk6NTlaXXgAcA==</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDE3MTI=</field><field name="title" class="java.lang.String">rO0ABXQAP09pbCBhdCAkMTIwIE5vdyBCaWdnZXN0IEJldCBhcyBGdXR1cmVzIExlYXZlIEZvcmVjYXN0ZXJzIEJlaGluZA==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATFfqfiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDdkMDU2YWNkZWQzNzU1MWI=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lQQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATFk0FSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3mZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3oUeuFHrh</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3mZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3mZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAznrhR64Uf</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAABkA==</field><field name="id" class="java.lang.String">rO0ABXQAEDQ3MGM3MTRjZTkzMmE2MzY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mL6fAAAQ==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDc3ODI=</field><field name="title" class="java.lang.String">rO0ABXQAM1VTIENvbW1vZGl0eSBNYXJrZXRzIFNocmluayBBZnRlciBNRiBHbG9iYWwgRmFpbHVyZQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATRfNHMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGE0M2RhOTA2YTE4NTE2NDg=</field><field name="symbol" class="java.lang.String">rO0ABXQAA05PVg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATRkWs8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBQ49cKPXCk</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBRKFHrhR64</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBQtwo9cKPX</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBREo9cKPXD</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBNS4UeuFHs</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAADgwxA==</field><field name="id" class="java.lang.String">rO0ABXQAEGIxZDYxOGFiZWI3YTBkYTI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHh6AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDIzNTk=</field><field name="title" class="java.lang.String">rO0ABXQAOERpc2NvdW50IEJyb2tlcnMnIFNoYXJlcyBTdXJnZSBhcyBTbWFsbCBJbnZlc3RvcnMgUmV0dXJu</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8nTiSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDcyMzY1MDU5NjlhODJlZmU=</field><field name="symbol" class="java.lang.String">rO0ABXQABEFNVEQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8sdICAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4LhR64Ueu</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4MzMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3z1wo9cKP</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA38zMzMzMz</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA249cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAE4sgA==</field><field name="id" class="java.lang.String">rO0ABXQAEDdlNjk4YzYyNDVjODQ0YTE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEStAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExMzk2</field><field name="title" class="java.lang.String">rO0ABXQAKEdvbGQgUHVuZGl0cyBQb25kZXI6IFdoZXJlJ3MgdGhlIEJvdHRvbT8=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT+YmgyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDEyZTgyYjM0YjQyMjA4N2Y=</field><field name="symbol" class="java.lang.String">rO0ABXQABVNDR0xZ</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT+dwGiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAbeuFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAbj1wo9cKP</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAa1wo9cKPX</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAbUeuFHrhS</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAao9cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAACVnA==</field><field name="id" class="java.lang.String">rO0ABXQAEGFjNGNiYjE3ZTE5OWJhM2M=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFkxAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUzMDE=</field><field name="title" class="java.lang.String">rO0ABXQAL09pbCBFYXNlcyBvbiBXZWFrIEpvYnMgRGF0YSwgVG91Y2hlcyA3LXdlZWsgTG93</field><field name="content" class="java.lang.String">rO0ABXQU3lRoZSBwcmljZSBvZiBjcnVkZSBvaWwgZGVjbGluZWQgZm9yIHRoZSB0aGlyZCB0aW1lIGluIGZvdXIgZGF5cyBNb25kYXksIGFzIEZyaWRheSdzIGVtcGxveW1lbnQgcmVwb3J0IGFkZGVkIHRvIHNwZWN1bGF0aW9uIHRoYXQgVS5TLiBmdWVsIGRlbWFuZCB3aWxsIHNsb3cgYW5kIElyYW4gYWdyZWVkIHRvIHJlc3VtZSB0YWxrcyBvbiBpdHMgbnVjbGVhciBwcm9ncmFtLiBGdXR1cmVzIGZlbGwgMC44IHBlcmNlbnQgYWZ0ZXIgdGhlIGdvdmVybm1lbnQgcmVwb3J0ZWQgRnJpZGF5IHRoYXQgdGhlIFUuUy4gY3JlYXRlZCAxMjAsMDAwIGpvYnMgaW4gTWFyY2gsIGJlbG93IHRoZSBtZWRpYW4gZm9yZWNhc3Qgb2YgMjA1LDAwMCBpbiBhIEJsb29tYmVyZyBzdXJ2ZXkuIE5lZ290aWF0aW9ucyBiZXR3ZWVuIElyYW4gYW5kIHRoZSBVbml0ZWQgTmF0aW9ucyBTZWN1cml0eSBDb3VuY2lsIG1lbWJlcnMgcGx1cyBHZXJtYW55IGFyZSBzY2hlZHVsZWQgdG8gc3RhcnQgQXByaWwgMTQsIGVhc2luZyBjb25jZXJuIHRoYXQgc3VwcGxpZXMgZnJvbSB0aGUgUGVyc2lhbiBHdWxmIG5hdGlvbiB3aWxsIGJlIGRpc3J1cHRlZC4g4oCcRnJpZGF54oCZcyBwb29yIGpvYnMgbnVtYmVycyBhcmUgcmFpc2luZyBjb25jZXJucyB3aXRoIHJlZ2FyZCB0byBmdXR1cmUgZWNvbm9taWMgYWN0aXZpdHks4oCdIHNhaWQgU3RlcGhlbiBTY2hvcmssIHByZXNpZGVudCBvZiB0aGUgU2Nob3JrIEdyb3VwIGluIFZpbGxhbm92YSwgUGVubnN5bHZhbmlhLiDigJxUaGUgam9icyBudW1iZXIgaXMgaGF2aW5nIGFuIGV4YWdnZXJhdGVkIGltcGFjdCBiZWNhdXNlIHdlIHdlcmUgY2xvc2VkIG9uIEZyaWRheS4gV2hlbiB5b3UgYWRkIHRoZSB1cGNvbWluZyBJcmFuIHRhbGtzLCB5b3UgaGF2ZSB0aGUgbWFraW5ncyBvZiBhIGJpZyBtb3ZlIGxvd2VyLuKAnSBDcnVkZSBvaWwgZm9yIE1heSBkZWxpdmVyeSBmZWxsIDg1IGNlbnRzIHRvIHNldHRsZSBhdCAkMTAyLjQ2IGEgYmFycmVsIG9uIHRoZSBOZXcgWW9yayBNZXJjYW50aWxlIEV4Y2hhbmdlLiBUaGUgY29udHJhY3QgdG91Y2hlZCAkMTAwLjgxLCB0aGUgbG93ZXN0IGludHJhZGF5IGxldmVsIGluIHNldmVuIHdlZWtzLiBQcmljZXMgaGF2ZSBjbGltYmVkIDMuNyBwZXJjZW50IHRoaXMgeWVhci4gQnJlbnQgb2lsIGZvciBNYXkgc2V0dGxlbWVudCBkcm9wcGVkIDc2IGNlbnRzLCBvciAwLjYgcGVyY2VudCwgdG8gJDEyMi42NyBhIGJhcnJlbCBvbiB0aGUgTG9uZG9uLWJhc2VkIElDRSBGdXR1cmVzIEV1cm9wZSBleGNoYW5nZS4gQ29tbW9kaXR5IGFuZCBlcXVpdHkgbWFya2V0cyB3ZXJlIGNsb3NlZCBpbiBOZXcgWW9yayBhbmQgTG9uZG9uIG9uIEFwcmlsIDYgZm9yIEdvb2QgRnJpZGF5LiBFdXJvcGVhbiBzdG9jayBtYXJrZXRzIGFyZSBzaHV0IHRvZGF5IGZvciBob2xpZGF5cywgYWxvbmcgd2l0aCBBdXN0cmFsaWEsIE5ldyBaZWFsYW5kLCBIb25nIEtvbmcsIFRoYWlsYW5kIGFuZCBTb3V0aCBBZnJpY2EuIExpZ2h0IFZvbHVtZSDigJxWb2x1bWUgaXMgdmVyeSBsaWdodCBiZWNhdXNlIG1hcmtldHMgYXJlIHNodXQgaW4gRXVyb3BlLCBBdXN0cmFsaWEgYW5kIEhvbmcgS29uZyzigJ0gc2FpZCBDaHJpcyBEaWxsbWFuLCBhbiBhbmFseXN0IGFuZCBicm9rZXIgYXQgVHJhZGl0aW9uIEVuZXJneSBpbiBTdGFtZm9yZCwgQ29ubmVjdGljdXQuIOKAnFRoaXMgaXMgcHJvYmFibHkgZXhhZ2dlcmF0aW5nIHRoZSBzaXplIG9mIG1vdmVzLuKAnSBFbGVjdHJvbmljIHRyYWRpbmcgdm9sdW1lIG9uIHRoZSBOeW1leCB3YXMgMzUxLDQ3MSBjb250cmFjdHMgYXMgb2YgMjozOCBwLm0uIGluIE5ldyBZb3JrLiBWb2x1bWUgdG90YWxlZCA0OTQsMDg4IGNvbnRyYWN0cyBvbiBBcHJpbCA1LCAyNCBwZXJjZW50IGJlbG93IHRoZSB0aHJlZS1tb250aCBhdmVyYWdlLiBPcGVuIGludGVyZXN0IHdhcyAxLjU2IG1pbGxpb24uIFRoZSBVLlMuIGVtcGxveW1lbnQgaW5jcmVhc2Ugd2FzIHRoZSBzbWFsbGVzdCBpbiBmaXZlIG1vbnRocy4gVGhlIGRhdGEgYWxzbyBzaG93ZWQgdGhlIHVuZW1wbG95bWVudCByYXRlIGZlbGwgdG8gOC4yIHBlcmNlbnQgYXMgcGVvcGxlIGxlZnQgdGhlIGxhYm9yIGZvcmNlLCB3aGlsZSB3b3JrZXJzIHB1dCBpbiBmZXdlciBob3Vycy4g4oCcV29ycmllcyBhYm91dCB0aGUgVS5TLiBlY29ub215IGFyZSBjb21pbmcgYmFjayB3aXRoIGxhc3QgRnJpZGF54oCZcyBlbXBsb3ltZW50IG51bWJlcnMs4oCdIHNhaWQgVG9tIEJlbnR6LCBhIGRpcmVjdG9yIHdpdGggQk5QIFBhcmliYXMgUHJpbWUgQnJva2VyYWdlIEluYy4gaW4gTmV3IFlvcmsuIOKAnEFsbCBvZiB0aGUgbWFya2V0cyBhcmUgbW92aW5nIHRvZ2V0aGVyIHRvZGF5IG9uIGVjb25vbWljIHdvcnJpZXMuIEEgdGVzdCBvZiAkMTAwIGxvb2tzIGxpa2VseS7igJ0gRXF1aXRpZXMsIENvbW1vZGl0aWVzIE9pbCBhbHNvIGRlY2xpbmVkIHdpdGggZXF1aXRpZXMgYW5kIG90aGVyIGNvbW1vZGl0aWVzLiBUaGUgU3RhbmRhcmQgJiBQb29y4oCZcyA1MDAgSW5kZXggd2FzIGRvd24gMC45IHBlcmNlbnQuIFRoZSBTdGFuZGFyZCAmIFBvb3LigJlzIEdTQ0kgSW5kZXggb2YgMjQgY29tbW9kaXRpZXMgZmVsbCAwLjcgcGVyY2VudCwgbGVkIGJ5IGNvZmZlZSBhbmQgY29ybi4gR2Fzb2xpbmUgZm9yIE1heSBkZWxpdmVyeSBkZWNsaW5lZCA0LjM4IGNlbnRzLCBvciAxLjMgcGVyY2VudCwgdG8gJDMuMjk2NyBhIGdhbGxvbiBpbiBOZXcgWW9yay4gSXQgd2FzIHRoZSBsb3dlc3Qgc2V0dGxlbWVudCBzaW5jZSBNYXJjaCAxNS4gSXJhbiBhbmQgdGhlIHJlcHJlc2VudGF0aXZlcyBvZiB0aGUgc2l4IG5hdGlvbnMgd2lsbCBtZWV0IGZvciBudWNsZWFyIHRhbGtzIHN0YXJ0aW5nIEFwcmlsIDE0IGluIElzdGFuYnVsLCBNaWNoYWVsIE1hbm4sIGEgRXVyb3BlYW4gVW5pb24gc3Bva2VzbWFuLCBzYWlkIHllc3RlcmRheS4gVGhlaXIgbGFzdCBtZWV0aW5nIHdhcyBpbiBKYW51YXJ5IDIwMTEuIFRoZSBnb3Zlcm5tZW50IGluIFRlaHJhbiBpcyB1bmRlciBpbmNyZWFzaW5nIGVjb25vbWljIHByZXNzdXJlIGZyb20gdHJhZGUsIGZpbmFuY2lhbCBhbmQgZW5lcmd5IHNhbmN0aW9ucywgaW5jbHVkaW5nIFUuUy4gcGVuYWx0aWVzIG9uIGJhbmtzIHRoYXQgcHJvY2VzcyBwYXltZW50cyBmb3IgSXJhbmlhbiBjcnVkZS4gVGhlIFBlcnNpYW4gR3VsZiBjb3VudHJ54oCZcyBTdXByZW1lIE5hdGlvbmFsIFNlY3VyaXR5IENvdW5jaWwgc2FpZCBpbiBhIHN0YXRlbWVudCB0b2RheSBjaXRlZCBieSB0aGUgc3RhdGUtcnVuIE1laHIgbmV3cyBhZ2VuY3kgdGhhdCBhIHNlY29uZCByb3VuZCBvZiB0YWxrcyB3aWxsIGJlIGhlbGQgaW4gQmFnaGRhZCwgdGhlIGRhdGUgb2Ygd2hpY2ggd2lsbCBiZSBhbm5vdW5jZWQgYXQgdGhlIGVuZCBvZiB0aGUgSXN0YW5idWwgbWVldGluZy4gTm8gQ29uZGl0aW9ucyBJcmFuaWFuIEZvcmVpZ24gTWluaXN0ZXIgQWxpIEFrYmFyIFNhbGVoaSBzYWlkIHRvZGF5IHRoYXQgaGUgd29u4oCZdCBhY2NlcHQgY29uZGl0aW9ucyBiZWZvcmUgdGhlIHRhbGtzLiBIaXMgY29tbWVudCBjYW1lIGFmdGVyIHRoZSBOZXcgWW9yayBUaW1lcywgY2l0aW5nIHVuaWRlbnRpZmllZCBkaXBsb21hdHMsIHJlcG9ydGVkIHRoYXQgdGhlIGFsbGllcyBwbGFuIHRvIGRlbWFuZCB0aGUgaW1tZWRpYXRlIGNsb3Npbmcgb2YgYSBudWNsZWFyIGVucmljaG1lbnQgZmFjaWxpdHkgaW4gY2VudHJhbCBJcmFuLiBQcmljZXMgaW4gTmV3IFlvcmsgaGF2ZSBkcm9wcGVkIDcuMyBwZXJjZW50IHNpbmNlIHRvdWNoaW5nICQxMTAuNTUgYSBiYXJyZWwgaW4gaW50cmFkYXkgdHJhZGluZyBvbiBNYXJjaCAxLCB0aGUgaGlnaGVzdCBsZXZlbCBzaW5jZSBNYXkgMjAxMSwgb24gY29uY2VybiB0aGF0IHRoZSB0ZW5zaW9uIG92ZXIgSXJhbuKAmXMgbnVjbGVhciBwcm9ncmFtIG1heSBhZmZlY3QgZ2xvYmFsIHN1cHBsaWVzLiBPaWwgYWxzbyBmZWxsIG9uIHJlcG9ydHMgb2YgaW5mbGF0aW9uIGluIENoaW5hLCB3aGVyZSBjb25zdW1lciBwcmljZXMgcm9zZSAzLjYgcGVyY2VudCBmcm9tIGEgeWVhciBlYXJsaWVyLCBhY2NvcmRpbmcgdG8gdGhlIE5hdGlvbmFsIEJ1cmVhdSBvZiBTdGF0aXN0aWNzLiBUaGF0IGV4Y2VlZGVkIHRoZSBtZWRpYW4gMy40IHBlcmNlbnQgZXN0aW1hdGUgaW4gYSBCbG9vbWJlcmcgc3VydmV5IG9mIDMzIGVjb25vbWlzdHMuIEZhc3RlciBpbmZsYXRpb24gbWF5IGxpbWl0IHRoZSBnb3Zlcm5tZW504oCZcyBvcHRpb25zIHRvIHN0aW11bGF0ZSBncm93dGggaW4gdGhlIHNlY29uZC1sYXJnZXN0IG9pbC1jb25zdW1pbmcgY291bnRyeS4gVS5TLiBjcnVkZSBvaWwgaW52ZW50b3JpZXMgYXJlIGF0IHRoZSBoaWdoZXN0IGxldmVsIHNpbmNlIEp1bmUgYWZ0ZXIgcmlzaW5nIDkuMDEgbWlsbGlvbiBiYXJyZWxzIHRvIDM2Mi40IG1pbGxpb24gaW4gdGhlIHdlZWsgZW5kZWQgTWFyY2ggMzAsIGFjY29yZGluZyB0byB0aGUgRW5lcmd5IERlcGFydG1lbnQuIOKAnFlvdSBzdGlsbCBoYXZlIHRoYXQgaHVnZSBzdXBwbHkgYnVpbGQgZnJvbSBsYXN0IHdlZWsgaGFuZ2luZyBvdmVyIHRoZSBtYXJrZXQs4oCdIHNhaWQgRnJlZCBSaWdvbGluaSwgdmljZSBwcmVzaWRlbnQgb2YgUGFyYW1vdW50IE9wdGlvbnMgSW5jLiBpbiBOZXcgWW9yay4gU3BlY3VsYXRvciBCZXRzIFNwZWN1bGF0b3JzIHJlZHVjZWQgYnVsbGlzaCBiZXRzIG9uIG9pbCBieSB0aGUgbW9zdCBpbiBtb3JlIHRoYW4gdGhyZWUgbW9udGhzLCBhY2NvcmRpbmcgdG8gdGhlIENvbW1vZGl0eSBGdXR1cmVzIFRyYWRpbmcgQ29tbWlzc2lvbuKAmXMgQ29tbWl0bWVudHMgb2YgVHJhZGVycyByZXBvcnQgb24gRnJpZGF5LiBNb25leSBtYW5hZ2VycyBjdXQgbmV0IGxvbmcgcG9zaXRpb25zLCBvciB3YWdlcnMgb24gcmlzaW5nIHByaWNlcywgYnkgMTAgcGVyY2VudCBpbiB0aGUgc2V2ZW4gZGF5cyBlbmRlZCBBcHJpbCAzLCBmb3IgdGhlIGJpZ2dlc3QgZHJvcCBzaW5jZSBEZWMuIDIwLCB0aGUgcmVwb3J0IHNob3dlZC4gSGVkZ2UgZnVuZHMgYW5kIG90aGVyIG1vbmV5IG1hbmFnZXJzIGN1dCBidWxsaXNoIGJldHMgb24gQnJlbnQgY3J1ZGUgYnkgMTEsODA5IGNvbnRyYWN0cyBpbiB0aGUgd2VlayBlbmRlZCBBcHJpbCAzLCBhY2NvcmRpbmcgdG8gZGF0YSBmcm9tIElDRSBleGNoYW5nZS4gU3BlY3VsYXRpdmUgYmV0cyB0aGF0IHByaWNlcyB3aWxsIHJpc2UsIGluIGZ1dHVyZXMgYW5kIG9wdGlvbnMgY29tYmluZWQsIG91dG51bWJlcmVkIHNob3J0IHBvc2l0aW9ucyBieSAxMzksMDc0IGxvdHMsIElDRSBzYWlkIE1vbmRheSBpbiBpdHMgd2Vla2x5IENvbW1pdG1lbnQgb2YgVHJhZGVycyByZXBvcnQu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATaVeQyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGE5OTE1OWYxOGNiMzRiNjg=</field><field name="symbol" class="java.lang.String">rO0ABXQABUJOUFFG</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATaan2iAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBEQAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBEQAAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBEQAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBEQAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBDq4UeuFHs</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAETA==</field><field name="id" class="java.lang.String">rO0ABXQAEDUwNmE5OTU4ZGE5ODQyMWM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGnmAAAA==</field></document></documents><date>2015-05-07T12:18:45-0500</date></cacheEntry>
<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0CmpNYWxsIG9wZXJhdG9yIE1hY2VyaWNoIGhhcyByZWplY3RlZCBhIDE2IGJpbGxpb24gaG9zdGlsZSBiaWQgZnJvbSBjb21wZXRpdG9yIFNpbW9uIFByb3BlcnR5IEdyb3VwIGFuZCBhZG9wdGVkIGEgcG9pc29uIHBpbGwgZGVmZW5zZSB0byBkZWZlbmQgYWdhaW5zdCBhIHRha2VvdmVyIFNpbW9uIFByb3BlcnR5IEdyb3VwIEluYyBhbHJlYWR5IHRoZSBuYXRpb25zIGxhcmdlc3QgbWFsbCBvcGVyYXRvciB3ZW50IGhvc3RpbGUgZWFybGllciB0aGlzIG1vbnRoIGFmdGVyIHNheWluZyB0aGF0IE1hY2VyaWNoIHJlZnVzZWQgdG8gbmVnb3RpYXRlIGEgZGVhbCB0aGF0IHdvdWxkIGNvbWJpbmUgdHdvIG9mIHRoZSBsYXJnZXN0IFVTIG1hbGwgb3BlcmF0b3JzIEluZGlhbmFwb2xpc2Jhc2VkIFNpbW9uIG9mZmVyZWQgOTEgcGVyIHNoYXJlIGluIGNhc2ggYW5kIHN0b2NrIGZvciBlYWNoIE1hY2VyaWNoIHNoYXJlIFRoZSBvZmZlciBpcyB2YWx1ZWQgYXQgYWJvdXQgMjI0IGJpbGxpb24gY291bnRpbmcgTWFjZXJpY2ggZGVidCBNYWNlcmljaCBzYWlkIFR1ZXNkYXkgdGhhdCBTaW1vbnMgb2ZmZXIgc2lnbmlmaWNhbnRseSB1bmRlcnZhbHVlcyB0aGUgY29tcGFueSBhbmQgaXNudCBpbiB0aGUgYmVzdCBpbnRlcmVzdHMgb2YgaXRzIHNoYXJlaG9sZGVycyBUaGUgY29tcGFueSBhbHNvIHNhaWQgdGhhdCBpdCBoYXMgY29uY2VybnMgb3ZlciBTaW1vbnMgcGxhbiB0byBzZWxsIHNvbWUgb2YgaXRzIGFzc2V0cyB0byBmZWxsb3cgbWFsbCBvcGVyYXRvciBHZW5lcmFsIEdyb3d0aCBQcm9wZXJ0aWVzIEluYyBNYWNlcmljaCBzYWlkIGl0IHRoaW5rcyB0aGUgcGFydG5lcnNoaXAgYmV0d2VlbiBTaW1vbiBhbmQgR2VuZXJhbCBHcm93dGggUHJvcGVydGllcyByYWlzZXMgc2VyaW91cyBhbnRpdHJ1c3QgY29uY2VybnMgYXMgaXQgaXMgYSBjb25jZXJ0ZWQgZWZmb3J0IGJ5IHRoZSB0d28gbGFyZ2VzdCBjb21wYW5pZXMgaW4gdGhlIGluZHVzdHJ5IHRvIGFjcXVpcmUgdGhlIE5vIDMgY29tcGFueSBNYWNlcmljaCBzYWlkIHRoYXQgaXQgZmVlbHMgaXQgbmVlZHMgdG8gYmUgcHJvYWN0aXZlIHRvIHByb3RlY3Qgc2hhcmVob2xkZXIgdmFsdWUgYW5kIHByZXZlbnQgdGhlIGFjY3VtdWxhdGlvbiBvZiBzdG9jayBieSBhbnkgZ3JvdXAgdGhhdCBtYXkgd2FudCB0byBmb3JjZSB0aGUgc2FsZSBvZiB0aGUgY29tcGFueSBNYWNlcmljaCBzYWlkIHRoYXQgaXRzIHNoYXJlaG9sZGVyIHJpZ2h0cyBwbGFuIHdoaWNoIGlzIG9mdGVuIHJlZmVycmVkIHRvIGFzIGEgcG9pc29uIHBpbGwgd2lsbCBleHBpcmUgYXQgaXRzIDIwMTYgYW5udWFsIHNoYXJlaG9sZGVycyBtZWV0aW5nIHVubGVzcyByZWRlZW1lZCBvciBvdGhlcndpc2UgZXhjaGFuZ2VkIFRoZSBjb21wYW55IGFsc28gYW5ub3VuY2VkIHRoYXQgaXQgd2FzIGFkb3B0aW5nIGEgY2xhc3NpZmllZCBib2FyZCBzdHJ1Y3R1cmUgc2F5aW5nIHRoYXQgaXQgd2FzIG9ubHkgaW50ZW5kZWQgdG8gcHJvdGVjdCBzaGFyZWhvbGRlciB2YWx1ZSBUaGUgY29tcGFueSBzYWlkIGRpcmVjdG9ycyB3b3VsZCBiZSBhc3NpZ25lZCB0byBvbmUgb2YgdGhyZWUgY2xhc3NlcyBhbmQgd291bGQgZWFjaCBzZXJ2ZSB0aHJlZXllYXIgdGVybXMgTWFjZXJpY2ggc2FpZCB0aGUgY2xhc3NpZmllZCBib2FyZCBzdHJ1Y3R1cmUgaXNudCBpbnRlbmRlZCB0byBiZSBwZXJtYW5lbnQgYW5kIHRoYXQgaXQgaXMgY29tbWl0dGVkIHRvIHJldmlld2luZyB0aGUgb25nb2luZyBuZWVkIGZvciBpdCBpbiAyMDE2IFNpbW9uIENoYWlybWFuIGFuZCBDRU8gRGF2aWQgU2ltb24gc2FpZCBpbiBhIHN0YXRlbWVudCB0aGF0IHRoZSBjb21wYW55IHdhcyBkaXNhcHBvaW50ZWQgTWFjZXJpY2ggd291bGRudCBtZWV0IHRvIHRhbGsgYWJvdXQgaXRzIHByb3Bvc2FsIEhlIGFkZGVkIHRoYXQgdGhlIGNvbXBhbnkgd2FzIGNvbmZpZGVudCBNYWNlcmljaCBzaGFyZWhvbGRlcnMgd291bGQgcmVjZWl2ZSBtb3JlIHZhbHVlIGJ5IGNvbWJpbmluZyB3aXRoIHRoZW0gdGhhbiBieSBiZWluZyBhIHN0YW5kYWxvbmUgYnVzaW5lc3MgU2ltb24gaXMgYSByZWFsIGVzdGF0ZSBpbnZlc3RtZW50IHRydXN0IHRoYXQgb3BlcmF0ZXMgbW9yZSB0aGFuIDIwMCBwcm9wZXJ0aWVzIGluIHRoZSBVbml0ZWQgU3RhdGVzIHdpdGggYSBoZWF2eSBwcmVzZW5jZSBpbiBGbG9yaWRhIFRleGFzIGFuZCBDYWxpZm9ybmlhIGFtb25nIG90aGVyIHN0YXRlcyBJdCBhbHNvIHJ1bnMgc2hvcHBpbmcgY2VudGVycyBpbiBDYW5hZGEgSmFwYW4gTWV4aWNvIGFuZCBvdGhlciBjb3VudHJpZXMgTWFjZXJpY2ggaGFzIDUxIHNob3BwaW5nIGNlbnRlcnMgaW4gaXRzIHBvcnRmb2xpbyBpbmNsdWRpbmcgbG9jYXRpb25zIGluIENoaWNhZ28gdGhlIG1ldHJvIE5ldyBZb3JrIGFyZWEgYW5kIFdhc2hpbmd0b24gREMgSXRzIG1hbGxzIGluY2x1ZGUgVHlzb25zIENvcm5lciBDZW50ZXIgbmVhciBXYXNoaW5ndG9uIERDIGFuZCBRdWVlbnMgQ2VudGVyIGluIE5ldyBZb3JrIENpdHkgU2hhcmVzIG9mIE1hY2VyaWNoIENvIGJhc2VkIGluIFNhbnRhIE1vbmljYSBDYWxpZm9ybmlhIGZlbGwgMjkxIG9yIDMxIHBlcmNlbnQgdG8gOTE5OCBpbiBhZnRlcm5vb24gdHJhZGluZyBvbiBUdWVzZGF5IFNpbW9uIFByb3BlcnR5IHNoYXJlcyBmZWxsIDEzNyB0byAxODU3MHQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0xMi0wM1QwMDowMDowMFogVE8gMjAxNC0wNy0xMFQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDM5NzY=</field><field name="title" class="java.lang.String">rO0ABXQAPldhc2hpbmd0b24sIFJlZ3VsYXRvcnMgU2hydWcgYXQgQWxpYmFiYSdzIFBsYW4gZm9yIE1hc3NpdmUgSVBP</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcepHSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDA3MjRkOGEzODdhYzY5Y2Y=</field><field name="symbol" class="java.lang.String">rO0ABXQABFBFUlk=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcjytCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxKPXCj1wp</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxUeuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxD1wo9cKP</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxTMzMzMzN</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxTMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAF6hA==</field><field name="id" class="java.lang.String">rO0ABXQAEGVlMDVmOTQ5N2ViNWY4OWU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE6aAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIzMjcx</field><field name="title" class="java.lang.String">rO0ABXQAOEFtYXpvbiBTcGF0IFdpdGggUHVibGlzaGVycyB0byBFc2NhbGF0ZSBhcyBDb250cmFjdHMgRW5k</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUZlP4SAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGI0N2UwMTc2MjNhNzRkZGQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNGUEk=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUZqZeCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cAAAAAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cAAAAAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+EeuFHrhR7</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAARdMA==</field><field name="id" class="java.lang.String">rO0ABXQAEGMxYjc5Mjk4NDJmMzUzMzc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mG8NAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE0MzM5</field><field name="title" class="java.lang.String">rO0ABXQANkdFIEJhdHRsZXMgZm9yIEFsc3RvbSBhcyBTaWVtZW5zIFdpbnMgRnJhbmNlJ3MgU3VwcG9ydA==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUWmtDiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDU4MmFhY2IwZGQ1YTdiZmM=</field><field name="symbol" class="java.lang.String">rO0ABXQAAkdF</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUWr2pSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA61HrhR64U</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA64UeuFHrh</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6lwo9cKPX</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6wo9cKPXD</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA51wo9cKPX</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAaZOKA==</field><field name="id" class="java.lang.String">rO0ABXQAEDIyOWYxYWU5YjVkNGFjNjc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKZJAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQyOTQ=</field><field name="title" class="java.lang.String">rO0ABXQAN0ZyYW5jZSBUZWxscyBJbnZlc3RvcnM6IEp1c3QgTGVhcm4gdG8gUGxheSBHYW1lIE91ciBXYXk=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbRZRCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDU2MTE5NTU1NDFlZjk1ZDE=</field><field name="symbol" class="java.lang.String">rO0ABXQABFhCT1I=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbWi2yAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/0euFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/0euFHrhR7</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/y4UeuFHrh</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/y4UeuFHrh</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/y4UeuFHrh</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAI/A==</field><field name="id" class="java.lang.String">rO0ABXQAEGE5NmU3OGMzYWM0MDkzYmY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEWzAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM5OTM=</field><field name="title" class="java.lang.String">rO0ABXQAJ0NhcmxvcyBTbGltIHRvIERpc21hbnRsZSBNZXhpY2FuIEVtcGlyZQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcZfhiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDlhMzJjODljMTZhMGM3MDk=</field><field name="symbol" class="java.lang.String">rO0ABXQABFdPT0Q=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUcepHSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJw9cKPXCk</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBKAUeuFHrh</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJw9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJ9cKPXCj2</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJ1HrhR64U</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAArXA==</field><field name="id" class="java.lang.String">rO0ABXQAEGFkNDdkOTAyNWRmN2ZkMTg=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mNBJAAAA==</field></document></documents><date>2015-05-07T12:17:56-0500</date></cacheEntry>
<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0C/FUaGUgZG91Z2hudXQgdGhhdCBjbGFzc2ljIGRlZXBmcmllZCBBbWVyaWNhbiBzbmFjayBpcyBnb2luZyBmb3J0aCB0byBkbyBiYXR0bGUgd2l0aCBFdXJvcGVhbiBuYXRpb25hbCB0cmVhdHMgaW4gdGhlaXIgaG9tZWxhbmRzIHRoZSBCZWxnaWFuIHdhZmZsZSB0aGUgQXVzdHJpYW4gc3RydWRlbCBhbmQgdGhlIERhbmlzaCAgRGFuaXNoIEFmdGVyIGJlYXRpbmcgYSByZXRyZWF0IGluIHRoZSAxOTkwcyBBbWVyaWNhbiByZXN0YXVyYW50IGNoYWluIER1bmtpbiBEb251dHMgaGFzIGJlZW4gcXVpZXRseSBidWlsZGluZyB1cCBpdHMgcHJlc2VuY2UgaW4gRXVyb3BlIGFuZCBub3cgaGFzIDEyMCBvdXRsZXRzIG1vc3RseSBpbiBHZXJtYW55IGJ1dCBhbHNvIGluIFJ1c3NpYSBTcGFpbiBCdWxnYXJpYSBhbmQgbW9zdCByZWNlbnRseSBCcml0YWluIER1bmtpbiBEb251dHMgaGVhZCBvZiBpbnRlcm5hdGlvbmFsIGRldmVsb3BtZW50IEplcmVteSBWaXRhcm8gc2F5cyB0aGF0IHRoZSBjb21wYW55IGlzIG5vdyBsb29raW5nIHRvIG9wZW4gc3RvcmVzIGluIERlbm1hcmsgQXVzdHJpYSBCZWxnaXVtIGFuZCB0aGUgTmV0aGVybGFuZHMgRGVzcGl0ZSB0aGUgd2VhayBFdXJvcGVhbiBlY29ub215IGl0IHRoaW5rcyBjdXN0b21lcnMgaGF2ZSBtb25leSB0byBzcGVuZCBUaGV5cmUgc29waGlzdGljYXRlZCBhbmQgdGhleXJlIGN1bHR1cmFsbHkgdmVyeSBvcGVuIHRvIHRyeWluZyBuZXcgZm9vZHMgaGUgc2FpZCBEdW5raW4gRG9udXRzIG1haW5zdGF5cyBhcmUgZG91Z2hudXRzIGFuZCBjb2ZmZWUgYWxvbmcgd2l0aCBtdWZmaW5zIGFuZCBtb3JlIHNvbGlkIGx1bmNoIGZvb2RzIHN1Y2ggYXMgYmFnZWxzIFRoZW4gdGhlIGNoYWluIG9mZmVycyB2YXJpYXRpb25zIHRvIHBsZWFzZSBsb2NhbCB0YXN0ZXMgSW4gTG9uZG9uIHdoZXJlIHRoZSBjaGFpbiBoYXMgcmVjZW50bHkgb3BlbmVkIHRocmVlIHNob3BzIGl0IHNlbGxzIGEgc2F2b3J5IHNuYWNrIGNhbGxlZCBCYWNvbiBCdXR0aWUgYXMgd2VsbCBhcyBwb3JyaWRnZSBJcyB0aGF0IHBvcnJpZGdlIGFzIGluIHdlbGwgb2F0bWVhbCBIb3QgY2VyZWFsIHllcyBWaXRhcm8gc2F5cyBXZSBhbHNvIGRvIGEgQ3JvaXN0cmFtaSBzYW5kd2ljaCB0aGF0cyBhIHBhc3RyYW1pIGNyb2lzc2FudCBTbyB3ZSBkbyBsb2NhbGl6ZSBXZSBoYXZlIGEgY3VycnkgZG91Z2hudXQgaW4gSW5kaWEgSm9vc3QgS2xpbmcgYSBEdXRjaCBmb29kIGluZHVzdHJ5IGVudHJlcHJlbmV1ciB0aGlua3MgdGhlIGNoYWluIHdpbGwgZmFjZSBzb21ldGhpbmcgb2YgYW4gdXBoaWxsIGJhdHRsZSBpbiB0aGUgTmV0aGVybGFuZHMgVGhleSBkb250IGhhdmUgbXVjaCBuYW1lIHJlY29nbml0aW9uIGlmIGFueSBoZSBzYWlkIEkgdGhpbmsgYSBsb3Qgd2lsbCBkZXBlbmQgb24gdGhlaXIgc3RheWluZyBwb3dlciBIZSB3b25kZXJlZCBhYm91dCB0aGUgd2lsbGluZ25lc3Mgb2YgdGhlIGZpcm0gdG8gYWR2ZXJ0aXNlIGFuZCBsb3NlIG1vbmV5IGZvciBhIHRpbWUgd2hlbiBzdG9yZXMgZmlyc3Qgb3BlbiBLbGluZyBoYXMgc29tZSBleHBlcmllbmNlIGdvaW5nIHRoZSBvcHBvc2l0ZSBkaXJlY3Rpb24gSGlzIGNvbXBhbnkgRWF0IER1dGNoIFdhZmZsZXMgaGFzIGJyb3VnaHQgdGhlIER1dGNoIGRlbGljYWN5IGtub3duIGFzIHN0cm9vcHdhZmVsICBhIGhvdCB3YWZmbGUgY29va2llIGZpbGxlZCB3aXRoIHN5cnVwICBpbnRvIDEwMDAgQW1lcmljYW4gc3RvcmVzIGFuZCBiYWtlcmllcyBIZSBndWVzc2VkIGFyb3VuZCBhIGhhbGYgb2YgRHV0Y2ggcGVvcGxlIGtub3cgd2hhdCBkb3VnaG51dHMgYXJlIGJ1dCBtb3N0IGhhdmUgb25seSB0cmllZCBsb3dxdWFsaXR5IHZlcnNpb25zIG9uIG9mZmVyIGluIGdyb2Nlcnkgc3RvcmVzIEEgc3Ryb29wd2FmZWwgdGFzdGVzIHZlcnkgZGlmZmVyZW50IHdoZW4gaXRzIGZyZXNoIGFuZCBpdHMgdGhlIHNhbWUgZm9yIGEgZG91Z2hudXQgaGUgc2FpZCBFdXJvcGVhbnMgd29udCByZWFsbHkgaGF2ZSBhbnkgYmFzaXMgZm9yIHZhbHVlIGNvbXBhcmlzb24gdGhleSBkb250IGtub3cgd2hhdCBtYWtlcyBhIGdvb2QgZG91Z2hudXQgSW4gYWRkaXRpb24gRXVyb3BlYW5zIG1heSBmZWVsIGF0dGFjaG1lbnQgdG8gdGhlaXIgb3duIGxvY2FsIGRlbGljYWNpZXMgSW4gQmVsZ2l1bSB0aGUgQnJ1c3NlbHMgd2FmZmxlIGlzIGxpZ2h0IGFuZCBmbHVmZnkgYW5kIGR1c3RlZCB3aXRoIHBvd2RlcmVkIHN1Z2FyIHdoaWxlIGluIExpZWdlIHRoZXlyZSBoZWF2aWVyIGFuZCBzd2VldGVyIHdpdGggY2FyYW1lbGl6ZWQgc3VnYXIgVGhlIEJlbGdpYW4gV2FmZmxlIHRvcHBlZCB3aXRoIHBvd2RlcmVkIHN1Z2FyIHN0cmF3YmVycmllcyBhbmQgYSBmbG91cmlzaCBvZiB3aGlwcGVkIGNyZWFtIGlzIHByb2JhYmx5IGFuIEFtZXJpY2FuIGludmVudGlvbiBJdHMgcG9wdWxhciBpbiBTY2FuZGluYXZpYSBJbiBBdXN0cmlhIHBlb3BsZSB3aXRoIGEgc3dlZXQgdG9vdGggdHVybiB0byBBcGZlbHN0cnVkZWwgIG9yIERhbmlzaGVzIEluIERlbm1hcmsgdGhleSBhbHNvIGVhdCBEYW5pc2hlcyBvZiBjb3Vyc2UgQnV0IHRoZSBEYW5lcyBpbiB0dXJuIGNhbGwgdGhlbSB3aWVuZXJicm9kIG9yIFZpZW5uZXNlIGJyZWFkIHNpbmNlIGFzIGxvcmUgaGFzIGl0IHRoZSB0cmVhdCB3YXMgaW50cm9kdWNlZCBieSBBdXN0cmlhbiBiYWtlcnMgb25jZSB1cG9uIGEgdGltZSBDaW5uYW1vbiBpcyBhIGZhdm9yaXRlIGZsYXZvciBWaXRhcm8gc2FpZCBEdW5raW4gRG9udXRzIGlzIGFscmVhZHkgaW50ZXJ2aWV3aW5nIHdvdWxkYmUgZnJhbmNoaXNlIG93bmVycyBhbmQgcGxhbnMgdG8gb3BlbiBzZXZlcmFsIHN0b3JlcyBpbiBlYWNoIG5ldyBtYXJrZXQgYnkgdGhlIGVuZCBvZiAyMDE0IGZvY3VzaW5nIG9uIG1ham9yIGNpdGllcyBmaXJzdCB3aXRoIG1hbnkgbW9yZSBjb21pbmcgaW4gZWFybHkgMjAxNSBXZSBiZWxpZXZlIG91ciBiYXNpYyBvZmZlciBvZiBzcGVlZCBhbmQgdmFsdWUgYW5kIGZ1biB3aWxsIGNvbm5lY3Qgd2VsbCB3aXRoIGNvbnN1bWVycyBoZSBzYWlkIEl0IGhhcyBzbyBmYXJ0AARyb3dzdXEAfgAKAAAAAXQAATV0AAVzdGFydHVxAH4ACgAAAAF0AAEwdAACZmx1cQB+AAoAAAABdABvYXJ0aWNsZUlkLHRpdGxlLGNvbnRlbnQsZGF0ZSxzdG9ja0hpc3RvcnlJZCxzeW1ib2wsaGlzdG9yeURhdGUsb3BlbixoaWdoLGxvdyxjbG9zZSxhZGpDbG9zZSx2b2x1bWUsaWQsX3ZlcnNpb25fdAACZnF1cQB+AAoAAAABdAA6aGlzdG9yeURhdGU6WzIwMTMtMDMtMjdUMDA6MDA6MDBaIFRPIDIwMTMtMTItMDNUNTk6NTk6NTlaXXgAcA==</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTE3MDg3</field><field name="title" class="java.lang.String">rO0ABXQALU1jRG9uYWxkJ3MgRXllcyBCaWdnZXIgU2hhcmUgb2YgQ29mZmVlIE1hcmtldA==</field><field name="content" class="java.lang.String">rO0ABXQMl01jRG9uYWxkJ3Mgd2FudHMgdG8gYmUgYSBiaWdnZXIgcGxheWVyIGluIHRoZSBnbG9iYWwgY29mZmVlIGJ1c2luZXNzLiBUaGUgd29ybGQncyBiaWdnZXN0IGhhbWJ1cmdlciBjaGFpbiBvbiBUaHVyc2RheSBoaWdobGlnaHRlZCBiZXZlcmFnZXMgYXMgb25lIG9mIGl0cyBrZXkgZ3Jvd3RoIG9wcG9ydHVuaXRpZXMgYXQgYSBkYXlsb25nIHByZXNlbnRhdGlvbiBmb3IgaW52ZXN0b3JzLiBNY0RvbmFsZCdzIENFTyBEb24gVGhvbXBzb24gbm90ZWQgdGhhdCBjb2ZmZWUgaXMgb25lIG9mIHRoZSBmYXN0ZXN0IGdyb3dpbmcgY2F0ZWdvcmllcyBpbiBpdHMgZ2xvYmFsIGRyaW5rcyBidXNpbmVzcyBhbmQgc2FpZCB0aGF0IHRoZSBjb21wYW55IGhhcyBsZXNzIHRoYW4gaXRzICJmYWlyIHNoYXJlIiBvZiB0aGUgbWFya2V0LiBXaGVuIGFza2VkIHRvIGlkZW50aWZ5IGNvbXBldGl0b3JzIGluIHRoZSBzcGFjZSwgVGhvbXBzb24gY2hvc2UgdG8ga2VlcCB0aGUgZGlzY3Vzc2lvbiBicm9hZC4gIkFueW9uZSB0aGF0IHN0b3BzIG9mZiB0byBnZXQgYSBjdXAgb2YgY29mZmVlIGFueXdoZXJlLCB0aGF0J3MgYW4gb3Bwb3J0dW5pdHksIiBUaG9tcHNvbiBzYWlkLiBUaGUgcHVzaCBjb21lcyBhcyBTdGFyYnVja3MgQ29ycC4gaXMgZW5qb3lpbmcgc3Ryb25nIHNhbGVzIGdyb3d0aCBldmVuIGluIHRoZSBjaG9wcHkgZWNvbm9teS4gSW4gdGhlIGxhdGVzdCBxdWFydGVyLCB0aGUgU2VhdHRsZS1iYXNlZCBjaGFpbiBzYWlkIGdsb2JhbCBzYWxlcyByb3NlIDcgcGVyY2VudCBhdCBsb2NhdGlvbnMgb3BlbiBhdCBsZWFzdCBhIHllYXIuIEF0IE1jRG9uYWxkJ3MsIHRoZSBmaWd1cmUgZWRnZWQgdXAgMC45IHBlcmNlbnQuIEFzIGZvciB0aGUgY29mZmVlIHNlcnZpbmdzIHNvbGQgaW4gdGhlIFUuUy4gcmVzdGF1cmFudCBpbmR1c3RyeSwgTWNEb25hbGQncyBjdXJyZW50bHkgaGFzIGxlc3MgdGhhbiAxMyBwZXJjZW50IG9mIHRoZSBtYXJrZXQsIHNhaWQgS2V2aW4gTmV3ZWxsLCB0aGUgY29tcGFueSdzIGNoaWVmIGJyYW5kIGFuZCBzdHJhdGVneSBvZmZpY2VyIGZvciB0aGUgcmVnaW9uLiBTdGlsbCwgaGUgbm90ZWQgTWNEb25hbGQncyBoYXMgc2VlbiBpdHMgY29mZmVlIHNhbGVzIHN1cmdlIDcwIHBlcmNlbnQgc2luY2UgdGhlIGludHJvZHVjdGlvbiBvZiBNY0NhZmUgc3BlY2lhbHR5IGNvZmZlZXMgaW4gMjAwOS4gQSBiaWcgcGFydCBvZiB0aGUgYXR0cmFjdGlvbiBvZiBNY0RvbmFsZCdzIGNvZmZlZSBpcyB2YWx1ZTsgbWFueSBsb2NhdGlvbnMgaW4gdGhlIFUuUy4gb2ZmZXIgYSByZWd1bGFyIGRyaXAgY29mZmVlIG9mIGFueSBzaXplIGZvciAkMS4gQnV0IE1jRG9uYWxkJ3Mgd2FudHMgdG8gZ2V0IHBlb3BsZSB0byBidXkgcHJpY2llciBkcmlua3MsIHRvby4gVGhpcyBmYWxsLCB0aGUgY29tcGFueSBpbnRyb2R1Y2VkIGEgcHVtcGtpbiBzcGljZSBsYXR0ZSBmb2xsb3dpbmcgdGhlIHBvcHVsYXJpdHkgb2Ygc2ltaWxhciBkcmlua3MgYXQgU3RhcmJ1Y2tzIGFuZCBEdW5raW4nIERvbnV0cy4gQW5kIG5leHQgd2VlaywgTWNEb25hbGQncyBwbGFucyB0byBsYXVuY2ggYSB3aGl0ZSBjaG9jb2xhdGUgbW9jaGEgZmxhdm9yZWQgbGF0dGUuIFRoZSBjb21wYW55LCBiYXNlZCBpbiBPYWsgQnJvb2ssIElsbC4sIGFsc28gcmVjZW50bHkgc2FpZCBpdCdzIHBhcnRuZXJpbmcgd2l0aCBLcmFmdCBGb29kcyBHcm91cCBJbmMuIHRvIHNlbGwgTWNDYWZlIGJhZ2dlZCBjb2ZmZWUgYXQgc3VwZXJtYXJrZXRzIGluIHRlc3QgbWFya2V0cy4gVGhlIGNvbXBhbnkgaXMgaG9waW5nIHRoZSBtb3ZlIHdpbGwgaGVscCBidWlsZCBhd2FyZW5lc3Mgb2YgdGhlIE1DYWZlIGJyYW5kLiAiSXQncyBhYm91dCBzZWxsaW5nIG1vcmUgY29mZmVlIGluIHJlc3RhdXJhbnRzLCIgTmV3ZWxsIHNhaWQgb2YgdGhlIEtyYWZ0IHBhcnRuZXJzaGlwLiBJdCdzIG5vdCBjbGVhciB3aGF0IGltcGFjdCB0aGUgcHVzaCBieSBNY0RvbmFsZCdzIHdpbGwgaGF2ZSBvbiBTdGFyYnVja3MuIFJpY2hhcmQgQWRhbXMsIHdobyBydW5zIGEgY29uc3VsdGluZyBmaXJtIGZvciBNY0RvbmFsZCdzIGZyYW5jaGlzZWVzLCBub3RlcyB0aGF0IHRoZSBjaGFpbiBzZWxscyBwbGVudHkgb2YgZHJpcCBjb2ZmZWUgYW5kIGJsZW5kZWQgaWNlIGZyYXBwZXMgaW4gdGhlIHN1bW1lciBidXQgaGFzIHN0cnVnZ2xlZCB0byBzZWxsIGVzcHJlc3NvLWJhc2VkIGJldmVyYWdlcyBzdWNoIGFzIGxhdHRlcy4gSW4gdGhlIG1lYW50aW1lLCBEdW5raW4nIERvbnV0cyBhbmQgU3RhcmJ1Y2tzIGFyZSB0cnlpbmcgdG8gYm9vc3QgZm9vZCBzYWxlcyBhbmQgYXR0cmFjdCBtb3JlIGN1c3RvbWVycyBpbiB0aGUgYWZ0ZXJub29uIGFuZCBldmVuaW5nIGhvdXJzLiBTdGFyYnVja3MgcmVjZW50bHkgcmV2YW1wZWQgaXRzIHNhbmR3aWNoZXMgYW5kIGludHJvZHVjZWQgbmV3IHNhbGFkcyBhbmQgYmFrZWQgZ29vZHMgdG8gYmVjb21lIG1vcmUgb2YgYSBsdW5jaCBkZXN0aW5hdGlvbi4gQWJvdXQgYSB0aGlyZCBvZiBwdXJjaGFzZXMgaW4gdGhlIFUuUy4gaW5jbHVkZSBmb29kIGFuZCBTdGFyYnVja3MgaXMgbG9va2luZyB0byBwdXNoIHRoYXQgZmlndXJlIHVwLiBCdXQgU3RhcmJ1Y2tzIENFTyBIb3dhcmQgU2NodWx0eiBkb2Vzbid0IGxpa2UgY29tcGFyaXNvbnMgdG8gY2hhaW5zIHN1Y2ggYXMgTWNEb25hbGQncyBhbmQgRHVua2luJyBEb251dHMuICJUaGV5J3JlIGluIGFub3RoZXIgYnVzaW5lc3Mg4oCUIHRoZXkncmUgZmFzdC1mb29kLCIgU2NodWx0eiBzYWlkIGluIGFuIGludGVydmlldyBvbiBDTkJDIGVhcmxpZXIgdGhpcyB5ZWFyLiBPdmVyc2VhcywgTWNEb25hbGQncyBhbHNvIGhhcyBhYm91dCA0LDIwMCBzZXBhcmF0ZSBNY0NhZmVzIHRoYXQgYXJlIGVpdGhlciBzZWN0aW9uZWQgb2ZmIGZyb20gdGhlIG1haW4gcmVzdGF1cmFudCBvciBzdGFuZC1hbG9uZSBsb2NhdGlvbnMuIE1jRG9uYWxkJ3Mgc2F5cyBpdCBwbGFucyB0byBhZGQgYW5vdGhlciAzNTAgdG8gNDAwIHN1Y2ggTWNDYWZlIGxvY2F0aW9ucyBuZXh0IHllYXIuIFN0aWxsLCBUaG9tcHNvbiBzdHJlc3NlZCB0aGF0IE1jRG9uYWxkJ3MgcmVtYWluZWQgaW4gdGhlIHJlc3RhdXJhbnQgYnVzaW5lc3MuICJXZSdyZSBub3QgdHJ5aW5nIHRvIGJlIHNvbWV0aGluZyB3ZSdyZSBub3QsIiBoZSBzYWlkLiBfX18gRm9sbG93IENhbmRpY2UgQ2hvaSBhdCB3d3cudHdpdHRlci5jb20vY2FuZGljZWNob2k=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJVMdsAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDFlMzZlOTEzZDdhYmU1NGQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABE1TQ0E=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJaWDcAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3/XCj1wo9</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3/XCj1wo9</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA31HrhR64U</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA3/XCj1wo9</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA2MzMzMzMz</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAApBA==</field><field name="id" class="java.lang.String">rO0ABXQAEGQ1N2M5OGZjOTE0NmI5ZmI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHKWAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIxMTA5</field><field name="title" class="java.lang.String">rO0ABXQALkhvc3Rlc3M6IFR3aW5raWVzIHRvIFJldHVybiB0byBTaGVsdmVzIEp1bHkgMTU=</field><field name="content" class="java.lang.String">rO0ABXQTG0hvc3Rlc3MgaXMgYmV0dGluZyBvbiBhIHN3ZWV0IGNvbWViYWNrIGZvciBUd2lua2llcyB3aGVuIHRoZXkgcmV0dXJuIHRvIHNoZWx2ZXMgbmV4dCBtb250aC4gVGhlIGNvbXBhbnkgdGhhdCB3ZW50IGJhbmtydXB0IGFmdGVyIGFuIGFjcmltb25pb3VzIGZpZ2h0IHdpdGggaXRzIHVuaW9uaXplZCB3b3JrZXJzIGxhc3QgeWVhciBpcyBiYWNrIHVwIGFuZCBydW5uaW5nIHVuZGVyIG5ldyBvd25lcnMgYW5kIGEgbGVhbmVyIHN0cnVjdHVyZS4gSXQgc2F5cyBpdCBwbGFucyB0byBoYXZlIFR3aW5raWVzIGFuZCBvdGhlciBzbmFjayBjYWtlcyBiYWNrIG9uIHNoZWx2ZXMgc3RhcnRpbmcgSnVseSAxNS4gQmFzZWQgb24gdGhlIG91dHBvdXJpbmcgb2Ygbm9zdGFsZ2lhIHNwYXJrZWQgYnkgaXRzIGRlbWlzZSwgSG9zdGVzcyBpcyBleHBlY3RpbmcgYSBibG9ja2J1c3RlciByZXR1cm4gbmV4dCBtb250aCBmb3IgVHdpbmtpZXMgYW5kIG90aGVyIHN1Z2FyeSB0cmVhdHMsIHN1Y2ggYXMgQ3VwQ2FrZXMgYW5kIERvbmV0dGVzLiBUaGUgY29tcGFueSBzYXlzIHRoZSBjYWtlcyB3aWxsIHRhc3RlIHRoZSBzYW1lIGJ1dCB0aGF0IHRoZSBib3hlcyB3aWxsIG5vdyBiYXJlIHRoZSB0YWcgbGluZSAiVGhlIFN3ZWV0ZXN0IENvbWViYWNrIEluIFRoZSBIaXN0b3J5IE9mIEV2ZXIuIiAiQSBsb3Qgb2YgaW1wb3N0b3IgcHJvZHVjdHMgaGF2ZSBjb21lIHRvIHRoZSBtYXJrZXQgd2hpbGUgSG9zdGVzcyBoYXMgYmVlbiBvZmYgdGhlIHNoZWx2ZXMsIiBzYXlzIERhcmVuIE1ldHJvcG91bG9zLCBhIHByaW5jaXBhbCBvZiB0aGUgaW52ZXN0bWVudCBmaXJtIE1ldHJvcG91bG9zICYgQ28uLCB3aGljaCB0ZWFtZWQgdXAgd2l0aCBBcG9sbG8gR2xvYmFsIE1hbmFnZW1lbnQgdG8gYnV5IGEgdmFyaWV0eSBvZiBIb3N0ZXNzIHNuYWNrcy4gSG9zdGVzcyBCcmFuZHMgSW5jLiB3YXMgc3RydWdnbGluZyBmb3IgeWVhcnMgYmVmb3JlIGl0IGZpbGVkIGZvciBDaGFwdGVyIDExIGJhbmtydXB0Y3kgcmVvcmdhbml6YXRpb24gaW4gZWFybHkgMjAxMi4gV29ya2VycyBibGFtZWQgdGhlIHRyb3VibGVzIG9uIHllYXJzIG9mIG1pc21hbmFnZW1lbnQsIGFzIHdlbGwgYXMgYSBmYWlsdXJlIG9mIGV4ZWN1dGl2ZXMgdG8gaW52ZXN0IGluIGJyYW5kcyB0byBrZWVwIHVwIHdpdGggY2hhbmdpbmcgdGFzdGVzLiBUaGUgY29tcGFueSBzYWlkIGl0IHdhcyB3ZWlnaGVkIGRvd24gYnkgaGlnaGVyIHBlbnNpb24gYW5kIG1lZGljYWwgY29zdHMgdGhhbiBpdHMgY29tcGV0aXRvcnMsIHdob3NlIGVtcGxveWVlcyB3ZXJlbid0IHVuaW9uaXplZC4gVG8gc3RlZXIgaXQgdGhyb3VnaCBpdHMgYmFua3J1cHRjeSByZW9yZ2FuaXphdGlvbiwgSG9zdGVzcyBoaXJlZCByZXN0cnVjdHVyaW5nIGV4cGVydCBHcmVnIFJheWJ1cm4gYXMgaXRzIENFTy4gQnV0IFJheWJ1cm4gdWx0aW1hdGVseSBmYWlsZWQgdG8gcmVhY2ggYSBjb250cmFjdCBhZ3JlZW1lbnQgd2l0aCBpdHMgc2Vjb25kIGxhcmdlc3QgdW5pb24uIEluIE5vdmVtYmVyLCBoZSBibGFtZWQgc3RyaWtpbmcgd29ya2VycyBmb3IgY3JpcHBsaW5nIHRoZSBjb21wYW55J3MgYWJpbGl0eSB0byBtYWludGFpbiBub3JtYWwgcHJvZHVjdGlvbiBhbmQgYW5ub3VuY2VkIHRoYXQgSG9zdGVzcyB3b3VsZCBsaXF1aWRhdGUuIFRoZSBzaHV0dGVyaW5nIHRyaWdnZXJlZCBhIHJ1c2ggb24gSG9zdGVzcyBzbmFjayBjYWtlcywgd2l0aCBzdG9yZXMgc2VsbGluZyBvdXQgb2YgdGhlIG1vc3QgcG9wdWxhciBicmFuZHMgd2l0aGluIGhvdXJzLiBBYm91dCAxNSwwMDAgdW5pb25pemVkIHdvcmtlcnMgbG9zdCB0aGVpciBqb2JzIGluIHRoZSBhZnRlcm1hdGguIEluIHVud2luZGluZyBpdHMgYnVzaW5lc3MsIEhvc3Rlc3Mgc29sZCBvZmYgaXRzIGJyYW5kcyBpbiBjaHVua3MgdG8gZGlmZmVyZW50IGJ1eWVycy4gSXRzIG1ham9yIGJyZWFkIGJyYW5kcyBpbmNsdWRpbmcgV29uZGVyIHdlcmUgc29sZCB0byBGbG93ZXJzIEZvb2RzLCB3aGljaCBtYWtlcyBUYXN0eWtha2VzLiBNY0tlZSBGb29kcywgd2hpY2ggbWFrZXMgTGl0dGxlIERlYmJpZSBzbmFjayBjYWtlcywgc25hcHBlZCB1cCBEcmFrZSdzIENha2UsIHdoaWNoIGluY2x1ZGVzIERldmlsIERvZ3MgYW5kIFlvZGVscy4gTWV0cm9wb3Vsb3MgJiBDby4gYW5kIEFwb2xsbyBib3VnaHQgVHdpbmtpZXMgYW5kIG90aGVyIEhvc3Rlc3MgY2FrZXMgZm9yICQ0MTAgbWlsbGlvbi4gQXBvbGxvIEdsb2JhbCBNYW5hZ2VtZW50LCBmb3VuZGVkIGJ5IExlb24gQmxhY2ssIGlzIGtub3duIGZvciBidXlpbmcgdHJvdWJsZWQgYnJhbmRzIHRoZW4gc2VsbGluZyB0aGVtIGZvciBhIHByb2ZpdDsgaXRzIGludmVzdG1lbnRzIGluY2x1ZGUgZmFzdC1mb29kIGNoYWlucyBDYXJsJ3MgSnIuIGFuZCBIYXJkZWUncy4gTWV0cm9wb3Vsb3MgJiBDby4sIHdoaWNoIGhhcyByZXZhbXBlZCB0aGVuIHNvbGQgb2ZmIGJyYW5kcyBpbmNsdWRpbmcgQ2hlZiBCb3lhcmRlZSBhbmQgQnVtYmxlIEJlZSwgYWxzbyBvd25zIFBhYnN0IEJyZXdpbmcgQ28uIFRoYXQgY291bGQgbWVhbiBzb21lIGNyb3NzLXByb21vdGlvbmFsIG1hcmtldGluZyBpcyBpbiBzdG9yZS4gIlRoZXJlIGlzIGNlcnRhaW5seSBhIG5hdHVyYWwgYXNzb2NpYXRpb24gd2l0aCB0aGUgdHdvLCIgTWV0cm9wb3Vsb3Mgc2FpZC4gIlRoZXJlIGNvdWxkIGJlIHNvbWUgb3Bwb3J0dW5pdGllcyBmb3IgdGhlbSB0byBzZWVuIHRvZ2V0aGVyLiIgVGhlIHRyaW1tZWQtZG93biBIb3N0ZXNzIEJyYW5kcyBMTEMgaGFzIGEgZmFyIGxlc3MgY29zdGx5IG9wZXJhdGluZyBzdHJ1Y3R1cmUgdGhhbiB0aGUgcHJlZGVjZXNzb3IgY29tcGFueS4gU29tZSBvZiB0aGUgcHJldmlvdXMgd29ya2VycyB3ZXJlIGhpcmVkIGJhY2ssIGJ1dCB0aGV5J3JlIG5vIGxvbmdlciB1bmlvbml6ZWQuIEhvc3Rlc3Mgd2lsbCBhbHNvIG5vdyBkZWxpdmVyIHRvIHdhcmVob3VzZXMgdGhhdCBzdXBwbHkgcmV0YWlsZXJzLCByYXRoZXIgdGhhbiBkZWxpdmVyaW5nIGRpcmVjdGx5IHRvIHN0b3Jlcywgc2FpZCBSaWNoIFNlYmFuLCB0aGUgcHJlc2lkZW50IG9mIEhvc3Rlc3Mgd2hvIHByZXZpb3VzbHkgc2VydmVkIGFzIGNoaWVmIG9wZXJhdGluZyBvZmZpY2VyLiBUaGF0IHdpbGwgZ3JlYXRseSBleHBhbmQgaXRzIHJlYWNoLCBsZXR0aW5nIGl0IGRlbGl2ZXIgdG8gZG9sbGFyIHN0b3JlcyBhbmQgbmVhcmx5IGFsbCBjb252ZW5pZW5jZSBzdG9yZXMgaW4gdGhlIFUuUy4gUHJldmlvdXNseSwgaGUgc2FpZCBIb3N0ZXNzIHdhcyBvbmx5IGFibGUgdG8gcmVhY2ggYWJvdXQgYSB0aGlyZCBvZiB0aGUgY291bnRyeSdzIDE1MCwwMDAgY29udmVuaWVuY2Ugc3RvcmVzLiBQcm9kdWN0aW9uIHdhcyBhbHNvIGNvbnNvbGlkYXRlZCwgZnJvbSAxMSBiYWtlcnkgcGxhbnRzIHRvIGZvdXIg4oCUIG9uZSBlYWNoIGluIEdlb3JnaWEsIEthbnNhcywgSWxsaW5vaXMgYW5kIEluZGlhbmEuIFRoZSBoZWFkcXVhcnRlcnMgd2VyZSBtb3ZlZCBmcm9tIFRleGFzIHRvIEthbnNhcyBDaXR5LCBNby4sIHdoZXJlIEhvc3Rlc3Mgd2FzIHByZXZpb3VzbHkgYmFzZWQgYW5kIHN0aWxsIGhhZCBzb21lIGFjY291bnRpbmcgb2ZmaWNlcy4gSW4gdGhlIG1vbnRocyBzaW5jZSB0aGV5IHZhbmlzaGVkIGZyb20gc2hlbHZlcywgdGhlIGNha2VzIGhhdmUgYmVlbiBnZXR0aW5nIGEgZmV3IHRvdWNodXBzIGFzIHdlbGwuIEZvciB0aGUgQ3VwQ2FrZXMsIHRoZSBjb21wYW55IGlzIG5vdyB1c2luZyBkYXJrIGNvY29hIGluc3RlYWQgb2YgbWlsayBjaG9jb2xhdGUgdG8gZ2l2ZSB0aGVtIGEgcmljaGVyLCBkYXJrZXIgYXBwZWFyYW5jZS4gU2ViYW4gc3RyZXNzZWQgdGhhdCB0aGUgY2hhbmdlcyB3ZXJlIHRvIGltcHJvdmUgdGhlIGNha2VzLCBub3QgdG8gY3V0IGNvc3RzLiBQcmljZXMgZm9yIHRoZSBjYWtlcyB3aWxsIHJlbWFpbiB0aGUgc2FtZTsgYSBib3ggb2YgMTAgVHdpbmtpZXMgd2lsbCBjb3N0ICQzLjk5LiBMb29raW5nIGFoZWFkLCBTZWJhbiBzZWVzIEhvc3Rlc3MgZXhwYW5kaW5nIGl0cyBwcm9kdWN0IGxpbmV1cC4gSGUgbm90ZWQgdGhhdCBIb3N0ZXNzIGNha2VzIGFyZSBrbm93biBmb3IgdGhyZWUgYmFzaWMgdGV4dHVyZXM6IHRoZSBzcG9uZ3kgY2FrZSwgdGhlIGNyZWFteSBmaWxsaW5nIGFuZCB0aGUgdGhpY2tlciBpY2luZy4gQnV0IGhlIHNhaWQgZGlmZmVyZW50IHRleHR1cmVzIOKAlCBzdWNoIGFzIGNydW5jaHkg4oCUIGNvdWxkIGJlIGludHJvZHVjZWQsIGFzIHdlbGwgYXMgZGlmZmVyZW50IGZsYXZvcnMuICJXZSBjYW4gaGF2ZSBzb21lIGZ1biB3aXRoIHRoYXQgbWl4dHVyZSwiIGhlIHNhaWQuIEhlIGFsc28gc2FpZCB0aGVyZSBhcmUgbWFueSB0cmVuZHkgaGVhbHRoIGF0dHJpYnV0ZXMgdGhlIGNvbXBhbnkgY291bGQgdGFwIGludG8sIHN1Y2ggYXMgZ2x1dGVuLWZyZWUsIGFkZGVkIGZpYmVyLCBsb3cgc3VnYXIgYW5kIGxvdyBzb2RpdW0uIER1cmluZyBiYW5rcnVwdGN5IHByb2NlZWRpbmdzLCBIb3N0ZXNzIGhhZCBzYWlkIHRoYXQgaXRzIG92ZXJhbGwgc2FsZXMgaGFkIGJlZW4gZGVjbGluaW5nLCBhbHRob3VnaCB0aGUgY29tcGFueSBkaWRuJ3QgZ2l2ZSBhIGJyZWFrb3V0IG9uIHRoZSBwZXJmb3JtYW5jZSBvZiBpbmRpdmlkdWFsIGJyYW5kcy4gQnV0IFNlYmFuIGlzIGNvbmZpZGVudCBUd2lua2llcyB3aWxsIGhhdmUgc3RheWluZyBwb3dlciBiZXlvbmQgaXRzIHJlLWxhdW5jaC4gQXMgZm9yIHRoZSBsaXRlcmFsIHNoZWxmLWxpZmUsIFNlYmFuIGlzIHF1aWNrIHRvIHJlZnV0ZSB0aGUgc25hY2sgY2FrZSdzIGZhYmxlZCBpbmRlc3RydWN0aWJpbGl0eS4gIkZvcnR5LWZpdmUgZGF5cyDigJQgdGhhdCdzIGl0LCIgaGUgc2FpZC4gIlRoZXkgZG9uJ3QgbGFzdCBmb3JldmVyLiI=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT9vZyyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDNiODlmODYyM2RjOWE1ZDI=</field><field name="symbol" class="java.lang.String">rO0ABXQABENIRUY=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT90jYiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwz1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxOuFHrhR7</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwSj1wo9cK</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAw3Cj1wo9c</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAw3Cj1wo9c</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAACRUA==</field><field name="id" class="java.lang.String">rO0ABXQAEDViMzczODg1Zjc0NzI4ZjE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMLjAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDMyMjQ=</field><field name="title" class="java.lang.String">rO0ABXQANlRheCBMYXcgRnVlbHMsIFRoZW4gS2lsbHMsIGEgRGlzY291bnQtVG9iYWNjbyBJbmR1c3RyeQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEBFzSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGUzOTY1NDdiNTJkZmZkYWE=</field><field name="symbol" class="java.lang.String">rO0ABXQABFJPTEw=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEGPZCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOOZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOtwo9cKPX</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOOZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOp64UeuFI</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBNrMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAC6VA==</field><field name="id" class="java.lang.String">rO0ABXQAEDdkMmZmMzdiYmUxMThlMzc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKMBAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE0MjU3</field><field name="title" class="java.lang.String">rO0ABXQAN1dhbC1NYXJ0IEN1c3RvbWVycyBDb21wbGFpbiBCYXJlIFNoZWx2ZXMgQXJlIFdpZGVzcHJlYWQ=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT3JHbSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDMyOTE0ZGRlNjg4ZWE4MjM=</field><field name="symbol" class="java.lang.String">rO0ABXQAA1dBTA==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT3ORBCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArZmZmZmZm</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArmZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAqvXCj1wo9</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAq64UeuFHs</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAq64UeuFHs</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAxjfA==</field><field name="id" class="java.lang.String">rO0ABXQAEDYwNDg5Zjg0MGQyOWNhM2M=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMlaAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwMjE=</field><field name="title" class="java.lang.String">rO0ABXQAP0dvbGQgTWFraW5nIFBlb3BsZSBDcmF6eSBpbiBQZXJpbG91cyBTZWFyY2ggZm9yIFN1bmtlbiBUcmVhc3VyZQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJVMdsAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI1YTgyYjNiNDFlNjliZjc=</field><field name="symbol" class="java.lang.String">rO0ABXQABFdPT0Q=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJaWDcAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJeFHrhR64</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJeFHrhR64</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJQ9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJYAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBIzMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAnEA==</field><field name="id" class="java.lang.String">rO0ABXQAEGJhZTdmMDc3OWE4ZmI3MjE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mIU4AAAA==</field></document></documents><date>2015-05-07T12:12:37-0500</date></cacheEntry>
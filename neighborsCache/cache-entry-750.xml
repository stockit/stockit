<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0EwZVUyBzdG9ja3MgcGFyZWQgZ2FpbnMgYXMgaW52ZXN0b3JzIGRpc3NlY3RlZCB0aGUgRmVkZXJhbCBSZXNlcnZlcyBwbGVkZ2UgdG8ga2VlcCBib3Jyb3dpbmcgY29zdHMgbG93IGZvciBhIGNvbnNpZGVyYWJsZSB0aW1lIGV2ZW4gYXMgcG9saWN5IG1ha2VycyBwcmVkaWN0ZWQgZmFzdGVyIHJhdGUgaW5jcmVhc2VzIG5leHQgeWVhciBGaW5hbmNpYWwgY29tbW9kaXR5IGFuZCBpbmR1c3RyaWFsIHNoYXJlcyBsZWQgZ2FpbnMgaW4gc2V2ZW4gb2YgdGhlIDEwIG1haW4gaW5kdXN0cnkgZ3JvdXBzIGluIHRoZSBTdGFuZGFyZCAgUG9vcnMgNTAwIEluZGV4IEZlZEV4IENvcnAgYW5kIExlbm5hciBDb3JwIHJhbGxpZWQgbW9yZSB0aGFuIDMgcGVyY2VudCBhZnRlciBwb3N0aW5nIGVhcm5pbmdzIHRoYXQgdG9wcGVkIGFuYWx5c3RzIGVzdGltYXRlcyBBdXhpbGl1bSBQaGFybWFjZXV0aWNhbHMgSW5jIGp1bXBlZCA0NiBwZXJjZW50IHRoZSBtb3N0IGV2ZXIgYWZ0ZXIgZ2V0dGluZyBhIHRha2VvdmVyIGJpZCBUaGUgU1AgNTAwIGluY3JlYXNlZCAwMiBwZXJjZW50IDIwMDIwNyBhdCAzNTIgcG0gaW4gTmV3IFlvcmsgYWZ0ZXIgcmlzaW5nIGFzIG11Y2ggYXMgMDYgcGVyY2VudCBmb2xsb3dpbmcgdGhlIHJlbGVhc2Ugb2YgdGhlIEZlZHMgc3RhdGVtZW50IGF0IDIgcG0gVHJhZGluZyBvZiBTUCA1MDAgc3RvY2tzIHdhcyAyMSBwZXJjZW50IGhpZ2hlciB0aGFuIHRoZSAzMGRheSBhdmVyYWdlIGF0IHRoaXMgdGltZSBvZiBkYXkgVGhlIERvdyBKb25lcyBJbmR1c3RyaWFsIEF2ZXJhZ2UgaW5jcmVhc2VkIDI2NzggcG9pbnRzIHRvIGEgcmVjb3JkIDE3MTU4NzUgYWZ0ZXIganVtcGluZyBhcyBtdWNoIGFzIDg5IHBvaW50cyBGZWQgQ2hhaXIgSmFuZXQgWWVsbGVuIG1heSBiZSBhIGhhd2sgaW4gZG92ZXMgY2xvdGhpbmcgYmVjYXVzZSBzaGUga2VlcHMgcmVpdGVyYXRpbmcgdGhhdCBlY29ub21pYyBkYXRhIGNhbiBjaGFuZ2UgdGhlIHBhY2Ugb2YgcmF0ZSBoaWtlcyBhbmQgdGhlIHBhdGggdG8gbm9ybWFsaXphdGlvbiBLYXJ5biBDYXZhbmF1Z2ggdGhlIE5ldyBZb3JrYmFzZWQgc2VuaW9yIG1hcmtldCBzdHJhdGVnaXN0IGF0IFZveWEgSW52ZXN0bWVudCBNYW5hZ2VtZW50IExMQyBzYWlkIFRoZSBlY29ub215IGlzIGdhaW5pbmcgc3RlYW0gSSB0aGluayB3ZSBjb3VsZCBzZWUgc29tZSBpbmNyZWFzZSBpbiByYXRlcyBieSBNYXJjaCBvciBzb29uZXIgU3RvY2tzIGV4dGVuZGVkIGdhaW5zIGFzIHRoZSBGZWQgc2FpZCB0aGUgZWNvbm9teSBpcyBleHBhbmRpbmcgYXQgYSBtb2RlcmF0ZSBwYWNlIGFuZCBpbmZsYXRpb24gaXMgYmVsb3cgaXRzIGdvYWwgd2hpbGUgbWFpbnRhaW5pbmcgYSBjb21taXRtZW50IHRvIGtlZXAgaW50ZXJlc3QgcmF0ZXMgbmVhciB6ZXJvIGZvciBhIGNvbnNpZGVyYWJsZSB0aW1lIGFmdGVyIGFzc2V0IHB1cmNoYXNlcyBhcmUgY29tcGxldGVkIEZlZCBvZmZpY2lhbHMgcmFpc2VkIHRoZWlyIG1lZGlhbiBlc3RpbWF0ZSBmb3IgdGhlIGZlZGVyYWwgZnVuZHMgcmF0ZSBhdCB0aGUgZW5kIG9mIDIwMTUgdG8gMTM3NSBwZXJjZW50IGNvbXBhcmVkIHdpdGggMTEyNSBwZXJjZW50IGluIEp1bmUgVGhlIHJhdGUgd2lsbCBiZSAzNzUgcGVyY2VudCBhdCB0aGUgZW5kIG9mIDIwMTcgdGhlIEZlZCBzYWlkIGluIGl0cyBTdW1tYXJ5IG9mIEVjb25vbWljIFByb2plY3Rpb25zIFRoZSBDaGljYWdvIEJvYXJkIE9wdGlvbnMgRXhjaGFuZ2UgVm9sYXRpbGl0eSBJbmRleCB0aGUgYmVuY2htYXJrIGdhdWdlIG9mIG9wdGlvbnMgcHJpY2VzIGtub3duIGFzIHRoZSBWSVggbG9zdCAzMSBwZXJjZW50IHRvIDEyMzMgYWZ0ZXIgZWFybGllciBnYWluaW5nIGFzIG11Y2ggYXMgMTQgcGVyY2VudCBDaGluYSBMZW5kaW5nIFRoZSBTUCA1MDAgcmFsbGllZCAwOCBwZXJjZW50IHllc3RlcmRheSBsZWQgYnkgZW5lcmd5IHN0b2NrcyBhZnRlciBDaGluYXMgY2VudHJhbCBiYW5rIHJlcG9ydGVkbHkgc3RhcnRlZCBwcm92aWRpbmcgYWJvdXQgODEgYmlsbGlvbiBpbiBsb2FucyB0byBpdHMgYmlnZ2VzdCBiYW5rcyBEYXRhIHRvZGF5IHNob3dlZCB0aGUgY29zdCBvZiBsaXZpbmcgaW4gdGhlIFVTIHVuZXhwZWN0ZWRseSBkcm9wcGVkIGluIEF1Z3VzdCBmb3IgdGhlIGZpcnN0IHRpbWUgaW4gbW9yZSB0aGFuIGEgeWVhciBzaG93aW5nIGluZmxhdGlvbiBzdGlsbCBpcyBmYWxsaW5nIHNob3J0IG9mIHRoZSBGZWRzIGdvYWwgVGhlIGNlbnRyYWwgYmFuayBpcyBzY3J1dGluaXppbmcgZGF0YSBvbiBsYWJvciBhbmQgcHJpY2VzIHRvIGdhdWdlIHdoZXRoZXIgdGhlIGVjb25vbWljIHJlY292ZXJ5IGlzIHN0cm9uZyBlbm91Z2ggdG8gd2l0aHN0YW5kIGhpZ2hlciBib3Jyb3dpbmcgcmF0ZXMgVGhlIFNQIDUwMCB3aWxsIGFkdmFuY2UgdG8gMjA1MCBieSB0aGUgZW5kIG9mIHRoZSB5ZWFyIGFjY29yZGluZyB0byBDcmVkaXQgU3Vpc3NlIEdyb3VwIEFHIGVxdWl0eSByZXNlYXJjaCBhbmFseXN0cyB3aG8gcmFpc2VkIHRoZWlyIGVzdGltYXRlIGZyb20gYW4gZWFybGllciBwcm9qZWN0aW9uIG9mIDIwMjAgRXF1aXRpZXMgYXJlIGFibm9ybWFsbHkgY2hlYXAgY29tcGFyZWQgd2l0aCBvdGhlciBhc3NldCBjbGFzc2VzIHRoZSBDcmVkaXQgU3Vpc3NlIHRlYW0gc2FpZCBTdG9ja3Mgd2lsbCBjb250aW51ZSB0byBjbGltYiB0aHJvdWdoIG1pZDIwMTUgYWNjb3JkaW5nIHRvIHRoZSByZXBvcnQgYmVmb3JlIGEgc2Vjb25kaGFsZiBjb3JyZWN0aW9uIGluIDIwMTUgYXMgdGhlIEZlZCByYWlzZXMgaW50ZXJlc3QgcmF0ZXMgTWFya2V0IE1vdmVycyBGZWRFeCBhZGRlZCAzMyBwZXJjZW50IHRvIDE1OTgzIFRoZSBjb21wYW55cyBmaXJzdCBxdWFydGVyIGVhcm5pbmdzIGluY3JlYXNlZCAyNCBwZXJjZW50IGhlbHBlZCBieSB0aGUgY29tcGxldGlvbiBvZiBhIHJlY29yZCBidXliYWNrIHByb2dyYW0gZ3Jvd3RoIGluIGRvbWVzdGljIGFpciBzaGlwbWVudHMgYW5kIGxvd2VyIHBlbnNpb24gZXhwZW5zZSBMZW5uYXIgQ29ycCBjbGltYmVkIDU3IHBlcmNlbnQgdG8gNDEzNSBUaGUgc2Vjb25kIGJpZ2dlc3QgVVMgaG9tZWJ1aWxkZXIgYnkgbWFya2V0IHZhbHVlIHJlcG9ydGVkIGZpc2NhbCB0aGlyZCBxdWFydGVyIG5ldCBpbmNvbWUgb2YgNzggY2VudHMgYSBzaGFyZSBleGNlZWRpbmcgdGhlIDY3Y2VudCBhdmVyYWdlIG9mIGFuYWx5c3RzIGluIGEgQmxvb21iZXJnIHN1cnZleSBVUyBTdGVlbCBDb3JwIHJvc2UgOTYgcGVyY2VudCB0byBhIHRocmVleWVhciBoaWdoIG9mIDQ1NDAgVGhlIHN0ZWVsbWFrZXIgdGhhdCBoYXMgcmVwb3J0ZWQgZml2ZSB5ZWFycyBvZiBsb3NzZXMgc2FpZCB0aGUgT250YXJpbyBTdXBlcmlvciBDb3VydCBncmFudGVkIHByb3RlY3Rpb24gZm9yIGl0cyBDYW5hZGEgdW5pdCBUaGUgY29tcGFueSBhbHNvIHNhaWQgaXQgY2FuY2VsZWQgODAwIG1pbGxpb24gb2YgY2FwaXRhbCBpbnZlc3RtZW50cyBpbiBwcm9qZWN0cyBpbiBNaW5uZXNvdGEgYW5kIEluZGlhbmEgQXV4aWxpdW0gSnVtcHMgQXV4aWxpdW0gUGhhcm1hY2V1dGljYWxzIGp1bXBlZCA0NiBwZXJjZW50IHRvIDMxMzMgRW5kbyBJbnRlcm5hdGlvbmFsIFBsYyBhIG1ha2VyIG9mIHBhaW4gZHJ1Z3Mgc2FpZCBpdCBiaWQgMjgxMCBhIHNoYXJlIGluIGNhc2ggYW5kIHN0b2NrIGEgMzEgcGVyY2VudCBwcmVtaXVtIHRvIHllc3RlcmRheXMgY2xvc2luZyBwcmljZSBmb3IgdGhlIG1ha2VyIG9mIG1lbnMgaGVhbHRoIG1lZGljaW5lcyBFbmRvIHNhaWQgaXRzIG9mZmVyIGRpZG50IGluY2x1ZGUgYSBkZWFsIGZvciBRTFQgSW5jIHdoaWNoIEF1eGlsaXVtIGFncmVlZCB0byB0YWtlIGNvbnRyb2wgb2YgaW4gSnVuZSBUaGF0IHB1cmNoYXNlIGhhc250IHlldCBjbG9zZWQgQXV4aWxpdW0gdG9kYXkgc2FpZCBpdCBoYXMgYWRvcHRlZCBhIG9uZXllYXIgaG9sZGVyIHJpZ2h0cyBwbGFuIGFuZCBjb25maXJtZWQgaXRzIFFMVCBvZmZlciBBZG9iZSBTeXN0ZW1zIEluYyBsb3N0IDQyIHBlcmNlbnQgdG8gNjc3MyBhZnRlciByZXBvcnRpbmcgdGhpcmRxdWFydGVyIHNhbGVzIG9mIDEwMSBiaWxsaW9uIEFuYWx5c3RzIG9uIGF2ZXJhZ2UgZXN0aW1hdGVkIHJldmVudWUgb2YgMTAyIGJpbGxpb24gVGhlIHNvZnR3YXJlIG1ha2VyIHBvc3RlZCBwcm9maXQgYmVmb3JlIHNvbWUgaXRlbXMgb2YgMjggY2VudHMgYSBzaGFyZSBleGNlZWRpbmcgYW5hbHlzdHMgcHJvamVjdGlvbnMgZm9yIDI2IGNlbnRzIFJhY2tzcGFjZSBIb3N0aW5nIEluYyB0dW1ibGVkIDE2IHBlcmNlbnQgdG8gMzMgYWZ0ZXIgc2F5aW5nIGl0IHJlamVjdGVkIGJpZCBvZmZlcnMgVGhlIGNsb3VkY29tcHV0aW5nIGNvbXBhbnkgZGVjaWRlZCB0byByZW1haW4gaW5kZXBlbmRlbnQgYWZ0ZXIgZW5kaW5nIGEgcmV2aWV3IG9uIHN0cmF0ZWdpYyBvcHRpb25zIGFuZCByZWJ1ZmZlZCBpbnZlc3RvciBjYWxscyB0byBidXkgYmFjayBzaGFyZXMgc2F5aW5nIGl0IHdpbGwgcHJlc2VydmUgY2FzaCBmb3IgZnV0dXJlIGFjcXVpc2l0aW9ucyBHb2dvIEluYyBhZHZhbmNlZCAyOCBwZXJjZW50IHRvIDE4NDYgYWZ0ZXIgYW5ub3VuY2luZyBhIHBhcnRuZXJzaGlwIHdpdGggVmlyZ2luIEF0bGFudGljIHRvIG9mZmVyIGluZmxpZ2h0IGNvbm5lY3Rpdml0eSBzZXJ2aWNlcyBvbiBWaXJnaW5zIGFpcmNyYWZ0IEdlbmVyYWwgTWlsbHMgSW5jIGxvc3QgNDMgcGVyY2VudCB0byA1MDkyIGFmdGVyIHJlcG9ydGluZyBlYXJuaW5ncyBhbmQgc2FsZXMgdGhhdCBtaXNzZWQgYW5hbHlzdHMgZXN0aW1hdGVzIFJldmVudWUgYXQgdGhlIGNlcmVhbCBtYWtlciB3YXMgNDI3IGJpbGxpb24gY29tcGFyZWQgd2l0aCB0aGUgYXZlcmFnZSBhbmFseXN0IGVzdGltYXRlIG9mIDQzOCBiaWxsaW9udAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAdWFydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2Usc2NvcmUsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEwLTA2LTEwVDAwOjAwOjAwWiBUTyAyMDEzLTA3LTMwVDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDUzNTk=</field><field name="title" class="java.lang.String">rO0ABXQAP1MmUCA1MDAgQmVhdGluZyBHb2xkIE1vc3QgU2luY2UgMTk5OSBhcyBFYXJuaW5ncyBFc3RpbWF0ZXMgUmlzZQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATZxbIiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGJiN2EzMDQ2ZDZmOWVjZWM=</field><field name="symbol" class="java.lang.String">rO0ABXQAAVA=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATZ2kuSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkvXCj1wo9</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlMzMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAklHrhR64U</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAk8KPXCj1x</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAk8KPXCj1x</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAC1pZA==</field><field name="id" class="java.lang.String">rO0ABXQAEDBjZmU2YzNkZDk1MDllMmU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMl3AAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPy47gQ==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDIzNzU=</field><field name="title" class="java.lang.String">rO0ABXQAMUdvbGQgVHJhZGVycyBNb3N0IEJ1bGxpc2ggU2luY2UgQmVhciBNYXJrZXQgQmVnYW4=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8X2xCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDQzMGNhNDhmY2Y3MWRlYzE=</field><field name="symbol" class="java.lang.String">rO0ABXQAA1BUWQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8dAWyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAy8KPXCj1x</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzKPXCj1wp</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAy1HrhR64U</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAsAAAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAbk2A==</field><field name="id" class="java.lang.String">rO0ABXQAEDNjYjk2ZmE5M2JlMzQ4ZDQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKFLAAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPyCF4Q==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDk2MTc=</field><field name="title" class="java.lang.String">rO0ABXQAQEV1cm9wZWFuIFN0b2NrcyBTaW5rIE1vc3QgU2luY2UgMjAwOSBvbiBHcm93dGgsIEZ1bmRpbmcgQ29uY2VybnM=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATHbQpiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDMxNjI4Njk4NDhhYTBjNDQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABVNDR0xZ</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATHgaPSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAYcKPXCj1x</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAZUeuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAXuFHrhR64</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAXwo9cKPXD</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAW1wo9cKPX</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAADCjLA==</field><field name="id" class="java.lang.String">rO0ABXQAEDQyZGJmZWU1YmJlZmQzYTM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE7WAAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPx06dQ==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDEwODE=</field><field name="title" class="java.lang.String">rO0ABXQAOURvdyBDaGFsa3MgVXAgQmlnZ2VzdCBHYWluIGluIGEgTW9udGggb24gSG9wZXMgZm9yIEV1cm9wZQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATjBp9yAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGNlOGNkYTJmOGVmZTA5MTI=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0VTSQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATjGzjiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBFiPXCj1wp</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBGKj1wo9cK</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBFdwo9cKPX</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBFtwo9cKPX</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBFtwo9cKPX</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAm0xA==</field><field name="id" class="java.lang.String">rO0ABXQAEDkyNzhhZGFmZGI2NzQ5ZGU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMPfAAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPxjNoA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDkzMjA=</field><field name="title" class="java.lang.String">rO0ABXQAQVMmUCA1MDAgVmFsdWF0aW9uIFNsaXBzIDE5JSBCZWxvdyAyMDExIGFzIFNoYW91bCBBZHZpc2VzIFBhdGllbmNl</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATe13SyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGQxODhlMWU2ZTBjYzhhNzc=</field><field name="symbol" class="java.lang.String">rO0ABXQAAk1O</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATe7A4iAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArFHrhR64U</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEArQo9cKPXD</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAqij1wo9cK</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAq64UeuFHs</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAnszMzMzMz</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAsiA==</field><field name="id" class="java.lang.String">rO0ABXQAEDE2YTZmMTI1NTk1Y2M3MDc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJLtAAAA==</field><field name="score" class="java.lang.Float">rO0ABXNyAA9qYXZhLmxhbmcuRmxvYXTa7cmi2zzw7AIAAUYABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwPxe/HA==</field></document></documents><date>2015-05-07T07:22:48-0500</date></cacheEntry>
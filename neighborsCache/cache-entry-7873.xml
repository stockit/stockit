<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hVUyBzdG9ja3MgY2xpbWJlZCB0aGUgbW9zdCBpbiB0aHJlZSB3ZWVrcyBhcyBkYXRhIHN0b2tlZCBvcHRpbWlzbSBpbiB0aGUgZWNvbm9teSB3aGlsZSBUcmVhc3VyeXMgcGFyZWQgbG9zc2VzIGFzIEZlZGVyYWwgUmVzZXJ2ZSBtZWV0aW5nIG1pbnV0ZXMgaW5kaWNhdGVkIGNvbmNlcm4gb3ZlciB0aGUgb3V0bG9vayBmb3IgaW5mbGF0aW9uIE9pbCBpbiBOZXcgWW9yayByYWxsaWVkIFRoZSBTdGFuZGFyZCBhbXAgUG9vcnMgNTAwIEluZGV4IGNsb3NlZCAxMiBwZXJjZW50IGhpZ2hlciBieSA0IHBtIGluIE5ldyBZb3JrIGhhbHRpbmcgaXRzIGxvbmdlc3QgcnVuIG9mIGxvc3NlcyBpbiAxMyBtb250aHMgYXMgY29uc3VtZXIgc3RvY2tzIGdhaW5lZCBUZW55ZWFyIFRyZWFzdXJ5IHlpZWxkcyBhZGRlZCB0d28gYmFzaXMgcG9pbnRzIHRvIDE5NiBwZXJjZW50IGFmdGVyIGVhcmxpZXIgcmlzaW5nIGFzIG11Y2ggYXMgc2V2ZW4gYmFzaXMgcG9pbnRzIFRoZSBkb2xsYXIgZ2FpbmVkIGFnYWluc3QgbWFqb3IgcGVlcnMgd2l0aCB0aGUgZXVybyBzbGlkaW5nIHRvIGEgbmluZXllYXIgbG93IGFmdGVyIGRhdGEgc2hvd2VkIGEgZHJvcCBpbiBjb25zdW1lciBwcmljZXMgV2VzdCBUZXhhcyBJbnRlcm1lZGlhdGUgY3J1ZGUgcmVib3VuZGVkIGZyb20gYSA1IDEyeWVhciBsb3cgYW1pZCBzdHJvbmcgZGVtYW5kIGZyb20gVVMgcmVmaW5lcmllcyBNb3N0IEZlZCBvZmZpY2lhbHMgYWdyZWVkIHRoYXQgdGhlaXIgY29tbWl0bWVudCBsYXN0IG1vbnRoIHRvIGJlIHBhdGllbnQgb24gcmFpc2luZyBpbnRlcmVzdCByYXRlcyBtZWFudCB0aGV5IHdlcmUgdW5saWtlbHkgdG8gbW92ZSBvbiBib3Jyb3dpbmcgY29zdHMgYmVmb3JlIGxhdGUgQXByaWwgYWNjb3JkaW5nIHRvIG1pbnV0ZXMgb2YgdGhlaXIgRGVjZW1iZXIgbWVldGluZyBBIG51bWJlciBleHByZXNzZWQgY29uY2VybiBpbmZsYXRpb24gY291bGQgcmVtYWluIHRvbyBzbG93IFBvbGljeSBtYWtlcnMgYWxzbyBzYWlkIHRoYXQgd2Vha25lc3MgaW4gdGhlIGdsb2JhbCBlY29ub215IG1heSBwb3NlIGEgdGhyZWF0IHRvIHRoZSBVUyByZWNvdmVyeSB3aGlsZSBjb25jbHVkaW5nIHRoYXQgdGhvc2Ugcmlza3Mgd2VyZSBuZWFybHkgYmFsYW5jZWQgYnkgcG9zaXRpdmUgZGV2ZWxvcG1lbnRzIGluIEFtZXJpY2EgRnJvbSB0aGUgRmVkcyBwZXJzcGVjdGl2ZSB0aGV5cmUgc2VlaW5nIG1vcmUgb2YgdGhlIHNhbWUgU3RlcGhlbiBXb29kIGNoaWVmIG1hcmtldCBzdHJhdGVnaXN0IGF0IFJ1c3NlbGwgSW52ZXN0bWVudHMgaW4gTmV3IFlvcmsgc2FpZCBieSBwaG9uZSBUaGUgRmVkIGhhcyB1c2VkIGZvcndhcmQgZ3VpZGFuY2UgbW9yZSBlZmZlY3RpdmVseSBhbmQgdGhlIG1hcmtldHMgYXJlIHJlc3BvbmRpbmcgdG8gYSBjb25zaXN0ZW50IG1lc3NhZ2UgYW5kIGNvbnNpc3RlbnQgcG9saWN5IHBhdGggVGhlIHRha2Vhd2F5IGlzIHRoZSBGZWQgaXNudCBjaGFuZ2luZyBhbnl0aGluZyBhbnkgdGltZSBzb29uIE9pbCBJbXBhY3QgU29tZSBGZWQgb2ZmaWNpYWxzIHNhaWQgc2x1bXBpbmcgb2lsIHByaWNlcyBjb3VsZCByZWR1Y2UgbG9uZ2VydGVybSBpbmZsYXRpb24gZXhwZWN0YXRpb25zIHdoaWxlIG90aGVycyB3ZXJlIGNvbmNlcm5lZCBhIGRyb3AgaW4gbWFya2V0YmFzZWQgaW5mbGF0aW9uIG1lYXN1cmVzIG1pZ2h0IHJlZmxlY3QgdGhhdCBzdWNoIGEgZGVjbGluZSBoYWQgYWxyZWFkeSBiZWd1biBDaGFpciBKYW5ldCBZZWxsZW4gc2FpZCBhZnRlciBsYXN0IG1vbnRocyBtZWV0aW5nIHRoYXQgdGhlIGNlbnRyYWwgYmFuayB3aWxsIHByb2JhYmx5IGhvbGQgcmF0ZXMgbmVhciB6ZXJvIHRocm91Z2ggYXQgbGVhc3QgdGhlIGZpcnN0IHF1YXJ0ZXIgV1RJIHJldmVyc2VkIGVhcmxpZXIgZGVjbGluZXMgdG8gY2xpbWIgMTUgcGVyY2VudCBpbiBOZXcgWW9yayBzZXR0bGluZyBhdCA0ODY1IGEgYmFycmVsIGFmdGVyIHBvc3RpbmcgYSAxNSBwZXJjZW50IGRyb3AgdGhyb3VnaCB5ZXN0ZXJkYXkgc2luY2UgdGhlIEZlZHMgRGVjZW1iZXIgbWVldGluZyBBIGNvbWJpbmF0aW9uIG9mIHJpc2luZyBzdXBwbHkgYXMgVVMgcHJvZHVjdGlvbiBwaWNrcyB1cCBhbmQgc2xvd2VyIGdyb3d0aCBvdmVyc2VhcyB0aGF0cyByZWR1Y2luZyBkZW1hbmQgaXMgbGVhZGluZyB0byBhIHJvdXQgaW4gb2lsIHByaWNlcyB0aGF0IGhhcyBjb250aW51ZWQgaW50byAyMDE1IFRoZSBTYW1wUCA1MDAgaGFkIHBsdW5nZWQgNDIgcGVyY2VudCBvdmVyIHRoZSBmaXZlIGRheXMgdGhyb3VnaCB5ZXN0ZXJkYXkgd2l0aCBlbmVyZ3kgc3RvY2tzIGRvd24gNDUgcGVyY2VudCBzbyBmYXIgdGhpcyB5ZWFyIHRoZSB3b3JzdCBwZXJmb3JtYW5jZSBhbW9uZyAxMCBpbmR1c3RyeSBncm91cHMgU3ViIGluZGV4ZXMgb2YgaGVhbHRoY2FyZSBjb21wYW5pZXMgYXMgd2VsbCBhcyBjb25zdW1lciBzdGFwbGUgYW5kIGNvbnN1bWVyZGlzY3JldGlvbmFyeSBzdG9ja3MgbGVkIGdhaW5zIHRvZGF5IHJpc2luZyBhdCBsZWFzdCAxNSBwZXJjZW50IEJ1bGxpc2ggRGF0YSBEYXRhIGluIHRoZSBVUyB0b2RheSBzaG93ZWQgdGhlIHRyYWRlIGRlZmljaXQgbmFycm93ZWQgbW9yZSB0aGFuIGVjb25vbWlzdHMgZm9yZWNhc3QgaW4gTm92ZW1iZXIgd2hpbGUgY29tcGFuaWVzIGFkZGVkIG1vcmUgd29ya2VycyB0aGFuIGVzdGltYXRlZCBpbiBEZWNlbWJlciBDb21wYW5pZXMgaW4gdGhlIFVTIGFkZGVkIDI0MTAwMCB3b3JrZXJzIGluIERlY2VtYmVyIGZpZ3VyZXMgZnJvbSBBRFAgUmVzZWFyY2ggSW5zdGl0dXRlIHNob3dlZCB0b2RheSB3aXRoIG1vbnRobHkgcGF5cm9sbHMgZGF0YSBmcm9tIHRoZSBnb3Zlcm5tZW50IGR1ZSBsYXRlciB0aGlzIHdlZWsgVGhlIHRyYWRlIGdhcCBzaHJhbmsgNzcgcGVyY2VudCB0byAzOSBiaWxsaW9uIHRoZSBzbWFsbGVzdCBzaW5jZSBEZWNlbWJlciAyMDEzIENvbW1lcmNlIERlcGFydG1lbnQgZmlndXJlcyBzaG93ZWQgVGhlIFVTIGhhcyBjbGVhcmx5IGJlZW4gYWhlYWQgb2YgdGhlIGdhbWUgUGV0ZXIgRGl4b24gZ2xvYmFsIGVxdWl0aWVzIGVjb25vbWlzdCBhdCBDb21tZXJ6YmFuayBBRyBpbiBMb25kb24gc2FpZCBieSBwaG9uZSBHcm93dGggaXMgb24gYSBzdHJvbmdlciBmb290aW5nIE9pbCBoYXMgZ29uZSBkb3duIGJ1dCBpbiBzb21lIHdheXMgdGhlIHNob2NrIGlzIHdheSBvdmVyZG9uZSBJZCBleHBlY3QgbWFya2V0cyB0byByZWNvdXAgc29tZSBvZiB0aGUgZ3JvdW5kIHRoZXl2ZSBsb3N0IGluIHJlY2VudCB3ZWVrcyBFdXJvYXJlYSBjb25zdW1lciBwcmljZXMgZmVsbCBmb3IgdGhlIGZpcnN0IHRpbWUgc2luY2UgMjAwOSB3aXRoIG9pbHMgZGVjbGluZSBmcnVzdHJhdGluZyBlZmZvcnRzIHRvIHN0YXZlIG9mZiBkZWZsYXRpb24gaW4gdGhlIDE4bmF0aW9uIHJlZ2lvbiBQcmljZXMgc2xpZCAwMiBwZXJjZW50IGluIERlY2VtYmVyIHRoZSBFdXJvcGVhbiBVbmlvbnMgc3RhdGlzdGljcyBvZmZpY2Ugc2FpZCBFY29ub21pc3RzIGhhZCBwcmVkaWN0ZWQgYSBkZWNsaW5lIG9mIDAxIHBlcmNlbnQgRXVyb3BlYW4gU3RvY2tzIEV1cm9wZWFuIGVxdWl0aWVzIGdhaW5lZCB3aXRoIHRoZSBTdG94eCBFdXJvcGUgNjAwIEluZGV4IHNuYXBwaW5nIGEgdGhyZWVkYXkgZHJvcCBhcyBsYXdtYWtlcnMgaW4gQ2hhbmNlbGxvciBBbmdlbGEgTWVya2VscyBjb2FsaXRpb24gc2FpZCBHZXJtYW55IGlzIGxlYXZpbmcgdGhlIGRvb3Igb3BlbiB0byBkZWJ0cmVsaWVmIHRhbGtzIHdpdGggR3JlZWNlcyBuZXh0IGdvdmVybm1lbnQgc2lnbmFsaW5nIGEgbW9yZSBmbGV4aWJsZSBzdGFuY2UgdGhhbiBoZXIgYWRtaW5pc3RyYXRpb24gaGFzIHRha2VuIHB1YmxpY2x5IGFjY29yZGluZyB0byBCbG9vbWJlcmcgTmV3cyBHcmVlY2VzIEFTRSBJbmRleCBleHRlbmRlZCBsb3NzZXMgZmFsbGluZyAxNSBwZXJjZW50IHRvIGl0cyBsb3dlc3QgbGV2ZWwgc2luY2UgMjAxMiBiZWZvcmUgdGhlIHJlcG9ydCBXaGlsZSB3cml0aW5nIG9mZiBHcmVlayBkZWJ0IGlzbnQgb24gdGhlIHRhYmxlIHRhbGtzIG9uIGVhc2luZyByZXBheW1lbnQgdGVybXMgb24gdGhlIGFpZCB0aGF0IEdyZWVjZSByZWNlaXZlZCBmcm9tIEV1cm9wZWFuIGdvdmVybm1lbnRzIGFyZSBwb3NzaWJsZSBhZnRlciB0aGUgY291bnRyeXMgcGFybGlhbWVudGFyeSBlbGVjdGlvbnMgSmFuIDI1IHRoZSBsYXdtYWtlcnMgZnJvbSBHZXJtYW55cyB0d28gYmlnZ2VzdCBnb3Zlcm5pbmcgcGFydGllcyBzYWlkIFRoZSBTdG94eCBFdXJvcGUgNjAwIGhhcyBmYWxsZW4gbW9yZSB0aGFuIDUgcGVyY2VudCBmcm9tIGFuIGFsbW9zdCBzZXZlbnllYXIgaGlnaCByZWFjaGVkIGxhc3QgbW9udGggYW1pZCBncm93aW5nIGNvbmNlcm4gb3ZlciBHcmVlY2UgUHJpbWUgTWluaXN0ZXIgQW50b25pcyBTYW1hcmFzIHNhaWQgdGhlIHNuYXAgZWxlY3Rpb24gY2FsbGVkIGFmdGVyIHRoZSBwYXJsaWFtZW50IHJlZnVzZWQgdG8gZW5kb3JzZSBoaXMgcGljayBmb3IgcHJlc2lkZW50IGNvdWxkIGxlYWQgdG8gdGhlIG5hdGlvbiBleGl0aW5nIHRoZSBldXJvIGFyZWEgRXVyb3BlYW4gb2lsYW5kZ2FzIGNvbXBhbmllcyBoYXZlIGFsc28gdHVtYmxlZCB3aXRoIGNydWRlIHByaWNlcyBDdXJyZW5jeSBNYXJrZXRzIFRoZSBldXJvIHNsaWQgYXMgbXVjaCBhcyAwNyBwZXJjZW50IHRvIDExODAyIGl0cyB3ZWFrZXN0IGludHJhZGF5IGxldmVsIHNpbmNlIEphbiAyIDIwMDYgVGhlIEJsb29tYmVyZyBEb2xsYXIgU3BvdCBJbmRleCB3aGljaCB0cmFja3MgdGhlIGdyZWVuYmFjayBhZ2FpbnN0IDEwIG1ham9yIHBlZXJzIGp1bXBlZCAwMiBwZXJjZW50IHRvIGl0cyBoaWdoZXN0IGxldmVsIHNpbmNlIHRoZSBnYXVnZSB3YXMgc3RhcnRlZCBhdCB0aGUgZW5kIG9mIDIwMDQgVGhlIHllbiBzYW5rIDA2IHBlcmNlbnQgdG8gMTE5MTUgcGVyIGRvbGxhciBmb2xsb3dpbmcgYSB0d29kYXkgZ2FpbiBvZiAxOCBwZXJjZW50IFRoZSBNU0NJIEVtZXJnaW5nIE1hcmtldHMgSW5kZXggcnQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0xMi0wM1QwMDowMDowMFogVE8gMjAxNC0wNy0xMFQ1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDU3NzM=</field><field name="title" class="java.lang.String">rO0ABXQAOUJvbmRzIFR1bWJsZSBXaXRoIFN0b2NrcyBhcyBZZWxsZW4gT3V0bGluZXMgU3RpbXVsdXMgRXhpdA==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUTYtdiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDhhNzlkZWYyMDVmNTAxZjA=</field><field name="symbol" class="java.lang.String">rO0ABXQABUJBTVhG</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUTd3DSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBeHrhR64Uf</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBeKZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBeDhR64Ueu</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBeDhR64Ueu</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBdLCj1wo9c</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAADhA==</field><field name="id" class="java.lang.String">rO0ABXQAEDYwYTM1Nzg0ZGViY2E3ZmQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHgDAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDg1Njc=</field><field name="title" class="java.lang.String">rO0ABXQAMFN0b2NrcyBTb2FyIGFzIFdhbGwgU3RyZWV0IEFwcGxhdWRzIEZlZCBUYXBlcmluZw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUMEShMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDQ3NjYxZGI5OGYzOTUwZjc=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZJVkU=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUMJcG8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBFgAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBFlwo9cKPX</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBE+FHrhR64</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBFIUeuFHrh</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBFIUeuFHrh</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAsiZA==</field><field name="id" class="java.lang.String">rO0ABXQAEDIzOGI5YmY5MjkxOTAzYWE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFg7AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDg3MDI=</field><field name="title" class="java.lang.String">rO0ABXQAM0dvbGQgQnVsbHMgUmV0cmVhdCBhcyBQcmljZXMgRHJvcCB0byBGb3VyLU1vbnRoIExvdw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUK3Cq8AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGRmNDQ1MGM3N2Y1NGE2NTc=</field><field name="symbol" class="java.lang.String">rO0ABXQAA05PVg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUK8MQsAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUiuFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUqZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUQzMzMzMz</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUdmZmZmZm</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBR49cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAACEpdA==</field><field name="id" class="java.lang.String">rO0ABXQAEGZmNzhiYTVlYjFiYmM4MGM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mG5hAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQyNjI=</field><field name="title" class="java.lang.String">rO0ABXQAMlMmUCA1MDAgT25lIERheSBBd2F5IGZyb20gTG9uZ2VzdCBSYWxseSBTaW5jZSAxOTk4</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbl/oCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGIyZTQ0ODkyMjZiM2YwY2E=</field><field name="symbol" class="java.lang.String">rO0ABXQABFZUV1Y=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbrJNyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBWPMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBWYAAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBWMo9cKPXD</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBWYAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBV/rhR64Uf</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAACvA==</field><field name="id" class="java.lang.String">rO0ABXQAEGM0ZmYyNDUyOTY2ZGNhNGI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEtVAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQ0NjY=</field><field name="title" class="java.lang.String">rO0ABXQAPlRyZWFzdXJ5cyBpbiBMb25nZXN0IFNsaWRlIFNpbmNlIE9jdG9iZXIgb24gR3Jvd3RoIGluIFNlcnZpY2Vz</field><field name="content" class="java.lang.String">rO0ABXQWXVRoZSBwcmljZSBvZiBUcmVhc3VyeSAxMC15ZWFyIG5vdGVzIGZlbGwgZm9yIHRoZSBmaWZ0aCBzdHJhaWdodCBkYXkgb24gV2VkbmVzZGF5LCB0aGUgbG9uZ2VzdCBzdHJldGNoIG9mIGxvc3NlcyBzaW5jZSBPY3RvYmVyLCBhZnRlciB0aGUgSW5zdGl0dXRlIGZvciBTdXBwbHkgTWFuYWdlbWVudOKAmXMgbm9uLW1hbnVmYWN0dXJpbmcgaW5kZXggcm9zZSBtb3JlIHRoYW4gZm9yZWNhc3QgaW4gTWF5LiBUaGUgYmVuY2htYXJrIHNlY3VyaXRpZXMgZXh0ZW5kZWQgYSBkcm9wIGFmdGVyIHRoZSBGZWRlcmFsIFJlc2VydmUgc2FpZCB0aGUgZWNvbm9teSBleHBhbmRlZCBhdCBhIG1vZGVzdCB0byBtb2RlcmF0ZSBwYWNlIGxhc3QgbW9udGguIFRoZSBub3RlcyByb3NlIGVhcmxpZXIgYWZ0ZXIgYSBwcml2YXRlIHJlcG9ydCBzaG93ZWQgVS5TLiBjb21wYW5pZXMgYWRkZWQgZmV3ZXIgam9icyB0aGFuIGZvcmVjYXN0IGluIE1heSBhbmQgdGhlIHRyYWRlIGRlZmljaXQgaW4gQXByaWwgYmFsbG9vbmVkIHRvIHRoZSB3aWRlc3QgaW4gdHdvIHllYXJzLiBFdXJvcGVhbiBDZW50cmFsIEJhbmsgcG9saWN5IG1ha2VycyBtZWV0IFRodXJzZGF5IHRvIGNvbnNpZGVyIGEgcGFja2FnZSBvZiBzdGltdWx1cyBtZWFzdXJlcy4g4oCcV2UgaGFkIHRoZSBJU00gbnVtYmVyIGNvbWUgaW4sIHdoaWNoIHdhcyBvbiB0aGUgc3Ryb25nIHNpZGUg4oCUIHRoYXQgYnJvdWdodCB1cyB0byBoaWdoZXIgeWllbGRzLOKAnSBzYWlkIEphc29uIFJvZ2FuLCBtYW5hZ2luZyBkaXJlY3RvciBvZiBVLlMuIGdvdmVybm1lbnQgdHJhZGluZyBhdCBHdWdnZW5oZWltIFNlY3VyaXRpZXMsIGEgTmV3IFlvcmstYmFzZWQgYnJva2VyYWdlIGZvciBpbnN0aXR1dGlvbmFsIGludmVzdG9ycy4gVGhlIFUuUy4gMTAteWVhciB5aWVsZCByb3NlIG9uZSBiYXNpcyBwb2ludCwgb3IgMC4wMSBwZXJjZW50YWdlIHBvaW50LCB0byAyLjYgcGVyY2VudCBhdCA1IHAubS4gTmV3IFlvcmsgdGltZSwgYWNjb3JkaW5nIHRvIEJsb29tYmVyZyBCb25kIFRyYWRlciBkYXRhLiBUaGUgeWllbGQgdG91Y2hlZCAyLjYxIHBlcmNlbnQsIHRoZSBoaWdoZXN0IGxldmVsIHNpbmNlIE1heSAxNC4gVGhlIHByaWNlIG9mIHRoZSAyLjUgcGVyY2VudCBub3RlIGR1ZSBNYXkgMjAyNCBmZWxsIDEvMzIgb3IgJDAuMzEgcGVyICQxLDAwMCBmYWNlIGFtb3VudCB0byA5OSAzLzMyLiBUaGUgMTAteWVhciBub3RlIHlpZWxkIGhhcyByaXNlbiAyMCBiYXNpcyBwb2ludHMgc2luY2UgdG91Y2hpbmcgMi40IHBlcmNlbnQgb24gTWF5IDI5LCB0aGUgbG93ZXN0IGxldmVsIHNpbmNlIEp1bmUgMjAxMy4gICAgICAgICAgICAgICAgICAgICAgICAgIEdvbGRtYW7igJlzIFZpZXcgRXF1aXR5IHJldHVybnMgYXJlIHBvaXNlZCB0byBiZWF0IGZpeGVkIGluY29tZSBhbmQgZ292ZXJubWVudCBib25kcyBhcmVu4oCZdCBhdHRyYWN0aXZlIGFueXdoZXJlLCBhY2NvcmRpbmcgdG8gQWJieSBKb3NlcGggQ29oZW4sIGEgc2VuaW9yIGludmVzdG1lbnQgc3RyYXRlZ2lzdCBhdCBHb2xkbWFuIFNhY2hzIEdyb3VwIEluYy4gVS5TLiBjb25zdW1lcnMgYXJlIGRvaW5nIGJldHRlciBhbmQgZXhwb3J0cyBhcmUgdGhlIGZhc3Rlc3QgcGFydCBvZiB0aGUgZWNvbm9teSwgc2hlIHNhaWQgYXQgYSBTdGFuZGFyZCAmIFBvb3LigJlzIGNvbmZlcmVuY2UgaW4gTmV3IFlvcmsgV2VkbmVzZGF5LiDigJxXZSByZWFsbHkgYXJlIGNvbmNlcm5lZCBhYm91dCBib25kcywgYnV0IG5vdCBuZWNlc3NhcmlseSB0aGlzIHdlZWsgb3IgdGhpcyBtb250aCzigJ0gc2hlIHNhaWQuIOKAnEhvd2V2ZXIsIGZvciB0aG9zZSB3aG8gaGF2ZSBpbnRlcm1lZGlhdGUtIHRvIGxvbmctdGVybSBpbnZlc3RtZW50IGhvcml6b25zLCBvdXIgY29uY2x1c2lvbiBpcyBib25kcyBhcmUgbm90IHRoZSBwbGFjZSB0byBiZS7igJ0gVGhlIFMmUCA1MDAgaW5kZXggb2Ygc3RvY2tzIHJlYWNoZWQgYW4gYWxsLXRpbWUgaGlnaCBXZWRuZXNkYXkgYWZ0ZXIgYWR2YW5jaW5nIDIuMSBwZXJjZW50IGluIE1heSBmb3IgYSBmb3VydGggY29uc2VjdXRpdmUgbW9udGhseSBpbmNyZWFzZS4gVGhlIEJhbmsgb2YgQW1lcmljYSBNZXJyaWxsIEx5bmNoIE1PVkUgSW5kZXgsIHdoaWNoIG1lYXN1cmVzIHByaWNlIHN3aW5ncyBiYXNlZCBvbiBvbmUtbW9udGggVHJlYXN1cnkgb3B0aW9ucywgY2xpbWJlZCB0byA2NC45IGJhc2lzIHBvaW50cywgdGhlIGhpZ2hlc3QgbGV2ZWwgc2luY2UgQXByaWwgMy4gVGhlIGF2ZXJhZ2Ugb3ZlciB0aGUgcGFzdCBkZWNhZGUgaXMgOTIuMi4gICAgICAgICAgICAgICAgICAgICAgICAgIFZvbGF0aWxpdHkgUmlzZXMgVGhlIGluZGV44oCZcyBjbG9zZSBhYm92ZSA1OS43NSBiYXNpcyBwb2ludHMgVHVlc2RheSBpbmRpY2F0ZXMgdGhlIHRyZW5kIGhhcyB0dXJuZWQgaGlnaGVyLCB0YXJnZXRpbmcgODAgYmFzaXMgcG9pbnRzIGFuZCBwb3RlbnRpYWxseSBiZXlvbmQsIE1hY05laWwgQ3VycnksIHRlY2huaWNhbCBzdHJhdGVnaXN0IGF0IEJhbmsgb2YgQW1lcmljYSBNZXJyaWxsIEx5bmNoIHdyb3RlIGluIGEgbm90ZSB0byBjbGllbnRzLiDigJxBcyB5aWVsZHMgdHVybiBoaWdoZXIsIHZvbGF0aWxpdHkgYWxzbyByaXNlcyzigJ0gTWFjTmVpbCBzYWlkIGluIGFuIGludGVydmlldy4g4oCcVGhhdCBtYWtlcyBhIGxvdCBvZiB0aGluZ3MgbW9yZSBleHBlbnNpdmUg4oCUIGl0IGxlYWRzIHRvIGEgcmlzZSBpbiB2b2xhdGlsaXR5IGFjcm9zcyBhc3NldCBjbGFzc2VzLuKAnSBUaGUgZXh0cmEgeWllbGQgMTAteWVhciBub3RlcyBvZmZlciBvdmVyIHRoZWlyIEdyb3VwIG9mIFNldmVuIHBlZXJzIHdhcyBhdCA2MSBiYXNpcyBwb2ludHMgV2VkbmVzZGF5LiBJdCB0b3VjaGVkIDYzLjMgYmFzaXMgcG9pbnRzIFR1ZXNkYXksIHRoZSB3aWRlc3Qgc2luY2UgTWF5IDEyLiBFdmVuIGFmdGVyIGZvdXIgZGF5cyBvZiBkZWNsaW5lcywgdGhlIEJsb29tYmVyZyBVLlMuIFRyZWFzdXJ5IEJvbmQgSW5kZXggZ2FpbmVkIDIuOCBwZXJjZW50IGZvciAyMDE0IHRocm91Z2ggVHVlc2RheSwgaGVhZGVkIGZvciBpdHMgYmVzdCB5ZWFyIHNpbmNlIDIwMTEuIFRyZWFzdXJ5cyBmZWxsIFdlZG5lc2RheSBhZnRlciBJU03igJlzIG5vbi1tYW51ZmFjdHVyaW5nIGluZGV4IGluY3JlYXNlZCB0byA1Ni4zIGZyb20gNTUuMiBhIG1vbnRoIGVhcmxpZXIsIHRoZSBUZW1wZSwgQXJpem9uYS0gYmFzZWQgZ3JvdXAgc2FpZC4gVGhlIG1lZGlhbiBmb3JlY2FzdCBvZiA3NSBlY29ub21pc3RzIGluIGEgQmxvb21iZXJnIHN1cnZleSBjYWxsZWQgZm9yIDU1LjUuIEVzdGltYXRlcyByYW5nZWQgZnJvbSA1NCB0byA1OC4gUmVhZGluZ3MgZ3JlYXRlciB0aGFuIDUwIHNpZ25hbCBleHBhbnNpb24uICAgICAgICAgICAgICAgICAgICAgICDigJhSZWNvdmVyaW5n4oCZIEVjb25vbXkg4oCcV2XigJlyZSBzZWVpbmcgc3RyZW5ndGggYWNyb3NzIHRoZSBib2FyZCBpbiBJU00gbm9uLW1hbnVmYWN0dXJpbmc7IHlpZWxkcyBuZWVkIHRvIG1vdmUgaGlnaGVyLOKAnSBzYWlkIENhcmwgUmljY2Fkb25uYSwgc2VuaW9yIFUuUy4gZWNvbm9taXN0IGluIE5ldyBZb3JrIGF0IERldXRzY2hlIEJhbmsgU2VjdXJpdGllcyBJbmMuLCBvbmUgb2YgMjIgcHJpbWFyeSBkZWFsZXJzIHRoYXQgdHJhZGUgd2l0aCB0aGUgRmVkZXJhbCBSZXNlcnZlLiDigJxUaGUgdG9uZSBvZiB0aGUgZGF0YSBpcyBjb25zaXN0ZW50IHdpdGggYW4gZWNvbm9teSB0aGF04oCZcyByZWNvdmVyaW5nIGZyb20gYSBmaXJzdC1xdWFydGVyIHN3b29uLuKAnSBVLlMuIGdvdmVybm1lbnQgZGVidCBleHRlbmRlZCB0aGUgZHJvcCBhZnRlciBzZXZlbiBvZiAxMiBkaXN0cmljdHMgc2F3IOKAnG1vZGVyYXRl4oCdIGdyb3d0aCwgd2l0aCB0aGUgcmVzdCBjaGFyYWN0ZXJpemVkIGFzIOKAnG1vZGVzdCzigJ0gdGhlIEZlZCBzYWlkIGluIGl0cyBCZWlnZSBCb29rIGJ1c2luZXNzIHN1cnZleSwgd2hpY2ggaXMgYmFzZWQgb24gcmVwb3J0cyBmcm9tIGl0cyBkaXN0cmljdCBiYW5rcy4gVGVuLXllYXIgbm90ZXMgcm9zZSBlYXJsaWVyIGFmdGVyIEFEUCBSZXNlYXJjaCBJbnN0aXR1dGUgc2FpZCBVLlMuIGVtcGxveWVycyBhZGRlZCAxNzksMDAwIHdvcmtlcnMgdG8gdGhlaXIgcGF5cm9sbHMgaW4gTWF5LCBiZWxvdyB0aGUgMjEwLDAwMCBtZWRpYW4gZm9yZWNhc3Qgb2YgNDUgZWNvbm9taXN0cyBzdXJ2ZXllZCBieSBCbG9vbWJlcmcuIE5vbmZhcm0gcGF5cm9sbHMgZGF0YSBvbiBKdW5lIDYgbWF5IHNob3cgdGhlIGVjb25vbXkgYWRkZWQgbW9yZSB0aGFuIDIwMCwwMDAgam9icyBmb3IgYSBmb3VydGggbW9udGgsIGFjY29yZGluZyB0byBhIEJsb29tYmVyZyBzdXJ2ZXkuICAgICAgICAgICAgICAgICAgICAgICAgIOKAmFdlYWtlciBQcm9maWxl4oCZIFRoZSB0cmFkZSBnYXAgcm9zZSBieSA2LjkgcGVyY2VudCB0byAkNDcuMiBiaWxsaW9uIGZyb20gdGhlIHByaW9yIG1vbnRo4oCZcyAkNDQuMiBiaWxsaW9uLCBsYXJnZXIgdGhhbiBwcmV2aW91c2x5IGVzdGltYXRlZCwgQ29tbWVyY2UgRGVwYXJ0bWVudCBmaWd1cmVzIHNob3dlZC4gVGhlIHJlYWRpbmcgZXhjZWVkZWQgYWxsIGVzdGltYXRlcyBpbiBhIEJsb29tYmVyZyBzdXJ2ZXkgb2YgNzAgZWNvbm9taXN0cyBhbmQgd2FzIHRoZSBiaWdnZXN0IHNpbmNlIEFwcmlsIDIwMTIuIOKAnFRoZSBkZXRlcmlvcmF0aW9uIHN1Z2dlc3RzIGEgc2xpZ2h0bHkgd2Vha2VyIHByb2ZpbGUgZm9yIHRoZSBzZWNvbmQgcXVhcnRlcizigJ0gc2FpZCBUb20gUG9yY2VsbGksIGNoaWVmIFUuUy4gZWNvbm9taXN0IGluIE5ldyBZb3JrIGF0IFJveWFsIEJhbmsgb2YgQ2FuYWRh4oCZcyBSQkMgQ2FwaXRhbCBNYXJrZXRzIHVuaXQsIGEgcHJpbWFyeSBkZWFsZXIuIOKAnFdlIHdpbGwgaGF2ZSB0byB0cmltIFEyIGdyb3NzIGRvbWVzdGljIHByb2R1Y3QgdG8gc29tZSBleHRlbnQu4oCdIEdEUCBpcyBmb3JlY2FzdCB0byBncm93IDMuNSBwZXJjZW50IGluIHRoZSBzZWNvbmQgcXVhcnRlciwgYWNjb3JkaW5nIHRvIGEgQmxvb21iZXJnIHN1cnZleSBvZiBlY29ub21pc3RzLiBQb3JjZWxsaSBmb3JlY2FzdHMgMTAteWVhciB5aWVsZHMgd2lsbCByaXNlIHRvIDMuMyBwZXJjZW50IGJ5IHllYXItZW5kLiBUaGUgbWVkaWFuIGVzdGltYXRlIGluIGEgQmxvb21iZXJnIHN1cnZleSBvZiA3MyBlY29ub21pc3RzIGFuZCBzdHJhdGVnaXN0cyBpcyAzLjE1IHBlcmNlbnQuIEZvcnR5LWZvdXIgb2YgNTAgZWNvbm9taXN0cyBzdXJ2ZXllZCBieSBCbG9vbWJlcmcgTmV3cyBwcmVkaWN0IHRoZSBFQ0Igd2lsbCBiZWNvbWUgdGhlIGZpcnN0IG1ham9yIGNlbnRyYWwgYmFuayB0byB0YWtlIGludGVyZXN0IHJhdGVzIGJlbG93IHplcm8gYnkgY3V0dGluZyBpdHMgZGVwb3NpdCByYXRlLiBBbGwgZXhjZXB0IHR3byBvZiA2MCByZXNwb25kZW50cyBpbiBhIHNlcGFyYXRlIEJsb29tYmVyZyBzdXJ2ZXkgc2FpZCB0aGUgRUNCIHdpbGwgYWxzbyBsb3dlciBpdHMgbWFpbiByZWZpbmFuY2luZyByYXRlIGZyb20gYSByZWNvcmQtIGxvdyAwLjI1IHBlcmNlbnQuIOKAnEEgZGVjZW50LXNpemUgZWFzaW5nIGZyb20gdGhlIEVDQiBjb3VsZCB0cmlnZ2VyIGdvb2Qgb3ZlcnNlYXMgZGVtYW5kIGZvciBUcmVhc3VyeXMs4oCdIHNhaWQgR3V5IExlQmFzLCBjaGllZiBmaXhlZC0gaW5jb21lIHN0cmF0ZWdpc3QgYXQgSmFubmV5IE1vbnRnb21lcnkgU2NvdHQgTExDIGluIFBoaWxhZGVscGhpYS4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUZlP4SAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGJhYzI2MGYyY2YyNzAxZTQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lQQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUZqZeCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6nCj1wo9c</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6nCj1wo9c</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6nCj1wo9c</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6nCj1wo9c</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5KPXCj1wp</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAABkA==</field><field name="id" class="java.lang.String">rO0ABXQAEGJiMjQ3M2UxZWZjOTE2ZDY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJxMAAAQ==</field></document></documents><date>2015-05-07T12:21:36-0500</date></cacheEntry>
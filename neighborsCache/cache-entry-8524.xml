<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0Dw1SZXB1YmxpY2FuIEplZmYgQmVsbCBzcGVudCB0aHJlZSBkZWNhZGVzIGluIFdhc2hpbmd0b24gd29ya2luZyBvbiBwb2xpY3kgYW5kIHdyb3RlIGEgYm9vayBwcm9tb3RpbmcgYWxsIGFzcGVjdHMgb2Ygc29jaWFsIGNvbnNlcnZhdGlzbSBCdXQgc28gZmFyIGhpcyBjYW1wYWlnbiBmb3IgdGhlIFVTIFNlbmF0ZSBoYXMgY2VudGVyZWQgb24ganVzdCBvbmUgaXNzdWUgcmV0dXJuaW5nIHRoZSBVbml0ZWQgU3RhdGVzIHRvIHRoZSBnb2xkIHN0YW5kYXJkIEl0cyBhbiBpZGVhIHRoYXQgaGlzIG9wcG9uZW50IERlbW9jcmF0aWMgaW5jdW1iZW50IENvcnkgQm9va2VyIGRpc21pc3NlcyBhcyBkZWZ1bmN0IGFuZCBkZWJ1bmtlZCB3aGljaCBpcyBwcmV0dHkgbXVjaCBob3cgbW9zdCBlY29ub21pc3RzIHNlZW0gdG8gc2VlIGl0IEJ1dCBhIGdyb3VwIG9mIGNvbnNlcnZhdGl2ZSB0aGlua2VycyBwdXNoaW5nIGZvciB0aGUgY2hhbmdlIGlzIHVuZGF1bnRlZCBJdCB3b3VsZG50IGJlIHRoZSBmaXJzdCB0aW1lIHRoYXQgdGhlIG1ham9yaXR5IG9mIFBoRCBlY29ub21pc3RzIHdlcmUgb24gb25lIHNpZGUgYW5kIEplZmYgd2FzIG9uIHRoZSBvdGhlciBhbmQgaGUgdHVybmVkIG91dCB0byBiZSByaWdodCBzYWlkIEpvaG4gTXVlbGxlciB3aG8gcnVucyB0aGUgZWNvbm9taWNzIGFuZCBldGhpY3MgcHJvZ3JhbSBhdCB0aGUgRXRoaWNzIGFuZCBQdWJsaWMgUG9saWN5IENlbnRlciByZWZlcnJpbmcgdG8gdGhlIGlkZWEgdGhhdCBCZWxsIGFkdmFuY2VkIGluIHRoZSAxOTcwcyAgdGhhdCBjdXR0aW5nIHRheGVzIGNvdWxkIHN0aW11bGF0ZSB0aGUgZWNvbm9teSBVbmRlciB0aGUgZ29sZCBzdGFuZGFyZCB0aGUgdmFsdWUgb2YgdGhlIGRvbGxhciB3b3VsZCBiZSBmaXhlZCB0byBhIGNlcnRhaW4gYW1vdW50IG9mIGdvbGQgVGhyb3VnaCBtdWNoIG9mIHRoZSBVUyBoaXN0b3J5IHRoYXQgd2FzIHRoZSBjYXNlIEJ1dCBzaW5jZSAxOTcxIHRoZSBVUyBoYXMgaGFkIGZpYXQgbW9uZXkgdGhhdCBpcyBub3QgYmFja2VkIGJ5IGdvbGQgb3IgYW55dGhpbmcgZWxzZSBCZWxsIGFuZCBvdGhlciBzdXBwb3J0ZXJzIG9mIHRoZSBnb2xkIHN0YW5kYXJkIHNheSBpdCB3b3VsZCBiZSBhIHdheSB0byBrZWVwIHByaWNlcyBzdGFibGUgSGUgc2F5cyB0aGUgY3VycmVudCBtZWFucyBvZiBjb250cm9sbGluZyBwcmljZXMgIG5lYXJ6ZXJvIGludGVyZXN0IHJhdGVzIGZyb20gdGhlIEZlZGVyYWwgUmVzZXJ2ZSAgaXMgbWFraW5nIGl0IGhhcmQgZm9yIHNtYWxsIGJ1c2luZXNzZXMgdG8gZ2V0IGxvYW5zIGFuZCBleHBhbmQgQmVsbCBzYXlzIHRoYXRzIGEgbWFqb3IgcmVhc29uIHRoYXQgdGhlIGVjb25vbXkgaXMgZ3Jvd2luZyBzbG93bHkgeWVhcnMgYWZ0ZXIgdGhlIEdyZWF0IFJlY2Vzc2lvbiBXZSBhcmUgaW4gYSBzaXR1YXRpb24gb2Ygc3RhZ25hdGlvbiBCZWxsIHNhaWQgZWFybGllciB0aGlzIG1vbnRoIGluIGEgc3BlZWNoIHRvIGEgcmVhbCBlc3RhdGUgY29uZmVyZW5jZSBpbiBOZXcgQnJ1bnN3aWNrIFdoeSBkb250IHRoZXkgbGV0IG1hcmtldCBpbnRlcmVzdCByYXRlcyByZXR1cm4gdG8gb3VyIGVjb25vbXkgTGlrZSBvdGhlciBzdXBwb3J0ZXJzIG9mIHRoZSBnb2xkIHN0YW5kYXJkIEJlbGwgaXMgYW4gYWNvbHl0ZSBvZiBSb25hbGQgUmVhZ2FuIGFuZCBKYWNrIEtlbXAgdGhlIGxhdGUgY29uZ3Jlc3NtYW4gc2VjcmV0YXJ5IG9mIGhvdXNpbmcgYW5kIHVyYmFuIGRldmVsb3BtZW50IGFuZCB2aWNlIHByZXNpZGVudGlhbCBub21pbmVlIHdobyBtYWRlIHRoZSBjYWxsIGZvciBjdXR0aW5nIHRheGVzIHRvIHN0aW11bGF0ZSB0aGUgZWNvbm9teSBwYXJ0IG9mIGEgbmF0aW9uYWwgZGViYXRlIGluIHRoZSBsYXRlIDE5NzBzIEJlbGwgbm93IDcwIHdvbiB0aGUgUmVwdWJsaWNhbiBub21pbmF0aW9uIGZvciBhIE5ldyBKZXJzZXkgVVMgU2VuYXRlIHNlYXQgaW4gMTk3OCBsYXJnZWx5IGJ5IGFkdm9jYXRpbmcgdGhlIGtpbmQgb2YgUmVhZ2FuZXJhIHRheCBjdXRzIHNvbWUgY3JlZGl0IHdpdGggc3B1cnJpbmcgdGhlIGVjb25vbXkgQmFjayBpbiAyMDEyIElHTSBGb3J1bSB3aGljaCBzdXJ2ZXlzIGFjYWRlbWljIGVjb25vbWlzdHMgZnJvbSBVUyBpbnN0aXR1dGlvbnMgaW5jbHVkaW5nIFlhbGUgdGhlIFVuaXZlcnNpdHkgb2YgQ2hpY2FnbyBhbmQgU3RhbmZvcmQgYXNrZWQgcGFuZWxpc3RzIHdoZXRoZXIgdGhleSBhZ3JlZSB0aGF0IHRoZSBnb2xkIHN0YW5kYXJkIHdvdWxkIG1lYW4gbW9yZSBlbXBsb3ltZW50IG9wcG9ydHVuaXRpZXMgYW5kIHByaWNlIHN0YWJpbGl0eSBmb3IgYXZlcmFnZSBBbWVyaWNhbnMgRXZlcnkgbWVtYmVyIHdobyBhbnN3ZXJlZCB0aGUgcXVlc3Rpb24gZGlzYWdyZWVkIG9yIHN0cm9uZ2x5IGRpc2FncmVlZCB3aXRoIHRoZSBub3Rpb24gRXJpYyBNYXNraW4gYSBIYXJ2YXJkIGVjb25vbWlzdCB3aG8gd29uIGEgTm9iZWwgUHJpemUgaW4gMjAwNyB3YXMgYW1vbmcgdGhlbSBIZSB0b2xkIFRoZSBBc3NvY2lhdGVkIFByZXNzIHRoYXQgbW9zdCBpbiBoaXMgZmllbGQgYmVsaWV2ZSBhIGdvbGQgc3RhbmRhcmQgd291bGQgdGFrZSBhd2F5IHRoZSBGZWRzIG1vbmV0YXJ5IHBvbGljeSB0b29sIHRvIGluY3JlYXNlIHRoZSBtb25leSBzdXBwbHkgZHVyaW5nIHJlY2Vzc2lvbnMgYW5kIHRpZ2h0ZW4gdG8gY2hlY2sgZmFzdCBncm93dGggSGUgYWxzbyBzYWlkIHRoYXQgdGhlIGZsdWN0dWF0aW5nIHZhbHVlIG9mIGdvbGQgbWlnaHQgY2F1c2Ugc29tZSBpbnN0YWJpbGl0eSBpbiB0aGUgZWNvbm9teSBOb25lY29ub21pc3RzIHdvcnJ5IGFib3V0IGRlYmFzZW1lbnQgb2YgdGhlIGN1cnJlbmN5IGhlIHNhaWQgSWYgeW91cmUgbm90IHRpZWQgdG8gZ29sZCB3aGF0IHByZXZlbnRzIGEgZ292ZXJubWVudCBmcm9tIHByaW50aW5nIG1vcmUgYW5kIG1vcmUgbW9uZXkgYW5kIG1ha2luZyBpdCB3b3J0aCBsZXNzIElmIHlvdSBoYXZlIGFuIGlycmVzcG9uc2libGUgZ292ZXJubWVudCB0aGF0IGNvdWxkIGhhcHBlbiBUaGF0cyBub3Qgd2hhdCBvdXIgZ292ZXJubWVudCBoYXMgYmVlbiBkb2luZyBCZWxsIGF0IHRoZSByZWFsIGVzdGF0ZSBjb25mZXJlbmNlIHNhaWQgbGltaXRlZCBjYW1wYWlnbiBmdW5kcyBsZWF2ZSBoaW0gbGFja2luZyBiYW5kd2lkdGggaW4gdGhlIGVsZWN0aW9uIEkgY2FudCBnZXQgYWNyb3NzIHR3byBvciB0aHJlZSBkaWZmZXJlbnQgaWRlYXMgaGUgc2FpZCBTbyBoZXMgZm9jdXNpbmcgb24gdGhlIGdvbGQgc3RhbmRhcmQgYXMgaGlzIG1haW4gb25lIEl0cyB0aGUgbWFpbiB0aGluZyBoZSB0YWxrcyBhYm91dCBpbiBhIHJhZGlvIGFkIHRoYXQgaGUgdXNlZCBvbiBoaXMgd2F5IHRvIHdpbm5pbmcgYSBmb3VyY2FuZGlkYXRlIFJlcHVibGljYW4gcHJpbWFyeSBhbmQgdGhhdCBoZSBkdXN0ZWQgb2ZmIGFnYWluIHRoaXMgbW9udGggSW4gYSBzdGF0ZSB3aGVyZSBSZXB1YmxpY2FucyBoYXZlIG5vdCB3b24gYSBVUyBTZW5hdGUgZWxlY3Rpb24gc2luY2UgMTk3MiBoZSBpcyBzZWVuIGFzIGEgbG9uZ3Nob3QgYWdhaW5zdCBCb29rZXIgYSBmb3JtZXIgTmV3YXJrIG1heW9yIGFuZCBmdW5kcmFpc2luZyBqdWdnZXJuYXV0IEJ1dCBlYXJseSBwb2xscyBoYXZlIHNob3duIEJlbGwgdHJhaWxpbmcgYnkgYWJvdXQgMTAgcG9pbnRzICBjbG9zZSBlbm91Z2ggdGhhdCBHb3YgQ2hyaXMgQ2hyaXN0aWUgYSBSZXB1YmxpY2FuIGhhcyBzYWlkIGl0IHNob3VsZCBiZSB2aWV3ZWQgYXMgYSByZWFsIHJhY2UgQ2hyaXN0aWUgaGFzIGFsc28gYXBwZWFyZWQgYXQgYSBmdW5kcmFpc2VyIHdpdGggQmVsbCBhbmQgc2FpZCBuYXRpb25hbCBSZXB1YmxpY2FuIGdyb3VwcyBzaG91bGQgc3VwcG9ydCBCZWxsdAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAb2FydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2UsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEzLTEyLTAzVDAwOjAwOjAwWiBUTyAyMDE0LTA3LTEwVDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDc2MzU=</field><field name="title" class="java.lang.String">rO0ABXQAMkdvbGQgTWluZSBTdGlycyBIb3BlIGFuZCBBbmdlciBpbiBTaGF0dGVyZWQgR3JlZWNl</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUOKL2sAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDM3ZjBiZWZkMGM5ZWQyZWM=</field><field name="symbol" class="java.lang.String">rO0ABXQAB1dJTEQuUEs=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUOPVccAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+UeuFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+UeuFHrhR7</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+UeuFHrhR7</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+UeuFHrhR7</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+UeuFHrhR7</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDYzODY2ZWJhNGZlNDUyYTI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEqXAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDE2NDQ=</field><field name="title" class="java.lang.String">rO0ABXQAOVJ1c3NpYSBLbm93cyBFdXJvcGUgU2FuY3Rpb25zIEluZWZmZWN0aXZlIFdpdGggVGF4IEhhdmVucw==</field><field name="content" class="java.lang.String">rO0ABXRDBuKAnFlvdSBjYW4gcmVseSBvbiBvdXIgbGVnYWwgc3lzdGVtIeKAnSB0aGUgZmlybSwgQnVyZW4gdmFuIFZlbHplbiBHdWVsZW4sIHNhaWQgaW4gYSBzbGlkZSBwcmVzZW50YXRpb24uIFN1Y2ggYXBwZWFscyBoYXZlIHdvcmtlZCBvbiBhIGdyYW5kIHNjYWxlLiBSdXNzaWHigJlzIGJpZ2dlc3Qgb2lsLCBnYXMsIG1pbmluZyBhbmQgcmV0YWlsIGNvbXBhbmllcyDigJQgaW5jbHVkaW5nIHNvbWUgcnVuIGJ5IGJpbGxpb25haXJlcyBjbG9zZSB0byBQcmVzaWRlbnQgVmxhZGltaXIgUHV0aW4g4oCUIGhhdmUgbW92ZWQgdGVucyBvZiBiaWxsaW9ucyBvZiBjb3Jwb3JhdGUgYXNzZXRzIHRvIHRoZSBOZXRoZXJsYW5kcyBhbmQgb3RoZXIgRXVyb3BlYW4gY291bnRyaWVzIG9mdGVuIHVzZWQgZm9yIHRheCBhdm9pZGFuY2UgYW5kIGNhcGl0YWwgZmxpZ2h0LCBzdWNoIGFzIEx1eGVtYm91cmcsIEN5cHJ1cywgU3dpdHplcmxhbmQgYW5kIElyZWxhbmQuIFRoZSBmaXJtcyBpbmNsdWRlIE9BTyBSb3NuZWZ0LCBPQU8gR2F6cHJvbSwgT0FPIEx1a29pbCBhbmQgR2VuZXZhLWhlYWRxdWFydGVyZWQgR3Vudm9yIEdyb3VwIEx0ZC4sIHdoaWNoIHdhcyBjby1mb3VuZGVkIGJ5IGEgUHV0aW4gYXNzb2NpYXRlIG5vdyB1bmRlciBVLlMuIHNhbmN0aW9ucy4gQXMgYSByZXN1bHQsIGEgaGFuZGZ1bCBvZiBFdXJvcGVhbiB0YXggaGF2ZW5zIG1heSBob2xkIHRoZSBrZXkgdG8gcHJlc3N1cmluZyBSdXNzaWEgdG8gcHVsbCBiYWNrIGZyb20gVWtyYWluZS4gVGhlIGV4dGVuc2l2ZSB1c2Ugb2YgZm9yZWlnbiBzdWJzaWRpYXJpZXMgYnkgUnVzc2lh4oCZcyByaWNoZXN0IGJ1c2luZXNzbWVuIGV4cG9zZXMgdGhlaXIgYXNzZXRzIHRvIHNhbmN0aW9ucy4gWWV0IGNhcGl0YWxpemluZyBvbiB0aGlzIHZ1bG5lcmFiaWxpdHkgcmVxdWlyZXMgaGVscCBmcm9tIGNvdW50cmllcyB0aGF0IHJlbHkgZWNvbm9taWNhbGx5IG9uIFJ1c3NpYW4gY2FwaXRhbCBmbGlnaHQgYW5kIGhhdmUgdHJhZGl0aW9uYWxseSBwcm90ZWN0ZWQgaW52ZXN0b3JzIGFnYWluc3QgZm9yZWlnbiBsYXdzLiDigJxJZiBpdCBjYW4gYmUgc2hvd24gdGhhdCB0aGUgb3duZXJzLCB0aHJvdWdoIHRoZXNlIER1dGNoIHN0cnVjdHVyZXMsIGFyZSBwZW9wbGUgd2hvIGFyZSBzYW5jdGlvbmVkLCB0aGVyZeKAmXMgbm8gcXVlc3Rpb24gdGhhdCB0aG9zZSBhc3NldHMgY2FuIGJlIGZyb3plbizigJ0gc2FpZCBKYWNrIEJsdW0sIGEgZm9ybWVyIFUuUy4gU2VuYXRlIGludmVzdGlnYXRvciBhbmQgZXhwZXJ0IG9uIG1vbmV5IGxhdW5kZXJpbmcgYW5kIG9mZnNob3JlIGhhdmVucy4g4oCcVGhlIHF1ZXN0aW9uIGlzLCDigJhIb3cgZmFyIGlzIGFueW9uZSB3aWxsaW5nIHRvIGdvPyBBcmUgdGhlIFN3aXNzIGFuZCB0aGUgRHV0Y2ggYW5kIEx1eGVtYm91cmcgcHJlcGFyZWQgdG8gZG8gdGhhdD/igJkgRXZlcnlib2R54oCZcyBrbm93biB0aGlzIGhhcyBiZWVuIGdvaW5nIG9uIGZvciB5ZWFycy7igJ0gTWVya2Vs4oCZcyBTcGVlY2ggVGhlIE5ldGhlcmxhbmRzLCBDeXBydXMsIEx1eGVtYm91cmcgYW5kIElyZWxhbmQgYmVsb25nIHRvIHRoZSBFdXJvcGVhbiBVbmlvbiBhbmQgbXVzdCBjb21wbHkgd2l0aCBpdHMgcGVuYWx0aWVzIGFnYWluc3QgUnVzc2lhLiBIb3dldmVyLCB0aGV5IGhhdmUgZGlzY3JldGlvbiBvbiB3aGV0aGVyIHRvIHB1cnN1ZSB0b3VnaGVyLCB1bmlsYXRlcmFsIG1lYXN1cmVzIHNpbWlsYXIgdG8gdGhlIFUuUy4sIHdoaWNoIGlzIGNvbnNpZGVyZWQgdW5saWtlbHkuIFN3aXR6ZXJsYW5kIGlzIG5vdCBpbiB0aGUgRVUuIE1hbnkgRXVyb3BlYW4gY291bnRyaWVzIGhhdmUgYmVlbiBhbWJpdmFsZW50IGFib3V0IGNyYWNraW5nIGRvd24gb24gUnVzc2lhIGJlY2F1c2UgaXQgc3VwcGxpZXMgbXVjaCBvZiB0aGVpciBvaWwgYW5kIGdhcyBhbmQgaXMgYWxzbyBhIHNpZ25pZmljYW50IHNvdXJjZSBvZiBpbnZlc3RtZW50IGluIGFzc2V0cyBzdWNoIGFzIHByaW1lIHJlYWwgZXN0YXRlIGluIExvbmRvbi4gR2VybWFuIENoYW5jZWxsb3IgQW5nZWxhIE1lcmtlbCBzYWlkIE1heSAyIHRoYXQgc2hl4oCZcyByZWFkeSB0byBzdXBwb3J0IHNhbmN0aW9ucyBhZ2FpbnN0IFJ1c3NpYSBpZiBpdCBpbnRlcmZlcmVzIHdpdGggVWtyYWluZeKAmXMgTWF5IDI1IHByZXNpZGVudGlhbCBlbGVjdGlvbi4g4oCcSXTigJlzIGNyaXRpY2FsIHRvIGdldCBvbiBib2FyZCB0aGUgYmFua2luZyBjZW50ZXJzIG9yIHBsYWNlcyB3aGVyZSBSdXNzaWFucyBoYXZlIGZvdW5kIGF2ZW51ZXMgb3IgdmVoaWNsZXMgdG8gaW52ZXN0IG9yIG5lc3QgcHJvcGVydHks4oCdIHNhaWQgSnVhbiBaYXJhdGUsIGEgZm9ybWVyIGRlcHV0eSBVLlMuIG5hdGlvbmFsIHNlY3VyaXR5IGFkdmlzZXIgYW5kIGF1dGhvciBvZiDigJxUcmVhc3VyeeKAmXMgV2FyOiBUaGUgVW5sZWFzaGluZyBvZiBhIE5ldyBFcmEgb2YgRmluYW5jaWFsIFdhcmZhcmUu4oCdIFZvbGdhIFNhbmN0aW9uZWQgVGhlIDE5IGNvbXBhbmllcyBzYW5jdGlvbmVkIGJ5IHRoZSBVLlMuIGluY2x1ZGUgTHV4ZW1ib3VyZy1iYXNlZCBWb2xnYSBHcm91cCBhbmQgMTAgb2YgaXRzIHVuaXRzLCBhY2NvcmRpbmcgdG8gdGhlIFUuUy4gVHJlYXN1cnkuIEx1eGVtYm91cmcgaGFkLCBieSBhIG5hcnJvdyBtYXJnaW4sIHRoZSBtb3N0IGZvcmVpZ24gZGlyZWN0IGludmVzdG1lbnQgaW4gUnVzc2lhIGluIDIwMTIgb2YgYW55IGNvdW50cnksIGZvbGxvd2VkIGJ5IHRoZSBOZXRoZXJsYW5kcyBhbmQgSXJlbGFuZCwgdGhlIG1vc3QgcmVjZW50IGZ1bGwteWVhciBSdXNzaWFuIGNlbnRyYWwgYmFuayBkYXRhIHNob3dzLiBUaG9zZSBmaWd1cmVzIGxpa2VseSByZWZsZWN0IG1vbmV5IHJldHVybmluZyB0byBSdXNzaWFuIGludmVzdG9ycyBhZnRlciBoYXZpbmcgYmVlbiByb3V0ZWQgdGhyb3VnaCB0aG9zZSBjb3VudHJpZXMsIHNhaWQgTG91aXNlIFNoZWxsZXksIGRpcmVjdG9yIG9mIHRoZSB0ZXJyb3Jpc20sIHRyYW5zbmF0aW9uYWwgY3JpbWUgYW5kIGNvcnJ1cHRpb24gY2VudGVyIGF0IEdlb3JnZSBNYXNvbiBVbml2ZXJzaXR5IGluIEZhaXJmYXgsIFZpcmdpbmlhLiBZZXQgTHV4ZW1ib3VyZyBpc27igJl0IGxpa2VseSB0byBpbXBsZW1lbnQgbWVhc3VyZXMgdGhhdCBnbyBiZXlvbmQgdGhlIEVV4oCZcywgc2FpZCBFLiBXYXluZSBNZXJyeSwgU2VuaW9yIEZlbGxvdyBmb3IgRXVyb3BlIGFuZCBFdXJhc2lhIGF0IHRoZSBBbWVyaWNhbiBGb3JlaWduIFBvbGljeSBDb3VuY2lsIGluIFdhc2hpbmd0b24uIOKAnEx1eGVtYm91cmcgaXMgdmVyeSBnb29kIGF0IHNheWluZywg4oCYV2XigJlyZSBub3QgZ2l2aW5nIG91ciBhcHByb3ZhbCBmb3IgdGhpbmdzIHRoYXQgbWF5IGhhdmUgaGFwcGVuZWQgc29tZXdoZXJlIGVsc2UsIGJ1dCB3ZeKAmXJlIG1haW50YWluaW5nIHN0cmljdCBydWxlIG9mIGxhdyB3aXRoIHdoYXQgaGFwcGVucyB3aXRoaW4gdGhlIEdyYW5kIER1Y2h5LOKAmeKAnSBNZXJyeSBzYWlkLiBMb3cgVGF4ZXMgVmVyb25pcXVlIFBpcXVhcmQsIGEgc3Bva2Vzd29tYW4gZnJvbSB0aGUgTHV4ZW1ib3VyZyBtaW5pc3RyeSBvZiBmaW5hbmNlLCBkaWRu4oCZdCByZXNwb25kIHRvIGUtbWFpbGVkIHF1ZXN0aW9ucyBhbmQgdGhyZWUgcGhvbmUgY2FsbHMgc2Vla2luZyBjb21tZW50LiBJbiB0aGUgTmV0aGVybGFuZHMsIHNhbmN0aW9ucyBoYXZlIHByb21wdGVkIGFuIGV4YW1pbmF0aW9uIG9mIHRoZSBjb3VudHJ54oCZcyByb2xlIGFzIGEgcG9wdWxhciB3YXkgc3RhdGlvbiBmb3IgY29tcGFuaWVzIGFuZCBpbmR1c3RyaWFsaXN0cyByb3V0aW5nIHByb2ZpdHMgdG8gbG93LXRheCBqdXJpc2RpY3Rpb25zIGxpa2UgQmVybXVkYSBhbmQgdGhlIEJyaXRpc2ggVmlyZ2luIElzbGFuZHMuIE9uIE1heSAxNSwgdGhlIER1dGNoIFBhcmxpYW1lbnQgd2lsbCBob2xkIGEgZGViYXRlIG9uIGhvdyBSdXNzaWFuIGFuZCBVa3JhaW5pYW4gbWFnbmF0ZXMgYW5kIGNvbXBhbmllcyBoYXZlIHVzZWQgdGhlIE5ldGhlcmxhbmRzIHRvIGRvZGdlIHRheGVzLiBQdXRpbiBoYXMgYmVlbiB1cmdpbmcgaGlzIGNvdW50cnnigJlzIGJ1c2luZXNzbWVuIGZvciBtb3JlIHRoYW4gYSB5ZWFyIHRvIGJyaW5nIHRoZWlyIGNhcGl0YWwgYmFjayBob21lLiDigJxSdXNzaWFuIGNvbXBhbmllcyBoYXZlIHRvIGJlIHJlZ2lzdGVyZWQgaGVyZSwgaW4gdGhlaXIgaG9tZSBjb3VudHJ5LCBhbmQgaGF2ZSBhIHRyYW5zcGFyZW50IG93bmVyc2hpcCBzdHJ1Y3R1cmUs4oCdIFB1dGluIHNhaWQgYXQgYSBNYXJjaCAyMCBidXNpbmVzcyBjb25mZXJlbmNlIGluIE1vc2Nvdy4gSW5zdGVhZCwgc29tZSAkNTEgYmlsbGlvbiBvZiBSdXNzaWFuIGNhcGl0YWwgZXhpdGVkIHRoZSBjb3VudHJ5IGluIHRoZSBmaXJzdCBxdWFydGVyIG9mIDIwMTQsIGFjY29yZGluZyB0byBjZW50cmFsIGJhbmsgZGF0YS4gVGhhdCBmaWd1cmUgaGFzIHJpc2VuIHRvIG1vcmUgdGhhbiAkNjAgYmlsbGlvbiwgVS5LLiBGb3JlaWduIFNlY3JldGFyeSBXaWxsaWFtIEhhZ3VlIHNhaWQgbGFzdCB3ZWVrLiBBIHRvdGFsIG9mICQ2MyBiaWxsaW9uIGZsb3dlZCBvdXQgb2YgUnVzc2lhIGxhc3QgeWVhci4gVS5TLiBTYW5jdGlvbnMgVGhlIFUuUy4gaGFzIGlzc3VlZCBmb3VyIHJvdW5kcyBvZiBzYW5jdGlvbnMgYWdhaW5zdCBpbmRpdmlkdWFscyBhbmQgY29tcGFuaWVzIGluIHJlc3BvbnNlIHRvIFJ1c3NpYeKAmXMgc2VpenVyZSBvZiBDcmltZWEsIFVrcmFpbmXigJlzIG1haW5seSBSdXNzaWFuLXNwZWFraW5nIHBlbmluc3VsYSB0aGF0IGp1dHMgaW50byB0aGUgQmxhY2sgc2VhLCBhbmQgaXRzIGFsbGVnZWQgYmFja2luZyBvZiBwcm8tUnVzc2lhbiBtaWxpdGFudHMgd2hvIGhhdmUgdGFrZW4gb3ZlciBwYXJ0IG9mIGVhc3Rlcm4gVWtyYWluZS4gUnVzc2lhbiBmb3JjZXMsIGVzdGltYXRlZCBieSB0aGUgTm9ydGggQXRsYW50aWMgVHJlYXR5IE9yZ2FuaXphdGlvbiB0byBudW1iZXIgYWJvdXQgNDAsMDAwLCBjb250aW51ZSB0byBtYXNzIG9uIFVrcmFpbmXigJlzIGJvcmRlciwgYWN0aW5nIFByZXNpZGVudCBPbGVrc2FuZHIgVHVyY2h5bm92IHNhaWQgb24gQXByaWwgMzAuIExhc3Qgd2VlaywgIHRoZSBVLlMuIHBsYWNlZCBJZ29yIFNlY2hpbiwgdGhlIENFTyBvZiBzdGF0ZS0gY29udHJvbGxlZCBSb3NuZWZ0LCBSdXNzaWHigJlzIGxhcmdlc3Qgb2lsIHByb2R1Y2VyLCBvbiBpdHMgc2FuY3Rpb25zIGxpc3QuIEhpcyBjb21wYW55LCB3aGljaCB3YXMgbm90IHB1dCBvbiBhIGJsYWNrbGlzdCwgaGFzIGJpbGxpb25zIG9mIGRvbGxhcnMgaW4gYXNzZXRzIGluIGEgc2VyaWVzIG9mIEx1eGVtYm91cmcgdmVoaWNsZXMsIHJlY29yZHMgc2hvdy4gVGhlIGNvbXBhbnkgaGFzIGFsc28gdXNlZCB1bml0cyBpbiBDeXBydXMsIElyZWxhbmQsIFN3aXR6ZXJsYW5kIGFuZCB0aGUgTmV0aGVybGFuZHMuIEl0cyBJcmlzaCBzdWJzaWRpYXJ5IHJlcG9ydGVkIG1vcmUgdGhhbiAkMiBiaWxsaW9uIGluIGdyb3NzIHJldmVudWUgaW4gMjAxMiwgYWNjb3JkaW5nIHRvIGl0cyBtb3N0IHJlY2VudCBmaWxpbmcuIEdlbm5hZHkgVGltY2hlbmtvIFJvc25lZnTigJlzIGZvcmVpZ24gc3Vic2lkaWFyaWVzIGFuZCBjb21wYW5pZXMgd2VyZSBwcmltYXJpbHkgZXN0YWJsaXNoZWQgYnkgcHJldmlvdXMgb3duZXJzLCBhIGNvbXBhbnkgcmVwcmVzZW50YXRpdmUgc2FpZCBpbiBhbiBlLW1haWxlZCBzdGF0ZW1lbnQuIFRoZXNlIGNvbXBhbmllcyBhcmUg4oCcZG9ybWFudCBpbiBSb3NuZWZ0IGFuZCBhcmUgZGVzdGluZWQgZm9yIGxpcXVpZGF0aW9u4oCdIG9uY2UgY29udHJhY3RzIGhhdmUgZXhwaXJlZCwgUm9zbmVmdCBzYWlkLiBBbHNvIHVuZGVyIFUuUy4gc2FuY3Rpb25zIGlzIEdlbm5hZHkgVGltY2hlbmtvLCBjby1mb3VuZGVyIG9mIEd1bnZvciwgdGhlIG9pbCB0cmFkaW5nIGNvbXBhbnkgaW4gd2hpY2ggdGhlIFUuUy4gaGFzIGFsbGVnZWQgUHV0aW4gaGFzIGludmVzdG1lbnRzLiBHdW52b3IsIHdoaWNoIGlzbuKAmXQgdW5kZXIgVS5TLiBzYW5jdGlvbnMsIGhhcyBkZW5pZWQgdGhlIGFsbGVnYXRpb25zIGFuZCBzYWlkIGl0IGhhcyBuZXZlciBoYWQgYW55IGxpbmtzIHRvIFB1dGluLiBBIGZvcm1lciBTb3ZpZXQgVHJhZGUgTWluaXN0cnkgb2ZmaWNpYWwsIFRpbWNoZW5rbyBtZXQgUHV0aW4gaW4gdGhlIDE5OTBzIGFuZCBsYXRlciBzcG9uc29yZWQgYSBTdC4gUGV0ZXJzYnVyZyBqdWRvIGNsdWIgd2hlcmUgUHV0aW4gc2VydmVkIGFzIGhvbm9yYXJ5IHByZXNpZGVudC4gQWZ0ZXIgUHV0aW4gc2VpemVkIGNvbnRyb2wgb2YgcG9saXRpY2FsIG9wcG9uZW50IE1pa2hhaWwgS2hvZG9ya292c2t54oCZcyBZdWtvcyBPaWwgQ28uIGluIDIwMDMsIG1hbnkgb2YgaXRzIG1vc3QgdmFsdWFibGUgYXNzZXRzIGVuZGVkIHVwIGluIHRoZSBoYW5kcyBvZiBSb3NuZWZ0LiBSb3NuZWZ0IHRoZW4gYXdhcmRlZCBzb21lIHRyYWRpbmcgY29udHJhY3RzIHRvIEd1bnZvciwgaGVscGluZyB0aGUgY29tcGFueSBiZWNvbWUgb25lIG9mIHRoZSBiaWdnZXN0IHRyYWRlcnMgb2YgUnVzc2lhbiBjcnVkZSBvaWwuIFRpbWNoZW5rbyBoYXMgc2FpZCB0aGF0IGhpcyBmcmllbmRzaGlwIHdpdGggUHV0aW4gaXMgb3ZlcmJsb3duIGFuZCB0aGF0IGl0IGhhc27igJl0IGhlbHBlZCBoaXMgYnVzaW5lc3Nlcy4gRHV0Y2ggVW5pdCBEZXNwaXRlIGl0cyBpbml0aWFsIGZvY3VzIG9uIHRyYWRpbmcgUnVzc2lhbiBvaWwsIG1vc3Qgb2YgR3Vudm9y4oCZcyBzYWxlcyB3ZXJlIHJvdXRlZCB0aHJvdWdoIGEgRHV0Y2ggdW5pdCwgR3Vudm9yIEludGVybmF0aW9uYWwgQlYsIG9wZXJhdGluZyB0aHJvdWdoIGEgYnJhbmNoIGluIEdlbmV2YS4gSW4gMjAxMCwgdGhlIGxhc3QgdGltZSBpdCBmaWxlZCBhbiBhbm51YWwgcmVwb3J0IGluIHRoZSBOZXRoZXJsYW5kcywgdGhlIHN1YnNpZGlhcnkgcmVwb3J0ZWQgJDU5IGJpbGxpb24gaW4gcmV2ZW51ZSwgbW9yZSB0aGFuIDkwIHBlcmNlbnQgb2YgR3Vudm9y4oCZcyB0b3RhbCBzYWxlcy4gVGhhbmtzIHRvIGEgcnVsaW5nIGZyb20gRHV0Y2ggdGF4IGF1dGhvcml0aWVzLCB0aGUgdW5pdCB3YXMgYWJsZSB0byBhbGxvY2F0ZSBtb3N0IG9mIGl0cyBwcm9maXQgdG8gaXRzIFN3aXNzIGJyYW5jaCwgaGVscGluZyB0byBjdXQgR3Vudm9y4oCZcyBnbG9iYWwgdGF4IGJpbGwsIGRpc2Nsb3N1cmVzIHNob3cuIOKAnEd1bnZvciBHcm91cCBpcyBzdHJ1Y3R1cmVkIGZvciBvcHRpbWFsIHRheCBwbGFubmluZyBwdXJwb3NlcywgdGhlIHNhbWUgYXMgb3RoZXIgZ2xvYmFsIHRyYWRpbmcgaG91c2VzLOKAnSBhbmQg4oCcb3BlcmF0ZXMgaW4gZnVsbCBjb21wbGlhbmNlIHdpdGggYWxsIGFwcGxpY2FibGUgdGF4IGxhd3MgYW5kIHJlZ3VsYXRpb25zLOKAnSBTZXRoIFBpZXRyYXMsIGEgR3Vudm9yIHNwb2tlc21hbiwgc2FpZCBpbiBhbiBlLW1haWwuIEd1bnZvciwgd2hpY2ggaW4gcmVjZW50IHllYXJzIGhhcyBzbGFzaGVkIGl0cyBkZXBlbmRlbmNlIG9uIFJ1c3NpYW4gb2lsIGFuZCBkaXZlcnNpZmllZCBpbnRvIHRyYWRpbmcgbWV0YWxzIGFuZCBjb2FsLCByZXBvcnRlZCBuZXQgaW5jb21lIG9mICQzMDggbWlsbGlvbiBmb3IgbGFzdCB5ZWFyIG9uIHJldmVudWUgb2YgJDkxIGJpbGxpb24uIOKAmExpbmtlZCB0byBQdXRpbuKAmSBUaW1jaGVua28sIHdob3NlIG5ldCB3b3J0aCBpcyAkNy45IGJpbGxpb24gYWNjb3JkaW5nIHRvIHRoZSBCbG9vbWJlcmcgQmlsbGlvbmFpcmVzIEluZGV4LCBzb2xkIGhpcyA0NCBwZXJjZW50IHN0YWtlIGluIEd1bnZvciB0byBoaXMgYnVzaW5lc3MgcGFydG5lciwgU3dlZGlzaCBuYXRpb25hbCBUb3Jiam9ybiBUb3JucXZpc3QsIG9uIE1hcmNoIDE5LCBhIGRheSBiZWZvcmUgdGhlIFUuUy4gaW1wb3NlZCBzYW5jdGlvbnMgYWdhaW5zdCBoaW0uIFRpbWNoZW5rbyBvd25zIGEgcmVzaWRlbmNlIGluIENvbG9nbnksIGEgd2VhbHRoeSBlbmNsYXZlIG9mIEdlbmV2YS4g4oCcVGltY2hlbmtv4oCZcyBhY3Rpdml0aWVzIGluIHRoZSBlbmVyZ3kgc2VjdG9yIGhhdmUgYmVlbiBkaXJlY3RseSBsaW5rZWQgdG8gUHV0aW4s4oCdIHRoZSBVLlMuIFRyZWFzdXJ5IERlcGFydG1lbnQgc2FpZCBpbiBhIHN0YXRlbWVudCBNYXJjaCAyMC4g4oCcUHV0aW4gaGFzIGludmVzdG1lbnRzIGluIEd1bnZvciBhbmQgbWF5IGhhdmUgYWNjZXNzIHRvIEd1bnZvciBmdW5kcy7igJ0gVGltY2hlbmtvIG93bnMgb3IgY29udHJvbHMgYXQgbGVhc3QgMTAgY29tcGFuaWVzIHRocm91Z2ggaGlzIEx1eGVtYm91cmctYmFzZWQgVm9sZ2EgR3JvdXAsIHRoZSBjb21wYW554oCZcyB3ZWJzaXRlIHNob3dzLiBTdHVhcnQgTGVhc29yLCBhIFZvbGdhIEdyb3VwIHNwb2tlc21hbiwgZGVjbGluZWQgdG8gY29tbWVudC4gR2F6cHJvbSwgdGhlIHN0YXRlLW93bmVkIGdhcyBjb21wYW55IHdob3NlIENFTyBBbGV4ZXkgTWlsbGVyIGlzIGFsc28gY29uc2lkZXJlZCBwYXJ0IG9mIFB1dGlu4oCZcyBpbm5lciBjaXJjbGUsIHJlcG9ydGVkICQxNCBiaWxsaW9uIG9mIGFzc2V0cyBpbiBhIHRpbnkgRHV0Y2ggdW5pdCB0aGF0IGVtcGxveXMganVzdCAxNCBwZW9wbGUsIGFjY29yZGluZyB0byBmaWxpbmdzLiBNaWxsZXIgYW5kIEdhenByb20gaGF2ZW7igJl0IGJlZW4gcGxhY2VkIG9uIGFueSBzYW5jdGlvbnMgbGlzdC4gRmlydGFzaCBBcnJlc3RlZCBHYXpwcm9tIHdvdWxkIGNvbnNpZGVyIGFwcHJvcHJpYXRlIG1lYXN1cmVzIGlmIGNvbmRpdGlvbnMgY2hhbmdlLCBTZXJnZWkgS3Vwcml5YW5vdiwgYSBzcG9rZXNtYW4gZm9yIHRoZSBNb3Njb3ctYmFzZWQgZ2FzIGV4cG9ydGVyLCBzYWlkIGJ5IHRleHQgbWVzc2FnZSwgd2l0aG91dCBlbGFib3JhdGluZy4gVWtyYWluaWFucyB3aG8gYXJlIGNsb3NlIHRvIFJ1c3NpYSBoYXZlIGhlbGQgdGhlaXIgYXNzZXRzIGluIHRheCBoYXZlbnMgYXMgd2VsbC4gQmlsbGlvbmFpcmUgRG1pdHJ5IEZpcnRhc2ggbWFkZSBoaXMgZm9ydHVuZSBhcyBhIG1pZGRsZW1hbiBpbiBHYXpwcm9t4oCZcyBzZWNyZXRpdmUgZ2FzIHRyYWRlIHdpdGggVWtyYWluZSB0aHJvdWdoIHBhcnRpYWwgb3duZXJzaGlwIGluIGEgU3dpc3MgY29tcGFueSwgUm9zVWtyRW5lcmdvLiBIZSB3YXMgYXJyZXN0ZWQgaW4gVmllbm5hIGluIE1hcmNoIG9uIFUuUy4gYnJpYmVyeSBjaGFyZ2VzLiBGaXJ0YXNoIHdyb3RlIEFwcmlsIDMgb24gaGlzIHBlcnNvbmFsIHdlYnNpdGUgdGhhdCB0aGUgYWxsZWdhdGlvbnMgYXJlIOKAnGNvbXBsZXRlbHkgYWJzdXJkIGFuZCB1bmZvdW5kZWTigJ0gYW5kIGhl4oCZcyBjb25maWRlbnQgdGhleSB3aWxsIGJlIGRpc21pc3NlZC4gRnJvemVuIEFzc2V0cyBPbGVrc2FuZHIgWWFudWtvdnljaCBvd25zIGEgU3dpc3MgY29tbW9kaXR5IHRyYWRpbmcgY29tcGFueSB0aHJvdWdoIGEgRHV0Y2ggaG9sZGluZyB1bml0LiBIZeKAmXMgdGhlIHNvbiBvZiBvdXN0ZWQgVWtyYWluZSBwcmVzaWRlbnQgVmlrdG9yIFlhbnVrb3Z5Y2gsIHdobyBmbGVkIHRvIFJ1c3NpYSBpbiBGZWJydWFyeS4gVGhhdCBzYW1lIG1vbnRoLCBTd2lzcyBwb2xpY2UgcmFpZGVkIGFuZCBzZWl6ZWQgZG9jdW1lbnRzIGF0IHRoZSBHZW5ldmEgb2ZmaWNlcyBvZiBPbGVrc2FuZHLigJlzIGZpcm0gYXMgcGFydCBvZiBhbiBpbnZlc3RpZ2F0aW9uIGludG8gYWxsZWdlZCBtb25leSBsYXVuZGVyaW5nLiBUaGUgY2FzZSBpcyBzdGlsbCB1bmRlciBpbnZlc3RpZ2F0aW9uICBhbmQgbm8gY2hhcmdlcyBoYXZlIGJlZW4gZmlsZWQsIGFjY29yZGluZyB0byBTd2lzcyBhdXRob3JpdGllcy4gVmlrdG9yIFlhbnVrb3Z5Y2ggYW5kIGhpcyBzb24gaGF2ZSBib3RoIGJlZW4gc2FuY3Rpb25lZCBieSB0aGUgRVUuIFN3aXR6ZXJsYW5kIGhhcyBpc3N1ZWQgYSBkZWNyZWUgZnJlZXppbmcgYWxsIGFzc2V0cyBWaWt0b3IgWWFudWtvdnljaCBhbmQgaGlzIGVudG91cmFnZSBtaWdodCBoYXZlIGluIFN3aXR6ZXJsYW5kLiBTd2l0emVybGFuZOKAmXMgZmVkZXJhbCBwcm9zZWN1dG9yIGhhcyBmcm96ZW4gMTcwIG1pbGxpb24gU3dpc3MgZnJhbmNzICgkMTkzLjggbWlsbGlvbikgb2YgYXNzZXRzIGluIGJhbmsgYWNjb3VudHMgYmVsb25naW5nIHRvIFZpa3RvciBZYW51a292eWNoIGFuZCBwZW9wbGUgY2xvc2UgdG8gaGltLCBTd2lzcyBuZXdzcGFwZXIgWmVudHJhbHNjaHdlaXogYW0gU29ubnRhZyByZXBvcnRlZC4gSW4gYWRkaXRpb24gdG8gY29tcGFuaWVzLCB0aGUgVS5TLiBoYXMgc28gZmFyIHNhbmN0aW9uZWQgNDUgaW5kaXZpZHVhbHMsIGluY2x1ZGluZyBmb3VyIGl0IGRlc2lnbmF0ZWQgYXMgbWVtYmVycyBvZiBQdXRpbuKAmXMgaW5uZXIgY2lyY2xlOiBUaW1jaGVua28sIEFya2FkeSBhbmQgQm9yaXMgUm90ZW5iZXJnIGFuZCBZdXJ5IEtvdmFsY2h1ay4g4oCYR2V0LU91dOKAmSBDbGF1c2UgVGhlIHNhbmN0aW9ucyBtZWFuIHRoYXQgYW55IFUuUy4gYXNzZXRzIG9mIHRob3NlIHBlb3BsZSBvciBjb21wYW5pZXMgbmFtZWQgYXJlIGZyb3plbiBhbmQgQW1lcmljYW5zIGFyZSBnZW5lcmFsbHkgcHJvaGliaXRlZCBmcm9tIGRlYWxpbmcgd2l0aCB0aGVtLiBXaGlsZSBub24tQW1lcmljYW5zIGFyZW7igJl0IGJvdW5kIHRvIGZvbGxvdyBVLlMuIHNhbmN0aW9ucywgc29tZSBiYW5rcyBhbmQgY29tcGFuaWVzIG1ha2UgYSBwb2ludCBvZiBkb2luZyBzbyBpbiBvcmRlciB0byBlbnN1cmUgdGhlaXIgYWNjZXNzIHRvIFUuUy4gbWFya2V0cyBpc27igJl0IGNvbXByb21pc2VkLiDigJxTYW5jdGlvbnMgaW4gc29tZSB3YXlzIGdpdmUgRXVyb3BlYW4gY291bnRyaWVzIGEg4oCYZ2V0LW91dOKAmSBjbGF1c2Us4oCdIHNhaWQgTWFyayBHYWxlb3R0aSwgYSBOZXcgWW9yayBVbml2ZXJzaXR5IHByb2Zlc3NvciBhbmQgUnVzc2lhbiBvcmdhbml6ZWQgY3JpbWUgZXhwZXJ0IHdobyBhZHZpc2VzIHJlZ3VsYXRvcnMgb24gbW9uZXkgbGF1bmRlcmluZy4g4oCcSXQgYWxsb3dzIGNvdW50cmllcywgc2F5LCB0aGUgTmV0aGVybGFuZHMsIHRvIHNheSDigJhsb29rLCBpZiBpdCB3YXMgdXAgdG8gdXMgd2Ugd291bGRu4oCZdCBiZSBwdXR0aW5nIHRoaXMgcHJlc3N1cmUgb24geW91LCBidXQgdGhlIEFtZXJpY2FucyBhcmUgYmVnaW5uaW5nIHRvIHBsYXkgaGFyZGJhbGwu4oCZ4oCdIFdoaWxlIHRoZXJlIGlzIHNvbWUgb3ZlcmxhcCBiZXR3ZWVuIHRoZSBFdXJvcGVhbiBVbmlvbuKAmXMgc2FuY3Rpb24gbGlzdHMgYW5kIHRoZSBvbmUgY29tcGlsZWQgYnkgdGhlIFUuUy4sIEV1cm9wZSBoYXMgZm9jdXNlZCBtYWlubHkgb24gZ292ZXJubWVudCBvZmZpY2lhbHMuIEl0IGhhcyBhc3NlbWJsZWQgYSBibGFja2xpc3Qgb2YgNzAgbWVtYmVycywgd2hvc2UgYXNzZXRzIGluIEV1cm9wZSBhcmUgbm93IGZyb3plbi4gVGhleSBhcmUgbm90IHBlcm1pdHRlZCB0byB0cmF2ZWwgd2l0aGluIHRoZSBFVS4gRWNvbm9taWMgVGllcyBTd2l0emVybGFuZCBoYXMgaXNzdWVkIGFuIG9yZGluYW5jZSB0aGF0IHByZXZlbnRzIGZpbmFuY2lhbCBpbnRlcm1lZGlhcmllcyBpbiBTd2l0emVybGFuZCBmcm9tIGVudGVyaW5nIGludG8gbmV3IGJ1c2luZXNzIHdpdGggdGhlIGluZGl2aWR1YWxzIHNhbmN0aW9uZWQgYnkgdGhlIEVVIG9yIGZyb20gdHJhbnNmZXJyaW5nIGFueSBhc3NldHMgdG8gU3dpdHplcmxhbmQgZnJvbSBpbnNpZGUgb3Igb3V0c2lkZSB0aGUgRVUuIEFzc2V0cyBoZWxkIGluIFN3aXR6ZXJsYW5kIHdvbuKAmXQgYmUgZnJvemVuIGFuZCBleGlzdGluZyBidXNpbmVzcyByZWxhdGlvbnNoaXBzIGludm9sdmluZyB0aG9zZSBzYW5jdGlvbmVkIGFyZSBub3Qgc3ViamVjdCB0byB0aGUgYmFuLiBFY29ub21pYyB0aWVzIGJldHdlZW4gU3dpdHplcmxhbmQgYW5kIFJ1c3NpYSBydW4gZGVlcC4gQWJvdXQgNzUgcGVyY2VudCBvZiBSdXNzaWFuIHNlYS1ib3VuZCBjcnVkZSBleHBvcnRzIGFyZSBoYW5kbGVkIGJ5IFN3aXNzLWJhc2VkIHRyYWRpbmcgZmlybXMgaW5jbHVkaW5nIEd1bnZvciwgYWNjb3JkaW5nIHRvIHRoZSBHZW5ldmEgVHJhZGUgYW5kIFNoaXBwaW5nIEFzc29jaWF0aW9uLCBhbiBpbmR1c3RyeSBsb2JieSBncm91cC4gUnVzc2lhbiBlbmVyZ3kgY29tcGFuaWVzIGluY2x1ZGluZyBSb3NuZWZ0LCBHYXpwcm9tIGFuZCBMdWtvaWwgYWxsIGhhdmUgdHJhZGluZyBvcGVyYXRpb25zIG9yIHN1YnNpZGlhcnkgY29tcGFuaWVzIGluIFN3aXR6ZXJsYW5kLiBTd2lzcyBQcm9wZXJ0aWVzIFN3aXNzIGJhbmtzIGhlbGQgMTMuOCBiaWxsaW9uIFN3aXNzIGZyYW5jcyAoJDE1LjcgYmlsbGlvbikgd29ydGggb2YgUnVzc2lhbiBtb25leSBpbiAyMDEyLCBhY2NvcmRpbmcgdG8gdGhlIGxhdGVzdCBhdmFpbGFibGUgc3RhdGlzdGljcyBmcm9tIHRoZSBTd2lzcyBOYXRpb25hbCBCYW5rLiBNb3JlIHRoYW4gYSBkb3plbiBSdXNzaWFuIGFuZCBVa3JhaW5pYW4gaW5kdXN0cmlhbGlzdHMgaGF2ZSBidXNpbmVzcyBpbnRlcmVzdHMsIGNoYXJpdHkgb3BlcmF0aW9ucyBvciBvd24gcHJvcGVydHkgaW4gU3dpdHplcmxhbmQsIFRhZ2VzIEFuemVpZ2VyLCBhIFp1cmljaCBuZXdzcGFwZXIgcmVwb3J0ZWQgaW4gTWFyY2guIEFuZHJlaSBLbGlzaGFzLCB0aGUgcG9saXRpY2lhbiBhbmQgbWV0YWxzIGJ1c2luZXNzbWFuIHdobyB3YXMgc2FuY3Rpb25lZCBieSBib3RoIHRoZSBFVSBhbmQgdGhlIFUuUy4sIG93bnMgYW4gZXN0YXRlIGluIFRpY2lubywgbmVhciB0aGUgSXRhbGlhbiBib3JkZXIuIFN3aXR6ZXJsYW5kIGlzIOKAnGNsb3NlbHnigJ0gbW9uaXRvcmluZyB0aGUgc2l0dWF0aW9uIGluIFVrcmFpbmUgYW5kIHRoZSBzYW5jdGlvbnMgaW1wb3NlZCBieSBpdHMg4oCcbW9zdCBpbXBvcnRhbnQgdHJhZGluZyBwYXJ0bmVycyzigJ0gTWFyaWUgQXZldCwgYSBzcG9rZXN3b21hbiBmb3IgU3dpdHplcmxhbmTigJlzIFN0YXRlIFNlY3JldGFyaWF0IGZvciBFY29ub21pYyBBZmZhaXJzLCBzYWlkIGluIGFuIGUtbWFpbGVkIHN0YXRlbWVudC4g4oCcU3dpdHplcmxhbmQgY291bGQgdGFrZSBmdXJ0aGVyIG1lYXN1cmVzIGRlcGVuZGluZyBvbiBob3cgdGhlIHNpdHVhdGlvbiBkZXZlbG9wcyzigJ0gc2hlIHNhaWQuIEtpZXYgU2VtaW5hciBBIHdpZGUgc3dhdGggb2YgbXVsdGluYXRpb25hbCBjb21wYW5pZXMsIGluY2x1ZGluZyBHb29nbGUgSW5jLiwgWWFob28hIEluYy4gYW5kIFBmaXplciBJbmMuLCBoYXZlIG1vdmVkIHRoZWlyIHByb2ZpdHMgdGhyb3VnaCB0aGUgTmV0aGVybGFuZHMuIEl0IGF0dHJhY3RzIGdsb2JhbCBjb3Jwb3JhdGlvbnMgYmVjYXVzZSBvZiBpdHMgZXh0ZW5zaXZlIHRheCB0cmVhdHkgbmV0d29yayBhbmQgbGFjayBvZiB3aXRoaG9sZGluZyB0YXhlcyBvbiB2YXJpb3VzIHBheW1lbnRzIGxlYXZpbmcgdGhlIGNvdW50cnkgZm9yIGlzbGFuZCBoYXZlbnMgbGlrZSBCZXJtdWRhLiBUaGUgY291bnRyeSBoYXMgcHJvbW90ZWQgdGhlc2UgZmVhdHVyZXMgaW50ZXJuYXRpb25hbGx5LCBpbmNsdWRpbmcgaW4gVWtyYWluZS4gTGFzdCBOb3ZlbWJlciwgdGhlIER1dGNoIGVtYmFzc3kgaW4gS2lldiBob3N0ZWQgYSBzZW1pbmFyLCB3aG9zZSBvcmdhbml6ZXJzIGluY2x1ZGVkIGludGVybmF0aW9uYWwgbGF3IGZpcm0gRExBIFBpcGVyLiBUaGUgZXZlbnQsIHRpdGxlZCDigJxEdXRjaCBob2xkaW5nIGNvbXBhbmllczogbmV3IG9wcG9ydHVuaXRpZXMgZm9yIHN0cnVjdHVyaW5nIG9mIFVrcmFpbmlhbiBidXNpbmVzcyzigJ0gaW5jbHVkZWQgdGlwcyBvbiDigJxhc3NldCBwcm90ZWN0aW9uIHN0cnVjdHVyZXPigJ0gYW5kIOKAnHRheCBwbGFubmluZyBvcHBvcnR1bml0aWVzIGZvciBVa3JhaW5pYW4gY29tcGFuaWVzLuKAnSBTdml0bGFuYSBNdXNpZW5rbywgb25lIG9mIHRoZSBETEEgUGlwZXIgYXR0b3JuZXlzIHdobyBnYXZlIHRoZSBwcmVzZW50YXRpb24sIHNhaWQgdGhlIGZpcm0gaGFkIG5vIGNvbW1lbnQuIEFuIG91dGxpbmUgb2YgdGhlIGFnZW5kYSBmb3IgdGhlIEFwcmlsIDE3LCAyMDEyLCBwcmVzZW50YXRpb24gYnkgQnVyZW4gdmFuIFZlbHplbiBHdWVsZW4gaW4gTW9zY293IGNpdGVkIHRoZSB2YXJpb3VzIGJpZyBSdXNzaWFuIGNvbmNlcm5zIGFscmVhZHkgdXNpbmcgdGhlIE5ldGhlcmxhbmRzOiBvaWwgYW5kIGdhcyBjb21wYW5pZXMgR2F6cHJvbSwgTHVrb2lsLCBhbmQgUm9zbmVmdCwgSW50ZXJuZXQgY29tcGFueSBZYW5kZXggTlYsIFg1IFJldGFpbCBHcm91cCBOViwgYW5kIG1pbmluZyBhbmQgcHJlY2lvdXMgbWV0YWxzIGNvbXBhbmllcyBOb3JkIEdvbGQgTlYgYW5kIE9BTyBHTUsgTm9yaWxzayBOaWNrZWwuIOKAmEZsZXhpYmxl4oCZIFRheCBQb2xpY2llcyBUaGUgZmlybSBkZXRhaWxlZCB0aGUgcGFydGljdWxhcmx5IGdlbmVyb3VzIHRheCB0cmVhdHkgYmV0d2VlbiBSdXNzaWEgYW5kIHRoZSBOZXRoZXJsYW5kcywgZGVzY3JpYmVkIHRoZSB2aXJ0dWVzIG9mIHRoZSBjb3VudHJ54oCZcyDigJxmbGV4aWJsZeKAnSB0YXggcG9saWNpZXMsIGFuZCBvZmZlcmVkIGV4YW1wbGVzIG9mIHNldmVyYWwgc3RydWN0dXJlcyB0byBoZWxwIGNsaWVudHMgYXZvaWQgdGF4ZXMgYW5kIHByb3RlY3QgYXNzZXRzLCBpbmNsdWRpbmcgb25lIHRoYXQgbWFrZXMgaXQgaGFyZGVyIHRvIHRyYWNlIGEgY29tcGFueeKAmXMgb3duZXJzLiBJbiBvbmUgc2xpZGUsIHRoZSBsYXcgZmlybSBkZW1vbnN0cmF0ZWQgaG93IFJ1c3NpYW4gcmVhbCBlc3RhdGUgaW52ZXN0b3JzIGNvdWxkIGF2b2lkIGNhcGl0YWwgZ2FpbnMgdGF4ZXMgb24gdGhlIHNhbGUgb2YgcHJvcGVydHkgdGhlcmUgc2ltcGx5IGJ5IHVzaW5nIGEgRHV0Y2ggaG9sZGluZyBjb21wYW55LiBUaGUgZmlybSBwb2ludGVkIG91dCB0aGF0IHRoaXMgYmVuZWZpdCB3YXMgbm90IGF2YWlsYWJsZSBmb3IgaW52ZXN0b3JzIHVzaW5nIHZlaGljbGVzIGluIEN5cHJ1cyBhbmQgU3dpdHplcmxhbmQuIOKAnEEgZ29vZCByZXB1dGF0aW9uIGlzIG1vcmUgdmFsdWFibGUgdGhhbiBhIGJ1bGdpbmcgYmFuayBzYWZlLOKAnSB0aGUgZmlybSBleHBsYWluZWQsIGFjY29yZGluZyB0byBhbm90aGVyIHNsaWRlLiBQZXRlciB2YW4gRGlqaywgb25lIG9mIHRoZSBhdHRvcm5leXMgYXQgdGhlIGZpcm0gbGlzdGVkIG9uIHRoZSBwcmVzZW50YXRpb24sIGRlY2xpbmVkIHRvIGNvbW1lbnQuIER1dGNoIFJlcHV0YXRpb24gVGhlIFUuUy4gc2FuY3Rpb25zIGhhdmUgcHJvbXB0ZWQgc29tZSBEdXRjaCBwb2xpdGljaWFucyB0byBzYXkgdGhleSB3b3JyeSBhYm91dCBkYW1hZ2UgdG8gdGhlIGNvdW50cnnigJlzIHJlcHV0YXRpb24gZnJvbSBoaWRpbmcgdGhlIHdlYWx0aCBvZiBSdXNzaWFuIGNvbXBhbmllcyBhbmQgb2xpZ2FyY2hzLiDigJxPbiB0aGUgb25lIGhhbmQgd2UgaW52aXRlIHRoZW0sIGFuZCBtYWtlIGl0IHBvc3NpYmxlIGZvciB0aGVtIHRvIGF2b2lkIHRheGVzIHRocm91Z2ggdGhlIE5ldGhlcmxhbmRzLCB3aGlsZSBvbiB0aGUgb3RoZXIgaGFuZCB3ZSBzYXkgd2UgZnJlZXplIHRoZSBhc3NldHMsIHdoaWNoIGlzIGEgZ29vZCB0aGluZyzigJ0gc2FpZCBBcm5vbGQgTWVya2llcywgYSBEdXRjaCBwYXJsaWFtZW50IG1lbWJlciBmcm9tIHRoZSBTb2NpYWxpc3QgUGFydHkuIOKAnEJ1dCB3aHkgZGlkIHdlIGFsbG93IHRoZW0gaW4gdGhlIGZpcnN0IHBsYWNlPyBXZSBldmVuIHN0aW11bGF0ZWQgdGhlbSB0byBkbyB0aGlzLuKAnSDigJxUaGUgTmV0aGVybGFuZHMgY2Fubm90IGJlIHJlZ2FyZGVkIGFzIGEgdGF4IGhhdmVuLCBhbmQgaXQgaXMgbm90IHVzZWQgYXMgc3VjaCBieSBSdXNzaWFuIG9yIGFueSBvdGhlciBjb21wYW5pZXMs4oCdIHNhaWQgYSBzcG9rZXN3b21hbiBmb3IgdGhlIER1dGNoIEZpbmFuY2UgTWluaXN0cnkuIOKAnFRoZSBOZXRoZXJsYW5kcyBoYXMgYmVlbiBhY3RpdmVseSBpbnZvbHZlZCBpbiB0aGUgZHJhZnRpbmcgb2YgdGhlIHJlY2VudCBFVSByZWd1bGF0aW9ucyByZWxhdGVkIHRvIHRoZSBzaXR1YXRpb24gaW4gVWtyYWluZSBhbmQgd2lsbCBpbXBsZW1lbnQgc3RyaWN0bHkgYW5kIHdpdGhvdXQgZGVsYXkgdGhlIHByb3Zpc2lvbnMgdGhlcmVvZiBpbmNsdWRpbmcgYW55IG5lY2Vzc2FyeSBtZWFzdXJlcyByZWxhdGluZyB0byBmdW5kcyBoZWxkIGluIHRoZSBOZXRoZXJsYW5kcy7igJ0gVGhlIE5ldGhlcmxhbmRzIOKAnGF0dGFjaGVzIGdyZWF0IGltcG9ydGFuY2UgdG8gY2xvc2UgY29vcmRpbmF0aW9uIGJldHdlZW4gdGhlIEVVIGFuZCBVLlMu4oCdIG9uIHNhbmN0aW9ucywgIGEgZm9yZWlnbiBtaW5pc3RyeSBzcG9rZXNtYW4gc2FpZC4g4oCYSW4gYSBCaW5k4oCZIFRoZSBVLlMuIGhhcyBnaXZlbiB0YXggaGF2ZW5zIGFuIGV4Y3VzZSBmb3IgaW5hY3Rpb24gYnkgZmFpbGluZyB0byBiYWNrIHVwIGl0cyBhc3NlcnRpb24gdGhhdCBQdXRpbiBpcyBhIEd1bnZvciBzaGFyZWhvbGRlciwgc2FpZCBhIGZvcm1lciBzZW5pb3IgVHJlYXN1cnkgb2ZmaWNpYWwgd2hvIGFza2VkIG5vdCB0byBiZSBpZGVudGlmaWVkIGJlY2F1c2UgaGUgZGlkbuKAmXQgd2FudCB0byBiZSBzZWVuIGFzIGNyaXRpY2l6aW5nIHRoZSBnb3Zlcm5tZW504oCZcyBhY3Rpb25zLiBJbiBhZGRpdGlvbiwgc29tZSBvbGlnYXJjaHMgbWF5IGhhdmUgbGVnaXRpbWF0ZSByZWFzb25zIGZvciBtb3ZpbmcgZnVuZHMgYmV5b25kIFB1dGlu4oCZcyByZWFjaCwgaGUgc2FpZC4gQ291bnRyaWVzIGxpa2UgdGhlIE5ldGhlcmxhbmRzIGFuZCBTd2l0emVybGFuZCBhcmUg4oCcaW4gYSBiaW5kLCBiZWNhdXNlIGFuIGF3ZnVsIGxvdCBvZiB3aGF0IHRoZXkgZG8gZm9yIGEgbGl2aW5nIHJldm9sdmVzIGFyb3VuZCBzdHJ1Y3R1cmluZyBhbmQgaGlkaW5nIG1vbmV5IGFuZCBhc3NldHMgdGhyb3VnaCB2ZXJ5IGNvbXBsZXggc3RydWN0dXJlcyzigJ0gc2FpZCBCbHVtLCB0aGUgZm9ybWVyIFUuUy4gU2VuYXRlIGludmVzdGlnYXRvci4g4oCcSXQgcmVhbGx5IGlzIGEgdHJpY2t5IHF1ZXN0aW9uIGJlY2F1c2UgdGhlcmUgaXMgc29tZSBsZWdpdGltYWN5IHRvIHBlb3BsZSBwdXR0aW5nIGFzc2V0cyBvdXRzaWRlIG9mIHRoZWlyIG93biBjb3VudHJ5IGJlY2F1c2Ugb2YgcG9saXRpY2FsIGluc3RhYmlsaXR5LiBUaGUgZmxpcOKAnSBpcyB0aGF0IHRob3NlIGNvdW50cmllcyBhcmUg4oCcYWxzbyBiZWluZyB1c2VkIGJ5IHRoZSBrbGVwdG9jcmF0cyB3aG8gYXJlIHJpcHBpbmcgb2ZmIFJ1c3NpYS7igJ0=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUXKwLyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDdjMzlhZWFiMGNhZWM5Yjc=</field><field name="symbol" class="java.lang.String">rO0ABXQABE5PUkQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUXP5xiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzczMzMzMz</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAznCj1wo9c</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAy7hR64Ueu</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzQAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzQAAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAADbiA==</field><field name="id" class="java.lang.String">rO0ABXQAEGI2ZTU1NzIwNDU4YzFhNjA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJGwAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDU4NDM=</field><field name="title" class="java.lang.String">rO0ABXQAOEJyYXppbCdzIEVjb25vbXkgRmFjZXMgVHJvdWJsZSBBZnRlciBXb3JsZCBDdXAsIEVsZWN0aW9u</field><field name="content" class="java.lang.String">rO0ABXQbi1ByZXNpZGVudCBEaWxtYSBSb3Vzc2VmZiwgb3Igd2hvZXZlciB3aW5zIHRoZSBlbGVjdGlvbiwgd2lsbCBoYXZlIHRvIG1ha2UgZGVlcCBidWRnZXQgY3V0cywgcmFpc2UgdGF4ZXMgYW5kIHRha2Ugb3RoZXIgcGFpbmZ1bCBzdGVwcyB0byBhZGRyZXNzIEJyYXppbCdzIGdyb3dpbmcgZmluYW5jaWFsIGltYmFsYW5jZXMuIFRoZSBmYWxsb3V0IHdpbGwgbGlrZWx5IGJlIG1vcmUgZGFtYWdpbmcgdGhhbiBtYW55IGludmVzdG9ycyBhbnRpY2lwYXRlLCByZXN1bHRpbmcgaW4gYSBmb3VydGggc3RyYWlnaHQgeWVhciBvZiBkaXNhcHBvaW50aW5nIGdyb3d0aCDigJQgYSBiaWcgZmFsbCBiYWNrIHRvIGVhcnRoIGZvciBhIGNvdW50cnkgdGhhdCBsYXN0IGRlY2FkZSB3YXMgb25lIG9mIHRoZSB3b3JsZCdzIG1vc3QgZHluYW1pYyBlbWVyZ2luZyBtYXJrZXRzLiBFY29ub21pc3RzIGN1cnJlbnRseSBleHBlY3QgQnJhemlsJ3MgZ3Jvc3MgZG9tZXN0aWMgcHJvZHVjdCB0byBncm93IDEuNjggcGVyY2VudCB0aGlzIHllYXIsIGFuZCAyIHBlcmNlbnQgaW4gMjAxNSwgYWNjb3JkaW5nIHRvIGEgd2Vla2x5IHN1cnZleSBieSB0aGUgY2VudHJhbCBiYW5rLiBZZXQgdGhlIGxhdHRlciBmb3JlY2FzdCBpcyBzb21ld2hhdCBtaXNsZWFkaW5nLCBiZWNhdXNlIG1hbnkgZWNvbm9taXN0cyBhZG1pdCB0aGVpciBlc3RpbWF0ZXMgYXJlIGJhc2VkIG9uIGNvbXB1dGVyIG1vZGVscyB0aGF0IGRvbid0IGZ1bGx5IGFjY291bnQgZm9yIHdoYXQgcG9saXRpY2lhbnMgd2lsbCBkbyBhZnRlciB0aGUgZWxlY3Rpb24uICJObyBtYXR0ZXIgd2hvIHdpbnMgKHRoZSBlbGVjdGlvbiksIGl0J3MgZ29pbmcgdG8gYmUgYSBkaWZmaWN1bHQgeWVhciwgd29yc2UgdGhhbiBtYW55IGJlbGlldmUsIiBzYWlkIEZlcm5hbmRvIEhlbnJpcXVlIENhcmRvc28sIHdobyB3YXMgcHJlc2lkZW50IGZyb20gMTk5NSB0byAyMDAzIGFuZCBzdGlsbCByZXRhaW5zIGNvbnNpZGVyYWJsZSBpbmZsdWVuY2UgaW4gZmluYW5jaWFsIGNpcmNsZXMgYXMgYSBsZWFkZXIgb2YgdGhlIG1haW4gb3Bwb3NpdGlvbiBwYXJ0eS4gQW4gb2ZmaWNpYWwgY2xvc2UgdG8gUm91c3NlZmYsIHNwZWFraW5nIG9uIGNvbmRpdGlvbiBvZiBhbm9ueW1pdHksIGJyb2FkbHkgY29uY3VycmVkOiAiRmV3IHBlb3BsZSBhcmUgdGFsa2luZyBhYm91dCAyMDE1IHJpZ2h0IG5vdy4gQnV0IGl0IHdpbGwgYmUgaGFyZCwgbm8gZG91YnQuIiBUaGUgYmlnZ2VzdCBhbmQgbW9zdCBkaXNydXB0aXZlIHRhc2sgd2lsbCBiZSB0cmltbWluZyBCcmF6aWwncyBmaXNjYWwgZGVmaWNpdCwgd2hpY2ggaW52ZXN0b3JzIGFuZCByYXRpbmdzIGFnZW5jaWVzIHNheSBoYXMgYmVlbiB0b28gaGlnaCBpbiByZWNlbnQgeWVhcnMuIE5vIG9uZSBleHBlY3RzIFJvdXNzZWZmLCBhIHByYWdtYXRpYyBsZWZ0aXN0LCB0byBtYWtlIHBhaW5mdWwgYnVkZ2V0IGN1dHMgd2hpbGUgY2FtcGFpZ25pbmcgZm9yIHJlLWVsZWN0aW9uLiBBcyBhIHJlc3VsdCwgdGhlIGN1dHMgd2lsbCBuZWVkIHRvIGJlIGV2ZW4gZGVlcGVyIHdoZW4gdGhlIG5leHQgcHJlc2lkZW50aWFsIHRlcm0gYmVnaW5zIG9uIEphbi4gMSwgMjAxNSDigJQgZXNwZWNpYWxseSBpZiBCcmF6aWwncyBzb3ZlcmVpZ24gY3JlZGl0IGlzIGRvd25ncmFkZWQgaW4gdGhlIGludGVyaW0gYnkgU3RhbmRhcmQgJiBQb29yJ3MgdG8gaXRzIGxvd2VzdCBpbnZlc3RtZW50LWdyYWRlIHJhdGluZywgYXMgbWFueSBpbiBCcmFzaWxpYSBub3cgYW50aWNpcGF0ZS4gVGF4IGhpa2VzIGFyZSBhbHNvIGxpa2VseS4gU28gYXJlIGFkanVzdG1lbnRzIHRvIGJ1cyBmYXJlcywgZ2Fzb2xpbmUgY29zdHMgYW5kIG90aGVyIHByaWNlcyBhZG1pbmlzdGVyZWQgYnkgdGhlIGdvdmVybm1lbnQsIHdoaWNoIFJvdXNzZWZmIGhhcyBoZWxkIGluIGNoZWNrIHRvIHByZXZlbnQgaW5mbGF0aW9uLCBydW5uaW5nIGFyb3VuZCA2IHBlcmNlbnQsIGZyb20gcmlzaW5nIGV2ZW4gaGlnaGVyLiBJZiBkb25lIHByb3Blcmx5LCBiZWx0LXRpZ2h0ZW5pbmcgcG9saWNpZXMgY291bGQgcmVzdG9yZSBiYWxhbmNlIHRvIHRoZSBlY29ub215IGFuZCByZWJ1aWxkIEJyYXppbCdzIHRhdHRlcmVkIGNyZWRpYmlsaXR5IHdpdGggdGhlIHByaXZhdGUgc2VjdG9yLiBUaGF0LCBpbiB0dXJuLCBjb3VsZCBzZXQgdGhlIHN0YWdlIGZvciBhbiBldmVudHVhbCByZXR1cm4gdG8gdGhlIGdvb2Qgb2xkIGRheXMgbGFzdCBkZWNhZGUgd2hlbiBHRFAgb2Z0ZW4gZ3JldyBiZXR0ZXIgdGhhbiA0IHBlcmNlbnQgYSB5ZWFyLiBZZXQsIGV2ZW4gaW4gYSBiZXN0LWNhc2Ugc2NlbmFyaW8sIHRoZSBtZWFzdXJlcyB3aWxsIHNtb3RoZXIgZG9tZXN0aWMgZGVtYW5kIGluIHRoZSBzaG9ydCB0ZXJtIOKAlCBwZXJoYXBzIG5vdCBxdWl0ZSBlbm91Z2ggdG8gY2F1c2UgYSByZWNlc3Npb24sIG9mZmljaWFscyBhbmQgZWNvbm9taXN0cyBzYXksIGJ1dCBlbm91Z2ggdG8gcmVzdWx0IGluIGFub3RoZXIgbG9zdCB5ZWFyIGluIHRlcm1zIG9mIEdEUCBncm93dGguICIyMDE1IGlzIGdvaW5nIHRvIGJlIHRoZSBiaWcgeWVhciBvZiBhZGp1c3RtZW50LCIgc2FpZCBNYXJjZWxvIFNhbG9tb24sIGNoaWVmIEJyYXppbCBlY29ub21pc3QgZm9yIEJhcmNsYXlzIGluIE5ldyBZb3JrLiAiV2hhdCBuZWVkcyB0byBoYXBwZW4gaXMgYSBjcmVkaWJpbGl0eSBzaG9jayBzbyB0aGF0IHRoZSBnb3Zlcm5tZW50IHNob3dzIGl0IGlzbid0IGp1c3QgdGhpbmtpbmcgaW4gdGhlIHNob3J0IHRlcm0uIiBDT1VOVFJZIFNUVUNLIElOIFRSQUZGSUMgVGhlIHNlZWRzIG9mIEJyYXppbCdzIGN1cnJlbnQgcHJlZGljYW1lbnQgd2VyZSBzb3duIGR1cmluZyB0aGUgZ29vZCB5ZWFycy4gVGhhbmtzIHRvIHN0cm9uZyBkZW1hbmQgZm9yIGl0cyBzb3kgYW5kIGlyb24gb3JlIGZyb20gQ2hpbmEsIHBsdXMgc21hcnQgZmlzY2FsIG1hbmFnZW1lbnQgYW5kIHNvY2lhbCB3ZWxmYXJlIHBvbGljaWVzIHVuZGVyIFJvdXNzZWZmJ3MgcHJlZGVjZXNzb3JzLCBCcmF6aWwgaGFzIG1hbmFnZWQgdG8gcHVsbCBzb21lIDM1IG1pbGxpb24gcGVvcGxlIG91dCBvZiBwb3ZlcnR5IHNpbmNlIHRoZSBtaWQtMTk5MHMuIEl0IGFsc28gYmVjYW1lIGEgdG9wIG1hcmtldCBmb3IgZm9yZWlnbiBhdXRvbWFrZXJzLCByZXRhaWxlcnMgYW5kIHRlbGVjb20gY29tcGFuaWVzLiBCdXQgZWNvbm9taXN0cyBzYXkgdGhhdCwgZ2VuZXJhbGx5IHNwZWFraW5nLCBCcmF6aWwgc29sZCB0b28gbWFueSBjYXJzIGR1cmluZyB0aGUgYm9vbSB3aGlsZSBub3QgYnVpbGRpbmcgZW5vdWdoIHJvYWRzLiBUaGF0IGlzLCBpdCBjaGFubmVsZWQgdG9vIG11Y2ggb2YgdGhlIHdpbmRmYWxsIHRvd2FyZCBjb25zdW1wdGlvbiBhbmQgbm90IGVub3VnaCBvbiBpbnZlc3RtZW50LiBUaGUgcmVzdWx0IGlzIGFuIGVjb25vbXkgbm93IHBsYWd1ZWQgYnkgaW5mcmFzdHJ1Y3R1cmUgYm90dGxlbmVja3MgYW5kIGxvdyBwcm9kdWN0aXZpdHkg4oCUIGFuZCwgdGh1cywgaGlnaCBpbmZsYXRpb24gYW5kIHNsb3cgZ3Jvd3RoLiBSb3Vzc2VmZiwgd2hvIHRvb2sgb2ZmaWNlIGluIDIwMTEganVzdCBhcyB0aGUgZWNvbm9teSB3YXMgc2xvd2luZywgcmVhY3RlZCBieSBtYWtpbmcgYSBzZXJpZXMgb2YgdGFyZ2V0ZWQgdGF4IGN1dHMgd29ydGggYXBwcm94aW1hdGVseSAxLjUgcGVyY2VudCBvZiBHRFAsIHdoaWxlIGFsc28ga2VlcGluZyBmaXNjYWwgc3BlbmRpbmcgcm9idXN0IHRvIHN0aW11bGF0ZSB0aGUgZWNvbm9teS4gSGVyIGFjdGlvbnMgbWF5IGhhdmUgcHJldmVudGVkIGEgc2hhcnBlciBzbHVtcC4gVGhlIGVjb25vbXkgZ3JldyAyLjMgcGVyY2VudCBpbiAyMDEzLCBhbmQgZGVmaWVkIHByZWRpY3Rpb25zIG9mIGEgbWlub3IgcmVjZXNzaW9uIGR1cmluZyB0aGUgc2Vjb25kIGhhbGYgb2YgdGhlIHllYXIuIEJ1dCBwcmltaW5nIHRoZSBmaXNjYWwgcHVtcCBoYXMgY2FycmllZCBhIGNvc3Q6IFRoZSBidWRnZXQgZGVmaWNpdCBpcyBleHBlY3RlZCB0byBoaXQgbmVhcmx5IDQgcGVyY2VudCBvZiBHRFAgaW4gMjAxNCwgYSBwZXJjZW50YWdlIHBvaW50IGFib3ZlIHRoZSBwYXN0IGRlY2FkZSdzIGF2ZXJhZ2UuIFRoYXQncyBub3QgYSBodWdlIGJ1ZGdldCBnYXAgYnkgZ2xvYmFsIHN0YW5kYXJkcy4gQnV0IGludmVzdG9ycyBob2xkIEJyYXppbCB0byBhIHRpZ2h0ZXIgc3RhbmRhcmQgdGhhbiBtb3N0IGNvdW50cmllcyBiZWNhdXNlIG9mIGl0cyBoaXN0b3J5IG9mIHJ1bmF3YXkgc3BlbmRpbmcgdGhhdCByZXN1bHRlZCBpbiBoeXBlcmluZmxhdGlvbiBpbiB0aGUgMTk4MHMgYW5kIGVhcmx5IDE5OTBzLiBBdCB0aGUgc2xpZ2h0ZXN0IHNpZ24gb2YgZmlzY2FsIHNsaXBwYWdlIG9yIGFuIHVwdGljayBpbiBpbmZsYXRpb24sIGl0J3Mgbm90IGp1c3QgcmF0aW5ncyBhZ2VuY2llcyB0aGF0IGdldCB3b3JyaWVkLiBBbnlvbmUgb3ZlciBhZ2UgNDAgb3Igc28gcmVtZW1iZXJzIHdhdGNoaW5nIHRoZWlyIHNhbGFyeSBnZXQgZGVjaW1hdGVkLiAiVGhlcmUncyBiZWVuIGEgdmVyeSBsYXJnZSB3b3JzZW5pbmcgaW4gZXhwZWN0YXRpb25zIiBhbW9uZyBidXNpbmVzc2VzIGFuZCBjb25zdW1lcnMgYWxpa2UsIHNhaWQgQWxvaXNpbyBDYW1wZWxvLCB3aG8gcnVucyBlY29ub21pYyBzdXJ2ZXlzIGZvciB0aGUgR2V0dWxpbyBWYXJnYXMgRm91bmRhdGlvbiwgYSBCcmF6aWxpYW4gYnVzaW5lc3Mgc2Nob29sLiAiVGhlIGluY29taW5nIGdvdmVybm1lbnQgd2lsbCBoYXZlIHRvIGhvbGQgdGhlIGxpbmUgb24gZmlzY2FsIGF1c3Rlcml0eSB0byBicmluZyBjcmVkaWJpbGl0eSBiYWNrLCIgQ2FtcGVsbyBzYWlkLiBXQUlUSU5HIEZPUiBUSEUgRUxFQ1RJT04gQnVkZ2V0IGN1dHMgaW4gdGhlIGZpcnN0IHllYXIgb2YgYSBwcmVzaWRlbnRpYWwgdGVybSBoYXZlIGJlY29tZSBwYXJ0IG9mIHRoZSBlY29ub21pYyBjeWNsZSBoZXJlLiBSb3Vzc2VmZiBtYWRlIHJlbGF0aXZlbHkgbWlub3IgYWRqdXN0bWVudHMgaW4gMjAxMSwgd2hpbGUgaGVyIHByZWRlY2Vzc29yIEx1aXogSW5hY2lvIEx1bGEgZGEgU2lsdmEgbWFkZSBhIGJpZyBhdXN0ZXJpdHkgcHVzaCBpbiAyMDAzLiBUaGUgc2l6ZSBvZiBuZXh0IHllYXIncyBjdXRzIHdpbGwgZGVwZW5kIGluIHBhcnQgb24gd2hvIHdpbnMgdGhlIGVsZWN0aW9uLiBSb3Vzc2VmZiwgd2hvIG11c3QgY29wZSB3aXRoIGFuIHVud2llbGR5IGNvYWxpdGlvbiBvZiByZXNvdXJjZS1odW5ncnkgcG9saXRpY2FsIHBhcnRpZXMsIGlzIHNlZW4gd2llbGRpbmcgdGhlIGJ1ZGdldCBheCB3aXRoIHRoZSBsaWdodGVzdCB0b3VjaC4gQnV0IGhlciB0d28gb3Bwb25lbnRzIOKAlCBTZW5hdG9yIEFlY2lvIE5ldmVzIGFuZCBFZHVhcmRvIENhbXBvcywgYSBzdGF0ZSBnb3Zlcm5vciDigJQgYXJlIHJ1bm5pbmcgdG8gaGVyIHJpZ2h0LCBhbmQgaGF2ZSBzdWdnZXN0ZWQgaW4gY291cnRpbmcgYnVzaW5lc3MgbGVhZGVycyB0aGV5IHdvdWxkIHNsYXNoIHNwZW5kaW5nIGRlZXBseS4gRmVsaXBlIFNhbHRvLCBhbiBlY29ub21pc3QgZm9yIFRlbmRlbmNpYXMgY29uc3VsdGFuY3ksIHNhaWQgdGhhdCB0byByZWNvdmVyIGNyZWRpYmlsaXR5IHdoaWxlIGFjY291bnRpbmcgZm9yIHdoYXQncyBwb2xpdGljYWxseSBwb3NzaWJsZSwgdGhlIGdvdmVybm1lbnQgd2lsbCBsaWtlbHkgbmVlZCB0byB0YXJnZXQgYSBwcmltYXJ5IGJ1ZGdldCBzdXJwbHVzIG9mIGFib3V0IDIuNSBwZXJjZW50IG9mIEdEUCBpbiAyMDE1LiBCeSBjb21wYXJpc29uLCB0aGF0IGdvYWwsIHdoaWNoIGV4Y2x1ZGVzIGRlYnQgcGF5bWVudHMgZnJvbSB0aGUgZmlzY2FsIGJhbGFuY2UsIGlzIHNldCBmb3IgMS45IHBlcmNlbnQgaW4gMjAxNC4gSG93ZXZlciwgbW9zdCBhbmFseXN0cyBzYWlkIGluIGEgUmV1dGVycyBwb2xsIGxhc3QgbW9udGggdGhhdCB0aGV5IGV4cGVjdCB0aGUgZ292ZXJubWVudCB0byBtaXNzIHRoYXQgdGFyZ2V0IGFzIGl0IHJhbXBzIHVwIGVsZWN0aW9uLXllYXIgc3BlbmRpbmcsIG1ha2luZyB0aGUgMjAxNSBhZGp1c3RtZW50IHRoYXQgbXVjaCBtb3JlIHRyYXVtYXRpYy4gTWVhbndoaWxlLCB0aGVyZSBhcmUgb3RoZXIgZGlzdG9ydGlvbnMgd2FpdGluZyB0byBiZSBmaXhlZC4gUm91c3NlZmYncyBwb2xpY3kgb2Yga2VlcGluZyBmdWVsIHByaWNlcyBhcnRpZmljaWFsbHkgbG93IGhhcyBoZWxwZWQgc3ViZHVlIGluZmxhdGlvbiwgYnV0IGl0IGNhbid0IGxhc3QgZm9yZXZlci4gVGhlIGdhcCBiZXR3ZWVuIGxvY2FsIGdhc29saW5lIHByaWNlcyBhbmQgdGhvc2UgYWJyb2FkIGhhcyBob3ZlcmVkIGF0IGFib3V0IDExIHBlcmNlbnQsIHdpdGggYSAxOSBwZXJjZW50IGdhcCBmb3IgZGllc2VsLiBUaGF0IGhhcyBjYXVzZWQgaHVnZSBsb3NzZXMgZm9yIFBldHJvbGVvIEJyYXNpbGVpcm8gU0EsIHRoZSBzdGF0ZS1ydW4gZW5lcmd5IGNvbXBhbnkga25vd24gYXMgUGV0cm9icmFzLiBGb3IgUGV0cm9icmFzIHRvIGJlIGFibGUgdG8gYWZmb3JkIGl0cyBhbWJpdGlvdXMgaW52ZXN0bWVudCBwbGFuIHRvIGRldmVsb3Agb2Zmc2hvcmUgb2lsIHJlc2VydmVzIG92ZXIgdGhlIG5leHQgZGVjYWRlLCB3aGljaCB0aGUgY29tcGFueSByZWNlbnRseSBzY2FsZWQgYmFjayBiZWNhdXNlIG9mIGl0cyBzdHJ1Z2dsZXMsIHRoZSBuZXh0IHByZXNpZGVudCBtdXN0IHJhaXNlIGZ1ZWwgcHJpY2VzLiBUaGF0IHdvdWxkIHRha2UgbW9uZXkgb3V0IG9mIGNvbnN1bWVycycgcG9ja2V0cy4gT3RoZXIgcGVudC11cCBwcmVzc3VyZXMgYXJlIGNvbWluZyBmcm9tIGEgc2V2ZXJlIGRyb3VnaHQgcHJlc3N1cmluZyBlbGVjdHJpY2l0eSBwcmljZXM7IGEgZnJlZXplIG9uIGJ1cyBmYXJlcyBpbiBwbGFjZSBzaW5jZSBuYXRpb253aWRlIHN0cmVldCBwcm90ZXN0cyBsYXN0IEp1bmU7IGFuZCB0aGUgZ3Jvd2luZyB0YXggYnVyZGVuIHBvc2VkIGJ5IEJyYXppbCdzIGdlbmVyb3VzIHBlbnNpb24gc3lzdGVtLiBOb25lIG9mIHRob3NlIGlzc3VlcyBhcmUgZXhwZWN0ZWQgdG8gYmUgZnVsbHkgZGVhbHQgd2l0aCB1bnRpbCBhZnRlciB0aGUgZWxlY3Rpb24gaXMgb3Zlci4=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUS0qVSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGEwZDZlNzZiZjhlYTY4ZWI=</field><field name="symbol" class="java.lang.String">rO0ABXQABEhVR0U=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUS5z7CAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/ZmZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/czMzMzMzN</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/ZmZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/czMzMzMzN</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD/czMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAB4UA==</field><field name="id" class="java.lang.String">rO0ABXQAEDIxOGJiOTMyNGFmYzRjNDM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mLyxAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQzMjE=</field><field name="title" class="java.lang.String">rO0ABXQAQEJyaWRnZXMgQ3J1bWJsZSBhcyBNdW5pIEJvcnJvd2VycyBJZ25vcmUgTG93ZXN0IFJhdGVzIFNpbmNlICc2MHM=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbB8fyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGRjZWU5ODIzNjYzNDU0YWM=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lQQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbHGFiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6mZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6mZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6mZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6mZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA54UeuFHrh</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAABLA==</field><field name="id" class="java.lang.String">rO0ABXQAEGMyM2RkMjVmMTBjMjc2ZWI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mH7jAAAQ==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDE0Nzg=</field><field name="title" class="java.lang.String">rO0ABXQASEJhbmsgb2YgSmFwYW4sIE1vcmUgQ29uZmlkZW50IEFib3V0IFJlY292ZXJ5LCBRdWlldGx5IEV5ZXMgU3RpbXVsdXMgRXhpdA==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUY8DKSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDNhZDYxMjg3OWFhYzhhNzg=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNUQVk=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUZBMwCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1uFHrhR64</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA11HrhR64U</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1K4UeuFHs</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1nrhR64Uf</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA1I9cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAeJTA==</field><field name="id" class="java.lang.String">rO0ABXQAEDQ2NGVhZjExODk5MzczOTU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKA8AAAA==</field></document></documents><date>2015-05-07T12:25:33-0500</date></cacheEntry>
<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0CsZUaGUgcHJpY2Ugb2YgZ29sZCBqdW1wZWQgbW9yZSB0aGFuIDIgcGVyY2VudCBNb25kYXkgaW4gIHJlYWN0aW9uIHRvIFJ1c3NpYXMgaW52YXNpb24gb2YgVWtyYWluZSBhbmQgdGhlIG1ldGFsIGlzIHBvaXNlZCB0byAgcmlzZSBmdXJ0aGVyIGFzc2VydHMgUm9iZXJ0IFdpZWRlbWVyIGNvYXV0aG9yIG9mIEFmdGVyc2hvY2sgUHJvdGVjdCAgWW91cnNlbGYgYW5kIFByb2ZpdCBpbiB0aGUgTmV4dCBHbG9iYWwgRmluYW5jaWFsIE1lbHRkb3duICBhbmQgYSByZWd1bGFyIGNvbnRyaWJ1dG9yIHRvIE5ld3NtYXhzIEZpbmFuY2lhbCBJbnRlbGxpZ2VuY2UgUmVwb3J0IEdvbGQgaGFzIGJlZW4gdHJlbmRpbmcgdXB3YXJkIG5pY2VseSBmb3IgdGhlIGxhc3QgY291cGxlIG9mIG1vbnRocyBoZSB0b2xkIEpvaG4gQmFjaG1hbiBvbiBBbWVyaWNhcyBGb3J1bSBvbiBOZXdzbWF4IFRWIFRoaXMgaXMganVzdCB0aGUga2luZCBvZiB0aGluZyB0byBnZXQgdGhlICBnb2xkIGFuaW1hbCBzcGlyaXRzIGdvaW5nIGV2ZW4gZnVydGhlciAgICBJIGtub3cgUnVzc2lhcyBhbiB1bnVzdWFsICBvbmUgYnV0IGl0cyBqdXN0IHRoZSBraW5kIG9mIG1hcmtldCB0aGF0cyBiZWVuIHB1c2hpbmcgZ29sZCB1cCBub3cgIGZvciBhIGNvdXBsZSBvZiBtb250aHMgU28gaXRzIGp1c3QgZ29pbmcgdG8gIGZ1cnRoZXIgd2hhdHMgYWxyZWFkeSBiZWVuIHByZXR0eSBnb29kIG1vbWVudHVtIGZvciBnb2xkIHRoaXMgeWVhciBXYXRjaCBvdXIgZXhjbHVzaXZlIHZpZGVvIEFydGljbGUgY29udGludWVzIGJlbG93CgoKClRoZSBjb25mbGljdCB3aXRoIFVrcmFpbmUgaXMgYSBuZWdhdGl2ZSBmb3IgIFJ1c3NpYXMgZWNvbm9teSBXaWVkZW1lciBzYXlzIFVrcmFpbmUgaXMgb25lIG9mIFJ1c3NpYXMgYmlnZ2VzdCAgdHJhZGluZyBwYXJ0bmVycyBJZiB0aGV5IHN0YXJ0IGhhdmluZyBwcm9ibGVtcyB0aGVyZSB0aGF0cyBnb2luZyB0byAgYmUgYW4gaXNzdWUgZm9yIFJ1c3NpYSBoZSBzYWlkIFJ1c3NpYXMgYWxyZWFkeSBiZWVuIHNob3dpbmcgc29tZSBvZiB0aGUgIHdlYWtlc3QgZ3Jvd3RoIGluIHllYXJzbGVzcyB0aGFuIDEgcGVyY2VudCAgICBFdmVuIHRoZWlyICBnb3Zlcm5tZW50cyBub3QgcHJlZGljdGluZyBtdWNoIGdyb3d0aCBvdmVyIHRoZSBuZXh0IGZldyB5ZWFycyAgRWRpdG9ycyBOb3RlICBTZWNyZXQgV2FsbCBTdHJlZXQgQ2FsZW5kYXIgVXNlcyBTdHJhbmdlIENyYXNoIEFsZXJ0IFN5c3RlbSBHZXRzIDE4NzkgQW5udWFsIFJldHVybnMgCgpBcyBmb3IgcG9zc2libGUgdHJhZGUgc2FuY3Rpb25zIFJ1c3NpYSAgaW1wb3J0cyBtYW55IG9mIGl0cyBoaWdoZW5kIGNvbnN1bWVyIGdvb2RzIGZyb20gdGhlIFdlc3QgV2llZGVtZXIgIHNheXMgU28gc2FuY3Rpb25zIHdvdWxkICAgIGNyZWF0ZSBzb21lIHBhaW4gaW4gUnVzc2lhIGZvciBhIGxvdCAgb2YgdGhlIHVwcGVybWlkZGxlIGNsYXNzIG9yIHVwcGVyaW5jb21lIHBlb3BsZSBPaWwgcHJpY2VzIGFscmVhZHkgaGF2ZSBiZWVuIHJpc2luZyB0aGlzIHllYXIgIGJ1dCBoYXZlbnQgaGFkIG11Y2ggaW1wYWN0IG9uIFVTIGdhc29saW5lIHByaWNlcyBXaWVkZW1lciBzYXlzIFNvICBpdHMgbm90IGNsZWFyIHRoYXQgdGhlIFVuaXRlZCBTdGF0ZXMgd2lsbCBmZWVsIG11Y2ggcXVpY2tseSBpZiBjcnVkZSAgcHJpY2VzIHJpc2UgZnVydGhlciBiZWNhdXNlIG9mIHRoZSBVa3JhaW5lICBzaXR1YXRpb24gaGUgc2F5cyBUbyBiZSBzdXJlIHRoYXQgd2lsbCBjaGFuZ2UgYXQgc29tZSBwb2ludCBXaWVkZW1lciBzYWlkIFJ1c3NpYSBhbHJlYWR5IGhhcyBzdGFydGVkIHJhaXNpbmcgaW50ZXJlc3QgIHJhdGVzIHRvIHByb3RlY3QgaXRzIGN1cnJlbmN5IGhlIHNheXMgVGhleXJlIGdvaW5nIHRvIGhhdmUgdG8gZG8gIHdoYXQgVHVya2V5IGFuZCBHcmVlY2UgZGlkIGFuZCB3aGF0IG90aGVyIGVtZXJnaW5nIG1hcmtldHMgdGhhdCBoYXZlICBoYWQgdGhlaXIgY3VycmVuY2llcyBmYWxsIGRpZCBXaWVkZW1lciBzYWlkIFRoZXlyZSBnb2luZyB0byBoYXZlIHRvIHJhaXNlIGludGVyZXN0IHJhdGVzICB3aGljaCBpcyBjZXJ0YWlubHkgZ29pbmcgdG8gYmUgYSBuZWdhdGl2ZSBmb3IgdGhlaXIgZWNvbm9teSBqdXN0IGFzICBpdHMgYmVlbiBmb3IgdGhlIG90aGVyIGVjb25vbWllcyBCdXQgYWdhaW4gZnJvbSBhIGJyb2FkZXIgIHBlcnNwZWN0aXZlIHRoaXMgaXMgcGFydCBvZiBhIGdlbmVyYWwgdHJlbmQgdGhhdHMgYmVlbiAgaGFwcGVuaW5nIGZvciBhIGNvdXBsZSBvZiBtb250aHMgbm93IE9mIGNvdXJzZSBSdXNzaWEgY291bGQgbWFrZSB0aGluZ3Mgd29yc2UgZm9yICBpdHNlbGYgdGhyb3VnaCBpdHMgYWN0aW9ucyBpbiBVa3JhaW5lIFdpZWRlbWVyIHNheXMgUGx1cyByZW1lbWJlciAgdGhhdCBhIGZlYXIgb2YgUnVzc2lhbiBtYXJrZXRzIGlzIHdoYXQga2lja2VkIG9mZiB0aGUgYmlnIGNvbGxhcHNlIGluICAxOTk4IHdpdGggTG9uZ1Rlcm0gQ2FwaXRhbCBNYW5hZ2VtZW50IFNvIEltICBzdXJlIHNvbWUgb2YgdGhhdHMgb24gc29tZSBwZW9wbGVzIG1pbmRzIGFzIHdlbGwgSGUgd2FzIHJlZmVycmluZyB0byB0aGUgaGVkZ2UgZnVuZCB0aGF0IHdlbnQgYmVsbHl1cCBhZnRlciBSdXNzaWEgZGVmYXVsdGVkIG9uIGl0cyBkZWJ0CgogRWRpdG9ycyBOb3RlICBTZWNyZXQgV2FsbCBTdHJlZXQgQ2FsZW5kYXIgVXNlcyBTdHJhbmdlIENyYXNoIEFsZXJ0IFN5c3RlbSBHZXRzIDE4NzkgQW5udWFsIFJldHVybnMgCgpSZWxhdGVkIEFydGljbGVzdAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAb2FydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2UsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEzLTAzLTI3VDAwOjAwOjAwWiBUTyAyMDEzLTEyLTAzVDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDMxOTg=</field><field name="title" class="java.lang.String">rO0ABXQAOUVtZXJnaW5nLU1hcmtldCBJbnZlc3RvcnMgR2V0IFBpY2t5IFdpdGggRmVkIFNldCB0byBUYXBlcg==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUELY+yAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI4Mzk0ZDdmMzY4ZThmMWQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lDQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEQikiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwZmZmZmZm</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwbhR64Ueu</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwTMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwUeuFHrhS</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAulHrhR64U</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAyAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGU4YWJiZGU0MDBkOWEwZWQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEY3AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwMjE=</field><field name="title" class="java.lang.String">rO0ABXQAP0dvbGQgTWFraW5nIFBlb3BsZSBDcmF6eSBpbiBQZXJpbG91cyBTZWFyY2ggZm9yIFN1bmtlbiBUcmVhc3VyZQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJVMdsAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI1YTgyYjNiNDFlNjliZjc=</field><field name="symbol" class="java.lang.String">rO0ABXQABFdPT0Q=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJaWDcAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJeFHrhR64</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJeFHrhR64</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJQ9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBJYAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBIzMzMzMzN</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAnEA==</field><field name="id" class="java.lang.String">rO0ABXQAEGJhZTdmMDc3OWE4ZmI3MjE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mIU4AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM1MDI=</field><field name="title" class="java.lang.String">rO0ABXQAQEdvbGQgQmVmdWRkbGVzIEJlcm5hbmtlIGFzIENlbnRyYWwgQmFua3MnIExvc3NlcyBhdCAkNTQ1IEJpbGxpb24=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGRSUSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGE1YTE1MDQyODBhOTc5NGQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABVNDR0xZ</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGWb6CAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlD1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlGZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkvXCj1wo9</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkvXCj1wo9</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkPXCj1wo9</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAHbyA==</field><field name="id" class="java.lang.String">rO0ABXQAEDNkZTU4YjQzMzA1NTFmZDQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mITOAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwNTI=</field><field name="title" class="java.lang.String">rO0ABXQAMlRoZSBTZWNyZXQsIERpcnR5IENvc3Qgb2YgT2JhbWEncyBHcmVlbiBQb3dlciBQdXNo</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJK5SMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI3MTcyMzgzMzAxZTY3Yjg=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZBUk0=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJQC38AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyI9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABp3A==</field><field name="id" class="java.lang.String">rO0ABXQAEGIxNzhiNTk3MDYyZjcwYTE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGoqAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDMzOTU=</field><field name="title" class="java.lang.String">rO0ABXQARklzIFNob3J0IEdvbGQgUmVhbGx5IHRoZSBCZXN0IENvbW1vZGl0eSBJbnZlc3RtZW50IFRpcD86IENseWRlIFJ1c3NlbGw=</field><field name="content" class="java.lang.String">rO0ABXQWfihDbHlkZSBSdXNzZWxsIGlzIGEgUmV1dGVycyBtYXJrZXQgYW5hbHlzdC4gVGhlIHZpZXdzIGV4cHJlc3NlZCBhcmUgaGlzIG93bi4pIEJ5IENseWRlIFJ1c3NlbGwgR29pbmcgc2hvcnQgZ29sZCB3YXMgdGhlIHRvcCBjb21tb2RpdHkgaW52ZXN0bWVudCBwaWNrIGZvciB0aGUgbmV4dCAxMiBtb250aHMgYnkgdHdvIHRvcC1yYW5rZWQgYW5hbHlzdHMgYXQgdGhlIHJlY2VudCBXb3JsZCBDb21tb2RpdGllcyBXZWVrIGNvbmZlcmVuY2UgaW4gTG9uZG9uLiBUaGVyZSBpcyBub3RoaW5nIHdyb25nIHdpdGggdGhpcyB2aWV3IGFzIHRoZXJlIGFyZSBzb2xpZCByZWFzb25zIHRvIGJlbGlldmUgdGhlIHByZWNpb3VzIG1ldGFsIG1heSBkZWNsaW5lIGZ1cnRoZXIsIHN1Y2ggYXMgdGhlIGxpa2VseSBzY2FsaW5nIGJhY2sgb2YgcXVhbnRpdGF0aXZlIGVhc2luZyBpbiB0aGUgVW5pdGVkIFN0YXRlcyBhbmQgYSBnZW5lcmFsbHkgbW9yZSBwb3NpdGl2ZSBnbG9iYWwgZWNvbm9taWMgb3V0bG9vay4gQnV0IGl0IHN0cnVjayBtZSB0aGF0IGlmIHRoZSBiZXN0IGludmVzdG1lbnQgaW4gdGhlIG5lYXIgdGVybSBpcyB0byBiZSBzaG9ydCBzb21ldGhpbmcgdGhhdCBoYXMgYWxyZWFkeSBzaGVkIDIxIHBlcmNlbnQgb2YgaXRzIHZhbHVlIHNvIGZhciB0aGlzIHllYXIsIHRoaXMgaXMgYSBzYWQgcmVmbGVjdGlvbiBvZiB0aGUgb3ZlcmFsbCBzdGF0ZSBvZiB0aGUgbWFya2V0IGZvciBjb21tb2RpdGllcy4KCkVkaXRvcidzIE5vdGU6IEdldCBUb20gTHVvbmdvJ3MgR29sZCBTdG9jayBBZHZpc2VyIOKAlCBDbGljayBIZXJlIE5vdyEgU3VyZWx5IHRoZXJlIGhhcyB0byBiZSBzb21lIGJldHRlciBiZXRzIGluIGNvbW1vZGl0aWVzLCBib3RoIGZyb20gdGhlIHNob3J0IHNpZGUgYW5kIGZyb20gdGhlIG1vcmUgdHJhZGl0aW9uYWwgbG9uZyBzdHJhdGVneSB0aGF0IGlzIHRoZSBtYW5kYXRlIG9mIG1hbnkgcGVuc2lvbiBmdW5kcyB0aGF0IGFyZSBtb3N0IGxpa2VseSBjdXJyZW50bHkgc2NyYXRjaGluZyB0aGVpciBoZWFkcyBhbmQgd29uZGVyaW5nIGlmIHRoZXkgc2hvdWxkIGludmVzdCBpbiBjb21tb2RpdGllcyBhdCBhbGwuIEl0J3Mgbm90IGJlZW4gYSBncmVhdCB5ZWFyIHRvIGJlIGludmVzdGluZyBpbiBjb21tb2RpdGllcyB1c2luZyBhIGxvbmctb25seSwgYnV5IGFuZCBob2xkIHN0cmF0ZWd5LCB3aXRoIHRoZSBTJlAgR1NDSSAgaW5kZXggZG93biAxLjIgcGVyY2VudCBhbmQgdGhlIERKLVVCUyBkb3duIDcuNCBwZXJjZW50IHNvIGZhci4gVGhlIFMmUCBHU0NJIGhhcyBhIGhpZ2hlciBlbmVyZ3kgY29tcG9uZW50LCB3aGljaCBoYXMga2VwdCBpdHMgcmV0dXJucyBuZWFyIHBhciBtYWlubHkgYXMgYSByZXN1bHQgb2YgdGhlIG9uZ29pbmcgcmlzayBwcmVtaXVtIGluIHRoZSBwcmljZSBvZiBvaWwgZHVlIHRvIHRoZSB0aHJlYXQgb2YgZGlzcnVwdGlvbnMgZnJvbSBNaWRkbGUgRWFzdCB1bnJlc3QuIFdoaWxlIEJyZW50IGNydWRlLCBjdXJyZW50bHkgYXJvdW5kICQxMTAgYSBiYXJyZWwsIGlzIG1vcmUgb3IgbGVzcyBuZWFyIGl0cyBzdGFydGluZyBwb2ludCBmb3IgdGhlIHllYXIsIGl0IGFwcGVhcnMgYmV0dGVyIG9wcG9ydHVuaXRpZXMgbWF5IGV4aXN0IGluIHRyYWRpbmcgdGhlIGNyYWNrIHNwcmVhZHMgZm9yIHZhcmlvdXMgb2lsIHByb2R1Y3RzIGluIEFzaWEuIERJRVNFTCBPVkVSU1VQUExZIEl0IGhhcyBiZWVuIHByb2ZpdGFibGUgZm9yIG1hbnkgeWVhcnMgZm9yIEFzaWFuLWJhc2VkIHJlZmluZXJzIHRvIG1ha2UgZGllc2VsIGFuZCBzaGlwIGl0IHRvIEV1cm9wZSwgd2hpY2ggaXMgc3RydWN0dXJhbGx5IHNob3J0IG9mIHRoZSBmdWVsIHRoYXQgcG93ZXJzIG1vc3Qgb2YgaXRzIHZlaGljbGVzLiBIb3dldmVyLCBhIHJhZnQgb2YgbmV3IHJlZmluZXJpZXMgaW4gQXNpYSwgY291cGxlZCB3aXRoIHJpc2luZyBleHBvcnRzIG9mIFUuUy4gYW5kIFJ1c3NpYW4gZGllc2VsLCBhcyB3ZWxsIGFzIHNvZnQgZWNvbm9taWMgZ3Jvd3RoIGluIEV1cm9wZSwgaXMgdW5kZXJtaW5pbmcgdGhpcyB0cmFkZS4gVGhlIFNpbmdhcG9yZSBnYXNvaWwgY3JhY2ssIHdoaWNoIGNvbXBhcmVzIHRoZSBwcmljZSBvZiBnYXNvaWwgdG8gRHViYWkgY3J1ZGUsIHdhcyAkMTcuMDQgYSBiYXJyZWwgb24gT2N0LiAxOCwgZG93biAxMCBwZXJjZW50IHNpbmNlIHRoZSBiZWdpbm5pbmcgb2YgMjAxMy4gR2Fzb2lsIGlzIHRoZSBicm9hZCB0ZXJtIGZvciBtaWRkbGUgZGlzdGlsbGF0ZXMgc3VjaCBhcyBkaWVzZWwgYW5kIGtlcm9zZW5lLiBQYXJ0IG9mIHRoaXMgY2FuIGJlIGV4cGxhaW5lZCBieSBzbG93ZXIgZWNvbm9taWMgZ3Jvd3RoLCBidXQgaXQgaXMgYWxzbyBsaWtlbHkgdGhhdCBpbmNyZWFzZWQgc3VwcGxpZXMgb2YgZGllc2VsIGFyZSBjcmltcGluZyByZWZpbmluZyBwcm9maXRzLiBUaGUgNDAwLDAwMCBiYXJyZWxzIHBlciBkYXkgKGJwZCkgZXhwb3J0LW9yaWVudGF0ZWQgSnViYWlsIHJlZmluZXJ5IGluIFNhdWRpIEFyYWJpYSBzdGFydGVkIHNoaXBwaW5nIGNhcmdvZXMgaW4gU2VwdGVtYmVyLCBhZGRpbmcgdG8gcmVnaW9uYWwgc3VwcGxpZXMuIENoaW5lc2UgcmVmaW5pbmcgY2FwYWNpdHkgaXMgbGlrZWx5IHRvIHJpc2UgYnkgNjkwLDAwMCBicGQgaW4gMjAxMywgd2l0aCB0aGUgYnVsayBjb21pbmcgb25saW5lIGluIHRoZSBmb3VydGggcXVhcnRlci4gUmVmaW5pbmcgY2FwYWNpdHkgZXhwYW5zaW9uIGlzIHJ1bm5pbmcgYWhlYWQgb2YgZG9tZXN0aWMgZGVtYW5kIGdyb3d0aCwgcmVzdWx0aW5nIGluIG1vcmUgZnVlbCBiZWluZyBhdmFpbGFibGUgZm9yIGV4cG9ydC4gQ2hpbmVzZSBkaWVzZWwgZXhwb3J0cyB3ZXJlIGEgbmV0IDQ2LDAwMCBicGQgaW4gdGhlIGZpcnN0IGVpZ2h0IG1vbnRocyBvZiAyMDEzLCBhIHR1cm5hcm91bmQgZnJvbSBuZXQgaW1wb3J0cyBvZiAxMywyMDAgYnBkIG92ZXIgdGhlIHNhbWUgcGVyaW9kIGluIDIwMTIuIFUuUy4gZXhwb3J0cyBvZiBkaWVzZWwgc3VyZ2VkIHRvIDEuMzggbWlsbGlvbiBicGQgaW4gSnVseSwgYSByZWNvcmQgaGlnaCwgd2hpbGUgUnVzc2lhIGlzIGFsc28gaW5jcmVhc2luZyBpbnZlc3RtZW50IGluIHJlZmluZXJ5IHVwZ3JhZGVzIGluIG9yZGVyIHRvIGJvb3N0IGV4cG9ydHMgb2YgcmVmaW5lZCBwcm9kdWN0cy4gUnVzc2lhJ3MgZGllc2VsIHNoaXBtZW50cyBjb3VsZCBkb3VibGUgZnJvbSBBdWd1c3QncyBsZXZlbCBhcm91bmQgNzE3LDAwMCBicGQgd2l0aGluIHRoZSBuZXh0IGZpdmUgeWVhcnMuIFRoaXMgZGllc2VsIGZsb29kaW5nIGludG8gRXVyb3BlIGZyb20gdGhlIFVuaXRlZCBTdGF0ZXMsIFJ1c3NpYSBhbmQgdGhlIE1pZGRsZSBFYXN0IHJhaXNlcyB0aGUgcmlza3MgZm9yIEFzaWFuIHJlZmluZXJzIGFuZCB3aWxsIHB1dCBkb3dud2FyZCBwcmVzc3VyZSBvbiBjcmFja3MuIEdhc29saW5lIGluIEFzaWEgbWF5IHByb3ZpZGUgYSB0ZW1wbGF0ZSBmb3Igd2hlcmUgdGhlIGdhc29pbCBjcmFjayBjb3VsZCBoZWFkLiBUaGUgU2luZ2Fwb3JlIG1hcmdpbiBmb3IgOTItb2N0YW5lIGdhc29saW5lIG92ZXIgQnJlbnQgIGRyb3BwZWQgdG8gJDIuNzQgYSBiYXJyZWwgb24gT2N0LiAxOCwgZG93biA3MiBwZXJjZW50IHNpbmNlIHRoZSBzdGFydCBvZiB0aGUgeWVhci4gSXQgaGFzIGFscmVhZHkgcmVzcG9uZGVkIHRvIGEgbW9yZSB0aGFuIGRvdWJsaW5nIG9mIENoaW5lc2UgZXhwb3J0cyB0byAxMTMsMDAwIGJwZCBpbiB0aGUgZmlyc3QgZWlnaHQgbW9udGhzIG9mIHRoZSB5ZWFyLCBhcyB3ZWxsIGFzIGNhcmdvZXMgY29taW5nIHRvIEFzaWEgZnJvbSBvdGhlciByZWdpb25zIGFzIHRoZSBVbml0ZWQgU3RhdGVzIHJlZHVjZXMgaW1wb3J0cy4gQkFTRSBNRVRBTCBTUVVFRVpFIEZvciBpbnZlc3RvcnMgd2hvIGNhbm5vdCBwbGFjZSBzaG9ydCB0cmFkZXMsIHRoZXJlIGFyZSBzdGlsbCBzb21lIGNvbW1vZGl0aWVzIHRoYXQgbWF5IG9mZmVyIHZhbHVlLCBzdWNoIGFzIG5pY2tlbCBhbmQgdGluLiBGb3IgdGhlc2UgbWV0YWxzIGFueSBsb25nIHBvc2l0aW9uIGlzIGZvdW5kZWQgb24gdGhlIHRocmVhdCB0byBzdXBwbHkgZnJvbSBJbmRvbmVzaWEncyBwbGFucyB0byBiYW4gdGhlIGV4cG9ydCBvZiB1bnJlZmluZWQgb3JlcyBmcm9tIG5leHQgeWVhci4gSXQncyBzdGlsbCBubyBtZWFucyBjZXJ0YWluIHRoYXQgYSBmdWxsIGJhbiB3aWxsIGJlIGltcGxlbWVudGVkLCBidXQgdGhlIHJpc2tzIGFyZSB0aGF0IHNvbWUgYWN0aW9uIGlzIHRha2VuLCBjdXR0aW5nIGV4cG9ydHMgZnJvbSB0aGUgU291dGhlYXN0IEFzaWFuIG5hdGlvbiwgd2hpY2ggc3VwcGxpZXMgYWJvdXQgYSBxdWFydGVyIG9mIHRoZSB3b3JsZCdzIHRpbiBhbmQgaXMgdGhlIHRvcCBuaWNrZWwgZXhwb3J0ZXIuIExvbmRvbiBiZW5jaG1hcmsgbmlja2VsIGlzIGRvd24gMTYuNyBwZXJjZW50IHNvIGZhciB0aGlzIHllYXIgdG8gbmVhciBmb3VyLXllYXIgbG93cyBldmVuIHRob3VnaCBDaGluYSdzIGltcG9ydHMgaGF2ZSBqdW1wZWQgMTAgcGVyY2VudCBpbiB0aGUgeWVhciB0byBBdWd1c3QuIExvbmRvbiB0aW4gaGFzIGZhcmVkIGJldHRlciwgYnV0IGlzIHN0aWxsIGRvd24gMi43IHBlcmNlbnQgZm9yIHRoZSBmaXJzdCBlaWdodCBtb250aHMgZXZlbiB0aG91Z2ggQ2hpbmEncyBpbXBvcnRzIGhhdmUgbGVhcHQgYnkgMTUyIHBlcmNlbnQuIFdoYXQgaGFzIGJlZW4gaGFwcGVuaW5nIGlzIHRoYXQgbWFqb3IgYnV5ZXJzLCBzdWNoIGFzIENoaW5hLCBoYXZlIHN0b2NrZWQgdXAgb24gbmlja2VsIGFuZCBhcmUgd2FpdGluZyB0byBzZWUgd2hhdCBJbmRvbmVzaWEgYWN0dWFsbHkgZG9lcyBjb21lIEphbnVhcnkgbmV4dCB5ZWFyLiBUaGUgdGluIHNpdHVhdGlvbiBpcyBiZWluZyBjb21wbGljYXRlZCBieSBuZXcgcnVsZXMgaW4gSW5kb25lc2lhIHRvIGZvcmNlIHRoZSB1c2Ugb2YgYSBsb2NhbCBleGNoYW5nZSBiZWZvcmUgdGhlIG1ldGFsIGlzIGV4cG9ydGVkLiBUaGlzIGN1dCBleHBvcnRzIGJ5IDkwIHBlcmNlbnQgaW4gU2VwdGVtYmVyIGFuZCBidXllcnMgc3RpbGwgYXBwZWFyIHJlbHVjdGFudCB0byBqb2luIHRoZSBJbmRvbmVzaWFuIENvbW1vZGl0eSBhbmQgRGVyaXZhdGl2ZSBFeGNoYW5nZSwgdGhlIG9ubHkgYXBwcm92ZWQgZXhjaGFuZ2UgZm9yIHRpbiB0cmFkaW5nLiBUaGUgbWFya2V0IGlzIHNvIGZhciB0YWtpbmcgdGhlIHZpZXcgdGhhdCB0aGUgSW5kb25lc2lhbiBhdXRob3JpdGllcyB3aWxsIGJhY2sgZG93biwgYW5kIHdoaWxlIHRoZXkgbWF5LCB0aGV5IG1heSBhbHNvIHN0aWNrIHRvIHRoZWlyIGd1bnMsIG9yIG5vdCBiYWNrIGRvd24gYXMgbXVjaCBhcyB0aGUgbWFya2V0IGV4cGVjdHMuIFR1cm5pbmcgYmFjayB0byB0aGUgYmlnZ2VyIHBpY3R1cmUgb2YgY29tbW9kaXR5IGludmVzdG1lbnRzLCBpdCdzIGNsZWFyIGl0J3MgYmVjb21lIG11Y2ggaGFyZGVyIHRvIGZpbmQgY29uc2lzdGVudCByZXR1cm5zLiBUaGlzIHdhcyB0aGUgbWFpbiBjb21wbGFpbnQgb2YgZnVuZCBtYW5hZ2VycyBhdCB0aGUgV29ybGQgQ29tbW9kaXRpZXMgV2VlaywgbWFueSBvZiB3aG9tIHF1ZXN0aW9uZWQgd2hldGhlciB0aGV5IG5lZWRlZCB0byBhbGxvY2F0ZSBhbnkgb2YgdGhlIHBvcnRmb2xpbyB0b3dhcmRzIHdoYXQgdGhleSBzZWUgYXMgYW4gaW5jcmVhc2luZ2x5IGRpZmZpY3VsdCBhc3NldCBjbGFzcy4KCkVkaXRvcidzIE5vdGU6IEdldCBUb20gTHVvbmdvJ3MgR29sZCBTdG9jayBBZHZpc2VyIOKAlCBDbGljayBIZXJlIE5vdyE=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUHZYkyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDJhODgxMTBlMWU4MjBiM2M=</field><field name="symbol" class="java.lang.String">rO0ABXQABFZJRVc=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUHeiKiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEADXCj1wo9c</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAD1wo9cKPX</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEACZmZmZmZm</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEACj1wo9cKP</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEACj1wo9cKP</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAFMbA==</field><field name="id" class="java.lang.String">rO0ABXQAEDFjNTA4NzQ0MmI2ZTIxMGE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mG3rAAAA==</field></document></documents><date>2015-05-07T12:12:35-0500</date></cacheEntry>
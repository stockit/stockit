<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0Cj9HZW5lcmFsIE1vdG9ycyBDbyBvbiBUdWVzZGF5IG5hbWVkIGEgbmV3IHZlaGljbGUgc2FmZXR5IGNoaWVmIHdobyB3aWxsIGJlIHJlc3BvbnNpYmxlIGZvciBoZWFkaW5nIG9mZiBpc3N1ZXMgbGlrZSB0aGUgZmF1bHR5IGlnbml0aW9uIHN3aXRjaGVzIGxpbmtlZCB0byAxMiBkZWF0aHMgYW5kIHRoZSByZWNhbGwgb2YgbW9yZSB0aGFuIDE2IG1pbGxpb24gdmVoaWNsZXMgSmVmZiBCb3llciBhIEdNIHZldGVyYW4gd2hvIGhhcyBiZWVuIHdpdGggdGhlIGNvbXBhbnkgZm9yIG1vcmUgdGhhbiA0MCB5ZWFycyBoYXMgYmVlbiBhcHBvaW50ZWQgdmljZSBwcmVzaWRlbnQgb2YgZ2xvYmFsIHZlaGljbGUgc2FmZXR5IGVmZmVjdGl2ZSBpbW1lZGlhdGVseSBUaGUgTm8gMSBVUyBhdXRvbWFrZXIgc2FpZCBCb3llcnMgcmVzcG9uc2liaWxpdGllcyB3aWxsIGJlIHRvIHF1aWNrbHkgaWRlbnRpZnkgYW5kIHJlc29sdmUgcHJvZHVjdCBzYWZldHkgaXNzdWVzIGluY2x1ZGluZyBoYW5kbGluZyByZWNhbGxzIEJveWVyIHdobyB3YXMgZXhlY3V0aXZlIGRpcmVjdG9yIG9mIGVuZ2luZWVyaW5nIG9wZXJhdGlvbnMgYW5kIHN5c3RlbXMgZGV2ZWxvcG1lbnQgd2lsbCBwcm92aWRlIGZyZXF1ZW50IHVwZGF0ZXMgb24gdmVoaWNsZSBzYWZldHkgdG8gQ2hpZWYgRXhlY3V0aXZlIE1hcnkgQmFycmEgc2VuaW9yIG1hbmFnZW1lbnQgYW5kIHRoZSBib2FyZCBvZiBkaXJlY3RvcnMgSmVmZnMgYXBwb2ludG1lbnQgcHJvdmlkZXMgZGlyZWN0IGFuZCBvbmdvaW5nIGFjY2VzcyB0byBHTSBsZWFkZXJzaGlwIGFuZCB0aGUgYm9hcmQgb2YgZGlyZWN0b3JzIG9uIGNyaXRpY2FsIGN1c3RvbWVyIHNhZmV0eSBpc3N1ZXMgQmFycmEgc2FpZCBpbiBhIHN0YXRlbWVudCBUaGlzIG5ldyByb2xlIGVsZXZhdGVzIGFuZCBpbnRlZ3JhdGVzIG91ciBzYWZldHkgcHJvY2VzcyB1bmRlciBhIHNpbmdsZSBsZWFkZXIgc28gd2UgY2FuIHNldCBhIG5ldyBzdGFuZGFyZCBmb3IgY3VzdG9tZXIgc2FmZXR5IHdpdGggbW9yZSByaWdvcm91cyBhY2NvdW50YWJpbGl0eSBzaGUgYWRkZWQgSWYgdGhlcmUgYXJlIGFueSBvYnN0YWNsZXMgaW4gaGlzIHdheSBKZWZmIGhhcyB0aGUgYXV0aG9yaXR5IHRvIGNsZWFyIHRoZW0gSWYgaGUgbmVlZHMgYW55IGFkZGl0aW9uYWwgcmVzb3VyY2VzIGhlIHdpbGwgZ2V0IHRoZW0gSW4gdGhlIGxhc3QgdHdvIG1vbnRocyBHTSBoYXMgcmVjYWxsZWQgbW9yZSB0aGFuIDMzIG1pbGxpb24gdmVoaWNsZXMgZ2xvYmFsbHkgZm9sbG93aW5nIHRoZSBhbm5vdW5jZW1lbnQgb24gTW9uZGF5IG9mIHRocmVlIG5ldyByZWNhbGxzIGFmZmVjdGluZyAxNzUgbWlsbGlvbiB2ZWhpY2xlcyBtb3N0IGluIHRoZSBVbml0ZWQgU3RhdGVzIEJhcnJhIHNhaWQgb24gTW9uZGF5IHRoYXQgdGhlIERldHJvaXQgYXV0b21ha2VyIHdvdWxkIHRha2UgYSAzMDAgbWlsbGlvbiBjaGFyZ2UgaW4gdGhlIGZpcnN0IHF1YXJ0ZXIgcHJpbWFyaWx5IHRvIGNvdmVyIHRoZSBjb3N0cyByZWxhdGVkIHRvIHRoZSBpZ25pdGlvbnN3aXRjaCByZWNhbGwgYW5kIHRoZSB0aHJlZSBuZXcgcmVjYWxscyBTaGUgYWxzbyBzYWlkIHRoZXJlIHdvdWxkIGJlIG1vcmUgZGV2ZWxvcG1lbnRzIHRvIGFubm91bmNlIGluIHRoZSBmdXR1cmUgYXMgdGhlIGNvbXBhbnkgd29ya3MgdG8gaW1wcm92ZSBpdHMgcmVjYWxsIHByb2Nlc3MgR00gc2FpZCB0aGF0IHdoZW4gdGhlIGlnbml0aW9uIHN3aXRjaCB3YXMgam9zdGxlZCBhIGtleSBjb3VsZCB0dXJuIG9mZiB0aGUgY2FycyBlbmdpbmUgYW5kIGRpc2FibGUgYWlyYmFncyBzb21ldGltZXMgd2hpbGUgdHJhdmVsaW5nIGF0IGhpZ2ggc3BlZWQgQmFycmEgcHJldmlvdXNseSBhcG9sb2dpemVkIGZvciBHTXMgZmFpbHVyZSB0byBjYXRjaCB0aGUgcHJvYmxlbSBzb29uZXIgVGhlIGRlY2FkZWxvbmcgcHJvY2VzcyB0aGF0IGxlZCB0byBsYXN0IG1vbnRocyBpZ25pdGlvbnN3aXRjaCByZWNhbGwgb2Ygc3VjaCBvbGRlciBHTSBtb2RlbHMgYXMgdGhlIDIwMDUyMDA3IENoZXZyb2xldCBDb2JhbHQgYW5kIDIwMDMyMDA3IFNhdHVybiBJb24gaGFzIGxlZCB0byBnb3Zlcm5tZW50IGNyaW1pbmFsIGFuZCBjaXZpbCBpbnZlc3RpZ2F0aW9ucyBjb25ncmVzc2lvbmFsIGhlYXJpbmdzIGFuZCBjbGFzc2FjdGlvbiBsYXdzdWl0cyBpbiB0aGUgVW5pdGVkIFN0YXRlcyBhbmQgQ2FuYWRhIEFsbCBhc2sgd2h5IEdNIHRvb2sgc28gbG9uZyB0byBhZGRyZXNzIGEgcHJvYmxlbSBpdCBoYXMgc2FpZCBmaXJzdCBjYW1lIHRvIGl0cyBhdHRlbnRpb24gaW4gMjAwMSBJbiBoaXMgbmV3IHNhZmV0eSBqb2IgQm95ZXIgNTggd2lsbCByZXBvcnQgdG8gSm9obiBDYWxhYnJlc2UgdmljZSBwcmVzaWRlbnQgaW4gY2hhcmdlIG9mIGdsb2JhbCB2ZWhpY2xlIGVuZ2luZWVyaW5nIGFuZCBiZSBhIG1lbWJlciBvZiBnbG9iYWwgcHJvZHVjdCBkZXZlbG9wbWVudCBjaGllZiBNYXJrIFJldXNzcyBzdGFmZiBHTSBzYWlkIEJveWVyIHdpbGwgaGF2ZSBnbG9iYWwgcmVzcG9uc2liaWxpdHkgZm9yIHRoZSBzYWZldHkgZGV2ZWxvcG1lbnQgb2YgR00gdmVoaWNsZSBzeXN0ZW1zIGFzIHdlbGwgYXMgcG9zdHNhbGUgc2FmZXR5IGFjdGl2aXRpZXMgaW5jbHVkaW5nIHJlY2FsbHMgdAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAb2FydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2UsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEwLTA2LTExVDAwOjAwOjAwWiBUTyAyMDEzLTA3LTMxVDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABTIzODQ4</field><field name="title" class="java.lang.String">rO0ABXQAOFRveW90YSBBdWRpdCBGaW5kcyDigJhNaXN1bmRlcnN0YW5kaW5n4oCZIFdpdGggU3VwcGxpZXJz</field><field name="content" class="java.lang.String">rO0ABXQW+1RveW90YSBpcyBhIHRoaXJkIG9mIHRoZSB3YXkgdGhyb3VnaCBhdWRpdHMgb2Ygc3VwcGxpZXJzIG9mIOKAnHRoZSBoaWdoZXN0IHByaW9yaXR54oCdIHBhcnRzLCBhbmQgc29tZSBzdXBwbGllcnMgYmVsaWV2ZWQgdG8gYmUgdGVzdGluZyBwcm9kdWN0cyBmb3VyIHRpbWVzIGEgeWVhciB3ZXJlIG9ubHkgZG9pbmcgc28gb25jZSBhIHllYXIsIERpbm8gVHJpYW50YWZ5bGxvcywgdmljZSBwcmVzaWRlbnQgb2YgTm9ydGggQW1lcmljYW4gcHJvZHVjdCBxdWFsaXR5LCBzYWlkIHllc3RlcmRheS4g4oCcV2UgaGF2ZSBmb3VuZCBhcmVhcyB3aGVyZSBtYXliZSB0aGVyZSB3YXMgYSBtaXN1bmRlcnN0YW5kaW5nIGFib3V0IHNvbWUgYXNwZWN0cyBvZiB0aGUgcHJvY2VzcyzigJ0gc2FpZCBUcmlhbnRhZnlsbG9zLCB3aG8gYXR0ZW5kZWQgYSBnbG9iYWwgcXVhbGl0eSBtZWV0aW5nIHRvZGF5IGF0IHRoZSBjYXJtYWtlcuKAmXMgVG95b3RhIENpdHkgaGVhZHF1YXJ0ZXJzLiDigJxUaGVzZSBpbXByb3ZlbWVudHMgd2XigJlyZSBtYWtpbmcsIGlmIHdl4oCZZCBtYWRlIHRoZW0gdHdvIHllYXJzIGFnbywgbWF5YmUgc29tZSBvZiB0aGVzZSBpc3N1ZXMgd291bGRu4oCZdCBoYXZlIGhhcHBlbmVkLuKAnSBUaGUgd29ybGTigJlzIGJpZ2dlc3QgY2FybWFrZXIgaXMgc2Vla2luZyB0byByZWdhaW4gY3VzdG9tZXIgdHJ1c3QgYW5kIG1hcmtldCBzaGFyZSBhZnRlciByZWNhbGxpbmcgbW9yZSB0aGFuIDggbWlsbGlvbiB2ZWhpY2xlcyBnbG9iYWxseSBmb3IgZGVmZWN0cyBsaW5rZWQgdG8gdW5pbnRlbmRlZCBhY2NlbGVyYXRpb24uIEluIFRveW90YSBDaXR5LCBpdCBhZGRlZCA0MCBlbmdpbmVlcnMgYW5kIGNyZWF0ZWQgdGVhbXMgdG8gc2NydXRpbml6ZSB0aGUgZGVzaWducyBvZiBjb21wb25lbnRzLCBhY2NvcmRpbmcgdG8gdGhlIGNvbXBhbnkgYW5kIGFuIG91dHNpZGUgY29uc3VsdGFudC4gQ2xvc2VyIEV4YW1pbmF0aW9uIOKAnFRoaXMgY3Jpc2lzIHdhcyBhIHByb2JsZW0gdGhhdCBjYW1lIGZyb20gdGhlIGRlc2lnbi0gZGV2ZWxvcG1lbnQgc3RhZ2Us4oCdIHNhaWQgSGlyb3NoaSBPc2FkYSwgd2hvIGxlYWRzIGEgcGFuZWwgZm9ybWVkIGJ5IHRoZSBVbmlvbiBvZiBKYXBhbmVzZSBTY2llbnRpc3RzIGFuZCBFbmdpbmVlcnMgdG8gaGVscCBUb3lvdGEgZXZhbHVhdGUgaXRzIGVmZm9ydHMgdG8gYm9vc3QgcXVhbGl0eS4gQ2xvc2VyIGV4YW1pbmF0aW9uIG9mIGNvbXBvbmVudHMg4oCcc2hvdWxkIGJlIGFibGUgdG8gaGVscCBwcmV2ZW50IHF1YWxpdHkgZGVmZWN0cyzigJ0gc2FpZCBPc2FkYSwgYSBwcm9mZXNzb3Igb2YgbWFuYWdlbWVudCBhdCB0aGUgVG9reW8gSW5zdGl0dXRlIG9mIFRlY2hub2xvZ3kgYW5kIHRoZSAyMDA5IERlbWluZyBQcml6ZSB3aW5uZXIgZm9yIGNvbnRyaWJ1dGlvbnMgdG8gcXVhbGl0eSBjb250cm9sLiBUb3lvdGEgYWxzbyBuZWVkcyB0byBsb29rIG1vcmUgY2FyZWZ1bGx5IGF0IHRoZSBxdWFsaXR5IG9mIHN1cHBsaWVyc+KAmSBmaW5hbmNlcywgbWFuYWdlbWVudCBhbmQgYWJpbGl0eSB0byBleHBhbmQgdGhlaXIgb3BlcmF0aW9ucywgaGUgc2FpZC4gVGhlIGluZGl2aWR1YWwgcmV2aWV3cyBpbiBOb3J0aCBBbWVyaWNhIHR5cGljYWxseSB0YWtlIGEgZmV3IGRheXMgYW5kIGluY2x1ZGUgY2hlY2tzIHRvIGVuc3VyZSB0aGF0IGFzc2VtYmx5IHByb2Nlc3Nlcywgc3VjaCBhcyBhcmMgd2VsZGluZyBvZiBtZXRhbCwgYXJlIGNvbnNpc3RlbnQuIEVuZ2luZWVycyBhcmUgZXhhbWluaW5nIHBhcnRzIGNvbnNpZGVyZWQgY3JpdGljYWwgdG8gdmVoaWNsZSBzYWZldHksIHN1Y2ggYXMgdGhvc2UgaW52b2x2ZWQgaW4gYnJha2luZyBhbmQgdHVybmluZy4gQ1RTIENvcnAuLCB0aGUgRWxraGFydCwgSW5kaWFuYS1iYXNlZCBtYWtlciBvZiBhY2NlbGVyYXRvciBwZWRhbCBjb21wb25lbnRzIHRoYXQgdHJpZ2dlcmVkIHRoZSByZWNhbGxzIGluIEphbnVhcnksIHdhcyBhbW9uZyB0aGUgZmlyc3QgY29tcGFuaWVzIHJldmlld2VkIHVuZGVyIHRoZSBuZXcgc3lzdGVtLiDigJhHb29kIFJlbGF0aW9uc2hpcOKAmSDigJxUaGV5IHJlbWFpbiBhIHN1cHBsaWVyLOKAnSBUcmlhbnRhZnlsbG9zIHNhaWQuIOKAnFdlIGhhdmUgYSBnb29kIHJlbGF0aW9uc2hpcCB3aXRoIHRoZW0u4oCdIE5vIHBhcnRzIHN1cHBsaWVycyBoYXZlIGJlZW4gZHJvcHBlZCBzbyBmYXIsIGhlIHNhaWQuIFRoZSBpbml0aWFsIHJldmlld3MsIGNvdmVyaW5nIGEgcXVhcnRlciBvZiB0aGUgc3VwcGxpZXJzIGluIHRoZSBVLlMuLCBDYW5hZGEgYW5kIE1leGljbywgdW5jb3ZlcmVkIG5vIG5ldyBkZWZlY3RzLiBPbmNlIHRoZXkgYXJlIGNvbXBsZXRlZCwgVG95b3RhIHdpbGwgZXhwYW5kIHRoZW0gdG8gYWxsIDcwMCBwYXJ0c21ha2VycyB0aGVyZSwgVHJpYW50YWZ5bGxvcyBzYWlkLiBXaXRoIGl0cyBoZWlnaHRlbmVkIGZvY3VzIG9uIHF1YWxpdHksIFRveW90YSBpcyByZWR1Y2luZyB0aGUgbnVtYmVyIG9mIG5ldyBkZXZlbG9wbWVudCBwcm9qZWN0cywgTWFzYW1pIERvaSwgYSBUb3lvdGEgc3Bva2VzbWFuLCBzYWlkIHdpdGhvdXQgc3BlY2lmeWluZyB0aGUgc2NhbGUgb2YgdGhlIGN1dHMuIEF0IHRvZGF54oCZcyBtZWV0aW5nIGluIFRveW90YSBDaXR5LCB0aGUgZ2xvYmFsIGNvbW1pdHRlZSBkaXNjdXNzZWQgcHJvZ3Jlc3Mgb24gcXVhbGl0eS1yZWxhdGVkIGluaXRpYXRpdmVzIGluY2x1ZGluZyBhIG5ldyBkYXRhYmFzZSBjcmVhdGVkIGluIEF1Z3VzdCB0aGF0IGdhdGhlcnMgaW5mb3JtYXRpb24gZnJvbSBjdXN0b21lcnMgYW5kIGdvdmVybm1lbnQgYXV0aG9yaXRpZXMgbW9yZSBlZmZpY2llbnRseSwgc3Bva2Vzd29tYW4gU2hpb3JpIEhhc2hpbW90byBzYWlkIHRvZGF5LiBTaGFyZXMgaW4gVG95b3RhIHJvc2UgMy40IHBlcmNlbnQgdG8gMiw5NDQgeWVuIGFzIG9mIDI6NDQgcC5tLiBpbiBUb2t5byB0cmFkaW5nLiBUaGUgc3RvY2sgaGFzIGRlY2xpbmVkIDI0IHBlcmNlbnQgaW4gMjAxMC4gTGltaXRlZCBSb2xlIFVudGlsIHJlY2VudGx5LCBUb3lvdGHigJlzIE5vcnRoIEFtZXJpY2FuIG9wZXJhdGlvbnMgaGFkIGEgbGltaXRlZCByb2xlIGluIGRlc2lnbiBkZXZlbG9wbWVudCBhbmQgcXVhbGl0eSBpc3N1ZXMgZm9yIHZlaGljbGVzIG1hZGUgaW4gSmFwYW4gYW5kIHNvbGQgaW4gTm9ydGggQW1lcmljYSwgc2FpZCBTdGV2ZSBTdC4gQW5nZWxvLCB0aGUgcmVnaW9u4oCZcyBjaGllZiBxdWFsaXR5IG9mZmljZXIuIFRoZSBjYXJtYWtlciBzYWlkIGxhc3Qgd2VlayBpdCBhZGRlZCB0aHJlZSBjaGllZiBlbmdpbmVlcnMgYXQgaXRzIHRlY2huaWNhbCBjZW50ZXIgaW4gQW5uIEFyYm9yLCBNaWNoaWdhbiwgdG8gZm9jdXMgb24gZGVzaWduLiBJdCBpcyBvcGVuaW5nIG1vcmUgdGhhbiAzMCBmaWVsZCBvZmZpY2VzIGdhdGhlcmluZyBxdWFsaXR5LXJlbGF0ZWQgZGF0YSBpbiBlYWNoIHJlZ2lvbiwgaW5jbHVkaW5nIHNldmVuIGluIE5vcnRoIEFtZXJpY2EuIOKAnFdlIG5vdyBwbGF5IGEgZGVjaXNpdmUgcm9sZSBpbiBxdWFsaXR5IGlzc3VlcyBpbiBKYXBhbi0gbWFkZSB2ZWhpY2xlcyBvbiB0aGUgcm9hZCB0b2RheSBhbmQgdmVoaWNsZXMgYmVpbmcgZGVzaWduZWQgZm9yIHRoZSBmdXR1cmUs4oCdIFN0LiBBbmdlbG8gc2FpZC4gVG95b3Rh4oCZcyBVLlMuIHNhbGVzIGdhaW5lZCAxLjEgcGVyY2VudCB0aGlzIHllYXIgdGhyb3VnaCBTZXB0ZW1iZXIsIHRoZSBzbWFsbGVzdCBpbmNyZWFzZSBhbW9uZyB0aGUgdG9wIGVpZ2h0IGNhcm1ha2VycywgYXMgcmVjYWxscyBmb3Igb3RoZXIgcXVhbGl0eSBwcm9ibGVtcyBzcHJlYWQgdG8gaXRzIExleHVzIGJyYW5kLiBUaGUgY29tcGFueSBhbHNvIGRyb3BwZWQgb3V0IG9mIHRoZSB0b3AgMTAgZ2xvYmFsIGJyYW5kcyByYW5rZWQgYW5udWFsbHkgYnkgY29uc3VsdGluZyBjb21wYW55IEludGVyYnJhbmQuIFRlbGV2aXNpb24gQWRzIFRoZSBjb21wYW554oCZcyBVLlMuIHRlbGV2aXNpb24gYWRzIHRlbGwgY29uc3VtZXJzIGl04oCZcyBpbnZlc3RpbmcgJDEgbWlsbGlvbiBhbiBob3VyIOKAnHRvIGltcHJvdmUgb3VyIHRlY2hub2xvZ3kgYW5kIHlvdXIgc2FmZXR54oCdIGFuZCB0aGF0IGl0cyB2ZWhpY2xlcyB3b24gdGhlIG1vc3QgVG9wIFNhZmV0eSBQaWNrIGF3YXJkcyBpbiAyMDEwIGZyb20gdGhlIEluc3VyYW5jZSBJbnN0aXR1dGUgZm9yIEhpZ2h3YXkgU2FmZXR5LiBOZXcgc2VtaW5hcnMgaW4gQW5uIEFyYm9yIGZvciBOb3J0aCBBbWVyaWNhbiBzdXBwbGllcnMgdG8gc2hhcmUgZGV0YWlscyBhYm91dCBpbXByb3ZlbWVudHMgdG8gZW5naW5lZXJpbmcgYW5kIHByb2R1Y3Rpb24gc3lzdGVtcyBtYXkgYmVnaW4gYnkgdGhlIGVuZCBvZiB0aGUgeWVhciwgVHJpYW50YWZ5bGxvcyBzYWlkLiBBdCBsZWFzdCAzMCByZXByZXNlbnRhdGl2ZXMgb2YgdGhvc2Ugc3VwcGxpZXJzIHdpbGwgYXR0ZW5kIGRheWxvbmcgbWVldGluZ3MsIHdpdGggYWRkaXRpb25hbCBicmllZmluZ3MgYXQgdGhlaXIgZmFjdG9yaWVzIGFuZCBieSB2aWRlbyBjb25mZXJlbmNlLiDigJxXZeKAmXJlIGdvaW5nIHRvIHN0cm9uZ2x5IHJlcXVlc3QgdGhlIHN1cHBsaWVycyBwYXJ0aWNpcGF0ZSzigJ0gaGUgc2FpZC4gQnkgZWFybHkgbmV4dCB5ZWFyLCBUb3lvdGEgd2lsbCBjcmVhdGUgYSBkYXRhYmFzZSBzbyBOb3J0aCBBbWVyaWNhbiBzdXBwbGllcnMgY2FuIHByb3ZpZGUgdXBkYXRlcyBvbiBjaGFuZ2VzIHRvIHRoZWlyIHByb2Nlc3NlcywgcmVwbGFjaW5nIHRoZSBjdXJyZW50IHBhcGVyLWJhc2VkIHN5c3RlbS4gVGhpcyB3aWxsIGFsbG93IGZhc3RlciByZXZpZXdzIHRvIGVuc3VyZSBwYXJ0cyBxdWFsaXR5IGlzbuKAmXQgYWZmZWN0ZWQsIFRyaWFudGFmeWxsb3Mgc2FpZC4gVGhlIGNvbXBhbnnigJlzIGVuZ2luZWVycyBpbiBUb3lvdGEgQ2l0eSBhcmUgYWxzbyB2aXNpdGluZyBwYXJ0cyBtYWtlcnMgbW9yZSBmcmVxdWVudGx5LCB3aXRoIG92ZXJzZWFzIGJ1c2luZXNzIHRyaXBzIGluY3JlYXNpbmcgZm91ci1mb2xkIGNvbXBhcmVkIHdpdGggYmVmb3JlIHRoZSByZWNhbGwgY3Jpc2lzLCBEb2kgc2FpZC4gRm9yZWlnbiBTdXBwbGllcnMgVGhlIGF1dG9tYWtlciBpcyBtb3JlIGFjdGl2ZWx5IGNvbnN1bHRpbmcgZm9yZWlnbiBzdXBwbGllcnMgb24gd2F5cyB0byBjdXN0b21pemUgY2FycyBmb3IgZWFjaCBtYXJrZXQsIHNhaWQgU2hpbnpvIFlvdHN1bW90bywgaGVhZCBvZiB0aGUgSmFwYW4gdW5pdCBvZiBUUlcgQXV0b21vdGl2ZSBIb2xkaW5ncyBDb3JwLiBUUlcsIGJhc2VkIGluIExpdm9uaWEsIE1pY2hpZ2FuLCBpcyB0aGUgd29ybGTigJlzIGJpZ2dlc3Qgc3VwcGxpZXIgb2YgdmVoaWNsZS1zYWZldHkgZXF1aXBtZW50LiDigJxUb3lvdGHigJlzIGJlY29taW5nIG1vcmUgb3BlbiB0byBvdmVyc2VhcyBwYXJ0cyBtYWtlcnMs4oCdIFlvdHN1bW90byBzYWlkLiDigJxPdXIgcmVsYXRpb25zaGlwIHdpdGggdGhlbSBoYXMgYmVjb21lIGNsb3Nlci7igJ0gVGhlIGNvbXBhbnnigJlzIGxhdGVzdCBpbXByb3ZlbWVudHMgbWFkZSBpbiB0aGUgd2FrZSBvZiB0aGUgcmVjYWxsIGNyaXNpcyB3ZXJlIGRldGFpbGVkIHRvZGF5IGZvciBDaGllZiBFeGVjdXRpdmUgT2ZmaWNlciBBa2lvIFRveW9kYSwgd2hvIGxpbmtlZCB0aGUgZGVmZWN0cyB0byB0aGUgZXhwYW5zaW9uIHRoYXQgbWFkZSBoaXMgY29tcGFueSB0aGUgd29ybGTigJlzIGJpZ2dlc3QgYXV0b21ha2VyLiDigJxXZSB3ZXJlbuKAmXQgYXMgY29uc2lzdGVudCBvciBzdHJ1Y3R1cmVkIGFib3V0IGhvdyB3ZSBkaWQgdGhlIGF1ZGl0cyzigJ0gVHJpYW50YWZ5bGxvcyBzYWlkLiDigJxUaGUgaW50ZW50aW9uIGhlcmUgaXMgZGVmaW5pdGVseSB0byB0YWtlIGl0IHRvIHRoZSBuZXh0IGxldmVsLuKAnQ==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAASupG+iAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDNlNzM1NjQyNDVjZDc4NDA=</field><field name="symbol" class="java.lang.String">rO0ABXQAA1RSVw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAASuuQkSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBFyj1wo9cK</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBGB64UeuFI</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBFYAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBF2ZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBF2ZmZmZma</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAABBRWA==</field><field name="id" class="java.lang.String">rO0ABXQAEDczN2UwMDY5MWE1ZTZlZTE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHbIAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE1NTI1</field><field name="title" class="java.lang.String">rO0ABXQAL0dNIFNheXMgU3VwZXJjb21wdXRlcnMgdG8gS2VlcCBSZWNhbGxzIGluIENoZWNr</field><field name="content" class="java.lang.String">rO0ABXQTwkdlbmVyYWwgTW90b3JzIENvLiBzYXlzIGEgbmV3IHN1cGVyY29tcHV0aW5nIGRhdGEgY2VudGVyIGFuZCBhIGZsZWRnbGluZyBzaGlmdCB0byBicmluZyBzb2Z0d2FyZSBkZXZlbG9wbWVudCBpbi1ob3VzZSBzaG91bGQgaGVscCBpdCBsaW1pdCB0aGUgc2l6ZSBvZiBmdXR1cmUgc2FmZXR5IHJlY2FsbHMuIFRoZSBEZXRyb2l0IGF1dG9tYWtlciwgd2hpY2ggZm9ybWFsbHkgb3BlbmVkIHRoZSBnaWFudCBkYXRhIHN0b3JhZ2UgY2VudGVyIGluIHN1YnVyYmFuIFdhcnJlbiwgTWljaC4sIG9uIE1vbmRheSwgc2FpZCB0aGUgY2hhbmdlcyBhcmUgZXhhbXBsZXMgb2YgaG93IGl0IGlzIG1vdmluZyBmYXN0ZXIgdG8gY3V0IGNvc3RzIGFuZCBzZXJ2ZSBpdHMgY3VzdG9tZXJzIGJldHRlciBieSBicmluZ2luZyBtb3JlIGNvbXB1dGVyIHRlY2hub2xvZ3kgaW5zaWRlIHRoZSBjb21wYW55LiBJbiB0aGUgcGFzdCwgR00ncyByZWdpb25hbCBvcGVyYXRpb25zIHRyYWNrZWQgcHJvYmxlbXMgYnkgdGhlbXNlbHZlcywgc29tZXRpbWVzIHdpdGhvdXQgY29tbXVuaWNhdGluZyB3aXRoIG90aGVyIHJlZ2lvbnMsIGV2ZW4gdGhvdWdoIG1hbnkgb2YgaXRzIGNhcnMgYXJlIG5vdyBzb2xkIHdvcmxkd2lkZS4gRW5naW5lZXJzIGluIG9uZSByZWdpb24gd291bGQgY2hlY2sgYSBwcm9ibGVtIHBhcnQsIGJ1dCBpdCB3YXNuJ3Qgc3R1ZGllZCB3b3JsZHdpZGUsIGF0IGxlYXN0IG5vdCBhdCB0aGUgZWFybHkgc3RhZ2VzLiBOb3csIHdpdGggbmV3IHNvZnR3YXJlIGRldmVsb3BlZCBieSBHTSdzIHNvLWNhbGxlZCBpbm5vdmF0aW9uIGNlbnRlcnMgYW5kIHRoZSBkYXRhIHN0b3JhZ2UsIHByb2JsZW1zIGFyZSBzcG90dGVkIHF1aWNrbHkgd2hlbiB0aGV5IGNyb3AgdXAgYWNyb3NzIHRoZSBnbG9iZSwgYW5kIHRoZXkncmUgYXNzaWduZWQgdG8gdGhlIHJpZ2h0IGVuZ2luZWVyIHdobyBjYW4gd29yayB3aXRoIHBhcnRzIG1ha2VycyB0byBmaXggdGhlIHByb2JsZW0gZmFzdGVyLCBzYWlkIFJhbmR5IE1vdHQsIHRoZSBjb21wYW55J3MgY2hpZWYgaW5mb3JtYXRpb24gb2ZmaWNlci4gIllvdSdkIGhvcGUgdGhhdCBpZiB0aGVyZSBpcyBhIHByb2JsZW0gd2l0aCBhIHNldCBvZiBjb21wb25lbnRzLCB0aGF0IHlvdSB1bmRlcnN0YW5kIHdoaWNoIGNvbXBvbmVudHMgd2VyZSBwb3RlbnRpYWxseSBzdXNjZXB0aWJsZSBhbmQgeW91IHdvdWxkIGV4cGVjdCB5b3VyIHJlY2FsbHMgdG8gYmUgc21hbGxlciwiIE1vdHQgc2FpZC4gIllvdSBpZGVudGlmeSBpdCBlYXJsaWVyIGFuZCB5b3UgY2VydGFpbmx5IGxpbWl0IGl0IHRvIG9ubHkgdGhlIG9uZXMgYWZmZWN0ZWQgYnkgd2hhdGV2ZXIgdGhlIHByb2JsZW0gd2FzLiIgR00sIHdoaWNoIHR5cGljYWxseSBzZWxscyBtb3JlIHRoYW4gOSBtaWxsaW9uIHZlaGljbGVzIHdvcmxkd2lkZSBlYWNoIHllYXIsIG1ha2VzIGNhcnMgYW5kIHRydWNrcyBpbiAzMCBkaWZmZXJlbnQgY291bnRyaWVzLiBNYW55IG9mIGl0cyBwYXJ0cyBhcmUgY29tbW9uIHdvcmxkd2lkZSwgc28gaWYgdGhlcmUgaXMgYSByZWNhbGwsIGl0IGNhbiBiZSBsYXJnZSBhbmQgY29zdGx5LiBXaGVuIHByb2JsZW1zIGFyZSBzcG90dGVkIGFuZCBmaXhlZCBlYXJseSwgdGhlIHNpemUgYW5kIGNvc3QgY2FuIGJlIGhlbGQgZG93biwgTW90dCBzYWlkLiBHTSBhbHNvIHNhaWQgTW9uZGF5IHRoYXQgaXQgd2lsbCBidWlsZCBhIGR1cGxpY2F0ZSBkYXRhIHN0b3JhZ2UgY2VudGVyIGFib3V0IDQwIG1pbGVzIGZyb20gV2FycmVuIGF0IGl0cyBwcm92aW5nIGdyb3VuZHMgaW4gTWlsZm9yZCwgTWljaC4gRHVyaW5nIHRoZSBuZXh0IHR3byB5ZWFycywgdGhlIGNvbXBhbnkgd2lsbCBjbG9zZSAyMyBkYXRhIGNlbnRlcnMgd29ybGR3aWRlIGFuZCBjb25zb2xpZGF0ZSB0aGVtIGludG8gdGhlIHR3byBuZXcgZmFjaWxpdGllcy4gR00gc2F5cyBkYXRhIGNlbnRlcnMgYXQgR29vZ2xlIGFuZCBGYWNlYm9vayB3ZXJlIGJlbmNobWFya2VkIHRvIGRyYXcgdXAgcGxhbnMgZm9yIHRoZSBzdGF0ZS1vZi10aGUgYXJ0IGZhY2lsaXRpZXMuIFRoZSBXYXJyZW4gQ2VudGVyIGNvc3QgJDEzMCBtaWxsaW9uIHRvIGJ1aWxkLCB3aGlsZSB0aGUgTWlsZm9yZCBjZW50ZXIgd2lsbCBjb3N0ICQxMDAgbWlsbGlvbi4gR00gd2lsbCBzcGVuZCBhbm90aGVyICQxNTggbWlsbGlvbiBvbiBlYWNoIGNlbnRlciBmb3IgZXF1aXBtZW50LiBJdCdzIGFsbCBwYXJ0IG9mIGEgcHVzaCBsZWQgYnkgQ0VPIGFuZCBDaGFpcm1hbiBEYW4gQWtlcnNvbiwgYSBmb3JtZXIgdGVsZWNvbW11bmljYXRpb25zIGV4ZWN1dGl2ZSwgd2hvIGJlbGlldmVzIGl0J3MgaW1wb3J0YW50IGZvciBjb21wYW5pZXMgdG8gaGF2ZSB0aGVpciBvd24gaW5mb3JtYXRpb24gdGVjaG5vbG9neSByYXRoZXIgdGhhbiBvdXRzb3VyY2UgaXQgdG8gb3RoZXIgY29tcGFuaWVzLiBHTSBoYWQgb3V0c291cmNlZCA4NSBwZXJjZW50IG9mIGl0cyBzb2Z0d2FyZSBkZXZlbG9wbWVudCBhbmQgY29tcHV0ZXIgdGVjaG5vbG9neS4gQnkgY29uc29saWRhdGluZyB0aGUgZGF0YSBjZW50ZXJzIGFuZCBoaXJpbmcgYWJvdXQgOSwwMDAgcGVvcGxlIHRvIHN0YWZmIGZvdXIgVS5TLiAiaW5ub3ZhdGlvbiBjZW50ZXJzLCIgdGhlIGNvbXBhbnkgaG9wZXMgdG8gYnJpbmcgOTAgcGVyY2VudCBvZiB0aGUgd29yayBpbi1ob3VzZSB3aXRoaW4gZml2ZSB5ZWFycywgTW90dCBzYWlkLiBDb21wZXRpdG9ycywgR00gc2FpZCwgYWxyZWFkeSBoYXZlIGFib3V0IDMwIHBlcmNlbnQgb2YgdGhlaXIgaW5mb3JtYXRpb24gdGVjaG5vbG9neSB3b3JrIGluLWhvdXNlLiBHTSwgd2hpY2ggYmVnYW4gdGhlIGRhdGEgY29uc29saWRhdGlvbiBpbiB0aGUgZmFsbCBvZiAyMDExIGFuZCB0aGUgc29mdHdhcmUgZWZmb3J0cyBsYXN0IHN1bW1lciwgaXNuJ3Qgc3VyZSBob3cgZmFyIGl0IGhhcyBtb3ZlZCB0b3dhcmQgdGhlIDkwIHBlcmNlbnQgZ29hbCBhbHRob3VnaCBpdCBoYXMgaGlyZWQgNjQgcGVyY2VudCBvZiB0aGUgcGVvcGxlIG5lZWRlZCB0byBkbyBpdC4gR00gYWxyZWFkeSBoYXMgYWRkZWQgb3IgbW92ZWQgNSw1MDAgcGVvcGxlIGludG8gaW5mb3JtYXRpb24gdGVjaG5vbG9neSBhdCBjZW50ZXJzIGluIFdhcnJlbjsgQXVzdGluLCBUZXhhczsgUm9zd2VsbCwgR2EuOyBhbmQgQ2hhbmRsZXIsIEFyaXouIFRoZSBjZW50ZXJzIGFsbCBhcmUgbmVhciBjb2xsZWdlcyB0aGF0IGVtcGhhc2l6ZSBpbmZvcm1hdGlvbiB0ZWNobm9sb2d5LCBHTSBzYXlzLiBHTSwgQWtlcnNvbiBzYWlkLCBub3cgaGFzIHRoZSBhYmlsaXR5IHRvIHdhdGNoIGl0cyBmYWN0b3JpZXMgZm9yIHByb2R1Y3Rpb24gYW5kIHBhcnRzIHN1cHBseSBwcm9ibGVtcywgYW5kIHBlcmZvcm0gbW9yZSBhY2N1cmF0ZSB2aXJ0dWFsIGNyYXNoIHRlc3RzLCBzYXZpbmcgY29zdHMgYW5kIHNwZWVkaW5nIG5ldyBwcm9kdWN0cyB0byBtYXJrZXQuIEluIHRoZSBwYXN0LCB3aGVuIG1vc3QgY29tcHV0ZXIgdGVjaG5vbG9neSB3YXMgb3V0c291cmNlZCwgR00gY291bGRuJ3QgZXZlbiBtb25pdG9yIGl0cyBvd24gbmV0d29yayBvZiBjb21wdXRlcnMsIGhlIHNhaWQuICJUaGUgcmVzcG9uc2l2ZW5lc3Mgd2Fzbid0IHRoZXJlLCIgaGUgc2FpZCBvZiB0aGUgb3V0c2lkZSB2ZW5kb3JzLiAiVGhlcmUgaXNuJ3QgYSBjb21wYW55IG9uIGEgZ2xvYmFsIGNvbXBldGl0aXZlIGJhc2lzIHRoYXQgaXNuJ3QgZ29vZCBhdCBJLlQuLCB0aGF0IGRvZXNuJ3QgY29udHJvbCBpdHMgZGVzdGlueSBieSB2aXJ0dWUgb2YgYmV0dGVyIGluZm9ybWF0aW9uIGluIGV2ZXJ5IGFzcGVjdCBvZiB0aGUgYnVzaW5lc3MuIiBHTSBhbHNvIGNhbiB1c2UgaGlnaC1wb3dlcmVkIGNvbXB1dGVycyB0byBhbmFseXplIGRhdGEgYWNyb3NzIHRoZSBnbG9iZSB0byBkaXNjb3ZlciBzYWxlcyB0cmVuZHMgYW5kIHBvdGVudGlhbCBuZXcgbWFya2V0cyBmb3IgaXRzIHZlaGljbGVzLiBUaGUgY29tcGFueSBzYWlkIG5ldyBjcmFzaC10ZXN0IHNpbXVsYXRpb25zIHRoYXQgd2VyZSBtYWRlIHBvc3NpYmxlIGJ5IHRoZSBkYXRhIGNlbnRlcnMgYXJlIGN1dHRpbmcgZG93biBvbiB0aGUgbnVtYmVyIG9mIHBoeXNpY2FsIGNyYXNoIHRlc3RzIHRoYXQgYXJlIG5lZWRlZC4gVGhhdCBzYXZlcyB0aGUgY29tcGFueSByb3VnaGx5ICQzNTAsMDAwIHBlciB0ZXN0LCBHTSBzYWlkLiBFdmVuIHRob3VnaCBHTSBpcyB0YWtpbmcgb24gdGhlIGFkZGVkIGNhcGl0YWwgaW52ZXN0bWVudCBhbmQgcGVyc29ubmVsIGNvc3RzLCBNb3R0IHNhaWQgaXQgd2lsbCBzYXZlIG1vbmV5IGJ5IGVsaW1pbmF0aW5nIHRoZSBjb3N0IG9mIHBheWluZyBvdXRzaWRlIGNvbXB1dGVyIHRlY2hub2xvZ3kgdmVuZG9ycy4gQnJpbmdpbmcgY29tcHV0ZXIgZnVuY3Rpb25zIGludG8gdGhlIGNvbXBhbnkgY2FuIG1ha2UgaXQgbW9yZSBhZ2lsZSwgYnV0IHRoZXJlIGFyZSByaXNrcyBhcyB3ZWxsLCBpbmNsdWRpbmcgaGlyaW5nIGFuZCBrZWVwaW5nIHBlb3BsZSB3aG8gaGF2ZSBtYW55IGpvYiBjaG9pY2VzLCBzYWlkIEJyeWFuIEJyaXR6LCBhIHZpY2UgcHJlc2lkZW50IHdpdGggR2FydG5lciBJbmMuLCBhIGZpcm0gdGhhdCBhZHZpc2VzIGNvbXBhbmllcyBvbiBpbmZvcm1hdGlvbiB0ZWNobm9sb2d5IGlzc3Vlcy4gTW9zdCBjb21wYW5pZXMgdGhhdCBvdXRzb3VyY2UgY29tcHV0ZXIgZnVuY3Rpb25zIGNvbnRpbnVlIHRvIGRvIHNvIGFuZCBkb24ndCB0cnkgdG8gYnVpbGQgdGhlbSBmcm9tIGluc2lkZSwgaGUgc2FpZC4gQnV0IGhlIGFsc28gc2FpZCBHTSBpcyBsYXJnZSBlbm91Z2ggdG8gYnVpbGQgYW5kIG1haW50YWluIGEgdGFsZW50IHBvb2wuICJJdCByZWFsbHkgZG9lcyBjb21lIGRvd24gdG8gZXhlY3V0aW9uLCIgaGUgc2FpZC4gIlRoYXQgaGFzIHByb3ZlbiB0byBiZSwgZm9yIGEgbG90IG9mIG9yZ2FuaXphdGlvbnMsIGEgYmFycmllciB0b28gYmlnLiIgR00gYWxzbyBuZWVkcyB0byBtYWtlIHN1cmUgdGhhdCBpdCB1c2VzIHRoZSByZW1haW5pbmcgb3V0c291cmNlZCB3b3JrIHRvIGJyaW5nIGlubm92YXRpb24gZnJvbSBvdXRzaWRlLCBoZSBzYWlkLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6cQnCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDQ3YWNjZWU3ZjQ0NGY5ZGI=</field><field name="symbol" class="java.lang.String">rO0ABXQABERUU1Q=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6haMyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+x64UeuFHs</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+x64UeuFHs</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+x64UeuFHs</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+x64UeuFHs</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cD+x64UeuFHs</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDZjMGUxNGNhZjhjODAwMDM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFuyAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE1NTE2</field><field name="title" class="java.lang.String">rO0ABXQAOVRlc2xhJ3MgU3RyYXViZWwgS2VlcHMgTW90b3JzIFJvbGxpbmcgYXMgU3RvY2sgU3VyZ2VzIDU3JQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6haMyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDVhOGFjMTZkMmE3ZGMxYjU=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0NPU1QuTVg=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6mjyiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECVQAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECVjTMzMzMz</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECVQAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECVfI9cKPXD</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECVdFwo9cKP</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAHbA==</field><field name="id" class="java.lang.String">rO0ABXQAEDVhNWZhYzUzZjdiOTZhZmQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE/vAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDkwMjA=</field><field name="title" class="java.lang.String">rO0ABXQANVRheHBheWVycycgJDUgQmlsbGlvbiBHaXZlcyBFbGVjdHJpYyBDYXJzIGEgU2xvdyBKb2x0</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATpn8VSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDFjODM1ZjU5MzY5MTYwZTA=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0NBUg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATptF7CAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxnrhR64Uf</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAx3Cj1wo9c</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxbhR64Ueu</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxx64UeuFI</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxx64UeuFI</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAz5fA==</field><field name="id" class="java.lang.String">rO0ABXQAEGZiODg4YTllODQyMzEzZDM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFs0AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIwMzUx</field><field name="title" class="java.lang.String">rO0ABXQAOlRveW90YSBTZXQgdG8gU2VpemUgQXV0byBTYWxlcyBDcm93biBhcyBHTSBWaWVzIGZvciBTZWNvbmQ=</field><field name="content" class="java.lang.String">rO0ABXQfLFRveW90YSBNb3RvciBDb3JwLiBpcyBwb2lzZWQgdG8gdGFrZSBiYWNrIHRoZSB0aXRsZSBvZiB3b3JsZOKAmXMgYmlnZ2VzdCBhdXRvbWFrZXIgZm9yIDIwMTIsIGFzIFZvbGtzd2FnZW4gQUcgZmlnaHRzIEdlbmVyYWwgTW90b3JzIENvLiBmb3Igc2Vjb25kIHBsYWNlIGhlYWRpbmcgaW50byB0aGUgZmluYWwgd2Vla3MuIFRoZSBiYXR0bGUgYW1vbmcgdGhlIHdvcmxk4oCZcyBiaWdnZXN0IGNhcm1ha2VycyBjb21lcyBhcyB0aGUgaW5kdXN0cnkgaXMgaGVhZGVkIGZvciBhIHJlY29yZCB5ZWFyLiBHbG9iYWwgMjAxMiBzYWxlcyB3aWxsIHRvcCA4MCBtaWxsaW9uIGNhcnMgYW5kIHRydWNrcyBmb3IgdGhlIGZpcnN0IHRpbWUsIGFzIHJvYnVzdCBVLlMuIGFuZCBKYXBhbmVzZSBwdXJjaGFzZXMgb2Zmc2V0IGEgRXVyb3BlYW4gZG93bnR1cm4sIGFjY29yZGluZyB0byBlc3RpbWF0ZXMgZnJvbSBMTUMgQXV0b21vdGl2ZS4gVG95b3RhIGlzIHJlYm91bmRpbmcgZnJvbSBKYXBhbuKAmXMgMjAxMSB0c3VuYW1pIHRvIHRha2UgdGhlIHRpdGxlIGZyb20gR00sIHdoaWxlIHRoZSBmaWdodCBmb3Igc2Vjb25kIGJldHdlZW4gVm9sa3N3YWdlbiBhbmQgR00gcmVtYWlucyB0b28gY2xvc2UgdG8gY2FsbCwgd2l0aCBsZXNzIHRoYW4gb25lIHBlcmNlbnQgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZWlyIHNhbGVzLiBBbGwgdGhyZWUgY29tcGFuaWVzIGhhdmUgYmVuZWZpdGVkIGZyb20gdGhlIHN0cmVuZ3RoIG9mIHRoZSBVLlMuIGxpZ2h0LXZlaGljbGUgbWFya2V0LCB3aGljaCBpcyBoZWFkaW5nIGZvciBhIHRoaXJkIHN0cmFpZ2h0IHllYXIgb2YgZ2FpbnMgZm9sbG93aW5nIHRoZSAyMDA5IGNvbGxhcHNlIGFuZCBpbmR1c3RyeSBiYWlsb3V0LiBVLlMuIHNhbGVzIGFyZSBwcm9qZWN0ZWQgdG8gaW5jcmVhc2UgYWdhaW4gbmV4dCB5ZWFyLCB3aGljaCB3b3VsZCBtYXRjaCB0aGUgbG9uZ2VzdCBzdHJpbmcgc2luY2UgdGhlIGVuZCBvZiBXb3JsZCBXYXIgSUkuIOKAnEJlY2F1c2UgdGhlIFUuUy4gaXMgc28gbGFyZ2UsIHdoZW4gd2UgaGF2ZSBhIGRvdWJsZS1kaWdpdCBncm93dGggaXTigJlzIGdvaW5nIHRvIHByb3BlbCB0aGUgcmVzdCBvZiB0aGUgd29ybGQs4oCdIHNhaWQgUmViZWNjYSBMaW5kbGFuZCwgYW4gaW5kdXN0cnkgYW5hbHlzdCB3aXRoIElIUyBBdXRvbW90aXZlLiDigJxUaGUgZ2FpbnMgY2FuIG1hc2sgYSBteXJpYWQgb2Ygc2lucyBlbHNld2hlcmUsIGJlY2F1c2UgbWFueSBvZiB0aGUgb3RoZXIgZWNvbm9taWVzIGFyZW7igJl0IGV4YWN0bHkgc2V0dGluZyB0aGUgd29ybGQgb24gZmlyZS7igJ0gVGhlIGluZHVzdHJ5IGlzIGhlYWRlZCBmb3IgYSBtb3JlIGNvbnRlbnRpb3VzIGJhdHRsZSBpbiAyMDEzLCB3aXRoIExNQyBmb3JlY2FzdGluZyBWb2xrc3dhZ2VuIHdpbGwgYWRkIDYwMCwwMDAgdW5pdHMgb2YgcHJvZHVjdGlvbiBjYXBhY2l0eSBuZXh0IHllYXIsIGFzIG11Y2ggYXMgR00gYW5kIFRveW90YSBjb21iaW5lZCwgYW5kIGEgcHJvamVjdGVkIHJlYm91bmQgaW4gQ2hpbmEgdGhhdCBmYXZvcnMgdGhlIEdlcm1hbiBjYXJtYWtlcuKAmXMgcHJvc3BlY3RzLiBWb2xrc3dhZ2VuIGhhcyBzYWlkIGl0IHdpbGwgYmUgdGhlIGdsb2JhbCBzYWxlcyBsZWFkZXIgYnkgMjAxOC4gVGhyZWUtSG9yc2UgUmFjZSDigJxXZSBoYXZlIGEgdGhyZWUtaG9yc2UgcmFjZSBmb3IgdGhlIHJlc3Qgb2Ygb3VyIGZvcmVjYXN0IHRocm91Z2ggMjAxOSwgd2l0aCBldmVyeW9uZSBraW5kIG9mIGJvdW5jaW5nIGFyb3VuZCBhbmQgY2hhbmdpbmcgcG9zaXRpb25zLOKAnSBzYWlkIEplZmYgU2NodXN0ZXIsIHNlbmlvciB2aWNlIHByZXNpZGVudCBvZiBmb3JlY2FzdGluZyBhdCBUcm95LCBNaWNoaWdhbi1iYXNlZCBMTUMuIOKAnEl04oCZcyB2ZXJ5IHRpZ2h0LuKAnSBUaGUgcmFjZSBpcyBzbyB0aWdodCB0aGF0IGFuYWx5c3RzIHdpbGwgZGlzYWdyZWUgb24gdGhlIG91dGNvbWUgYmFzZWQgb24gaG93IHRoZXkgY291bnQgc2FsZXMuIEZvciBleGFtcGxlLCBzb21lIGFuYWx5c3RzIGV4Y2x1ZGUgYXV0b3Mgc29sZCBieSBHTeKAmXMgcGFydG5lcnMgaW4gQ2hpbmEgYW5kIGJ5IFRveW90YeKAmXMgdHdvIGFmZmlsaWF0ZXMsIEhpbm8gYW5kIERhaWhhdHN1LCBTY2h1c3RlciBzYWlkLiBCYXNlZCBvbiB0aGUgbWV0aG9kcyB0aGUgYXV0b21ha2VycyB1c2UgdG8gY291bnQgdGhlaXIgb3duIHNhbGVzLCBUb3lvdGEgbGVhZHMgdGhyb3VnaCB0aGUgZmlyc3QgdGhyZWUgcXVhcnRlcnMsIHdpdGggNy40IG1pbGxpb24gdW5pdHMsIGNvbXBhcmVkIHdpdGggNi45NSBtaWxsaW9uIGF0IEdNLCBhbmQgNi45IG1pbGxpb24gYXQgVm9sa3N3YWdlbiwgaW5jbHVkaW5nIFBvcnNjaGUgQUcuIFRob3VnaCBtb3JlIHJlY2VudCBnbG9iYWwgZGF0YSBpc27igJl0IGF2YWlsYWJsZSwgVG95b3RhIGhhcyBjb250aW51ZWQgaXRzIHJlYm91bmQgaW4gdGhlIFUuUy4gYW5kIEphcGFuIG1hcmtldHMgdGhyb3VnaCBOb3ZlbWJlci4gSmFwYW5lc2UgYXV0byBzYWxlcyBoYXZlIHN1cmdlZCAzMSBwZXJjZW50IHRocm91Z2ggdGhlIGZpcnN0IDExIG1vbnRocywgZHJpdmVuIGJ5IGdvdmVybm1lbnQgaW5jZW50aXZlcy4gR00sIHRoZSB0b3AgVS5TLiBhdXRvbWFrZXIsIGhhcyBiZWVuIGJvbHN0ZXJlZCBieSByaXNpbmcgc2FsZXMgdGhlcmUsIHdoaWxlIFZXIGhhcyBpbmNyZWFzZWQgc2FsZXMgaW4gQ2hpbmEgMjAgcGVyY2VudCB0aHJvdWdoIE5vdmVtYmVyLiBKYXBhbiBEZWFsZXIgVG95b3RhIGlzIGdyYWJiaW5nIHRoZSBnbG9iYWwgc2FsZXMgbGVhZCBpbiBwYXJ0IGJlY2F1c2Ugb2YgZGVhbGVycyBzdWNoIGFzIE1hZG9rYSBTdXp1a2ksIGEgbWFuYWdlciBmb3IgTmV0eiBUb3lvdGEgU2VuZGFpIGluIElzaGlub21ha2ksIEphcGFuLCBhYm91dCB0d28ga2lsb21ldGVycyAoMC43OCBtaWxlcykgZnJvbSB0aGUgb2NlYW4uIFRoZSBjaXR5IG9mIDE2MCw4MjYgaW4gSmFwYW7igJlzIE5vcnRoZXJuIE1peWFnaSBwcmVmZWN0dXJlIHN1ZmZlcmVkIDMsNDcxIHBlb3BsZSBraWxsZWQgYW5kIDQ3MCBtaXNzaW5nIGZyb20gdGhlIDIwMTEgZWFydGhxdWFrZSBhbmQgaGUgc2FpZCBtYW55IG9mIGhpcyBjdXN0b21lcnMgd2VyZSBhbW9uZyB0aGUgdmljdGltcyBhcyB0aGUgdHN1bmFtaSB3YXRlcnMgcmVhY2hlZCBoaXMgc2hvd3Jvb20uIOKAnE5vdyBvdXIgYnVzaW5lc3MgaXMgYmFjayB0byBub3JtYWwgYW5kIHRoZSBzYWxlcyB2b2x1bWUgaXMgYWxtb3N0IGJhY2sgdG8gdGhlIGxldmVsIG9mIHByZS1kaXNhc3RlcizigJ0gc2FpZCBTdXp1a2ksIHdob3NlIG5vcm1hbCBsZXZlbCBpcyBhYm91dCA1NTAgc2FsZXMgYSB5ZWFyIG9mIHBvcHVsYXIgbW9kZWxzIHN1Y2ggYXMgdGhlIFByaXVzLCBBcXVhIGFuZCBWaXR6LiDigJxJIHdvdWxkIHNheSBpdCB3YXMgYXJvdW5kIE9jdG9iZXIgbGFzdCB5ZWFyIHdoZW4gdGhlIGJ1c2luZXNzIGdvdCBiYWNrIHRvIG5vcm1hbOKAnSBUaHJvdWdoIE5vdmVtYmVyLCB0aGUgSmFwYW5lc2UgYXV0b21ha2VyIGhhZCBnYWluZWQgMjkgcGVyY2VudCBpbiB0aGUgVS5TLiBhbmQgcmFtcGVkIHVwIDQxIHBlcmNlbnQgaW4gSmFwYW4gdGhyb3VnaCBPY3RvYmVyLCBhY2NvcmRpbmcgdG8gdGhlIGxhdGVzdCBzYWxlcyBmaWd1cmVzLiDigJxXaGV0aGVyIHRoZSBzYWxlcyBpbmNyZWFzZSBvZiB0aGlzIHllYXIgd2lsbCBiZSBzdXN0YWluZWQgaXMgcXVlc3Rpb25hYmxlLCBidXQgdGhlIGludHJvZHVjdGlvbiBvZiBtYXNzIHZvbHVtZSBtb2RlbHMgc3VjaCBhcyB0aGUgQ29yb2xsYSBzaG91bGQgcG9zaXRpb24gVG95b3RhIGluIGEgdmVyeSBnb29kIHBsYWNlIGluIHRlcm1zIG9mIG1vZGVsIGxpbmV1cCzigJ0gc2FpZCBUYWtha2kgTmFrYW5pc2hpLCBhbiBhbmFseXN0IGF0IEJhbmsgb2YgQW1lcmljYSBDb3JwLuKAmXMgTWVycmlsbCBMeW5jaC4gR03igJlzIEdhaW4gR00gaXMgb24gdHJhY2sgZm9yIDEyIHN0cmFpZ2h0IHF1YXJ0ZXJzIG9mIHByb2ZpdCBhZnRlciBhICQ1MC1iaWxsaW9uIFUuUy4gZ292ZXJubWVudC1iYWNrZWQgYmFua3J1cHRjeSBpbiAyMDA5IHNhdmVkIGl0IGZyb20gbGlxdWlkYXRpb24uIEdNIGNlZGVkIGl0cyA3Ny15ZWFyIGdsb2JhbCBzYWxlcyByZWlnbiB0byBUb3lvdGEgaW4gMjAwOCBhbmQgcmVnYWluZWQgaXQgbGFzdCB5ZWFyIGFzIHNhbGVzIHJlY292ZXJlZCBhbmQgVG95b3RhIGxvc3Qgdm9sdW1lIHRvIHRoZSBKYXBhbmVzZSBlYXJ0aHF1YWtlIGFuZCBmbG9vZGluZyBpbiBUaGFpbGFuZC4gVGhlIFUuUy4gYXV0b21ha2VyIGlzIG9uIHBhY2UgZm9yIHRoZSBiZXN0IHllYXIgZ2xvYmFsbHkgc2luY2UgMjAwNywgd2hlbiBzYWxlcyBsYXN0IHBlYWtlZCBhdCA5LjM3IG1pbGxpb24uIEdN4oCZcyB3b3JsZHdpZGUgc2FsZXMgaW4gdGhlIGZpcnN0IG5pbmUgbW9udGhzIG9mIHRoaXMgeWVhciB3ZXJlIDIuNSBwZXJjZW50IGJldHRlciB0aGFuIDIwMTEuIFNjb3R0IExhUmljaGUgaGFzIHNlZW4gdGhlIHJlYm91bmQgZmlyc3RoYW5kLiBIaXMgZmFtaWx54oCZcyA0MC15ZWFyLW9sZCBMb3UgTGFSaWNoZSBDaGV2cm9sZXQgZnJhbmNoaXNlLCBpbiBQbHltb3V0aCwgTWljaGlnYW4sIHdhcyBzbGF0ZWQgZm9yIGNsb3NpbmcgZHVyaW5nIHRoZSAyMDA5IGJhbmtydXB0Y3kuIEluc3RlYWQsIHRoZSBmYW1pbHkgZm91Z2h0IGJhY2sgYW5kIHN1cnZpdmVkLiBUaGUgZGVhbGVyc2hpcCBjb21wbGV0ZWQgYSBuaW5lLW1vbnRoIHJlbm92YXRpb24gdGhpcyB3ZWVrIGFuZCBwbGFucyB0byBoaXJlIGFib3V0IDEwIG1vcmUgZW1wbG95ZWVzLiBTYWxlcyB0aGlzIHllYXIgd2lsbCBlY2xpcHNlIHRoZSAxLDEyNiBsYXN0IHllYXIgb24gZGVtYW5kIGZvciBzbWFsbCBjYXJzIGxpa2UgdGhlIENoZXZ5IFNvbmljIGFuZCBTcGFyayBhbmQgdGhlIHJlZGVzaWduZWQgTWFsaWJ1IHNlZGFuLCBoZSBzYWlkLiDigJxJdOKAmXMgYSBjb21lYmFjayBraWQgc3RvcnkgZnJvbSB0aGUgYnJpbmsgb2YgZXh0aW5jdGlvbizigJ0gaGUgc2FpZC4g4oCcV2XigJlyZSB2ZXJ5IGZvcnR1bmF0ZS7igJ0gR3Jvd3RoIE1hcmtldHMgR03igJlzIFUuUy4gc2FsZXMgcm9zZSAzLjUgcGVyY2VudCB0aHJvdWdoIE5vdmVtYmVyIGFuZCBtb3JlIHRoYW4gMTAgcGVyY2VudCBpbiBDaGluYSwgb2Zmc2V0dGluZyBhIDEyLjUgcGVyY2VudCBkZWNsaW5lIGluIEV1cm9wZS4g4oCcVGhhdCB0aXRsZeKAmXMgZ29pbmcgdG8gZ28gd2hlcmUgaXTigJlzIGdvaW5nIHRvIGdvLOKAnSBzYWlkIE1hcnkgQmFycmEsIEdN4oCZcyBzZW5pb3IgdmljZSBwcmVzaWRlbnQgb2YgZ2xvYmFsIHByb2R1Y3QgZGV2ZWxvcG1lbnQuIOKAnFdlIGJlbGlldmUgd2XigJlyZSB3ZWxsLXBvc2l0aW9uZWQgaW4gdGhlIGltcG9ydGFudCBncm93dGggbWFya2V0cyzigJ0gc3VjaCBhcyBCcmF6aWwsIEluZGlhLCBSdXNzaWEgYW5kIENoaW5hLiBObyBhdXRvbWFrZXIgaGFzIGV2ZXIgc29sZCAxMCBtaWxsaW9uIHZlaGljbGVzIGluIGEgeWVhci4gQm90aCBUb3lvdGEgYW5kIFZvbGtzd2FnZW4gaGF2ZSBmb3JlY2FzdHMgdG8gaGl0IHRoYXQgbWFyayBpbiB0aGUgbmV4dCBzZXZlcmFsIHllYXJzLiBWb2xrc3dhZ2VuLCB3aGljaCBjb3VudHMgQmVudGxleSwgTGFtYm9yZ2hpbmkgYW5kIEJ1Z2F0dGkgYW1vbmcgaXRzIGx1eHVyeSBuYW1lcGxhdGVzLCB3aWxsIGludmVzdCA1MC4yIGJpbGxpb24gZXVyb3MgaW4gdGhlIG5leHQgdGhyZWUgeWVhcnMgaW4gaXRzIGF1dG8gZGl2aXNpb24gdG8gZXhwYW5kIHByb2R1Y3Rpb24gY2FwYWNpdHksIGluY2x1ZGluZyBhIG5ldyBBdWRpIHBsYW50IGluIE1leGljbyBhbmQgZXh0ZW5kaW5nIGEgUG9yc2NoZSBmYWN0b3J5IGluIExlaXB6aWcsIEdlcm1hbnksIHRvIHByb2R1Y2UgdGhlIE1hY2FuIHNwb3J0LSB1dGlsaXR5IHZlaGljbGUuIFZvbGtzd2FnZW4gc2FpZCBEZWMuIDE0IHRoYXQgdGhyb3VnaCBOb3ZlbWJlciBvZiB0aGlzIHllYXIgaXQgaGFzIGFscmVhZHkgZXhjZWVkZWQgYSAyMDExIHJlY29yZCBvZiA4LjM2IG1pbGxpb24gY2FycyBhbmQgdHJ1Y2tzIGFuZCBoYXMgYSB0YXJnZXQgdG8gc2VsbCAxMCBtaWxsaW9uIGJ5IDIwMTguIFRoZSBhdXRvbWFrZXLigJlzIHNhbGVzIHJvc2UgMzEgcGVyY2VudCBpbiB0aGUgVS5TLiB0aHJvdWdoIE5vdmVtYmVyLCB0aGUgYmlnZ2VzdCBnYWluIGFtb25nIGNhcm1ha2VycyB0aGVyZS4gQ2FzaCwgVGVjaG5vbG9neSDigJxWb2xrc3dhZ2Vu4oCZcyBhbWF6aW5nLOKAnSBzYWlkIENocmlzdG9waCBTdHVlcm1lciwgYSBGcmFua2Z1cnQtYmFzZWQgYW5hbHlzdCB3aXRoIElIUyBBdXRvbW90aXZlLiDigJxUaGV54oCZcmUgZnVsbCBvZiBjYXNoIGFuZCBmdWxsIG9mIHRlY2hub2xvZ3kuIFRoZXkgY2FuIGZlYXR1cmUgdXAgdGhlaXIgY2FycyBsaWtlIGFsbW9zdCBubyBvbmUgZWxzZSBjYW4u4oCdIE5leHQgeWVhciBWVyBpcyBzZXQgdG8gbmFycm93IHRoZSBnYXAgd2l0aCBUb3lvdGEsIGFuZCAyMDE0IGNvdWxkIGJlIHRoZSB5ZWFyIGZvciBWVyB0byB0YWtlIHRoZSBsZWFkIG9uIGEgcmVjb3ZlcnkgaW4gRXVyb3BlLCBzYWlkIFN0dWVybWVyLiBFc3RpbWF0ZXMgbmV4dCB5ZWFyIGRvIGZhdm9yIFZvbGtzd2FnZW4gaW4gdGhlIHJhY2Ugd2l0aCBUb3lvdGEsIHNhaWQgTE1D4oCZcyBTY2h1c3Rlciwgd2hvIGZvcmVjYXN0cyBnbG9iYWwgc2FsZXMgd2lsbCByaXNlIHRvIGFsbW9zdCA4MyBtaWxsaW9uIG92ZXJhbGwuIE9uZSByZWFzb24gaXMgZ2VvZ3JhcGh5LiBDaGluYSwgd2hlcmUgVm9sa3N3YWdlbiBpcyBpbiBhIHBpdGNoZWQgYmF0dGxlIHdpdGggR00gdG8gcmVnYWluIHRoZSB0aXRsZSBhcyB0aGUgdG9wLXNlbGxpbmcgZm9yZWlnbiBhdXRvbWFrZXIsIHdpbGwgbGVhZCBhbGwgbWFqb3IgbWFya2V0cyBpbiBncm93dGgsIGZvbGxvd2VkIGJ5IHRoZSBVLlMuLCBhbmQgdGhlIHNsdW1wIGluIEV1cm9wZSB3aWxsIGJlIGxlc3MgcHJvbm91bmNlZCwgaGUgc2FpZC4gVGhlIHJlYm91bmQgaW4gQ2hpbmEgaXMgbGVzcyBoZWxwZnVsIGZvciBUb3lvdGEsIHdoaWNoIHdhcyBvbiB0cmFjayB0byBzZWxsIDEgbWlsbGlvbiB2ZWhpY2xlcyB0aGVyZSB0aGlzIHllYXIgYmVmb3JlIGEgdGVycml0b3JpYWwgZGlzcHV0ZSBiZXR3ZWVuIENoaW5hIGFuZCBKYXBhbiB0cmlnZ2VyZWQgdmlvbGVudCBwcm90ZXN0cyBhY3Jvc3MgdGhlIGNvdW50cnkuIFRveW90YSBpcyBsaWtlbHkgaGVhZGVkIGZvciBpdHMgZmlyc3QgYW5udWFsIGRyb3AgaW4gQ2hpbmEgc2FsZXMgb24gcmVjb3JkLiBWb2xrc3dhZ2VuIERlYWxlciBWb2xrc3dhZ2Vu4oCZcyByaXNpbmcgZm9ydHVuZXMgaGF2ZSBiZWVuIHZlcnkgZ29vZCB0byBHdW50aGVyIFZvbGtzd2FnZW4gb2YgQ29jb251dCBDcmVlaywgRmxvcmlkYSwgbmVhciBGdC4gTGF1ZGVyZGFsZSwgdGhlIEdlcm1hbiBhdXRvbWFrZXLigJlzIGxhcmdlc3Qgdm9sdW1lIFUuUy4gZGVhbGVyLCBzYWlkIE1pY2hhZWwgWmF2ZWxsLCB0aGUgSW50ZXJuZXQgc2FsZXMgZGlyZWN0b3IuIFRoZSBzdG9yZSBpcyBhZGRpbmcgYSAzMDAtY2FyIHBhcmtpbmcgZGVjayB0byBnYWluIHNwYWNlIGZvciBtb3JlIGludmVudG9yeSBhbmQgZXhwYW5kaW5nIHRoZSBzZXJ2aWNlIGRlcGFydG1lbnQgYnkgNDAgcGVyY2VudCwgaGUgc2FpZC4g4oCcVGhlIG1vbWVudHVtIGlzIGRlZmluaXRlbHkgdGhlcmUgZm9yIFZvbGtzd2FnZW4s4oCdIHNhaWQgWmF2ZWxsLCB3aG8gY3JlZGl0cyBuZXcgbW9kZWxzIHN1Y2ggYXMgdGhlIENDIGFuZCBQYXNzYXQgd2l0aCB0aGUgZGVhbGVyc2hpcOKAmXMgMzMgcGVyY2VudCBzYWxlcyBpbmNyZWFzZSBvdmVyIHRoZSBsYXN0IHR3byB5ZWFycywgdG8gYWJvdXQgNCwwMDAgY2FycyB0aGlzIHllYXIuIOKAnFRoZSBwcm9kdWN0IGlzIHRoZXJlIGFuZCB0aGV54oCZcmUgZmlsbGluZyB0aGUgcGlwZWxpbmUuIFdlIGNvdWxkbuKAmXTigJkgYmUgbW9yZSBvcHRpbWlzdGljLuKAnQ==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATuncosAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDA0NGYyZDI5NDI3Mjc3ODk=</field><field name="symbol" class="java.lang.String">rO0ABXQABUdBSU5Q</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATusmOcAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6Cj1wo9cK</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6Cj1wo9cK</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA5zMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA6B64UeuFI</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA2XrhR64Uf</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAK8A==</field><field name="id" class="java.lang.String">rO0ABXQAEDUzYTg3Y2UzMTJmNjM0MWQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mE3tAAAA==</field></document></documents><date>2015-05-07T06:35:45-0500</date></cacheEntry>
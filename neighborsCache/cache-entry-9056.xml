<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0EgFBcyBiZXRzIHBpbGUgdXAgYWdhaW5zdCBKYXBhbmVzZSBzdG9ja3MgaW52ZXN0b3JzIHdpdGggMjkzIGJpbGxpb24gaW4gY2xpZW50IGFzc2V0cyBzZWUgdGhlIHBlc3NpbWlzbSBhcyBhIHNpZ25hbCB0byBidXkgSGlzdG9yeSBpcyBvbiB0aGVpciBzaWRlIFNob3J0c2VsbGluZyBvbiBUb2t5b3MgYm91cnNlIGp1bXBlZCB0byB0aGUgaGlnaGVzdCBvbiByZWNvcmQgdGhpcyBtb250aCBhcyB0aGUgVG9waXggaW5kZXggdHVtYmxlZCA3NyBwZXJjZW50IGZyb20gYSBzaXh5ZWFyIGhpZ2ggaW4gU2VwdGVtYmVyIFNoYXJlcyBoYXZlIHJhbGxpZWQgYW4gYXZlcmFnZSA5NyBwZXJjZW50IG92ZXIgdGhlIHRocmVlIG1vbnRocyBmb2xsb3dpbmcgc3VyZ2VzIGluIGJlYXJpc2ggYmV0cyBzaW5jZSAyMDA5IGFjY29yZGluZyB0byBkYXRhIGNvbXBpbGVkIGJ5IEJsb29tYmVyZyBGb3IgU3lkbmV5YmFzZWQgQU1QIENhcGl0YWwgSW52ZXN0b3JzIEx0ZCB0aGF0cyBvbmUgcmVhc29uIGZvciBvcHRpbWlzbSBUaGUgb3V0bG9vayBmb3IgY29tcGFueSBwcm9maXRzIGlzIGFub3RoZXIgR292ZXJubWVudGJhY2tlZCBzdGVwcyB0byBwdXQgYSBmbG9vciB1bmRlciBKYXBhbmVzZSBlcXVpdGllcyBtYXkgcHJvdmUgZGFuZ2Vyb3VzIGZvciBzaG9ydHNlbGxlcnMgdGhlIGNlbnRyYWwgYmFuayBzYXlzIGl0cyByZWFkeSB0byBhZGQgc3RpbXVsdXMgaWYgdGhlIGVjb25vbXkgZmFsdGVycyB3aGlsZSBvbiBPY3QgMjAgYSBOaWtrZWkgbmV3c3BhcGVyIHJlcG9ydCB0aGUgY291bnRyeXMgMTIgdHJpbGxpb24gcGVuc2lvbiBmdW5kIHdvdWxkIGJ1eSBsb2NhbCBzaGFyZXMgcm91c2VkIHRoZSBUb3BpeCBmcm9tIGEgdGhyZWV3ZWVrIHJvdXQgRmVhciBpcyBoaXR0aW5nIGV4dHJlbWUgbGV2ZWxzIGFuZCBpdHMgdGltZSB0byBnZXQgaW50byB0aGUgbWFya2V0IE5hZGVyIE5hZWltaSB3aG8gaGVscHMgbWFuYWdlIGFib3V0IDEyNSBiaWxsaW9uIGFzIGhlYWQgb2YgZHluYW1pYyBhc3NldCBhbGxvY2F0aW9uIGF0IEFNUCBzYWlkIGJ5IHBob25lIG9uIE9jdCAxNCBXaGVuIHRoZXNlIHNlbnRpbWVudCBpbmRpY2F0b3JzIGZsYXNoIGV4Y2Vzc2l2ZSBwZXNzaW1pc20gaXQgdXN1YWxseSBzdWdnZXN0cyB3ZXZlIHJlYWNoZWQgdGhlIGxvd3MgQmVhcmlzaCBiZXRzIGFjY291bnRlZCBmb3IgMzY2IHBlcmNlbnQgb2YgYWxsIHRyYW5zYWN0aW9ucyBvbiB0aGUgVG9reW8gU3RvY2sgRXhjaGFuZ2UgYnkgdmFsdWUgb24gT2N0IDE0IGFjY29yZGluZyB0byBib3Vyc2UgZGF0YSBjb21waWxlZCBieSBCbG9vbWJlcmcgVGhhdHMgdGhlIGhpZ2hlc3Qgc2luY2UgdGhlIGV4Y2hhbmdlIHN0YXJ0ZWQgcHVibGlzaGluZyB0aGUgZmlndXJlcyBpbiAyMDA4IFRoZSByYXRpbyB3YXMgMzM0IHBlcmNlbnQgb24gT2N0IDI0ICAgICAgICAgICAgICAgICAgICAgICAgIFBlc3NpbWlzbSBDbGltYnMgUGVzc2ltaXNtIHNwcmVhZCBhcyBKYXBhbmVzZSBlcXVpdGllcyB3ZXJlIGJ1ZmZldGVkIGZyb20gYWJyb2FkIFRoZSBUb3BpeCB0dW1ibGVkIDEyIHBlcmNlbnQgaW4gdGhlIHRocmVlIHdlZWtzIGVuZGVkIE9jdCAxNyBtZWV0aW5nIHRoZSBkZWZpbml0aW9uIG9mIGEgY29ycmVjdGlvbiBhcyBjb25jZXJuIGFib3V0IGEgZ2xvYmFsIGVjb25vbWljIHNsb3dkb3duIGFuZCB0aGUgRWJvbGEgdmlydXMgc3B1cnJlZCBhIGdsb2JhbCByb3V0IFRoZSBOaWtrZWkgU3RvY2sgQXZlcmFnZSBWb2xhdGlsaXR5IEluZGV4IGEgZ2F1Z2Ugb2Ygb3B0aW9uIHByaWNlcyBzdXJnZWQgdG8gYW4gZWlnaHRtb250aCBoaWdoIG9uIE9jdCAxNyBXaXRoIHRoZSB5ZW4gc3RyZW5ndGhlbmluZyBsb3NzZXMgd2VyZSBiaWdnZXN0IGluIEphcGFuZXNlIHN0b2NrcyBCZW5jaG1hcmsgZ2F1Z2VzIGluIHRoZSBVUyBhbmQgRXVyb3BlIGRyb3BwZWQgNDkgcGVyY2VudCBhbmQgNjkgcGVyY2VudCByZXNwZWN0aXZlbHkgZHVyaW5nIHRoZSBwZXJpb2QgVGhlIG1hcmtldHMgYXJlIHRvbyBwZXNzaW1pc3RpYyBhYm91dCBKYXBhbiByaWdodCBub3cgSm9obiBWYWlsIFRva3lvYmFzZWQgY2hpZWYgZ2xvYmFsIHN0cmF0ZWdpc3QgYXQgTmlra28gQXNzZXQgTWFuYWdlbWVudCBDbyB3aGljaCBtYW5hZ2VzIGFib3V0IDE2OCBiaWxsaW9uIHNhaWQgaW4gYSBwaG9uZSBpbnRlcnZpZXcgb24gT2N0IDIwIENvcnBvcmF0ZSBwcm9maXRzIGFyZSBnb2luZyB0byBjb250aW51ZSB0byBzdXJwcmlzZSBvbiB0aGUgdXBzaWRlIGhlIHNhaWQgRGVjbGluZXMgaW4gSmFwYW5zIGN1cnJlbmN5IHdpbGwgYmUgYSBib29uIGZvciBjb21wYW55IGVhcm5pbmdzIGFuZCBoZWxwIGNvbnN1bWVyIHNlbnRpbWVudCBhY2NvcmRpbmcgdG8gQU1QcyBOYWVpbWkgSGVzIGhvbGRpbmcgbW9yZSBKYXBhbmVzZSBzaGFyZXMgdGhhbiBhcmUgcmVwcmVzZW50ZWQgaW4gaGlzIGdsb2JhbCBiZW5jaG1hcmsgYW5kIGJldHRpbmcgdGhlIHllbiB3aWxsIHdlYWtlbiBmdXJ0aGVyICAgICAgICAgICAgICAgICAgICAgICAgICBTaG9ydCBTYWxlcyBXaGVuIHNob3J0IHNhbGVzIGxhc3QgYWNjb3VudGVkIGZvciBtb3JlIHRoYW4gMzYgcGVyY2VudCBvZiBkYWlseSB0cmFkaW5nIGluIFRva3lvIGluIEFwcmlsIGludmVzdG9ycyBzYXcgYSA5NSBwZXJjZW50IGdhaW4gaW4gdGhlIFRvcGl4IG92ZXIgdGhlIG5leHQgdGhyZWUgbW9udGhzIEFmdGVyIHRoZSBwcmV2aW91cyBzdXJnZSBpbiBiZWFyaXNoIGJldHMgcmVhY2hlZCBhIHBlYWsgaW4gU2VwdGVtYmVyIDIwMTIgdGhlIFRvcGl4IGdhaW5lZCA3NiBwZXJjZW50IGluIHRoZSBzdWJzZXF1ZW50IHRocmVlIG1vbnRocyBPbiB0aGUgZml2ZSBvY2Nhc2lvbnMgdGhhdCB0aGUgcmF0aW8gaGFzIHBlYWtlZCBzaW5jZSAyMDA5IHNoYXJlcyByYWxsaWVkIGluIHRoZSBuZXh0IHRocmVlIG1vbnRocyBhbGwgYnV0IG9uY2UgVGhlIFRvcGl4IGhhcyBhZHZhbmNlZCAyMyBwZXJjZW50IHNpbmNlIHRoZSByZWNvcmQgc2hvcnRzYWxlIHJhdGlvIHNlZW4gT2N0IDE0IEZvciBBeWFrbyBTZXJhIGEgVG9reW9iYXNlZCBtYXJrZXQgc3RyYXRlZ2lzdCBhdCBTdW1pdG9tbyBNaXRzdWkgVHJ1c3QgQmFuayBMdGQgdGhlcmVzIG9uZSBjYXZlYXQgdG8gYnVsbGlzaG5lc3Mgb24gSmFwYW4gd2hhdCBoYXBwZW5zIGluIHRoZSByZXN0IG9mIHRoZSB3b3JsZCBJIGNhbnQgYmUgYW4gYWxsb3V0IG9wdGltaXN0IGJlY2F1c2Ugb2YgRWJvbGEgYW5kIGFsdGhvdWdoIGxlc3MgcHJvbWluZW50IGluIHRoZSBuZXdzIHRoZXNlIGRheXMgdGhlIElzbGFtaWMgU3RhdGUgYW5kIFVrcmFpbmUgU2VyYSBzYWlkIE9jdCAyMiBCaWcgY29tcGFuaWVzIGFyZSBkb2luZyB3ZWxsIHdpdGggZ29vZCBlYXJuaW5ncyBhbmQgdGhlIGJvb3N0IGZyb20gdGhlIHllbiBCdXQgSmFwYW5lc2Ugc3RvY2tzIG9mdGVuIGRvbnQgbW92ZSBvbiBkb21lc3RpYyByZWFzb25zIFJlY2VudCBlY29ub21pYyBkYXRhIGluIEphcGFuIGhhdmUgZGlzYXBwb2ludGVkIEdyb3NzIGRvbWVzdGljIHByb2R1Y3Qgc2hyYW5rIGFuIGFubnVhbGl6ZWQgNzEgcGVyY2VudCBpbiB0aGUgdGhyZWUgbW9udGhzIHRocm91Z2ggSnVuZSB0aGUgbW9zdCBzaW5jZSB0aGUgZmlyc3QgcXVhcnRlciBvZiAyMDA5IHRoZSBDYWJpbmV0IE9mZmljZSBzYWlkIFNlcHQgOCBJbmR1c3RyaWFsIHByb2R1Y3Rpb24gZGVjbGluZWQgMTUgcGVyY2VudCBpbiBBdWd1c3QgZnJvbSBKdWx5IGEgcmVwb3J0IHNob3dlZCBTZXB0IDMwICAgICAgICAgICAgICAgICAgICAgICAgVmFsdWF0aW9ucyBXYXJuaW5nIEZvciBKZWZmZXJpZXMgR3JvdXAgTExDIHZhbHVhdGlvbnMgc3VnZ2VzdCBhIHJlYm91bmQgdGhpcyB0aW1lIHRvbyBTb21lIDg4OSBvZiB0aGUgVG9waXhzIDE4MTEgY29tcGFuaWVzIG5vdyB0cmFkZSBiZWxvdyB0aGUgdmFsdWUgb2YgdGhlaXIgbmV0IGFzc2V0cyBhY2NvcmRpbmcgdG8gZGF0YSBjb21waWxlZCBieSBCbG9vbWJlcmcgVGhpcyBzaG91bGQgYmUgYSB3YXJuaW5nIHRvIGhlZGdlIGZ1bmRzIHRha2luZyBvdmVybHkgYmVhcmlzaCBwb3NpdGlvbnMgYWNjb3JkaW5nIHRvIFNlYW4gRGFyYnkgSG9uZyBLb25nIGJhc2VkIGNoaWVmIGdsb2JhbCBlcXVpdHkgc3RyYXRlZ2lzdCBhdCBKZWZmZXJpZXMgVGhlIFRvcGl4IHRyYWRlZCBhdCAxMzEgdGltZXMgZXN0aW1hdGVkIGVhcm5pbmdzIG9uIE9jdCAxNyB0aGUgbG93ZXN0IGxldmVsIHNpbmNlIE1heSBhY2NvcmRpbmcgdG8gZGF0YSBjb21waWxlZCBieSBCbG9vbWJlcmcgVGhhdCBjb21wYXJlZCB3aXRoIDE1NyBvbiB0aGUgU1AgNTAwIHRoYXQgZGF5IHRoZSBkYXRhIHNob3cgUGVvcGxlIGFyZSBwcm90ZWN0aW5nIHRoZWlyIHBvc2l0aW9ucyBhbmQgSSBjYW4gc2VlIHRoZSBhcmd1bWVudCBmcm9tIGFuIGVjb25vbWljIHBvaW50IG9mIHZpZXcgd2l0aCB0aGUgZGF0YSBoYXZpbmcgYmVlbiBvbiB0aGUgd2Vha2VyIHNpZGUgRGFyYnkgc2FpZCBieSBwaG9uZSBvbiBPY3QgMjAgSSBjYW4gdW5kZXJzdGFuZCB0aGF0IGJ1dCBpdHMgaGFyZCB0byBiZSB0b28gc2hvcnQgYSBtYXJrZXQgd2hlcmUgbW9yZSB0aGFuIGhhbGYgb2YgdGhlIGNvbXBhbmllcyBhcmUgdHJhZGluZyBiZWxvdyBib29rIHZhbHVldAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAb2FydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2UsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEzLTEyLTAzVDAwOjAwOjAwWiBUTyAyMDE0LTA3LTEwVDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDQzMjI=</field><field name="title" class="java.lang.String">rO0ABXQAQFJlY29yZCBKYXBhbiBCdXliYWNrcyBTYWx2YWdlIFN0b2NrcyBMZWZ0IE91dCBvZiBXb3JsZHdpZGUgUmFsbHk=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbB8fyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDg3Nzk0OGFhOTZhMDQyNmI=</field><field name="symbol" class="java.lang.String">rO0ABXQABk1DTi5CRQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbHGFiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEApBR64UeuF</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEApBR64UeuF</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEApBR64UeuF</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEApBR64UeuF</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEApBR64UeuF</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEDA3NmYyN2U0YjcxNmExN2I=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJ+dAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDgyNTU=</field><field name="title" class="java.lang.String">rO0ABXQAN0phcGFuLCAyMDEzJ3MgQmlnIFdpbm5lciwgQmVjb21lcyBUaGlzIFllYXIncyBCaWcgTG9zZXI=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUP2VPcAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGNiYzZlZWQ4MTRiYzc5OTE=</field><field name="symbol" class="java.lang.String">rO0ABXQABUNNVERG</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUP7e1MAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAS9cKPXCj2</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAS9cKPXCj2</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAS9cKPXCj2</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAS9cKPXCj2</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEASUeuFHrhS</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGZmOGNmMWQ3N2VlMmQ1MGY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mJE/AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDg3MDI=</field><field name="title" class="java.lang.String">rO0ABXQAM0dvbGQgQnVsbHMgUmV0cmVhdCBhcyBQcmljZXMgRHJvcCB0byBGb3VyLU1vbnRoIExvdw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUK3Cq8AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGRmNDQ1MGM3N2Y1NGE2NTc=</field><field name="symbol" class="java.lang.String">rO0ABXQAA05PVg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUK8MQsAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUiuFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUqZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUQzMzMzMz</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUdmZmZmZm</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBR49cKPXCk</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAACEpdA==</field><field name="id" class="java.lang.String">rO0ABXQAEGZmNzhiYTVlYjFiYmM4MGM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mG5hAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDU3NzI=</field><field name="title" class="java.lang.String">rO0ABXQAOEphcGFuIFN0b2NrIEluZmxvd3MgUmV2ZXJzZSBhcyBGb3JlaWduZXJzIEdyb3cgU2tlcHRpY2Fs</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUTYtdiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGQ0MDQxMzJmOGY4ZTM5YTA=</field><field name="symbol" class="java.lang.String">rO0ABXQABFNFTEY=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUTd3DSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAOAAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAOFHrhR64U</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAOAAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAOFHrhR64U</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAL64UeuFHs</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAK8A==</field><field name="id" class="java.lang.String">rO0ABXQAEDk3OWE0Njc4OTVlMTBjNGI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGoZAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDQyNjI=</field><field name="title" class="java.lang.String">rO0ABXQAMlMmUCA1MDAgT25lIERheSBBd2F5IGZyb20gTG9uZ2VzdCBSYWxseSBTaW5jZSAxOTk4</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbl/oCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGIyZTQ0ODkyMjZiM2YwY2E=</field><field name="symbol" class="java.lang.String">rO0ABXQABFZUV1Y=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbrJNyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBWPMzMzMzN</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBWYAAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBWMo9cKPXD</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBWYAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBV/rhR64Uf</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAACvA==</field><field name="id" class="java.lang.String">rO0ABXQAEGM0ZmYyNDUyOTY2ZGNhNGI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEtVAAAA==</field></document></documents><date>2015-05-07T12:28:51-0500</date></cacheEntry>
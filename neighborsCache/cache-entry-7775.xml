<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0AVdHb29nbGUgSW5jIGlzIGNvbWJpbmluZyBpdHMgdHdvIEV1cm9wZWFuIGFybXMgdG8gbWVldCB0aGUgY2hhbGxlbmdlcyBvZiBhIG1vcmUgY29tYmF0aXZlIHJlZ3VsYXRvcnkgbGFuZHNjYXBlIG9uIHRoZSBjb250aW5lbnQgdGhlIEZpbmFuY2lhbCBUaW1lcyBzYWlkIE1hdHQgQnJpdHRpbiB3aG8gcHJldmlvdXNseSBsZWQgR29vZ2xlcyBub3J0aGVybiBhbmQgd2VzdGVybiBFdXJvcGVhbiBkaXZpc2lvbiB3aWxsIHRha2Ugb3ZlciB0aGUgZGF5dG9kYXkgcnVubmluZyBvZiB0aGUgbmV3IGJ1c2luZXNzIEZUIHNhaWQgIEdvb2dsZSB3YXMgbm90IGltbWVkaWF0ZWx5IGF2YWlsYWJsZSB0byBjb21tZW50dAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAb2FydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2UsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEzLTEyLTAzVDAwOjAwOjAwWiBUTyAyMDE0LTA3LTEwVDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDgyMzY=</field><field name="title" class="java.lang.String">rO0ABXQAKUdvb2dsZSBBdm9pZHMgRmluZSBXaXRoIEVVIEFudGl0cnVzdCBEZWFs</field><field name="content" class="java.lang.String">rO0ABXQNRlRoZSBhZ3JlZW1lbnQgbWVhbnMgdGhlIHdvcmxkJ3MgZG9taW5hbnQgc2VhcmNoIGVuZ2luZSBoYXMgYXZvaWRlZCBhIHByb2Nlc3MgdGhhdCBjb3VsZCBoYXZlIGxlYWQgdG8gYSBmaW5lIG9mIHVwIHRvICQ1IGJpbGxpb24sIG9yIDEwIHBlcmNlbnQgb2YgaXRzIDIwMTIgcmV2ZW51ZS4gSXQgbXVzdCBzdGljayB0byB0aGUgZGVhbCBmb3IgdGhlIG5leHQgZml2ZSB5ZWFycy4gSG93ZXZlciwgR29vZ2xlIG1heSBzdGlsbCBmYWNlIGEgc2Vjb25kIEVVIGludmVzdGlnYXRpb24sIHRoaXMgdGltZSBpbnRvIGl0cyBBbmRyb2lkIG9wZXJhdGluZyBzeXN0ZW0gZm9yIHNtYXJ0cGhvbmVzLCB3aXRoIHBvdGVudGlhbGx5IGJpZ2dlciByaXNrcyBmb3IgdGhlIGNvbXBhbnkuIEdvb2dsZSBoYXMgYmVlbiB0aGUgc3ViamVjdCBvZiBhIEV1cm9wZWFuIENvbW1pc3Npb24gaW52ZXN0aWdhdGlvbiBpbnRvIGl0cyBpbnRlcm5ldCBzZWFyY2ggcHJhY3RpY2VzIHNpbmNlIE5vdmVtYmVyIDIwMTAsIHdoZW4gbW9yZSB0aGFuIGEgZG96ZW4gY29tcGxhaW5hbnRzLCBpbmNsdWRpbmcgTWljcm9zb2Z0LCBhY2N1c2VkIHRoZSBjb21wYW55IG9mIHByb21vdGluZyBpdHMgb3duIHNlcnZpY2VzIGF0IHRoZWlyIGV4cGVuc2UuIEl0cyBmaXJzdCB0d28gYXR0ZW1wdHMgdG8gcmVzb2x2ZSB0aGUgY2FzZSBmYWlsZWQuIENvbXBldGl0aW9uIENvbW1pc3Npb25lciBKb2FxdWluIEFsbXVuaWEgc2FpZCBvbiBXZWRuZXNkYXkgaGUgd291bGQgYWNjZXB0IEdvb2dsZSdzIGxhdGVzdCBjb25jZXNzaW9ucyB3aXRob3V0IGNvbnN1bHRpbmcgdGhlIGNvbXBsYWluYW50cywgcHJvbXB0aW5nIGEgZnVyaW91cyByZXNwb25zZSBmcm9tIGNyaXRpY3MuICJXaXRob3V0IGEgdGhpcmQtcGFydHkgcmV2aWV3LCBBbG11bmlhIHJpc2tzIGhhdmluZyB0aGUgd29vbCBwdWxsZWQgb3ZlciBoaXMgZXllcyBieSBHb29nbGUsIiBzYWlkIERhdmlkIFdvb2QgYXQgbG9iYnkgZ3JvdXAgSUNPTVAgdGhhdCBjb3VudHMgTWljcm9zb2Z0IGFuZCBmb3VyIG90aGVyIGNvbXBsYWluYW50cyBhbW9uZyBpdHMgbWVtYmVycy4gTWljcm9zb2Z0IG93bnMgcml2YWwgc2VhcmNoIGVuZ2luZSBCaW5nLiBHZXJtYW4gb25saW5lIG1hcHBpbmcgc2VydmljZXMgRXVyby1DaXRpZXMgc2FpZCBpdCB3b3VsZCB0YWtlIGl0cyBncmlldmFuY2UgdG8gdGhlIGNvdXJ0cy4gIlRvZGF5J3MgYW5ub3VuY2VtZW50IHN0aWxsIGxlYXZlcyBtYW55IHF1ZXN0aW9ucyBvcGVuLiBXZSB3aWxsIGNvbnRpbnVlIHRvIHRha2UgbGVnYWwgYWN0aW9uIGFib3V0IEdvb2dsZSdzIGJ1c2luZXNzIHByYWN0aWNlcyBpbiB0aGUgR2VybWFuIGFuZCwgaWYgbmVjZXNzYXJ5LCBFVSBjb3VydHMsIiBpdHMgY2hpZWYgZXhlY3V0aXZlIEhhbnMgQmllcm1hbm4gc2FpZC4gUG9saXNoIG9ubGluZSBhdWN0aW9uIHNpdGUgQWxsZWdybyB3YXMgZXF1YWxseSBjcml0aWNhbCwgc2F5aW5nIHRoZSBkZWFsIHdvdWxkIG5vdCBlbnN1cmUgYSBsZXZlbCBwbGF5aW5nIGZpZWxkIGZvciBFdXJvcGUncyBJbnRlcm5ldCBlY29ub215LiBSZXV0ZXJzIHJlcG9ydGVkIG9uIEphbi4gMjkgdGhhdCB0aGUgRVUncyBjb21wZXRpdGlvbiBhdXRob3JpdHkgYW5kIEdvb2dsZSB3ZXJlIGNsb3NlIHRvIGEgZGVhbCB0byByZXNvbHZlIHRoZSBpbnZlc3RpZ2F0aW9uLiBBTkRST0lEIFJJU0sgR29vZ2xlIHNhaWQgb24gV2VkbmVzZGF5IGl0IGhvcGVkIHRvIGRyYXcgYSBsaW5lIHVuZGVyIHRoZSBtYXR0ZXIgc29vbi4gIldlIHdpbGwgYmUgbWFraW5nIHNpZ25pZmljYW50IGNoYW5nZXMgdG8gdGhlIHdheSBHb29nbGUgb3BlcmF0ZXMgaW4gRXVyb3BlLCIgc2FpZCBHZW5lcmFsIENvdW5zZWwgS2VudCBXYWxrZXIuICJXZSBoYXZlIGJlZW4gd29ya2luZyB3aXRoIHRoZSBFdXJvcGVhbiBDb21taXNzaW9uIHRvIGFkZHJlc3MgaXNzdWVzIHRoZXkgcmFpc2VkIGFuZCBsb29rIGZvcndhcmQgdG8gcmVzb2x2aW5nIHRoaXMgbWF0dGVyLiIgR29vZ2xlJ3Mgc3VjY2VzcyBpbiBlc2NhcGluZyBmaW5hbmNpYWwgc2FuY3Rpb25zIG1pcnJvcnMgYSBzaW1pbGFyIG91dGNvbWUgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgbGFzdCB5ZWFyLCB3aGVyZSB0aGUgY29tcGFueSByZWNlaXZlZCBvbmx5IGEgbWlsZCByZXByaW1hbmQgZnJvbSB0aGUgRmVkZXJhbCBUcmFkZSBDb21taXNzaW9uLiBJdHMgYWJpbGl0eSB0byByZXNvbHZlIGNvbXBldGl0aW9uIGlzc3VlcyBpbiB0d28gbWFqb3IgcmVnaW9ucyB3aXRob3V0IGEgZmluZSBzdGFuZHMgaW4gc2hhcnAgY29udHJhc3QgdG8gcml2YWwgTWljcm9zb2Z0LCB3aG9zZSBwcmlja2x5IHJlbGF0aW9ucyB3aXRoIEVVIHJlZ3VsYXRvcnMgbGFuZGVkIGl0IHRvdGFsIGZpbmVzIG9mIG1vcmUgdGhhbiAyLjIgYmlsbGlvbiBldXJvcyBvdmVyIHRoZSBwYXN0IGRlY2FkZS4gVW5kZXIgdGhlIHNldHRsZW1lbnQsIEdvb2dsZSwgd2hpY2ggaGFzIGEgNzUgcGVyY2VudCBzaGFyZSBvZiB0aGUgRXVyb3BlYW4gc2VhcmNoIG1hcmtldCBhY2NvcmRpbmcgdG8gY29uc3VsdGFuY3kgY29tU2NvcmUsIHdpbGwgbGV0IHRocmVlIHJpdmFscyBkaXNwbGF5IHRoZWlyIGxvZ29zIGFuZCB3ZWIgbGlua3MgaW4gYSBwcm9taW5lbnQgYm94LCBhbmQgY29udGVudCBwcm92aWRlcnMgd2lsbCBiZSBhYmxlIHRvIGRlY2lkZSB3aGF0IG1hdGVyaWFsIEdvb2dsZSBjYW4gdXNlIGZvciBpdHMgb3duIHNlcnZpY2VzLiBHb29nbGUgd2lsbCBhbHNvIHNjcmFwIHJlc3RyaWN0aW9ucyB0aGF0IHByZXZlbnQgYWR2ZXJ0aXNlcnMgZnJvbSBtb3ZpbmcgdGhlaXIgY2FtcGFpZ25zIHRvIHJpdmFsIHBsYXRmb3JtcyBzdWNoIGFzIFlhaG9vISdzIHNlYXJjaCB0b29sIGFuZCBNaWNyb3NvZnQncyBCaW5nLiBUaGUgZGVhbCBvbmx5IGFwcGxpZXMgdG8gRXVyb3BlLiBBbG11bmlhIHNhaWQgaGUgd291bGQgZGlzY3VzcyB0aGUgbmV4dCBzdGVwIGluIEdvb2dsZSdzIEFuZHJvaWQgY2FzZSB3aXRoIG9mZmljaWFscyBpbiB0aGUgbmV4dCB3ZWVrcy4gR29vZ2xlIGdpdmVzIGF3YXkgQW5kcm9pZCBmb3IgZnJlZS4gVGhlIHNvZnR3YXJlLCB3aGljaCBpcyBhdmFpbGFibGUgb24gdGhyZWUgb3V0IG9mIGZvdXIgc21hcnRwaG9uZXMgc29sZCB3b3JsZHdpZGUsIGVzc2VudGlhbGx5IGhlbHBzIHRoZSBjb21wYW55IGV4dGVuZCBpdHMgY29yZSBzZWFyY2ggYnVzaW5lc3MgYW5kIGJvb3N0IGl0cyB1c2FnZSBpbiB0aGUgbW9iaWxlIHdvcmxkLiBMb2JieWluZyBncm91cCBGYWlyU2VhcmNoIHdob3NlIG1lbWJlcnMgaW5jbHVkZSBNaWNyb3NvZnQgYW5kIEZpbmxhbmQncyBOb2tpYSwgaGFzIGFjY3VzZWQgR29vZ2xlIG9mIHVzaW5nIEFuZHJvaWQgdG8gZGl2ZXJ0IHRyYWZmaWMgdG8gaXRzIHNlYXJjaCBlbmdpbmUu</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUQAoa8AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDFmMTQxYzY5YWIxZTVkY2I=</field><field name="symbol" class="java.lang.String">rO0ABXQABENPUkU=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUQFyAsAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSg9cKPXCk</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSpR64UeuF</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSbCj1wo9c</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBSiZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCT1wo9cKP</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAEdKA==</field><field name="id" class="java.lang.String">rO0ABXQAEDFlNmIyYzU3YWU4MTMxMzY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFosAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDE0NTU=</field><field name="title" class="java.lang.String">rO0ABXQAQ0JsYWNrc3RvbmUgVW5pdCBGb3Jlc2hhZG93cyBHb29nbGUgUGF0aCB0byBCZWNvbWluZyBhIFBvd2VyIENvbXBhbnk=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUZGWVyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDBjN2NlODc2Y2M3MmZiMDc=</field><field name="symbol" class="java.lang.String">rO0ABXQABEdSSUQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUZLf7iAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCw9cKPXCk</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCw9cKPXCk</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCo9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCo9cKPXCk</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBCceuFHrhS</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAB9A==</field><field name="id" class="java.lang.String">rO0ABXQAEGI1NGM3MjZjNDIyMDQ5Njk=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mIBKAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIzMDQx</field><field name="title" class="java.lang.String">rO0ABXQAOUdvb2dsZSwgRGV0cm9pdCBEaXZlcmdlIG9uIFJvYWQgTWFwIGZvciBTZWxmLURyaXZpbmcgQ2Fycw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbrJNyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDIzMGI3Mzk3YTI5YzIyODM=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0NBUg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUbwSziAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBN2uFHrhR7</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOpR64UeuF</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBN2ZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOQUeuFHrh</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOQUeuFHrh</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAABeT8A==</field><field name="id" class="java.lang.String">rO0ABXQAEDZiNDk2MWE2Y2E4MGNjYzA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGEpAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTE2MjUw</field><field name="title" class="java.lang.String">rO0ABXQAMEdvb2dsZSBCdWlsZHMgYSAnTmVzdCcgZm9yIEZ1dHVyZSBvZiBTbWFydCBIb21lcw==</field><field name="content" class="java.lang.String">rO0ABXQTtldoZW4gb3VyIEludGVybmV0LWNvbm5lY3RlZCBnYWRnZXRzIGFuZCBob21lIGFwcGxpYW5jZXMgYWxsIGxlYXJuIHRvIHRhbGsgdG8gZWFjaCBvdGhlciwgR29vZ2xlIHdhbnRzIHRvIGJlIGF0IHRoZSBjZW50ZXIgb2YgdGhlIGNvbnZlcnNhdGlvbi4gVGhpcyBpbWFnaW5lZCBmdXR1cmUgaXMgc3RpbGwgYSBmZXcgeWVhcnMgYXdheSwgYnV0IEdvb2dsZSBpcyBhbHJlYWR5IHByZXBhcmluZyB3aXRoIGl0cyAkMy4yIGJpbGxpb24gYWNxdWlzaXRpb24gb2YgaGlnaC10ZWNoIHRoZXJtb3N0YXQgYW5kIHNtb2tlLWRldGVjdG9yIG1ha2VyIE5lc3QgTGFicy4gVGhlIHN1cnByaXNlIGRlYWwgYW5ub3VuY2VkIGVhcmxpZXIgdGhpcyB3ZWVrIHdpbGwgcHJvdmlkZSBHb29nbGUgSW5jLiB3aXRoIG1vcmUgdG9vbHMgdG8gYnVpbGQgYSB2YWx1YWJsZSBodWIgZm9yIGhvbWVzLiBJdCdzIGEgd29ybGQgb2YgbmV0d29yay10ZXRoZXJlZCB0b2FzdGVycyBhbmQgdGVhIGtldHRsZXMsIG9yIGEgc28tY2FsbGVkICJJbnRlcm5ldCBvZiBUaGluZ3MsIiB0aGF0IGlzIGRlc3RpbmVkIHRvIHJlc2hhcGUgc29jaWV0eSwgZXhwZXJ0cyBzYXksIGluIHRoZSBzYW1lIHdheSB0aGF0IHNtYXJ0cGhvbmVzIGhhdmUgZG9uZSBpbiB0aGUgc2V2ZW4geWVhcnMgc2luY2UgQXBwbGUgSW5jLiB1bnZlaWxlZCB0aGUgaVBob25lLgoKRWRpdG9y4oCZcyBOb3RlOiAgR2V0IFRoZXNlIDQgU3RvY2tzIEJlZm9yZSAzOTklIFN0b2NrIE1hcmtldCBSYWxseSEgIFRoZSByZXNlYXJjaCBmaXJtIEdhcnRuZXIgSW5jLiBleHBlY3RzIG1vcmUgdGhhbiAyNiBiaWxsaW9uIG9iamVjdHMgdG8gYmUgY29ubmVjdGVkIHRvIHRoZSBJbnRlcm5ldCBieSAyMDIwLCBhIGZpZ3VyZSB0aGF0IGRvZXNuJ3QgaW5jbHVkZSBwZXJzb25hbCBjb21wdXRlcnMsIHNtYXJ0cGhvbmVzIG9yIHRhYmxldHMuIFRoYXQgd291bGQgYmUgYSBuZWFybHkgMzAtZm9sZCBpbmNyZWFzZSBmcm9tIHJvdWdobHkgOTAwIG1pbGxpb24gSW50ZXJuZXQtY29ubmVjdGVkIHRoaW5ncyBpbiAyMDA5LiBHb29nbGUgZXN0YWJsaXNoZWQgaXRzZWxmIGFzIGFuIGluc3RydW1lbnRhbCBwbGF5ZXIgaW4gc21hcnRwaG9uZXMgd2l0aCB0aGUgMjAwOCByZWxlYXNlIG9mIEFuZHJvaWQsIGEgZnJlZSBvcGVyYXRpbmcgc3lzdGVtIHRoYXQgcnVucyBvbiBtb3JlIG1vYmlsZSBkZXZpY2VzIHRoYW4gYW55IG90aGVyIHBpZWNlIG9mIHNvZnR3YXJlLiBOb3csIHRoZSBjb21wYW55IGlzIGdlYXJpbmcgdXAgZm9yIHRoZSBhZHZlbnQgb2YgdGhlIHNtYXJ0IGhvbWUgd2l0aCB0aGUgaGVscCBvZiBOZXN0IExhYnMsIGEgMzAwLWVtcGxveWVlIGNvbXBhbnkgc3RhcnRlZCBpbiBQYWxvIEFsdG8sIENhbGlmLiBsZXNzIHRoYW4gZm91ciB5ZWFycyBhZ28uIFRvbnkgRmFkZWxsLCBOZXN0J3MgZm91bmRlciwgaXMgYW4gQXBwbGUgdmV0ZXJhbiB3aG8gaGVscGVkIGRlc2lnbiB0aGUgaVBvZCBhbmQgdGhlIGlQaG9uZS4gQXMgaW5mbHVlbnRpYWwgYXMgc21hcnRwaG9uZXMgaGF2ZSBiZWNvbWUsIHRoZWlyIHJvbGUgaW4gdW5kZXJzdGFuZGluZyBwZW9wbGUncyBoYWJpdHMgYW5kIHByZWZlcmVuY2VzIGNvdWxkIGJlIGVjbGlwc2VkIG9uY2UgZXZlcnl0aGluZyBpbiB0aGUgaG9tZSBoYXMgYSBjb21wdXRlciBjaGlwIGFuZCBpcyBjb25uZWN0ZWQgdG8gdGhlIEludGVybmV0LiAiR29vZ2xlIGJvdWdodCBOZXN0IGluIG9yZGVyIHRvIGxlYXJuIGFib3V0IHRoaXMgd29ybGQgd2hlcmUgZXZlbiBtb3JlIGluZm9ybWF0aW9uIGlzIGdvaW5nIHRvIGJlIGFjY2Vzc2libGUgYnkgY29tcHV0ZXJzLCIgc2FpZCBGb3JyZXN0ZXIgUmVzZWFyY2ggYW5hbHlzdCBGcmFuayBHaWxsZXR0LiBOZXN0IExhYnMgcXVpY2tseSB3b24gb3ZlciBnYWRnZXQgbG92ZXJzIHdpdGggaXRzIDIwMTEgcmVsZWFzZSBvZiBhbiBJbnRlcm5ldC1jb25uZWN0ZWQgdGhlcm1vc3RhdCB0aGF0IGxlYXJucyB0byBjb29sIGFuZCBoZWF0IGhvbWVzIHRvIHN1aXQgdGhlIG5lZWRzIG9mIHRoZSBpbmhhYml0YW50cy4gTGF0ZSBsYXN0IHllYXIsIHRoZSBjb21wYW55IGZvbGxvd2VkIHVwIHdpdGggYSBzbW9rZSBhbmQgY2FyYm9uLW1vbm94aWRlIGRldGVjdG9yIGVxdWlwcGVkIHdpdGggdm9pY2UgdGVjaG5vbG9neSBhbmQgdGhlIGFiaWxpdHkgdG8gY29tbXVuaWNhdGUgd2l0aCB0aGUgY29tcGFueSdzIHRoZXJtb3N0YXQuIE5lc3QgaGFzbid0IHNhaWQgaG93IG1hbnkgb2YgaXRzIGRldmljZXMgaGF2ZSBiZWVuIHNvbGQsIHRob3VnaCBhbmFseXN0cyBiZWxpZXZlIHRoZXkgYXJlIGluIGp1c3QgYSBzbWFsbCBmcmFjdGlvbiBvZiBob21lcy4gVGhlIHByb2R1Y3RzIGhhdmUgb25seSBiZWVuIGF2YWlsYWJsZSBpbiB0aGUgVS5TLiwgQ2FuYWRhIGFuZCB0aGUgVW5pdGVkIEtpbmdkb20uIEdvb2dsZSBoYXNuJ3QgZGlzY2xvc2VkIGl0cyBzcGVjaWZpYyBwbGFucyBmb3IgTmVzdCwgYnV0IGFuYWx5c3RzIGFudGljaXBhdGUgYW4gZW50aXJlIGxpbmUgb2YgSW50ZXJuZXQtY29ubmVjdGVkIGhvbWUgcHJvZHVjdHMgd2lsbCBiZSBjb21pbmcgdG8gY291bnRyaWVzIGFyb3VuZCB0aGUgd29ybGQuIFNvbWUgb2YgdGhvc2UgTmVzdCBkZXZpY2VzIGNvdWxkIGJlIG1lbGRlZCB3aXRoIGV4aXN0aW5nIEdvb2dsZSBzZXJ2aWNlcyBpbiBhbiBlZmZvcnQgdG8gbWFrZSBwZW9wbGUncyBsaXZlcyBlYXNpZXIuIFN1Y2ggYSBtb3ZlIGFsc28gd291bGQgcHJvdmlkZSBHb29nbGUgd2l0aCB0aGUgbWVhbnMgdG8gZ2F0aGVyIG1vcmUgaW5zaWdodCB0aGF0IGNvdWxkIGJlIHVzZWQgdG8gc2VsbCB0aGUgZGlnaXRhbCBhZHZlcnRpc2luZyB0aGF0IGdlbmVyYXRlcyBtb3N0IG9mIHRoZSBjb21wYW55J3MgcmV2ZW51ZS4gSW4gYSBibG9nIHBvc3QgYWJvdXQgdGhlIEdvb2dsZSBhY3F1aXNpdGlvbiwgTmVzdCBMYWJzIGNvLWZvdW5kZXIgTWF0dCBSb2dlcnMgcHJvbWlzZWQgdGhhdCBjdXN0b21lcnMnIHBlcnNvbmFsIGluZm9ybWF0aW9uIHdpbGwgb25seSBiZSB1c2VkIGZvciAicHJvdmlkaW5nIGFuZCBpbXByb3ZpbmcgTmVzdCdzIHByb2R1Y3RzIGFuZCBzZXJ2aWNlcy4gV2UndmUgYWx3YXlzIHRha2VuIHByaXZhY3kgc2VyaW91c2x5IGFuZCB0aGlzIHdpbGwgbm90IGNoYW5nZS4iIEJ1dCB0aGF0IHBsZWRnZSB3b24ndCBwcmVjbHVkZSBHb29nbGUgZnJvbSBpbmNvcnBvcmF0aW5nIGl0cyBzZXJ2aWNlcyB3aXRoIE5lc3QncyBwcm9kdWN0cywgc2FpZCBHYXJ0bmVyIGFuYWx5c3QgQW5nZWxhIE1jSW50eXJlLiBGb3IgaW5zdGFuY2UsIEdvb2dsZSBhbHJlYWR5IG1ha2VzIGEgZGlnaXRhbCBhc3Npc3RhbnQgY2FsbGVkICJHb29nbGUgTm93IiB0aGF0IHN0cml2ZXMgdG8gbGVhcm4gd2hhdCBpdHMgdXNlcnMgbGlrZSBhbmQgd2hlcmUgdGhleSB0ZW5kIHRvIGdvIHNvIGl0IGNhbiBwcm92aWRlIGhlbHBmdWwgaW5mb3JtYXRpb24gd2l0aG91dCBwcm9tcHRpbmcuIE1jSW50eXJlIGJlbGlldmVzIE5lc3QncyBwcm9kdWN0cyB3aWxsIHRlYWNoIEdvb2dsZSBOb3cgdG8gYmVjb21lIG1vcmUgaGVscGZ1bCBzbyBpdCBjYW4gaW5jcmVhc2luZ2x5IHRha2Ugb3ZlciBtb3JlIG9mIHRoZSBtdW5kYW5lIHRhc2tzIGluIHBlb3BsZSdzIGxpdmVzLiAiVGhleSBuZWVkIHRvIGdhdGhlciBhcyBtdWNoIGluZm9ybWF0aW9uIGFzIHRoZXkgY2FuIHRvIHVuZGVyc3RhbmQgdGhlIGNvbnRleHQgaW4gaG93IHdlIGxpdmUgb3VyIGxpdmVzLCIgTWNJbnR5cmUgc2FpZC4gR29vZ2xlIGFsc28gY291bGQgcGx1ZyBpdHMgZGlnaXRhbCBtYXBwaW5nIHNvZnR3YXJlIGludG8gTmVzdCBwcm9kdWN0cyBzbyBpdCBjb3VsZCBsZWFybiB0aGUgbGF5b3V0IG9mIGEgaG9tZSwgc2FpZCBCcmlhbiBQcm9mZml0dCwgYSB0ZWNobm9sb2d5IGFuYWx5c3Qgd2hvIGlzIGFsc28gYSBtYW5hZ2VtZW50IGluc3RydWN0b3IgYXQgdGhlIFVuaXZlcnNpdHkgb2YgTm90cmUgRGFtZS4gVGhhdCBrbm93bGVkZ2UgY291bGQgdGhlbiBiZSBkZXBsb3llZCB0byBkZWxlZ2F0ZSBzdWNoIGhvdXNlaG9sZCBjaG9yZXMgYXMgdmFjdXVtaW5nIHRvIGEgcm9ib3QgdGhhdCB3b3VsZCBiZSBhYmxlIHRvIHJlbHkgb24gdGhlIGludGVyaW9yIG1hcHMgdG8gbmF2aWdhdGUgaXRzIHdheSB0aHJvdWdoIGFuIGVudGlyZSBob21lIHdpdGhvdXQgaHVtYW4gaGVscCwgUHJvZmZpdHQgc2FpZC4gQSBHb29nbGUgZGl2aXNpb24gcnVuIGJ5IEFuZHJvaWQgY3JlYXRvciBBbmR5IFJ1YmluIGlzIHdvcmtpbmcgb24gdmFyaW91cyBpZGVhcyBmb3Igcm9ib3RzLCB0aG91Z2ggdGhlIE1vdW50YWluIFZpZXcsIENhbGlmLiwgY29tcGFueSBoYXNuJ3Qgc2hhcmVkIG1hbnkgZGV0YWlscyBhYm91dCBpdHMgZ29hbHMuIEdvb2dsZSdzIGV4cGFuc2lvbiBpbnRvIHJvYm90aWNzIGlzIGFsc28gYmVpbmcgYm9sc3RlcmVkIGJ5IGEgc3BhdGUgb2YgYWNxdWlzaXRpb25zIHRoYXQgaW5jbHVkZWQgdGhlIHJlY2VudCBwdXJjaGFzZSBvZiBCb3N0b24gRHluYW1pY3MsIGEgVS5TLiBtaWxpdGFyeSBjb250cmFjdG9yIHRoYXQgaGFzIGFscmVhZHkgYnVpbHQgYSB2YXJpZXR5IG9mIGNvbnRyYXB0aW9ucyB0aGF0IGNhbiBiZSBwcm9ncmFtbWVkIHRvIHJ1biBhdCByYXBpZCBzcGVlZHMsIGxlYXAgaGlnaCBpbnRvIHRoZSBhaXIgYW5kIGNsaW1iIHJvY2t5IHRlcnJhaW5zLiBFdmVuIGFzIGl0IGV4cGxvcmVzIHZhcmlvdXMgdGVjaG5vbG9naWNhbCBmcm9udGllcnMsIEdvb2dsZSBzdGlsbCBtYWtlcyBtb3N0IG9mIGl0cyBtb25leSBmcm9tIGFkdmVydGlzaW5nIHRpZWQgdG8gc2VhcmNoIHJlcXVlc3RzLiBBY3F1aXJpbmcgYW5kIGRldmVsb3BpbmcgcHJvZHVjdHMgd2l0aCBJbnRlcm5ldCBjb25uZWN0aW9ucyBhbmQgZW52aXJvbm1lbnRhbCBzZW5zb3JzIGNhbiBvbmx5IGhlbHAgR29vZ2xlIGdldCBhbiBldmVuIGJldHRlciBncmFzcCBvbiBwZW9wbGUncyBpbnRlcmVzdHMuCgpFZGl0b3LigJlzIE5vdGU6ICBHZXQgVGhlc2UgNCBTdG9ja3MgQmVmb3JlIDM5OSUgU3RvY2sgTWFya2V0IFJhbGx5IQ==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUOUfCMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGUwZjJlYTIwOTk1M2E0MGU=</field><field name="symbol" class="java.lang.String">rO0ABXQABFBBTlc=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUOZon8AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBPdcKPXCj2</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBQFcKPXCj2</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBPSj1wo9cK</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBP1cKPXCj2</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBP1cKPXCj2</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAA4lfA==</field><field name="id" class="java.lang.String">rO0ABXQAEDIzNWY3NDFhMTM0NTBiMWI=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFSKAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTIzMjk2</field><field name="title" class="java.lang.String">rO0ABXQAMkRldHJvaXQncyBIb3QgTmV3IE1vZGVsOiBHb29kIFByb2ZpdHMsIEdyZWF0IFNhbGVz</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUZa8syAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDFlNmE4OGQ3ODY5MTk5Y2Q=</field><field name="symbol" class="java.lang.String">rO0ABXQABkZDQS5NSQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUZgGSiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAeo9cKPXCk</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAeuFHrhR64</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAeR64UeuFI</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAej1wo9cKP</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAej1wo9cKP</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAIPn+A==</field><field name="id" class="java.lang.String">rO0ABXQAEGFmZDhiMTZlNzE0YjY1Mzc=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGqWAAAA==</field></document></documents><date>2015-05-07T12:21:02-0500</date></cacheEntry>
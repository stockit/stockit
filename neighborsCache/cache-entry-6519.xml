<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hHcmFpbnMgcG93ZXJob3VzZSBBcmdlbnRpbmEgd2lsbCBqdW1wc3RhcnQgc295IGV4cG9ydHMgb3ZlciB0aGUgd2Vla3MgYWhlYWQgYXMgZmFybWVycyB3aG8gaGF2ZSBob2FyZGVkIGJlYW5zIHRvIHByb3RlY3QgdGhlbXNlbHZlcyBmcm9tIHRoZSB3ZWFrZW5pbmcgcGVzbyBhbmQgZ2FsbG9waW5nIGluZmxhdGlvbiBhcmUgZm9yY2VkIHRvIHNlbGwgYnkgdGhlIHRpbWUgaGFydmVzdGluZyBzdGFydHMgaW4gTWFyY2ggVGhlIGNvdW50cnkgaXMgdGhlIHdvcmxkcyBObyAzIHNveWJlYW4gZXhwb3J0ZXIgYW5kIHRvcCBzdXBwbGllciBvZiBzb3ltZWFsIGF0IGEgdGltZSBvZiBib29taW5nIENoaW5lc2UgZGVtYW5kICAgICBBIHdvYmJseSBjdXJyZW5jeSBhbmQgZmFzdHJpc2luZyBjb25zdW1lciBwcmljZXMgaGF2ZSBwcm9tcHRlZCBncm93ZXJzIHRvIHNhdmUgaW4gc295YmVhbnMgcmF0aGVyIHRoYW4gaW4gcGVzb3MgZHJ5aW5nIHVwIEFyZ2VudGluZSBzdXBwbHkgYW5kIHByb3ZpZGluZyBhIGJvb24gdG8gVVMgZXhwb3J0ZXJzCgpUaGUgb2ZmaWNpYWwgZXhjaGFuZ2UgcmF0ZSBpcyAxODUgcGVyY2VudCB3ZWFrZXIgdGhpcyBtb250aCB3aGlsZSB0aGUgYmxhY2sgbWFya2V0IHBlc28gaGFzIHNsdW1wZWQgMjI1IHBlcmNlbnQgVGhlIFJvc2FyaW8gc295IG1hcmtldCBoYXMgdmlydHVhbGx5IHNodXQgZG93biBpbiByZWNlbnQgd2Vla3MgYXMgZ3Jvd2VycyBwaWxlIHVwIGJlYW5zIG9uIHRoZWlyIGZhcm1zIHRvIHByb3RlY3QgdGhlbXNlbHZlcyBmcm9tIGluZmxhdGlvbiBmdWVsZWQgaW4gcGFydCBieSB0aGUgYW5lbWljIHBlc28KCldpdGggdGhlIE1hcmNoTWF5IHNveSBoYXJ2ZXN0aW5nIHNlYXNvbiBhcHByb2FjaGluZyBmYXJtZXJzIHNheSB0aGV5IHdpbGwgYmUgZm9yY2VkIHRvIHJlc3RhcnQgc2VsbGluZwoKWW91IGhhdmUgc3RydWN0dXJhbCBleHBlbnNlcyBvbiBhbnkgZmFybSBzbyBhdCBzb21lIHBvaW50IHlvdSBqdXN0IGhhdmUgdG8gc2VsbCB5b3VyIHJlc2VydmVzIHNhaWQgQWxleGlzIGRlIE5vYWlsbGVzIGEgZ3Jvd2VyIGluIHRoZSBicmVhZGJhc2tldCBwcm92aW5jZSBvZiBCdWVub3MgQWlyZXMgICAgIE1vc3Qgb2YgdXMgcGF5IGluY29tZSB0YXhlcyBhcm91bmQgTWFyY2ggZm9yIGV4YW1wbGUgYW5kIHRoZXkgY2Fubm90IGJlIHBhaWQgaW4gc295YmVhbnMgaGUgc2FpZCBBbmQgeW91IHdvdWxkbnQgd2FudCB0byB3YWl0IHVudGlsIHRoZSBsYXN0IG1pbnV0ZSB0byBzZWxsIHlvdXIgc295YmVhbnMgYmVjYXVzZSB0aGVyZSBpcyBhIGxvdCBvZiBzb3kgaW4gdGhlIHdvcmxkIHRoaXMgeWVhciBhbmQgdGhlIGNsb3NlciB3ZSBnZXQgdG8gTWFyY2ggdGhlIGxvd2VyIHByaWNlcyBhcmUgbGlrZWx5IHRvIGJlCgpBIHJlc3VtcHRpb24gb2YgZmFybWVyIHNlbGxpbmcgaXMgZXhwZWN0ZWQgb25jZSB0aGUgaGFydmVzdCBiZWdpbnMgYnV0IGhhcyBub3QgeWV0IGJlZW4gZnVsbHkgcHJpY2VkIGludG8gdGhlIGZ1dHVyZXMgbWFya2V0IHNhaWQgUmljaCBOZWxzb24gY2hpZWYgc3RyYXRlZ2lzdCB3aXRoIGFncmljdWx0dXJhbCB0cmFkZSBjb25zdWx0YW5jeSBBbGxlbmRhbGUgSW5jCgpNYXJjaCBmdXR1cmVzIG9uIHRoZSBDaGljYWdvIEJvYXJkIG9mIFRyYWRlIG1heSBmYWxsIHRvIDEyNTAgYSBidXNoZWwgYnkgbWlkRmVicnVhcnkgYWJvdXQgMTcgY2VudHMgYmVsb3cgbGV2ZWxzIHRvZGF5IGFuZCBKdWx5IGZ1dHVyZXMgbWF5IHNpbmsgdG8gMTE3NSBhIGJ1c2hlbCBieSB0aGUgcGVhayBvZiBoYXJ2ZXN0IGRvd24gYWJvdXQgNjUgY2VudHMgZnJvbSB0b2RheSBhcyBleHBvcnQgdm9sdW1lcyBmcm9tIGJvdGggQXJnZW50aW5hIGFuZCBCcmF6aWwgaW5jcmVhc2UgaGUgc2FpZAoKQXJnZW50aW5hcyB1cGNvbWluZyBzb3kgY3JvcCBpcyBzZWVuIGF0IDUzIG1pbGxpb24gdG9ucyB1cCBmcm9tIDQ4NSBtaWxsaW9uIGluIHRoZSBwcmV2aW91cyBzZWFzb24gYWNjb3JkaW5nIHRvIHRoZSBCdWVub3MgQWlyZXMgR3JhaW5zIEV4Y2hhbmdlCgpUaGUgbG9jYWwgc295YmVhbiBtYXJrZXQgd2lsbCBjb21lIGJhY2sgdG8gbGlmZSB3aGVuIHRoZSBoYXJ2ZXN0IHN0YXJ0cyBjb21pbmcgaW4gRmFybWVycyB3aWxsIG5lZWQgdG8gc2VsbCAyMCBwZXJjZW50IG9mIHRoZWlyIDIwMTQgc295IGNyb3AgdG8gcGF5IHByb2R1Y3Rpb24gY29zdHMgdGhhdCBjYW5ub3QgYmUgYmFydGVyZWQgZm9yIGluIGJlYW5zIHNhaWQgZmFybSBjb25zdWx0YW50IFBhYmxvIEFkcmVhbmkgICAgIFlvdSB3aWxsIHNlZSBhdCBsZWFzdCAxMSBtaWxsaW9uIHRvbnMgb2YgbmV3IHNveWJlYW5zIGhpdCB0aGUgbWFya2V0IGJldHdlZW4gbm93IGFuZCBNYXkgaGUgc2FpZAoKT3ZlciB0aGUgbW9udGhzIGFoZWFkIGJpZyBoYXJ2ZXN0cyBhcmUgYWxzbyBleHBlY3RlZCBpbiBCcmF6aWwgODkgbWlsbGlvbiB0b25zIGFuZCBQYXJhZ3VheSA5NCBtaWxsaW9uIGFjY29yZGluZyB0byB0aGUgVVMgRGVwYXJ0bWVudCBvZiBBZ3JpY3VsdHVyZSBhbmQgcHJpdmF0ZSBhbmFseXN0cyBEZW1hbmQgaXMgZHJpdmVuIGJ5IENoaW5hIHdoZXJlIGJlYW5zIGFyZSBjcnVzaGVkIGludG8gY2F0dGxlIGZlZWQgZm9yIHRoZSBjb3VudHJ5cyBmYXN0Z3Jvd2luZyBiZWVmIGluZHVzdHJ5CgpEZXNwaXRlIGh1Z2UgaW52ZXN0bWVudHMgbWFkZSBieSBleHBvcnRlcnMgaW4gQXJnZW50aW5lIHNveW1lYWwgcGxhbnRzIGlkbGUgY2FwYWNpdHkgYXQgdGhlIGZhY2lsaXRpZXMgaXMgYXBwcm9hY2hpbmcgNTAgcGVyY2VudCBhcyBncm93ZXJzIHBpbGUgYmVhbnMgaW50byB3aGl0ZSB2YWN1dW1wYWNrZWQgcGxhc3RpYyBiYWdzIHRoYXQgc2VydmUgYXMgaG9yaXpvbnRhbCBzaWxvcyBkb3R0aW5nIHRoZSBQYW1wYXMKClRoZXkgc2VlIHNveWJlYW5zIGFzIGEga2luZCBvZiBjdXJyZW5jeSBub3cgbGlrZSB0aGUgZG9sbGFyIG9yIHRoZSBldXJvIHdoaWNoIHJlcHJlc2VudCBhIG1vcmUgcmVsaWFibGUgc3RvcmUgb2YgdmFsdWUgdGhhbiB0aGUgcGVzbyBzYWlkIExlYW5kcm8gUGllcmJhdHRpc3RpIGFuIGFuYWx5c3Qgd2l0aCBBcmdlbnRpbmFzIGdyYWlucyB3YXJlaG91c2luZyBjaGFtYmVyCgpJdCBpcyBub3Qgb25seSB0aGUgZmFybSBzZWN0b3IgdGhhdCBpcyBmZWVsaW5nIHRoZSBwaW5jaCAgICAgICAgWWVhcnMgb2YgZXJyYXRpYyBwb2xpY3ltYWtpbmcgaW4gQXJnZW50aW5hIGhhdmUgY3JlYXRlZCBhIGduYXJsIG9mIGNhcGl0YWwgYW5kIHByaWNlIGNvbnRyb2xzIHRoYXQgaGF2ZSBtYWRlIHNpbXBsZSB0cmFuc2FjdGlvbnMgbGlrZSBidXlpbmcgYSByZWZyaWdlcmF0b3IgaW1wb3NzaWJsZSBhcyAgbWVyY2hhbnRzIGFyZSB1bnN1cmUgd2hhdCBwcmljZXMgdG8gY2hhcmdlCgpUaGUgZmFjdCB0aGF0IHRoZSBlY29ub21pYyB0ZWFtIGRvZXMgbm90IHNlZW0gdG8gaGF2ZSBhIGNvbXByZWhlbnNpdmUgc3RyYXRlZ3kgZXNwZWNpYWxseSB0byBkZWFsIHdpdGggcmVkdWNpbmcgZmlzY2FsIHNwZW5kaW5nIGlzIGxpa2VseSB0byBodXJ0IHRoZSBlZmZvcnRzIHRvIHN0ZW0gdGhlIGRlY2xpbmUgaW4gcmVzZXJ2ZXMgYW5kIGxvd2VyIGluZmxhdGlvbiBzYWlkIGEgcmVjZW50IG5vdGUgZnJvbSB0aGUgRXVyYXNpYSBHcm91cCBjb25zdWx0YW5jeQoKRUlHSFQgSVMgRU5PVUdICgpFY29ub215IE1pbmlzdGVyIEF4ZWwgS2ljaWxsb2Ygd2hvIGVuZ2luZWVyZWQgdGhlIDIwMTIgbmF0aW9uYWxpemF0aW9uIG9mIEFyZ2VudGluYXMgdG9wIG9pbCBjb21wYW55IFlQRiBoYXMgd2FybmVkIG1lcmNoYW50cyBub3QgdG8gaGlrZSBwcmljZXMgSGUgaGFzIGhpbnRlZCB0aGF0IHRoZSBnb3Zlcm5tZW50IHdpbGwgdXNlIGNlbnRyYWwgYmFuayByZXNlcnZlcyB0byBpbnRlcnZlbmUgaW4gdGhlIGZvcmVpZ24gZXhjaGFuZ2UgbWFya2V0IHRvIGtlZXAgdGhlIHBlc28gYXQgOCB0byB0aGUgZG9sbGFyIGEgbGV2ZWwgaGUgY2FsbHMgYWRlcXVhdGUKCkNlbnRyYWwgYmFuayByZXNlcnZlcyBmZWxsIDI5IHBlcmNlbnQgbGFzdCB5ZWFyIHRvIDMxICBiaWxsaW9uIFRoZXkgc3RhbmQgYXQgdW5kZXIgMjkgYmlsbGlvbiBhZnRlciB0aGUgYmFuayBidXJuZWQgdGhyb3VnaCA0MjAgbWlsbGlvbiBvdmVyIHRoZSBsYXN0IGZvdXIgZGF5cyB0byBob2xkIHRoZSBvZmZpY2lhbCBwZXNvIGF0IDggcGVyIGRvbGxhcgoKSW5mbGF0aW9uIGlzIG1lYW53aGlsZSBsaWtlbHkgdG8ga2VlcCBjbGltYmluZyBkdWUgaW4gcGFydCB0byBnZW5lcm91cyBzdGF0ZSBlbmVyZ3kgYW5kIHRyYW5zcG9ydGF0aW9uIHN1YnNpZGllcyBhdCB0aGUgaGVhcnQgb2YgUHJlc2lkZW50IENyaXN0aW5hIEZlcm5hbmRlenMgcG9wdWxpc3QgcG9saWN5IG1vZGVsICAgICBIZXIgcG9saWNpZXMgbGlrZSBoaWdoIHNveWJlYW4gZXhwb3J0IHRheGVzIGFuZCBjdXJicyBvbiBjb3JuIGFuZCB3aGVhdCBzaGlwbWVudHMgYWltZWQgYXQgZW5zdXJpbmcgYW1wbGUgZG9tZXN0aWMgZm9vZCBzdXBwbGllcyB0ZW5kIHRvIHRha2UgbW9uZXkgZnJvbSBzcGFyc2VseXBvcHVsYXRlZCBmYXJtIGFyZWFzIHdpdGggY3J1bWJsaW5nIGluZnJhc3RydWN0dXJlIGFuZCBmdW5uZWwgaXQgdG93YXJkIGhlciBiYXNlIGluIHRoZSB2b3RlaGVhdnkgc3VidXJicyBzdXJyb3VuZGluZyBjYXBpdGFsIGNpdHkgQnVlbm9zIEFpcmVzCgpTaGUgZWFzaWx5IHdvbiByZWVsZWN0aW9uIGluIDIwMTEgYW5kIHRoZSByYWNlIHRvIHJlcGxhY2UgaGVyIG5leHQgeWVhciBpcyB3aWRlIG9wZW4gT3Bwb3NpdGlvbiBjYW5kaWRhdGVzIGJldCB0aGF0IGRpc2NvbnRlbnQgb3ZlciB0aGUgY29uc2VxdWVuY2VzIG9mIEZlcm5hbmRlenMgcG9saWNpZXMgd2lsbCBwYXZlIHRoZSB3YXkgZm9yIHZvdGVycyB0byBlbWJyYWNlIGEgbW9yZSBwcm9pbnZlc3RtZW50IGNhbmRpZGF0ZSBpbiB0aGUgMjAxNSBlbGVjdGlvbiBTaGUgaXMgYmFubmVkIGJ5IGxhdyBmcm9tIHJ1bm5pbmcgYWdhaW4KCk1lYW53aGlsZSBmYXJtZXJzIGxpa2UgQXQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0wMy0yN1QwMDowMDowMFogVE8gMjAxMy0xMi0wM1Q1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwNTI=</field><field name="title" class="java.lang.String">rO0ABXQAMlRoZSBTZWNyZXQsIERpcnR5IENvc3Qgb2YgT2JhbWEncyBHcmVlbiBQb3dlciBQdXNo</field><field name="content" class="java.lang.String">rO0ABXRkjFRoZSBoaWxscyBvZiBzb3V0aGVybiBJb3dhIGJlYXIgdGhlIHNjYXJzIG9mIEFtZXJpY2EncyBwdXNoIGZvciBncmVlbiBlbmVyZ3k6IFRoZSBicm93biBnYXNoZXMgd2hlcmUgcmFpbiBoYXMgd2FzaGVkIGF3YXkgdGhlIHNvaWwuIFRoZSBwb2xsdXRlZCBzdHJlYW1zIHRoYXQgZHVtcCBmZXJ0aWxpemVyIGludG8gdGhlIHdhdGVyIHN1cHBseS4gRXZlbiB0aGUgY2VtZXRlcnkgdGhhdCBkaXNhcHBlYXJlZCBsaWtlIGFuIGFwcGFyaXRpb24gaW50byBhIGNvcm5maWVsZC4gSXQgd2Fzbid0IHN1cHBvc2VkIHRvIGJlIHRoaXMgd2F5LiBXaXRoIHRoZSBJb3dhIHBvbGl0aWNhbCBjYXVjdXNlcyBvbiB0aGUgaG9yaXpvbiBpbiAyMDA3LCBwcmVzaWRlbnRpYWwgY2FuZGlkYXRlIEJhcmFjayBPYmFtYSBtYWRlIGhvbWVncm93biBjb3JuIGEgY2VudGVycGllY2Ugb2YgaGlzIHBsYW4gdG8gc2xvdyBnbG9iYWwgd2FybWluZy4gQW5kIHdoZW4gUHJlc2lkZW50IEdlb3JnZSBXLiBCdXNoIHNpZ25lZCBhIGxhdyB0aGF0IHllYXIgcmVxdWlyaW5nIG9pbCBjb21wYW5pZXMgdG8gYWRkIGJpbGxpb25zIG9mIGdhbGxvbnMgb2YgZXRoYW5vbCB0byB0aGVpciBnYXNvbGluZSBlYWNoIHllYXIsIEJ1c2ggcHJlZGljdGVkIGl0IHdvdWxkIG1ha2UgdGhlIGNvdW50cnkgInN0cm9uZ2VyLCBjbGVhbmVyIGFuZCBtb3JlIHNlY3VyZS4iCgpFZGl0b3LigJlzIE5vdGU6ICAgT2JhbWEgRG9ub3IgQmFubmVkIFRoaXMgTWVzc2FnZSAoU2hvY2tpbmcpICBCdXQgdGhlIGV0aGFub2wgZXJhIGhhcyBwcm92ZW4gZmFyIG1vcmUgZGFtYWdpbmcgdG8gdGhlIGVudmlyb25tZW50IHRoYW4gcG9saXRpY2lhbnMgcHJvbWlzZWQgYW5kIG11Y2ggd29yc2UgdGhhbiB0aGUgZ292ZXJubWVudCBhZG1pdHMgdG9kYXkuIEFzIGZhcm1lcnMgcnVzaGVkIHRvIGZpbmQgbmV3IHBsYWNlcyB0byBwbGFudCBjb3JuLCB0aGV5IHdpcGVkIG91dCBtaWxsaW9ucyBvZiBhY3JlcyBvZiBjb25zZXJ2YXRpb24gbGFuZCwgZGVzdHJveWVkIGhhYml0YXQgYW5kIHBvbGx1dGVkIHdhdGVyIHN1cHBsaWVzLCBhbiBBc3NvY2lhdGVkIFByZXNzIGludmVzdGlnYXRpb24gZm91bmQuIEZpdmUgbWlsbGlvbiBhY3JlcyBvZiBsYW5kIHNldCBhc2lkZSBmb3IgY29uc2VydmF0aW9uIOKAlCBtb3JlIHRoYW4gWWVsbG93c3RvbmUsIEV2ZXJnbGFkZXMgYW5kIFlvc2VtaXRlIE5hdGlvbmFsIFBhcmtzIGNvbWJpbmVkIOKAlCBoYXZlIHZhbmlzaGVkIG9uIE9iYW1hJ3Mgd2F0Y2guIExhbmRvd25lcnMgZmlsbGVkIGluIHdldGxhbmRzLiBUaGV5IHBsb3dlZCBpbnRvIHByaXN0aW5lIHByYWlyaWVzLCByZWxlYXNpbmcgY2FyYm9uIGRpb3hpZGUgdGhhdCBoYWQgYmVlbiBsb2NrZWQgaW4gdGhlIHNvaWwuIFNwcmF5ZXJzIHB1bXBlZCBvdXQgYmlsbGlvbnMgb2YgcG91bmRzIG9mIGZlcnRpbGl6ZXIsIHNvbWUgb2Ygd2hpY2ggc2VlcGVkIGludG8gZHJpbmtpbmcgd2F0ZXIsIGNvbnRhbWluYXRlZCByaXZlcnMgYW5kIHdvcnNlbmVkIHRoZSBodWdlIGRlYWQgem9uZSBpbiB0aGUgR3VsZiBvZiBNZXhpY28gd2hlcmUgbWFyaW5lIGxpZmUgY2FuJ3Qgc3Vydml2ZS4gVGhlIGNvbnNlcXVlbmNlcyBhcmUgc28gc2V2ZXJlIHRoYXQgZW52aXJvbm1lbnRhbGlzdHMgYW5kIG1hbnkgc2NpZW50aXN0cyBoYXZlIG5vdyByZWplY3RlZCBjb3JuLWJhc2VkIGV0aGFub2wgYXMgYmFkIGVudmlyb25tZW50YWwgcG9saWN5LiBCdXQgdGhlIE9iYW1hIGFkbWluaXN0cmF0aW9uIHN0YW5kcyBieSBpdCwgaGlnaGxpZ2h0aW5nIGl0cyBiZW5lZml0cyB0byB0aGUgZmFybWluZyBpbmR1c3RyeSByYXRoZXIgdGhhbiBhbnkgbmVnYXRpdmUgaW1wYWN0LiBGYXJtZXJzIHBsYW50ZWQgMTUgbWlsbGlvbiBtb3JlIGFjcmVzIG9mIGNvcm4gbGFzdCB5ZWFyIHRoYW4gYmVmb3JlIHRoZSBldGhhbm9sIGJvb20sIGFuZCB0aGUgZWZmZWN0cyBhcmUgdmlzaWJsZSBpbiBwbGFjZXMgbGlrZSBzb3V0aCBjZW50cmFsIElvd2EuIFRoZSBoaWxseSwgb25jZS1ncmFzc3kgbGFuZHNjYXBlIGlzIG1hZGUgdXAgb2YgZnJhZ2lsZSBzb2lsIHRoYXQsIHVubGlrZSB0aGUgZWFydGggaW4gdGhlIHJlc3Qgb2YgdGhlIHN0YXRlLCBpcyBwb29ybHkgc3VpdGVkIGZvciBjb3JuLiBOZXZlcnRoZWxlc3MsIGl0IGhhcyB5aWVsZGVkIHRvIEFtZXJpY2EncyBkZW1hbmQgZm9yIGl0LiAiVGhleSdyZSByYXBpbmcgdGhlIGxhbmQsIiBzYWlkIEJpbGwgQWxsZXksIGEgbWVtYmVyIG9mIHRoZSBib2FyZCBvZiBzdXBlcnZpc29ycyBpbiBXYXluZSBDb3VudHksIHdoaWNoIG5vdyBiZWFycyBsaXR0bGUgcmVzZW1ibGFuY2UgdG8gdGhlIHJvbGxpbmcgY293IHBhc3R1cmVzIHNob3duIGluIHBvc3RjYXJkcyBzb2xkIGF0IGEgQ29yeWRvbiBwaGFybWFjeS4gQWxsIGVuZXJneSBjb21lcyBhdCBhIGNvc3QuIFRoZSBlbnZpcm9ubWVudGFsIGNvbnNlcXVlbmNlcyBvZiBkcmlsbGluZyBmb3Igb2lsIGFuZCBuYXR1cmFsIGdhcyBhcmUgd2VsbCBkb2N1bWVudGVkIGFuZCBzZXZlcmUuIEJ1dCBpbiB0aGUgcHJlc2lkZW50J3MgcHVzaCB0byByZWR1Y2UgZ3JlZW5ob3VzZSBnYXNlcyBhbmQgY3VydGFpbCBnbG9iYWwgd2FybWluZywgaGlzIGFkbWluaXN0cmF0aW9uIGhhcyBhbGxvd2VkIHNvLWNhbGxlZCBncmVlbiBlbmVyZ3kgdG8gZG8gbm90LXNvLWdyZWVuIHRoaW5ncy4gSW4gc29tZSBjYXNlcywgc3VjaCBhcyBpdHMgZGVjaXNpb24gdG8gYWxsb3cgd2luZCBmYXJtcyB0byBraWxsIGVhZ2xlcywgdGhlIGFkbWluaXN0cmF0aW9uIGFjY2VwdHMgZW52aXJvbm1lbnRhbCBjb3N0cyBiZWNhdXNlIHRoZXkgcGFsZSBpbiBjb21wYXJpc29uIHRvIHRoZSBoYXZvYyBpdCBiZWxpZXZlcyBnbG9iYWwgd2FybWluZyBjb3VsZCB1bHRpbWF0ZWx5IGNhdXNlLiBFdGhhbm9sIGlzIGRpZmZlcmVudC4gVGhlIGdvdmVybm1lbnQncyBwcmVkaWN0aW9ucyBvZiB0aGUgYmVuZWZpdHMgaGF2ZSBwcm92ZW4gc28gaW5hY2N1cmF0ZSB0aGF0IGluZGVwZW5kZW50IHNjaWVudGlzdHMgcXVlc3Rpb24gd2hldGhlciBpdCB3aWxsIGV2ZXIgYWNoaWV2ZSBpdHMgY2VudHJhbCBlbnZpcm9ubWVudGFsIGdvYWw6IHJlZHVjaW5nIGdyZWVuaG91c2UgZ2FzZXMuIFRoYXQgbWFrZXMgdGhlIGhpZGRlbiBjb3N0cyBldmVuIG1vcmUgc2lnbmlmaWNhbnQuICJUaGlzIGlzIGFuIGVjb2xvZ2ljYWwgZGlzYXN0ZXIsIiBzYWlkIENyYWlnIENveCB3aXRoIHRoZSBFbnZpcm9ubWVudGFsIFdvcmtpbmcgR3JvdXAsIGEgbmF0dXJhbCBhbGx5IG9mIHRoZSBwcmVzaWRlbnQgdGhhdCwgbGlrZSBvdGhlcnMsIG5vdyBmaW5kcyBpdHNlbGYgYXQgb2RkcyB3aXRoIHRoZSBXaGl0ZSBIb3VzZS4gQnV0IGl0J3MgYSBjb3N0IHRoZSBhZG1pbmlzdHJhdGlvbiBpcyB3aWxsaW5nIHRvIGFjY2VwdC4gSXQgYmVsaWV2ZXMgc3VwcG9ydGluZyBjb3JuIGV0aGFub2wgaXMgdGhlIGJlc3Qgd2F5IHRvIGVuY291cmFnZSB0aGUgZGV2ZWxvcG1lbnQgb2YgYmlvZnVlbHMgdGhhdCB3aWxsIHNvbWVkYXkgYmUgY2xlYW5lciBhbmQgZ3JlZW5lciB0aGFuIHRvZGF5J3MuIFB1bGxpbmcgdGhlIHBsdWcgb24gY29ybiBldGhhbm9sLCBvZmZpY2lhbHMgZmVhciwgbWlnaHQgbWVhbiBraWxsaW5nIGFueSBob3BlIG9mIHRoZXNlIG5leHQtZ2VuZXJhdGlvbiBmdWVscy4gIlRoYXQgaXMgd2hhdCB5b3UgZ2l2ZSB1cCBpZiB5b3UgZG9uJ3QgcmVjb2duaXplIHRoYXQgcmVuZXdhYmxlIGZ1ZWxzIGhhdmUgc29tZSBwbGFjZSBoZXJlLCIgRVBBIGFkbWluaXN0cmF0b3IgR2luYSBNY0NhcnRoeSBzYWlkIGluIGEgcmVjZW50IGludGVydmlldyB3aXRoIEFQLiAiQWxsIHJlbmV3YWJsZSBmdWVscyBhcmUgbm90IGNvcm4gZXRoYW5vbC4iIFN0aWxsLCBjb3JuIHN1cHBsaWVzIHRoZSBvdmVyd2hlbG1pbmcgbWFqb3JpdHkgb2YgZXRoYW5vbCBpbiB0aGUgVW5pdGVkIFN0YXRlcywgYW5kIHRoZSBhZG1pbmlzdHJhdGlvbiBpcyBsb2F0aCB0byBkaXNjdXNzIHRoZSBlbnZpcm9ubWVudGFsIGNvbnNlcXVlbmNlcy4gIkl0IGp1c3QgY2F1Z2h0IHVzIGNvbXBsZXRlbHkgb2ZmIGd1YXJkLCIgc2FpZCBEb3VnIERhdmVucG9ydCwgYSBEZXBhcnRtZW50IG9mIEFncmljdWx0dXJlIG9mZmljaWFsIHdobyBlbmNvdXJhZ2VzIHNvdXRoZXJuIElvd2EgZmFybWVycyB0byB1c2UgY29uc2VydmF0aW9uIHByYWN0aWNlcyBvbiB0aGVpciBsYW5kLiBEZXNwaXRlIHRob3NlIGVmZm9ydHMsIERhdmVucG9ydCBzYWlkIGhlIHdhcyBzdXJwcmlzZWQgYXQgaG93IG11Y2ggZnJhZ2lsZSwgZXJvZGlibGUgbGFuZCB3YXMgdHVybmVkIGludG8gY29ybiBmaWVsZHMuIFNob3J0bHkgYWZ0ZXIgRGF2ZW5wb3J0IHNwb2tlIHRvIFRoZSBBc3NvY2lhdGVkIFByZXNzLCBoZSBnb3QgYW4gZW1haWwgb3JkZXJpbmcgaGltIHRvIHN0b3AgdGFsa2luZy4gIldlIGp1c3Qgd2FudCB0byBoYXZlIGEgY29uc2lzdGVudCBtZXNzYWdlIG9uIHRoZSB0b3BpYywiIGFuIEFncmljdWx0dXJlIERlcGFydG1lbnQgc3Bva2VzbWFuIGluIElvd2Egc2FpZC4gVGhhdCBjb25zaXN0ZW50IG1lc3NhZ2Ugd2FzIGxhaWQgb3V0IGJ5IEFncmljdWx0dXJlIFNlY3JldGFyeSBUb20gVmlsc2Fjaywgd2hvIHNwb2tlIHRvIGV0aGFub2wgbG9iYnlpc3RzIG9uIENhcGl0b2wgSGlsbCByZWNlbnRseSBhbmQgc2FpZCBldGhhbm9sIHdhcyBnb29kIGZvciBidXNpbmVzcy4gIldlIGFyZSBjb21taXR0ZWQgdG8gdGhpcyBpbmR1c3RyeSBiZWNhdXNlIHdlIHVuZGVyc3RhbmQgaXRzIGJlbmVmaXRzLCIgaGUgc2FpZC4gIldlIHVuZGVyc3RhbmQgaXQncyBhYm91dCBmYXJtIGluY29tZS4gSXQncyBhYm91dCBzdGFiaWxpemluZyBhbmQgbWFpbnRhaW5pbmcgZmFybSBpbmNvbWUgd2hpY2ggaXMgYXQgcmVjb3JkIGxldmVscy4iIFRoZSBudW1iZXJzIGJlaGluZCB0aGUgZXRoYW5vbCBtYW5kYXRlIGhhdmUgYmVjb21lIHNvIHVud29ya2FibGUgdGhhdCwgZm9yIHRoZSBmaXJzdCB0aW1lLCB0aGUgRVBBIGlzIHNvb24gZXhwZWN0ZWQgdG8gcmVkdWNlIHRoZSBhbW91bnQgb2YgZXRoYW5vbCByZXF1aXJlZCB0byBiZSBhZGRlZCB0byB0aGUgZ2Fzb2xpbmUgc3VwcGx5LiBBbiB1bnVzdWFsIGNvYWxpdGlvbiBvZiBiaWcgb2lsIGNvbXBhbmllcywgZW52aXJvbm1lbnRhbCBncm91cHMgYW5kIGZvb2QgY29tcGFuaWVzIGlzIHB1c2hpbmcgdGhlIGdvdmVybm1lbnQgdG8gZ28gZXZlbiBmdXJ0aGVyIGFuZCByZWNvbnNpZGVyIHRoZSBlbnRpcmUgZXRoYW5vbCBwcm9ncmFtLiBUaGUgZXRoYW5vbCBpbmR1c3RyeSBpcyBmaWdodGluZyBoYXJkIGFnYWluc3QgdGhhdCBlZmZvcnQuIEluZHVzdHJ5IHNwb2tlc21hbiBCcm9va2UgQ29sZW1hbiBkaXNtaXNzZWQgdGhpcyBzdG9yeSBhcyAicHJvcGFnYW5kYSBvbiBhIHBhZ2UuIiBBbiBpbmR1c3RyeSBibG9nIGluIE1pbm5lc290YSBzYWlkIHRoZSBBUCBoYWQgc3VjY3VtYmVkICJ0byBCaWcgT2lsJ3MgZGVlcCBwb2NrZXRzIGFuZCBwb3dlcmZ1bCBpbmZsdWVuY2UuIiBUbyB1bmRlcnN0YW5kIGhvdyBBbWVyaWNhIGdvdCB0byBhbiBlbnZpcm9ubWVudGFsIHBvbGljeSB3aXRoIHN1Y2ggaGFybWZ1bCBlbnZpcm9ubWVudGFsIGNvbnNlcXVlbmNlcywgaXQncyBoZWxwZnVsIHRvIHN0YXJ0IGluIGEgZmllbGQgaW4gSW93YS4gX19fIExlcm95IFBlcmtpbnMsIGEgd2hpdGUtaGFpcmVkLCA2Ni15ZWFyLW9sZCBmYXJtZXIgaW4gZGVuaW0gb3ZlcmFsbHMsIHN0YW5kcyBzdXJyb3VuZGVkIGJ5IHdhaXN0LWhpZ2ggZ3Jhc3MgYW5kIGNsb3Zlci4gSGUgb3ducyA5MSBhY3JlcyBsaWtlIHRoaXMsIGFsbCBoaWxseSBhbmQgZXJvZGlibGUsIHRoYXQgaGUgc2V0IGFzaWRlIGZvciBjb25zZXJ2YXRpb24geWVhcnMgYWdvLiBTb29uLCBoZSB3aWxsIGhhdmUgYSBkZWNpc2lvbiB0byBtYWtlOiBrZWVwIHRoZSBsYW5kIGFzIGl0IGlzIG9yLCBsaWtlIG1hbnkgb2YgaGlzIG5laWdoYm9ycywgcGxvdyBpdCBkb3duIGFuZCBwbGFudCBjb3JuIG9yIHNveWJlYW5zLCB0aGUgbWFqb3Igc291cmNlcyBvZiBiaW9mdWVsIGluIHRoZSBVbml0ZWQgU3RhdGVzLiAiSSdkIGxpa2UgdG8ga2VlcCBpdCBpbiwiIGhlIHNhaWQuICJUaGlzIGlzIHdoYXQgc291dGhlcm4gSW93YSdzIGZvcjogcmFpc2luZyBncmFzcy4iIEZvciBkZWNhZGVzLCB0aGUgZ292ZXJubWVudCdzIENvbnNlcnZhdGlvbiBSZXNlcnZlIFByb2dyYW0gaGFzIHBhaWQgZmFybWVycyB0byBzdG9wIGZhcm1pbmcgZW52aXJvbm1lbnRhbGx5IHNlbnNpdGl2ZSBsYW5kLiBHcmFzc3kgZmllbGRzIG5hdHVyYWxseSBjb252ZXJ0IGNhcmJvbiBkaW94aWRlIGludG8gb3h5Z2VuLCB3aGljaCBoZWxwcyBjb21iYXQgZ2xvYmFsIHdhcm1pbmcuIFBsdXMsIHRoZWlyIGRlZXAgcm9vdCBzeXN0ZW1zIHByZXZlbnQgdG9wc29pbCBmcm9tIHdhc2hpbmcgYXdheS4gRm9yIFBlcmtpbnMgYW5kIGhpcyBmYXJtZXIgbmVpZ2hib3JzIGluIFdheW5lIENvdW50eSwga2VlcGluZyBmYXJtbGFuZCBpbiBjb25zZXJ2YXRpb24gd2Fzbid0IGp1c3QgZ29vZCBzdGV3YXJkc2hpcC4gSXQgbWFkZSBmaW5hbmNpYWwgc2Vuc2UuIEEgZGVjYWRlIGFnbywgV2FzaGluZ3RvbiBwYWlkIHRoZW0gYWJvdXQgJDcwIGFuIGFjcmUgZWFjaCB5ZWFyIHRvIGxlYXZlIHRoZWlyIGZhcm1sYW5kIGlkbGUuIFdpdGggY29ybiBzZWxsaW5nIGZvciBhYm91dCAkMiBwZXIgYnVzaGVsICg1NiBwb3VuZHMpIGJhY2sgdGhlbiwgZmFybWluZyB0aGUgaGlsbHksIGluZmVyaW9yIHNvaWwgd2FzIGJhZCBidXNpbmVzcy4gTWFueSBvcHRlZCBpbnRvIHRoZSBjb25zZXJ2YXRpb24gcHJvZ3JhbS4gT3RoZXJzIGtlcHQgdGhlaXIgZ3Jhc3NsYW5kcyBmb3IgY293IHBhc3R1cmVzLiBMYXRlbHksIHRob3VnaCwgdGhlIG1hdGggaGFzIGNoYW5nZWQuICJJJ20gY29taW5nIHRvIHRoZSBwb2ludCB3aGVyZSBmaW5hbmNpYWxseSwgaXQncyBub3QgZmVhc2libGUsIiBQZXJraW5zIHNhaWQuIFRoZSBjaGFuZ2UgYmVnYW4gaW4gMjAwNywgd2hlbiBDb25ncmVzcyBwYXNzZWQgYSBsYXcgcmVxdWlyaW5nIG9pbCBjb21wYW5pZXMgdG8gYmxlbmQgYmlsbGlvbnMgb2YgZ2FsbG9ucyBvZiBldGhhbm9sIGludG8gZ2Fzb2xpbmUuIE9pbCBwcmljZXMgd2VyZSBoaWdoLiBPaWwgaW1wb3J0cyB3ZXJlIHJpc2luZyBxdWlja2x5LiBUaGUgbGVnaXNsYXRpb24gaGFkIHRoZSBzdHJvbmcgYmFja2luZyBvZiB0aGUgcHJlc2lkZW50aWFsIGNhbmRpZGF0ZSB3aG8gd2FzIHRoZSBqdW5pb3Igc2VuYXRvciBmcm9tIG5laWdoYm9yaW5nIElsbGlub2lzLCB0aGUgbmF0aW9uJ3Mgc2Vjb25kLWxhcmdlc3QgY29ybiBwcm9kdWNlci4gIklmIHdlJ3JlIGdvaW5nIHRvIGdldCBzZXJpb3VzIGFib3V0IGludmVzdGluZyBpbiBvdXIgZW5lcmd5IGZ1dHVyZSwgd2UgbXVzdCBnaXZlIG91ciBmYW1pbHkgZmFybWVycyBhbmQgbG9jYWwgZXRoYW5vbCBwcm9kdWNlcnMgYSBmYWlyIHNob3QgYXQgc3VjY2VzcywiIE9iYW1hIHNhaWQgdGhlbi4gVGhlIERlbW9jcmF0aWMgcHJpbWFyeSBmaWVsZCB3YXMgY3Jvd2RlZCwgYW5kIGlmIGhlIGRpZG4ndCB3aW4gdGhlIElvd2EgY2F1Y3VzZXMgdGhlIHJvYWQgdG8gdGhlIG5vbWluYXRpb24gd291bGQgYmUgZGlmZmljdWx0LiBIaXMgc3Ryb25nIHN1cHBvcnQgZm9yIGV0aGFub2wgc2V0IGhpbSBhcGFydC4gIkFueSB0aW1lIHdlIGNvdWxkIHRhbGsgYWJvdXQgc3VwcG9ydCBmb3IgZXRoYW5vbCwgd2UgZGlkLCIgc2FpZCBNaXRjaCBTdGV3YXJ0LCB0aGUgYmF0dGxlZ3JvdW5kIHN0YXRlcyBkaXJlY3RvciBmb3IgT2JhbWEncyAyMDA4IGNhbXBhaWduLiAiSXQncyBob3cgd2Ugd291bGQgbGVhZCBhIGxvdCBvZiBkaXNjdXNzaW9ucy4iIFByZXNpZGVudCBCdXNoIHNpZ25lZCB0aGUgYmlsbCB0aGF0IERlY2VtYmVyLiBJdCB3b3VsZCBmYWxsIG9uIHRoZSBuZXh0IHByZXNpZGVudCB0byBmaWd1cmUgb3V0IGhvdyB0byBtYWtlIGl0IHdvcmsuIF9fXyBQcmVzaWRlbnQgT2JhbWEncyB0ZWFtIGF0IHRoZSBFUEEgd2FzIHNvdXIgb24gdGhlIGV0aGFub2wgbWFuZGF0ZSBmcm9tIHRoZSBzdGFydC4gQXMgYSB3YXkgdG8gcmVkdWNlIGdsb2JhbCB3YXJtaW5nLCB0aGV5IGtuZXcgY29ybiBldGhhbm9sIHdhcyBhIGR1YmlvdXMgcHJvcG9zaXRpb24uIENvcm4gZGVtYW5kcyBmZXJ0aWxpemVyLCB3aGljaCBpcyBtYWRlIHVzaW5nIG5hdHVyYWwgZ2FzLiBXaGF0J3Mgd29yc2UsIGV0aGFub2wgZmFjdG9yaWVzIHR5cGljYWxseSBidXJuIGNvYWwgb3IgZ2FzLCBib3RoIG9mIHdoaWNoIHJlbGVhc2UgY2FyYm9uIGRpb3hpZGUuIFRoZW4gdGhlcmUgd2FzIHRoZSBsYW5kIGNvbnZlcnNpb24sIHRoZSBtb3N0IGNvbnRyb3ZlcnNpYWwgYW5kIGRpZmZpY3VsdC10by1wcmVkaWN0IG91dGNvbWUuIERpZ2dpbmcgdXAgZ3Jhc3NsYW5kIHJlbGVhc2VzIGdyZWVuaG91c2UgZ2FzZXMsIHNvIGVudmlyb25tZW50YWxpc3RzIGFyZSBza2VwdGljYWwgb2YgYW55IHByb2dyYW0gdGhhdCBlbmNvdXJhZ2VzIHBsYW50aW5nIG1vcmUgY29ybi4gIkkgZG9uJ3QgcmVtZW1iZXIgYW55Ym9keSBoYXZpbmcgZ3JlYXQgcGFzc2lvbiBmb3IgdGhpcywiIHNhaWQgQm9iIFN1c3NtYW4sIHdobyBzZXJ2ZWQgb24gT2JhbWEncyB0cmFuc2l0aW9uIHRlYW0gYW5kIHJlY2VudGx5IHJldGlyZWQgYXMgRVBBJ3Mgc2VuaW9yIHBvbGljeSBjb3Vuc2VsLiAiSSBkb24ndCBoYXZlIGEgbG90IG9mIHBlcnNvbmFsIGVudGh1c2lhc20gZm9yIHRoZSBwcm9ncmFtLiIgQXQgdGhlIFdoaXRlIEhvdXNlIGFuZCB0aGUgRGVwYXJ0bWVudCBvZiBBZ3JpY3VsdHVyZSwgdGhvdWdoLCB0aGVyZSB3YXMgcGxlbnR5IG9mIGVudGh1c2lhc20uIE9uZSBvZiBPYmFtYSdzIHNlbmlvciBhZHZpc2VycywgUGV0ZSBSb3VzZSwgaGFkIHdvcmtlZCBvbiBldGhhbm9sIGlzc3VlcyBhcyBjaGllZiBvZiBzdGFmZiB0byBTZW4uIFRvbSBEYXNjaGxlIG9mIFNvdXRoIERha290YSwgYSBtYWpvciBldGhhbm9sIGJvb3N0ZXIgYW5kIG5vdyBjaGFpciBvZiB0aGUgRHVQb250IEFkdmlzb3J5IENvbW1pdHRlZSBvbiBBZ3JpY3VsdHVyZSBJbm5vdmF0aW9uIGFuZCBQcm9kdWN0aXZpdHkuIEFub3RoZXIgT2JhbWEgYWR2aXNlciBhdCB0aGUgdGltZSwgSGVhdGhlciBaaWNoYWwsIGdyZXcgdXAgaW4gbm9ydGhlYXN0IElvd2Eg4oCUIGFzIGEgY2hpbGQsIHNoZSB3YXMgY3Jvd25lZCAic3dlZXQgY29ybiBwcmluY2VzcyIg4oCUIGFuZCB3YXMgb25lIG9mIHRoZSBPYmFtYSBjYW1wYWlnbidzIGxlYWRpbmcgdm9pY2VzIG9uIGV0aGFub2wgaW4gaGVyIGhvbWUgc3RhdGUuIFRoZSBhZG1pbmlzdHJhdGlvbiBoYWQgbm8gZ3JlYXRlciBjb3JuIGV0aGFub2wgYWR2b2NhdGUgdGhhbiBWaWxzYWNrLCB0aGUgZm9ybWVyIElvd2EgZ292ZXJub3IuICJUb20gdW5kZXJzdGFuZHMgdGhhdCB0aGUgc29sdXRpb24gdG8gb3VyIGVuZXJneSBjcmlzaXMgd2lsbCBiZSBmb3VuZCBub3QgaW4gb2lsIGZpZWxkcyBhYnJvYWQgYnV0IGluIG91ciBmYXJtIGZpZWxkcyBoZXJlIGF0IGhvbWUsIiBPYmFtYSBzYWlkIGluIDIwMDguICJUaGF0IGlzIHRoZSBraW5kIG9mIGxlYWRlciBJIHdhbnQgaW4gbXkgQ2FiaW5ldC4iIF9fXyBXcml0aW5nIHRoZSByZWd1bGF0aW9ucyB0byBpbXBsZW1lbnQgdGhlIGV0aGFub2wgbWFuZGF0ZSB3YXMgYW1vbmcgdGhlIGFkbWluaXN0cmF0aW9uJ3MgZmlyc3QgbWFqb3IgZW52aXJvbm1lbnRhbCB1bmRlcnRha2luZ3MuIEluZHVzdHJ5IGFuZCBlbnZpcm9ubWVudGFsIGdyb3VwcyB3YXRjaGVkIGNsb3NlbHkuIFRoZSBFUEEncyBleHBlcnRzIGRldGVybWluZWQgdGhhdCB0aGUgbWFuZGF0ZSB3b3VsZCBpbmNyZWFzZSBkZW1hbmQgZm9yIGNvcm4gYW5kIGVuY291cmFnZSBmYXJtZXJzIHRvIHBsb3cgbW9yZSBsYW5kLiBDb25zaWRlcmluZyB0aG9zZSBmYWN0b3JzLCB0aGV5IHNhaWQsIGNvcm4gZXRoYW5vbCB3YXMgb25seSBzbGlnaHRseSBiZXR0ZXIgdGhhbiBnYXNvbGluZSB3aGVuIGl0IGNhbWUgdG8gY2FyYm9uIGRpb3hpZGUgZW1pc3Npb25zLiBTaXh0ZWVuIHBlcmNlbnQgYmV0dGVyLCB0byBiZSBleGFjdC4gQW5kIG5vdCBpbiB0aGUgc2hvcnQgdGVybS4gT25seSBieSAyMDIyLiBCeSBsYXcsIHRob3VnaCwgYmlvZnVlbHMgd2VyZSBzdXBwb3NlZCB0byBiZSBhdCBsZWFzdCAyMCBwZXJjZW50IGdyZWVuZXIgdGhhbiBnYXNvbGluZS4gRnJvbSBhIGxlZ2FsIHN0YW5kcG9pbnQsIHRoZSByZXN1bHRzIGRpZG4ndCBtYXR0ZXIuIENvbmdyZXNzIGV4ZW1wdGVkIGV4aXN0aW5nIGNvYWwtIGFuZCBnYXMtYnVybmluZyBldGhhbm9sIHBsYW50cyBmcm9tIG1lZXRpbmcgdGhpcyBzdGFuZGFyZC4gQnV0IGFzIGEgcG9saWN5IGFuZCBwdWJsaWMgcmVsYXRpb25zIGlzc3VlLCBpdCB3YXMgYSByZWFsIHByb2JsZW0uIFRoZSBiaW9mdWVsLWZyaWVuZGx5IE9iYW1hIGFkbWluaXN0cmF0aW9uIHdhcyB1bmRlcm1pbmluZyB0aGUgaW5kdXN0cnkncyBtYWpvciBzZWxsaW5nIHBvaW50OiB0aGF0IGl0IHdhcyBtdWNoIGdyZWVuZXIgdGhhbiBnYXNvbGluZS4gU28gdGhlIGV0aGFub2wgaW5kdXN0cnkgd2FzIGxpdmlkLiBMb2JieWlzdHMgZmxvb2RlZCB0aGUgRVBBIHdpdGggY3JpdGljaXNtLCBjaGFsbGVuZ2luZyB0aGUgZ292ZXJubWVudCdzIG1ldGhvZHMgYW5kIGNvbmNsdXNpb25zLiBUaGUgRVBBJ3MgY29uY2x1c2lvbiB3YXMgYmFzZWQgb24gYSBtb2RlbC4gUGx1ZyBpbiBzb21lIGFzc3VtZWQgZmlndXJlcyDigJQgdGhlIHByaWNlIG9mIGNvcm4sIHRoZSBudW1iZXIgb2YgYWNyZXMgcGxhbnRlZCwgaG93IG11Y2ggY29ybiB3b3VsZCBncm93IHBlciBhY3JlIOKAlCBhbmQgdGhlIG1vZGVsIHdvdWxkIHNwaXQgb3V0IGEgbnVtYmVyLiBUbyBnZXQgcGFzdCAyMCBwZXJjZW50LCB0aGUgRVBBIG5lZWRlZCB0byBjaGFuZ2UgaXRzIGFzc3VtcHRpb25zLiBUaGUgbW9zdCBpbXBvcnRhbnQgb2YgdGhvc2UgYXNzdW1wdGlvbnMgd2FzIGNhbGxlZCB0aGUgeWllbGQsIGEgbWVhc3VyZSBvZiBob3cgbXVjaCBjb3JuIGNvdWxkIGJlIHByb2R1Y2VkIG9uIGFuIGFjcmUgb2YgbGFuZC4gVGhlIGhpZ2hlciB0aGUgeWllbGQsIHRoZSBlYXNpZXIgaXQgd291bGQgYmUgZm9yIGZhcm1lcnMgdG8gbWVldCB0aGUgZ3Jvd2luZyBkZW1hbmQgd2l0aG91dCBwbG93aW5nIG5ldyBmYXJtbGFuZCwgd2hpY2ggY291bnRlZCBhZ2FpbnN0IGV0aGFub2wgaW4gdGhlIGdyZWVuaG91c2UgZ2FzIGVxdWF0aW9uLiBDb3JuIHlpZWxkcyBoYXZlIGluY2hlZCBzdGVhZGlseSB1cHdhcmQgb3ZlciB0aGUgeWVhcnMgYXMgZmFybXMgaGF2ZSBiZWNvbWUgbW9yZSBlZmZpY2llbnQuIFRoZSBnb3Zlcm5tZW50J3MgZmlyc3QgZXRoYW5vbCBtb2RlbCBhc3N1bWVkIHRoYXQgdHJlbmQgd291bGQgY29udGludWUsIHJpc2luZyBmcm9tIDE1MCBidXNoZWxzIHBlciBhY3JlIHRvIGFib3V0IDE4MCBieSB0aGUgeWVhciAyMDIyLiBBZ3JpY3VsdHVyZSBjb21wYW5pZXMgbGlrZSBNb25zYW50byBDby4gYW5kIER1UG9udCBQaW9uZWVyLCB3aGljaCBzdG9vZCB0byBtYWtlIG1pbGxpb25zIG9mZiBhbiBldGhhbm9sIGJvb20sIHRvbGQgdGhlIGdvdmVybm1lbnQgdGhvc2UgbnVtYmVycyB3ZXJlIHRvbyBsb3cuIFRoZXkgcHJlZGljdGVkIHRoYXQgZ2VuZXRpY2FsbHkgbW9kaWZpZWQgc2VlZHMg4oCUIHdoaWNoIHRoZXkgcHJvZHVjZSDigJQgd291bGQgc2VuZCB5aWVsZHMgc2t5cm9ja2V0aW5nLiBXaXRoIGhpZ2hlciB5aWVsZHMsIGZhcm1lcnMgY291bGQgcHJvZHVjZSBtb3JlIGNvcm4gb24gbGVzcyBsYW5kLCByZWR1Y2luZyB0aGUgZW52aXJvbm1lbnRhbCBlZmZlY3RzLiBEb2N1bWVudHMgc2hvdyB0aGUgV2hpdGUgSG91c2UgYnVkZ2V0IG9mZmljZSBhbHNvIHN1Z2dlc3RlZCB0aGUgRVBBIHJhaXNlIGl0cyB5aWVsZCBhc3N1bXB0aW9ucy4gV2hlbiB0aGUgZmluYWwgcnVsZSBjYW1lIG91dCwgdGhlIEVQQSBhbmQgQWdyaWN1bHR1cmUgb2ZmaWNpYWxzIGFkZGVkIGEgbmV3ICJoaWdoIHlpZWxkIGNhc2Ugc2NlbmFyaW8iIHRoYXQgYXNzdW1lZCAyMzAgYnVzaGVscyBwZXIgYWNyZS4gVGhlIGZsYXcgaW4gdGhvc2UgYXNzdW1wdGlvbnMsIGluZGVwZW5kZW50IHNjaWVudGlzdHMga25ldywgd2FzIHRoYXQgYSBiaWcgaW5jcmVhc2UgaW4gY29ybiBwcmljZXMgd291bGQgZW5jb3VyYWdlIHBlb3BsZSB0byBmYXJtIGluIGxlc3MgaG9zcGl0YWJsZSBhcmVhcyBsaWtlIFdheW5lIENvdW50eSwgd2hpY2ggY291bGQgbmV2ZXIgcHJvZHVjZSBzdWNoIGxhcmdlIHlpZWxkcy4gQnV0IHRoZSBFUEEncyBtb2RlbCBhc3N1bWVkIG9ubHkgYSB0aW55IGluY3JlYXNlIGluIGNvcm4gcHJpY2VzLiAiWW91IGFkanVzdCBhIGZldyBudW1iZXJzIHRvIGdldCBpdCB3aGVyZSB5b3Ugd2FudCBpdCwgYW5kIHRoZW4geW91IGNhbGwgaXQgZ29vZCwiIHNhaWQgQWRhbSBMaXNrYSwgYXNzaXN0YW50IHByb2Zlc3NvciBvZiBiaW9sb2dpY2FsIHN5c3RlbXMgZW5naW5lZXJpbmcgYXQgdGhlIFVuaXZlcnNpdHkgb2YgTmVicmFza2EuIEhlIHN1cHBvcnRzIGV0aGFub2wsIGV2ZW4gd2l0aCBpdHMgZW52aXJvbm1lbnRhbCB0cmFkZS1vZmZzLiBXaGVuIHRoZSBPYmFtYSBhZG1pbmlzdHJhdGlvbiBmaW5hbGl6ZWQgaXRzIGZpcnN0IG1ham9yIGdyZWVuLWVuZXJneSBwb2xpY3ksIGNvcm4gZXRoYW5vbCBiYXJlbHkgY3Jvc3NlZCB0aGUga2V5IHRocmVzaG9sZC4gVGhlIGZpbmFsIHNjb3JlOiAyMSBwZXJjZW50LiAiSWYgeW91IGNvcnJlY3RlZCBhbnkgb2YgYSBudW1iZXIgb2YgdGhpbmdzLCBpdCB3b3VsZCBiZSBvbiB0aGUgb3RoZXIgc2lkZSBvZiAyMCBwZXJjZW50LCIgc2FpZCBSaWNoYXJkIFBsZXZpbiBvZiB0aGUgVHJhbnNwb3J0YXRpb24gU3VzdGFpbmFiaWxpdHkgUmVzZWFyY2ggQ2VudGVyIGF0IHRoZSBVbml2ZXJzaXR5IG9mIENhbGlmb3JuaWEsIEJlcmtlbGV5LiAiSXMgaXQgYSBjb2luY2lkZW5jZSB0aGlzIGlzIHdoYXQgaGFwcGVuZWQ/IEl0IGNlcnRhaW5seSBtYWtlcyBtZSB3b25kZXIuIiBJdCBkaWRuJ3QgdGFrZSBsb25nIGZvciByZWFsaXR5IHRvIHByb3ZlIHRoZSBPYmFtYSBhZG1pbmlzdHJhdGlvbidzIHByZWRpY3Rpb25zIHdyb25nLiBUaGUgcmVndWxhdGlvbnMgdG9vayBlZmZlY3QgaW4gSnVseSAyMDEwLiBUaGUgZm9sbG93aW5nIG1vbnRoLCBjb3JuIHByaWNlcyBhbHJlYWR5IGhhZCBzdXJwYXNzZWQgdGhlIEVQQSdzIGxvbmctdGVybSBlc3RpbWF0ZSBvZiAkMy4yMiBhIGJ1c2hlbC4gVGhhdCBTZXB0ZW1iZXIsIGNvcm4gcGFzc2VkICQ0LCBvbiBpdHMgd2F5IHRvIGFib3V0ICQ3LCB3aGVyZSBpdCBoYXMgYmVlbiBtb3N0IG9mIHRoaXMgeWVhci4gWWllbGRzLCBtZWFud2hpbGUsIGhhdmUgaGVsZCBmYWlybHkgc3RlYWR5LiBCdXQgdGhlIGV0aGFub2wgYm9vbSB3YXMgdW5kZXJ3YXkuIF9fXyBJdCdzIGltcG9zc2libGUgdG8gcHJlY2lzZWx5IGNhbGN1bGF0ZSBob3cgbXVjaCBldGhhbm9sIGlzIHJlc3BvbnNpYmxlIGZvciB0aGUgc3Bpa2UgaW4gY29ybiBwcmljZXMgYW5kIGhvdyBtdWNoIHRob3NlIHByaWNlcyBsZWQgdG8gdGhlIGxhbmQgY2hhbmdlcyBpbiB0aGUgTWlkd2VzdC4gU3VwcG9ydGVycyBvZiBjb3JuIGV0aGFub2wgc2F5IGV4dHJlbWUgd2VhdGhlciDigJQgZHJ5IG9uZSB5ZWFyLCB2ZXJ5IHdldCB0aGUgbmV4dCDigJQgaHVydCBmYXJtZXJzIGFuZCByYWlzZWQgcHJpY2VzLiBCdXQgZGltaW5pc2hpbmcgc3VwcGx5IHdhc24ndCB0aGUgb25seSBmYWN0b3IuIE1vcmUgY29ybiB0aGFuIGV2ZXIgd2FzIGJlaW5nIGRpc3RpbGxlZCBpbnRvIGV0aGFub2wuIEhpc3RvcmljYWxseSwgdGhlIG92ZXJ3aGVsbWluZ2x5IG1ham9yaXR5IG9mIGNvcm4gaW4gdGhlIFVuaXRlZCBTdGF0ZXMgaGFzIGJlZW4gdHVybmVkIGludG8gbGl2ZXN0b2NrIGZlZWQuIEJ1dCBpbiAyMDEwLCBmb3IgdGhlIGZpcnN0IHRpbWUsIGZ1ZWwgd2FzIHRoZSBOby4gMSB1c2UgZm9yIGNvcm4gaW4gQW1lcmljYS4gVGhhdCB3YXMgdHJ1ZSBpbiAyMDExIGFuZCAyMDEyLiBOZXdseSByZWxlYXNlZCBEZXBhcnRtZW50IG9mIEFncmljdWx0dXJlIGRhdGEgc2hvdyB0aGF0LCB0aGlzIHllYXIsIDQzIHBlcmNlbnQgb2YgY29ybiB3ZW50IHRvIGZ1ZWwgYW5kIDQ1IHBlcmNlbnQgd2VudCB0byBsaXZlc3RvY2sgZmVlZC4gVGhlIG1vcmUgY29ybiB0aGF0IGdvZXMgdG8gZXRoYW5vbCwgdGhlIG1vcmUgdGhhdCBuZWVkcyB0byBiZSBwbGFudGVkIHRvIG1lZXQgb3RoZXIgZGVtYW5kcy4gU2NpZW50aXN0cyBwcmVkaWN0ZWQgdGhhdCBhIG1ham9yIGV0aGFub2wgcHVzaCB3b3VsZCByYWlzZSBwcmljZXMgYW5kLCBpbiB0dXJuLCBlbmNvdXJhZ2UgZmFybWVycyBsaWtlIExlcm95IFBlcmtpbnMgdG8gcGxvdyBpbnRvIGNvbnNlcnZhdGlvbiBsYW5kLiBCdXQgdGhlIGdvdmVybm1lbnQgaW5zaXN0ZWQgb3RoZXJ3aXNlLiBJbiAyMDA4LCB0aGUgam91cm5hbCBTY2llbmNlIHB1Ymxpc2hlZCBhIHN0dWR5IHdpdGggYSBkaXJlIGNvbmNsdXNpb246IFBsb3dpbmcgb3ZlciBjb25zZXJ2YXRpb24gbGFuZCByZWxlYXNlcyBzbyBtdWNoIGdyZWVuaG91c2UgZ2FzIHRoYXQgaXQgdGFrZXMgNDggeWVhcnMgYmVmb3JlIG5ldyBwbGFudHMgY2FuIGJyZWFrIGV2ZW4gYW5kIHN0YXJ0IHJlZHVjaW5nIGNhcmJvbiBkaW94aWRlLiBGb3IgYW4gZXRoYW5vbCBwb2xpY3kgdG8gd29yaywgdGhlIHN0dWR5IHNhaWQsIGZhcm1lcnMgY291bGQgbm90IHBsb3cgaW50byBjb25zZXJ2YXRpb24gbGFuZC4gVGhlIEVQQSwgaW4gYSByZXBvcnQgdG8gQ29uZ3Jlc3Mgb24gdGhlIGVudmlyb25tZW50YWwgZWZmZWN0cyBvZiBldGhhbm9sLCBzYWlkIGl0IHdhcyAidW5jZXJ0YWluIiB3aGV0aGVyIGZhcm1lcnMgd291bGQgcGxhbnQgb24gZmFybWxhbmQgdGhhdCBoYWQgYmVlbiBzZXQgYXNpZGUgZm9yIGNvbnNlcnZhdGlvbi4gVGhlIERlcGFydG1lbnQgb2YgRW5lcmd5IHdhcyBtb3JlIGNlcnRhaW4uIE1vc3QgY29uc2VydmF0aW9uIGxhbmQsIHRoZSBnb3Zlcm5tZW50IHNhaWQgaW4gaXRzIHJlc3BvbnNlIHRvIHRoZSBzdHVkeSwgImlzIHVuc3VpdGFibGUgZm9yIHVzZSBmb3IgYW5udWFsIHJvdyBjcm9wIHByb2R1Y3Rpb24uIiBBbWVyaWNhIGNvdWxkIG1lZXQgaXRzIGV0aGFub2wgZGVtYW5kIHdpdGhvdXQgbG9zaW5nIGEgc2luZ2xlIGFjcmUgb2YgY29uc2VydmF0aW9uIGxhbmQsIEVuZXJneSBvZmZpY2lhbHMgc2FpZC4gVGhleSB3b3VsZCBzb29uIGJlIHByb3ZlbiB3cm9uZy4gQmVmb3JlIHRoZSBnb3Zlcm5tZW50IGV0aGFub2wgbWFuZGF0ZSwgdGhlIENvbnNlcnZhdGlvbiBSZXNlcnZlIFByb2dyYW0gZ3JldyBldmVyeSB5ZWFyIGZvciBuZWFybHkgYSBkZWNhZGUuIEFsbW9zdCBvdmVybmlnaHQsIGZhcm1lcnMgYmVnYW4gbGVhdmluZyB0aGUgcHJvZ3JhbSwgd2hpY2ggc2ltdWx0YW5lb3VzbHkgZmVsbCB2aWN0aW0gdG8gYnVkZ2V0IGN1dHMgdGhhdCByZWR1Y2VkIHRoZSBhbW91bnQgb2YgZmFybWxhbmQgdGhhdCBjb3VsZCBiZSBzZXQgYXNpZGUgZm9yIGNvbnNlcnZhdGlvbi4gSW4gdGhlIGZpcnN0IHllYXIgYWZ0ZXIgdGhlIGV0aGFub2wgbWFuZGF0ZSwgbW9yZSB0aGFuIDIgbWlsbGlvbiBhY3JlcyBkaXNhcHBlYXJlZC4gU2luY2UgT2JhbWEgdG9vayBvZmZpY2UsIDUgbWlsbGlvbiBtb3JlIGFjcmVzIGhhdmUgdmFuaXNoZWQuIEFncmljdWx0dXJlIG9mZmljaWFscyBhY2tub3dsZWRnZSB0aGF0IGNvbnNlcnZhdGlvbiBsYW5kIGhhcyBiZWVuIGxvc3QsIGJ1dCB0aGV5IHNheSB0aGUgdHJlbmQgaXMgcmV2ZXJzaW5nLiBXaGVuIHRoZSAyMDEzIGRhdGEgY29tZXMgb3V0LCB0aGV5IHNheSBpdCB3aWxsIHNob3cgdGhhdCBhcyBjb3JuIHByaWNlcyBzdGFiaWxpemVkLCBmYXJtZXJzIG9uY2UgYWdhaW4gYmVnYW4gc2V0dGluZyBhc2lkZSBsYW5kIGZvciBjb25zZXJ2YXRpb24uIF9fXyBMb3NpbmcgY29uc2VydmF0aW9uIGxhbmQgd2FzIGJhZC4gQnV0IHNvbWV0aGluZyBldmVuIHdvcnNlIHdhcyBoYXBwZW5pbmcuIEZhcm1lcnMgYnJva2UgZ3JvdW5kIG9uIHZpcmdpbiBsYW5kLCB0aGUgdW50b3VjaGVkIHRlcnJhaW4gdGhhdCByZXByZXNlbnRzLCBmcm9tIGFuIGVudmlyb25tZW50YWwgc3RhbmRwb2ludCwgdGhlIGNvdW50cnkncyBtb3N0IGltcG9ydGFudCBhc3NldC4gVGhlIGZhcm0gaW5kdXN0cnkgYXNzdXJlZCB0aGUgZ292ZXJubWVudCB0aGF0IHdvdWxkbid0IGhhcHBlbi4gQW5kIGl0IHdvdWxkIGhhdmUgYmVlbiBhbiBlYXN5IHRoaW5nIGZvciBXYXNoaW5ndG9uIHRvIGNoZWNrLiBCdXQgcmF0aGVyIHRoYW4gaW5zaXN0aW5nIHRoYXQgZmFybWVycyByZXBvcnQgd2hlbmV2ZXIgdGhleSBwbG93IGludG8gdmlyZ2luIGxhbmQsIHRoZSBnb3Zlcm5tZW50IGRlY2lkZWQgb24gYSBtdWNoIG11cmtpZXIgb3ZlcnNpZ2h0IG1ldGhvZDogV2FzaGluZ3RvbiBpbnN0ZWFkIG1vbml0b3JzIHRoZSB0b3RhbCBudW1iZXIgb2YgYWNyZXMgb2YgY3JvcGxhbmQgbmF0aW9ud2lkZS4gTG9jYWwgdHJlbmRzIHdhc2ggYXdheSB3aGVuIHZpZXdlZCBhdCBzdWNoIGEgZGlzdGFuY2UuICJUaGV5IGNvdWxkIG5vdCBoYXZlIGRlc2lnbmVkIGEgYmV0dGVyIGFwcHJvYWNoIHRvIG5vdCBkZXRlY3QgbGFuZCBjb252ZXJzaW9uLCIgc2FpZCBCZW4gTGFyc29uLCBhbiBhZ3JpY3VsdHVyYWwgZXhwZXJ0IGZvciB0aGUgTmF0aW9uYWwgV2lsZGxpZmUgRmVkZXJhdGlvbi4gTG9vayBjbG9zZWx5IGF0IHRoZSBjb3JuIGJvb20gaW4gdGhlIG5vcnRoZXJuIEdyZWF0IFBsYWlucywgaG93ZXZlciwgYW5kIGl0J3MgY2xlYXIuIEZhcm1lcnMgYXJlIGNvbnZlcnRpbmcgdW50b3VjaGVkIHByYWlyaWUgaW50byBmYXJtbGFuZC4gVGhlIERlcGFydG1lbnQgb2YgQWdyaWN1bHR1cmUgYmVnYW4ga2VlcGluZyBmaWd1cmVzIG9uIHZpcmdpbiBsYW5kIG9ubHkgaW4gMjAxMiBhbmQgZGV0ZXJtaW5lZCB0aGF0IGFib3V0IDM4LDAwMCBhY3JlcyB2YW5pc2hlZCB0aGF0IHllYXIuIEJ1dCB1c2luZyBnb3Zlcm5tZW50IHNhdGVsbGl0ZSBkYXRhIOKAlCB0aGUgYmVzdCB0b29sIGF2YWlsYWJsZSDigJQgdGhlIEFQIGlkZW50aWZpZWQgYSBjb25zZXJ2YXRpdmUgZXN0aW1hdGUgb2YgMS4yIG1pbGxpb24gYWNyZXMgb2YgdmlyZ2luIGxhbmQgaW4gTmVicmFza2EgYW5kIHRoZSBEYWtvdGFzIGFsb25lIHRoYXQgaGF2ZSBiZWVuIGNvbnZlcnRlZCB0byBmaWVsZHMgb2YgY29ybiBhbmQgc295YmVhbnMgc2luY2UgMjAwNiwgdGhlIGxhc3QgeWVhciBiZWZvcmUgdGhlIGV0aGFub2wgbWFuZGF0ZSB3YXMgcGFzc2VkLiAiVGhlIGxhc3QgZml2ZSB5ZWFycywgd2UndmUgYmVjb21lIGZpbmFuY2lhbGx5IHNvbHZlbnQsIiBzYWlkIFJvYmVydCBNYWxzYW0sIGEgZmFybWVyIGluIEVkbXVuZHMgQ291bnR5LCBTLkQuLCB3aG8gbGlrZSBvdGhlcnMgaW4gdGhlIGNlbnRyYWwgYW5kIGVhc3Rlcm4gRGFrb3RhcyBoYXMgcGxvd2VkIGludG8gd2lsZCBncmFzc2xhbmQgdG8gZXhwYW5kIGhpcyBjb3JuIGNyb3AuIFRoZSBwcmljZSBvZiBjb3JuIGlzIHJlc2hhcGluZyB0aGUgbGFuZCBhY3Jvc3MgdGhlIE1pZHdlc3QuIEluIFdheW5lIENvdW50eSwgSW93YSwgZm9yIGV4YW1wbGUsIG9ubHkgdGhlIGRlYWQgY2FuIHN0b3AgdGhlIGNvcm4uIEEgZ3JhdmVsIHJvYWQgb25jZSBjdXQgdGhyb3VnaCBhIGdyYXNzeSBmaWVsZCBsZWFkaW5nIHRvIGEgaGlsbHRvcCBjZW1ldGVyeS4gQnV0IGFib3V0IHR3byB5ZWFycyBhZ28sIHRoZSBsYW5kb3duZXJzIHBsb3dlZCBvdmVyIHRoZSByb2FkLiBOb3csIHZpc2l0aW5nIGdyYXZlc2l0ZXMgbWVhbnMgd2Fsa2luZyBhIG5hcnJvdyBwYXRoIHRocm91Z2ggdGhlIGNvcm4uIFBlb3BsZSBoYXZlIGNvbXBsYWluZWQuIEl0J3MgdG9vIG5hcnJvdyBmb3IgYSBoZWFyc2UsIHRvbyBydXR0ZWQgZm9yIGEgd2hlZWxjaGFpciwgdG9vIHN0ZWVwIGZvciB0aGUgZWxkZXJseS4gQnV0IGl0J3MgbGVnYWwsIHNhaWQgQmlsbCBBbGxleSBmcm9tIHRoZSBib2FyZCBvZiBzdXBlcnZpc29ycy4gIlRoaXMgaXMgd2hhdCB0aGUgcHJpY2Ugb2YgY29ybiBkb2VzLCIgaGUgc2FpZC4gIlRoaXMgaXMgd2hhdCBoYXBwZW5zLCByaWdodCBoZXJlLiIgX19fIFdoZW4gQ29uZ3Jlc3MgcGFzc2VkIHRoZSBldGhhbm9sIG1hbmRhdGUsIGl0IHJlcXVpcmVkIHRoZSBFUEEgdG8gdGhvcm91Z2hseSBzdHVkeSB0aGUgZWZmZWN0cyBvbiB3YXRlciBhbmQgYWlyIHBvbGx1dGlvbi4gSW4gaGlzIHJlY2VudCBzcGVlY2ggdG8gZXRoYW5vbCBsb2JieWlzdHMsIFZpbHNhY2sgd2FzIHVuZXF1aXZvY2FsIGFib3V0IHRob3NlIGVmZmVjdHM6ICJUaGVyZSBpcyBubyBxdWVzdGlvbiBhaXIgcXVhbGl0eSwgd2F0ZXIgcXVhbGl0eSBpcyBiZW5lZml0aW5nIGZyb20gdGhpcyBpbmR1c3RyeSwiIGhlIHNhaWQuIEJ1dCB0aGUgYWRtaW5pc3RyYXRpb24gbmV2ZXIgYWN0dWFsbHkgY29uZHVjdGVkIHRoZSByZXF1aXJlZCBhaXIgYW5kIHdhdGVyIHN0dWRpZXMgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgdGhhdCdzIHRydWUuIEluIGFuIGludGVydmlldyB3aXRoIHRoZSBBUCBhZnRlciBoaXMgc3BlZWNoLCBWaWxzYWNrIHNhaWQgaGUgZGlkbid0IG1lYW4gdGhhdCBldGhhbm9sIHByb2R1Y3Rpb24gd2FzIGdvb2QgZm9yIHRoZSBhaXIgYW5kIHdhdGVyLiBIZSBzaW1wbHkgbWVhbnQgdGhhdCBnYXNvbGluZSBtaXhlZCB3aXRoIGV0aGFub2wgaXMgY2xlYW5lciB0aGFuIGdhc29saW5lIGFsb25lLiBJbiB0aGUgTWlkd2VzdCwgbWVhbndoaWxlLCBzY2llbnRpc3RzIGFuZCBjb25zZXJ2YXRpb25pc3RzIGFyZSBzb3VuZGluZyBhbGFybXMuIE5pdHJvZ2VuIGZlcnRpbGl6ZXIsIHdoZW4gaXQgc2VlcHMgaW50byB0aGUgd2F0ZXIsIGlzIHRveGljLiBDaGlsZHJlbiBhcmUgZXNwZWNpYWxseSBzdXNjZXB0aWJsZSB0byBuaXRyYXRlIHBvaXNvbmluZywgd2hpY2ggY2F1c2VzICJibHVlIGJhYnkiIHN5bmRyb21lIGFuZCBjYW4gYmUgZGVhZGx5LiBCZXR3ZWVuIDIwMDUgYW5kIDIwMTAsIGNvcm4gZmFybWVycyBpbmNyZWFzZWQgdGhlaXIgdXNlIG9mIG5pdHJvZ2VuIGZlcnRpbGl6ZXIgYnkgbW9yZSB0aGFuIG9uZSBiaWxsaW9uIHBvdW5kcy4gTW9yZSByZWNlbnQgZGF0YSBpc24ndCBhdmFpbGFibGUgZnJvbSB0aGUgQWdyaWN1bHR1cmUgRGVwYXJ0bWVudCwgYnV0IGJlY2F1c2Ugb2YgdGhlIGh1Z2UgaW5jcmVhc2UgaW4gY29ybiBwbGFudGluZywgZXZlbiBjb25zZXJ2YXRpdmUgcHJvamVjdGlvbnMgYnkgdGhlIEFQIHN1Z2dlc3QgYW5vdGhlciBiaWxsaW9uLXBvdW5kIGZlcnRpbGl6ZXIgaW5jcmVhc2Ugb24gY29ybiBmYXJtcyBzaW5jZSB0aGVuLiBEZXBhcnRtZW50IG9mIEFncmljdWx0dXJlIG9mZmljaWFscyBub3RlIHRoYXQgdGhlIGFtb3VudCBvZiBmZXJ0aWxpemVyIHVzZWQgZm9yIGFsbCBjcm9wcyBoYXMgcmVtYWluZWQgc3RlYWR5IGZvciBhIGRlY2FkZSwgc3VnZ2VzdGluZyB0aGUgZXRoYW5vbCBtYW5kYXRlIGhhc24ndCBjYXVzZWQgYSBmZXJ0aWxpemVyIGJvb20gYWNyb3NzIHRoZSBib2FyZC4gQnV0IGluIHRoZSBNaWR3ZXN0LCBjb3JuIGlzIHRoZSBkb21pbmFudCBjcm9wLCBhbmQgb2ZmaWNpYWxzIHNheSB0aGUgaW5jcmVhc2UgaW4gZmVydGlsaXplciB1c2Ug4oCUIGRyaXZlbiBieSB0aGUgaW5jcmVhc2UgaW4gY29ybiBwbGFudGluZyDigJQgaXMgaGF2aW5nIGFuIGVmZmVjdC4gVGhlIERlcyBNb2luZXMgV2F0ZXIgV29ya3MsIGZvciBpbnN0YW5jZSwgaGFzIGZhY2VkIGhpZ2ggbml0cmF0ZSBsZXZlbHMgZm9yIG1hbnkgeWVhcnMgaW4gdGhlIERlcyBNb2luZXMgYW5kIFJhY2Nvb24gUml2ZXJzLCB3aGljaCBzdXBwbHkgZHJpbmtpbmcgd2F0ZXIgdG8gNTAwLDAwMCBwZW9wbGUuIFR5cGljYWxseSwgd2hlbiBwb2xsdXRpb24gaXMgdG9vIGhpZ2ggaW4gb25lIHJpdmVyLCB3b3JrZXJzIGRyYXcgZnJvbSB0aGUgb3RoZXIuICJUaGlzIHllYXIsIHVuZm9ydHVuYXRlbHkgdGhlIG5pdHJhdGUgbGV2ZWxzIGluIGJvdGggcml2ZXJzIHdlcmUgc28gaGlnaCB0aGF0IGl0IGNyZWF0ZWQgYW4gaW1wb3NzaWJpbGl0eSBmb3IgdXMsIiBzYWlkIEJpbGwgU3Rvd2UsIHRoZSB3YXRlciBzZXJ2aWNlJ3MgZ2VuZXJhbCBtYW5hZ2VyLiBGb3IgdGhyZWUgbW9udGhzIHRoaXMgc3VtbWVyLCB3b3JrZXJzIGtlcHQgaHVnZSBtYWNoaW5lcyBydW5uaW5nIGFyb3VuZCB0aGUgY2xvY2sgdG8gY2xlYW4gdGhlIHdhdGVyLiBPZmZpY2lhbHMgYXNrZWQgY3VzdG9tZXJzIHRvIHVzZSBsZXNzIHdhdGVyIHNvIHRoZSB1dGlsaXR5IGhhZCBhIGNoYW5jZSB0byBrZWVwIHVwLiBQYXJ0IG9mIHRoZSBwcm9ibGVtIHdhcyB0aGF0IGxhc3QgeWVhcidzIGRyeSB3ZWF0aGVyIG1lYW50IGZlcnRpbGl6ZXIgc2F0IGF0b3AgdGhlIHNvaWwuIFRoaXMgc3ByaW5nJ3MgcmFpbnMgZmx1c2hlZCB0aGF0IG5pdHJvZ2VuIGludG8gdGhlIHdhdGVyIGFsb25nIHdpdGggdGhlIHJlbW5hbnRzIG9mIHRoZSBmZXJ0aWxpemVyIGZyb20gdGhlIG1vc3QgcmVjZW50IGNyb3AuIEF0IHRoZSBzYW1lIHRpbWUgdGhlIGV0aGFub2wgbWFuZGF0ZSBoYXMgZW5jb3VyYWdlZCBmYXJtZXJzIHRvIHBsYW50IG1vcmUgY29ybiwgU3Rvd2Ugc2FpZCwgdGhlIGdvdmVybm1lbnQgaGFzbid0IGRvbmUgZW5vdWdoIHRvIGxpbWl0IGZlcnRpbGl6ZXIgdXNlIG9yIHJlZ3VsYXRlIHRoZSBpbmR1c3RyaWFsIGRyYWluYWdlIHN5c3RlbXMgdGhhdCBmbHVzaCBuaXRyYXRlcyBhbmQgd2F0ZXIgaW50byByaXZlcnMgYW5kIHN0cmVhbXMuIFdpdGggdGhlIFdhdGVyIFdvcmtzIG9uIHRoZSBicmluayBvZiBjYXBhY2l0eSwgU3Rvd2Ugc2FpZCBoZSdzIGNvbnNpZGVyaW5nIHN1aW5nIHRoZSBnb3Zlcm5tZW50IHRvIGRlbWFuZCBhIHNvbHV0aW9uLiBJbiBuZWlnaGJvcmluZyBNaW5uZXNvdGEsIGEgZ292ZXJubWVudCByZXBvcnQgdGhpcyB5ZWFyIGZvdW5kIHRoYXQgc2lnbmlmaWNhbnRseSByZWR1Y2luZyB0aGUgaGlnaCBsZXZlbHMgb2Ygbml0cmF0ZXMgZnJvbSB0aGUgc3RhdGUncyB3YXRlciB3b3VsZCByZXF1aXJlIGh1Z2UgY2hhbmdlcyBpbiBmYXJtaW5nIHByYWN0aWNlcyBhdCBhIGNvc3Qgb2Ygcm91Z2hseSAkMSBiaWxsaW9uIGEgeWVhci4gIldlJ3JlIGRvaW5nIG1vcmUgdG8gYWRkcmVzcyB3YXRlciBxdWFsaXR5LCBidXQgd2UgYXJlIGJlaW5nIG92ZXJ3aGVsbWVkIGJ5IHRoZSBpbmNyZWFzZSBpbiBwcm9kdWN0aW9uIHByZXNzdXJlIHRvIHBsYW50IG1vcmUgY3JvcHMsIiBzYWlkIFN0ZXZlIE1vcnNlLCBleGVjdXRpdmUgZGlyZWN0b3Igb2YgdGhlIE1pbm5lc290YSBFbnZpcm9ubWVudGFsIFBhcnRuZXJzaGlwLiBUaGUgbml0cmF0ZXMgdHJhdmVsIGRvd24gcml2ZXJzIGFuZCBpbnRvIHRoZSBHdWxmIG9mIE1leGljbywgd2hlcmUgdGhleSBib29zdCB0aGUgZ3Jvd3RoIG9mIGVub3Jtb3VzIGFsZ2FlIGZpZWxkcy4gV2hlbiB0aGUgYWxnYWUgZGllLCB0aGUgZGVjb21wb3NpdGlvbiBjb25zdW1lcyBveHlnZW4sIGxlYXZpbmcgYmVoaW5kIGEgem9uZSB3aGVyZSBhcXVhdGljIGxpZmUgY2Fubm90IHN1cnZpdmUuIFRoaXMgeWVhciwgdGhlIGRlYWQgem9uZSBjb3ZlcmVkIDUsODAwIHNxdWFyZSBtaWxlcyBvZiBzZWEgZmxvb3IsIGFib3V0IHRoZSBzaXplIG9mIENvbm5lY3RpY3V0LiBMYXJyeSBNY0tpbm5leSwgdGhlIGV4ZWN1dGl2ZSBkaXJlY3RvciBvZiB0aGUgSGFydGUgSW5zdGl0dXRlIGF0IFRleGFzIEEmTSBVbml2ZXJzaXR5LUNvcnB1cyBDaHJpc3RpLCBzYXlzIHRoZSBldGhhbm9sIG1hbmRhdGUgd29yc2VuZWQgdGhlIGRlYWQgem9uZS4gIk9uIHRoZSBvbmUgaGFuZCwgdGhlIGdvdmVybm1lbnQgaXMgbWFuZGF0aW5nIGV0aGFub2wgdXNlLCIgaGUgc2FpZCwgImFuZCBpdCBpcyB1bmZvcnR1bmF0ZWx5IGNvbWluZyBhdCB0aGUgZXhwZW5zZSBvZiB0aGUgR3VsZiBvZiBNZXhpY28uIiBUaGUgZGVhZCB6b25lIGlzIG9uZSBleGFtcGxlIGFtb25nIG1hbnkgb2YgYSBwZWN1bGlhciBldGhhbm9sIHNpZGUgZWZmZWN0OiBBcyBvbmUgZ292ZXJubWVudCBwcm9ncmFtIGVuY291cmFnZXMgZmFybWVycyB0byBwbGFudCBtb3JlIGNvcm4sIG90aGVyIHByb2dyYW1zIHBheSBtaWxsaW9ucyB0byBjbGVhbiB1cCB0aGUgbWVzcy4gX19fIE9iYW1hIGFkbWluaXN0cmF0aW9uIG9mZmljaWFscyBrbm93IHRoZSBldGhhbm9sIG1hbmRhdGUgaGFzbid0IGxpdmVkIHVwIHRvIGl0cyBiaWxsaW5nLiBUaGUgbmV4dC1nZW5lcmF0aW9uIGJpb2Z1ZWxzIHRoYXQgd2VyZSBzdXBwb3NlZCB0byB3ZWFuIHRoZSBjb3VudHJ5IG9mZiBjb3JuIGhhdmVuJ3QgeWV0IG1hdGVyaWFsaXplZC4gRXZlcnkgeWVhciwgdGhlIEVQQSBwcmVkaWN0cyBtaWxsaW9ucyBvZiBnYWxsb25zIG9mIGNsZWFuIGZ1ZWwgd2lsbCBiZSBtYWRlIGZyb20gYWdyaWN1bHR1cmFsIHdhc3RlLiBFdmVyeSB5ZWFyLCB0aGUgZ292ZXJubWVudCBpcyB3cm9uZy4gRXZlcnkgZGF5IHdpdGhvdXQgdGhvc2UgY2xlYW5lci1idXJuaW5nIGZ1ZWxzLCB0aGUgZXRoYW5vbCBpbmR1c3RyeSBzdGF5cyByZWxpYW50IG9uIGNvcm4gYW5kIHRoZSBlbnZpcm9ubWVudGFsIGVmZmVjdHMgbW91bnQuIFRoZSBFUEEgY291bGQgcmV2aXNpdCBpdHMgbW9kZWwgYW5kIHNlZSB3aGV0aGVyIGV0aGFub2wgaXMgYWN0dWFsbHkgYXMgZ29vZCBmb3IgdGhlIGVudmlyb25tZW50IGFzIG9mZmljaWFscyBwcmVkaWN0ZWQuIEJ1dCB0aGUgYWdlbmN5IHNheXMgaXQgZG9lc24ndCBoYXZlIHRoZSBtb25leSBvciB0aGUgbWFucG93ZXIuIEV2ZW4gdW5kZXIgdGhlIGdvdmVybm1lbnQncyBvcHRpbWlzdGljIHByb2plY3Rpb25zLCB0aGUgZXRoYW5vbCBtYW5kYXRlIHdhc24ndCBnb2luZyB0byByZWR1Y2UgZ3JlZW5ob3VzZSBnYXMgcmlnaHQgYXdheS4gQW5kIHdpdGggdGhlIG1vZGVsIHNvIGZhciBvZmYgZnJvbSByZWFsaXR5LCBpbmRlcGVuZGVudCBzY2llbnRpc3RzIHNheSBpdCdzIGhhcmQgdG8gbWFrZSBhbiBhcmd1bWVudCBmb3IgZXRoYW5vbCBhcyBhIGdsb2JhbCB3YXJtaW5nIHBvbGljeS4gIkknZCBoYXZlIHRvIHRoaW5rIHJlYWxseSBoYXJkIHRvIGNvbWUgdXAgd2l0aCBhIHNjZW5hcmlvIHdoZXJlIGl0J3MgYSBuZXQgcG9zaXRpdmUsIiBzYWlkIFNpbHZpYSBTZWNjaGksIGEgU291dGhlcm4gSWxsaW5vaXMgVW5pdmVyc2l0eSBhZ3JpY3VsdHVyZSBlY29ub21pc3QuIFNoZSBwYXVzZWQgYSBmZXcgbW9tZW50cywgdGhlbiBhZGRlZCwgIkknbSBzdHVtcGVkLiIgSW4gSnVuZSwgd2hlbiBPYmFtYSBnYXZlIGEgbWFqb3IgcG9saWN5IHNwZWVjaCBvbiByZWR1Y2luZyBncmVlbmhvdXNlIGdhcywgaGUgZGlkbid0IG1lbnRpb24gZXRoYW5vbC4gQmlvZnVlbHMgaW4gZ2VuZXJhbCByZWNlaXZlZCBhIGJyaWVmLCBwYXNzaW5nIHJlZmVyZW5jZS4gV2hhdCB3YXMgb25jZSBiaWxsZWQgYXMgYW4gZW52aXJvbm1lbnRhbCBib29uIGhhcyBtb3JwaGVkIGludG8gYSBnb3Zlcm5tZW50IHByb2dyYW0gdG8gaGVscCBydXJhbCBBbWVyaWNhIHN1cnZpdmUuICJJIGRvbid0IGtub3cgd2hldGhlciBJIGNhbiBtYWtlIHRoZSBlbnZpcm9ubWVudGFsIGFyZ3VtZW50LCBvciB0aGUgZWNvbm9taWMgYXJndW1lbnQsIiBWaWxzYWNrIHNhaWQgaW4gYW4gaW50ZXJ2aWV3IHdpdGggdGhlIEFQLiAiVG8gbWUsIGl0J3MgYW4gb3Bwb3J0dW5pdHkgYXJndW1lbnQuIiBDb25ncmVzcyBhbmQgdGhlIGFkbWluaXN0cmF0aW9uIGNvdWxkIGNoYW5nZSB0aGUgZXRoYW5vbCBtYW5kYXRlLCB0d2VhayBpdHMgZ29hbHMgb3IgZGVtYW5kIG1vcmUgc2FmZWd1YXJkcy4gR29pbmcgdG8gQ29uZ3Jlc3MgYW5kIHJld3JpdGluZyB0aGUgbGF3IHdvdWxkIG1lYW4gcGlja2luZyBhIGZpZ2h0IHdpdGggYWdyaWN1bHR1cmFsIGxvYmJ5aXN0cywgYSBmaWdodCB0aGF0IHdvdWxkIHB1dCB0aGUgYWRtaW5pc3RyYXRpb24gb24gdGhlIHNpZGUgb2YgYmlnIG9pbCBjb21wYW5pZXMsIHdoaWNoIGRlc3Bpc2UgdGhlIGV0aGFub2wgcmVxdWlyZW1lbnQuIFNvIHRoZSBldGhhbm9sIHBvbGljeSBjcnVpc2VzIG9uIGF1dG9waWxvdC4gQm9iIERpbm5lZW4sIHByZXNpZGVudCBvZiB0aGUgUmVuZXdhYmxlIEZ1ZWxzIEFzc29jaWF0aW9uLCB0aGUgZXRoYW5vbCBsb2JieWluZyBncm91cCwgc2FpZCB0aGVyZSdzIG5vIHJlYXNvbiB0byBjaGFuZ2UgdGhlIHN0YW5kYXJkcy4gRXRoYW5vbCBzdGlsbCBsb29rcyBnb29kIGNvbXBhcmVkIHRvIHRoZSBvaWwgaW5kdXN0cnksIHdoaWNoIGluY3JlYXNpbmdseSByZWxpZXMgb24gZW52aXJvbm1lbnRhbGx5IHJpc2t5IHRhY3RpY3MgbGlrZSBoeWRyYXVsaWMgZnJhY3R1cmluZyBvciBwdWxscyBmcm9tIGNhcmJvbi1oZWF2eSB0YXIgc2FuZHMuIExlcm95IFBlcmtpbnMsIHRoZSBmYXJtZXIgYWdvbml6aW5nIGFib3V0IHdoYXQgdG8gZG8gd2l0aCBoaXMgOTEgYWNyZXMsIHNheXMgaGUgbGlrZXMgZXRoYW5vbCBhcyBhIHByb2R1Y3QgYW5kIGFuIGluZHVzdHJ5LiBCdXQgaGUga25vd3MgaXQgZnVlbHMgdGhlIGNvcm4gcHJpY2VzIHRoYXQgYXJlIHRyYW5zZm9ybWluZyBoaXMgY291bnR5LiAiSWYgdGhleSBkbyBjaGFuZ2UgdGhlIGZ1ZWwgc3RhbmRhcmQsIHlvdSdsbCBzZWUgdGhlIHByaWNlIG9mIGNvcm4gY29tZSBkb3duIG92ZXJuaWdodCwiIGhlIHNhaWQuICJJIGxpa2UgdG8gc2VlIGEgZ29vZCBwcmljZSBmb3IgY29ybi4gQnV0IHdoZW4gaXQncyB0b28gaGlnaCwgaXQgaHVydHMgZXZlcnlib2R5LiIgSW52ZXN0b3JzIGZyb20gYXMgZmFyIGF3YXkgYXMgTWFyeWxhbmQgYW5kIFBlbm5zeWx2YW5pYSBoYXZlIGJvdWdodCB0aG91c2FuZHMgb2YgYWNyZXMgaW4gV2F5bmUgQ291bnR5LCBzZW5kaW5nIHByaWNlcyBza3lyb2NrZXRpbmcgZnJvbSAkMzUwIHBlciBhY3JlIGEgZGVjYWRlIGFnbyB0byAkNSwwMDAgdG9kYXkuIE9uZSBpbiBldmVyeSBmb3VyIGFjcmVzIG9mIGluIHRoZSBjb3VudHkgaXMgbm93IG93bmVkIGJ5IGFuIG91dC1vZi10b3duZXIuIFRob3NlIHdobyBzdGlsbCBvd24gbGFuZCBvZnRlbiByZW50IGl0IHRvIGZhcm1pbmcgY29tcGFuaWVzIG9mZmVyaW5nICQzMDAgb3IgbW9yZSBwZXIgYWNyZS4gUGVya2lucyBjb3VsZCBtYWtlIHBlcmhhcHMgJDI3LDAwMCBhIHllYXIgaWYgaGUgbGV0IHNvbWVib2R5IHBsYW50IGNvcm4gb24gaGlzIGxhbmQuIFRoYXQncyBub3RoaW5nIHRvIGRpc21pc3MgaW4gYSBjb3VudHkgd2hlcmUgdHlwaWNhbCBob3VzZWhvbGQgaW5jb21lIGlzICQzNiwwMDAuIEJ1dCBoZSBrbm93cyB3aGF0IHRoYXQgbWVhbnMuIEhlIHNlZXMgdGhlIGJsYWNrIHN0cmVha3MgaW4gaGlzIG5laWdoYm9yJ3MgY29ybmZpZWxkcywga25vd2luZyB0aGUgdG9wc29pbCB3YXNoZXMgYXdheSB3aXRoIGV2ZXJ5IHJhaW4uIEhlIGRvZXNuJ3Qgd2FudCB0aGF0IGZvciBoaXMgZmFtaWx5J3MgbGFuZC4gIllvdSBoYXZlIHRvIGRlY2lkZSwgZG8geW91IHdhbnQgdG8gYmUgdGhlIG9uZSB0by4uLiIgSGUgZG9lc24ndCBmaW5pc2ggaGlzIHNlbnRlbmNlLiAiV2UgYWxsIGhhdmUgdG8gbG9vayBhdCBvdXIgcG9ja2V0Ym9va3MuIgoKRWRpdG9y4oCZcyBOb3RlOiAgIE9iYW1hIERvbm9yIEJhbm5lZCBUaGlzIE1lc3NhZ2UgKFNob2NraW5nKQ==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJK5SMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI3MTcyMzgzMzAxZTY3Yjg=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZBUk0=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJQC38AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyI9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABp3A==</field><field name="id" class="java.lang.String">rO0ABXQAEGIxNzhiNTk3MDYyZjcwYTE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGoqAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDMxOTg=</field><field name="title" class="java.lang.String">rO0ABXQAOUVtZXJnaW5nLU1hcmtldCBJbnZlc3RvcnMgR2V0IFBpY2t5IFdpdGggRmVkIFNldCB0byBUYXBlcg==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUELY+yAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI4Mzk0ZDdmMzY4ZThmMWQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lDQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEQikiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwZmZmZmZm</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwbhR64Ueu</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwTMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwUeuFHrhS</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAulHrhR64U</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAyAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGU4YWJiZGU0MDBkOWEwZWQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEY3AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM1MDI=</field><field name="title" class="java.lang.String">rO0ABXQAQEdvbGQgQmVmdWRkbGVzIEJlcm5hbmtlIGFzIENlbnRyYWwgQmFua3MnIExvc3NlcyBhdCAkNTQ1IEJpbGxpb24=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGRSUSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGE1YTE1MDQyODBhOTc5NGQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABVNDR0xZ</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGWb6CAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlD1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlGZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkvXCj1wo9</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkvXCj1wo9</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkPXCj1wo9</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAHbyA==</field><field name="id" class="java.lang.String">rO0ABXQAEDNkZTU4YjQzMzA1NTFmZDQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mITOAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwMzQ=</field><field name="title" class="java.lang.String">rO0ABXQAL1ByYWlyaWVzIFZhbmlzaCBpbiB0aGUgVVMgUHVzaCBmb3IgR3JlZW4gRW5lcmd5</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJQC38AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDg3NjgzOGZhZDcxMWEzNDA=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZBUk0=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJVMdsAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyT1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyT1wo9cKP</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyK4UeuFHs</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAC/aA==</field><field name="id" class="java.lang.String">rO0ABXQAEDVkZDcyNjJmMjIzOGQ2NmE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMt4AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDIzNzU=</field><field name="title" class="java.lang.String">rO0ABXQAMUdvbGQgVHJhZGVycyBNb3N0IEJ1bGxpc2ggU2luY2UgQmVhciBNYXJrZXQgQmVnYW4=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8X2xCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDQzMGNhNDhmY2Y3MWRlYzE=</field><field name="symbol" class="java.lang.String">rO0ABXQAA1BUWQ==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT8dAWyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAy8KPXCj1x</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAzKPXCj1wp</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAy1HrhR64U</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAsAAAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAbk2A==</field><field name="id" class="java.lang.String">rO0ABXQAEDNjYjk2ZmE5M2JlMzQ4ZDQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mKFLAAAA==</field></document></documents><date>2015-05-07T12:13:42-0500</date></cacheEntry>
<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E35CaW9mdWVscyBtYWRlIGZyb20gdGhlIGxlZnRvdmVycyBvZiBoYXJ2ZXN0ZWQgY29ybiBwbGFudHMgYXJlIHdvcnNlIHRoYW4gZ2Fzb2xpbmUgZm9yIGdsb2JhbCB3YXJtaW5nIGluIHRoZSBzaG9ydCB0ZXJtIGEgc3R1ZHkgc2hvd3MgY2hhbGxlbmdpbmcgdGhlIE9iYW1hIGFkbWluaXN0cmF0aW9ucyBjb25jbHVzaW9ucyB0aGF0IHRoZXkgYXJlIGEgbXVjaCBjbGVhbmVyIG9pbCBhbHRlcm5hdGl2ZSBhbmQgd2lsbCBoZWxwIGNvbWJhdCBjbGltYXRlIGNoYW5nZSBBIDUwMDAwMCBzdHVkeSBwYWlkIGZvciBieSB0aGUgZmVkZXJhbCBnb3Zlcm5tZW50IGFuZCByZWxlYXNlZCBTdW5kYXkgaW4gdGhlIHBlZXJyZXZpZXdlZCBqb3VybmFsIE5hdHVyZSBDbGltYXRlIENoYW5nZSBjb25jbHVkZXMgdGhhdCBiaW9mdWVscyBtYWRlIHdpdGggY29ybiByZXNpZHVlIHJlbGVhc2UgNyBwZXJjZW50IG1vcmUgZ3JlZW5ob3VzZSBnYXNlcyBpbiB0aGUgZWFybHkgeWVhcnMgY29tcGFyZWQgd2l0aCBjb252ZW50aW9uYWwgZ2Fzb2xpbmUgV2hpbGUgYmlvZnVlbHMgYXJlIGJldHRlciBpbiB0aGUgbG9uZyBydW4gdGhlIHN0dWR5IHNheXMgdGhleSB3b250IG1lZXQgYSBzdGFuZGFyZCBzZXQgaW4gYSAyMDA3IGVuZXJneSBsYXcgdG8gcXVhbGlmeSBhcyByZW5ld2FibGUgZnVlbCBUaGUgY29uY2x1c2lvbnMgZGVhbCBhIGJsb3cgdG8gd2hhdCBhcmUga25vd24gYXMgY2VsbHVsb3NpYyBiaW9mdWVscyB3aGljaCBoYXZlIHJlY2VpdmVkIG1vcmUgdGhhbiAxIGJpbGxpb24gaW4gZmVkZXJhbCBzdXBwb3J0IGJ1dCBoYXZlIHN0cnVnZ2xlZCB0byBtZWV0IHZvbHVtZSB0YXJnZXRzIG1hbmRhdGVkIGJ5IGxhdyBBYm91dCBoYWxmIG9mIHRoZSBpbml0aWFsIG1hcmtldCBpbiBjZWxsdWxvc2ljcyBpcyBleHBlY3RlZCB0byBiZSBkZXJpdmVkIGZyb20gY29ybiByZXNpZHVlIFRoZSBiaW9mdWVsIGluZHVzdHJ5IGFuZCBhZG1pbmlzdHJhdGlvbiBvZmZpY2lhbHMgaW1tZWRpYXRlbHkgY3JpdGljaXplZCB0aGUgcmVzZWFyY2ggYXMgZmxhd2VkIFRoZXkgc2FpZCBpdCB3YXMgdG9vIHNpbXBsaXN0aWMgaW4gaXRzIGFuYWx5c2lzIG9mIGNhcmJvbiBsb3NzIGZyb20gc29pbCB3aGljaCBjYW4gdmFyeSBvdmVyIGEgc2luZ2xlIGZpZWxkIGFuZCB2YXN0bHkgb3ZlcmVzdGltYXRlZCBob3cgbXVjaCByZXNpZHVlIGZhcm1lcnMgYWN0dWFsbHkgd291bGQgcmVtb3ZlIG9uY2UgdGhlIG1hcmtldCBnZXRzIHVuZGVyd2F5IFRoZSBjb3JlIGFuYWx5c2lzIGRlcGljdHMgYW4gZXh0cmVtZSBzY2VuYXJpbyB0aGF0IG5vIHJlc3BvbnNpYmxlIGZhcm1lciBvciBidXNpbmVzcyB3b3VsZCBldmVyIGVtcGxveSBiZWNhdXNlIGl0IHdvdWxkIHJ1aW4gYm90aCB0aGUgbGFuZCBhbmQgdGhlIGxvbmd0ZXJtIHN1cHBseSBvZiBmZWVkc3RvY2sgSXQgbWFrZXMgbm8gYWdyb25vbWljIG9yIGJ1c2luZXNzIHNlbnNlIHNhaWQgSmFuIEtvbmluY2t4IGdsb2JhbCBidXNpbmVzcyBkaXJlY3RvciBmb3IgYmlvcmVmaW5lcmllcyBhdCBEdVBvbnQgTGF0ZXIgdGhpcyB5ZWFyIHRoZSBjb21wYW55IGlzIHNjaGVkdWxlZCB0byBmaW5pc2ggYSAyMDAgbWlsbGlvbnBsdXMgZmFjaWxpdHkgaW4gTmV2YWRhIElvd2EgdGhhdCB3aWxsIHByb2R1Y2UgMzAgbWlsbGlvbiBnYWxsb25zIG9mIGNlbGx1bG9zaWMgZXRoYW5vbCB1c2luZyBjb3JuIHJlc2lkdWUgZnJvbSBuZWFyYnkgZmFybXMgQW4gYXNzZXNzbWVudCBwYWlkIGZvciBieSBEdVBvbnQgc2FpZCB0aGF0IHRoZSBldGhhbm9sIGl0IHdpbGwgcHJvZHVjZSB0aGVyZSBjb3VsZCBiZSBtb3JlIHRoYW4gMTAwIHBlcmNlbnQgYmV0dGVyIHRoYW4gZ2Fzb2xpbmUgaW4gdGVybXMgb2YgZ3JlZW5ob3VzZSBnYXMgZW1pc3Npb25zIFRoZSByZXNlYXJjaCBpcyBhbW9uZyB0aGUgZmlyc3QgdG8gYXR0ZW1wdCB0byBxdWFudGlmeSBvdmVyIDEyIENvcm4gQmVsdCBzdGF0ZXMgaG93IG11Y2ggY2FyYm9uIGlzIGxvc3QgdG8gdGhlIGF0bW9zcGhlcmUgd2hlbiB0aGUgc3RhbGtzIGxlYXZlcyBhbmQgY29icyB0aGF0IG1ha2UgdXAgcmVzaWR1ZSBhcmUgcmVtb3ZlZCBhbmQgdXNlZCB0byBtYWtlIGJpb2Z1ZWwgaW5zdGVhZCBvZiBsZWZ0IHRvIG5hdHVyYWxseSByZXBsZW5pc2ggdGhlIHNvaWwgd2l0aCBjYXJib24gVGhlIHN0dWR5IGZvdW5kIHRoYXQgcmVnYXJkbGVzcyBvZiBob3cgbXVjaCBjb3JuIHJlc2lkdWUgaXMgdGFrZW4gb2ZmIHRoZSBmaWVsZCB0aGUgcHJvY2VzcyBjb250cmlidXRlcyB0byBnbG9iYWwgd2FybWluZyBJIGtuZXcgdGhpcyByZXNlYXJjaCB3b3VsZCBiZSBjb250ZW50aW91cyBzYWlkIEFkYW0gTGlza2EgdGhlIGxlYWQgYXV0aG9yIGFuZCBhbiBhc3Npc3RhbnQgcHJvZmVzc29yIG9mIGJpb2xvZ2ljYWwgc3lzdGVtcyBlbmdpbmVlcmluZyBhdCB0aGUgVW5pdmVyc2l0eSBvZiBOZWJyYXNrYUxpbmNvbG4gSW0gYW1hemVkIGl0IGhhcyBub3QgY29tZSBvdXQgbW9yZSBzb2xpZGx5IHVudGlsIG5vdyBUaGUgRW52aXJvbm1lbnRhbCBQcm90ZWN0aW9uIEFnZW5jeXMgb3duIGFuYWx5c2lzIHdoaWNoIGFzc3VtZWQgYWJvdXQgaGFsZiBvZiBjb3JuIHJlc2lkdWUgd291bGQgYmUgcmVtb3ZlZCBmcm9tIGZpZWxkcyBmb3VuZCB0aGF0IGZ1ZWwgbWFkZSBmcm9tIGNvcm4gcmVzaWR1ZSBhbHNvIGtub3duIGFzIHN0b3ZlciB3b3VsZCBtZWV0IHRoZSBzdGFuZGFyZCBpbiB0aGUgZW5lcmd5IGxhdyBUaGF0IHN0YW5kYXJkIHJlcXVpcmVzIGNlbGx1bG9zaWMgYmlvZnVlbHMgdG8gcmVsZWFzZSA2MCBwZXJjZW50IGxlc3MgY2FyYm9uIHBvbGx1dGlvbiB0aGFuIGdhc29saW5lIENlbGx1bG9zaWMgYmlvZnVlbHMgdGhhdCBkb250IG1lZXQgdGhhdCB0aHJlc2hvbGQgY291bGQgYmUgYWxtb3N0IGltcG9zc2libGUgdG8gbWFrZSBhbmQgc2VsbCBQcm9kdWNlcnMgd291bGRudCBlYXJuIHRoZSAxIHBlciBnYWxsb24gc3Vic2lkeSB0aGV5IG5lZWQgdG8gbWFrZSB0aGVzZSBleHBlbnNpdmUgZnVlbHMgYW5kIHN0aWxsIG1ha2UgYSBwcm9maXQgUmVmaW5lcnMgd291bGQgc2h1biB0aGUgZnVlbHMgYmVjYXVzZSB0aGV5IHdvdWxkbnQgbWVldCB0aGVpciBsZWdhbCBvYmxpZ2F0aW9uIHRvIHVzZSBtaW5pbXVtIGFtb3VudHMgb2YgbmV4dGdlbmVyYXRpb24gYmlvZnVlbHMgRVBBIHNwb2tlc3dvbWFuIExpeiBQdXJjaGlhIHNhaWQgaW4gYSBzdGF0ZW1lbnQgdGhhdCB0aGUgc3R1ZHkgZG9lcyBub3QgcHJvdmlkZSB1c2VmdWwgaW5mb3JtYXRpb24gcmVsZXZhbnQgdG8gdGhlIGxpZmUgY3ljbGUgZ3JlZW5ob3VzZSBnYXMgZW1pc3Npb25zIGZyb20gY29ybiBzdG92ZXIgZXRoYW5vbCBCdXQgYW4gQVAgaW52ZXN0aWdhdGlvbiBsYXN0IHllYXIgZm91bmQgdGhhdCB0aGUgRVBBcyBhbmFseXNpcyBvZiBjb3JuYmFzZWQgZXRoYW5vbCBmYWlsZWQgdG8gcHJlZGljdCB0aGUgZW52aXJvbm1lbnRhbCBjb25zZXF1ZW5jZXMgYWNjdXJhdGVseSBUaGUgZGVwYXJ0bWVudHMgb2YgQWdyaWN1bHR1cmUgYW5kIEVuZXJneSBoYXZlIGluaXRpYXRlZCBwcm9ncmFtcyB3aXRoIGZhcm1lcnMgdG8gbWFrZSBzdXJlIHJlc2lkdWUgaXMgaGFydmVzdGVkIHN1c3RhaW5hYmx5IEZvciBpbnN0YW5jZSBmYXJtZXJzIHdpbGwgbm90IHJlY2VpdmUgYW55IGZlZGVyYWwgYXNzaXN0YW5jZSBmb3IgY29uc2VydmF0aW9uIHByb2dyYW1zIGlmIHRvbyBtdWNoIGNvcm4gcmVzaWR1ZSBpcyByZW1vdmVkIEEgcGVlcnJldmlld2VkIHN0dWR5IHBlcmZvcm1lZCBhdCB0aGUgRW5lcmd5IERlcGFydG1lbnRzIEFyZ29ubmUgTmF0aW9uYWwgTGFib3JhdG9yeSBpbiAyMDEyIGZvdW5kIHRoYXQgYmlvZnVlbHMgbWFkZSB3aXRoIGNvcm4gcmVzaWR1ZSB3ZXJlIDk1IHBlcmNlbnQgYmV0dGVyIHRoYW4gZ2Fzb2xpbmUgaW4gZ3JlZW5ob3VzZSBnYXMgZW1pc3Npb25zIFRoYXQgc3R1ZHkgYXNzdW1lZCBzb21lIG9mIHRoZSByZXNpZHVlIGhhcnZlc3RlZCB3b3VsZCByZXBsYWNlIHBvd2VyIHByb2R1Y2VkIGZyb20gY29hbCByZWR1Y2luZyBncmVlbmhvdXNlIGdhcyBlbWlzc2lvbnMgYnV0IGl0cyB1bmNsZWFyIHdoZXRoZXIgZnV0dXJlIGJpb3JlZmluZXJpZXMgd291bGQgZG8gdGhhdCBMaXNrYSBhZ3JlZXMgdGhhdCB1c2luZyBzb21lIG9mIHRoZSByZXNpZHVlIHRvIG1ha2UgZWxlY3RyaWNpdHkgb3IgcGxhbnRpbmcgY292ZXIgY3JvcHMgd291bGQgcmVkdWNlIGNhcmJvbiBlbWlzc2lvbnMgQnV0IGhlIGRpZCBub3QgaW5jbHVkZSB0aG9zZSBpbiBoaXMgY29tcHV0ZXIgc2ltdWxhdGlvbiBTdGlsbCBjb3JuIHJlc2lkdWUgaXMgbGlrZWx5IHRvIGJlIGEgYmlnIHNvdXJjZSBlYXJseSBvbiBmb3IgY2VsbHVsb3NpYyBiaW9mdWVscyB3aGljaCBoYXZlIHN0cnVnZ2xlZCB0byByZWFjaCBjb21tZXJjaWFsIHNjYWxlIExhc3QgeWVhciBmb3IgdGhlIGZpZnRoIHRpbWUgdGhlIEVQQSBwcm9wb3NlZCByZWR1Y2luZyB0aGUgYW1vdW50IHJlcXVpcmVkIGJ5IGxhdyBJdCBzZXQgYSB0YXJnZXQgb2YgMTcgbWlsbGlvbiBnYWxsb25zIGZvciAyMDE0IFRoZSBsYXcgZW52aXNpb25lZCAxNzUgYmlsbGlvbiBnYWxsb25zIGJlaW5nIHByb2R1Y2VkIHRoaXMgeWVhciBUaGUgc3R1ZHkgc2F5cyBpdCB3aWxsIGJlIHZlcnkgaGFyZCB0byBtYWtlIGEgYmlvZnVlbCB0aGF0IGhhcyBhIGJldHRlciBncmVlbmhvdXNlIGdhcyBpbXBhY3QgdGhhbiBnYXNvbGluZSB1c2luZyBjb3JuIHJlc2lkdWUgd2hpY2ggcHV0cyBpdCBpbiB0aGUgc2FtZSBib2F0IGFzIGNvcm5iYXNlZCBldGhhbm9sIHNhaWQgRGF2aWQgVGlsbWFuIGEgcHJvZmVzc29yIGF0IHRoZSBVbml2ZXJzaXR5IG9mIE1pbm5lc290YSB3aG8gaGFzIGRvbmUgcmVzZWFyY2ggb24gYmlvZnVlbHMgZW1pc3Npb25zIGZyb20gdGhlIGZhcm0gdG8gdGhlIHRhaWxwaXBlIFRpbG1hbiBzYWlkIGl0IHdhcyB0aGUgYmVzdCBzdHVkeSBvbiB0aGUgaXNzdWUgaGUgaGFzIHNlZW4gc28gZmFydAAEcm93c3VxAH4ACgAAAAF0AAE1dAAFc3RhcnR1cQB+AAoAAAABdAABMHQAAmZsdXEAfgAKAAAAAXQAb2FydGljbGVJZCx0aXRsZSxjb250ZW50LGRhdGUsc3RvY2tIaXN0b3J5SWQsc3ltYm9sLGhpc3RvcnlEYXRlLG9wZW4saGlnaCxsb3csY2xvc2UsYWRqQ2xvc2Usdm9sdW1lLGlkLF92ZXJzaW9uX3QAAmZxdXEAfgAKAAAAAXQAOmhpc3RvcnlEYXRlOlsyMDEzLTAzLTI3VDAwOjAwOjAwWiBUTyAyMDEzLTEyLTAzVDU5OjU5OjU5Wl14AHA=</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwNTI=</field><field name="title" class="java.lang.String">rO0ABXQAMlRoZSBTZWNyZXQsIERpcnR5IENvc3Qgb2YgT2JhbWEncyBHcmVlbiBQb3dlciBQdXNo</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJK5SMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI3MTcyMzgzMzAxZTY3Yjg=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZBUk0=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJQC38AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAymZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyI9cKPXCk</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABp3A==</field><field name="id" class="java.lang.String">rO0ABXQAEGIxNzhiNTk3MDYyZjcwYTE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGoqAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwNDQ=</field><field name="title" class="java.lang.String">rO0ABXQALkluZHVzdHJ5IFRha2VzIEFpbSBhdCBBUCBFdGhhbm9sIEludmVzdGlnYXRpb24=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJK5SMAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDZjYzY3ZTgxZDEzNzc0ZWY=</field><field name="symbol" class="java.lang.String">rO0ABXQAAkFQ</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJQC38AeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyI9cKPXCk</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAygAAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyD1wo9cKP</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyUeuFHrhS</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxgo9cKPXD</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAACw9A==</field><field name="id" class="java.lang.String">rO0ABXQAEGI3YTNjNThmNDUwYjIwNzY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGFaAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUwMzQ=</field><field name="title" class="java.lang.String">rO0ABXQAL1ByYWlyaWVzIFZhbmlzaCBpbiB0aGUgVVMgUHVzaCBmb3IgR3JlZW4gRW5lcmd5</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJQC38AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDg3NjgzOGZhZDcxMWEzNDA=</field><field name="symbol" class="java.lang.String">rO0ABXQABEZBUk0=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUJVMdsAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyT1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyT1wo9cKP</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAyK4UeuFHs</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAySj1wo9cK</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAC/aA==</field><field name="id" class="java.lang.String">rO0ABXQAEDVkZDcyNjJmMjIzOGQ2NmE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mMt4AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDMzOTA=</field><field name="title" class="java.lang.String">rO0ABXQANidXYXIgb24gQ29hbCcgTWF5IGJlIEdvb2QgRmlnaHQgZm9yIFNvbWUgTWFudWZhY3R1cmVycw==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUHZYkyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDMyMDg4NWFkOTljOWExNzI=</field><field name="symbol" class="java.lang.String">rO0ABXQABUpQWVlM</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUHeiKiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECNHrhR64Uf</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECNHrhR64Uf</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECMXAAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECMmAAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECLzzMzMzMz</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAKKA==</field><field name="id" class="java.lang.String">rO0ABXQAEGJjZWI2ODhjYjhhM2FlNTA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGr/AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExNTQx</field><field name="title" class="java.lang.String">rO0ABXQAOkRlY2lzaW9uIG9uIEtleXN0b25lIFhMIFBpcGVsaW5lIFNlZW4gRHJhZ2dpbmcgUGFzdCBTdW1tZXI=</field><field name="content" class="java.lang.String">rO0ABXQR6FRoZSBPYmFtYSBhZG1pbmlzdHJhdGlvbiBpcyB1bmxpa2VseSB0byBtYWtlIGEgZGVjaXNpb24gb24gdGhlIENhbmFkYS10by1OZWJyYXNrYSBLZXlzdG9uZSBYTCBwaXBlbGluZSB1bnRpbCBsYXRlIHRoaXMgeWVhciBhcyBpdCBwYWluc3Rha2luZ2x5IHdlaWdocyB0aGUgcHJvamVjdCdzIGltcGFjdCBvbiB0aGUgZW52aXJvbm1lbnQgYW5kIG9uIGVuZXJneSBzZWN1cml0eSwgYSBVLlMuIG9mZmljaWFsIGFuZCBhbmFseXN0cyBzYWlkIG9uIEZyaWRheS4gVGhlIGRlY2lzaW9uIG1heSBub3QgYmUgbWFkZSB1bnRpbCBOb3ZlbWJlciwgRGVjZW1iZXIgb3IgZXZlbiBlYXJseSAyMDE0LCBzYWlkIGEgVS5TLiBvZmZpY2lhbCwgYXMgUHJlc2lkZW50IEJhcmFjayBPYmFtYSB3aWxsIG5vdCBydXNoIHRoZSBwcm9jZXNzLCB3aGljaCBzdGlsbCBoYXMgYSBudW1iZXIgb2Ygc3RhZ2VzIHRvIHdvcmsgdGhyb3VnaC4gT25lIG9mIHRob3NlIHN0YWdlcyBoYXMgbm90IGV2ZW4gYmVndW4geWV0IGFuZCB3aWxsIHJ1biBmb3IgbW9udGhzLiAiVGhlIHByZXNpZGVudCBoYXMgdG8gYmUgYWJsZSB0byBzaG93IHRoYXQgdGhlIGFkbWluaXN0cmF0aW9uIGxvb2tlZCB1bmRlciBldmVyeSBzdG9uZSB0byBlbnN1cmUgaXQga25ldyBhcyBtdWNoIGFzIGl0IHBvc3NpYmx5IGNvdWxkIGFib3V0IHRoZSBpbXBhY3Qgb2YgS2V5c3RvbmUsIiBzYWlkIHRoZSBvZmZpY2lhbCwgd2hvIGRpZCBub3Qgd2FudCB0byBiZSBuYW1lZCBnaXZlbiB0aGUgc2Vuc2l0aXZlIG5hdHVyZSBvZiB0aGUgcHJvamVjdC4gQW5hbHlzdHMgYWdyZWVkIHRoYXQgYSBkZWNpc2lvbiB3b3VsZCBub3QgYmUgbWFkZSBieSB0aGlzIHN1bW1lciBhcyB0aGUgU3RhdGUgRGVwYXJ0bWVudCBoYWQgc3VnZ2VzdGVkIHdoZW4gaXQgaXNzdWVkIGFuIGVudmlyb25tZW50YWwgcmV2aWV3IG9uIHRoZSBwaXBlbGluZSBvbiBNYXJjaCAxLiBUaGUgU3RhdGUgRGVwYXJ0bWVudCBpcyBub21pbmFsbHkgaW4gY2hhcmdlIG9mIG1ha2luZyBhIGZpbmFsIGRlY2lzaW9uIG9uIFRyYW5zQ2FuYWRhIENvcnAuJ3MgcHJvcG9zZWQgcHJvamVjdCwgd2hpY2ggd291bGQgaGVscCBsaW5rIEFsYmVydGEncyBvaWwgc2FuZHMgd2l0aCByZWZpbmVyaWVzIGFuZCBwb3J0cyBhbG9uZyB0aGUgVS5TLiBHdWxmIENvYXN0LCBiZWNhdXNlIHRoZSBwaXBlbGluZSB3b3VsZCBjcm9zcyB0aGUgbmF0aW9uYWwgYm9yZGVyLiBCdXQgT2JhbWEgaXMgZXhwZWN0ZWQgdG8gd2VpZ2ggaGVhdmlseSBvbiB0aGUgZGVjaXNpb24uIEFub3RoZXIgZGVsYXkgaW4gdGhlIHByb2plY3QsIHdoaWNoIGhhcyBiZWVuIHBlbmRpbmcgZm9yIG1vcmUgdGhhbiBmb3VyIHllYXJzLCB3b3VsZCBsaWtlbHkgYW5nZXIgQ2FuYWRhLCB3aG9zZSBQcmltZSBNaW5pc3RlciBTdGVwaGVuIEhhcnBlciBpcyB2aXNpdGluZyBOZXcgWW9yayBuZXh0IHdlZWsgdG8gcHVzaCB0aGUgcHJvamVjdCBhdCB0aGUgQ291bmNpbCBvbiBGb3JlaWduIFJlbGF0aW9ucy4gT3RoZXIgQ2FuYWRpYW4gZmVkZXJhbCBhbmQgcHJvdmluY2lhbCBvZmZpY2lhbHMgaGF2ZSB2aXNpdGVkIFdhc2hpbmd0b24gcmVndWxhcmx5IHRvIHByZXNzIHRoZSBjYXNlIGZvciB0aGUgcGlwZWxpbmUuIEl0IGNvdWxkIGFsc28gc2V0IGJhY2sgVHJhbnNDYW5hZGEgd2hpY2ggbGFzdCBtb250aCBzYWlkIGRlbGF5cyBieSBXYXNoaW5ndG9uIHdvdWxkIGRlbGF5IGNvbXBsZXRpb24gb2YgdGhlIHByb2plY3QgdG8gdGhlIHNlY29uZCBoYWxmIG9mIDIwMTUgYW5kIHB1c2ggY29zdHMgZm9yIHRoZSBwcm9qZWN0IGFib3ZlIGl0cyBlc3RpbWF0ZSBvZiAkNS4zIGJpbGxpb24uIEEgU3RhdGUgRGVwYXJ0bWVudCBzcG9rZXN3b21hbiBvbiBUaHVyc2RheSBzYWlkIHRoZSBlbnZpcm9ubWVudGFsIHJldmlldyBoYXMgcmVjZWl2ZWQgbW9yZSB0aGFuIDEgbWlsbGlvbiBwdWJsaWMgY29tbWVudHMuIFRoZSBTdGF0ZSBEZXBhcnRtZW50IGRpZCBub3QgaW1tZWRpYXRlbHkgcmVzcG9uZCB0byBxdWVzdGlvbnMgYWJvdXQgd2hlbiBpdCBwbGFucyB0byBmaW5hbGl6ZSBpdHMgYXNzZXNzbWVudCBvciBtb3ZlIHRvIHRoZSBuZXh0IHN0YWdlIG9mIGRldGVybWluaW5nLCB3aXRoIGlucHV0IGZyb20gc2V2ZXJhbCBvdGhlciBhZ2VuY2llcywgd2hldGhlciB0aGUgcGlwZWxpbmUgaXMgaW4gdGhlIG5hdGlvbmFsIGludGVyZXN0LiBUaGF0IHN0YWdlIGlzIGV4cGVjdGVkIHRvIHRha2UgOTAgZGF5cy4gRmVkZXJhbCBhZ2VuY2llcyB3aWxsIGFsc28gaGF2ZSAxNSBkYXlzIHRvIGNvbW1lbnQgb24gdGhlIGRlY2lzaW9uIGJlZm9yZSBpdCBpcyBmaW5hbGl6ZWQuIEEgV2hpdGUgSG91c2Ugc3Bva2VzbWFuIHNhaWQgaW4gYW4gZS1tYWlsIHRoYXQgaGUgY291bGQgbm90IG9mZmVyIGFueSBndWlkYW5jZSBvbiB3aGVuIGEgZGVjaXNpb24gaXMgZXhwZWN0ZWQuIEtldmluIEJvb2ssIGEgcG9saWN5IGFuYWx5c3QgYXQgQ2xlYXJWaWV3IEVuZXJneSBQYXJ0bmVycywgc2FpZCBBdWd1c3QgbG9va3MgbGVzcyBsaWtlbHkgZm9yIGEgZGVjaXNpb24sIGJ1dCBTZXB0ZW1iZXIgb3IgT2N0b2JlciBzdGlsbCBzZWVtIHJlYXNvbmFibGUuIE9iYW1hIG1heSB3YW50IHRvIHRpbWUgYW4gYXBwcm92YWwgb2YgdGhlIHBpcGVsaW5lIHRvIGNvaW5jaWRlIHdpdGggbmV3IEVudmlyb25tZW50YWwgUHJvdGVjdGlvbiBBZ2VuY3kgY2xpbWF0ZSBydWxlcyBmb3IgY29hbCBwbGFudHMgYXMgYSB3YXkgb2YgYXBwZWFzaW5nIGVudmlyb25tZW50YWxpc3RzIHdobyBvcHBvc2UgS2V5c3RvbmUgWEwsIGhlIHNhaWQuIEdldHRpbmcgdGhlIHRpbWluZyByaWdodCBjb3VsZCBiZSBhIGNoYWxsZW5nZSBhcyBSZXB1YmxpY2FucyBpbiB0aGUgU2VuYXRlIHN0YWxsIHRoZSBjb25maXJtYXRpb24gb2YgR2luYSBNY0NhcnRoeSwgT2JhbWEncyBwaWNrIHRvIGxlYWQgdGhlIEVQQS4gQklHIFJFVklTSU9OUyBORUVERUQ/IEJhY2tlcnMgb2YgdGhlIHBpcGVsaW5lIHNheSB0aGUgcHJvamVjdCB3b3VsZCBib29zdCBOb3J0aCBBbWVyaWNhbiBlbmVyZ3kgc2VjdXJpdHkgYW5kIHByb3ZpZGUgdGhvdXNhbmRzIG9mIGNvbnN0cnVjdGlvbiBqb2JzLiBPcHBvbmVudHMgYXJndWUgdGhhdCBpdCB3b3VsZCBsZWFkIHRvIGhpZ2hlciByZWxlYXNlcyBvZiBncmVlbmhvdXNlIGdhc2VzLiBFdmVuIGJlZm9yZSB0aGF0IHRoZSBuYXRpb25hbCBpbnRlcmVzdCBkZWNpc2lvbiBwcm9jZXNzIGtpY2tzIG9mZi4gUmV2aXNpb25zIHRvIHRoZSBlbnZpcm9ubWVudGFsIGFzc2Vzc21lbnQgbWF5IGJlIG5lZWRlZCBhZnRlciB0aGUgRVBBIGxhc3QgbW9udGggdG9vayBpc3N1ZSB3aXRoIHNldmVyYWwgcGFydHMgb2YgdGhlIFN0YXRlIERlcGFydG1lbnQncyByZXZpZXcuIFRoZSBFUEEgaGFkIGNvbmNlcm5zIGFib3V0IHRoZSBsZXZlbCBvZiBlbWlzc2lvbnMgZnJvbSBDYW5hZGEncyBvaWwgc2FuZHMsIHdoZXJlIGNydWRlIHByb2R1Y3Rpb24gaXMgY2FyYm9uLWludGVuc2l2ZS4gSXQgYWxzbyB0b29rIGlzc3VlIHdpdGggdGhlIFN0YXRlIERlcGFydG1lbnQncyBjb25jbHVzaW9uIHRoYXQgdGhlIHBpcGVsaW5lIHdvdWxkIGhhdmUgbm8gZWZmZWN0IG9uIGNsaW1hdGUgYmVjYXVzZSB0aGUgb2lsIHNhbmRzIHdvdWxkIG1ha2UgaXQgdG8gbWFya2V0IHdoZXRoZXIgb3Igbm90IHRoZSBwaXBlbGluZSB3YXMgYXBwcm92ZWQuIFRoZSBTdGF0ZSBEZXBhcnRtZW50IHNhaWQgbXVjaCBvZiB0aGUgb2lsIGNvdWxkIGJlIG1vdmVkIGJ5IHJhaWwsIGFuIGFzc3VtcHRpb24gdGhlIEVQQSBxdWVzdGlvbmVkLiBJZiB0aGUgRVBBIGFuZCBTdGF0ZSBEZXBhcnRtZW50IGRvIG5vdCBjb21lIHRvIGFuIGFncmVlbWVudCwgdGhlIGRlY2lzaW9uIGNvdWxkIGJlIHNlbnQgdG8gdGhlIFdoaXRlIEhvdXNlLCB3aGljaCBjb3VsZCB0YWtlIGV2ZW4gbW9yZSB0aW1lLiBBIG1vcmUgbGlrZWx5IHNjZW5hcmlvIGlzIHRoYXQgdGhlIHR3byBhZ2VuY2llcyB3aWxsIHdvcmsgb3V0IGEgc29sdXRpb24sIGJ1dCB0aGV5IHdpbGwgbW9zdCBsaWtlbHkgdGFrZSB0aGVpciB0aW1lIHRvIGV4YW1pbmUgZXZlcnkgZGV0YWlsIHRvIHNoaWVsZCB0aGUgZGVjaXNpb24gZnJvbSBsYXdzdWl0cy4gIklmIHRoZXkgc2hvcnQtY2lyY3VpdCB0aGUgcHJvY2VzcyBpdCB3aWxsIG9wZW4gdXAgd2hhdGV2ZXIgZGVjaXNpb24gdGhleSBtYWtlIHRvIGxlZ2FsIGNoYWxsZW5nZSwiIHNhaWQgRGFuaWVsIFdlaXNzLCBhIGZlbGxvdyBhdCB0aGUgQ2VudGVyIGZvciBBbWVyaWNhbiBQcm9ncmVzcyBBY3Rpb24gRnVuZC4gQmlsbHMgYXJlIHBlbmRpbmcgaW4gdGhlIFUuUy4gSG91c2Ugb2YgUmVwcmVzZW50YXRpdmVzIGFuZCBTZW5hdGUgdGhhdCB3b3VsZCBnaXZlIENvbmdyZXNzLCBub3QgdGhlIGFkbWluaXN0cmF0aW9uLCB0aGUgcG93ZXIgdG8gYXBwcm92ZSB0aGUgcGlwZWxpbmUuIFBhc3NhZ2UgaW4gdGhlIEhvdXNlIHNlZW1zIGxpa2VseSwgYnV0IHByb3NwZWN0cyBpbiB0aGUgRGVtb2NyYXQtbGVkIFNlbmF0ZSBhcmUgdW5jZXJ0YWluLCBhbmQgdGhlIGJpbGwgd291bGQgcHJvYmFibHkgbWVldCBhIHByZXNpZGVudGlhbCB2ZXRvLg==</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6cQnCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDFjMmNjYzUxOGQ2MTA0MjA=</field><field name="symbol" class="java.lang.String">rO0ABXQABEdVTEY=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT6haMyAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxnCj1wo9c</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAx/XCj1wo9</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxnCj1wo9c</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAx+FHrhR64</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAw1wo9cKPX</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAmrA==</field><field name="id" class="java.lang.String">rO0ABXQAEDVhMmI3OWM2OGYzMzBmMDY=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHhQAAAA==</field></document></documents><date>2015-05-07T12:09:06-0500</date></cacheEntry>
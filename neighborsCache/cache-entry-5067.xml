<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0E4hEaXN0cnVzdCBvZiB0aGUgRmVkZXJhbCBSZXNlcnZlIGFuZCBjb25jZXJuIHRoYXQgVVMgZG9sbGFycyBtYXkgYmVjb21lIHdvcnRobGVzcyBhcmUgZnVlbGluZyBhIHB1c2ggaW4gbW9yZSB0aGFuIGEgZG96ZW4gc3RhdGVzIHRvIHJlY29nbml6ZSBnb2xkIGFuZCBzaWx2ZXIgY29pbnMgYXMgbGVnYWwgdGVuZGVyIExhd21ha2VycyBpbiBBcml6b25hIGFyZSBwb2lzZWQgdG8gZm9sbG93IFV0YWggd2hpY2ggYXV0aG9yaXplZCBidWxsaW9uIGZvciBjdXJyZW5jeSBpbiAyMDExIFNpbWlsYXIgYmlsbHMgYXJlIGFkdmFuY2luZyBpbiBLYW5zYXMgU291dGggQ2Fyb2xpbmEgYW5kIG90aGVyIHN0YXRlcyBUaGUgVGVhIFBhcnR5YmFja2VkIG1lYXN1cmVzIGFyZSBtb3N0bHkgc3ltYm9saWMgIHlvdSBzdGlsbCBjYW50IHBheSBmb3IgZ3JvY2VyaWVzIHdpdGggZ29sZCBpbiBVdGFoIFRoZXkgcmVmbGVjdCBsaW5nZXJpbmcgZG9sbGFyIGNvbmNlcm5zIGFtcGxpZmllZCBieSB0aGUgRmVkcyB1bmNvbnZlbnRpb25hbCBtb3ZlcyBpbiByZWNlbnQgeWVhcnMgdG8gc3RhYmlsaXplIHRoZSBlY29ub215IHNhaWQgTG9yZW4gR2F0Y2ggd2hvIHRlYWNoZXMgcG9saXRpY3MgYXQgdGhlIFVuaXZlcnNpdHkgb2YgQ2VudHJhbCBPa2xhaG9tYQoKRWRpdG9ycyBOb3RlIEdldCBEYXZpZCBTa2FyaWNhcyBHb2xkIFN0b2NrIEFkdmlzZXIgIENsaWNrIEhlcmUgTm93CgpUaGUgbGVnaXNsYXRpb24gaXMgYWJvdXQgc2lnbmFsaW5nIGRpc2NvbnRlbnQgd2l0aCBtb25ldGFyeSBwb2xpY3kgYW5kIGFib3V0IHdoYXQgQmVuIEJlcm5hbmtlIGlzIGRvaW5nIHNhaWQgR2F0Y2ggd2hvIHN0dWRpZXMgYWx0ZXJuYXRpdmUgY3VycmVuY2llcyBhdCB0aGUgRWRtb25kIE9rbGFob21hYmFzZWQgc2Nob29sIFRoZXJlIGlzIGEgZmVhciB0aGF0IHRoZSBnb3Zlcm5tZW50IG9yIEJlcm5hbmtlIGluIHBhcnRpY3VsYXIgYW5kIHRoZSBGZWRlcmFsIFJlc2VydmUgaXMgcHVyc3VpbmcgYSBwb2xpY3kgdGhhdCB3aWxsIGxlYWQgdG8gdGhlIGNvbGxhcHNlIG9mIHRoZSBkb2xsYXIgVGhhdHMgd2hhdCBpcyBiZWhpbmQgaXQgQmVybmFua2UgaGFzIHB1c2hlZCBpbnRlcmVzdCByYXRlcyB0byBuZWFyIHplcm8gc2luY2UgdGhlIDE4bW9udGggcmVjZXNzaW9uIHRoYXQgYmVnYW4gaW4gRGVjZW1iZXIgMjAwNyBUaGUgRmVkIHNhaWQgaW4gTWFyY2ggaXQgd291bGQgY29udGludWUgYnV5aW5nIDg1IGJpbGxpb24gaW4gc2VjdXJpdGllcyBlYWNoIG1vbnRoIGluIGEgcHJvZ3JhbSBrbm93biBhcyBxdWFudGl0YXRpdmUgZWFzaW5nIHRoYXQgaGFzIGJhbGxvb25lZCBpdHMgYXNzZXRzIGJleW9uZCAzIHRyaWxsaW9uIGFuZCBpcyBhaW1lZCBhdCBrZWVwaW5nIGxvbmd0ZXJtIGJvcnJvd2luZyBjb3N0cyBsb3cgdG8gc3VwcG9ydCBlY29ub21pYyBncm93dGggVGFtZSBJbmZsYXRpb24gQ29uc3VtZXIgcHJpY2VzIHJvc2UganVzdCAxMyBwZXJjZW50IGluIEZlYnJ1YXJ5IGZyb20gYSB5ZWFyIGVhcmxpZXIgYWNjb3JkaW5nIHRvIGFuIGluZmxhdGlvbiBtZWFzdXJlIGZhdm9yZWQgYnkgdGhlIEZlZCBUaGF0IHdhcyBiZWxvdyB0aGUgY2VudHJhbCBiYW5rcyAyIHBlcmNlbnQgdGFyZ2V0IGFuZCBjb21wYXJlcyB3aXRoIG9jY2FzaW9uYWwgYm91dHMgb2YgbW9yZXRoYW4gMTAgcGVyY2VudCBpbmNyZWFzZXMgaW4gdGhlIDE5NzBzIGFuZCBlYXJseSAxOTgwcyBCZXRzIHRoYXQgaW5mbGF0aW9uIHdvdWxkIHBpY2sgdXAgYmVjYXVzZSBvZiBlY29ub21pYyBzdGltdWx1cyBtZWFzdXJlcyBoZWxwZWQgZnVlbCBhIDc4IHBlcmNlbnQganVtcCBpbiBnb2xkIHNpbmNlIERlY2VtYmVyIDIwMDggVGhlIGRvbGxhcnMgcmlzZSB0byBsZXNzIHRoYW4gMSBwZXJjZW50IGJlbG93IGEgb25leWVhciBoaWdoIHNldCBpbiBKdWx5IGFuZCBtb250aGx5IGluY3JlYXNlcyBvZiBhYm91dCAyIHBlcmNlbnQgb3IgbGVzcyBpbiB0aGUgVVMgY29uc3VtZXIgcHJpY2UgaW5kZXggaGF2ZSBjdXJiZWQgZGVtYW5kIGZvciBidWxsaW9uIFNpbmNlIHJlYWNoaW5nIGEgcmVjb3JkIDE5MjM3MCBhbiBvdW5jZSBpbiAyMDExIGdvbGQgcHJpY2VzIGhhdmUgZmFsbGVuIGFuZCBhcmUgbmVhciBhIGJlYXIgbWFya2V0IEdvbGQgZnV0dXJlcyBmb3IgSnVuZSBkZWxpdmVyeSBmZWxsIDEyIHBlcmNlbnQgbGFzdCB3ZWVrIHRvIDE1NzU5MCBhbiBvdW5jZSBvbiB0aGUgQ29tZXggaW4gTmV3IFlvcmsgYWZ0ZXIgdG91Y2hpbmcgMTUzOTQwIEFwcmlsIDQgYSAxMG1vbnRoIGxvdyBmb3IgYSBtb3N0YWN0aXZlIGNvbnRyYWN0IFRleGFzIERlcG9zaXRvcnkgSW4gVGV4YXMgbGF3bWFrZXJzIGFyZSBjb25zaWRlcmluZyBhIG1lYXN1cmUgc3VwcG9ydGVkIGJ5IFJlcHVibGljYW4gR292ZXJub3IgUmljayBQZXJyeSB0byBlc3RhYmxpc2ggdGhlIFRleGFzIEJ1bGxpb24gRGVwb3NpdG9yeSB0byBzdG9yZSBnb2xkIGJhcnMgdmFsdWVkIGF0IGFib3V0IDEgYmlsbGlvbiBhbmQgaGVsZCBpbiBhIE5ldyBZb3JrIGJhbmsgd2FyZWhvdXNlIFRoZSBnb2xkIGlzIG93bmVkIGJ5IHRoZSBVbml2ZXJzaXR5IG9mIFRleGFzIEludmVzdG1lbnQgTWFuYWdlbWVudCBDbyBvciBVdGltY28gd2hpY2ggdG9vayBkZWxpdmVyeSBvZiA2NjQzIGJhcnMgb2YgdGhlIHByZWNpb3VzIG1ldGFsIGluIDIwMTEgYW1pZCBjb25jZXJuIHRoYXQgZGVtYW5kIGZvciBpdCB3b3VsZCBvdmVyd2hlbG0gc3VwcGx5IFRoZSBwcm9wb3NlZCBmYWNpbGl0eSB3b3VsZCBhbHNvIGFjY2VwdCBkZXBvc2l0cyBmcm9tIHRoZSBwdWJsaWMgYW5kIHdvdWxkIHByb3ZpZGUgYSBiYXNpcyBmb3IgYSBwYXltZW50cyBzeXN0ZW0gaW4gdGhlIHN0YXRlIGluIHRoZSBldmVudCBvZiBhIHN5c3RlbWljIGRpc2xvY2F0aW9uIGluIGEgbmF0aW9uYWwgYW5kIGludGVybmF0aW9uYWwgZmluYW5jaWFsIHN5c3RlbSBhY2NvcmRpbmcgdG8gdGhlIG1lYXN1cmUgU2hvdWxkIFRleGFzIHRha2Ugc3VjaCBhIHN0ZXAgaXQgd291bGQgb2ZmZXIgc292ZXJlaWduIGJhY2tpbmcgZm9yIGRlcG9zaXRzIGFuZCBtYWtlIGJ1eWluZyBhbmQgc3RvcmluZyBnb2xkIGVhc2llciBzYWlkIEppbSBSaWNrYXJkcyBzZW5pb3IgbWFuYWdpbmcgZGlyZWN0b3IgYXQgVGFuZ2VudCBDYXBpdGFsIFBhcnRuZXJzIExMQyBpbiBOZXcgWW9yayBhbmQgYXV0aG9yIG9mIEN1cnJlbmN5IFdhcnMgVGhlIE1ha2luZyBvZiB0aGUgTmV4dCBHbG9iYWwgQ3Jpc2lzIEhlIHNhaWQgdGhlIGNvaW4gbWVhc3VyZXMgd2hpbGUgaW1wcmFjdGljYWwgaGF2ZSBzeW1ib2xpYyB2YWx1ZSBXZSBhcmUgc2VlaW5nIGEgZGlzdGluY3QgbW92ZW1lbnQgYmFjayB0byBhIHdvcmxkIHdoZXJlIGdvbGQgaXMgY29uc2lkZXJlZCBtb25leSBSaWNrYXJkcyBzYWlkIEluZmxhdGlvbiBQcm90ZWN0aW9uIFRoZSBtZWFzdXJlcyBnaXZlIHBlb3BsZSB0aGUgb3B0aW9uIG9mIHVzaW5nIG1vbmV5IHRoYXQgd29udCBsb3NlIGFueSBwdXJjaGFzaW5nIHBvd2VyIHRvIGluZmxhdGlvbiBzYWlkIFJpY2ggRGFua2VyIGVjb25vbWljcyBkaXJlY3RvciBhdCB0aGUgQW1lcmljYW4gUHJpbmNpcGxlcyBQcm9qZWN0IFRoZSBXYXNoaW5ndG9uYmFzZWQgcHVibGljcG9saWN5IGdyb3VwIHN1cHBvcnRzIHRoZSBzdGVwcyBhcyB3ZWxsIGFzIGEgcmV0dXJuIHRvIHRoZSBnb2xkIHN0YW5kYXJkIHdoaWNoIHBlZ2dlZCB0aGUgZG9sbGFycyB2YWx1ZSB0byBidWxsaW9uIFByZXNpZGVudCBSaWNoYXJkIE5peG9uIGZvcm1hbGx5IGVuZGVkIHRoZSBjb252ZXJ0aWJpbGl0eSBvZiBVUyBjdXJyZW5jeSB0byB0aGUgcHJlY2lvdXMgbWV0YWwgaW4gMTk3MSBQZW9wbGUgaW4gdGhlc2Ugc3RhdGVzIGZpbmQgdGhlIGlkZWEgb2YgaGF2aW5nIHRoZSBvcHRpb24gdG8gdXNlIGhhcmQgY3VycmVuY2llcyBhcHBlYWxpbmcgb3ZlciB0aGVzZSBwb2xpY2llcyB0aGV5IGhhdmUgbm8gY29udHJvbCBvdmVyIERhbmtlciBzYWlkIFRoZSBVUyBDb25zdGl0dXRpb24gYmFycyBzdGF0ZXMgZnJvbSBjb2luaW5nIG1vbmV5IGFuZCBhbHNvIGZvcmJpZHMgdGhlbSBmcm9tIG1ha2luZyBhbnl0aGluZyBleGNlcHQgZ29sZCBhbmQgc2lsdmVyIGNvaW4gdGVuZGVyIGZvciBwYXlpbmcgZGVidHMgQWR2b2NhdGVzIHNheSB0aGF0IG9wZW5zIHRoZSBkb29yIGZvciB0aGUgc3RhdGVzIHRvIGFsbG93IGJ1bGxpb24gYXMgbGVnYWwgdGVuZGVyIFRoZSBtZWFzdXJlIGJlaW5nIGNvbnNpZGVyZWQgaW4gU291dGggQ2Fyb2xpbmEgd291bGQgcmVjb2duaXplIGZvcmVpZ24gb3IgZG9tZXN0aWMgbWludGVkIGNvaW5zIGFzIGxlZ2FsIHRlbmRlciBVdGFocyBsYXcgYXBwbGllcyBvbmx5IHRvIFVTbWludGVkIGNvaW5zIHdoaWxlIG90aGVyIHN0YXRlcyBhcmUgbGVzcyBjbGVhciBvbiB3aGV0aGVyIHByaXZhdGVseSBwcm9kdWNlZCBjb2lucyBxdWFsaWZ5IEFyaXpvbmEgbGVhdmVzIHRoZSBkb29yIG9wZW4gZm9yIHByaXZhdGUgY29pbnMgaWYgdGhleSBhcmUgZGVjbGFyZWQgbGVnYWwgYnkgYSBub25hcHBlYWxhYmxlIGNvdXJ0IG9yZGVyIFRheCBCcmVha3MgSW4gVXRhaCBhbmQgc29tZSBvdGhlciBzdGF0ZXMgdGhlIG1lYXN1cmVzIGFsc28gZWxpbWluYXRlIHN0YXRlIGNhcGl0YWwgZ2FpbnMgb3Igb3RoZXIgdGF4ZXMgb24gdGhlIGNvaW5zIENyaXRpY3Mgc2F5IHRoZSBzdGF0ZSBtZWFzdXJlcyBhcmUgdW53aWVsZHkgSW4gQXJpem9uYSBTZW5hdG9yIFN0ZXZlIEZhcmxleSBhIERlbW9jcmF0IHVuc3VjY2Vzc2Z1bGx5IG9mZmVyZWQgYW4gYW1lbmRtZW50IHRoYXQgd291bGQgaGF2ZSByZWNvZ25pemVkIGFzIGxlZ2FsIHRlbmRlciBvdGhlciBzdGF0ZSBjb21tb2RpdGllcyBzdWNoIGFzIGNpdHJ1cyBmcnVpdCBhcyB3ZWxsIGFzIHN1bmJlYW1zIFRoZSBhbWVuZG1lbnQgd2FzIGludGVuZGVkIHRvIHJlZmxlY3QgdGhlIGFic3VyZGl0eSBvZiB0aGUgYmlsbCBzYWlkIHRoZSA1MHllYXJvbGQgbGF3bWFrZXIgZnJvbSBUdWNzb24gSXQgaXMgc3QABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMi0wMy0xMlQwMDowMDowMFogVE8gMjAxMy0wMy0yN1Q1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDM2MzE=</field><field name="title" class="java.lang.String">rO0ABXQAMkdvbGQgRVRGIFNhbGVzIE1pbWljIFNvcm9zIGFzIEdvbGRtYW4gTW9yZSBCZWFyaXNo</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT2BBKyAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDRiYTRkMjZlOWU2YzI3OGU=</field><field name="symbol" class="java.lang.String">rO0ABXQADEtPVEFLQkFOSy5OUw==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT2GKwiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECD6gAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECEAAAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECDoMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECDyZmZmZma</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECDwAAAAAAA</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAgyDA==</field><field name="id" class="java.lang.String">rO0ABXQAEDU0OWUwY2U1NmU5OGJiNWE=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFBhAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDk0Mjc=</field><field name="title" class="java.lang.String">rO0ABXQAOkdvbGRtYW4gU2FjaHM6IEdvbGQgQ2FuIFN0aWxsIFN1cmdlIHRvICQxLDk0MCBpbiAxMiBNb250aHM=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATdZKrSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGZjYmU0MDY4ZDQxYTQ2MGM=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lDQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATdeURCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxhR64UeuF</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxhR64UeuF</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxVHrhR64U</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxVHrhR64U</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAu4UeuFHrh</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAABSCA==</field><field name="id" class="java.lang.String">rO0ABXQAEDAwZTFlMjUyMmFjMGYyNmU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mG5tAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDkzMDQ=</field><field name="title" class="java.lang.String">rO0ABXQAN0dvbGQgQnVncyBEZWZ5IEJlYXItTWFya2V0IFRocmVhdCBhcyBTb3JvcyBLZWVwcyBCdXlpbmc=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATfAKeSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDE3OGU4MmU2MDBiODRmNDY=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lDQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATfFUECAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxnCj1wo9c</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxrhR64Ueu</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxjMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAxrhR64Ueu</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAvhR64UeuF</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAA2TA==</field><field name="id" class="java.lang.String">rO0ABXQAEDAzYWViYzlkMDFhNDM3MDQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mIpCAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABTExOTQ5</field><field name="title" class="java.lang.String">rO0ABXQANkRldXRzY2hlIEJhbms6IEdvbGQgTWlnaHQgSGl0ICQyLDAwMCBvbiBNb25leSBQcmludGluZw==</field><field name="content" class="java.lang.String">rO0ABXQO5+KAnFdl4oCZbGwgdGFrZSBvdXQgJDIsMDAwLCB3ZeKAmWxsIGdvIGhpZ2hlcizigJ0gS2V5IHNhaWQgaW4gYW4gaW50ZXJ2aWV3IGluIEhvbmcgS29uZywgd2hlcmUgaGUgYXR0ZW5kZWQgdGhlIExvbmRvbiBCdWxsaW9uIE1hcmtldCBBc3NvY2lhdGlvbuKAmXMgYW5udWFsIGNvbmZlcmVuY2UuIOKAnFRoYXTigJlzIG9uIHRoZSB2aWV3IHRoYXQgdGhleeKAmWxsIGNvbnRpbnVlIHRvIHByaW50IG1vbmV5LuKAnSBCdWxsaW9uIGlzIGhlYWRlZCBmb3IgYSAxMnRoIGFubnVhbCBnYWluIG9uIGNvbmNlcm4gdGhhdCBzdGltdWx1cyBieSBnb3Zlcm5tZW50cyBhbmQgY2VudHJhbCBiYW5rcyBhcm91bmQgdGhlIHdvcmxkIHRvIHByb21vdGUgcmVjb3ZlcnkgZnJvbSB0aGUgZ2xvYmFsIHJlY2Vzc2lvbiBhbmQgY29tYmF0IHRoZSBmYWxsb3V0IGZyb20gRXVyb3Bl4oCZcyBkZWJ0IGNyaXNpcyB3aWxsIGRlYmFzZSBjdXJyZW5jaWVzIGFuZCBzcHVyIGluZmxhdGlvbi4gSG9sZGluZ3MgaW4gZ29sZC1iYWNrZWQgZXhjaGFuZ2UtdHJhZGVkIGZ1bmRzLCBvciBFVEZzLCBleHBhbmRlZCB0byB0aGUgYmlnZ2VzdCBldmVyIGxhc3Qgd2Vlay4KCkVkaXRvcidzIE5vdGU6IEdldCBEYXZpZCBTa2FyaWNhJ3MgR29sZCBTdG9jayBBZHZpc2VyIOKAlCBDbGljayBIZXJlIE5vdyEg4oCcR29sZCBvdXQgb2YgYWxsIHRoZSBtZXRhbHMgd2lsbCBiZSB0aGUgYmVzdCBwZXJmb3JtZXIs4oCdIEplcmVteSBFYXN0LCBnbG9iYWwgaGVhZCBvZiBtZXRhbHMgdHJhZGluZyBhbmQgc3RydWN0dXJlZCBpbnZlbnRvcnkgcHJvZHVjdCBhdCBTdGFuZGFyZCBDaGFydGVyZWQgUGxjLCBzYWlkIGluIGEgTm92LiAxMiBpbnRlcnZpZXcuIOKAnFRoZSBiaWdnZXN0IGRyaXZlciBvZiBnb2xkIHdpbGwgYmUgdGhlIEVURi7igJ0gR29sZCBmb3IgaW1tZWRpYXRlIGRlbGl2ZXJ5LCB3aGljaCByb3NlIHRvIGEgcmVjb3JkICQxLDkyMS4xNSBhbiBvdW5jZSBvbiBTZXB0LiA2LCAyMDExLCB0cmFkZWQgYXQgJDEsNzI4LjM1IGF0IDExOjU3IGEubS4gaW4gU2luZ2Fwb3JlLCAxMSBwZXJjZW50IGhpZ2hlciB0aGlzIHllYXIuIFRoZSBtZXRhbCBhZHZhbmNlZCA3MCBwZXJjZW50IGZyb20gRGVjZW1iZXIgMjAwOCB0aHJvdWdoIEp1bmUgMjAxMSBhcyB0aGUgRmVkZXJhbCBSZXNlcnZlIGJvdWdodCAkMi4zIHRyaWxsaW9uIG9mIGRlYnQgaW4gdHdvIHJvdW5kcyBvZiBzby1jYWxsZWQgcXVhbnRpdGF0aXZlIGVhc2luZy4g4oCYVGFrZXMgVGltZeKAmSDigJxXZeKAmXJlIHN0aWxsIHdvcmtpbmcgb3V0IHRoZSBleGNlc3NlcyB0aGF0IHdl4oCZdmUgc2VlbiBpbiB0aGUgcGFzdCzigJ0gSmFtaWUgU29rYWxza3ksIGNoaWVmIGV4ZWN1dGl2ZSBvZmZpY2VyIG9mIFRvcm9udG8tYmFzZWQgQmFycmljayBHb2xkIENvcnAuLCB0aGUgd29ybGTigJlzIGxhcmdlc3QgcHJvZHVjZXIsIHNhaWQgaW4gYSBOb3YuIDEyIGludGVydmlldy4g4oCcVGhpcyB0YWtlcyB0aW1lLCBhbmQgZWFzeSBtb25ldGFyeSBwb2xpY3kgaXMgZ29pbmcgdG8gaGF2ZSB0byBleGlzdCBmb3Igc29tZSB0aW1lLuKAnSBUaGUgRmVkIHNhaWQgT2N0LiAyNCBpdCB3aWxsIGJ1eSAkNDAgYmlsbGlvbiBvZiBtb3J0Z2FnZSBkZWJ0IGEgbW9udGggYW5kIHByb2JhYmx5IGhvbGQgaW50ZXJlc3QgcmF0ZXMgbmVhciB6ZXJvIHVudGlsIDIwMTUgdG8gYm9vc3QgZWNvbm9taWMgZ3Jvd3RoIGFuZCBjdXQgdGhlIGpvYmxlc3MgcmF0ZS4gVGhlIEJhbmsgb2YgSmFwYW4gZXhwYW5kZWQgYW4gYXNzZXQtcHVyY2hhc2UgcHJvZ3JhbSBvbiBPY3QuIDMwIGZvciB0aGUgc2Vjb25kIHRpbWUgaW4gdHdvIG1vbnRocyBhbmQgdGhlIEV1cm9wZWFuIENlbnRyYWwgQmFuayBoYXMgc2FpZCBpdCBpcyByZWFkeSB0byBidXkgYm9uZHMgb2YgaW5kZWJ0ZWQgbmF0aW9ucy4gQXR0ZW5kZWVzIGF0IHRoZSB0d28tZGF5IExCTUEgZXZlbnQsIHdoaWNoIGVuZGVkIHllc3RlcmRheSwgYmVjb21lIGxlc3MgYnVsbGlzaCBhYm91dCB0aGUgcHJvc3BlY3RzIGZvciBidWxsaW9uIG92ZXIgdGhlIGNvdXJzZSBvZiB0aGUgY29uZmVyZW5jZS4gR29sZCB3aWxsIHByb2JhYmx5IGdhaW4gdG8gJDEsODQ5IGJ5IFNlcHRlbWJlciwgYWNjb3JkaW5nIHRvIHRoZSBhdmVyYWdlIHJlc3BvbnNlIGluIGEgc3VydmV5IG9mIGRlbGVnYXRlcy4gVGhhdOKAmXMgZG93biBmcm9tIGEgZm9yZWNhc3QgZm9yIGEgZ2FpbiB0byAkMSw5MTQsIGFjY29yZGluZyB0byBhIHNlcGFyYXRlIHN1cnZleSBvZiBkZWxlZ2F0ZXMgb24gTm92LiAxMi4gSm9icyBEYXRhIEdvbGQgc2x1bXBlZCB0byBhIG5pbmUtd2VlayBsb3cgb2YgJDEsNjcyLjc1IG9uIE5vdi4gNSBhcyBiZXR0ZXItdGhhbi1mb3JlY2FzdCBVLlMuIGpvYnMgZGF0YSBzdHJlbmd0aGVuZWQgdGhlIGRvbGxhci4gVGhlIERvbGxhciBJbmRleCwgd2hpY2ggbWVhc3VyZXMgdGhlIGdyZWVuYmFjayBhZ2FpbnN0IHNpeCBtYWpvciBjdXJyZW5jaWVzIGluY2x1ZGluZyB0aGUgZXVybywgaGFzIGdhaW5lZCAxLjEgcGVyY2VudCB0aGlzIHllYXIgYXMgRXVyb3Bl4oCZcyBmaXNjYWwgY3Jpc2lzIHdlaWdoZWQgb24gdGhlIGV1cm8uIOKAnFRoZSBvdXRsb29r4oCZcyBwcmV0dHkgcG9zaXRpdmUgZm9yIGdvbGQgYnV0IHBlb3BsZSBzaG91bGRu4oCZdCBleHBlY3QgdG9vIG11Y2gsIHdl4oCZcmUgZGVhbGluZyB3aXRoIGEgbWFya2V0IHRoYXTigJlzIGZ1bmRhbWVudGFsbHkgbG9uZyzigJ0gc2FpZCBEZXV0c2NoZSBCYW5r4oCZcyBLZXksIHJlZmVycmluZyB0byBiZXRzIG9uIGZ1cnRoZXIgZ2FpbnMuIOKAnFRoZSByYWxseeKAmXMgYmVjb21pbmcgbW9yZSBtYXR1cmUu4oCdIEZsb3dzIGludG8gRVRGcyBtYXkgdG90YWwgMjAwIG1ldHJpYyB0b25zIHRoaXMgeWVhciwgZnJvbSAxNzUgdG9ucyBpbiAyMDExLCBCYXJjbGF5cyBQbGMgc2FpZCBpbiBhIE5vdi4gOCByZXBvcnQuIFRoYXTigJlzIDQuNiBwZXJjZW50IG9mIHRvdGFsIHBoeXNpY2FsIHN1cHBseSBvZiA0LDMyMyB0b25zIHRoaXMgeWVhciwgYWNjb3JkaW5nIHRvIEJsb29tYmVyZyBjYWxjdWxhdGlvbnMgYmFzZWQgb24gQmFyY2xheXPigJkgZmlndXJlcy4gQnJhemlsLCBTb3V0aCBLb3JlYSBhbmQgUnVzc2lhIGFyZSBhbW9uZyBjb3VudHJpZXMgdGhhdCBhZGRlZCBnb2xkIHRvIHRoZWlyIHJlc2VydmVzIHRoaXMgeWVhciwgZGF0YSBmcm9tIHRoZSBJbnRlcm5hdGlvbmFsIE1vbmV0YXJ5IEZ1bmQgc2hvdy4gTmF0aW9ucyBib3VnaHQgMjU0LjIgdG9ucyBpbiB0aGUgZmlyc3QgaGFsZiBvZiAyMDEyIGFuZCBob2xkaW5ncyBhcmUgb24gcGFjZSB0byBleGNlZWQgdGhlIDQ1NiB0b25zIGFkZGVkIGluIDIwMTEsIEFzaGlzaCBCaGF0aWEsIG1hbmFnZXIgb2YgZ292ZXJubWVudCBhZmZhaXJzIGF0IHRoZSBwcm9kdWNlci1mdW5kZWQgV29ybGQgR29sZCBDb3VuY2lsLCBzYWlkIE5vdi4gMTEuIOKAnFdpdGggY2VudHJhbCBiYW5rcyBjb250aW51aW5nIHRvIGJ1eSBnb2xkIGFyb3VuZCB0aGUgd29ybGQgYW5kIHdpdGggdGhlIG1hY3JvZWNvbm9taWMgZW52aXJvbm1lbnQgd2hpY2ggaXMgc3RpbGwgdGhlcmUsIHRoZSBkZW1hbmQgc2hvdWxkIHJlbWFpbiB2ZXJ5IHN0cm9uZyzigJ0gc2FpZCBCYXJyaWNr4oCZcyBTb2thbHNreS4g4oCcV2XigJlyZSBub3QgZ29pbmcgdG8gc2VlIHRoZSByZWFjdGlvbiBvbiB0aGUgc3VwcGx5IHNpZGUgdG8gbWFrZSB1cCBmb3IgdGhhdCBpbiB0aGUgaW5kdXN0cnku4oCdCgpFZGl0b3IncyBOb3RlOiBHZXQgRGF2aWQgU2thcmljYSdzIEdvbGQgU3RvY2sgQWR2aXNlciDigJQgQ2xpY2sgSGVyZSBOb3ch</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATr9gK8AeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDEzMmY4ZGEzMTAyNzA3Yjk=</field><field name="symbol" class="java.lang.String">rO0ABXQAA05PVg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATsCpwsAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBRdcKPXCj2</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBRwUeuFHrh</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBRZHrhR64U</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBRnCj1wo9c</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBOXCj1wo9c</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAADTlaA==</field><field name="id" class="java.lang.String">rO0ABXQAEGZjNDQ2MWEyMDhiY2Q3YjA=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mK9HAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDUzMzI=</field><field name="title" class="java.lang.String">rO0ABXQAM0dvbGQncyBTbHVtcCBSYWlzZXMgUXVlc3Rpb25zIEFib3V0IE1ldGFsJ3MgT3V0bG9vaw==</field><field name="content" class="java.lang.String">rO0ABXQTyVRoZSBwcmljZSBvZiBnb2xkLCB3aGljaCBoYXMgY2xpbWJlZCBmb3IgeWVhcnMgbGlrZSBhIGJsb29kIHByZXNzdXJlIHJlYWRpbmcgZm9yIGFueGlvdXMgaW52ZXN0b3JzLCBwbHVuZ2VkIFdlZG5lc2RheSB0byBpdHMgbG93ZXN0IGxldmVsIGluIHRocmVlIG1vbnRocy4gR29sZCBmZWxsIGFsbW9zdCAkNTggdG8gJDEsNjE0IHBlciBvdW5jZS4gSXQgaGFzIGRlY2xpbmVkIDE1IHBlcmNlbnQgc2luY2UgU2VwdGVtYmVyLCB3aGVuIGl0IGhpdCBhIHBlYWsgb2YgJDEsOTA3LiBJdCBoYWQgbW9yZSB0aGFuIGRvdWJsZWQgZnJvbSB0aGUgZmluYW5jaWFsIGNyaXNpcyB0aHJlZSB5ZWFycyBlYXJsaWVyLiBUaGUgZGVjbGluZSBXZWRuZXNkYXkgY2FtZSBvbiBhbiB1Z2x5IGRheSBpbiB0aGUgc3RvY2sgbWFya2V0LiBUaGUgRG93IEpvbmVzIGluZHVzdHJpYWwgYXZlcmFnZSBsb3N0IDEyNSBwb2ludHMg4oCUIGEgZGF5IHRoYXQgbGFzdCB5ZWFyIHByb2JhYmx5IHdvdWxkIGhhdmUgY2F1c2VkIGZlYXJmdWwgaW52ZXN0b3JzIHRvIGJ1eSBnb2xkIGFzIGEgcHJvdGVjdGl2ZSBpbnZlc3RtZW50LiAiSXQncyBkaWZmaWN1bHQgdG8gZm9yZWNhc3QsIGJ1dCBJIHRoaW5rIHRoZSBnb2xkIGJ1bGwgbWFya2V0IGlzIG92ZXIsIiBzYWlkIENldGluIENpbmVyLCBhIHByb2Zlc3NvciBvZiBmaW5hbmNlIGF0IHRoZSBVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLVdpbG1pbmd0b24uIEhlIGxpa2VuZWQgdGhlIHN1cmdlIGluIGdvbGQgdG8gZG90LWNvbSBzdG9ja3MgYmVmb3JlIHRoZXkgY29sbGFwc2VkLiBTb21lIGludmVzdG9ycyBidXkgZ29sZCBhcyBhIGhlZGdlIGFnYWluc3QgaW5mbGF0aW9uLCBhbmQgbWludXRlcyBmcm9tIGEgRmVkZXJhbCBSZXNlcnZlIG1lZXRpbmcgdGhhdCBjYW1lIG91dCBUdWVzZGF5IGFmdGVybm9vbiBzdWdnZXN0ZWQgdGhhdCB0aGUgY2VudHJhbCBiYW5rIGJlbGlldmVzIGluZmxhdGlvbiBpcyB1bmRlciBjb250cm9sLiBHb2xkJ3MgYXR0cmFjdGlvbiBhcyBhbiBhc3NldCBvZiByZWZ1Z2UgZHVyaW5nIGNyaXNlcyBhbHNvIHNlZW1zIHRvIGhhdmUgZGltaW5pc2hlZC4gVGhlIGVjb25vbXkgaGFzIHBpY2tlZCB1cCwgYW5kIHdvcnN0LWNhc2Ugc2NlbmFyaW9zIGluIHRoZSBVbml0ZWQgU3RhdGVzIGFuZCBFdXJvcGUgaGF2ZSBmYWRlZC4gIkZlYXIgaGFzIGJlZW4gZ29sZCdzIGJlc3QgZnJpZW5kLCBhbmQgc28gdG8gdGhlIGV4dGVudCB0aGF0IGZlYXIgaXMgZGlzc2lwYXRpbmcsIGdvbGQgc2hvdWxkIGZhbGwsIiBzYWlkIEppbSBQYXVsc2VuLCBjaGllZiBpbnZlc3RtZW50IHN0cmF0ZWdpc3QgYXQgV2VsbHMgQ2FwaXRhbCBNYW5hZ2VtZW50LiAiV2UgbWlnaHQgbG9vayBiYWNrIGF0IHRoZXNlIEZlZCBtaW51dGVzIGFzIHRoZSBsaW5lIGluIHRoZSBzYW5kLiIgR29sZCBoYXMgYmVlbiBoaXQgaW4gcmVjZW50IHdlZWtzIGJ5IGEgc3RyaWtlIGJ5IGdvbGQgc2VsbGVycyBpbiBJbmRpYSwgdGhlIHdvcmxkJ3MgbGFyZ2VzdCBidXllciBvZiBwaHlzaWNhbCBnb2xkLiBBbm90aGVyIGJlYXJpc2ggc2lnbiB3YXMgYSBzdXJnZSBXZWRuZXNkYXkgaW4gdGhlIGRvbGxhciwgd2hpY2ggdGVuZHMgdG8gcmlzZSB3aGVuIGdvbGQgZmFsbHMuIEdvbGQgZmV0Y2hlZCBvbmx5ICQzMDAgdG8gJDQwMCBhbiBvdW5jZSBkdXJpbmcgdGhlIDE5OTBzIGJ1dCBjbGltYmVkIHN0ZWFkaWx5IGxhc3QgZGVjYWRlLiBJdCB0b29rIG9mZiBpbiBsYXRlIDIwMDgsIHdoZW4gcHJpY2VzIGZvciBzdG9ja3MgYW5kIGNvcnBvcmF0ZSBib25kcyBwbHVuZ2VkLCB3aXBpbmcgb3V0IHllYXJzIG9mIHNhdmluZ3MgYW5kIGV2ZW4gbW9uZXkgbWFya2V0IGZ1bmRzIGxvb2tlZCBzdXNwZWN0LiBJbnZlc3RvcnMgYmlkIHVwIHByaWNlcyBmb3IgdGhlIHNhZmVzdCBvZiBhc3NldHMsIGxpa2UgVS5TLiBUcmVhc3VyeSBib25kcy4gT3RoZXJzIHR1cm5lZCB0byBnb2xkLiAiRHVyaW5nIG91ciBib3V0IHdpdGggQXJtYWdlZGRvbiwgcGVvcGxlIHJhbiB0byBpdCBmb3Igc2FmZXR5LCIgc2FpZCBBYnJhaGFtIEJhaWxpbiwgYSBjb21tb2RpdHkgYW5hbHlzdCBhdCBNb3JuaW5nc3Rhci4gIkl0IG1pZ2h0IHNvdW5kIHNpbGx5IG5vdywgYnV0IHRoYXQncyB3aGVyZSBpdCBzdGFydGVkLiIgRGVtYW5kIGZvciBnb2xkIHN1cmdlZCBhcyB0aGUgRmVkZXJhbCBSZXNlcnZlIGJvdWdodCBib25kcyB0byBwdXNoIGRvd24gYm9ycm93aW5nIGNvc3RzIGFuZCBzdGltdWxhdGUgdGhlIGVjb25vbXksIGEgbW92ZSBrbm93biBhcyBxdWFudGl0YXRpdmUgZWFzaW5nLiBUaGUgRmVkJ3MgZWZmb3J0cyB0byBwdW1wIG1vbmV5IGludG8gdGhlIGJhbmtpbmcgc3lzdGVtIGFuZCBhdmVydCBhIGRlZXAgcmVjZXNzaW9uIGxlZCB0byBmZWFycyBvZiBydW5hd2F5IGluZmxhdGlvbiwgYSBjb25jZXJuIHNoYXJlZCBieSBib3RoIHRoZSB0ZWEgcGFydHkgYW5kIGJpZy1zaG90IGludmVzdG9ycy4gQnV5aW5nIGdvbGQgc29vbiBiZWNhbWUgYSBwb2xpdGljYWwgc3RhdGVtZW50LiBGb3IgdGhvc2Ugd2hvIGRpZG4ndCB0cnVzdCBmaW5hbmNpYWwgaW5zdGl0dXRpb25zIG9yIHdlcmUgd2FyeSBvZiB0aGUgZ292ZXJubWVudCwgaXQgd2FzIHRoZSBpbnZlc3RtZW50IG9mIGNob2ljZS4gVGhlIHRlbGV2aXNpb24gcGVyc29uYWxpdHkgR2xlbm4gQmVjayBhZHZpc2VkIHZpZXdlcnMgdG8gc3RvY2sgdXAgb24gZ29sZCBiYXJzLiAiR29sZCBiZWNhbWUgYSBzeW1ib2wgb2YgeW91ciBwb2xpdGljYWwgbGVhbmluZ3MsIiBCYWlsaW4gc2FpZC4gIkl0IGJlY2FtZSBhIHdheSB0byBzcGVjdWxhdGUgb24gdGhlIHNvbHZlbmN5IG9mIHRoZSBlY29ub215LiIgT3IgcGVyaGFwcyB0byBzcGVjdWxhdGUgdGhhdCB0aGUgcHJpY2Ugd291bGQgY29udGludWUgdG8gcmlzZSwgd2hhdGV2ZXIgdGhlIHJlYXNvbi4gU29tZSBhbmFseXN0cywgbGlrZSBDaW5lciBhbmQgV2VsbHMgRmFyZ28ncyBQYXVsc2VuLCBzYWlkIHRoYXQgYXMgdGhlIHByaWNlIGNsaW1iZWQgZXZlciBoaWdoZXIsIGV2ZXJ5ZGF5IGludmVzdG9ycyBtYXkgaGF2ZSBiZWVuIHRyeWluZyB0byBjYXRjaCB0aGUgd2F2ZS4gR29sZCB3YXMgbmFtZWQgdGhlICJiZXN0IGludmVzdG1lbnQiIGluIENOQkMncyBxdWFydGVybHkgc3VydmV5IG9mIGludmVzdG9ycyByZWxlYXNlZCBsYXN0IG1vbnRoLCB0b3BwaW5nIHJlYWwgZXN0YXRlIGFuZCBzdG9ja3MgYnkgYSB3aWRlIG1hcmdpbi4gTmVhcmx5IGhhbGYgb2YgdGhvc2Ugc3VydmV5ZWQgY29uc2lkZXJlZCBpdCBhIGJhZCB0aW1lIHRvIGJ1eSBzdG9ja3MuIE9uZSBwb3B1bGFyIHZlaGljbGUgZm9yIGJ1eWluZyBnb2xkLCB0aGUgU1BEUiBHb2xkIFRydXN0LCBhIGZ1bmQgdGhhdCB0cmFkZXMgb24gdGhlIG9wZW4gbWFya2V0IGxpa2UgYSBzdG9jaywgaGFzIGF0dHJhY3RlZCBodW5kcmVkcyBvZiBtaWxsaW9ucyBvZiBkb2xsYXJzIG9mIGludmVzdG9yIG1vbmV5IGVhY2ggbW9udGggc2luY2UgaXRzIGxhdW5jaCBpbiAyMDA0LiBJdCBub3cgaG9sZHMgJDY3LjMgYmlsbGlvbiB3b3J0aCBvZiBnb2xkLiBUaGF0IG1ha2VzIGl0IHRoZSBsYXJnZXN0IEVURiBzYXZlIGZvciB0aGUgU1BEUiBTJlAgNTAwLCB3aGljaCB0cmFja3Mgc3RvY2tzLCBhY2NvcmRpbmcgdG8gTW9ybmluZ3N0YXIncyBCYWlsaW4uIENpbmVyIG5vdGVkIHRoYXQgdGhlIHByaWNlIG9mIGdvbGQgZHJvcHBlZCBXZWRuZXNkYXkgZGVzcGl0ZSBuZXdzIHRoYXQgU3BhaW4gaGFkIHRvIG9mZmVyIHVuZXhwZWN0ZWRseSBoaWdoIGludGVyZXN0IHJhdGVzIHRvIGF0dHJhY3QgaW52ZXN0b3JzIHRvIGJ1eSBuZXcgZ292ZXJubWVudCBib25kcy4gVGhhdCBzdWdnZXN0ZWQgdGhhdCBhIHNvbHV0aW9uIHRvIHRoZSBFdXJvcGVhbiBkZWJ0IHRyb3VibGVzIGlzIGZhciBmcm9tIG92ZXIg4oCUIG5vcm1hbGx5IGEgdHJpZ2dlciBmb3IgYnV5aW5nIGdvbGQsIG5vdCBzZWxsaW5nIGl0LiAiSXQncyBwcmV0dHkgb2J2aW91cyB0aGF0IGdvbGQncyBjaGFyYWN0ZXIgaGFzIGNvbXBsZXRlbHkgY2hhbmdlZCwiIENpbmVyIHNhaWQuICJJZiBpdCB3YXMgcmVhbCBzYWZlLWhhdmVuIGFzc2V0LCB5b3Ugd291bGQgaGF2ZSBleHBlY3RlZCBpbnZlc3RvcnMgdG8gZmxvY2sgdG8gZ29sZC4iIEJ1bGxzIHBvaW50ZWQgb3V0IHRoYXQgZ29sZCdzIHBvcHVsYXJpdHkgcmVmbGVjdHMgYSB3aWRlc3ByZWFkIHNrZXB0aWNpc20gb2YgdGhlIGZpbmFuY2lhbCBzeXN0ZW0gYW5kIG9mIG5hdGlvbmFsIGN1cnJlbmNpZXMg4oCUIGFuZCB0aGF0IGludmVzdG9ycyBhcmUgZm9vbHMgdG8gZmVlbCBjb25maWRlbnQgYWJvdXQgdGhlbS4gSm9obiBNYW5sZXksIGNoaWVmIGVxdWl0eSBzdHJhdGVnaXN0IGZvciBXZWxscyBGYXJnbyBBZHZhbnRhZ2UgRnVuZHMsIHNhaWQgdGhhdCBnb2xkJ3Mgcm9sZSBhcyBhIHNvcnQgb2YgZm91cnRoIGN1cnJlbmN5IHRvIHRoZSB0aHJlZSBiaWcgb25lcyDigJQgdGhlIGRvbGxhciwgZXVybyBhbmQgeWVuIOKAlCBpcyB1bmxpa2VseSB0byBkaW1pbmlzaCBldmVuIHdpdGggdGhvc2UgY3VycmVuY2llcycgdHJvdWJsZXMuIEhlIHBvaW50ZWQgdG8gdGhlIGxhcmdlIFUuUy4gZGVidCwgSmFwYW4ncyBhZ2luZyBwb3B1bGF0aW9uIGFuZCBkaXNzZW50IGFtb25nIEV1cm9wZWFuIGNvdW50cmllcyBhYm91dCBob3cgdG8gc29sdmUgdGhlIGRlYnQgcHJvYmxlbSB0aGVyZS4gTmljaG9sYXMgQ29sYXMsIGNoaWVmIG1hcmtldCBzdHJhdGVnaXN0IGF0IENvbnZlcmdFeCBHcm91cCwgc2FpZCBoZSB0aGlua3MgZ29sZCdzIHBvcHVsYXJpdHkgcmVmbGVjdHMgdGhlIGFueGlldHkgb2Ygb3VyIGFnZS4gVGhlIHByaWNlIG1heSBjaGFuZ2UsIGhlIHNhaWQsIGJ1dCBhbiBvdW5jZSBvZiBnb2xkIGlzIGFsd2F5cyBib3VuZCB0byBiZSB3b3J0aCBzb21ldGhpbmcuIE9sZCBzdG9jayBjZXJ0aWZpY2F0ZXMsIGhlIHNhaWQsIG1heSB3aW5kIHVwIHdvcnRoIG5vIG1vcmUgdGhhbiB0b2lsZXQgcGFwZXIuICJUaGUgZ29sZCBydXNoIGlzbid0IG92ZXIsIiBoZSBzYWlkLiAiSXQncyBqdXN0IG9uIHBhdXNlLiI=</field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATZ7uUCAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDFhMDNmYTY2OWM5OTQzMzM=</field><field name="symbol" class="java.lang.String">rO0ABXQABEdPTEQ=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAATaA35yAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUiFHrhR64</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUqj1wo9cK</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUSPXCj1wp</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUXCj1wo9c</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBT1HrhR64U</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAA7riA==</field><field name="id" class="java.lang.String">rO0ABXQAEDA5Y2UzZTY0OTZiOTNkZGU=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mGBbAAAQ==</field></document></documents><date>2015-05-07T12:05:53-0500</date></cacheEntry>
<?xml version='1.0' encoding='UTF-8'?>
<cacheEntry><query>rO0ABXNyACZvcmcuYXBhY2hlLnNvbHIuY2xpZW50LnNvbHJqLlNvbHJRdWVyefuCsjxJvfWvAgABTAALc29ydENsYXVzZXN0ABBMamF2YS91dGlsL0xpc3Q7eHIAMm9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLk1vZGlmaWFibGVTb2xyUGFyYW1zpzUAMz0+n8ECAAFMAAR2YWxzdAAPTGphdmEvdXRpbC9NYXA7eHIAKG9yZy5hcGFjaGUuc29sci5jb21tb24ucGFyYW1zLlNvbHJQYXJhbXMbXrzOZIuMNQIAAHhwc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAAFdAABcXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0CsROb3J3YXlzIGRlY2lzaW9uIHRvIGhhdmUgaXRzIDg5MCBiaWxsaW9uIHNvdmVyZWlnbiB3ZWFsdGggZnVuZCBib29zdCBpbnZlc3RtZW50cyBpbiBmcm9udGllciBtYXJrZXRzIHdpbGwgcHJvYmFibHkgYXR0cmFjdCBtb3JlIGluc3RpdHV0aW9uYWwgaW52ZXN0b3JzIHRvIHRoZSBhc3NldCBjbGFzcyBhY2NvcmRpbmcgdG8gSFNCQyBIb2xkaW5ncyBQbGMgVGhlIHNvdmVyZWlnbiB3ZWFsdGggZnVuZCB3aGljaCBpcyB0aGUgd29ybGRzIGxhcmdlc3Qgc2FpZCBpbiBhIHN0cmF0ZWd5IHJlcG9ydCBNb25kYXkgdGhhdCBpdCB3aWxsIHRhcmdldCBtb3JlIGZyb250aWVyIG1hcmtldHMgYW5kIGluY2x1ZGUgYWRkaXRpb25hbCBjdXJyZW5jaWVzIHRvIGdlbmVyYXRlIGhpZ2hlciByZXR1cm5zIE1TQ0kgSW5jcyBnYXVnZSBvZiBzdG9ja3MgaW4gdGhlIHNtYWxsZXIgZGV2ZWxvcGluZyBuYXRpb25zIGhhcyBnYWluZWQgMTYgcGVyY2VudCB0aGlzIHllYXIgbW9yZSB0aGFuIHRyaXBsZSB0aGUgNDUgcGVyY2VudCByZXR1cm4gb24gaXRzIGVtZXJnaW5nIG1hcmtldHMgSW5kZXggSW52ZXN0b3JzIGhhdmUgc291Z2h0IHN0b2NrcyBpbiB0aGUgbGVhc3RkZXZlbG9wZWQgbWFya2V0cyBhcyB0aGUgRmVkZXJhbCBSZXNlcnZlIHBsZWRnZXMgdG8ga2VlcCBVUyBpbnRlcmVzdCByYXRlcyBsb3cgYW5kIHRoZSBsYXJnZXN0IGVtZXJnaW5nIGVjb25vbWllcyBzcHV0dGVyIFdoaWxlIGV4cGFuc2lvbiBpbiBCcmF6aWwgUnVzc2lhIEluZGlhIGFuZCBDaGluYSBsZWQgdGhlIHdvcmxkIG91dCBvZiB0aGUgMjAwOCBmaW5hbmNpYWwgY3Jpc2lzIEJyYXppbCBoYWQgaXRzIGNyZWRpdHJhdGluZyBjdXQgZm9yIHRoZSBmaXJzdCB0aW1lIGluIGEgZGVjYWRlIHRoaXMgeWVhciBhbmQgZ3Jvd3RoIGluIFJ1c3NpYSBoYXMgYmVlbiBzcXVlbGNoZWQgYnkgaW50ZXJuYXRpb25hbCBzYW5jdGlvbnMgYW5kIHNsdW1waW5nIGludmVzdG1lbnQgTW9yZSBpbnZlc3RtZW50IGxpa2UgdGhpcyBmcm9tIGxhcmdlIGdsb2JhbCBpbnN0aXR1dGlvbnMgc2hvdWxkIGhlbHAgZGVlcGVuIHRoZSBmcm9udGllciBzdG9jayBtYXJrZXRzIGFuZCBlbmNvdXJhZ2UgbmV3IGxvY2FsIGJ1c2luZXNzZXMgdG8gbGlzdCB3aGljaCBpbiB0dXJuIGNhbiBicm9hZGVuIHRoZSBpbnZlc3RhYmxlIG1hcmtldCBBbmRyZXcgQnJ1ZGVuZWxsIGEgTG9uZG9uYmFzZWQgbW9uZXkgbWFuYWdlciBhdCBIU0JDIEdsb2JhbCBBc3NldCBNYW5hZ2VtZW50IHdoaWNoIG92ZXJzZWVzIGFib3V0IDU1MCBtaWxsaW9uIGluIGZyb250aWVyIGFzc2V0cyBzYWlkIGJ5IGVtYWlsIE1vbmRheSBGcm9udGllciBlY29ub21pZXMgYXJlIGRpdmVyc2UgYW5kIGxlc3MgY29ycmVsYXRlZCB0byB0aGUgd29ybGRzIGZpbmFuY2lhbCBoZWFsdGggdGhhbiBlbWVyZ2luZyBtYXJrZXRzIGFuZCBtb3N0IGFyZSBzdGlsbCBpbiB0aGUgdXB3YXJkcyBwaGFzZSBvZiB0aGVpciBlY29ub21pYyBjeWNsZXMgaGUgc2FpZCAgICAgICAgICAgICAgICAgICAgICAgICBMZXNzIENvd2JveWlzaCBUaGUgc21hbGxlc3QgZGV2ZWxvcGluZyBuYXRpb25zIGhhdmUgZXF1aXR5IG1hcmtldHMgdGhhdCBhcmUgbGVzcyBlc3RhYmxpc2hlZCB0aGFuIGVtZXJnaW5nIG1hcmtldHMgVGhlIGNvdW50cmllcyBNU0NJIGxpc3RzIGluIGl0cyBtZWFzdXJlIGluY2x1ZGUgQXJnZW50aW5hIFVrcmFpbmUgYW5kIEthemFraHN0YW4gTm9yd2F5cyBmdW5kIHdoaWNoIG93bnMgYWJvdXQgMTMgcGVyY2VudCBvZiB0aGUgd29ybGRzIHN0b2NrcyBoYXMgZmFpbGVkIHRvIG1lZXQgYSA0IHBlcmNlbnQgcmVhbCByZXR1cm4gdGFyZ2V0IHNpbmNlIGl0IHN0YXJ0ZWQgaW52ZXN0aW5nIGluIHRoZSBsYXRlIDE5OTBzIE5vcmdlcyBCYW5rIEdvdmVybm9yIE9leXN0ZWluIE9sc2VuIHdobyBvdmVyc2VlcyB0aGUgZnVuZCBoYXMgc2FpZCBpdCBtdXN0IHRha2Ugb24gbW9yZSByaXNrIHRvIGluY3JlYXNlIHJldHVybnMgVGhlIGZ1bmQgaGFzIHlldCB0byBpbnZlc3QgaW4gbWFueSBjb3VudHJpZXMgaW4gQWZyaWNhIGFuZCB0aGUgTWlkZGxlIEVhc3QgWW5ndmUgU2x5bmdzdGFkIGNoaWVmIGV4ZWN1dGl2ZSBvZmZpY2VyIG9mIHRoZSBmdW5kIHNhaWQgaW4gYSB0ZWxlcGhvbmUgaW50ZXJ2aWV3IHllc3RlcmRheSBNYXJrIE1vYml1cyB3aG8gb3ZlcnNlZXMgNTAgYmlsbGlvbiBpbiBhc3NldHMgYXMgY2hhaXJtYW4gb2YgVGVtcGxldG9uIEVtZXJnaW5nIE1hcmtldHMgR3JvdXAgc2FpZCBsYXN0IG1vbnRoIHRoYXQgQWZyaWNhIGlzIGxlYWRpbmcgZ3Jvd3RoIGFtb25nIGZyb250aWVyIG1hcmtldHMgTm9yd2F5cyBwaXZvdCB0byBmcm9udGllciBlY29ub21pZXMgaXMgYSBzaWduIHRoZSBhc3NldCBjbGFzcyBpcyBnYWluaW5nIG1vcmUgY3JlZGliaWxpdHkgYW1vbmcgaW52ZXN0b3JzIHNhaWQgTW9oYW1tZWQgSGFuaWYgdGhlIGNoaWVmIGludmVzdG1lbnQgb2ZmaWNlciBhdCBMb25kb25iYXNlZCBJbnNwYXJvIEFzc2V0IE1hbmFnZW1lbnQgd2hpY2ggb3ZlcnNlZXMgYWJvdXQgMTcwIG1pbGxpb24gVGhleSBhcmUgc21hcnQgaW52ZXN0b3JzIGFuZCBsb25ndGVybSBpbnZlc3RvcnMgYXMgd2VsbCBoZSBzYWlkIFRoZXkgc2VlIGEgbG9uZ3Rlcm0gdmFsdWUgc3RvcnkgSXRzIGEgc2lnbiBvZiB0aGUgaW52ZXN0b3IgYmFzZSBtYXR1cmluZyB3aGljaCBpcyByZWZsZWN0aXZlIG9mIHRob3NlIG1hcmtldHMgYmVjb21pbmcgbGVzcyBmcm9udGllciBsZXNzIGNvd2JveWlzaHQABHJvd3N1cQB+AAoAAAABdAABNXQABXN0YXJ0dXEAfgAKAAAAAXQAATB0AAJmbHVxAH4ACgAAAAF0AG9hcnRpY2xlSWQsdGl0bGUsY29udGVudCxkYXRlLHN0b2NrSGlzdG9yeUlkLHN5bWJvbCxoaXN0b3J5RGF0ZSxvcGVuLGhpZ2gsbG93LGNsb3NlLGFkakNsb3NlLHZvbHVtZSxpZCxfdmVyc2lvbl90AAJmcXVxAH4ACgAAAAF0ADpoaXN0b3J5RGF0ZTpbMjAxMy0wMy0yN1QwMDowMDowMFogVE8gMjAxMy0xMi0wM1Q1OTo1OTo1OVpdeABw</query><documents><document><field name="articleId" class="java.lang.String">rO0ABXQABDMxOTg=</field><field name="title" class="java.lang.String">rO0ABXQAOUVtZXJnaW5nLU1hcmtldCBJbnZlc3RvcnMgR2V0IFBpY2t5IFdpdGggRmVkIFNldCB0byBUYXBlcg==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUELY+yAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDI4Mzk0ZDdmMzY4ZThmMWQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lDQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUEQikiAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwZmZmZmZm</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwbhR64Ueu</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwTMzMzMzN</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAwUeuFHrhS</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAulHrhR64U</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAyAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGU4YWJiZGU0MDBkOWEwZWQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mEY3AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDg3MTg=</field><field name="title" class="java.lang.String">rO0ABXQAKkdsb2JhbCBTdG9ja3MgQ2hhbGsgVXAgQmVzdCBSdW4gU2luY2UgMjAwOQ==</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKsvfcAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEDU5NjVkYTg2NWRhZDQzOGQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAA05PVg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUKx5FMAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUb1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUoeuFHrhS</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUQUeuFHrh</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBUbCj1wo9c</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEBRzCj1wo9c</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAACqmwA==</field><field name="id" class="java.lang.String">rO0ABXQAEGNiOTU3OTQwMDA1ZGE3YWM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mIrhAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDcxNjE=</field><field name="title" class="java.lang.String">rO0ABXQAN0phcGFuJ3MgU2hvY2sgVGhlcmFweSBSaXNrcyBEaXN0dXJiaW5nIEVtZXJnaW5nIE1hcmtldHM=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4q9oiAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGUxZWQ1YzI3ZTM5YjExNWQ=</field><field name="symbol" class="java.lang.String">rO0ABXQAA0lQQg==</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAT4wHOSAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7HCj1wo9c</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7HCj1wo9c</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7HCj1wo9c</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA7HCj1wo9c</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEA4LhR64Ueu</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAA==</field><field name="id" class="java.lang.String">rO0ABXQAEGJkNTRhZjE5ZTVhMWRmMmM=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mHUiAAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDYyOTQ=</field><field name="title" class="java.lang.String">rO0ABXQAQEFzaWEncyAnTWlyYWNsZScgU2hvd3MgU2lnbnMgb2YgV2VhciBhcyBJbnZlc3RvcnMgTXVsbCBFbmQgb2YgUUU=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUCaGASAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGRmNWViNWU0MWYxZDk1YWE=</field><field name="symbol" class="java.lang.String">rO0ABXQAB0NQSU4uSks=</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUCfPmCAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECsIAAAAAAA</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECtfgAAAAAA</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECrJgAAAAAA</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECstgAAAAAA</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cECsXFHrhR64</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAKrC2A==</field><field name="id" class="java.lang.String">rO0ABXQAEGM4MzUzOTM1OGIwMjVlNzQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mFB6AAAA==</field></document><document><field name="articleId" class="java.lang.String">rO0ABXQABDM1MDI=</field><field name="title" class="java.lang.String">rO0ABXQAQEdvbGQgQmVmdWRkbGVzIEJlcm5hbmtlIGFzIENlbnRyYWwgQmFua3MnIExvc3NlcyBhdCAkNTQ1IEJpbGxpb24=</field><field name="content" class="java.lang.String"></field><field name="date" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGRSUSAeA==</field><field name="stockHistoryId" class="java.lang.String">rO0ABXQAEGE1YTE1MDQyODBhOTc5NGQ=</field><field name="symbol" class="java.lang.String">rO0ABXQABVNDR0xZ</field><field name="historyDate" class="java.util.Date">rO0ABXNyAA5qYXZhLnV0aWwuRGF0ZWhqgQFLWXQZAwAAeHB3CAAAAUGWb6CAeA==</field><field name="open" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlD1wo9cKP</field><field name="high" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAlGZmZmZma</field><field name="low" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkvXCj1wo9</field><field name="close" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkvXCj1wo9</field><field name="adjClose" class="java.lang.Double">rO0ABXNyABBqYXZhLmxhbmcuRG91YmxlgLPCSilr+wQCAAFEAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cEAkPXCj1wo9</field><field name="volume" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAHbyA==</field><field name="id" class="java.lang.String">rO0ABXQAEDNkZTU4YjQzMzA1NTFmZDQ=</field><field name="_version_" class="java.lang.Long">rO0ABXNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAUz4mITOAAAA==</field></document></documents><date>2015-05-07T12:12:06-0500</date></cacheEntry>